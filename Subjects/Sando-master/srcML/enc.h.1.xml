<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\enc.h" pos:tabs="8" pos:line="1" pos:column="1">

<comment type="block" pos:line="3" pos:column="1">/* this ALWAYS GENERATED file contains the definitions for the interfaces */</comment>


 <comment type="block" pos:line="6" pos:column="2">/* File created by MIDL compiler version 7.00.0499 */</comment>
<comment type="block" pos:line="7" pos:column="1">/* Compiler settings for enc.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/</comment>
<comment type="line" pos:line="15" pos:column="1">//@@MIDL_FILE_HEADING(  )</comment>

<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma</cpp:directive> warning( disable: 4049 )</cpp:pragma>  <comment type="block" pos:line="17" pos:column="35">/* more than 64k source lines */</comment>


<comment type="block" pos:line="20" pos:column="1">/* verify that the &lt;rpcndr.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef</cpp:directive> <name pos:line="21" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:macro> <cpp:value pos:line="22" pos:column="39">475</cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="25" pos:column="1">/* verify that the &lt;rpcsal.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifndef</cpp:directive> <name pos:line="26" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="27" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:macro> <cpp:value pos:line="27" pos:column="39">100</cpp:value></cpp:define>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"rpc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"rpcndr.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">__RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:error pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">error</cpp:directive> this stub requires an updated version of &lt;rpcndr.h&gt;</cpp:error>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">// __RPCNDR_H_VERSION__</comment>

<cpp:ifndef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifndef</cpp:directive> <name pos:line="37" pos:column="9">COM_NO_WINDOWS_H</name></cpp:ifndef>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="38" pos:column="10">"windows.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="39" pos:column="10">"ole2.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="40" pos:column="8">/*COM_NO_WINDOWS_H*/</comment>

<cpp:ifndef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifndef</cpp:directive> <name pos:line="42" pos:column="9">__enc_h__</name></cpp:ifndef>
<cpp:define pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="43" pos:column="9">__enc_h__</name></cpp:macro></cpp:define>

<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if</cpp:directive> <expr><call><name pos:line="45" pos:column="5">defined</name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">_MSC_VER</name></expr></argument>)</argument_list></call> <op:operator pos:line="45" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="45" pos:column="26">(</op:operator><name pos:line="45" pos:column="27">_MSC_VER</name> <op:operator pos:line="45" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="45" pos:column="39">1020</lit:literal><op:operator pos:line="45" pos:column="43">)</op:operator></expr></cpp:if>
<cpp:pragma pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="49" pos:column="1">/* Forward Declarations */</comment> 

<cpp:ifndef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifndef</cpp:directive> <name pos:line="51" pos:column="9">__IDebugENC_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="52" pos:column="9">__IDebugENC_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="53" pos:column="1">typedef <type><name pos:line="53" pos:column="9">interface</name> <name pos:line="53" pos:column="19">IDebugENC</name></type> <name pos:line="53" pos:column="29">IDebugENC</name>;</typedef>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="54" pos:column="9">/* __IDebugENC_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifndef</cpp:directive> <name pos:line="57" pos:column="9">__IDebugENC2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="58" pos:column="9">__IDebugENC2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="59" pos:column="1">typedef <type><name pos:line="59" pos:column="9">interface</name> <name pos:line="59" pos:column="19">IDebugENC2</name></type> <name pos:line="59" pos:column="30">IDebugENC2</name>;</typedef>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="60" pos:column="9">/* __IDebugENC2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">ifndef</cpp:directive> <name pos:line="63" pos:column="9">__IDebugENCLineMap_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="64" pos:column="9">__IDebugENCLineMap_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="65" pos:column="1">typedef <type><name pos:line="65" pos:column="9">interface</name> <name pos:line="65" pos:column="19">IDebugENCLineMap</name></type> <name pos:line="65" pos:column="36">IDebugENCLineMap</name>;</typedef>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="66" pos:column="9">/* __IDebugENCLineMap_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">ifndef</cpp:directive> <name pos:line="69" pos:column="9">__IDebugENCInfo2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="70" pos:column="9">__IDebugENCInfo2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="71" pos:column="1">typedef <type><name pos:line="71" pos:column="9">interface</name> <name pos:line="71" pos:column="19">IDebugENCInfo2</name></type> <name pos:line="71" pos:column="34">IDebugENCInfo2</name>;</typedef>
<cpp:endif pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="72" pos:column="9">/* __IDebugENCInfo2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">ifndef</cpp:directive> <name pos:line="75" pos:column="9">__IEnumDebugENCInfo2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="76" pos:column="9">__IEnumDebugENCInfo2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="77" pos:column="1">typedef <type><name pos:line="77" pos:column="9">interface</name> <name pos:line="77" pos:column="19">IEnumDebugENCInfo2</name></type> <name pos:line="77" pos:column="38">IEnumDebugENCInfo2</name>;</typedef>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="78" pos:column="9">/* __IEnumDebugENCInfo2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">ifndef</cpp:directive> <name pos:line="81" pos:column="9">__IDebugENCRelinkInfo2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="82" pos:column="9">__IDebugENCRelinkInfo2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="83" pos:column="1">typedef <type><name pos:line="83" pos:column="9">interface</name> <name pos:line="83" pos:column="19">IDebugENCRelinkInfo2</name></type> <name pos:line="83" pos:column="40">IDebugENCRelinkInfo2</name>;</typedef>
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="84" pos:column="9">/* __IDebugENCRelinkInfo2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">ifndef</cpp:directive> <name pos:line="87" pos:column="9">__IEnumDebugENCRelinkInfo2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="88" pos:column="9">__IEnumDebugENCRelinkInfo2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="89" pos:column="1">typedef <type><name pos:line="89" pos:column="9">interface</name> <name pos:line="89" pos:column="19">IEnumDebugENCRelinkInfo2</name></type> <name pos:line="89" pos:column="44">IEnumDebugENCRelinkInfo2</name>;</typedef>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="90" pos:column="9">/* __IEnumDebugENCRelinkInfo2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">ifndef</cpp:directive> <name pos:line="93" pos:column="9">__IDebugIDBInfo2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="94" pos:column="9">__IDebugIDBInfo2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="95" pos:column="1">typedef <type><name pos:line="95" pos:column="9">interface</name> <name pos:line="95" pos:column="19">IDebugIDBInfo2</name></type> <name pos:line="95" pos:column="34">IDebugIDBInfo2</name>;</typedef>
<cpp:endif pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="96" pos:column="9">/* __IDebugIDBInfo2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">ifndef</cpp:directive> <name pos:line="99" pos:column="9">__IEnumDebugIDBInfo2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="100" pos:column="9">__IEnumDebugIDBInfo2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="101" pos:column="1">typedef <type><name pos:line="101" pos:column="9">interface</name> <name pos:line="101" pos:column="19">IEnumDebugIDBInfo2</name></type> <name pos:line="101" pos:column="38">IEnumDebugIDBInfo2</name>;</typedef>
<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="102" pos:column="9">/* __IEnumDebugIDBInfo2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">ifndef</cpp:directive> <name pos:line="105" pos:column="9">__IDebugENCBuildInfo2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="106" pos:column="9">__IDebugENCBuildInfo2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="107" pos:column="1">typedef <type><name pos:line="107" pos:column="9">interface</name> <name pos:line="107" pos:column="19">IDebugENCBuildInfo2</name></type> <name pos:line="107" pos:column="39">IDebugENCBuildInfo2</name>;</typedef>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="108" pos:column="9">/* __IDebugENCBuildInfo2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">ifndef</cpp:directive> <name pos:line="111" pos:column="9">__IDebugENCUpdateOnRelinkEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="112" pos:column="9">__IDebugENCUpdateOnRelinkEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="113" pos:column="1">typedef <type><name pos:line="113" pos:column="9">interface</name> <name pos:line="113" pos:column="19">IDebugENCUpdateOnRelinkEvent2</name></type> <name pos:line="113" pos:column="49">IDebugENCUpdateOnRelinkEvent2</name>;</typedef>
<cpp:endif pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="114" pos:column="9">/* __IDebugENCUpdateOnRelinkEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">ifndef</cpp:directive> <name pos:line="117" pos:column="9">__IDebugENCUpdateOnStaleCodeEvent2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="118" pos:column="9">__IDebugENCUpdateOnStaleCodeEvent2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="119" pos:column="1">typedef <type><name pos:line="119" pos:column="9">interface</name> <name pos:line="119" pos:column="19">IDebugENCUpdateOnStaleCodeEvent2</name></type> <name pos:line="119" pos:column="52">IDebugENCUpdateOnStaleCodeEvent2</name>;</typedef>
<cpp:endif pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="120" pos:column="9">/* __IDebugENCUpdateOnStaleCodeEvent2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="123" pos:column="1">#<cpp:directive pos:line="123" pos:column="2">ifndef</cpp:directive> <name pos:line="123" pos:column="9">__IDebugENCUpdate_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="124" pos:column="9">__IDebugENCUpdate_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="125" pos:column="1">typedef <type><name pos:line="125" pos:column="9">interface</name> <name pos:line="125" pos:column="19">IDebugENCUpdate</name></type> <name pos:line="125" pos:column="35">IDebugENCUpdate</name>;</typedef>
<cpp:endif pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="126" pos:column="9">/* __IDebugENCUpdate_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">ifndef</cpp:directive> <name pos:line="129" pos:column="9">__IDebugENCSnapshot2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="130" pos:column="9">__IDebugENCSnapshot2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="131" pos:column="1">typedef <type><name pos:line="131" pos:column="9">interface</name> <name pos:line="131" pos:column="19">IDebugENCSnapshot2</name></type> <name pos:line="131" pos:column="38">IDebugENCSnapshot2</name>;</typedef>
<cpp:endif pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="132" pos:column="9">/* __IDebugENCSnapshot2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">ifndef</cpp:directive> <name pos:line="135" pos:column="9">__IDebugENCSnapshot3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="136" pos:column="1">#<cpp:directive pos:line="136" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="136" pos:column="9">__IDebugENCSnapshot3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="137" pos:column="1">typedef <type><name pos:line="137" pos:column="9">interface</name> <name pos:line="137" pos:column="19">IDebugENCSnapshot3</name></type> <name pos:line="137" pos:column="38">IDebugENCSnapshot3</name>;</typedef>
<cpp:endif pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="138" pos:column="9">/* __IDebugENCSnapshot3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="141" pos:column="1">#<cpp:directive pos:line="141" pos:column="2">ifndef</cpp:directive> <name pos:line="141" pos:column="9">__IEnumDebugENCSnapshots2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="142" pos:column="1">#<cpp:directive pos:line="142" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="142" pos:column="9">__IEnumDebugENCSnapshots2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="143" pos:column="1">typedef <type><name pos:line="143" pos:column="9">interface</name> <name pos:line="143" pos:column="19">IEnumDebugENCSnapshots2</name></type> <name pos:line="143" pos:column="43">IEnumDebugENCSnapshots2</name>;</typedef>
<cpp:endif pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="144" pos:column="9">/* __IEnumDebugENCSnapshots2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">ifndef</cpp:directive> <name pos:line="147" pos:column="9">__IEnumDebugErrorInfos2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="148" pos:column="9">__IEnumDebugErrorInfos2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="149" pos:column="1">typedef <type><name pos:line="149" pos:column="9">interface</name> <name pos:line="149" pos:column="19">IEnumDebugErrorInfos2</name></type> <name pos:line="149" pos:column="41">IEnumDebugErrorInfos2</name>;</typedef>
<cpp:endif pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="150" pos:column="9">/* __IEnumDebugErrorInfos2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">ifndef</cpp:directive> <name pos:line="153" pos:column="9">__IENCDebugInfo_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="154" pos:column="1">#<cpp:directive pos:line="154" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="154" pos:column="9">__IENCDebugInfo_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="155" pos:column="1">typedef <type><name pos:line="155" pos:column="9">interface</name> <name pos:line="155" pos:column="19">IENCDebugInfo</name></type> <name pos:line="155" pos:column="33">IENCDebugInfo</name>;</typedef>
<cpp:endif pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="156" pos:column="9">/* __IENCDebugInfo_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">ifndef</cpp:directive> <name pos:line="159" pos:column="9">__IDebugENCSymbolProvider2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="160" pos:column="9">__IDebugENCSymbolProvider2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="161" pos:column="1">typedef <type><name pos:line="161" pos:column="9">interface</name> <name pos:line="161" pos:column="19">IDebugENCSymbolProvider2</name></type> <name pos:line="161" pos:column="44">IDebugENCSymbolProvider2</name>;</typedef>
<cpp:endif pos:line="162" pos:column="1">#<cpp:directive pos:line="162" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="162" pos:column="9">/* __IDebugENCSymbolProvider2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">ifndef</cpp:directive> <name pos:line="165" pos:column="9">__IDebugENCModule_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="166" pos:column="1">#<cpp:directive pos:line="166" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="166" pos:column="9">__IDebugENCModule_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="167" pos:column="1">typedef <type><name pos:line="167" pos:column="9">interface</name> <name pos:line="167" pos:column="19">IDebugENCModule</name></type> <name pos:line="167" pos:column="35">IDebugENCModule</name>;</typedef>
<cpp:endif pos:line="168" pos:column="1">#<cpp:directive pos:line="168" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="168" pos:column="9">/* __IDebugENCModule_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="171" pos:column="1">#<cpp:directive pos:line="171" pos:column="2">ifndef</cpp:directive> <name pos:line="171" pos:column="9">__IDebugCustomENCModule100_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="172" pos:column="1">#<cpp:directive pos:line="172" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="172" pos:column="9">__IDebugCustomENCModule100_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="173" pos:column="1">typedef <type><name pos:line="173" pos:column="9">interface</name> <name pos:line="173" pos:column="19">IDebugCustomENCModule100</name></type> <name pos:line="173" pos:column="44">IDebugCustomENCModule100</name>;</typedef>
<cpp:endif pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="174" pos:column="9">/* __IDebugCustomENCModule100_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="177" pos:column="1">#<cpp:directive pos:line="177" pos:column="2">ifndef</cpp:directive> <name pos:line="177" pos:column="9">__IVsENCRebuildableProjectCfg3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="178" pos:column="1">#<cpp:directive pos:line="178" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="178" pos:column="9">__IVsENCRebuildableProjectCfg3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="179" pos:column="1">typedef <type><name pos:line="179" pos:column="9">interface</name> <name pos:line="179" pos:column="19">IVsENCRebuildableProjectCfg3</name></type> <name pos:line="179" pos:column="48">IVsENCRebuildableProjectCfg3</name>;</typedef>
<cpp:endif pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="180" pos:column="9">/* __IVsENCRebuildableProjectCfg3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="183" pos:column="1">#<cpp:directive pos:line="183" pos:column="2">ifndef</cpp:directive> <name pos:line="183" pos:column="9">__IDebugManagedENC_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="184" pos:column="1">#<cpp:directive pos:line="184" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="184" pos:column="9">__IDebugManagedENC_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="185" pos:column="1">typedef <type><name pos:line="185" pos:column="9">interface</name> <name pos:line="185" pos:column="19">IDebugManagedENC</name></type> <name pos:line="185" pos:column="36">IDebugManagedENC</name>;</typedef>
<cpp:endif pos:line="186" pos:column="1">#<cpp:directive pos:line="186" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="186" pos:column="9">/* __IDebugManagedENC_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="189" pos:column="1">#<cpp:directive pos:line="189" pos:column="2">ifndef</cpp:directive> <name pos:line="189" pos:column="9">__IDebugUpdateInMemoryPE_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="190" pos:column="9">__IDebugUpdateInMemoryPE_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="191" pos:column="1">typedef <type><name pos:line="191" pos:column="9">interface</name> <name pos:line="191" pos:column="19">IDebugUpdateInMemoryPE</name></type> <name pos:line="191" pos:column="42">IDebugUpdateInMemoryPE</name>;</typedef>
<cpp:endif pos:line="192" pos:column="1">#<cpp:directive pos:line="192" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="192" pos:column="9">/* __IDebugUpdateInMemoryPE_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="195" pos:column="1">#<cpp:directive pos:line="195" pos:column="2">ifndef</cpp:directive> <name pos:line="195" pos:column="9">__IDebugComPlusSnapshot2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="196" pos:column="1">#<cpp:directive pos:line="196" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="196" pos:column="9">__IDebugComPlusSnapshot2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="197" pos:column="1">typedef <type><name pos:line="197" pos:column="9">interface</name> <name pos:line="197" pos:column="19">IDebugComPlusSnapshot2</name></type> <name pos:line="197" pos:column="42">IDebugComPlusSnapshot2</name>;</typedef>
<cpp:endif pos:line="198" pos:column="1">#<cpp:directive pos:line="198" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="198" pos:column="9">/* __IDebugComPlusSnapshot2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="201" pos:column="1">#<cpp:directive pos:line="201" pos:column="2">ifndef</cpp:directive> <name pos:line="201" pos:column="9">__IDebugNativeSnapshot2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="202" pos:column="1">#<cpp:directive pos:line="202" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="202" pos:column="9">__IDebugNativeSnapshot2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="203" pos:column="1">typedef <type><name pos:line="203" pos:column="9">interface</name> <name pos:line="203" pos:column="19">IDebugNativeSnapshot2</name></type> <name pos:line="203" pos:column="41">IDebugNativeSnapshot2</name>;</typedef>
<cpp:endif pos:line="204" pos:column="1">#<cpp:directive pos:line="204" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="204" pos:column="9">/* __IDebugNativeSnapshot2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="207" pos:column="1">#<cpp:directive pos:line="207" pos:column="2">ifndef</cpp:directive> <name pos:line="207" pos:column="9">__IDebugENCStackFrame2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="208" pos:column="1">#<cpp:directive pos:line="208" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="208" pos:column="9">__IDebugENCStackFrame2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="209" pos:column="1">typedef <type><name pos:line="209" pos:column="9">interface</name> <name pos:line="209" pos:column="19">IDebugENCStackFrame2</name></type> <name pos:line="209" pos:column="40">IDebugENCStackFrame2</name>;</typedef>
<cpp:endif pos:line="210" pos:column="1">#<cpp:directive pos:line="210" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="210" pos:column="9">/* __IDebugENCStackFrame2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="213" pos:column="1">#<cpp:directive pos:line="213" pos:column="2">ifndef</cpp:directive> <name pos:line="213" pos:column="9">__IDebugMetaDataEmit2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="214" pos:column="1">#<cpp:directive pos:line="214" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="214" pos:column="9">__IDebugMetaDataEmit2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="215" pos:column="1">typedef <type><name pos:line="215" pos:column="9">interface</name> <name pos:line="215" pos:column="19">IDebugMetaDataEmit2</name></type> <name pos:line="215" pos:column="39">IDebugMetaDataEmit2</name>;</typedef>
<cpp:endif pos:line="216" pos:column="1">#<cpp:directive pos:line="216" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="216" pos:column="9">/* __IDebugMetaDataEmit2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="219" pos:column="1">#<cpp:directive pos:line="219" pos:column="2">ifndef</cpp:directive> <name pos:line="219" pos:column="9">__IDebugMetaDataDebugEmit2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="220" pos:column="1">#<cpp:directive pos:line="220" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="220" pos:column="9">__IDebugMetaDataDebugEmit2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="221" pos:column="1">typedef <type><name pos:line="221" pos:column="9">interface</name> <name pos:line="221" pos:column="19">IDebugMetaDataDebugEmit2</name></type> <name pos:line="221" pos:column="44">IDebugMetaDataDebugEmit2</name>;</typedef>
<cpp:endif pos:line="222" pos:column="1">#<cpp:directive pos:line="222" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="222" pos:column="9">/* __IDebugMetaDataDebugEmit2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="225" pos:column="1">#<cpp:directive pos:line="225" pos:column="2">ifndef</cpp:directive> <name pos:line="225" pos:column="9">__IDebugENCStateEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="226" pos:column="1">#<cpp:directive pos:line="226" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="226" pos:column="9">__IDebugENCStateEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="227" pos:column="1">typedef <type><name pos:line="227" pos:column="9">interface</name> <name pos:line="227" pos:column="19">IDebugENCStateEvents</name></type> <name pos:line="227" pos:column="40">IDebugENCStateEvents</name>;</typedef>
<cpp:endif pos:line="228" pos:column="1">#<cpp:directive pos:line="228" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="228" pos:column="9">/* __IDebugENCStateEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="231" pos:column="1">#<cpp:directive pos:line="231" pos:column="2">ifndef</cpp:directive> <name pos:line="231" pos:column="9">__EncMgr_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="232" pos:column="1">#<cpp:directive pos:line="232" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="232" pos:column="9">__EncMgr_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="234" pos:column="1">#<cpp:directive pos:line="234" pos:column="2">ifdef</cpp:directive> <name pos:line="234" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="235" pos:column="1">typedef <type pos:line="235" pos:column="9">class <name pos:line="235" pos:column="15">EncMgr</name></type> <name pos:line="235" pos:column="22">EncMgr</name>;</typedef>
<cpp:else pos:line="236" pos:column="1">#<cpp:directive pos:line="236" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="237" pos:column="1">typedef <type pos:line="237" pos:column="9">struct <name pos:line="237" pos:column="16">EncMgr</name></type> <name pos:line="237" pos:column="23">EncMgr</name>;</typedef>
<cpp:endif pos:line="238" pos:column="1">#<cpp:directive pos:line="238" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="238" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="240" pos:column="1">#<cpp:directive pos:line="240" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="240" pos:column="9">/* __EncMgr_FWD_DEFINED__ */</comment>


<comment type="block" pos:line="243" pos:column="1">/* header files for imported files */</comment>
<cpp:include pos:line="244" pos:column="1">#<cpp:directive pos:line="244" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="244" pos:column="10">"ocidl.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="245" pos:column="1">#<cpp:directive pos:line="245" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="245" pos:column="10">"msdbg.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="246" pos:column="1">#<cpp:directive pos:line="246" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="246" pos:column="10">"sh.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="248" pos:column="1">#<cpp:directive pos:line="248" pos:column="2">ifdef</cpp:directive> <name pos:line="248" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="249" pos:column="1">extern <lit:literal type="string" pos:line="249" pos:column="8">"C"</lit:literal><block pos:line="249" pos:column="11">{
<cpp:endif pos:line="250" pos:column="1">#<cpp:directive pos:line="250" pos:column="2">endif</cpp:directive></cpp:endif> 


<comment type="block" pos:line="253" pos:column="1">/* interface __MIDL_itf_enc_0000_0000 */</comment>
<comment type="block" pos:line="254" pos:column="1">/* [local] */</comment> 





















<decl_stmt><decl><type><specifier pos:line="276" pos:column="1">static</specifier> <specifier pos:line="276" pos:column="8">const</specifier> <name pos:line="276" pos:column="14">int</name></type> <name pos:line="276" pos:column="18">E_ENC_REBUILD_FAIL</name> <init pos:line="276" pos:column="37">= <expr><call><name pos:line="276" pos:column="39">MAKE_HRESULT</name><argument_list pos:line="276" pos:column="51">(<argument><expr><lit:literal type="number" pos:line="276" pos:column="52">1</lit:literal></expr></argument>, <argument><expr><name pos:line="276" pos:column="55">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="276" pos:column="69">0x0001</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="277" pos:column="1">static</specifier> <specifier pos:line="277" pos:column="8">const</specifier> <name pos:line="277" pos:column="14">int</name></type> <name pos:line="277" pos:column="18">E_VB_ENC_REBUILD_FAIL</name> <init pos:line="277" pos:column="40">= <expr><call><name pos:line="277" pos:column="42">MAKE_HRESULT</name><argument_list pos:line="277" pos:column="54">(<argument><expr><lit:literal type="number" pos:line="277" pos:column="55">1</lit:literal></expr></argument>, <argument><expr><name pos:line="277" pos:column="58">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="277" pos:column="72">0x0011</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="278" pos:column="1">static</specifier> <specifier pos:line="278" pos:column="8">const</specifier> <name pos:line="278" pos:column="14">int</name></type> <name pos:line="278" pos:column="18">E_ENC_REBUILD_FAIL_MODULE_NOT_LOADED</name> <init pos:line="278" pos:column="55">= <expr><call><name pos:line="278" pos:column="57">MAKE_HRESULT</name><argument_list pos:line="278" pos:column="69">(<argument><expr><lit:literal type="number" pos:line="278" pos:column="70">1</lit:literal></expr></argument>, <argument><expr><name pos:line="278" pos:column="73">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="278" pos:column="87">0x0101</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="279" pos:column="1">static</specifier> <specifier pos:line="279" pos:column="8">const</specifier> <name pos:line="279" pos:column="14">int</name></type> <name pos:line="279" pos:column="18">E_ENC_COMMIT_FAIL</name> <init pos:line="279" pos:column="36">= <expr><call><name pos:line="279" pos:column="38">MAKE_HRESULT</name><argument_list pos:line="279" pos:column="50">(<argument><expr><lit:literal type="number" pos:line="279" pos:column="51">1</lit:literal></expr></argument>, <argument><expr><name pos:line="279" pos:column="54">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="279" pos:column="68">0x0002</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="280" pos:column="1">static</specifier> <specifier pos:line="280" pos:column="8">const</specifier> <name pos:line="280" pos:column="14">int</name></type> <name pos:line="280" pos:column="18">E_ENC_MODIFIED_MODULE_RELOADED</name> <init pos:line="280" pos:column="49">= <expr><call><name pos:line="280" pos:column="51">MAKE_HRESULT</name><argument_list pos:line="280" pos:column="63">(<argument><expr><lit:literal type="number" pos:line="280" pos:column="64">1</lit:literal></expr></argument>, <argument><expr><name pos:line="280" pos:column="67">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="280" pos:column="81">0x0005</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="281" pos:column="1">static</specifier> <specifier pos:line="281" pos:column="8">const</specifier> <name pos:line="281" pos:column="14">int</name></type> <name pos:line="281" pos:column="18">E_ENC_NOT_SUPPORTED_DURING_INTEROP</name> <init pos:line="281" pos:column="53">= <expr><call><name pos:line="281" pos:column="55">MAKE_HRESULT</name><argument_list pos:line="281" pos:column="67">(<argument><expr><lit:literal type="number" pos:line="281" pos:column="68">1</lit:literal></expr></argument>, <argument><expr><name pos:line="281" pos:column="71">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="281" pos:column="85">0x0006</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="282" pos:column="1">static</specifier> <specifier pos:line="282" pos:column="8">const</specifier> <name pos:line="282" pos:column="14">int</name></type> <name pos:line="282" pos:column="18">E_ENC_NOT_SUPPORTED_DURING_SQLCLR</name> <init pos:line="282" pos:column="52">= <expr><call><name pos:line="282" pos:column="54">MAKE_HRESULT</name><argument_list pos:line="282" pos:column="66">(<argument><expr><lit:literal type="number" pos:line="282" pos:column="67">1</lit:literal></expr></argument>, <argument><expr><name pos:line="282" pos:column="70">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="282" pos:column="84">0x0007</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="283" pos:column="1">static</specifier> <specifier pos:line="283" pos:column="8">const</specifier> <name pos:line="283" pos:column="14">int</name></type> <name pos:line="283" pos:column="18">E_ENC_NOT_SUPPORTED_DURING_EMBEDDED</name> <init pos:line="283" pos:column="54">= <expr><call><name pos:line="283" pos:column="56">MAKE_HRESULT</name><argument_list pos:line="283" pos:column="68">(<argument><expr><lit:literal type="number" pos:line="283" pos:column="69">1</lit:literal></expr></argument>, <argument><expr><name pos:line="283" pos:column="72">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="283" pos:column="86">0x0008</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="284" pos:column="1">static</specifier> <specifier pos:line="284" pos:column="8">const</specifier> <name pos:line="284" pos:column="14">int</name></type> <name pos:line="284" pos:column="18">E_ENC_NOT_SUPPORTED_DURING_MINIDUMP</name> <init pos:line="284" pos:column="54">= <expr><call><name pos:line="284" pos:column="56">MAKE_HRESULT</name><argument_list pos:line="284" pos:column="68">(<argument><expr><lit:literal type="number" pos:line="284" pos:column="69">1</lit:literal></expr></argument>, <argument><expr><name pos:line="284" pos:column="72">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="284" pos:column="86">0x0009</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="285" pos:column="1">static</specifier> <specifier pos:line="285" pos:column="8">const</specifier> <name pos:line="285" pos:column="14">int</name></type> <name pos:line="285" pos:column="18">E_ENC_NOT_SUPPORTED_FOR_ATTACH</name> <init pos:line="285" pos:column="49">= <expr><call><name pos:line="285" pos:column="51">MAKE_HRESULT</name><argument_list pos:line="285" pos:column="63">(<argument><expr><lit:literal type="number" pos:line="285" pos:column="64">1</lit:literal></expr></argument>, <argument><expr><name pos:line="285" pos:column="67">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="285" pos:column="81">0x0010</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="286" pos:column="1">static</specifier> <specifier pos:line="286" pos:column="8">const</specifier> <name pos:line="286" pos:column="14">int</name></type> <name pos:line="286" pos:column="18">E_ENC_NOT_SUPPORTED_FOR_WIN64</name> <init pos:line="286" pos:column="48">= <expr><call><name pos:line="286" pos:column="50">MAKE_HRESULT</name><argument_list pos:line="286" pos:column="62">(<argument><expr><lit:literal type="number" pos:line="286" pos:column="63">1</lit:literal></expr></argument>, <argument><expr><name pos:line="286" pos:column="66">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="286" pos:column="80">0x0011</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="287" pos:column="1">static</specifier> <specifier pos:line="287" pos:column="8">const</specifier> <name pos:line="287" pos:column="14">int</name></type> <name pos:line="287" pos:column="18">E_ENC_NOT_SUPPORTED_UNTIL_MODULE_LOADED</name> <init pos:line="287" pos:column="58">= <expr><call><name pos:line="287" pos:column="60">MAKE_HRESULT</name><argument_list pos:line="287" pos:column="72">(<argument><expr><lit:literal type="number" pos:line="287" pos:column="73">1</lit:literal></expr></argument>, <argument><expr><name pos:line="287" pos:column="76">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="287" pos:column="90">0x0012</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="288" pos:column="1">static</specifier> <specifier pos:line="288" pos:column="8">const</specifier> <name pos:line="288" pos:column="14">int</name></type> <name pos:line="288" pos:column="18">E_ENC_NOT_SUPPORTED_BUILD_FAILED</name> <init pos:line="288" pos:column="51">= <expr><call><name pos:line="288" pos:column="53">MAKE_HRESULT</name><argument_list pos:line="288" pos:column="65">(<argument><expr><lit:literal type="number" pos:line="288" pos:column="66">1</lit:literal></expr></argument>, <argument><expr><name pos:line="288" pos:column="69">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="288" pos:column="83">0x0015</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="289" pos:column="1">static</specifier> <specifier pos:line="289" pos:column="8">const</specifier> <name pos:line="289" pos:column="14">int</name></type> <name pos:line="289" pos:column="18">E_ENC_NOT_SUPPORTED_FOR_SILVERLIGHT</name> <init pos:line="289" pos:column="54">= <expr><call><name pos:line="289" pos:column="56">MAKE_HRESULT</name><argument_list pos:line="289" pos:column="68">(<argument><expr><lit:literal type="number" pos:line="289" pos:column="69">1</lit:literal></expr></argument>, <argument><expr><name pos:line="289" pos:column="72">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="289" pos:column="86">0x0018</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="290" pos:column="1">static</specifier> <specifier pos:line="290" pos:column="8">const</specifier> <name pos:line="290" pos:column="14">int</name></type> <name pos:line="290" pos:column="18">S_ENC_ILREMAP_UNREACHABLE</name> <init pos:line="290" pos:column="44">= <expr><call><name pos:line="290" pos:column="46">MAKE_HRESULT</name><argument_list pos:line="290" pos:column="58">(<argument><expr><lit:literal type="number" pos:line="290" pos:column="59">0</lit:literal></expr></argument>, <argument><expr><name pos:line="290" pos:column="62">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="290" pos:column="76">0x0013</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="291" pos:column="1">static</specifier> <specifier pos:line="291" pos:column="8">const</specifier> <name pos:line="291" pos:column="14">int</name></type> <name pos:line="291" pos:column="18">E_ENC_NOT_SUPPORTED_IN_RUNMODE</name> <init pos:line="291" pos:column="49">= <expr><call><name pos:line="291" pos:column="51">MAKE_HRESULT</name><argument_list pos:line="291" pos:column="63">(<argument><expr><lit:literal type="number" pos:line="291" pos:column="64">1</lit:literal></expr></argument>, <argument><expr><name pos:line="291" pos:column="67">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="291" pos:column="81">0x0014</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="292" pos:column="1">static</specifier> <specifier pos:line="292" pos:column="8">const</specifier> <name pos:line="292" pos:column="14">int</name></type> <name pos:line="292" pos:column="18">E_ENC_NOT_SUPPORTED_IN_STOPONEMODE</name> <init pos:line="292" pos:column="53">= <expr><call><name pos:line="292" pos:column="55">MAKE_HRESULT</name><argument_list pos:line="292" pos:column="67">(<argument><expr><lit:literal type="number" pos:line="292" pos:column="68">1</lit:literal></expr></argument>, <argument><expr><name pos:line="292" pos:column="71">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="292" pos:column="85">0x0016</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="293" pos:column="1">static</specifier> <specifier pos:line="293" pos:column="8">const</specifier> <name pos:line="293" pos:column="14">int</name></type> <name pos:line="293" pos:column="18">E_ENC_NOT_SUPPORTED_FOR_REMOTE</name> <init pos:line="293" pos:column="49">= <expr><call><name pos:line="293" pos:column="51">MAKE_HRESULT</name><argument_list pos:line="293" pos:column="63">(<argument><expr><lit:literal type="number" pos:line="293" pos:column="64">1</lit:literal></expr></argument>, <argument><expr><name pos:line="293" pos:column="67">FACILITY_ITF</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="293" pos:column="81">0x0017</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<enum pos:line="295" pos:column="1">enum <name pos:line="295" pos:column="6">tagENCSTATE</name>
    <block pos:line="296" pos:column="5">{	<decl><name pos:line="296" pos:column="9">ENCSTATE_DISABLED</name>	<init pos:line="296" pos:column="33">= <expr><lit:literal type="number" pos:line="296" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="296" pos:column="36">,</op:operator>
	<decl><name pos:line="297" pos:column="9">ENCSTATE_ENABLED</name>	<init pos:line="297" pos:column="33">= <expr><op:operator pos:line="297" pos:column="35">(</op:operator> <name pos:line="297" pos:column="37">ENCSTATE_DISABLED</name> <op:operator pos:line="297" pos:column="55">+</op:operator> <lit:literal type="number" pos:line="297" pos:column="57">1</lit:literal> <op:operator pos:line="297" pos:column="59">)</op:operator></expr></init></decl> <op:operator pos:line="297" pos:column="61">,</op:operator>
	<decl><name pos:line="298" pos:column="9">ENCSTATE_MANAGED_ENC_NOT_SUPPORTED</name>	<init pos:line="298" pos:column="49">= <expr><op:operator pos:line="298" pos:column="51">(</op:operator> <name pos:line="298" pos:column="53">ENCSTATE_ENABLED</name> <op:operator pos:line="298" pos:column="70">+</op:operator> <lit:literal type="number" pos:line="298" pos:column="72">1</lit:literal> <op:operator pos:line="298" pos:column="74">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="300" pos:column="1">typedef <type><enum pos:line="300" pos:column="9">enum <name pos:line="300" pos:column="14">tagENCSTATE</name> <name pos:line="300" pos:column="26">ENCSTATE</name>;</enum></type></typedef>


<enum pos:line="303" pos:column="1">enum <name pos:line="303" pos:column="6">tagApplyCodeChangesResult</name>
    <block pos:line="304" pos:column="5">{	<decl><name pos:line="304" pos:column="9">ACCR_SUCCESS</name>	<init pos:line="304" pos:column="25">= <expr><lit:literal type="number" pos:line="304" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="304" pos:column="28">,</op:operator>
	<decl><name pos:line="305" pos:column="9">ACCR_BUILDERROR</name>	<init pos:line="305" pos:column="25">= <expr><op:operator pos:line="305" pos:column="27">(</op:operator> <name pos:line="305" pos:column="29">ACCR_SUCCESS</name> <op:operator pos:line="305" pos:column="42">+</op:operator> <lit:literal type="number" pos:line="305" pos:column="44">1</lit:literal> <op:operator pos:line="305" pos:column="46">)</op:operator></expr></init></decl> <op:operator pos:line="305" pos:column="48">,</op:operator>
	<decl><name pos:line="306" pos:column="9">ACCR_CANCOMMITERROR</name>	<init pos:line="306" pos:column="33">= <expr><op:operator pos:line="306" pos:column="35">(</op:operator> <name pos:line="306" pos:column="37">ACCR_BUILDERROR</name> <op:operator pos:line="306" pos:column="53">+</op:operator> <lit:literal type="number" pos:line="306" pos:column="55">1</lit:literal> <op:operator pos:line="306" pos:column="57">)</op:operator></expr></init></decl> <op:operator pos:line="306" pos:column="59">,</op:operator>
	<decl><name pos:line="307" pos:column="9">ACCR_COMMITERROR</name>	<init pos:line="307" pos:column="33">= <expr><op:operator pos:line="307" pos:column="35">(</op:operator> <name pos:line="307" pos:column="37">ACCR_CANCOMMITERROR</name> <op:operator pos:line="307" pos:column="57">+</op:operator> <lit:literal type="number" pos:line="307" pos:column="59">1</lit:literal> <op:operator pos:line="307" pos:column="61">)</op:operator></expr></init></decl> <op:operator pos:line="307" pos:column="63">,</op:operator>
	<decl><name pos:line="308" pos:column="9">ACCR_MODRELOADERROR</name>	<init pos:line="308" pos:column="33">= <expr><op:operator pos:line="308" pos:column="35">(</op:operator> <name pos:line="308" pos:column="37">ACCR_COMMITERROR</name> <op:operator pos:line="308" pos:column="54">+</op:operator> <lit:literal type="number" pos:line="308" pos:column="56">1</lit:literal> <op:operator pos:line="308" pos:column="58">)</op:operator></expr></init></decl> <op:operator pos:line="308" pos:column="60">,</op:operator>
	<decl><name pos:line="309" pos:column="9">ACCR_ENCNOTSUPPORTED</name>	<init pos:line="309" pos:column="33">= <expr><op:operator pos:line="309" pos:column="35">(</op:operator> <name pos:line="309" pos:column="37">ACCR_MODRELOADERROR</name> <op:operator pos:line="309" pos:column="57">+</op:operator> <lit:literal type="number" pos:line="309" pos:column="59">1</lit:literal> <op:operator pos:line="309" pos:column="61">)</op:operator></expr></init></decl> <op:operator pos:line="309" pos:column="63">,</op:operator>
	<decl><name pos:line="310" pos:column="9">ACCR_MODNOTLOADEDERROR</name>	<init pos:line="310" pos:column="33">= <expr><op:operator pos:line="310" pos:column="35">(</op:operator> <name pos:line="310" pos:column="37">ACCR_ENCNOTSUPPORTED</name> <op:operator pos:line="310" pos:column="58">+</op:operator> <lit:literal type="number" pos:line="310" pos:column="60">1</lit:literal> <op:operator pos:line="310" pos:column="62">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="312" pos:column="1">typedef <type><enum pos:line="312" pos:column="9">enum <name pos:line="312" pos:column="14">tagApplyCodeChangesResult</name> <name pos:line="312" pos:column="40">ApplyCodeChangesResult</name>;</enum></type></typedef>



<decl_stmt><decl><type><specifier pos:line="316" pos:column="1">extern</specifier> <name pos:line="316" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="316" pos:column="22">__MIDL_itf_enc_0000_0000_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="317" pos:column="1">extern</specifier> <name pos:line="317" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="317" pos:column="22">__MIDL_itf_enc_0000_0000_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="319" pos:column="1">#<cpp:directive pos:line="319" pos:column="2">ifndef</cpp:directive> <name pos:line="319" pos:column="9">__IDebugENC_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="320" pos:column="1">#<cpp:directive pos:line="320" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="320" pos:column="9">__IDebugENC_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="322" pos:column="1">/* interface IDebugENC */</comment>
<comment type="block" pos:line="323" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="326" pos:column="1">EXTERN_C</name> <specifier pos:line="326" pos:column="10">const</specifier> <name pos:line="326" pos:column="16">IID</name></type> <name pos:line="326" pos:column="20">IID_IDebugENC</name></decl>;</decl_stmt>

<cpp:if pos:line="328" pos:column="1">#<cpp:directive pos:line="328" pos:column="2">if</cpp:directive> <expr><call><name pos:line="328" pos:column="5">defined</name><argument_list pos:line="328" pos:column="12">(<argument><expr><name pos:line="328" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="328" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="328" pos:column="29">!</op:operator><call><name pos:line="328" pos:column="30">defined</name><argument_list pos:line="328" pos:column="37">(<argument><expr><name pos:line="328" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="330" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="330" pos:column="19">(<argument pos:line="330" pos:column="20">"B104D8B7-AF19-11d2-922C-00A02448799A"</argument>)</argument_list></macro>
    <label><name pos:line="331" pos:column="5">IDebugENC</name> :</label> <expr_stmt><expr pos:line="331" pos:column="17">public <name pos:line="331" pos:column="24">IUnknown</name>
    <block pos:line="332" pos:column="5">{
    <expr pos:line="333" pos:column="5">public<op:operator pos:line="333" pos:column="11">:</op:operator>
        virtual <name pos:line="334" pos:column="17">HRESULT</name> <name pos:line="334" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="334" pos:column="43">SetRegistryRoot</name><argument_list pos:line="334" pos:column="58">( 
            <comment type="block" pos:line="335" pos:column="13">/* [in] */</comment> <argument pos:line="335" pos:column="24">__RPC__in LPCOLESTR in_szRegistryRoot</argument>)</argument_list></macro> <op:operator pos:line="335" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="335" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="337" pos:column="9">virtual <name pos:line="337" pos:column="17">HRESULT</name> <name pos:line="337" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="337" pos:column="43">EnterDebuggingSession</name><argument_list pos:line="337" pos:column="64">( 
            <comment type="block" pos:line="338" pos:column="13">/* [in] */</comment> <argument pos:line="338" pos:column="24">__RPC__in_opt IServiceProvider *in_pServiceProvider</argument>)</argument_list></macro> <op:operator pos:line="338" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="338" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="340" pos:column="9">virtual <name pos:line="340" pos:column="17">HRESULT</name> <name pos:line="340" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="340" pos:column="43">SetENCProjectBuildOption</name><argument_list pos:line="340" pos:column="67">( 
            <comment type="block" pos:line="341" pos:column="13">/* [in] */</comment> <argument pos:line="341" pos:column="24">__RPC__in REFGUID in_guidOption</argument>,
            <comment type="block" pos:line="342" pos:column="13">/* [in] */</comment> <argument pos:line="342" pos:column="24">__RPC__in LPCOLESTR in_szOptionValue</argument>)</argument_list></macro> <op:operator pos:line="342" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="342" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="344" pos:column="9">virtual <name pos:line="344" pos:column="17">HRESULT</name> <name pos:line="344" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="344" pos:column="43">InquireENCState</name><argument_list pos:line="344" pos:column="58">( 
            <comment type="block" pos:line="345" pos:column="13">/* [in] */</comment> <argument pos:line="345" pos:column="24">__RPC__in ENCSTATE *in_pENCSTATE</argument>,
            <comment type="block" pos:line="346" pos:column="13">/* [in] */</comment> <argument pos:line="346" pos:column="24">BOOL fOnContinue</argument>)</argument_list></macro> <op:operator pos:line="346" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="346" pos:column="44">0</lit:literal></expr>;
        
        <expr pos:line="348" pos:column="9">virtual <name pos:line="348" pos:column="17">HRESULT</name> <name pos:line="348" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="348" pos:column="43">InquireENCRelinkState</name><argument_list pos:line="348" pos:column="64">( 
            <comment type="block" pos:line="349" pos:column="13">/* [in] */</comment> <argument pos:line="349" pos:column="24">__RPC__in BOOL *in_pbENCRelinking</argument>)</argument_list></macro> <op:operator pos:line="349" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="349" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="351" pos:column="9">virtual <name pos:line="351" pos:column="17">HRESULT</name> <name pos:line="351" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="351" pos:column="43">MapToEdited</name><argument_list pos:line="351" pos:column="54">( 
            <comment type="block" pos:line="352" pos:column="13">/* [in] */</comment> <argument pos:line="352" pos:column="24">__RPC__in LPCOLESTR in_szFile</argument>,
            <comment type="block" pos:line="353" pos:column="13">/* [in] */</comment> <argument pos:line="353" pos:column="24">ULONG in_LineNo</argument>,
            <comment type="block" pos:line="354" pos:column="13">/* [in] */</comment> <argument pos:line="354" pos:column="24">ULONG in_ColumnNo</argument>,
            <comment type="block" pos:line="355" pos:column="13">/* [out] */</comment> <argument pos:line="355" pos:column="25">__RPC__out ULONG *out_pLineNo</argument>,
            <comment type="block" pos:line="356" pos:column="13">/* [out] */</comment> <argument pos:line="356" pos:column="25">__RPC__out ULONG *out_pColumnNo</argument>)</argument_list></macro> <op:operator pos:line="356" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="356" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="358" pos:column="9">virtual <name pos:line="358" pos:column="17">HRESULT</name> <name pos:line="358" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="358" pos:column="43">MapToSuperceded</name><argument_list pos:line="358" pos:column="58">( 
            <comment type="block" pos:line="359" pos:column="13">/* [in] */</comment> <argument pos:line="359" pos:column="24">__RPC__in LPCOLESTR in_szFile</argument>,
            <comment type="block" pos:line="360" pos:column="13">/* [in] */</comment> <argument pos:line="360" pos:column="24">ULONG in_LineNo</argument>,
            <comment type="block" pos:line="361" pos:column="13">/* [in] */</comment> <argument pos:line="361" pos:column="24">ULONG in_ColumnNo</argument>,
            <comment type="block" pos:line="362" pos:column="13">/* [out] */</comment> <argument pos:line="362" pos:column="25">__RPC__out ULONG *out_pLineNo</argument>,
            <comment type="block" pos:line="363" pos:column="13">/* [out] */</comment> <argument pos:line="363" pos:column="25">__RPC__out ULONG *out_pColumnNo</argument>)</argument_list></macro> <op:operator pos:line="363" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="363" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="365" pos:column="9">virtual <name pos:line="365" pos:column="17">HRESULT</name> <name pos:line="365" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="365" pos:column="43">ApplyCodeChanges</name><argument_list pos:line="365" pos:column="59">( 
            <comment type="block" pos:line="366" pos:column="13">/* [in] */</comment> <argument pos:line="366" pos:column="24">__RPC__in_opt IDebugSession2 *in_pSession</argument>,
            <comment type="block" pos:line="367" pos:column="13">/* [in] */</comment> <argument pos:line="367" pos:column="24">BOOL in_fOnContinue</argument>,
            <comment type="block" pos:line="368" pos:column="13">/* [out] */</comment> <argument pos:line="368" pos:column="25">__RPC__out ApplyCodeChangesResult *result</argument>)</argument_list></macro> <op:operator pos:line="368" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="368" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="370" pos:column="9">virtual <name pos:line="370" pos:column="17">HRESULT</name> <name pos:line="370" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="370" pos:column="43">CancelApplyCodeChanges</name><argument_list pos:line="370" pos:column="65">( 
            <comment type="block" pos:line="371" pos:column="13">/* [in] */</comment> <argument pos:line="371" pos:column="24">__RPC__in_opt IDebugProgram2 *in_pProgram</argument>)</argument_list></macro> <op:operator pos:line="371" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="371" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="373" pos:column="9">virtual <name pos:line="373" pos:column="17">HRESULT</name> <name pos:line="373" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="373" pos:column="43">LeaveDebuggingSession</name><argument_list pos:line="373" pos:column="64">( <argument><expr><name pos:line="373" pos:column="66">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="373" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="373" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="375" pos:column="9">virtual <name pos:line="375" pos:column="17">HRESULT</name> <name pos:line="375" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="375" pos:column="43">AdviseENCStateEvents</name><argument_list pos:line="375" pos:column="63">( 
            <comment type="block" pos:line="376" pos:column="13">/* [in] */</comment> <argument pos:line="376" pos:column="24">__RPC__in_opt IDebugENCStateEvents *in_pENCStateEvents</argument>)</argument_list></macro> <op:operator pos:line="376" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="376" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="378" pos:column="9">virtual <name pos:line="378" pos:column="17">HRESULT</name> <name pos:line="378" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="378" pos:column="43">UnadviseENCStateEvents</name><argument_list pos:line="378" pos:column="65">( 
            <comment type="block" pos:line="379" pos:column="13">/* [in] */</comment> <argument pos:line="379" pos:column="24">__RPC__in_opt IDebugENCStateEvents *in_pENCStateEvents</argument>)</argument_list></macro> <op:operator pos:line="379" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="379" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="381" pos:column="9">virtual <name pos:line="381" pos:column="17">HRESULT</name> <name pos:line="381" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="381" pos:column="43">GetFileName</name><argument_list pos:line="381" pos:column="54">( 
            <comment type="block" pos:line="382" pos:column="13">/* [in] */</comment> <argument pos:line="382" pos:column="24">__RPC__in LPCOLESTR in_szURL</argument>,
            <comment type="block" pos:line="383" pos:column="13">/* [out] */</comment> <argument pos:line="383" pos:column="25">__RPC__deref_out_opt BSTR *out_pbstrFileName</argument>)</argument_list></macro> <op:operator pos:line="383" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="383" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="385" pos:column="9">virtual <name pos:line="385" pos:column="17">HRESULT</name> <name pos:line="385" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="385" pos:column="43">GetFileDisplayName</name><argument_list pos:line="385" pos:column="61">( 
            <comment type="block" pos:line="386" pos:column="13">/* [in] */</comment> <argument pos:line="386" pos:column="24">__RPC__in LPCOLESTR in_szURL</argument>,
            <comment type="block" pos:line="387" pos:column="13">/* [out] */</comment> <argument pos:line="387" pos:column="25">__RPC__deref_out_opt BSTR *out_pbstrDisplayFileName</argument>)</argument_list></macro> <op:operator pos:line="387" pos:column="78">=</op:operator> <lit:literal type="number" pos:line="387" pos:column="80">0</lit:literal></expr>;
        
        <expr pos:line="389" pos:column="9">virtual <name pos:line="389" pos:column="17">HRESULT</name> <name pos:line="389" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="389" pos:column="43">ClearENCState</name><argument_list pos:line="389" pos:column="56">( <argument><expr><name pos:line="389" pos:column="58">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="389" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="389" pos:column="66">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="393" pos:column="1">#<cpp:directive pos:line="393" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="393" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="395" pos:column="5">typedef <type><struct pos:line="395" pos:column="13">struct <name pos:line="395" pos:column="20">IDebugENCVtbl</name>
    <block pos:line="396" pos:column="5">{<public type="default" pos:line="396" pos:column="6">
        <function_decl><type><name pos:line="397" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="399" pos:column="9">HRESULT</name></type> ( <name pos:line="399" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="399" pos:column="37">*</type:modifier><name pos:line="399" pos:column="38">QueryInterface</name> )<parameter_list pos:line="399" pos:column="54">( 
            <param><decl><type><name pos:line="400" pos:column="13">IDebugENC</name> <type:modifier pos:line="400" pos:column="23">*</type:modifier></type> <name pos:line="400" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="401" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="401" pos:column="24">__RPC__in</name> <name pos:line="401" pos:column="34">REFIID</name></type> <name pos:line="401" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="402" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="403" pos:column="13">__RPC__deref_out</name>  <name pos:line="403" pos:column="31">void</name> <type:modifier pos:line="403" pos:column="36">*</type:modifier><type:modifier pos:line="403" pos:column="37">*</type:modifier></type><name pos:line="403" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="405" pos:column="9">ULONG</name></type> ( <name pos:line="405" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="405" pos:column="35">*</type:modifier><name pos:line="405" pos:column="36">AddRef</name> )<parameter_list pos:line="405" pos:column="44">( 
            <param><decl><type><name pos:line="406" pos:column="13">IDebugENC</name> <type:modifier pos:line="406" pos:column="23">*</type:modifier></type> <name pos:line="406" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="408" pos:column="9">ULONG</name></type> ( <name pos:line="408" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="408" pos:column="35">*</type:modifier><name pos:line="408" pos:column="36">Release</name> )<parameter_list pos:line="408" pos:column="45">( 
            <param><decl><type><name pos:line="409" pos:column="13">IDebugENC</name> <type:modifier pos:line="409" pos:column="23">*</type:modifier></type> <name pos:line="409" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="411" pos:column="9">HRESULT</name></type> ( <name pos:line="411" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="411" pos:column="37">*</type:modifier><name pos:line="411" pos:column="38">SetRegistryRoot</name> )<parameter_list pos:line="411" pos:column="55">( 
            <param><decl><type><name pos:line="412" pos:column="13">IDebugENC</name> <type:modifier pos:line="412" pos:column="23">*</type:modifier></type> <name pos:line="412" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="413" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="413" pos:column="24">__RPC__in</name> <name pos:line="413" pos:column="34">LPCOLESTR</name></type> <name pos:line="413" pos:column="44">in_szRegistryRoot</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="415" pos:column="9">HRESULT</name></type> ( <name pos:line="415" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="415" pos:column="37">*</type:modifier><name pos:line="415" pos:column="38">EnterDebuggingSession</name> )<parameter_list pos:line="415" pos:column="61">( 
            <param><decl><type><name pos:line="416" pos:column="13">IDebugENC</name> <type:modifier pos:line="416" pos:column="23">*</type:modifier></type> <name pos:line="416" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="417" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="417" pos:column="24">__RPC__in_opt</name> <name pos:line="417" pos:column="38">IServiceProvider</name> <type:modifier pos:line="417" pos:column="55">*</type:modifier></type><name pos:line="417" pos:column="56">in_pServiceProvider</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="419" pos:column="9">HRESULT</name></type> ( <name pos:line="419" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="419" pos:column="37">*</type:modifier><name pos:line="419" pos:column="38">SetENCProjectBuildOption</name> )<parameter_list pos:line="419" pos:column="64">( 
            <param><decl><type><name pos:line="420" pos:column="13">IDebugENC</name> <type:modifier pos:line="420" pos:column="23">*</type:modifier></type> <name pos:line="420" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="421" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="421" pos:column="24">__RPC__in</name> <name pos:line="421" pos:column="34">REFGUID</name></type> <name pos:line="421" pos:column="42">in_guidOption</name></decl></param>,
            <comment type="block" pos:line="422" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="422" pos:column="24">__RPC__in</name> <name pos:line="422" pos:column="34">LPCOLESTR</name></type> <name pos:line="422" pos:column="44">in_szOptionValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="424" pos:column="9">HRESULT</name></type> ( <name pos:line="424" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="424" pos:column="37">*</type:modifier><name pos:line="424" pos:column="38">InquireENCState</name> )<parameter_list pos:line="424" pos:column="55">( 
            <param><decl><type><name pos:line="425" pos:column="13">IDebugENC</name> <type:modifier pos:line="425" pos:column="23">*</type:modifier></type> <name pos:line="425" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="426" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="426" pos:column="24">__RPC__in</name> <name pos:line="426" pos:column="34">ENCSTATE</name> <type:modifier pos:line="426" pos:column="43">*</type:modifier></type><name pos:line="426" pos:column="44">in_pENCSTATE</name></decl></param>,
            <comment type="block" pos:line="427" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="427" pos:column="24">BOOL</name></type> <name pos:line="427" pos:column="29">fOnContinue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="429" pos:column="9">HRESULT</name></type> ( <name pos:line="429" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="429" pos:column="37">*</type:modifier><name pos:line="429" pos:column="38">InquireENCRelinkState</name> )<parameter_list pos:line="429" pos:column="61">( 
            <param><decl><type><name pos:line="430" pos:column="13">IDebugENC</name> <type:modifier pos:line="430" pos:column="23">*</type:modifier></type> <name pos:line="430" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="431" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="431" pos:column="24">__RPC__in</name> <name pos:line="431" pos:column="34">BOOL</name> <type:modifier pos:line="431" pos:column="39">*</type:modifier></type><name pos:line="431" pos:column="40">in_pbENCRelinking</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="433" pos:column="9">HRESULT</name></type> ( <name pos:line="433" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="433" pos:column="37">*</type:modifier><name pos:line="433" pos:column="38">MapToEdited</name> )<parameter_list pos:line="433" pos:column="51">( 
            <param><decl><type><name pos:line="434" pos:column="13">IDebugENC</name> <type:modifier pos:line="434" pos:column="23">*</type:modifier></type> <name pos:line="434" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="435" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="435" pos:column="24">__RPC__in</name> <name pos:line="435" pos:column="34">LPCOLESTR</name></type> <name pos:line="435" pos:column="44">in_szFile</name></decl></param>,
            <comment type="block" pos:line="436" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="436" pos:column="24">ULONG</name></type> <name pos:line="436" pos:column="30">in_LineNo</name></decl></param>,
            <comment type="block" pos:line="437" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="437" pos:column="24">ULONG</name></type> <name pos:line="437" pos:column="30">in_ColumnNo</name></decl></param>,
            <comment type="block" pos:line="438" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="438" pos:column="25">__RPC__out</name> <name pos:line="438" pos:column="36">ULONG</name> <type:modifier pos:line="438" pos:column="42">*</type:modifier></type><name pos:line="438" pos:column="43">out_pLineNo</name></decl></param>,
            <comment type="block" pos:line="439" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="439" pos:column="25">__RPC__out</name> <name pos:line="439" pos:column="36">ULONG</name> <type:modifier pos:line="439" pos:column="42">*</type:modifier></type><name pos:line="439" pos:column="43">out_pColumnNo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="441" pos:column="9">HRESULT</name></type> ( <name pos:line="441" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="441" pos:column="37">*</type:modifier><name pos:line="441" pos:column="38">MapToSuperceded</name> )<parameter_list pos:line="441" pos:column="55">( 
            <param><decl><type><name pos:line="442" pos:column="13">IDebugENC</name> <type:modifier pos:line="442" pos:column="23">*</type:modifier></type> <name pos:line="442" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="443" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="443" pos:column="24">__RPC__in</name> <name pos:line="443" pos:column="34">LPCOLESTR</name></type> <name pos:line="443" pos:column="44">in_szFile</name></decl></param>,
            <comment type="block" pos:line="444" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="444" pos:column="24">ULONG</name></type> <name pos:line="444" pos:column="30">in_LineNo</name></decl></param>,
            <comment type="block" pos:line="445" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="445" pos:column="24">ULONG</name></type> <name pos:line="445" pos:column="30">in_ColumnNo</name></decl></param>,
            <comment type="block" pos:line="446" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="446" pos:column="25">__RPC__out</name> <name pos:line="446" pos:column="36">ULONG</name> <type:modifier pos:line="446" pos:column="42">*</type:modifier></type><name pos:line="446" pos:column="43">out_pLineNo</name></decl></param>,
            <comment type="block" pos:line="447" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="447" pos:column="25">__RPC__out</name> <name pos:line="447" pos:column="36">ULONG</name> <type:modifier pos:line="447" pos:column="42">*</type:modifier></type><name pos:line="447" pos:column="43">out_pColumnNo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="449" pos:column="9">HRESULT</name></type> ( <name pos:line="449" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="449" pos:column="37">*</type:modifier><name pos:line="449" pos:column="38">ApplyCodeChanges</name> )<parameter_list pos:line="449" pos:column="56">( 
            <param><decl><type><name pos:line="450" pos:column="13">IDebugENC</name> <type:modifier pos:line="450" pos:column="23">*</type:modifier></type> <name pos:line="450" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="451" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="451" pos:column="24">__RPC__in_opt</name> <name pos:line="451" pos:column="38">IDebugSession2</name> <type:modifier pos:line="451" pos:column="53">*</type:modifier></type><name pos:line="451" pos:column="54">in_pSession</name></decl></param>,
            <comment type="block" pos:line="452" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="452" pos:column="24">BOOL</name></type> <name pos:line="452" pos:column="29">in_fOnContinue</name></decl></param>,
            <comment type="block" pos:line="453" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="453" pos:column="25">__RPC__out</name> <name pos:line="453" pos:column="36">ApplyCodeChangesResult</name> <type:modifier pos:line="453" pos:column="59">*</type:modifier></type><name pos:line="453" pos:column="60">result</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="455" pos:column="9">HRESULT</name></type> ( <name pos:line="455" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="455" pos:column="37">*</type:modifier><name pos:line="455" pos:column="38">CancelApplyCodeChanges</name> )<parameter_list pos:line="455" pos:column="62">( 
            <param><decl><type><name pos:line="456" pos:column="13">IDebugENC</name> <type:modifier pos:line="456" pos:column="23">*</type:modifier></type> <name pos:line="456" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="457" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="457" pos:column="24">__RPC__in_opt</name> <name pos:line="457" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="457" pos:column="53">*</type:modifier></type><name pos:line="457" pos:column="54">in_pProgram</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="459" pos:column="9">HRESULT</name></type> ( <name pos:line="459" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="459" pos:column="37">*</type:modifier><name pos:line="459" pos:column="38">LeaveDebuggingSession</name> )<parameter_list pos:line="459" pos:column="61">( 
            <param><decl><type><name pos:line="460" pos:column="13">IDebugENC</name> <type:modifier pos:line="460" pos:column="23">*</type:modifier></type> <name pos:line="460" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="462" pos:column="9">HRESULT</name></type> ( <name pos:line="462" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="462" pos:column="37">*</type:modifier><name pos:line="462" pos:column="38">AdviseENCStateEvents</name> )<parameter_list pos:line="462" pos:column="60">( 
            <param><decl><type><name pos:line="463" pos:column="13">IDebugENC</name> <type:modifier pos:line="463" pos:column="23">*</type:modifier></type> <name pos:line="463" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="464" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="464" pos:column="24">__RPC__in_opt</name> <name pos:line="464" pos:column="38">IDebugENCStateEvents</name> <type:modifier pos:line="464" pos:column="59">*</type:modifier></type><name pos:line="464" pos:column="60">in_pENCStateEvents</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="466" pos:column="9">HRESULT</name></type> ( <name pos:line="466" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="466" pos:column="37">*</type:modifier><name pos:line="466" pos:column="38">UnadviseENCStateEvents</name> )<parameter_list pos:line="466" pos:column="62">( 
            <param><decl><type><name pos:line="467" pos:column="13">IDebugENC</name> <type:modifier pos:line="467" pos:column="23">*</type:modifier></type> <name pos:line="467" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="468" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="468" pos:column="24">__RPC__in_opt</name> <name pos:line="468" pos:column="38">IDebugENCStateEvents</name> <type:modifier pos:line="468" pos:column="59">*</type:modifier></type><name pos:line="468" pos:column="60">in_pENCStateEvents</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="470" pos:column="9">HRESULT</name></type> ( <name pos:line="470" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="470" pos:column="37">*</type:modifier><name pos:line="470" pos:column="38">GetFileName</name> )<parameter_list pos:line="470" pos:column="51">( 
            <param><decl><type><name pos:line="471" pos:column="13">IDebugENC</name> <type:modifier pos:line="471" pos:column="23">*</type:modifier></type> <name pos:line="471" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="472" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="472" pos:column="24">__RPC__in</name> <name pos:line="472" pos:column="34">LPCOLESTR</name></type> <name pos:line="472" pos:column="44">in_szURL</name></decl></param>,
            <comment type="block" pos:line="473" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="473" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="473" pos:column="46">BSTR</name> <type:modifier pos:line="473" pos:column="51">*</type:modifier></type><name pos:line="473" pos:column="52">out_pbstrFileName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="475" pos:column="9">HRESULT</name></type> ( <name pos:line="475" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="475" pos:column="37">*</type:modifier><name pos:line="475" pos:column="38">GetFileDisplayName</name> )<parameter_list pos:line="475" pos:column="58">( 
            <param><decl><type><name pos:line="476" pos:column="13">IDebugENC</name> <type:modifier pos:line="476" pos:column="23">*</type:modifier></type> <name pos:line="476" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="477" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="477" pos:column="24">__RPC__in</name> <name pos:line="477" pos:column="34">LPCOLESTR</name></type> <name pos:line="477" pos:column="44">in_szURL</name></decl></param>,
            <comment type="block" pos:line="478" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="478" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="478" pos:column="46">BSTR</name> <type:modifier pos:line="478" pos:column="51">*</type:modifier></type><name pos:line="478" pos:column="52">out_pbstrDisplayFileName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="480" pos:column="9">HRESULT</name></type> ( <name pos:line="480" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="480" pos:column="37">*</type:modifier><name pos:line="480" pos:column="38">ClearENCState</name> )<parameter_list pos:line="480" pos:column="53">( 
            <param><decl><type><name pos:line="481" pos:column="13">IDebugENC</name> <type:modifier pos:line="481" pos:column="23">*</type:modifier></type> <name pos:line="481" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="483" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="484" pos:column="7">IDebugENCVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="486" pos:column="5">interface</name></type> <name pos:line="486" pos:column="15">IDebugENC</name>
    <argument_list pos:line="487" pos:column="5">{
        <argument><expr><name pos:line="488" pos:column="9">CONST_VTBL</name> struct <name pos:line="488" pos:column="27">IDebugENCVtbl</name> <op:operator pos:line="488" pos:column="41">*</op:operator><name pos:line="488" pos:column="42">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="493" pos:column="1">#<cpp:directive pos:line="493" pos:column="2">ifdef</cpp:directive> <name pos:line="493" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="496" pos:column="1">#<cpp:directive pos:line="496" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="496" pos:column="9">IDebugENC_QueryInterface</name><parameter_list pos:line="496" pos:column="33">(<param><type><name pos:line="496" pos:column="34">This</name></type></param>,<param><type><name pos:line="496" pos:column="39">riid</name></type></param>,<param><type><name pos:line="496" pos:column="44">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="497" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="499" pos:column="1">#<cpp:directive pos:line="499" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="499" pos:column="9">IDebugENC_AddRef</name><parameter_list pos:line="499" pos:column="25">(<param><type><name pos:line="499" pos:column="26">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="500" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="502" pos:column="1">#<cpp:directive pos:line="502" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="502" pos:column="9">IDebugENC_Release</name><parameter_list pos:line="502" pos:column="26">(<param><type><name pos:line="502" pos:column="27">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="503" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="506" pos:column="1">#<cpp:directive pos:line="506" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="506" pos:column="9">IDebugENC_SetRegistryRoot</name><parameter_list pos:line="506" pos:column="34">(<param><type><name pos:line="506" pos:column="35">This</name></type></param>,<param><type><name pos:line="506" pos:column="40">in_szRegistryRoot</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="507" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetRegistryRoot(This,in_szRegistryRoot) )</cpp:value></cpp:define> 

<cpp:define pos:line="509" pos:column="1">#<cpp:directive pos:line="509" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="509" pos:column="9">IDebugENC_EnterDebuggingSession</name><parameter_list pos:line="509" pos:column="40">(<param><type><name pos:line="509" pos:column="41">This</name></type></param>,<param><type><name pos:line="509" pos:column="46">in_pServiceProvider</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="510" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnterDebuggingSession(This,in_pServiceProvider) )</cpp:value></cpp:define> 

<cpp:define pos:line="512" pos:column="1">#<cpp:directive pos:line="512" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="512" pos:column="9">IDebugENC_SetENCProjectBuildOption</name><parameter_list pos:line="512" pos:column="43">(<param><type><name pos:line="512" pos:column="44">This</name></type></param>,<param><type><name pos:line="512" pos:column="49">in_guidOption</name></type></param>,<param><type><name pos:line="512" pos:column="63">in_szOptionValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="513" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetENCProjectBuildOption(This,in_guidOption,in_szOptionValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="515" pos:column="1">#<cpp:directive pos:line="515" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="515" pos:column="9">IDebugENC_InquireENCState</name><parameter_list pos:line="515" pos:column="34">(<param><type><name pos:line="515" pos:column="35">This</name></type></param>,<param><type><name pos:line="515" pos:column="40">in_pENCSTATE</name></type></param>,<param><type><name pos:line="515" pos:column="53">fOnContinue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="516" pos:column="5">( (This)-&gt;lpVtbl -&gt; InquireENCState(This,in_pENCSTATE,fOnContinue) )</cpp:value></cpp:define> 

<cpp:define pos:line="518" pos:column="1">#<cpp:directive pos:line="518" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="518" pos:column="9">IDebugENC_InquireENCRelinkState</name><parameter_list pos:line="518" pos:column="40">(<param><type><name pos:line="518" pos:column="41">This</name></type></param>,<param><type><name pos:line="518" pos:column="46">in_pbENCRelinking</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="519" pos:column="5">( (This)-&gt;lpVtbl -&gt; InquireENCRelinkState(This,in_pbENCRelinking) )</cpp:value></cpp:define> 

<cpp:define pos:line="521" pos:column="1">#<cpp:directive pos:line="521" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="521" pos:column="9">IDebugENC_MapToEdited</name><parameter_list pos:line="521" pos:column="30">(<param><type><name pos:line="521" pos:column="31">This</name></type></param>,<param><type><name pos:line="521" pos:column="36">in_szFile</name></type></param>,<param><type><name pos:line="521" pos:column="46">in_LineNo</name></type></param>,<param><type><name pos:line="521" pos:column="56">in_ColumnNo</name></type></param>,<param><type><name pos:line="521" pos:column="68">out_pLineNo</name></type></param>,<param><type><name pos:line="521" pos:column="80">out_pColumnNo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="522" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapToEdited(This,in_szFile,in_LineNo,in_ColumnNo,out_pLineNo,out_pColumnNo) )</cpp:value></cpp:define> 

<cpp:define pos:line="524" pos:column="1">#<cpp:directive pos:line="524" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="524" pos:column="9">IDebugENC_MapToSuperceded</name><parameter_list pos:line="524" pos:column="34">(<param><type><name pos:line="524" pos:column="35">This</name></type></param>,<param><type><name pos:line="524" pos:column="40">in_szFile</name></type></param>,<param><type><name pos:line="524" pos:column="50">in_LineNo</name></type></param>,<param><type><name pos:line="524" pos:column="60">in_ColumnNo</name></type></param>,<param><type><name pos:line="524" pos:column="72">out_pLineNo</name></type></param>,<param><type><name pos:line="524" pos:column="84">out_pColumnNo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="525" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapToSuperceded(This,in_szFile,in_LineNo,in_ColumnNo,out_pLineNo,out_pColumnNo) )</cpp:value></cpp:define> 

<cpp:define pos:line="527" pos:column="1">#<cpp:directive pos:line="527" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="527" pos:column="9">IDebugENC_ApplyCodeChanges</name><parameter_list pos:line="527" pos:column="35">(<param><type><name pos:line="527" pos:column="36">This</name></type></param>,<param><type><name pos:line="527" pos:column="41">in_pSession</name></type></param>,<param><type><name pos:line="527" pos:column="53">in_fOnContinue</name></type></param>,<param><type><name pos:line="527" pos:column="68">result</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="528" pos:column="5">( (This)-&gt;lpVtbl -&gt; ApplyCodeChanges(This,in_pSession,in_fOnContinue,result) )</cpp:value></cpp:define> 

<cpp:define pos:line="530" pos:column="1">#<cpp:directive pos:line="530" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="530" pos:column="9">IDebugENC_CancelApplyCodeChanges</name><parameter_list pos:line="530" pos:column="41">(<param><type><name pos:line="530" pos:column="42">This</name></type></param>,<param><type><name pos:line="530" pos:column="47">in_pProgram</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="531" pos:column="5">( (This)-&gt;lpVtbl -&gt; CancelApplyCodeChanges(This,in_pProgram) )</cpp:value></cpp:define> 

<cpp:define pos:line="533" pos:column="1">#<cpp:directive pos:line="533" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="533" pos:column="9">IDebugENC_LeaveDebuggingSession</name><parameter_list pos:line="533" pos:column="40">(<param><type><name pos:line="533" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="534" pos:column="5">( (This)-&gt;lpVtbl -&gt; LeaveDebuggingSession(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="536" pos:column="1">#<cpp:directive pos:line="536" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="536" pos:column="9">IDebugENC_AdviseENCStateEvents</name><parameter_list pos:line="536" pos:column="39">(<param><type><name pos:line="536" pos:column="40">This</name></type></param>,<param><type><name pos:line="536" pos:column="45">in_pENCStateEvents</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="537" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseENCStateEvents(This,in_pENCStateEvents) )</cpp:value></cpp:define> 

<cpp:define pos:line="539" pos:column="1">#<cpp:directive pos:line="539" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="539" pos:column="9">IDebugENC_UnadviseENCStateEvents</name><parameter_list pos:line="539" pos:column="41">(<param><type><name pos:line="539" pos:column="42">This</name></type></param>,<param><type><name pos:line="539" pos:column="47">in_pENCStateEvents</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="540" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseENCStateEvents(This,in_pENCStateEvents) )</cpp:value></cpp:define> 

<cpp:define pos:line="542" pos:column="1">#<cpp:directive pos:line="542" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="542" pos:column="9">IDebugENC_GetFileName</name><parameter_list pos:line="542" pos:column="30">(<param><type><name pos:line="542" pos:column="31">This</name></type></param>,<param><type><name pos:line="542" pos:column="36">in_szURL</name></type></param>,<param><type><name pos:line="542" pos:column="45">out_pbstrFileName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="543" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFileName(This,in_szURL,out_pbstrFileName) )</cpp:value></cpp:define> 

<cpp:define pos:line="545" pos:column="1">#<cpp:directive pos:line="545" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="545" pos:column="9">IDebugENC_GetFileDisplayName</name><parameter_list pos:line="545" pos:column="37">(<param><type><name pos:line="545" pos:column="38">This</name></type></param>,<param><type><name pos:line="545" pos:column="43">in_szURL</name></type></param>,<param><type><name pos:line="545" pos:column="52">out_pbstrDisplayFileName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="546" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFileDisplayName(This,in_szURL,out_pbstrDisplayFileName) )</cpp:value></cpp:define> 

<cpp:define pos:line="548" pos:column="1">#<cpp:directive pos:line="548" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="548" pos:column="9">IDebugENC_ClearENCState</name><parameter_list pos:line="548" pos:column="32">(<param><type><name pos:line="548" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="549" pos:column="5">( (This)-&gt;lpVtbl -&gt; ClearENCState(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="551" pos:column="1">#<cpp:directive pos:line="551" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="551" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="554" pos:column="1">#<cpp:directive pos:line="554" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="554" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="559" pos:column="1">#<cpp:directive pos:line="559" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="559" pos:column="9">/* __IDebugENC_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="562" pos:column="1">/* interface __MIDL_itf_enc_0000_0001 */</comment>
<comment type="block" pos:line="563" pos:column="1">/* [local] */</comment> 


<enum pos:line="566" pos:column="1">enum <name pos:line="566" pos:column="6">tagEncApplyModel</name>
    <block pos:line="567" pos:column="5">{	<decl><name pos:line="567" pos:column="9">ENCAM_NONE</name>	<init pos:line="567" pos:column="25">= <expr><lit:literal type="number" pos:line="567" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="567" pos:column="28">,</op:operator>
	<decl><name pos:line="568" pos:column="9">ENCAM_ANY</name>	<init pos:line="568" pos:column="25">= <expr><op:operator pos:line="568" pos:column="27">(</op:operator> <name pos:line="568" pos:column="29">ENCAM_NONE</name> <op:operator pos:line="568" pos:column="40">+</op:operator> <lit:literal type="number" pos:line="568" pos:column="42">1</lit:literal> <op:operator pos:line="568" pos:column="44">)</op:operator></expr></init></decl> <op:operator pos:line="568" pos:column="46">,</op:operator>
	<decl><name pos:line="569" pos:column="9">ENCAM_ONCONTINUE</name>	<init pos:line="569" pos:column="33">= <expr><op:operator pos:line="569" pos:column="35">(</op:operator> <name pos:line="569" pos:column="37">ENCAM_ANY</name> <op:operator pos:line="569" pos:column="47">+</op:operator> <lit:literal type="number" pos:line="569" pos:column="49">1</lit:literal> <op:operator pos:line="569" pos:column="51">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="571" pos:column="1">typedef <type><enum pos:line="571" pos:column="9">enum <name pos:line="571" pos:column="14">tagEncApplyModel</name> <name pos:line="571" pos:column="31">EncApplyModel</name>;</enum></type></typedef>


<enum pos:line="574" pos:column="1">enum <name pos:line="574" pos:column="6">tagEncEditState</name>
    <block pos:line="575" pos:column="5">{	<decl><name pos:line="575" pos:column="9">ENCES_NO_EDITS_PENDING</name>	<init pos:line="575" pos:column="33">= <expr><lit:literal type="number" pos:line="575" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="575" pos:column="36">,</op:operator>
	<decl><name pos:line="576" pos:column="9">ENCES_VALID_EDITS</name>	<init pos:line="576" pos:column="33">= <expr><op:operator pos:line="576" pos:column="35">(</op:operator> <name pos:line="576" pos:column="37">ENCES_NO_EDITS_PENDING</name> <op:operator pos:line="576" pos:column="60">+</op:operator> <lit:literal type="number" pos:line="576" pos:column="62">1</lit:literal> <op:operator pos:line="576" pos:column="64">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="578" pos:column="1">typedef <type><enum pos:line="578" pos:column="9">enum <name pos:line="578" pos:column="14">tagEncEditState</name> <name pos:line="578" pos:column="30">EncEditState</name>;</enum></type></typedef>


<enum pos:line="581" pos:column="1">enum <name pos:line="581" pos:column="6">tagEncBreakReason</name>
    <block pos:line="582" pos:column="5">{	<decl><name pos:line="582" pos:column="9">ENCBR_NORMAL</name>	<init pos:line="582" pos:column="25">= <expr><lit:literal type="number" pos:line="582" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="582" pos:column="28">,</op:operator>
	<decl><name pos:line="583" pos:column="9">ENCBR_EXCEPTION</name>	<init pos:line="583" pos:column="25">= <expr><op:operator pos:line="583" pos:column="27">(</op:operator> <name pos:line="583" pos:column="29">ENCBR_NORMAL</name> <op:operator pos:line="583" pos:column="42">+</op:operator> <lit:literal type="number" pos:line="583" pos:column="44">1</lit:literal> <op:operator pos:line="583" pos:column="46">)</op:operator></expr></init></decl> 
    }</block> ;</enum>
<typedef pos:line="585" pos:column="1">typedef <type><enum pos:line="585" pos:column="9">enum <name pos:line="585" pos:column="14">tagEncBreakReason</name> <name pos:line="585" pos:column="32">EncBreakReason</name>;</enum></type></typedef>



<decl_stmt><decl><type><specifier pos:line="589" pos:column="1">extern</specifier> <name pos:line="589" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="589" pos:column="22">__MIDL_itf_enc_0000_0001_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="590" pos:column="1">extern</specifier> <name pos:line="590" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="590" pos:column="22">__MIDL_itf_enc_0000_0001_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="592" pos:column="1">#<cpp:directive pos:line="592" pos:column="2">ifndef</cpp:directive> <name pos:line="592" pos:column="9">__IDebugENC2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="593" pos:column="1">#<cpp:directive pos:line="593" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="593" pos:column="9">__IDebugENC2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="595" pos:column="1">/* interface IDebugENC2 */</comment>
<comment type="block" pos:line="596" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="599" pos:column="1">EXTERN_C</name> <specifier pos:line="599" pos:column="10">const</specifier> <name pos:line="599" pos:column="16">IID</name></type> <name pos:line="599" pos:column="20">IID_IDebugENC2</name></decl>;</decl_stmt>

<cpp:if pos:line="601" pos:column="1">#<cpp:directive pos:line="601" pos:column="2">if</cpp:directive> <expr><call><name pos:line="601" pos:column="5">defined</name><argument_list pos:line="601" pos:column="12">(<argument><expr><name pos:line="601" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="601" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="601" pos:column="29">!</op:operator><call><name pos:line="601" pos:column="30">defined</name><argument_list pos:line="601" pos:column="37">(<argument><expr><name pos:line="601" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="603" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="603" pos:column="19">(<argument pos:line="603" pos:column="20">"54B61A02-4823-42ec-9648-A9AE80CDA270"</argument>)</argument_list></macro>
    <label><name pos:line="604" pos:column="5">IDebugENC2</name> :</label> <expr_stmt><expr pos:line="604" pos:column="18">public <name pos:line="604" pos:column="25">IDebugENC</name>
    <block pos:line="605" pos:column="5">{
    <expr pos:line="606" pos:column="5">public<op:operator pos:line="606" pos:column="11">:</op:operator>
        virtual <name pos:line="607" pos:column="17">HRESULT</name> <name pos:line="607" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="607" pos:column="43">GetENCApplyModel</name><argument_list pos:line="607" pos:column="59">( 
            <comment type="block" pos:line="608" pos:column="13">/* [in] */</comment> <argument pos:line="608" pos:column="24">__RPC__in EncApplyModel *pEncApplyModel</argument>)</argument_list></macro> <op:operator pos:line="608" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="608" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="610" pos:column="9">virtual <name pos:line="610" pos:column="17">HRESULT</name> <name pos:line="610" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="610" pos:column="43">GetEditState</name><argument_list pos:line="610" pos:column="55">( 
            <comment type="block" pos:line="611" pos:column="13">/* [in] */</comment> <argument pos:line="611" pos:column="24">__RPC__in EncEditState *pEditState</argument>)</argument_list></macro> <op:operator pos:line="611" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="611" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="613" pos:column="9">virtual <name pos:line="613" pos:column="17">HRESULT</name> <name pos:line="613" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="613" pos:column="43">CurrentPositionFromOriginal</name><argument_list pos:line="613" pos:column="70">( 
            <comment type="block" pos:line="614" pos:column="13">/* [in] */</comment> <argument pos:line="614" pos:column="24">__RPC__in LPCOLESTR in_szFile</argument>,
            <comment type="block" pos:line="615" pos:column="13">/* [in] */</comment> <argument pos:line="615" pos:column="24">ULONG in_LineNo</argument>,
            <comment type="block" pos:line="616" pos:column="13">/* [in] */</comment> <argument pos:line="616" pos:column="24">ULONG in_ColumnNo</argument>,
            <comment type="block" pos:line="617" pos:column="13">/* [in] */</comment> <argument pos:line="617" pos:column="24">ULONG in_LineNoEnd</argument>,
            <comment type="block" pos:line="618" pos:column="13">/* [in] */</comment> <argument pos:line="618" pos:column="24">ULONG in_ColumnNoEnd</argument>,
            <comment type="block" pos:line="619" pos:column="13">/* [out] */</comment> <argument pos:line="619" pos:column="25">__RPC__out ULONG *out_pLineNo</argument>,
            <comment type="block" pos:line="620" pos:column="13">/* [out] */</comment> <argument pos:line="620" pos:column="25">__RPC__out ULONG *out_pColumnNo</argument>,
            <comment type="block" pos:line="621" pos:column="13">/* [out] */</comment> <argument pos:line="621" pos:column="25">__RPC__out ULONG *out_pLineNoEnd</argument>,
            <comment type="block" pos:line="622" pos:column="13">/* [out] */</comment> <argument pos:line="622" pos:column="25">__RPC__out ULONG *out_pColumnNoEnd</argument>)</argument_list></macro> <op:operator pos:line="622" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="622" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="624" pos:column="9">virtual <name pos:line="624" pos:column="17">HRESULT</name> <name pos:line="624" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="624" pos:column="43">AreCodeContextsValid</name><argument_list pos:line="624" pos:column="63">( 
            <comment type="block" pos:line="625" pos:column="13">/* [in] */</comment> <argument pos:line="625" pos:column="24">__RPC__in LPCOLESTR in_szFile</argument>)</argument_list></macro> <op:operator pos:line="625" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="625" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="627" pos:column="9">virtual <name pos:line="627" pos:column="17">HRESULT</name> <name pos:line="627" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="627" pos:column="43">WaitForENCRelink</name><argument_list pos:line="627" pos:column="59">( <argument><expr><name pos:line="627" pos:column="61">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="627" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="627" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="629" pos:column="9">virtual <name pos:line="629" pos:column="17">HRESULT</name> <name pos:line="629" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="629" pos:column="43">EncCanIgnoreErrors</name><argument_list pos:line="629" pos:column="61">( 
            <comment type="block" pos:line="630" pos:column="13">/* [out] */</comment> <argument pos:line="630" pos:column="25">__RPC__out BOOL *pfCanIgnoreErrors</argument>)</argument_list></macro> <op:operator pos:line="630" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="630" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="632" pos:column="9">virtual <name pos:line="632" pos:column="17">HRESULT</name> <name pos:line="632" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="632" pos:column="43">SetLocale</name><argument_list pos:line="632" pos:column="52">( 
            <comment type="block" pos:line="633" pos:column="13">/* [in] */</comment> <argument pos:line="633" pos:column="24">WORD wLangID</argument>)</argument_list></macro> <op:operator pos:line="633" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="633" pos:column="40">0</lit:literal></expr>;
        
        <expr pos:line="635" pos:column="9">virtual <name pos:line="635" pos:column="17">HRESULT</name> <name pos:line="635" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="635" pos:column="43">ApplyCodeChanges2</name><argument_list pos:line="635" pos:column="60">( 
            <comment type="block" pos:line="636" pos:column="13">/* [in] */</comment> <argument pos:line="636" pos:column="24">__RPC__in_opt IDebugSession2 *in_pSession</argument>,
            <comment type="block" pos:line="637" pos:column="13">/* [in] */</comment> <argument pos:line="637" pos:column="24">BOOL in_fOnContinue</argument>,
            <comment type="block" pos:line="638" pos:column="13">/* [in] */</comment> <argument pos:line="638" pos:column="24">ULONG ulLineHint</argument>,
            <comment type="block" pos:line="639" pos:column="13">/* [in] */</comment> <argument pos:line="639" pos:column="24">ULONG ulColHint</argument>,
            <comment type="block" pos:line="640" pos:column="13">/* [out] */</comment> <argument pos:line="640" pos:column="25">__RPC__out ApplyCodeChangesResult *result</argument>)</argument_list></macro> <op:operator pos:line="640" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="640" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="642" pos:column="9">virtual <name pos:line="642" pos:column="17">HRESULT</name> <name pos:line="642" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="642" pos:column="43">EnterBreakState</name><argument_list pos:line="642" pos:column="58">( 
            <comment type="block" pos:line="643" pos:column="13">/* [in] */</comment> <argument pos:line="643" pos:column="24">__RPC__in_opt IDebugSession2 *pProg</argument>,
            <comment type="block" pos:line="644" pos:column="13">/* [in] */</comment> <argument pos:line="644" pos:column="24">EncBreakReason breakReason</argument>)</argument_list></macro> <op:operator pos:line="644" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="644" pos:column="54">0</lit:literal></expr>;
        
        <expr pos:line="646" pos:column="9">virtual <name pos:line="646" pos:column="17">HRESULT</name> <name pos:line="646" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="646" pos:column="43">ExitBreakState</name><argument_list pos:line="646" pos:column="57">( <argument><expr><name pos:line="646" pos:column="59">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="646" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="646" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="648" pos:column="9">virtual <name pos:line="648" pos:column="17">HRESULT</name> <name pos:line="648" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="648" pos:column="43">SetStoppingModel</name><argument_list pos:line="648" pos:column="59">( 
            <comment type="block" pos:line="649" pos:column="13">/* [in] */</comment> <argument pos:line="649" pos:column="24">DWORD dwStoppingModel</argument>)</argument_list></macro> <op:operator pos:line="649" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="649" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="651" pos:column="9">virtual <name pos:line="651" pos:column="17">HRESULT</name> <name pos:line="651" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="651" pos:column="43">CheckEncAvailableForProject</name><argument_list pos:line="651" pos:column="70">( 
            <comment type="block" pos:line="652" pos:column="13">/* [in] */</comment> <argument pos:line="652" pos:column="24">__RPC__in_opt IDebugSession2 *pProg</argument>,
            <comment type="block" pos:line="653" pos:column="13">/* [in] */</comment> <argument pos:line="653" pos:column="24">__RPC__in_opt IUnknown *pProject</argument>)</argument_list></macro> <op:operator pos:line="653" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="653" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="655" pos:column="9">virtual <name pos:line="655" pos:column="17">HRESULT</name> <name pos:line="655" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="655" pos:column="43">IsLeafRemapPossible</name><argument_list pos:line="655" pos:column="62">( 
            <comment type="block" pos:line="656" pos:column="13">/* [in] */</comment> <argument pos:line="656" pos:column="24">__RPC__in LPCOLESTR in_szFile</argument>,
            <comment type="block" pos:line="657" pos:column="13">/* [in] */</comment> <argument pos:line="657" pos:column="24">ULONG in_LineNo</argument>,
            <comment type="block" pos:line="658" pos:column="13">/* [in] */</comment> <argument pos:line="658" pos:column="24">ULONG in_ColumnNo</argument>,
            <comment type="block" pos:line="659" pos:column="13">/* [in] */</comment> <argument pos:line="659" pos:column="24">ULONG in_LineNoEnd</argument>,
            <comment type="block" pos:line="660" pos:column="13">/* [in] */</comment> <argument pos:line="660" pos:column="24">ULONG in_ColumnNoEnd</argument>)</argument_list></macro> <op:operator pos:line="660" pos:column="46">=</op:operator> <lit:literal type="number" pos:line="660" pos:column="48">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="664" pos:column="1">#<cpp:directive pos:line="664" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="664" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="666" pos:column="5">typedef <type><struct pos:line="666" pos:column="13">struct <name pos:line="666" pos:column="20">IDebugENC2Vtbl</name>
    <block pos:line="667" pos:column="5">{<public type="default" pos:line="667" pos:column="6">
        <function_decl><type><name pos:line="668" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="670" pos:column="9">HRESULT</name></type> ( <name pos:line="670" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="670" pos:column="37">*</type:modifier><name pos:line="670" pos:column="38">QueryInterface</name> )<parameter_list pos:line="670" pos:column="54">( 
            <param><decl><type><name pos:line="671" pos:column="13">IDebugENC2</name> <type:modifier pos:line="671" pos:column="24">*</type:modifier></type> <name pos:line="671" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="672" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="672" pos:column="24">__RPC__in</name> <name pos:line="672" pos:column="34">REFIID</name></type> <name pos:line="672" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="673" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="674" pos:column="13">__RPC__deref_out</name>  <name pos:line="674" pos:column="31">void</name> <type:modifier pos:line="674" pos:column="36">*</type:modifier><type:modifier pos:line="674" pos:column="37">*</type:modifier></type><name pos:line="674" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="676" pos:column="9">ULONG</name></type> ( <name pos:line="676" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="676" pos:column="35">*</type:modifier><name pos:line="676" pos:column="36">AddRef</name> )<parameter_list pos:line="676" pos:column="44">( 
            <param><decl><type><name pos:line="677" pos:column="13">IDebugENC2</name> <type:modifier pos:line="677" pos:column="24">*</type:modifier></type> <name pos:line="677" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="679" pos:column="9">ULONG</name></type> ( <name pos:line="679" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="679" pos:column="35">*</type:modifier><name pos:line="679" pos:column="36">Release</name> )<parameter_list pos:line="679" pos:column="45">( 
            <param><decl><type><name pos:line="680" pos:column="13">IDebugENC2</name> <type:modifier pos:line="680" pos:column="24">*</type:modifier></type> <name pos:line="680" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="682" pos:column="9">HRESULT</name></type> ( <name pos:line="682" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="682" pos:column="37">*</type:modifier><name pos:line="682" pos:column="38">SetRegistryRoot</name> )<parameter_list pos:line="682" pos:column="55">( 
            <param><decl><type><name pos:line="683" pos:column="13">IDebugENC2</name> <type:modifier pos:line="683" pos:column="24">*</type:modifier></type> <name pos:line="683" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="684" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="684" pos:column="24">__RPC__in</name> <name pos:line="684" pos:column="34">LPCOLESTR</name></type> <name pos:line="684" pos:column="44">in_szRegistryRoot</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="686" pos:column="9">HRESULT</name></type> ( <name pos:line="686" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="686" pos:column="37">*</type:modifier><name pos:line="686" pos:column="38">EnterDebuggingSession</name> )<parameter_list pos:line="686" pos:column="61">( 
            <param><decl><type><name pos:line="687" pos:column="13">IDebugENC2</name> <type:modifier pos:line="687" pos:column="24">*</type:modifier></type> <name pos:line="687" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="688" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="688" pos:column="24">__RPC__in_opt</name> <name pos:line="688" pos:column="38">IServiceProvider</name> <type:modifier pos:line="688" pos:column="55">*</type:modifier></type><name pos:line="688" pos:column="56">in_pServiceProvider</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="690" pos:column="9">HRESULT</name></type> ( <name pos:line="690" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="690" pos:column="37">*</type:modifier><name pos:line="690" pos:column="38">SetENCProjectBuildOption</name> )<parameter_list pos:line="690" pos:column="64">( 
            <param><decl><type><name pos:line="691" pos:column="13">IDebugENC2</name> <type:modifier pos:line="691" pos:column="24">*</type:modifier></type> <name pos:line="691" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="692" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="692" pos:column="24">__RPC__in</name> <name pos:line="692" pos:column="34">REFGUID</name></type> <name pos:line="692" pos:column="42">in_guidOption</name></decl></param>,
            <comment type="block" pos:line="693" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="693" pos:column="24">__RPC__in</name> <name pos:line="693" pos:column="34">LPCOLESTR</name></type> <name pos:line="693" pos:column="44">in_szOptionValue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="695" pos:column="9">HRESULT</name></type> ( <name pos:line="695" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="695" pos:column="37">*</type:modifier><name pos:line="695" pos:column="38">InquireENCState</name> )<parameter_list pos:line="695" pos:column="55">( 
            <param><decl><type><name pos:line="696" pos:column="13">IDebugENC2</name> <type:modifier pos:line="696" pos:column="24">*</type:modifier></type> <name pos:line="696" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="697" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="697" pos:column="24">__RPC__in</name> <name pos:line="697" pos:column="34">ENCSTATE</name> <type:modifier pos:line="697" pos:column="43">*</type:modifier></type><name pos:line="697" pos:column="44">in_pENCSTATE</name></decl></param>,
            <comment type="block" pos:line="698" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="698" pos:column="24">BOOL</name></type> <name pos:line="698" pos:column="29">fOnContinue</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="700" pos:column="9">HRESULT</name></type> ( <name pos:line="700" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="700" pos:column="37">*</type:modifier><name pos:line="700" pos:column="38">InquireENCRelinkState</name> )<parameter_list pos:line="700" pos:column="61">( 
            <param><decl><type><name pos:line="701" pos:column="13">IDebugENC2</name> <type:modifier pos:line="701" pos:column="24">*</type:modifier></type> <name pos:line="701" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="702" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="702" pos:column="24">__RPC__in</name> <name pos:line="702" pos:column="34">BOOL</name> <type:modifier pos:line="702" pos:column="39">*</type:modifier></type><name pos:line="702" pos:column="40">in_pbENCRelinking</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="704" pos:column="9">HRESULT</name></type> ( <name pos:line="704" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="704" pos:column="37">*</type:modifier><name pos:line="704" pos:column="38">MapToEdited</name> )<parameter_list pos:line="704" pos:column="51">( 
            <param><decl><type><name pos:line="705" pos:column="13">IDebugENC2</name> <type:modifier pos:line="705" pos:column="24">*</type:modifier></type> <name pos:line="705" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="706" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="706" pos:column="24">__RPC__in</name> <name pos:line="706" pos:column="34">LPCOLESTR</name></type> <name pos:line="706" pos:column="44">in_szFile</name></decl></param>,
            <comment type="block" pos:line="707" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="707" pos:column="24">ULONG</name></type> <name pos:line="707" pos:column="30">in_LineNo</name></decl></param>,
            <comment type="block" pos:line="708" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="708" pos:column="24">ULONG</name></type> <name pos:line="708" pos:column="30">in_ColumnNo</name></decl></param>,
            <comment type="block" pos:line="709" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="709" pos:column="25">__RPC__out</name> <name pos:line="709" pos:column="36">ULONG</name> <type:modifier pos:line="709" pos:column="42">*</type:modifier></type><name pos:line="709" pos:column="43">out_pLineNo</name></decl></param>,
            <comment type="block" pos:line="710" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="710" pos:column="25">__RPC__out</name> <name pos:line="710" pos:column="36">ULONG</name> <type:modifier pos:line="710" pos:column="42">*</type:modifier></type><name pos:line="710" pos:column="43">out_pColumnNo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="712" pos:column="9">HRESULT</name></type> ( <name pos:line="712" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="712" pos:column="37">*</type:modifier><name pos:line="712" pos:column="38">MapToSuperceded</name> )<parameter_list pos:line="712" pos:column="55">( 
            <param><decl><type><name pos:line="713" pos:column="13">IDebugENC2</name> <type:modifier pos:line="713" pos:column="24">*</type:modifier></type> <name pos:line="713" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="714" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="714" pos:column="24">__RPC__in</name> <name pos:line="714" pos:column="34">LPCOLESTR</name></type> <name pos:line="714" pos:column="44">in_szFile</name></decl></param>,
            <comment type="block" pos:line="715" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="715" pos:column="24">ULONG</name></type> <name pos:line="715" pos:column="30">in_LineNo</name></decl></param>,
            <comment type="block" pos:line="716" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="716" pos:column="24">ULONG</name></type> <name pos:line="716" pos:column="30">in_ColumnNo</name></decl></param>,
            <comment type="block" pos:line="717" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="717" pos:column="25">__RPC__out</name> <name pos:line="717" pos:column="36">ULONG</name> <type:modifier pos:line="717" pos:column="42">*</type:modifier></type><name pos:line="717" pos:column="43">out_pLineNo</name></decl></param>,
            <comment type="block" pos:line="718" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="718" pos:column="25">__RPC__out</name> <name pos:line="718" pos:column="36">ULONG</name> <type:modifier pos:line="718" pos:column="42">*</type:modifier></type><name pos:line="718" pos:column="43">out_pColumnNo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="720" pos:column="9">HRESULT</name></type> ( <name pos:line="720" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="720" pos:column="37">*</type:modifier><name pos:line="720" pos:column="38">ApplyCodeChanges</name> )<parameter_list pos:line="720" pos:column="56">( 
            <param><decl><type><name pos:line="721" pos:column="13">IDebugENC2</name> <type:modifier pos:line="721" pos:column="24">*</type:modifier></type> <name pos:line="721" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="722" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="722" pos:column="24">__RPC__in_opt</name> <name pos:line="722" pos:column="38">IDebugSession2</name> <type:modifier pos:line="722" pos:column="53">*</type:modifier></type><name pos:line="722" pos:column="54">in_pSession</name></decl></param>,
            <comment type="block" pos:line="723" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="723" pos:column="24">BOOL</name></type> <name pos:line="723" pos:column="29">in_fOnContinue</name></decl></param>,
            <comment type="block" pos:line="724" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="724" pos:column="25">__RPC__out</name> <name pos:line="724" pos:column="36">ApplyCodeChangesResult</name> <type:modifier pos:line="724" pos:column="59">*</type:modifier></type><name pos:line="724" pos:column="60">result</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="726" pos:column="9">HRESULT</name></type> ( <name pos:line="726" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="726" pos:column="37">*</type:modifier><name pos:line="726" pos:column="38">CancelApplyCodeChanges</name> )<parameter_list pos:line="726" pos:column="62">( 
            <param><decl><type><name pos:line="727" pos:column="13">IDebugENC2</name> <type:modifier pos:line="727" pos:column="24">*</type:modifier></type> <name pos:line="727" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="728" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="728" pos:column="24">__RPC__in_opt</name> <name pos:line="728" pos:column="38">IDebugProgram2</name> <type:modifier pos:line="728" pos:column="53">*</type:modifier></type><name pos:line="728" pos:column="54">in_pProgram</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="730" pos:column="9">HRESULT</name></type> ( <name pos:line="730" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="730" pos:column="37">*</type:modifier><name pos:line="730" pos:column="38">LeaveDebuggingSession</name> )<parameter_list pos:line="730" pos:column="61">( 
            <param><decl><type><name pos:line="731" pos:column="13">IDebugENC2</name> <type:modifier pos:line="731" pos:column="24">*</type:modifier></type> <name pos:line="731" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="733" pos:column="9">HRESULT</name></type> ( <name pos:line="733" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="733" pos:column="37">*</type:modifier><name pos:line="733" pos:column="38">AdviseENCStateEvents</name> )<parameter_list pos:line="733" pos:column="60">( 
            <param><decl><type><name pos:line="734" pos:column="13">IDebugENC2</name> <type:modifier pos:line="734" pos:column="24">*</type:modifier></type> <name pos:line="734" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="735" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="735" pos:column="24">__RPC__in_opt</name> <name pos:line="735" pos:column="38">IDebugENCStateEvents</name> <type:modifier pos:line="735" pos:column="59">*</type:modifier></type><name pos:line="735" pos:column="60">in_pENCStateEvents</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="737" pos:column="9">HRESULT</name></type> ( <name pos:line="737" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="737" pos:column="37">*</type:modifier><name pos:line="737" pos:column="38">UnadviseENCStateEvents</name> )<parameter_list pos:line="737" pos:column="62">( 
            <param><decl><type><name pos:line="738" pos:column="13">IDebugENC2</name> <type:modifier pos:line="738" pos:column="24">*</type:modifier></type> <name pos:line="738" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="739" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="739" pos:column="24">__RPC__in_opt</name> <name pos:line="739" pos:column="38">IDebugENCStateEvents</name> <type:modifier pos:line="739" pos:column="59">*</type:modifier></type><name pos:line="739" pos:column="60">in_pENCStateEvents</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="741" pos:column="9">HRESULT</name></type> ( <name pos:line="741" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="741" pos:column="37">*</type:modifier><name pos:line="741" pos:column="38">GetFileName</name> )<parameter_list pos:line="741" pos:column="51">( 
            <param><decl><type><name pos:line="742" pos:column="13">IDebugENC2</name> <type:modifier pos:line="742" pos:column="24">*</type:modifier></type> <name pos:line="742" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="743" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="743" pos:column="24">__RPC__in</name> <name pos:line="743" pos:column="34">LPCOLESTR</name></type> <name pos:line="743" pos:column="44">in_szURL</name></decl></param>,
            <comment type="block" pos:line="744" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="744" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="744" pos:column="46">BSTR</name> <type:modifier pos:line="744" pos:column="51">*</type:modifier></type><name pos:line="744" pos:column="52">out_pbstrFileName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="746" pos:column="9">HRESULT</name></type> ( <name pos:line="746" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="746" pos:column="37">*</type:modifier><name pos:line="746" pos:column="38">GetFileDisplayName</name> )<parameter_list pos:line="746" pos:column="58">( 
            <param><decl><type><name pos:line="747" pos:column="13">IDebugENC2</name> <type:modifier pos:line="747" pos:column="24">*</type:modifier></type> <name pos:line="747" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="748" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="748" pos:column="24">__RPC__in</name> <name pos:line="748" pos:column="34">LPCOLESTR</name></type> <name pos:line="748" pos:column="44">in_szURL</name></decl></param>,
            <comment type="block" pos:line="749" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="749" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="749" pos:column="46">BSTR</name> <type:modifier pos:line="749" pos:column="51">*</type:modifier></type><name pos:line="749" pos:column="52">out_pbstrDisplayFileName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="751" pos:column="9">HRESULT</name></type> ( <name pos:line="751" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="751" pos:column="37">*</type:modifier><name pos:line="751" pos:column="38">ClearENCState</name> )<parameter_list pos:line="751" pos:column="53">( 
            <param><decl><type><name pos:line="752" pos:column="13">IDebugENC2</name> <type:modifier pos:line="752" pos:column="24">*</type:modifier></type> <name pos:line="752" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="754" pos:column="9">HRESULT</name></type> ( <name pos:line="754" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="754" pos:column="37">*</type:modifier><name pos:line="754" pos:column="38">GetENCApplyModel</name> )<parameter_list pos:line="754" pos:column="56">( 
            <param><decl><type><name pos:line="755" pos:column="13">IDebugENC2</name> <type:modifier pos:line="755" pos:column="24">*</type:modifier></type> <name pos:line="755" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="756" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="756" pos:column="24">__RPC__in</name> <name pos:line="756" pos:column="34">EncApplyModel</name> <type:modifier pos:line="756" pos:column="48">*</type:modifier></type><name pos:line="756" pos:column="49">pEncApplyModel</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="758" pos:column="9">HRESULT</name></type> ( <name pos:line="758" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="758" pos:column="37">*</type:modifier><name pos:line="758" pos:column="38">GetEditState</name> )<parameter_list pos:line="758" pos:column="52">( 
            <param><decl><type><name pos:line="759" pos:column="13">IDebugENC2</name> <type:modifier pos:line="759" pos:column="24">*</type:modifier></type> <name pos:line="759" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="760" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="760" pos:column="24">__RPC__in</name> <name pos:line="760" pos:column="34">EncEditState</name> <type:modifier pos:line="760" pos:column="47">*</type:modifier></type><name pos:line="760" pos:column="48">pEditState</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="762" pos:column="9">HRESULT</name></type> ( <name pos:line="762" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="762" pos:column="37">*</type:modifier><name pos:line="762" pos:column="38">CurrentPositionFromOriginal</name> )<parameter_list pos:line="762" pos:column="67">( 
            <param><decl><type><name pos:line="763" pos:column="13">IDebugENC2</name> <type:modifier pos:line="763" pos:column="24">*</type:modifier></type> <name pos:line="763" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="764" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="764" pos:column="24">__RPC__in</name> <name pos:line="764" pos:column="34">LPCOLESTR</name></type> <name pos:line="764" pos:column="44">in_szFile</name></decl></param>,
            <comment type="block" pos:line="765" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="765" pos:column="24">ULONG</name></type> <name pos:line="765" pos:column="30">in_LineNo</name></decl></param>,
            <comment type="block" pos:line="766" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="766" pos:column="24">ULONG</name></type> <name pos:line="766" pos:column="30">in_ColumnNo</name></decl></param>,
            <comment type="block" pos:line="767" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="767" pos:column="24">ULONG</name></type> <name pos:line="767" pos:column="30">in_LineNoEnd</name></decl></param>,
            <comment type="block" pos:line="768" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="768" pos:column="24">ULONG</name></type> <name pos:line="768" pos:column="30">in_ColumnNoEnd</name></decl></param>,
            <comment type="block" pos:line="769" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="769" pos:column="25">__RPC__out</name> <name pos:line="769" pos:column="36">ULONG</name> <type:modifier pos:line="769" pos:column="42">*</type:modifier></type><name pos:line="769" pos:column="43">out_pLineNo</name></decl></param>,
            <comment type="block" pos:line="770" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="770" pos:column="25">__RPC__out</name> <name pos:line="770" pos:column="36">ULONG</name> <type:modifier pos:line="770" pos:column="42">*</type:modifier></type><name pos:line="770" pos:column="43">out_pColumnNo</name></decl></param>,
            <comment type="block" pos:line="771" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="771" pos:column="25">__RPC__out</name> <name pos:line="771" pos:column="36">ULONG</name> <type:modifier pos:line="771" pos:column="42">*</type:modifier></type><name pos:line="771" pos:column="43">out_pLineNoEnd</name></decl></param>,
            <comment type="block" pos:line="772" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="772" pos:column="25">__RPC__out</name> <name pos:line="772" pos:column="36">ULONG</name> <type:modifier pos:line="772" pos:column="42">*</type:modifier></type><name pos:line="772" pos:column="43">out_pColumnNoEnd</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="774" pos:column="9">HRESULT</name></type> ( <name pos:line="774" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="774" pos:column="37">*</type:modifier><name pos:line="774" pos:column="38">AreCodeContextsValid</name> )<parameter_list pos:line="774" pos:column="60">( 
            <param><decl><type><name pos:line="775" pos:column="13">IDebugENC2</name> <type:modifier pos:line="775" pos:column="24">*</type:modifier></type> <name pos:line="775" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="776" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="776" pos:column="24">__RPC__in</name> <name pos:line="776" pos:column="34">LPCOLESTR</name></type> <name pos:line="776" pos:column="44">in_szFile</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="778" pos:column="9">HRESULT</name></type> ( <name pos:line="778" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="778" pos:column="37">*</type:modifier><name pos:line="778" pos:column="38">WaitForENCRelink</name> )<parameter_list pos:line="778" pos:column="56">( 
            <param><decl><type><name pos:line="779" pos:column="13">IDebugENC2</name> <type:modifier pos:line="779" pos:column="24">*</type:modifier></type> <name pos:line="779" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="781" pos:column="9">HRESULT</name></type> ( <name pos:line="781" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="781" pos:column="37">*</type:modifier><name pos:line="781" pos:column="38">EncCanIgnoreErrors</name> )<parameter_list pos:line="781" pos:column="58">( 
            <param><decl><type><name pos:line="782" pos:column="13">IDebugENC2</name> <type:modifier pos:line="782" pos:column="24">*</type:modifier></type> <name pos:line="782" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="783" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="783" pos:column="25">__RPC__out</name> <name pos:line="783" pos:column="36">BOOL</name> <type:modifier pos:line="783" pos:column="41">*</type:modifier></type><name pos:line="783" pos:column="42">pfCanIgnoreErrors</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="785" pos:column="9">HRESULT</name></type> ( <name pos:line="785" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="785" pos:column="37">*</type:modifier><name pos:line="785" pos:column="38">SetLocale</name> )<parameter_list pos:line="785" pos:column="49">( 
            <param><decl><type><name pos:line="786" pos:column="13">IDebugENC2</name> <type:modifier pos:line="786" pos:column="24">*</type:modifier></type> <name pos:line="786" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="787" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="787" pos:column="24">WORD</name></type> <name pos:line="787" pos:column="29">wLangID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="789" pos:column="9">HRESULT</name></type> ( <name pos:line="789" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="789" pos:column="37">*</type:modifier><name pos:line="789" pos:column="38">ApplyCodeChanges2</name> )<parameter_list pos:line="789" pos:column="57">( 
            <param><decl><type><name pos:line="790" pos:column="13">IDebugENC2</name> <type:modifier pos:line="790" pos:column="24">*</type:modifier></type> <name pos:line="790" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="791" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="791" pos:column="24">__RPC__in_opt</name> <name pos:line="791" pos:column="38">IDebugSession2</name> <type:modifier pos:line="791" pos:column="53">*</type:modifier></type><name pos:line="791" pos:column="54">in_pSession</name></decl></param>,
            <comment type="block" pos:line="792" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="792" pos:column="24">BOOL</name></type> <name pos:line="792" pos:column="29">in_fOnContinue</name></decl></param>,
            <comment type="block" pos:line="793" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="793" pos:column="24">ULONG</name></type> <name pos:line="793" pos:column="30">ulLineHint</name></decl></param>,
            <comment type="block" pos:line="794" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="794" pos:column="24">ULONG</name></type> <name pos:line="794" pos:column="30">ulColHint</name></decl></param>,
            <comment type="block" pos:line="795" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="795" pos:column="25">__RPC__out</name> <name pos:line="795" pos:column="36">ApplyCodeChangesResult</name> <type:modifier pos:line="795" pos:column="59">*</type:modifier></type><name pos:line="795" pos:column="60">result</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="797" pos:column="9">HRESULT</name></type> ( <name pos:line="797" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="797" pos:column="37">*</type:modifier><name pos:line="797" pos:column="38">EnterBreakState</name> )<parameter_list pos:line="797" pos:column="55">( 
            <param><decl><type><name pos:line="798" pos:column="13">IDebugENC2</name> <type:modifier pos:line="798" pos:column="24">*</type:modifier></type> <name pos:line="798" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="799" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="799" pos:column="24">__RPC__in_opt</name> <name pos:line="799" pos:column="38">IDebugSession2</name> <type:modifier pos:line="799" pos:column="53">*</type:modifier></type><name pos:line="799" pos:column="54">pProg</name></decl></param>,
            <comment type="block" pos:line="800" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="800" pos:column="24">EncBreakReason</name></type> <name pos:line="800" pos:column="39">breakReason</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="802" pos:column="9">HRESULT</name></type> ( <name pos:line="802" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="802" pos:column="37">*</type:modifier><name pos:line="802" pos:column="38">ExitBreakState</name> )<parameter_list pos:line="802" pos:column="54">( 
            <param><decl><type><name pos:line="803" pos:column="13">IDebugENC2</name> <type:modifier pos:line="803" pos:column="24">*</type:modifier></type> <name pos:line="803" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="805" pos:column="9">HRESULT</name></type> ( <name pos:line="805" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="805" pos:column="37">*</type:modifier><name pos:line="805" pos:column="38">SetStoppingModel</name> )<parameter_list pos:line="805" pos:column="56">( 
            <param><decl><type><name pos:line="806" pos:column="13">IDebugENC2</name> <type:modifier pos:line="806" pos:column="24">*</type:modifier></type> <name pos:line="806" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="807" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="807" pos:column="24">DWORD</name></type> <name pos:line="807" pos:column="30">dwStoppingModel</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="809" pos:column="9">HRESULT</name></type> ( <name pos:line="809" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="809" pos:column="37">*</type:modifier><name pos:line="809" pos:column="38">CheckEncAvailableForProject</name> )<parameter_list pos:line="809" pos:column="67">( 
            <param><decl><type><name pos:line="810" pos:column="13">IDebugENC2</name> <type:modifier pos:line="810" pos:column="24">*</type:modifier></type> <name pos:line="810" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="811" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="811" pos:column="24">__RPC__in_opt</name> <name pos:line="811" pos:column="38">IDebugSession2</name> <type:modifier pos:line="811" pos:column="53">*</type:modifier></type><name pos:line="811" pos:column="54">pProg</name></decl></param>,
            <comment type="block" pos:line="812" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="812" pos:column="24">__RPC__in_opt</name> <name pos:line="812" pos:column="38">IUnknown</name> <type:modifier pos:line="812" pos:column="47">*</type:modifier></type><name pos:line="812" pos:column="48">pProject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="814" pos:column="9">HRESULT</name></type> ( <name pos:line="814" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="814" pos:column="37">*</type:modifier><name pos:line="814" pos:column="38">IsLeafRemapPossible</name> )<parameter_list pos:line="814" pos:column="59">( 
            <param><decl><type><name pos:line="815" pos:column="13">IDebugENC2</name> <type:modifier pos:line="815" pos:column="24">*</type:modifier></type> <name pos:line="815" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="816" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="816" pos:column="24">__RPC__in</name> <name pos:line="816" pos:column="34">LPCOLESTR</name></type> <name pos:line="816" pos:column="44">in_szFile</name></decl></param>,
            <comment type="block" pos:line="817" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="817" pos:column="24">ULONG</name></type> <name pos:line="817" pos:column="30">in_LineNo</name></decl></param>,
            <comment type="block" pos:line="818" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="818" pos:column="24">ULONG</name></type> <name pos:line="818" pos:column="30">in_ColumnNo</name></decl></param>,
            <comment type="block" pos:line="819" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="819" pos:column="24">ULONG</name></type> <name pos:line="819" pos:column="30">in_LineNoEnd</name></decl></param>,
            <comment type="block" pos:line="820" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="820" pos:column="24">ULONG</name></type> <name pos:line="820" pos:column="30">in_ColumnNoEnd</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="822" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="823" pos:column="7">IDebugENC2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="825" pos:column="5">interface</name></type> <name pos:line="825" pos:column="15">IDebugENC2</name>
    <argument_list pos:line="826" pos:column="5">{
        <argument><expr><name pos:line="827" pos:column="9">CONST_VTBL</name> struct <name pos:line="827" pos:column="27">IDebugENC2Vtbl</name> <op:operator pos:line="827" pos:column="42">*</op:operator><name pos:line="827" pos:column="43">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="832" pos:column="1">#<cpp:directive pos:line="832" pos:column="2">ifdef</cpp:directive> <name pos:line="832" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="835" pos:column="1">#<cpp:directive pos:line="835" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="835" pos:column="9">IDebugENC2_QueryInterface</name><parameter_list pos:line="835" pos:column="34">(<param><type><name pos:line="835" pos:column="35">This</name></type></param>,<param><type><name pos:line="835" pos:column="40">riid</name></type></param>,<param><type><name pos:line="835" pos:column="45">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="836" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="838" pos:column="1">#<cpp:directive pos:line="838" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="838" pos:column="9">IDebugENC2_AddRef</name><parameter_list pos:line="838" pos:column="26">(<param><type><name pos:line="838" pos:column="27">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="839" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="841" pos:column="1">#<cpp:directive pos:line="841" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="841" pos:column="9">IDebugENC2_Release</name><parameter_list pos:line="841" pos:column="27">(<param><type><name pos:line="841" pos:column="28">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="842" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="845" pos:column="1">#<cpp:directive pos:line="845" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="845" pos:column="9">IDebugENC2_SetRegistryRoot</name><parameter_list pos:line="845" pos:column="35">(<param><type><name pos:line="845" pos:column="36">This</name></type></param>,<param><type><name pos:line="845" pos:column="41">in_szRegistryRoot</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="846" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetRegistryRoot(This,in_szRegistryRoot) )</cpp:value></cpp:define> 

<cpp:define pos:line="848" pos:column="1">#<cpp:directive pos:line="848" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="848" pos:column="9">IDebugENC2_EnterDebuggingSession</name><parameter_list pos:line="848" pos:column="41">(<param><type><name pos:line="848" pos:column="42">This</name></type></param>,<param><type><name pos:line="848" pos:column="47">in_pServiceProvider</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="849" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnterDebuggingSession(This,in_pServiceProvider) )</cpp:value></cpp:define> 

<cpp:define pos:line="851" pos:column="1">#<cpp:directive pos:line="851" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="851" pos:column="9">IDebugENC2_SetENCProjectBuildOption</name><parameter_list pos:line="851" pos:column="44">(<param><type><name pos:line="851" pos:column="45">This</name></type></param>,<param><type><name pos:line="851" pos:column="50">in_guidOption</name></type></param>,<param><type><name pos:line="851" pos:column="64">in_szOptionValue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="852" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetENCProjectBuildOption(This,in_guidOption,in_szOptionValue) )</cpp:value></cpp:define> 

<cpp:define pos:line="854" pos:column="1">#<cpp:directive pos:line="854" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="854" pos:column="9">IDebugENC2_InquireENCState</name><parameter_list pos:line="854" pos:column="35">(<param><type><name pos:line="854" pos:column="36">This</name></type></param>,<param><type><name pos:line="854" pos:column="41">in_pENCSTATE</name></type></param>,<param><type><name pos:line="854" pos:column="54">fOnContinue</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="855" pos:column="5">( (This)-&gt;lpVtbl -&gt; InquireENCState(This,in_pENCSTATE,fOnContinue) )</cpp:value></cpp:define> 

<cpp:define pos:line="857" pos:column="1">#<cpp:directive pos:line="857" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="857" pos:column="9">IDebugENC2_InquireENCRelinkState</name><parameter_list pos:line="857" pos:column="41">(<param><type><name pos:line="857" pos:column="42">This</name></type></param>,<param><type><name pos:line="857" pos:column="47">in_pbENCRelinking</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="858" pos:column="5">( (This)-&gt;lpVtbl -&gt; InquireENCRelinkState(This,in_pbENCRelinking) )</cpp:value></cpp:define> 

<cpp:define pos:line="860" pos:column="1">#<cpp:directive pos:line="860" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="860" pos:column="9">IDebugENC2_MapToEdited</name><parameter_list pos:line="860" pos:column="31">(<param><type><name pos:line="860" pos:column="32">This</name></type></param>,<param><type><name pos:line="860" pos:column="37">in_szFile</name></type></param>,<param><type><name pos:line="860" pos:column="47">in_LineNo</name></type></param>,<param><type><name pos:line="860" pos:column="57">in_ColumnNo</name></type></param>,<param><type><name pos:line="860" pos:column="69">out_pLineNo</name></type></param>,<param><type><name pos:line="860" pos:column="81">out_pColumnNo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="861" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapToEdited(This,in_szFile,in_LineNo,in_ColumnNo,out_pLineNo,out_pColumnNo) )</cpp:value></cpp:define> 

<cpp:define pos:line="863" pos:column="1">#<cpp:directive pos:line="863" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="863" pos:column="9">IDebugENC2_MapToSuperceded</name><parameter_list pos:line="863" pos:column="35">(<param><type><name pos:line="863" pos:column="36">This</name></type></param>,<param><type><name pos:line="863" pos:column="41">in_szFile</name></type></param>,<param><type><name pos:line="863" pos:column="51">in_LineNo</name></type></param>,<param><type><name pos:line="863" pos:column="61">in_ColumnNo</name></type></param>,<param><type><name pos:line="863" pos:column="73">out_pLineNo</name></type></param>,<param><type><name pos:line="863" pos:column="85">out_pColumnNo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="864" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapToSuperceded(This,in_szFile,in_LineNo,in_ColumnNo,out_pLineNo,out_pColumnNo) )</cpp:value></cpp:define> 

<cpp:define pos:line="866" pos:column="1">#<cpp:directive pos:line="866" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="866" pos:column="9">IDebugENC2_ApplyCodeChanges</name><parameter_list pos:line="866" pos:column="36">(<param><type><name pos:line="866" pos:column="37">This</name></type></param>,<param><type><name pos:line="866" pos:column="42">in_pSession</name></type></param>,<param><type><name pos:line="866" pos:column="54">in_fOnContinue</name></type></param>,<param><type><name pos:line="866" pos:column="69">result</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="867" pos:column="5">( (This)-&gt;lpVtbl -&gt; ApplyCodeChanges(This,in_pSession,in_fOnContinue,result) )</cpp:value></cpp:define> 

<cpp:define pos:line="869" pos:column="1">#<cpp:directive pos:line="869" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="869" pos:column="9">IDebugENC2_CancelApplyCodeChanges</name><parameter_list pos:line="869" pos:column="42">(<param><type><name pos:line="869" pos:column="43">This</name></type></param>,<param><type><name pos:line="869" pos:column="48">in_pProgram</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="870" pos:column="5">( (This)-&gt;lpVtbl -&gt; CancelApplyCodeChanges(This,in_pProgram) )</cpp:value></cpp:define> 

<cpp:define pos:line="872" pos:column="1">#<cpp:directive pos:line="872" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="872" pos:column="9">IDebugENC2_LeaveDebuggingSession</name><parameter_list pos:line="872" pos:column="41">(<param><type><name pos:line="872" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="873" pos:column="5">( (This)-&gt;lpVtbl -&gt; LeaveDebuggingSession(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="875" pos:column="1">#<cpp:directive pos:line="875" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="875" pos:column="9">IDebugENC2_AdviseENCStateEvents</name><parameter_list pos:line="875" pos:column="40">(<param><type><name pos:line="875" pos:column="41">This</name></type></param>,<param><type><name pos:line="875" pos:column="46">in_pENCStateEvents</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="876" pos:column="5">( (This)-&gt;lpVtbl -&gt; AdviseENCStateEvents(This,in_pENCStateEvents) )</cpp:value></cpp:define> 

<cpp:define pos:line="878" pos:column="1">#<cpp:directive pos:line="878" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="878" pos:column="9">IDebugENC2_UnadviseENCStateEvents</name><parameter_list pos:line="878" pos:column="42">(<param><type><name pos:line="878" pos:column="43">This</name></type></param>,<param><type><name pos:line="878" pos:column="48">in_pENCStateEvents</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="879" pos:column="5">( (This)-&gt;lpVtbl -&gt; UnadviseENCStateEvents(This,in_pENCStateEvents) )</cpp:value></cpp:define> 

<cpp:define pos:line="881" pos:column="1">#<cpp:directive pos:line="881" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="881" pos:column="9">IDebugENC2_GetFileName</name><parameter_list pos:line="881" pos:column="31">(<param><type><name pos:line="881" pos:column="32">This</name></type></param>,<param><type><name pos:line="881" pos:column="37">in_szURL</name></type></param>,<param><type><name pos:line="881" pos:column="46">out_pbstrFileName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="882" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFileName(This,in_szURL,out_pbstrFileName) )</cpp:value></cpp:define> 

<cpp:define pos:line="884" pos:column="1">#<cpp:directive pos:line="884" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="884" pos:column="9">IDebugENC2_GetFileDisplayName</name><parameter_list pos:line="884" pos:column="38">(<param><type><name pos:line="884" pos:column="39">This</name></type></param>,<param><type><name pos:line="884" pos:column="44">in_szURL</name></type></param>,<param><type><name pos:line="884" pos:column="53">out_pbstrDisplayFileName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="885" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFileDisplayName(This,in_szURL,out_pbstrDisplayFileName) )</cpp:value></cpp:define> 

<cpp:define pos:line="887" pos:column="1">#<cpp:directive pos:line="887" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="887" pos:column="9">IDebugENC2_ClearENCState</name><parameter_list pos:line="887" pos:column="33">(<param><type><name pos:line="887" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="888" pos:column="5">( (This)-&gt;lpVtbl -&gt; ClearENCState(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="891" pos:column="1">#<cpp:directive pos:line="891" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="891" pos:column="9">IDebugENC2_GetENCApplyModel</name><parameter_list pos:line="891" pos:column="36">(<param><type><name pos:line="891" pos:column="37">This</name></type></param>,<param><type><name pos:line="891" pos:column="42">pEncApplyModel</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="892" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetENCApplyModel(This,pEncApplyModel) )</cpp:value></cpp:define> 

<cpp:define pos:line="894" pos:column="1">#<cpp:directive pos:line="894" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="894" pos:column="9">IDebugENC2_GetEditState</name><parameter_list pos:line="894" pos:column="32">(<param><type><name pos:line="894" pos:column="33">This</name></type></param>,<param><type><name pos:line="894" pos:column="38">pEditState</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="895" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEditState(This,pEditState) )</cpp:value></cpp:define> 

<cpp:define pos:line="897" pos:column="1">#<cpp:directive pos:line="897" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="897" pos:column="9">IDebugENC2_CurrentPositionFromOriginal</name><parameter_list pos:line="897" pos:column="47">(<param><type><name pos:line="897" pos:column="48">This</name></type></param>,<param><type><name pos:line="897" pos:column="53">in_szFile</name></type></param>,<param><type><name pos:line="897" pos:column="63">in_LineNo</name></type></param>,<param><type><name pos:line="897" pos:column="73">in_ColumnNo</name></type></param>,<param><type><name pos:line="897" pos:column="85">in_LineNoEnd</name></type></param>,<param><type><name pos:line="897" pos:column="98">in_ColumnNoEnd</name></type></param>,<param><type><name pos:line="897" pos:column="113">out_pLineNo</name></type></param>,<param><type><name pos:line="897" pos:column="125">out_pColumnNo</name></type></param>,<param><type><name pos:line="897" pos:column="139">out_pLineNoEnd</name></type></param>,<param><type><name pos:line="897" pos:column="154">out_pColumnNoEnd</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="898" pos:column="5">( (This)-&gt;lpVtbl -&gt; CurrentPositionFromOriginal(This,in_szFile,in_LineNo,in_ColumnNo,in_LineNoEnd,in_ColumnNoEnd,out_pLineNo,out_pColumnNo,out_pLineNoEnd,out_pColumnNoEnd) )</cpp:value></cpp:define> 

<cpp:define pos:line="900" pos:column="1">#<cpp:directive pos:line="900" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="900" pos:column="9">IDebugENC2_AreCodeContextsValid</name><parameter_list pos:line="900" pos:column="40">(<param><type><name pos:line="900" pos:column="41">This</name></type></param>,<param><type><name pos:line="900" pos:column="46">in_szFile</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="901" pos:column="5">( (This)-&gt;lpVtbl -&gt; AreCodeContextsValid(This,in_szFile) )</cpp:value></cpp:define> 

<cpp:define pos:line="903" pos:column="1">#<cpp:directive pos:line="903" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="903" pos:column="9">IDebugENC2_WaitForENCRelink</name><parameter_list pos:line="903" pos:column="36">(<param><type><name pos:line="903" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="904" pos:column="5">( (This)-&gt;lpVtbl -&gt; WaitForENCRelink(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="906" pos:column="1">#<cpp:directive pos:line="906" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="906" pos:column="9">IDebugENC2_EncCanIgnoreErrors</name><parameter_list pos:line="906" pos:column="38">(<param><type><name pos:line="906" pos:column="39">This</name></type></param>,<param><type><name pos:line="906" pos:column="44">pfCanIgnoreErrors</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="907" pos:column="5">( (This)-&gt;lpVtbl -&gt; EncCanIgnoreErrors(This,pfCanIgnoreErrors) )</cpp:value></cpp:define> 

<cpp:define pos:line="909" pos:column="1">#<cpp:directive pos:line="909" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="909" pos:column="9">IDebugENC2_SetLocale</name><parameter_list pos:line="909" pos:column="29">(<param><type><name pos:line="909" pos:column="30">This</name></type></param>,<param><type><name pos:line="909" pos:column="35">wLangID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="910" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetLocale(This,wLangID) )</cpp:value></cpp:define> 

<cpp:define pos:line="912" pos:column="1">#<cpp:directive pos:line="912" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="912" pos:column="9">IDebugENC2_ApplyCodeChanges2</name><parameter_list pos:line="912" pos:column="37">(<param><type><name pos:line="912" pos:column="38">This</name></type></param>,<param><type><name pos:line="912" pos:column="43">in_pSession</name></type></param>,<param><type><name pos:line="912" pos:column="55">in_fOnContinue</name></type></param>,<param><type><name pos:line="912" pos:column="70">ulLineHint</name></type></param>,<param><type><name pos:line="912" pos:column="81">ulColHint</name></type></param>,<param><type><name pos:line="912" pos:column="91">result</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="913" pos:column="5">( (This)-&gt;lpVtbl -&gt; ApplyCodeChanges2(This,in_pSession,in_fOnContinue,ulLineHint,ulColHint,result) )</cpp:value></cpp:define> 

<cpp:define pos:line="915" pos:column="1">#<cpp:directive pos:line="915" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="915" pos:column="9">IDebugENC2_EnterBreakState</name><parameter_list pos:line="915" pos:column="35">(<param><type><name pos:line="915" pos:column="36">This</name></type></param>,<param><type><name pos:line="915" pos:column="41">pProg</name></type></param>,<param><type><name pos:line="915" pos:column="47">breakReason</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="916" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnterBreakState(This,pProg,breakReason) )</cpp:value></cpp:define> 

<cpp:define pos:line="918" pos:column="1">#<cpp:directive pos:line="918" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="918" pos:column="9">IDebugENC2_ExitBreakState</name><parameter_list pos:line="918" pos:column="34">(<param><type><name pos:line="918" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="919" pos:column="5">( (This)-&gt;lpVtbl -&gt; ExitBreakState(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="921" pos:column="1">#<cpp:directive pos:line="921" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="921" pos:column="9">IDebugENC2_SetStoppingModel</name><parameter_list pos:line="921" pos:column="36">(<param><type><name pos:line="921" pos:column="37">This</name></type></param>,<param><type><name pos:line="921" pos:column="42">dwStoppingModel</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="922" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetStoppingModel(This,dwStoppingModel) )</cpp:value></cpp:define> 

<cpp:define pos:line="924" pos:column="1">#<cpp:directive pos:line="924" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="924" pos:column="9">IDebugENC2_CheckEncAvailableForProject</name><parameter_list pos:line="924" pos:column="47">(<param><type><name pos:line="924" pos:column="48">This</name></type></param>,<param><type><name pos:line="924" pos:column="53">pProg</name></type></param>,<param><type><name pos:line="924" pos:column="59">pProject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="925" pos:column="5">( (This)-&gt;lpVtbl -&gt; CheckEncAvailableForProject(This,pProg,pProject) )</cpp:value></cpp:define> 

<cpp:define pos:line="927" pos:column="1">#<cpp:directive pos:line="927" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="927" pos:column="9">IDebugENC2_IsLeafRemapPossible</name><parameter_list pos:line="927" pos:column="39">(<param><type><name pos:line="927" pos:column="40">This</name></type></param>,<param><type><name pos:line="927" pos:column="45">in_szFile</name></type></param>,<param><type><name pos:line="927" pos:column="55">in_LineNo</name></type></param>,<param><type><name pos:line="927" pos:column="65">in_ColumnNo</name></type></param>,<param><type><name pos:line="927" pos:column="77">in_LineNoEnd</name></type></param>,<param><type><name pos:line="927" pos:column="90">in_ColumnNoEnd</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="928" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsLeafRemapPossible(This,in_szFile,in_LineNo,in_ColumnNo,in_LineNoEnd,in_ColumnNoEnd) )</cpp:value></cpp:define> 

<cpp:endif pos:line="930" pos:column="1">#<cpp:directive pos:line="930" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="930" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="933" pos:column="1">#<cpp:directive pos:line="933" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="933" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="938" pos:column="1">#<cpp:directive pos:line="938" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="938" pos:column="9">/* __IDebugENC2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="941" pos:column="1">#<cpp:directive pos:line="941" pos:column="2">ifndef</cpp:directive> <name pos:line="941" pos:column="9">__IDebugENCLineMap_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="942" pos:column="1">#<cpp:directive pos:line="942" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="942" pos:column="9">__IDebugENCLineMap_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="944" pos:column="1">/* interface IDebugENCLineMap */</comment>
<comment type="block" pos:line="945" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="948" pos:column="1">EXTERN_C</name> <specifier pos:line="948" pos:column="10">const</specifier> <name pos:line="948" pos:column="16">IID</name></type> <name pos:line="948" pos:column="20">IID_IDebugENCLineMap</name></decl>;</decl_stmt>

<cpp:if pos:line="950" pos:column="1">#<cpp:directive pos:line="950" pos:column="2">if</cpp:directive> <expr><call><name pos:line="950" pos:column="5">defined</name><argument_list pos:line="950" pos:column="12">(<argument><expr><name pos:line="950" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="950" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="950" pos:column="29">!</op:operator><call><name pos:line="950" pos:column="30">defined</name><argument_list pos:line="950" pos:column="37">(<argument><expr><name pos:line="950" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="952" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="952" pos:column="19">(<argument pos:line="952" pos:column="20">"8706233B-BD4C-11d2-9238-00A02448799A"</argument>)</argument_list></macro>
    <label><name pos:line="953" pos:column="5">IDebugENCLineMap</name> :</label> <expr_stmt><expr pos:line="953" pos:column="24">public <name pos:line="953" pos:column="31">IUnknown</name>
    <block pos:line="954" pos:column="5">{
    <expr pos:line="955" pos:column="5">public<op:operator pos:line="955" pos:column="11">:</op:operator>
        virtual <name pos:line="956" pos:column="17">HRESULT</name> <name pos:line="956" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="956" pos:column="43">GetEditedSource</name><argument_list pos:line="956" pos:column="58">( 
            <comment type="block" pos:line="957" pos:column="13">/* [out] */</comment> <argument pos:line="957" pos:column="25">__RPC__deref_out_opt BSTR *out_pbstrEditedSource</argument>)</argument_list></macro> <op:operator pos:line="957" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="957" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="959" pos:column="9">virtual <name pos:line="959" pos:column="17">HRESULT</name> <name pos:line="959" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="959" pos:column="43">GetSupercededSource</name><argument_list pos:line="959" pos:column="62">( 
            <comment type="block" pos:line="960" pos:column="13">/* [out] */</comment> <argument pos:line="960" pos:column="25">__RPC__deref_out_opt BSTR *out_pbstrSupercededSource</argument>)</argument_list></macro> <op:operator pos:line="960" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="960" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="962" pos:column="9">virtual <name pos:line="962" pos:column="17">HRESULT</name> <name pos:line="962" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="962" pos:column="43">IsLineModified</name><argument_list pos:line="962" pos:column="57">( 
            <comment type="block" pos:line="963" pos:column="13">/* [in] */</comment> <argument pos:line="963" pos:column="24">ULONG in_LineNoFromSupercededSource</argument>)</argument_list></macro> <op:operator pos:line="963" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="963" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="965" pos:column="9">virtual <name pos:line="965" pos:column="17">HRESULT</name> <name pos:line="965" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="965" pos:column="43">LineMap</name><argument_list pos:line="965" pos:column="50">( 
            <comment type="block" pos:line="966" pos:column="13">/* [in] */</comment> <argument pos:line="966" pos:column="24">ULONG in_LineNoFromSupercededSource</argument>,
            <comment type="block" pos:line="967" pos:column="13">/* [out] */</comment> <argument pos:line="967" pos:column="25">__RPC__out ULONG *out_pLineNoFromEditedSource</argument>)</argument_list></macro> <op:operator pos:line="967" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="967" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="969" pos:column="9">virtual <name pos:line="969" pos:column="17">HRESULT</name> <name pos:line="969" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="969" pos:column="43">ReverseLineMap</name><argument_list pos:line="969" pos:column="57">( 
            <comment type="block" pos:line="970" pos:column="13">/* [in] */</comment> <argument pos:line="970" pos:column="24">ULONG in_LineNoFromEditedSource</argument>,
            <comment type="block" pos:line="971" pos:column="13">/* [out] */</comment> <argument pos:line="971" pos:column="25">__RPC__out ULONG *out_pLineNoFromSupercededSource</argument>)</argument_list></macro> <op:operator pos:line="971" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="971" pos:column="78">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="975" pos:column="1">#<cpp:directive pos:line="975" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="975" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="977" pos:column="5">typedef <type><struct pos:line="977" pos:column="13">struct <name pos:line="977" pos:column="20">IDebugENCLineMapVtbl</name>
    <block pos:line="978" pos:column="5">{<public type="default" pos:line="978" pos:column="6">
        <function_decl><type><name pos:line="979" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="981" pos:column="9">HRESULT</name></type> ( <name pos:line="981" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="981" pos:column="37">*</type:modifier><name pos:line="981" pos:column="38">QueryInterface</name> )<parameter_list pos:line="981" pos:column="54">( 
            <param><decl><type><name pos:line="982" pos:column="13">IDebugENCLineMap</name> <type:modifier pos:line="982" pos:column="30">*</type:modifier></type> <name pos:line="982" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="983" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="983" pos:column="24">__RPC__in</name> <name pos:line="983" pos:column="34">REFIID</name></type> <name pos:line="983" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="984" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="985" pos:column="13">__RPC__deref_out</name>  <name pos:line="985" pos:column="31">void</name> <type:modifier pos:line="985" pos:column="36">*</type:modifier><type:modifier pos:line="985" pos:column="37">*</type:modifier></type><name pos:line="985" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="987" pos:column="9">ULONG</name></type> ( <name pos:line="987" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="987" pos:column="35">*</type:modifier><name pos:line="987" pos:column="36">AddRef</name> )<parameter_list pos:line="987" pos:column="44">( 
            <param><decl><type><name pos:line="988" pos:column="13">IDebugENCLineMap</name> <type:modifier pos:line="988" pos:column="30">*</type:modifier></type> <name pos:line="988" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="990" pos:column="9">ULONG</name></type> ( <name pos:line="990" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="990" pos:column="35">*</type:modifier><name pos:line="990" pos:column="36">Release</name> )<parameter_list pos:line="990" pos:column="45">( 
            <param><decl><type><name pos:line="991" pos:column="13">IDebugENCLineMap</name> <type:modifier pos:line="991" pos:column="30">*</type:modifier></type> <name pos:line="991" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="993" pos:column="9">HRESULT</name></type> ( <name pos:line="993" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="993" pos:column="37">*</type:modifier><name pos:line="993" pos:column="38">GetEditedSource</name> )<parameter_list pos:line="993" pos:column="55">( 
            <param><decl><type><name pos:line="994" pos:column="13">IDebugENCLineMap</name> <type:modifier pos:line="994" pos:column="30">*</type:modifier></type> <name pos:line="994" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="995" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="995" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="995" pos:column="46">BSTR</name> <type:modifier pos:line="995" pos:column="51">*</type:modifier></type><name pos:line="995" pos:column="52">out_pbstrEditedSource</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="997" pos:column="9">HRESULT</name></type> ( <name pos:line="997" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="997" pos:column="37">*</type:modifier><name pos:line="997" pos:column="38">GetSupercededSource</name> )<parameter_list pos:line="997" pos:column="59">( 
            <param><decl><type><name pos:line="998" pos:column="13">IDebugENCLineMap</name> <type:modifier pos:line="998" pos:column="30">*</type:modifier></type> <name pos:line="998" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="999" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="999" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="999" pos:column="46">BSTR</name> <type:modifier pos:line="999" pos:column="51">*</type:modifier></type><name pos:line="999" pos:column="52">out_pbstrSupercededSource</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1001" pos:column="9">HRESULT</name></type> ( <name pos:line="1001" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1001" pos:column="37">*</type:modifier><name pos:line="1001" pos:column="38">IsLineModified</name> )<parameter_list pos:line="1001" pos:column="54">( 
            <param><decl><type><name pos:line="1002" pos:column="13">IDebugENCLineMap</name> <type:modifier pos:line="1002" pos:column="30">*</type:modifier></type> <name pos:line="1002" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="1003" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1003" pos:column="24">ULONG</name></type> <name pos:line="1003" pos:column="30">in_LineNoFromSupercededSource</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1005" pos:column="9">HRESULT</name></type> ( <name pos:line="1005" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1005" pos:column="37">*</type:modifier><name pos:line="1005" pos:column="38">LineMap</name> )<parameter_list pos:line="1005" pos:column="47">( 
            <param><decl><type><name pos:line="1006" pos:column="13">IDebugENCLineMap</name> <type:modifier pos:line="1006" pos:column="30">*</type:modifier></type> <name pos:line="1006" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="1007" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1007" pos:column="24">ULONG</name></type> <name pos:line="1007" pos:column="30">in_LineNoFromSupercededSource</name></decl></param>,
            <comment type="block" pos:line="1008" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1008" pos:column="25">__RPC__out</name> <name pos:line="1008" pos:column="36">ULONG</name> <type:modifier pos:line="1008" pos:column="42">*</type:modifier></type><name pos:line="1008" pos:column="43">out_pLineNoFromEditedSource</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1010" pos:column="9">HRESULT</name></type> ( <name pos:line="1010" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1010" pos:column="37">*</type:modifier><name pos:line="1010" pos:column="38">ReverseLineMap</name> )<parameter_list pos:line="1010" pos:column="54">( 
            <param><decl><type><name pos:line="1011" pos:column="13">IDebugENCLineMap</name> <type:modifier pos:line="1011" pos:column="30">*</type:modifier></type> <name pos:line="1011" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="1012" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1012" pos:column="24">ULONG</name></type> <name pos:line="1012" pos:column="30">in_LineNoFromEditedSource</name></decl></param>,
            <comment type="block" pos:line="1013" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1013" pos:column="25">__RPC__out</name> <name pos:line="1013" pos:column="36">ULONG</name> <type:modifier pos:line="1013" pos:column="42">*</type:modifier></type><name pos:line="1013" pos:column="43">out_pLineNoFromSupercededSource</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1015" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1016" pos:column="7">IDebugENCLineMapVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1018" pos:column="5">interface</name></type> <name pos:line="1018" pos:column="15">IDebugENCLineMap</name>
    <argument_list pos:line="1019" pos:column="5">{
        <argument><expr><name pos:line="1020" pos:column="9">CONST_VTBL</name> struct <name pos:line="1020" pos:column="27">IDebugENCLineMapVtbl</name> <op:operator pos:line="1020" pos:column="48">*</op:operator><name pos:line="1020" pos:column="49">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1025" pos:column="1">#<cpp:directive pos:line="1025" pos:column="2">ifdef</cpp:directive> <name pos:line="1025" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1028" pos:column="1">#<cpp:directive pos:line="1028" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1028" pos:column="9">IDebugENCLineMap_QueryInterface</name><parameter_list pos:line="1028" pos:column="40">(<param><type><name pos:line="1028" pos:column="41">This</name></type></param>,<param><type><name pos:line="1028" pos:column="46">riid</name></type></param>,<param><type><name pos:line="1028" pos:column="51">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1029" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1031" pos:column="1">#<cpp:directive pos:line="1031" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1031" pos:column="9">IDebugENCLineMap_AddRef</name><parameter_list pos:line="1031" pos:column="32">(<param><type><name pos:line="1031" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1032" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1034" pos:column="1">#<cpp:directive pos:line="1034" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1034" pos:column="9">IDebugENCLineMap_Release</name><parameter_list pos:line="1034" pos:column="33">(<param><type><name pos:line="1034" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1035" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1038" pos:column="1">#<cpp:directive pos:line="1038" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1038" pos:column="9">IDebugENCLineMap_GetEditedSource</name><parameter_list pos:line="1038" pos:column="41">(<param><type><name pos:line="1038" pos:column="42">This</name></type></param>,<param><type><name pos:line="1038" pos:column="47">out_pbstrEditedSource</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1039" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEditedSource(This,out_pbstrEditedSource) )</cpp:value></cpp:define> 

<cpp:define pos:line="1041" pos:column="1">#<cpp:directive pos:line="1041" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1041" pos:column="9">IDebugENCLineMap_GetSupercededSource</name><parameter_list pos:line="1041" pos:column="45">(<param><type><name pos:line="1041" pos:column="46">This</name></type></param>,<param><type><name pos:line="1041" pos:column="51">out_pbstrSupercededSource</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1042" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSupercededSource(This,out_pbstrSupercededSource) )</cpp:value></cpp:define> 

<cpp:define pos:line="1044" pos:column="1">#<cpp:directive pos:line="1044" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1044" pos:column="9">IDebugENCLineMap_IsLineModified</name><parameter_list pos:line="1044" pos:column="40">(<param><type><name pos:line="1044" pos:column="41">This</name></type></param>,<param><type><name pos:line="1044" pos:column="46">in_LineNoFromSupercededSource</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1045" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsLineModified(This,in_LineNoFromSupercededSource) )</cpp:value></cpp:define> 

<cpp:define pos:line="1047" pos:column="1">#<cpp:directive pos:line="1047" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1047" pos:column="9">IDebugENCLineMap_LineMap</name><parameter_list pos:line="1047" pos:column="33">(<param><type><name pos:line="1047" pos:column="34">This</name></type></param>,<param><type><name pos:line="1047" pos:column="39">in_LineNoFromSupercededSource</name></type></param>,<param><type><name pos:line="1047" pos:column="69">out_pLineNoFromEditedSource</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1048" pos:column="5">( (This)-&gt;lpVtbl -&gt; LineMap(This,in_LineNoFromSupercededSource,out_pLineNoFromEditedSource) )</cpp:value></cpp:define> 

<cpp:define pos:line="1050" pos:column="1">#<cpp:directive pos:line="1050" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1050" pos:column="9">IDebugENCLineMap_ReverseLineMap</name><parameter_list pos:line="1050" pos:column="40">(<param><type><name pos:line="1050" pos:column="41">This</name></type></param>,<param><type><name pos:line="1050" pos:column="46">in_LineNoFromEditedSource</name></type></param>,<param><type><name pos:line="1050" pos:column="72">out_pLineNoFromSupercededSource</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1051" pos:column="5">( (This)-&gt;lpVtbl -&gt; ReverseLineMap(This,in_LineNoFromEditedSource,out_pLineNoFromSupercededSource) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1053" pos:column="1">#<cpp:directive pos:line="1053" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1053" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1056" pos:column="1">#<cpp:directive pos:line="1056" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1056" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1061" pos:column="1">#<cpp:directive pos:line="1061" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1061" pos:column="9">/* __IDebugENCLineMap_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="1064" pos:column="1">/* interface __MIDL_itf_enc_0000_0003 */</comment>
<comment type="block" pos:line="1065" pos:column="1">/* [local] */</comment> 


<enum pos:line="1068" pos:column="1">enum <name pos:line="1068" pos:column="6">__MIDL___MIDL_itf_enc_0000_0003_0001</name>
    <block pos:line="1069" pos:column="5">{	<decl><name pos:line="1069" pos:column="9">ENCINFO_STACKFRAME</name>	<init pos:line="1069" pos:column="33">= <expr><lit:literal type="number" pos:line="1069" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="1069" pos:column="38">,</op:operator>
	<decl><name pos:line="1070" pos:column="9">ENCINFO_HRESULT_FROM_DE</name>	<init pos:line="1070" pos:column="33">= <expr><lit:literal type="number" pos:line="1070" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="1070" pos:column="38">,</op:operator>
	<decl><name pos:line="1071" pos:column="9">ENCINFO_ERROR_NO</name>	<init pos:line="1071" pos:column="33">= <expr><lit:literal type="number" pos:line="1071" pos:column="35">0x4</lit:literal></expr></init></decl><op:operator pos:line="1071" pos:column="38">,</op:operator>
	<decl><name pos:line="1072" pos:column="9">ENCINFO_ERROR_BSTR</name>	<init pos:line="1072" pos:column="33">= <expr><lit:literal type="number" pos:line="1072" pos:column="35">0x8</lit:literal></expr></init></decl><op:operator pos:line="1072" pos:column="38">,</op:operator>
	<decl><name pos:line="1073" pos:column="9">ENCINFO_CODE_CONTEXT</name>	<init pos:line="1073" pos:column="33">= <expr><lit:literal type="number" pos:line="1073" pos:column="35">0x10</lit:literal></expr></init></decl><op:operator pos:line="1073" pos:column="39">,</op:operator>
	<decl><name pos:line="1074" pos:column="9">ENCINFO_EXTENDED_INFO</name>	<init pos:line="1074" pos:column="33">= <expr><lit:literal type="number" pos:line="1074" pos:column="35">0x20</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="1076" pos:column="1">typedef <type><name pos:line="1076" pos:column="9">DWORD</name></type> <name pos:line="1076" pos:column="15">ENCINFO_FLAGS</name>;</typedef>

<typedef pos:line="1078" pos:column="1">typedef <type><struct pos:line="1078" pos:column="9">struct <name pos:line="1078" pos:column="16">tagENCINFO</name>
    <block pos:line="1079" pos:column="5">{<public type="default" pos:line="1079" pos:column="6">
    <decl_stmt><decl><type><name pos:line="1080" pos:column="5">ENCINFO_FLAGS</name></type> <name pos:line="1080" pos:column="19">m_dwValidFields</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1081" pos:column="5">IDebugStackFrame2</name> <type:modifier pos:line="1081" pos:column="23">*</type:modifier></type><name pos:line="1081" pos:column="24">m_pStackFrame</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1082" pos:column="5">HRESULT</name></type> <name pos:line="1082" pos:column="13">m_HRFromDE</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1083" pos:column="5">DWORD</name></type> <name pos:line="1083" pos:column="11">m_dwErrorNo</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1084" pos:column="5">BSTR</name></type> <name pos:line="1084" pos:column="10">m_bstrError</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1085" pos:column="5">IDebugCodeContext2</name> <type:modifier pos:line="1085" pos:column="24">*</type:modifier></type><name pos:line="1085" pos:column="25">m_pCodeContext</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="1086" pos:column="5">IUnknown</name> <type:modifier pos:line="1086" pos:column="14">*</type:modifier></type><name pos:line="1086" pos:column="15">m_pExtendedInfo</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="1087" pos:column="9">ENCINFO</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="1091" pos:column="1">extern</specifier> <name pos:line="1091" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="1091" pos:column="22">__MIDL_itf_enc_0000_0003_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1092" pos:column="1">extern</specifier> <name pos:line="1092" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="1092" pos:column="22">__MIDL_itf_enc_0000_0003_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="1094" pos:column="1">#<cpp:directive pos:line="1094" pos:column="2">ifndef</cpp:directive> <name pos:line="1094" pos:column="9">__IDebugENCInfo2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1095" pos:column="1">#<cpp:directive pos:line="1095" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1095" pos:column="9">__IDebugENCInfo2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1097" pos:column="1">/* interface IDebugENCInfo2 */</comment>
<comment type="block" pos:line="1098" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1101" pos:column="1">EXTERN_C</name> <specifier pos:line="1101" pos:column="10">const</specifier> <name pos:line="1101" pos:column="16">IID</name></type> <name pos:line="1101" pos:column="20">IID_IDebugENCInfo2</name></decl>;</decl_stmt>

<cpp:if pos:line="1103" pos:column="1">#<cpp:directive pos:line="1103" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1103" pos:column="5">defined</name><argument_list pos:line="1103" pos:column="12">(<argument><expr><name pos:line="1103" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1103" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1103" pos:column="29">!</op:operator><call><name pos:line="1103" pos:column="30">defined</name><argument_list pos:line="1103" pos:column="37">(<argument><expr><name pos:line="1103" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1105" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1105" pos:column="19">(<argument pos:line="1105" pos:column="20">"6B56106F-BD51-11d2-9238-00A02448799A"</argument>)</argument_list></macro>
    <label><name pos:line="1106" pos:column="5">IDebugENCInfo2</name> :</label> <expr_stmt><expr pos:line="1106" pos:column="22">public <name pos:line="1106" pos:column="29">IUnknown</name>
    <block pos:line="1107" pos:column="5">{
    <expr pos:line="1108" pos:column="5">public<op:operator pos:line="1108" pos:column="11">:</op:operator>
        virtual <name pos:line="1109" pos:column="17">HRESULT</name> <name pos:line="1109" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1109" pos:column="43">GetInfo</name><argument_list pos:line="1109" pos:column="50">( 
            <comment type="block" pos:line="1110" pos:column="13">/* [out] */</comment> <argument pos:line="1110" pos:column="25">__RPC__out ENCINFO *out_pENCINFO</argument>)</argument_list></macro> <op:operator pos:line="1110" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="1110" pos:column="61">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1114" pos:column="1">#<cpp:directive pos:line="1114" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1114" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1116" pos:column="5">typedef <type><struct pos:line="1116" pos:column="13">struct <name pos:line="1116" pos:column="20">IDebugENCInfo2Vtbl</name>
    <block pos:line="1117" pos:column="5">{<public type="default" pos:line="1117" pos:column="6">
        <function_decl><type><name pos:line="1118" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1120" pos:column="9">HRESULT</name></type> ( <name pos:line="1120" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1120" pos:column="37">*</type:modifier><name pos:line="1120" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1120" pos:column="54">( 
            <param><decl><type><name pos:line="1121" pos:column="13">IDebugENCInfo2</name> <type:modifier pos:line="1121" pos:column="28">*</type:modifier></type> <name pos:line="1121" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1122" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1122" pos:column="24">__RPC__in</name> <name pos:line="1122" pos:column="34">REFIID</name></type> <name pos:line="1122" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1123" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1124" pos:column="13">__RPC__deref_out</name>  <name pos:line="1124" pos:column="31">void</name> <type:modifier pos:line="1124" pos:column="36">*</type:modifier><type:modifier pos:line="1124" pos:column="37">*</type:modifier></type><name pos:line="1124" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1126" pos:column="9">ULONG</name></type> ( <name pos:line="1126" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1126" pos:column="35">*</type:modifier><name pos:line="1126" pos:column="36">AddRef</name> )<parameter_list pos:line="1126" pos:column="44">( 
            <param><decl><type><name pos:line="1127" pos:column="13">IDebugENCInfo2</name> <type:modifier pos:line="1127" pos:column="28">*</type:modifier></type> <name pos:line="1127" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1129" pos:column="9">ULONG</name></type> ( <name pos:line="1129" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1129" pos:column="35">*</type:modifier><name pos:line="1129" pos:column="36">Release</name> )<parameter_list pos:line="1129" pos:column="45">( 
            <param><decl><type><name pos:line="1130" pos:column="13">IDebugENCInfo2</name> <type:modifier pos:line="1130" pos:column="28">*</type:modifier></type> <name pos:line="1130" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1132" pos:column="9">HRESULT</name></type> ( <name pos:line="1132" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1132" pos:column="37">*</type:modifier><name pos:line="1132" pos:column="38">GetInfo</name> )<parameter_list pos:line="1132" pos:column="47">( 
            <param><decl><type><name pos:line="1133" pos:column="13">IDebugENCInfo2</name> <type:modifier pos:line="1133" pos:column="28">*</type:modifier></type> <name pos:line="1133" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1134" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1134" pos:column="25">__RPC__out</name> <name pos:line="1134" pos:column="36">ENCINFO</name> <type:modifier pos:line="1134" pos:column="44">*</type:modifier></type><name pos:line="1134" pos:column="45">out_pENCINFO</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1136" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1137" pos:column="7">IDebugENCInfo2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1139" pos:column="5">interface</name></type> <name pos:line="1139" pos:column="15">IDebugENCInfo2</name>
    <argument_list pos:line="1140" pos:column="5">{
        <argument><expr><name pos:line="1141" pos:column="9">CONST_VTBL</name> struct <name pos:line="1141" pos:column="27">IDebugENCInfo2Vtbl</name> <op:operator pos:line="1141" pos:column="46">*</op:operator><name pos:line="1141" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1146" pos:column="1">#<cpp:directive pos:line="1146" pos:column="2">ifdef</cpp:directive> <name pos:line="1146" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1149" pos:column="1">#<cpp:directive pos:line="1149" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1149" pos:column="9">IDebugENCInfo2_QueryInterface</name><parameter_list pos:line="1149" pos:column="38">(<param><type><name pos:line="1149" pos:column="39">This</name></type></param>,<param><type><name pos:line="1149" pos:column="44">riid</name></type></param>,<param><type><name pos:line="1149" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1150" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1152" pos:column="1">#<cpp:directive pos:line="1152" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1152" pos:column="9">IDebugENCInfo2_AddRef</name><parameter_list pos:line="1152" pos:column="30">(<param><type><name pos:line="1152" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1153" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1155" pos:column="1">#<cpp:directive pos:line="1155" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1155" pos:column="9">IDebugENCInfo2_Release</name><parameter_list pos:line="1155" pos:column="31">(<param><type><name pos:line="1155" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1156" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1159" pos:column="1">#<cpp:directive pos:line="1159" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1159" pos:column="9">IDebugENCInfo2_GetInfo</name><parameter_list pos:line="1159" pos:column="31">(<param><type><name pos:line="1159" pos:column="32">This</name></type></param>,<param><type><name pos:line="1159" pos:column="37">out_pENCINFO</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1160" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInfo(This,out_pENCINFO) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1162" pos:column="1">#<cpp:directive pos:line="1162" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1162" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1165" pos:column="1">#<cpp:directive pos:line="1165" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1165" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1170" pos:column="1">#<cpp:directive pos:line="1170" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1170" pos:column="9">/* __IDebugENCInfo2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1173" pos:column="1">#<cpp:directive pos:line="1173" pos:column="2">ifndef</cpp:directive> <name pos:line="1173" pos:column="9">__IEnumDebugENCInfo2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1174" pos:column="1">#<cpp:directive pos:line="1174" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1174" pos:column="9">__IEnumDebugENCInfo2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1176" pos:column="1">/* interface IEnumDebugENCInfo2 */</comment>
<comment type="block" pos:line="1177" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1180" pos:column="1">EXTERN_C</name> <specifier pos:line="1180" pos:column="10">const</specifier> <name pos:line="1180" pos:column="16">IID</name></type> <name pos:line="1180" pos:column="20">IID_IEnumDebugENCInfo2</name></decl>;</decl_stmt>

<cpp:if pos:line="1182" pos:column="1">#<cpp:directive pos:line="1182" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1182" pos:column="5">defined</name><argument_list pos:line="1182" pos:column="12">(<argument><expr><name pos:line="1182" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1182" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1182" pos:column="29">!</op:operator><call><name pos:line="1182" pos:column="30">defined</name><argument_list pos:line="1182" pos:column="37">(<argument><expr><name pos:line="1182" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1184" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1184" pos:column="19">(<argument pos:line="1184" pos:column="20">"7B076AD1-BD51-11d2-9238-00A02448799A"</argument>)</argument_list></macro>
    <label><name pos:line="1185" pos:column="5">IEnumDebugENCInfo2</name> :</label> <expr_stmt><expr pos:line="1185" pos:column="26">public <name pos:line="1185" pos:column="33">IUnknown</name>
    <block pos:line="1186" pos:column="5">{
    <expr pos:line="1187" pos:column="5">public<op:operator pos:line="1187" pos:column="11">:</op:operator>
        virtual <name pos:line="1188" pos:column="17">HRESULT</name> <name pos:line="1188" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1188" pos:column="43">Next</name><argument_list pos:line="1188" pos:column="47">( 
            <comment type="block" pos:line="1189" pos:column="13">/* [in] */</comment> <argument pos:line="1189" pos:column="24">ULONG in_NoOfElementsRequested</argument>,
            <comment type="block" pos:line="1190" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="1190" pos:column="45">__RPC__out_ecount_part(in_NoOfElementsRequested, *out_pNoOfElementsFetched) IDebugENCInfo2 **out_ArrayOfpENCInfo</argument>,
            <comment type="block" pos:line="1191" pos:column="13">/* [out] */</comment> <argument pos:line="1191" pos:column="25">__RPC__out ULONG *out_pNoOfElementsFetched</argument>)</argument_list></macro> <op:operator pos:line="1191" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="1191" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="1193" pos:column="9">virtual <name pos:line="1193" pos:column="17">HRESULT</name> <name pos:line="1193" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1193" pos:column="43">Skip</name><argument_list pos:line="1193" pos:column="47">( 
            <comment type="block" pos:line="1194" pos:column="13">/* [in] */</comment> <argument pos:line="1194" pos:column="24">ULONG in_NoOfElements</argument>)</argument_list></macro> <op:operator pos:line="1194" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="1194" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="1196" pos:column="9">virtual <name pos:line="1196" pos:column="17">HRESULT</name> <name pos:line="1196" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1196" pos:column="43">Reset</name><argument_list pos:line="1196" pos:column="48">( <argument><expr><name pos:line="1196" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1196" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="1196" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="1198" pos:column="9">virtual <name pos:line="1198" pos:column="17">HRESULT</name> <name pos:line="1198" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1198" pos:column="43">Clone</name><argument_list pos:line="1198" pos:column="48">( 
            <comment type="block" pos:line="1199" pos:column="13">/* [out] */</comment> <argument pos:line="1199" pos:column="25">__RPC__deref_out_opt IEnumDebugENCInfo2 **out_ppEnumENCInfo</argument>)</argument_list></macro> <op:operator pos:line="1199" pos:column="86">=</op:operator> <lit:literal type="number" pos:line="1199" pos:column="88">0</lit:literal></expr>;
        
        <expr pos:line="1201" pos:column="9">virtual <name pos:line="1201" pos:column="17">HRESULT</name> <name pos:line="1201" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1201" pos:column="43">GetCount</name><argument_list pos:line="1201" pos:column="51">( 
            <comment type="block" pos:line="1202" pos:column="13">/* [out] */</comment> <argument pos:line="1202" pos:column="25">__RPC__out ULONG *out_pCount</argument>)</argument_list></macro> <op:operator pos:line="1202" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="1202" pos:column="57">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1206" pos:column="1">#<cpp:directive pos:line="1206" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1206" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1208" pos:column="5">typedef <type><struct pos:line="1208" pos:column="13">struct <name pos:line="1208" pos:column="20">IEnumDebugENCInfo2Vtbl</name>
    <block pos:line="1209" pos:column="5">{<public type="default" pos:line="1209" pos:column="6">
        <function_decl><type><name pos:line="1210" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1212" pos:column="9">HRESULT</name></type> ( <name pos:line="1212" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1212" pos:column="37">*</type:modifier><name pos:line="1212" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1212" pos:column="54">( 
            <param><decl><type><name pos:line="1213" pos:column="13">IEnumDebugENCInfo2</name> <type:modifier pos:line="1213" pos:column="32">*</type:modifier></type> <name pos:line="1213" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1214" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1214" pos:column="24">__RPC__in</name> <name pos:line="1214" pos:column="34">REFIID</name></type> <name pos:line="1214" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1215" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1216" pos:column="13">__RPC__deref_out</name>  <name pos:line="1216" pos:column="31">void</name> <type:modifier pos:line="1216" pos:column="36">*</type:modifier><type:modifier pos:line="1216" pos:column="37">*</type:modifier></type><name pos:line="1216" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1218" pos:column="9">ULONG</name></type> ( <name pos:line="1218" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1218" pos:column="35">*</type:modifier><name pos:line="1218" pos:column="36">AddRef</name> )<parameter_list pos:line="1218" pos:column="44">( 
            <param><decl><type><name pos:line="1219" pos:column="13">IEnumDebugENCInfo2</name> <type:modifier pos:line="1219" pos:column="32">*</type:modifier></type> <name pos:line="1219" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1221" pos:column="9">ULONG</name></type> ( <name pos:line="1221" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1221" pos:column="35">*</type:modifier><name pos:line="1221" pos:column="36">Release</name> )<parameter_list pos:line="1221" pos:column="45">( 
            <param><decl><type><name pos:line="1222" pos:column="13">IEnumDebugENCInfo2</name> <type:modifier pos:line="1222" pos:column="32">*</type:modifier></type> <name pos:line="1222" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1224" pos:column="9">HRESULT</name> <argument_list pos:line="1224" pos:column="17">( <argument pos:line="1224" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1224" pos:column="44">(</op:operator> 
            <name pos:line="1225" pos:column="13">IEnumDebugENCInfo2</name> <op:operator pos:line="1225" pos:column="32">*</op:operator> <name pos:line="1225" pos:column="34">This</name><op:operator pos:line="1225" pos:column="38">,</op:operator>
            <comment type="block" pos:line="1226" pos:column="13">/* [in] */</comment> <name pos:line="1226" pos:column="24">ULONG</name> <name pos:line="1226" pos:column="30">in_NoOfElementsRequested</name><op:operator pos:line="1226" pos:column="54">,</op:operator>
            <comment type="block" pos:line="1227" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="1227" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="1227" pos:column="67">(<argument pos:line="1227" pos:column="68">in_NoOfElementsRequested</argument>, <argument pos:line="1227" pos:column="94">*out_pNoOfElementsFetched</argument>)</argument_list></macro> <name pos:line="1227" pos:column="121">IDebugENCInfo2</name> <op:operator pos:line="1227" pos:column="136">*</op:operator><op:operator pos:line="1227" pos:column="137">*</op:operator><name pos:line="1227" pos:column="138">out_ArrayOfpENCInfo</name><op:operator pos:line="1227" pos:column="157">,</op:operator>
            <comment type="block" pos:line="1228" pos:column="13">/* [out] */</comment> <name pos:line="1228" pos:column="25">__RPC__out</name> <name pos:line="1228" pos:column="36">ULONG</name> <op:operator pos:line="1228" pos:column="42">*</op:operator><name pos:line="1228" pos:column="43">out_pNoOfElementsFetched</name><op:operator pos:line="1228" pos:column="67">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="1230" pos:column="9">HRESULT</name></type> ( <name pos:line="1230" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1230" pos:column="37">*</type:modifier><name pos:line="1230" pos:column="38">Skip</name> )<parameter_list pos:line="1230" pos:column="44">( 
            <param><decl><type><name pos:line="1231" pos:column="13">IEnumDebugENCInfo2</name> <type:modifier pos:line="1231" pos:column="32">*</type:modifier></type> <name pos:line="1231" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1232" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1232" pos:column="24">ULONG</name></type> <name pos:line="1232" pos:column="30">in_NoOfElements</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1234" pos:column="9">HRESULT</name></type> ( <name pos:line="1234" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1234" pos:column="37">*</type:modifier><name pos:line="1234" pos:column="38">Reset</name> )<parameter_list pos:line="1234" pos:column="45">( 
            <param><decl><type><name pos:line="1235" pos:column="13">IEnumDebugENCInfo2</name> <type:modifier pos:line="1235" pos:column="32">*</type:modifier></type> <name pos:line="1235" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1237" pos:column="9">HRESULT</name></type> ( <name pos:line="1237" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1237" pos:column="37">*</type:modifier><name pos:line="1237" pos:column="38">Clone</name> )<parameter_list pos:line="1237" pos:column="45">( 
            <param><decl><type><name pos:line="1238" pos:column="13">IEnumDebugENCInfo2</name> <type:modifier pos:line="1238" pos:column="32">*</type:modifier></type> <name pos:line="1238" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1239" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1239" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1239" pos:column="46">IEnumDebugENCInfo2</name> <type:modifier pos:line="1239" pos:column="65">*</type:modifier><type:modifier pos:line="1239" pos:column="66">*</type:modifier></type><name pos:line="1239" pos:column="67">out_ppEnumENCInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1241" pos:column="9">HRESULT</name></type> ( <name pos:line="1241" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1241" pos:column="37">*</type:modifier><name pos:line="1241" pos:column="38">GetCount</name> )<parameter_list pos:line="1241" pos:column="48">( 
            <param><decl><type><name pos:line="1242" pos:column="13">IEnumDebugENCInfo2</name> <type:modifier pos:line="1242" pos:column="32">*</type:modifier></type> <name pos:line="1242" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1243" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1243" pos:column="25">__RPC__out</name> <name pos:line="1243" pos:column="36">ULONG</name> <type:modifier pos:line="1243" pos:column="42">*</type:modifier></type><name pos:line="1243" pos:column="43">out_pCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1245" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1246" pos:column="7">IEnumDebugENCInfo2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1248" pos:column="5">interface</name></type> <name pos:line="1248" pos:column="15">IEnumDebugENCInfo2</name>
    <argument_list pos:line="1249" pos:column="5">{
        <argument><expr><name pos:line="1250" pos:column="9">CONST_VTBL</name> struct <name pos:line="1250" pos:column="27">IEnumDebugENCInfo2Vtbl</name> <op:operator pos:line="1250" pos:column="50">*</op:operator><name pos:line="1250" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1255" pos:column="1">#<cpp:directive pos:line="1255" pos:column="2">ifdef</cpp:directive> <name pos:line="1255" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1258" pos:column="1">#<cpp:directive pos:line="1258" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1258" pos:column="9">IEnumDebugENCInfo2_QueryInterface</name><parameter_list pos:line="1258" pos:column="42">(<param><type><name pos:line="1258" pos:column="43">This</name></type></param>,<param><type><name pos:line="1258" pos:column="48">riid</name></type></param>,<param><type><name pos:line="1258" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1259" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1261" pos:column="1">#<cpp:directive pos:line="1261" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1261" pos:column="9">IEnumDebugENCInfo2_AddRef</name><parameter_list pos:line="1261" pos:column="34">(<param><type><name pos:line="1261" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1262" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1264" pos:column="1">#<cpp:directive pos:line="1264" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1264" pos:column="9">IEnumDebugENCInfo2_Release</name><parameter_list pos:line="1264" pos:column="35">(<param><type><name pos:line="1264" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1265" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1268" pos:column="1">#<cpp:directive pos:line="1268" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1268" pos:column="9">IEnumDebugENCInfo2_Next</name><parameter_list pos:line="1268" pos:column="32">(<param><type><name pos:line="1268" pos:column="33">This</name></type></param>,<param><type><name pos:line="1268" pos:column="38">in_NoOfElementsRequested</name></type></param>,<param><type><name pos:line="1268" pos:column="63">out_ArrayOfpENCInfo</name></type></param>,<param><type><name pos:line="1268" pos:column="83">out_pNoOfElementsFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1269" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,in_NoOfElementsRequested,out_ArrayOfpENCInfo,out_pNoOfElementsFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="1271" pos:column="1">#<cpp:directive pos:line="1271" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1271" pos:column="9">IEnumDebugENCInfo2_Skip</name><parameter_list pos:line="1271" pos:column="32">(<param><type><name pos:line="1271" pos:column="33">This</name></type></param>,<param><type><name pos:line="1271" pos:column="38">in_NoOfElements</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1272" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,in_NoOfElements) )</cpp:value></cpp:define> 

<cpp:define pos:line="1274" pos:column="1">#<cpp:directive pos:line="1274" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1274" pos:column="9">IEnumDebugENCInfo2_Reset</name><parameter_list pos:line="1274" pos:column="33">(<param><type><name pos:line="1274" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1275" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1277" pos:column="1">#<cpp:directive pos:line="1277" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1277" pos:column="9">IEnumDebugENCInfo2_Clone</name><parameter_list pos:line="1277" pos:column="33">(<param><type><name pos:line="1277" pos:column="34">This</name></type></param>,<param><type><name pos:line="1277" pos:column="39">out_ppEnumENCInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1278" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,out_ppEnumENCInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="1280" pos:column="1">#<cpp:directive pos:line="1280" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1280" pos:column="9">IEnumDebugENCInfo2_GetCount</name><parameter_list pos:line="1280" pos:column="36">(<param><type><name pos:line="1280" pos:column="37">This</name></type></param>,<param><type><name pos:line="1280" pos:column="42">out_pCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1281" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,out_pCount) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1283" pos:column="1">#<cpp:directive pos:line="1283" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1283" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1286" pos:column="1">#<cpp:directive pos:line="1286" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1286" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1291" pos:column="1">#<cpp:directive pos:line="1291" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1291" pos:column="9">/* __IEnumDebugENCInfo2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1294" pos:column="1">#<cpp:directive pos:line="1294" pos:column="2">ifndef</cpp:directive> <name pos:line="1294" pos:column="9">__IDebugENCRelinkInfo2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1295" pos:column="1">#<cpp:directive pos:line="1295" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1295" pos:column="9">__IDebugENCRelinkInfo2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1297" pos:column="1">/* interface IDebugENCRelinkInfo2 */</comment>
<comment type="block" pos:line="1298" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1301" pos:column="1">EXTERN_C</name> <specifier pos:line="1301" pos:column="10">const</specifier> <name pos:line="1301" pos:column="16">IID</name></type> <name pos:line="1301" pos:column="20">IID_IDebugENCRelinkInfo2</name></decl>;</decl_stmt>

<cpp:if pos:line="1303" pos:column="1">#<cpp:directive pos:line="1303" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1303" pos:column="5">defined</name><argument_list pos:line="1303" pos:column="12">(<argument><expr><name pos:line="1303" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1303" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1303" pos:column="29">!</op:operator><call><name pos:line="1303" pos:column="30">defined</name><argument_list pos:line="1303" pos:column="37">(<argument><expr><name pos:line="1303" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1305" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1305" pos:column="19">(<argument pos:line="1305" pos:column="20">"CBB63A8D-BD57-11d2-9238-00A02448799A"</argument>)</argument_list></macro>
    <label><name pos:line="1306" pos:column="5">IDebugENCRelinkInfo2</name> :</label> <expr_stmt><expr pos:line="1306" pos:column="28">public <name pos:line="1306" pos:column="35">IUnknown</name>
    <block pos:line="1307" pos:column="5">{
    <expr pos:line="1308" pos:column="5">public<op:operator pos:line="1308" pos:column="11">:</op:operator>
        virtual <name pos:line="1309" pos:column="17">HRESULT</name> <name pos:line="1309" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1309" pos:column="43">GetInfo</name><argument_list pos:line="1309" pos:column="50">( 
            <comment type="block" pos:line="1310" pos:column="13">/* [out] */</comment> <argument pos:line="1310" pos:column="25">__RPC__deref_out_opt BSTR *out_pbstrWorkingDir</argument>,
            <comment type="block" pos:line="1311" pos:column="13">/* [out] */</comment> <argument pos:line="1311" pos:column="25">__RPC__deref_out_opt BSTR *out_pbstrCommand</argument>,
            <comment type="block" pos:line="1312" pos:column="13">/* [out] */</comment> <argument pos:line="1312" pos:column="25">__RPC__deref_out_opt BSTR *out_pbstrOutFile</argument>,
            <comment type="block" pos:line="1313" pos:column="13">/* [out] */</comment> <argument pos:line="1313" pos:column="25">__RPC__deref_out_opt BSTR *out_pbstrDebugFile</argument>,
            <comment type="block" pos:line="1314" pos:column="13">/* [out] */</comment> <argument pos:line="1314" pos:column="25">__RPC__out BOOL *out_pbEditFromLib</argument>)</argument_list></macro> <op:operator pos:line="1314" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="1314" pos:column="63">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1318" pos:column="1">#<cpp:directive pos:line="1318" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1318" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1320" pos:column="5">typedef <type><struct pos:line="1320" pos:column="13">struct <name pos:line="1320" pos:column="20">IDebugENCRelinkInfo2Vtbl</name>
    <block pos:line="1321" pos:column="5">{<public type="default" pos:line="1321" pos:column="6">
        <function_decl><type><name pos:line="1322" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1324" pos:column="9">HRESULT</name></type> ( <name pos:line="1324" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1324" pos:column="37">*</type:modifier><name pos:line="1324" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1324" pos:column="54">( 
            <param><decl><type><name pos:line="1325" pos:column="13">IDebugENCRelinkInfo2</name> <type:modifier pos:line="1325" pos:column="34">*</type:modifier></type> <name pos:line="1325" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1326" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1326" pos:column="24">__RPC__in</name> <name pos:line="1326" pos:column="34">REFIID</name></type> <name pos:line="1326" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1327" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1328" pos:column="13">__RPC__deref_out</name>  <name pos:line="1328" pos:column="31">void</name> <type:modifier pos:line="1328" pos:column="36">*</type:modifier><type:modifier pos:line="1328" pos:column="37">*</type:modifier></type><name pos:line="1328" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1330" pos:column="9">ULONG</name></type> ( <name pos:line="1330" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1330" pos:column="35">*</type:modifier><name pos:line="1330" pos:column="36">AddRef</name> )<parameter_list pos:line="1330" pos:column="44">( 
            <param><decl><type><name pos:line="1331" pos:column="13">IDebugENCRelinkInfo2</name> <type:modifier pos:line="1331" pos:column="34">*</type:modifier></type> <name pos:line="1331" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1333" pos:column="9">ULONG</name></type> ( <name pos:line="1333" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1333" pos:column="35">*</type:modifier><name pos:line="1333" pos:column="36">Release</name> )<parameter_list pos:line="1333" pos:column="45">( 
            <param><decl><type><name pos:line="1334" pos:column="13">IDebugENCRelinkInfo2</name> <type:modifier pos:line="1334" pos:column="34">*</type:modifier></type> <name pos:line="1334" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1336" pos:column="9">HRESULT</name></type> ( <name pos:line="1336" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1336" pos:column="37">*</type:modifier><name pos:line="1336" pos:column="38">GetInfo</name> )<parameter_list pos:line="1336" pos:column="47">( 
            <param><decl><type><name pos:line="1337" pos:column="13">IDebugENCRelinkInfo2</name> <type:modifier pos:line="1337" pos:column="34">*</type:modifier></type> <name pos:line="1337" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1338" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1338" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1338" pos:column="46">BSTR</name> <type:modifier pos:line="1338" pos:column="51">*</type:modifier></type><name pos:line="1338" pos:column="52">out_pbstrWorkingDir</name></decl></param>,
            <comment type="block" pos:line="1339" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1339" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1339" pos:column="46">BSTR</name> <type:modifier pos:line="1339" pos:column="51">*</type:modifier></type><name pos:line="1339" pos:column="52">out_pbstrCommand</name></decl></param>,
            <comment type="block" pos:line="1340" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1340" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1340" pos:column="46">BSTR</name> <type:modifier pos:line="1340" pos:column="51">*</type:modifier></type><name pos:line="1340" pos:column="52">out_pbstrOutFile</name></decl></param>,
            <comment type="block" pos:line="1341" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1341" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1341" pos:column="46">BSTR</name> <type:modifier pos:line="1341" pos:column="51">*</type:modifier></type><name pos:line="1341" pos:column="52">out_pbstrDebugFile</name></decl></param>,
            <comment type="block" pos:line="1342" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1342" pos:column="25">__RPC__out</name> <name pos:line="1342" pos:column="36">BOOL</name> <type:modifier pos:line="1342" pos:column="41">*</type:modifier></type><name pos:line="1342" pos:column="42">out_pbEditFromLib</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1344" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1345" pos:column="7">IDebugENCRelinkInfo2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1347" pos:column="5">interface</name></type> <name pos:line="1347" pos:column="15">IDebugENCRelinkInfo2</name>
    <argument_list pos:line="1348" pos:column="5">{
        <argument><expr><name pos:line="1349" pos:column="9">CONST_VTBL</name> struct <name pos:line="1349" pos:column="27">IDebugENCRelinkInfo2Vtbl</name> <op:operator pos:line="1349" pos:column="52">*</op:operator><name pos:line="1349" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1354" pos:column="1">#<cpp:directive pos:line="1354" pos:column="2">ifdef</cpp:directive> <name pos:line="1354" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1357" pos:column="1">#<cpp:directive pos:line="1357" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1357" pos:column="9">IDebugENCRelinkInfo2_QueryInterface</name><parameter_list pos:line="1357" pos:column="44">(<param><type><name pos:line="1357" pos:column="45">This</name></type></param>,<param><type><name pos:line="1357" pos:column="50">riid</name></type></param>,<param><type><name pos:line="1357" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1358" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1360" pos:column="1">#<cpp:directive pos:line="1360" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1360" pos:column="9">IDebugENCRelinkInfo2_AddRef</name><parameter_list pos:line="1360" pos:column="36">(<param><type><name pos:line="1360" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1361" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1363" pos:column="1">#<cpp:directive pos:line="1363" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1363" pos:column="9">IDebugENCRelinkInfo2_Release</name><parameter_list pos:line="1363" pos:column="37">(<param><type><name pos:line="1363" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1364" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1367" pos:column="1">#<cpp:directive pos:line="1367" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1367" pos:column="9">IDebugENCRelinkInfo2_GetInfo</name><parameter_list pos:line="1367" pos:column="37">(<param><type><name pos:line="1367" pos:column="38">This</name></type></param>,<param><type><name pos:line="1367" pos:column="43">out_pbstrWorkingDir</name></type></param>,<param><type><name pos:line="1367" pos:column="63">out_pbstrCommand</name></type></param>,<param><type><name pos:line="1367" pos:column="80">out_pbstrOutFile</name></type></param>,<param><type><name pos:line="1367" pos:column="97">out_pbstrDebugFile</name></type></param>,<param><type><name pos:line="1367" pos:column="116">out_pbEditFromLib</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1368" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInfo(This,out_pbstrWorkingDir,out_pbstrCommand,out_pbstrOutFile,out_pbstrDebugFile,out_pbEditFromLib) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1370" pos:column="1">#<cpp:directive pos:line="1370" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1370" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1373" pos:column="1">#<cpp:directive pos:line="1373" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1373" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1378" pos:column="1">#<cpp:directive pos:line="1378" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1378" pos:column="9">/* __IDebugENCRelinkInfo2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1381" pos:column="1">#<cpp:directive pos:line="1381" pos:column="2">ifndef</cpp:directive> <name pos:line="1381" pos:column="9">__IEnumDebugENCRelinkInfo2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1382" pos:column="1">#<cpp:directive pos:line="1382" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1382" pos:column="9">__IEnumDebugENCRelinkInfo2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1384" pos:column="1">/* interface IEnumDebugENCRelinkInfo2 */</comment>
<comment type="block" pos:line="1385" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1388" pos:column="1">EXTERN_C</name> <specifier pos:line="1388" pos:column="10">const</specifier> <name pos:line="1388" pos:column="16">IID</name></type> <name pos:line="1388" pos:column="20">IID_IEnumDebugENCRelinkInfo2</name></decl>;</decl_stmt>

<cpp:if pos:line="1390" pos:column="1">#<cpp:directive pos:line="1390" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1390" pos:column="5">defined</name><argument_list pos:line="1390" pos:column="12">(<argument><expr><name pos:line="1390" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1390" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1390" pos:column="29">!</op:operator><call><name pos:line="1390" pos:column="30">defined</name><argument_list pos:line="1390" pos:column="37">(<argument><expr><name pos:line="1390" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1392" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1392" pos:column="19">(<argument pos:line="1392" pos:column="20">"E51BE743-BD57-11d2-9238-00A02448799A"</argument>)</argument_list></macro>
    <label><name pos:line="1393" pos:column="5">IEnumDebugENCRelinkInfo2</name> :</label> <expr_stmt><expr pos:line="1393" pos:column="32">public <name pos:line="1393" pos:column="39">IUnknown</name>
    <block pos:line="1394" pos:column="5">{
    <expr pos:line="1395" pos:column="5">public<op:operator pos:line="1395" pos:column="11">:</op:operator>
        virtual <name pos:line="1396" pos:column="17">HRESULT</name> <name pos:line="1396" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1396" pos:column="43">Next</name><argument_list pos:line="1396" pos:column="47">( 
            <comment type="block" pos:line="1397" pos:column="13">/* [in] */</comment> <argument pos:line="1397" pos:column="24">ULONG in_NoOfElementsRequested</argument>,
            <comment type="block" pos:line="1398" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="1398" pos:column="45">__RPC__out_ecount_part(in_NoOfElementsRequested, *out_pNoOfElementsFetched) IDebugENCRelinkInfo2 **out_ArrayOfpENCInfo</argument>,
            <comment type="block" pos:line="1399" pos:column="13">/* [out] */</comment> <argument pos:line="1399" pos:column="25">__RPC__out ULONG *out_pNoOfElementsFetched</argument>)</argument_list></macro> <op:operator pos:line="1399" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="1399" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="1401" pos:column="9">virtual <name pos:line="1401" pos:column="17">HRESULT</name> <name pos:line="1401" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1401" pos:column="43">Skip</name><argument_list pos:line="1401" pos:column="47">( 
            <comment type="block" pos:line="1402" pos:column="13">/* [in] */</comment> <argument pos:line="1402" pos:column="24">ULONG in_NoOfElements</argument>)</argument_list></macro> <op:operator pos:line="1402" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="1402" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="1404" pos:column="9">virtual <name pos:line="1404" pos:column="17">HRESULT</name> <name pos:line="1404" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1404" pos:column="43">Reset</name><argument_list pos:line="1404" pos:column="48">( <argument><expr><name pos:line="1404" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1404" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="1404" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="1406" pos:column="9">virtual <name pos:line="1406" pos:column="17">HRESULT</name> <name pos:line="1406" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1406" pos:column="43">Clone</name><argument_list pos:line="1406" pos:column="48">( 
            <comment type="block" pos:line="1407" pos:column="13">/* [out] */</comment> <argument pos:line="1407" pos:column="25">__RPC__deref_out_opt IEnumDebugENCRelinkInfo2 **out_ppEnumENCRelinkInfo</argument>)</argument_list></macro> <op:operator pos:line="1407" pos:column="98">=</op:operator> <lit:literal type="number" pos:line="1407" pos:column="100">0</lit:literal></expr>;
        
        <expr pos:line="1409" pos:column="9">virtual <name pos:line="1409" pos:column="17">HRESULT</name> <name pos:line="1409" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1409" pos:column="43">GetCount</name><argument_list pos:line="1409" pos:column="51">( 
            <comment type="block" pos:line="1410" pos:column="13">/* [out] */</comment> <argument pos:line="1410" pos:column="25">__RPC__out ULONG *out_pCount</argument>)</argument_list></macro> <op:operator pos:line="1410" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="1410" pos:column="57">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1414" pos:column="1">#<cpp:directive pos:line="1414" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1414" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1416" pos:column="5">typedef <type><struct pos:line="1416" pos:column="13">struct <name pos:line="1416" pos:column="20">IEnumDebugENCRelinkInfo2Vtbl</name>
    <block pos:line="1417" pos:column="5">{<public type="default" pos:line="1417" pos:column="6">
        <function_decl><type><name pos:line="1418" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1420" pos:column="9">HRESULT</name></type> ( <name pos:line="1420" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1420" pos:column="37">*</type:modifier><name pos:line="1420" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1420" pos:column="54">( 
            <param><decl><type><name pos:line="1421" pos:column="13">IEnumDebugENCRelinkInfo2</name> <type:modifier pos:line="1421" pos:column="38">*</type:modifier></type> <name pos:line="1421" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1422" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1422" pos:column="24">__RPC__in</name> <name pos:line="1422" pos:column="34">REFIID</name></type> <name pos:line="1422" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1423" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1424" pos:column="13">__RPC__deref_out</name>  <name pos:line="1424" pos:column="31">void</name> <type:modifier pos:line="1424" pos:column="36">*</type:modifier><type:modifier pos:line="1424" pos:column="37">*</type:modifier></type><name pos:line="1424" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1426" pos:column="9">ULONG</name></type> ( <name pos:line="1426" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1426" pos:column="35">*</type:modifier><name pos:line="1426" pos:column="36">AddRef</name> )<parameter_list pos:line="1426" pos:column="44">( 
            <param><decl><type><name pos:line="1427" pos:column="13">IEnumDebugENCRelinkInfo2</name> <type:modifier pos:line="1427" pos:column="38">*</type:modifier></type> <name pos:line="1427" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1429" pos:column="9">ULONG</name></type> ( <name pos:line="1429" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1429" pos:column="35">*</type:modifier><name pos:line="1429" pos:column="36">Release</name> )<parameter_list pos:line="1429" pos:column="45">( 
            <param><decl><type><name pos:line="1430" pos:column="13">IEnumDebugENCRelinkInfo2</name> <type:modifier pos:line="1430" pos:column="38">*</type:modifier></type> <name pos:line="1430" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1432" pos:column="9">HRESULT</name> <argument_list pos:line="1432" pos:column="17">( <argument pos:line="1432" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1432" pos:column="44">(</op:operator> 
            <name pos:line="1433" pos:column="13">IEnumDebugENCRelinkInfo2</name> <op:operator pos:line="1433" pos:column="38">*</op:operator> <name pos:line="1433" pos:column="40">This</name><op:operator pos:line="1433" pos:column="44">,</op:operator>
            <comment type="block" pos:line="1434" pos:column="13">/* [in] */</comment> <name pos:line="1434" pos:column="24">ULONG</name> <name pos:line="1434" pos:column="30">in_NoOfElementsRequested</name><op:operator pos:line="1434" pos:column="54">,</op:operator>
            <comment type="block" pos:line="1435" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="1435" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="1435" pos:column="67">(<argument pos:line="1435" pos:column="68">in_NoOfElementsRequested</argument>, <argument pos:line="1435" pos:column="94">*out_pNoOfElementsFetched</argument>)</argument_list></macro> <name pos:line="1435" pos:column="121">IDebugENCRelinkInfo2</name> <op:operator pos:line="1435" pos:column="142">*</op:operator><op:operator pos:line="1435" pos:column="143">*</op:operator><name pos:line="1435" pos:column="144">out_ArrayOfpENCInfo</name><op:operator pos:line="1435" pos:column="163">,</op:operator>
            <comment type="block" pos:line="1436" pos:column="13">/* [out] */</comment> <name pos:line="1436" pos:column="25">__RPC__out</name> <name pos:line="1436" pos:column="36">ULONG</name> <op:operator pos:line="1436" pos:column="42">*</op:operator><name pos:line="1436" pos:column="43">out_pNoOfElementsFetched</name><op:operator pos:line="1436" pos:column="67">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="1438" pos:column="9">HRESULT</name></type> ( <name pos:line="1438" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1438" pos:column="37">*</type:modifier><name pos:line="1438" pos:column="38">Skip</name> )<parameter_list pos:line="1438" pos:column="44">( 
            <param><decl><type><name pos:line="1439" pos:column="13">IEnumDebugENCRelinkInfo2</name> <type:modifier pos:line="1439" pos:column="38">*</type:modifier></type> <name pos:line="1439" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1440" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1440" pos:column="24">ULONG</name></type> <name pos:line="1440" pos:column="30">in_NoOfElements</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1442" pos:column="9">HRESULT</name></type> ( <name pos:line="1442" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1442" pos:column="37">*</type:modifier><name pos:line="1442" pos:column="38">Reset</name> )<parameter_list pos:line="1442" pos:column="45">( 
            <param><decl><type><name pos:line="1443" pos:column="13">IEnumDebugENCRelinkInfo2</name> <type:modifier pos:line="1443" pos:column="38">*</type:modifier></type> <name pos:line="1443" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1445" pos:column="9">HRESULT</name></type> ( <name pos:line="1445" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1445" pos:column="37">*</type:modifier><name pos:line="1445" pos:column="38">Clone</name> )<parameter_list pos:line="1445" pos:column="45">( 
            <param><decl><type><name pos:line="1446" pos:column="13">IEnumDebugENCRelinkInfo2</name> <type:modifier pos:line="1446" pos:column="38">*</type:modifier></type> <name pos:line="1446" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1447" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1447" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1447" pos:column="46">IEnumDebugENCRelinkInfo2</name> <type:modifier pos:line="1447" pos:column="71">*</type:modifier><type:modifier pos:line="1447" pos:column="72">*</type:modifier></type><name pos:line="1447" pos:column="73">out_ppEnumENCRelinkInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1449" pos:column="9">HRESULT</name></type> ( <name pos:line="1449" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1449" pos:column="37">*</type:modifier><name pos:line="1449" pos:column="38">GetCount</name> )<parameter_list pos:line="1449" pos:column="48">( 
            <param><decl><type><name pos:line="1450" pos:column="13">IEnumDebugENCRelinkInfo2</name> <type:modifier pos:line="1450" pos:column="38">*</type:modifier></type> <name pos:line="1450" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="1451" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1451" pos:column="25">__RPC__out</name> <name pos:line="1451" pos:column="36">ULONG</name> <type:modifier pos:line="1451" pos:column="42">*</type:modifier></type><name pos:line="1451" pos:column="43">out_pCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1453" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1454" pos:column="7">IEnumDebugENCRelinkInfo2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1456" pos:column="5">interface</name></type> <name pos:line="1456" pos:column="15">IEnumDebugENCRelinkInfo2</name>
    <argument_list pos:line="1457" pos:column="5">{
        <argument><expr><name pos:line="1458" pos:column="9">CONST_VTBL</name> struct <name pos:line="1458" pos:column="27">IEnumDebugENCRelinkInfo2Vtbl</name> <op:operator pos:line="1458" pos:column="56">*</op:operator><name pos:line="1458" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1463" pos:column="1">#<cpp:directive pos:line="1463" pos:column="2">ifdef</cpp:directive> <name pos:line="1463" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1466" pos:column="1">#<cpp:directive pos:line="1466" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1466" pos:column="9">IEnumDebugENCRelinkInfo2_QueryInterface</name><parameter_list pos:line="1466" pos:column="48">(<param><type><name pos:line="1466" pos:column="49">This</name></type></param>,<param><type><name pos:line="1466" pos:column="54">riid</name></type></param>,<param><type><name pos:line="1466" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1467" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1469" pos:column="1">#<cpp:directive pos:line="1469" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1469" pos:column="9">IEnumDebugENCRelinkInfo2_AddRef</name><parameter_list pos:line="1469" pos:column="40">(<param><type><name pos:line="1469" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1470" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1472" pos:column="1">#<cpp:directive pos:line="1472" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1472" pos:column="9">IEnumDebugENCRelinkInfo2_Release</name><parameter_list pos:line="1472" pos:column="41">(<param><type><name pos:line="1472" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1473" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1476" pos:column="1">#<cpp:directive pos:line="1476" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1476" pos:column="9">IEnumDebugENCRelinkInfo2_Next</name><parameter_list pos:line="1476" pos:column="38">(<param><type><name pos:line="1476" pos:column="39">This</name></type></param>,<param><type><name pos:line="1476" pos:column="44">in_NoOfElementsRequested</name></type></param>,<param><type><name pos:line="1476" pos:column="69">out_ArrayOfpENCInfo</name></type></param>,<param><type><name pos:line="1476" pos:column="89">out_pNoOfElementsFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1477" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,in_NoOfElementsRequested,out_ArrayOfpENCInfo,out_pNoOfElementsFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="1479" pos:column="1">#<cpp:directive pos:line="1479" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1479" pos:column="9">IEnumDebugENCRelinkInfo2_Skip</name><parameter_list pos:line="1479" pos:column="38">(<param><type><name pos:line="1479" pos:column="39">This</name></type></param>,<param><type><name pos:line="1479" pos:column="44">in_NoOfElements</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1480" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,in_NoOfElements) )</cpp:value></cpp:define> 

<cpp:define pos:line="1482" pos:column="1">#<cpp:directive pos:line="1482" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1482" pos:column="9">IEnumDebugENCRelinkInfo2_Reset</name><parameter_list pos:line="1482" pos:column="39">(<param><type><name pos:line="1482" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1483" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1485" pos:column="1">#<cpp:directive pos:line="1485" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1485" pos:column="9">IEnumDebugENCRelinkInfo2_Clone</name><parameter_list pos:line="1485" pos:column="39">(<param><type><name pos:line="1485" pos:column="40">This</name></type></param>,<param><type><name pos:line="1485" pos:column="45">out_ppEnumENCRelinkInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1486" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,out_ppEnumENCRelinkInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="1488" pos:column="1">#<cpp:directive pos:line="1488" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1488" pos:column="9">IEnumDebugENCRelinkInfo2_GetCount</name><parameter_list pos:line="1488" pos:column="42">(<param><type><name pos:line="1488" pos:column="43">This</name></type></param>,<param><type><name pos:line="1488" pos:column="48">out_pCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1489" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,out_pCount) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1491" pos:column="1">#<cpp:directive pos:line="1491" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1491" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1494" pos:column="1">#<cpp:directive pos:line="1494" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1494" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1499" pos:column="1">#<cpp:directive pos:line="1499" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1499" pos:column="9">/* __IEnumDebugENCRelinkInfo2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1502" pos:column="1">#<cpp:directive pos:line="1502" pos:column="2">ifndef</cpp:directive> <name pos:line="1502" pos:column="9">__IDebugIDBInfo2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1503" pos:column="1">#<cpp:directive pos:line="1503" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1503" pos:column="9">__IDebugIDBInfo2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1505" pos:column="1">/* interface IDebugIDBInfo2 */</comment>
<comment type="block" pos:line="1506" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1509" pos:column="1">EXTERN_C</name> <specifier pos:line="1509" pos:column="10">const</specifier> <name pos:line="1509" pos:column="16">IID</name></type> <name pos:line="1509" pos:column="20">IID_IDebugIDBInfo2</name></decl>;</decl_stmt>

<cpp:if pos:line="1511" pos:column="1">#<cpp:directive pos:line="1511" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1511" pos:column="5">defined</name><argument_list pos:line="1511" pos:column="12">(<argument><expr><name pos:line="1511" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1511" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1511" pos:column="29">!</op:operator><call><name pos:line="1511" pos:column="30">defined</name><argument_list pos:line="1511" pos:column="37">(<argument><expr><name pos:line="1511" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1513" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1513" pos:column="19">(<argument pos:line="1513" pos:column="20">"9B7DE9A9-BD59-11d2-9238-00A02448799A"</argument>)</argument_list></macro>
    <label><name pos:line="1514" pos:column="5">IDebugIDBInfo2</name> :</label> <expr_stmt><expr pos:line="1514" pos:column="22">public <name pos:line="1514" pos:column="29">IUnknown</name>
    <block pos:line="1515" pos:column="5">{
    <expr pos:line="1516" pos:column="5">public<op:operator pos:line="1516" pos:column="11">:</op:operator>
        virtual <name pos:line="1517" pos:column="17">HRESULT</name> <name pos:line="1517" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1517" pos:column="43">GetInfo</name><argument_list pos:line="1517" pos:column="50">( 
            <comment type="block" pos:line="1518" pos:column="13">/* [out] */</comment> <argument pos:line="1518" pos:column="25">__RPC__deref_out_opt BSTR *out_pbstrIDBFile</argument>)</argument_list></macro> <op:operator pos:line="1518" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="1518" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1522" pos:column="1">#<cpp:directive pos:line="1522" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1522" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1524" pos:column="5">typedef <type><struct pos:line="1524" pos:column="13">struct <name pos:line="1524" pos:column="20">IDebugIDBInfo2Vtbl</name>
    <block pos:line="1525" pos:column="5">{<public type="default" pos:line="1525" pos:column="6">
        <function_decl><type><name pos:line="1526" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1528" pos:column="9">HRESULT</name></type> ( <name pos:line="1528" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1528" pos:column="37">*</type:modifier><name pos:line="1528" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1528" pos:column="54">( 
            <param><decl><type><name pos:line="1529" pos:column="13">IDebugIDBInfo2</name> <type:modifier pos:line="1529" pos:column="28">*</type:modifier></type> <name pos:line="1529" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1530" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1530" pos:column="24">__RPC__in</name> <name pos:line="1530" pos:column="34">REFIID</name></type> <name pos:line="1530" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1531" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1532" pos:column="13">__RPC__deref_out</name>  <name pos:line="1532" pos:column="31">void</name> <type:modifier pos:line="1532" pos:column="36">*</type:modifier><type:modifier pos:line="1532" pos:column="37">*</type:modifier></type><name pos:line="1532" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1534" pos:column="9">ULONG</name></type> ( <name pos:line="1534" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1534" pos:column="35">*</type:modifier><name pos:line="1534" pos:column="36">AddRef</name> )<parameter_list pos:line="1534" pos:column="44">( 
            <param><decl><type><name pos:line="1535" pos:column="13">IDebugIDBInfo2</name> <type:modifier pos:line="1535" pos:column="28">*</type:modifier></type> <name pos:line="1535" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1537" pos:column="9">ULONG</name></type> ( <name pos:line="1537" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1537" pos:column="35">*</type:modifier><name pos:line="1537" pos:column="36">Release</name> )<parameter_list pos:line="1537" pos:column="45">( 
            <param><decl><type><name pos:line="1538" pos:column="13">IDebugIDBInfo2</name> <type:modifier pos:line="1538" pos:column="28">*</type:modifier></type> <name pos:line="1538" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1540" pos:column="9">HRESULT</name></type> ( <name pos:line="1540" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1540" pos:column="37">*</type:modifier><name pos:line="1540" pos:column="38">GetInfo</name> )<parameter_list pos:line="1540" pos:column="47">( 
            <param><decl><type><name pos:line="1541" pos:column="13">IDebugIDBInfo2</name> <type:modifier pos:line="1541" pos:column="28">*</type:modifier></type> <name pos:line="1541" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1542" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1542" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1542" pos:column="46">BSTR</name> <type:modifier pos:line="1542" pos:column="51">*</type:modifier></type><name pos:line="1542" pos:column="52">out_pbstrIDBFile</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1544" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1545" pos:column="7">IDebugIDBInfo2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1547" pos:column="5">interface</name></type> <name pos:line="1547" pos:column="15">IDebugIDBInfo2</name>
    <argument_list pos:line="1548" pos:column="5">{
        <argument><expr><name pos:line="1549" pos:column="9">CONST_VTBL</name> struct <name pos:line="1549" pos:column="27">IDebugIDBInfo2Vtbl</name> <op:operator pos:line="1549" pos:column="46">*</op:operator><name pos:line="1549" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1554" pos:column="1">#<cpp:directive pos:line="1554" pos:column="2">ifdef</cpp:directive> <name pos:line="1554" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1557" pos:column="1">#<cpp:directive pos:line="1557" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1557" pos:column="9">IDebugIDBInfo2_QueryInterface</name><parameter_list pos:line="1557" pos:column="38">(<param><type><name pos:line="1557" pos:column="39">This</name></type></param>,<param><type><name pos:line="1557" pos:column="44">riid</name></type></param>,<param><type><name pos:line="1557" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1558" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1560" pos:column="1">#<cpp:directive pos:line="1560" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1560" pos:column="9">IDebugIDBInfo2_AddRef</name><parameter_list pos:line="1560" pos:column="30">(<param><type><name pos:line="1560" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1561" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1563" pos:column="1">#<cpp:directive pos:line="1563" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1563" pos:column="9">IDebugIDBInfo2_Release</name><parameter_list pos:line="1563" pos:column="31">(<param><type><name pos:line="1563" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1564" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1567" pos:column="1">#<cpp:directive pos:line="1567" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1567" pos:column="9">IDebugIDBInfo2_GetInfo</name><parameter_list pos:line="1567" pos:column="31">(<param><type><name pos:line="1567" pos:column="32">This</name></type></param>,<param><type><name pos:line="1567" pos:column="37">out_pbstrIDBFile</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1568" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInfo(This,out_pbstrIDBFile) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1570" pos:column="1">#<cpp:directive pos:line="1570" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1570" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1573" pos:column="1">#<cpp:directive pos:line="1573" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1573" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1578" pos:column="1">#<cpp:directive pos:line="1578" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1578" pos:column="9">/* __IDebugIDBInfo2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1581" pos:column="1">#<cpp:directive pos:line="1581" pos:column="2">ifndef</cpp:directive> <name pos:line="1581" pos:column="9">__IEnumDebugIDBInfo2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1582" pos:column="1">#<cpp:directive pos:line="1582" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1582" pos:column="9">__IEnumDebugIDBInfo2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1584" pos:column="1">/* interface IEnumDebugIDBInfo2 */</comment>
<comment type="block" pos:line="1585" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1588" pos:column="1">EXTERN_C</name> <specifier pos:line="1588" pos:column="10">const</specifier> <name pos:line="1588" pos:column="16">IID</name></type> <name pos:line="1588" pos:column="20">IID_IEnumDebugIDBInfo2</name></decl>;</decl_stmt>

<cpp:if pos:line="1590" pos:column="1">#<cpp:directive pos:line="1590" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1590" pos:column="5">defined</name><argument_list pos:line="1590" pos:column="12">(<argument><expr><name pos:line="1590" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1590" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1590" pos:column="29">!</op:operator><call><name pos:line="1590" pos:column="30">defined</name><argument_list pos:line="1590" pos:column="37">(<argument><expr><name pos:line="1590" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1592" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1592" pos:column="19">(<argument pos:line="1592" pos:column="20">"B34E469B-BD59-11d2-9238-00A02448799A"</argument>)</argument_list></macro>
    <label><name pos:line="1593" pos:column="5">IEnumDebugIDBInfo2</name> :</label> <expr_stmt><expr pos:line="1593" pos:column="26">public <name pos:line="1593" pos:column="33">IUnknown</name>
    <block pos:line="1594" pos:column="5">{
    <expr pos:line="1595" pos:column="5">public<op:operator pos:line="1595" pos:column="11">:</op:operator>
        virtual <name pos:line="1596" pos:column="17">HRESULT</name> <name pos:line="1596" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1596" pos:column="43">Next</name><argument_list pos:line="1596" pos:column="47">( 
            <comment type="block" pos:line="1597" pos:column="13">/* [in] */</comment> <argument pos:line="1597" pos:column="24">ULONG in_NoOfElementsRequested</argument>,
            <comment type="block" pos:line="1598" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="1598" pos:column="45">__RPC__out_ecount_part(in_NoOfElementsRequested, *out_pNoOfElementsFetched) IDebugIDBInfo2 **out_ArrayOfpIDBInfo2</argument>,
            <comment type="block" pos:line="1599" pos:column="13">/* [out] */</comment> <argument pos:line="1599" pos:column="25">__RPC__out ULONG *out_pNoOfElementsFetched</argument>)</argument_list></macro> <op:operator pos:line="1599" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="1599" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="1601" pos:column="9">virtual <name pos:line="1601" pos:column="17">HRESULT</name> <name pos:line="1601" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1601" pos:column="43">Skip</name><argument_list pos:line="1601" pos:column="47">( 
            <comment type="block" pos:line="1602" pos:column="13">/* [in] */</comment> <argument pos:line="1602" pos:column="24">ULONG in_NoOfElements</argument>)</argument_list></macro> <op:operator pos:line="1602" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="1602" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="1604" pos:column="9">virtual <name pos:line="1604" pos:column="17">HRESULT</name> <name pos:line="1604" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1604" pos:column="43">Reset</name><argument_list pos:line="1604" pos:column="48">( <argument><expr><name pos:line="1604" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1604" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="1604" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="1606" pos:column="9">virtual <name pos:line="1606" pos:column="17">HRESULT</name> <name pos:line="1606" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1606" pos:column="43">Clone</name><argument_list pos:line="1606" pos:column="48">( 
            <comment type="block" pos:line="1607" pos:column="13">/* [out] */</comment> <argument pos:line="1607" pos:column="25">__RPC__deref_out_opt IEnumDebugIDBInfo2 **out_ppEnumIDBInfo2</argument>)</argument_list></macro> <op:operator pos:line="1607" pos:column="87">=</op:operator> <lit:literal type="number" pos:line="1607" pos:column="89">0</lit:literal></expr>;
        
        <expr pos:line="1609" pos:column="9">virtual <name pos:line="1609" pos:column="17">HRESULT</name> <name pos:line="1609" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1609" pos:column="43">GetCount</name><argument_list pos:line="1609" pos:column="51">( 
            <comment type="block" pos:line="1610" pos:column="13">/* [out] */</comment> <argument pos:line="1610" pos:column="25">__RPC__out ULONG *out_pCount</argument>)</argument_list></macro> <op:operator pos:line="1610" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="1610" pos:column="57">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1614" pos:column="1">#<cpp:directive pos:line="1614" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1614" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1616" pos:column="5">typedef <type><struct pos:line="1616" pos:column="13">struct <name pos:line="1616" pos:column="20">IEnumDebugIDBInfo2Vtbl</name>
    <block pos:line="1617" pos:column="5">{<public type="default" pos:line="1617" pos:column="6">
        <function_decl><type><name pos:line="1618" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1620" pos:column="9">HRESULT</name></type> ( <name pos:line="1620" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1620" pos:column="37">*</type:modifier><name pos:line="1620" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1620" pos:column="54">( 
            <param><decl><type><name pos:line="1621" pos:column="13">IEnumDebugIDBInfo2</name> <type:modifier pos:line="1621" pos:column="32">*</type:modifier></type> <name pos:line="1621" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1622" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1622" pos:column="24">__RPC__in</name> <name pos:line="1622" pos:column="34">REFIID</name></type> <name pos:line="1622" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1623" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1624" pos:column="13">__RPC__deref_out</name>  <name pos:line="1624" pos:column="31">void</name> <type:modifier pos:line="1624" pos:column="36">*</type:modifier><type:modifier pos:line="1624" pos:column="37">*</type:modifier></type><name pos:line="1624" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1626" pos:column="9">ULONG</name></type> ( <name pos:line="1626" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1626" pos:column="35">*</type:modifier><name pos:line="1626" pos:column="36">AddRef</name> )<parameter_list pos:line="1626" pos:column="44">( 
            <param><decl><type><name pos:line="1627" pos:column="13">IEnumDebugIDBInfo2</name> <type:modifier pos:line="1627" pos:column="32">*</type:modifier></type> <name pos:line="1627" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1629" pos:column="9">ULONG</name></type> ( <name pos:line="1629" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1629" pos:column="35">*</type:modifier><name pos:line="1629" pos:column="36">Release</name> )<parameter_list pos:line="1629" pos:column="45">( 
            <param><decl><type><name pos:line="1630" pos:column="13">IEnumDebugIDBInfo2</name> <type:modifier pos:line="1630" pos:column="32">*</type:modifier></type> <name pos:line="1630" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1632" pos:column="9">HRESULT</name> <argument_list pos:line="1632" pos:column="17">( <argument pos:line="1632" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1632" pos:column="44">(</op:operator> 
            <name pos:line="1633" pos:column="13">IEnumDebugIDBInfo2</name> <op:operator pos:line="1633" pos:column="32">*</op:operator> <name pos:line="1633" pos:column="34">This</name><op:operator pos:line="1633" pos:column="38">,</op:operator>
            <comment type="block" pos:line="1634" pos:column="13">/* [in] */</comment> <name pos:line="1634" pos:column="24">ULONG</name> <name pos:line="1634" pos:column="30">in_NoOfElementsRequested</name><op:operator pos:line="1634" pos:column="54">,</op:operator>
            <comment type="block" pos:line="1635" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="1635" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="1635" pos:column="67">(<argument pos:line="1635" pos:column="68">in_NoOfElementsRequested</argument>, <argument pos:line="1635" pos:column="94">*out_pNoOfElementsFetched</argument>)</argument_list></macro> <name pos:line="1635" pos:column="121">IDebugIDBInfo2</name> <op:operator pos:line="1635" pos:column="136">*</op:operator><op:operator pos:line="1635" pos:column="137">*</op:operator><name pos:line="1635" pos:column="138">out_ArrayOfpIDBInfo2</name><op:operator pos:line="1635" pos:column="158">,</op:operator>
            <comment type="block" pos:line="1636" pos:column="13">/* [out] */</comment> <name pos:line="1636" pos:column="25">__RPC__out</name> <name pos:line="1636" pos:column="36">ULONG</name> <op:operator pos:line="1636" pos:column="42">*</op:operator><name pos:line="1636" pos:column="43">out_pNoOfElementsFetched</name><op:operator pos:line="1636" pos:column="67">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="1638" pos:column="9">HRESULT</name></type> ( <name pos:line="1638" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1638" pos:column="37">*</type:modifier><name pos:line="1638" pos:column="38">Skip</name> )<parameter_list pos:line="1638" pos:column="44">( 
            <param><decl><type><name pos:line="1639" pos:column="13">IEnumDebugIDBInfo2</name> <type:modifier pos:line="1639" pos:column="32">*</type:modifier></type> <name pos:line="1639" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1640" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1640" pos:column="24">ULONG</name></type> <name pos:line="1640" pos:column="30">in_NoOfElements</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1642" pos:column="9">HRESULT</name></type> ( <name pos:line="1642" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1642" pos:column="37">*</type:modifier><name pos:line="1642" pos:column="38">Reset</name> )<parameter_list pos:line="1642" pos:column="45">( 
            <param><decl><type><name pos:line="1643" pos:column="13">IEnumDebugIDBInfo2</name> <type:modifier pos:line="1643" pos:column="32">*</type:modifier></type> <name pos:line="1643" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1645" pos:column="9">HRESULT</name></type> ( <name pos:line="1645" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1645" pos:column="37">*</type:modifier><name pos:line="1645" pos:column="38">Clone</name> )<parameter_list pos:line="1645" pos:column="45">( 
            <param><decl><type><name pos:line="1646" pos:column="13">IEnumDebugIDBInfo2</name> <type:modifier pos:line="1646" pos:column="32">*</type:modifier></type> <name pos:line="1646" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1647" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1647" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1647" pos:column="46">IEnumDebugIDBInfo2</name> <type:modifier pos:line="1647" pos:column="65">*</type:modifier><type:modifier pos:line="1647" pos:column="66">*</type:modifier></type><name pos:line="1647" pos:column="67">out_ppEnumIDBInfo2</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1649" pos:column="9">HRESULT</name></type> ( <name pos:line="1649" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1649" pos:column="37">*</type:modifier><name pos:line="1649" pos:column="38">GetCount</name> )<parameter_list pos:line="1649" pos:column="48">( 
            <param><decl><type><name pos:line="1650" pos:column="13">IEnumDebugIDBInfo2</name> <type:modifier pos:line="1650" pos:column="32">*</type:modifier></type> <name pos:line="1650" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1651" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1651" pos:column="25">__RPC__out</name> <name pos:line="1651" pos:column="36">ULONG</name> <type:modifier pos:line="1651" pos:column="42">*</type:modifier></type><name pos:line="1651" pos:column="43">out_pCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1653" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1654" pos:column="7">IEnumDebugIDBInfo2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1656" pos:column="5">interface</name></type> <name pos:line="1656" pos:column="15">IEnumDebugIDBInfo2</name>
    <argument_list pos:line="1657" pos:column="5">{
        <argument><expr><name pos:line="1658" pos:column="9">CONST_VTBL</name> struct <name pos:line="1658" pos:column="27">IEnumDebugIDBInfo2Vtbl</name> <op:operator pos:line="1658" pos:column="50">*</op:operator><name pos:line="1658" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1663" pos:column="1">#<cpp:directive pos:line="1663" pos:column="2">ifdef</cpp:directive> <name pos:line="1663" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1666" pos:column="1">#<cpp:directive pos:line="1666" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1666" pos:column="9">IEnumDebugIDBInfo2_QueryInterface</name><parameter_list pos:line="1666" pos:column="42">(<param><type><name pos:line="1666" pos:column="43">This</name></type></param>,<param><type><name pos:line="1666" pos:column="48">riid</name></type></param>,<param><type><name pos:line="1666" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1667" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1669" pos:column="1">#<cpp:directive pos:line="1669" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1669" pos:column="9">IEnumDebugIDBInfo2_AddRef</name><parameter_list pos:line="1669" pos:column="34">(<param><type><name pos:line="1669" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1670" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1672" pos:column="1">#<cpp:directive pos:line="1672" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1672" pos:column="9">IEnumDebugIDBInfo2_Release</name><parameter_list pos:line="1672" pos:column="35">(<param><type><name pos:line="1672" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1673" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1676" pos:column="1">#<cpp:directive pos:line="1676" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1676" pos:column="9">IEnumDebugIDBInfo2_Next</name><parameter_list pos:line="1676" pos:column="32">(<param><type><name pos:line="1676" pos:column="33">This</name></type></param>,<param><type><name pos:line="1676" pos:column="38">in_NoOfElementsRequested</name></type></param>,<param><type><name pos:line="1676" pos:column="63">out_ArrayOfpIDBInfo2</name></type></param>,<param><type><name pos:line="1676" pos:column="84">out_pNoOfElementsFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1677" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,in_NoOfElementsRequested,out_ArrayOfpIDBInfo2,out_pNoOfElementsFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="1679" pos:column="1">#<cpp:directive pos:line="1679" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1679" pos:column="9">IEnumDebugIDBInfo2_Skip</name><parameter_list pos:line="1679" pos:column="32">(<param><type><name pos:line="1679" pos:column="33">This</name></type></param>,<param><type><name pos:line="1679" pos:column="38">in_NoOfElements</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1680" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,in_NoOfElements) )</cpp:value></cpp:define> 

<cpp:define pos:line="1682" pos:column="1">#<cpp:directive pos:line="1682" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1682" pos:column="9">IEnumDebugIDBInfo2_Reset</name><parameter_list pos:line="1682" pos:column="33">(<param><type><name pos:line="1682" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1683" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1685" pos:column="1">#<cpp:directive pos:line="1685" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1685" pos:column="9">IEnumDebugIDBInfo2_Clone</name><parameter_list pos:line="1685" pos:column="33">(<param><type><name pos:line="1685" pos:column="34">This</name></type></param>,<param><type><name pos:line="1685" pos:column="39">out_ppEnumIDBInfo2</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1686" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,out_ppEnumIDBInfo2) )</cpp:value></cpp:define> 

<cpp:define pos:line="1688" pos:column="1">#<cpp:directive pos:line="1688" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1688" pos:column="9">IEnumDebugIDBInfo2_GetCount</name><parameter_list pos:line="1688" pos:column="36">(<param><type><name pos:line="1688" pos:column="37">This</name></type></param>,<param><type><name pos:line="1688" pos:column="42">out_pCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1689" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,out_pCount) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1691" pos:column="1">#<cpp:directive pos:line="1691" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1691" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1694" pos:column="1">#<cpp:directive pos:line="1694" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1694" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1699" pos:column="1">#<cpp:directive pos:line="1699" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1699" pos:column="9">/* __IEnumDebugIDBInfo2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1702" pos:column="1">#<cpp:directive pos:line="1702" pos:column="2">ifndef</cpp:directive> <name pos:line="1702" pos:column="9">__IDebugENCBuildInfo2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1703" pos:column="1">#<cpp:directive pos:line="1703" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1703" pos:column="9">__IDebugENCBuildInfo2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1705" pos:column="1">/* interface IDebugENCBuildInfo2 */</comment>
<comment type="block" pos:line="1706" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1709" pos:column="1">EXTERN_C</name> <specifier pos:line="1709" pos:column="10">const</specifier> <name pos:line="1709" pos:column="16">IID</name></type> <name pos:line="1709" pos:column="20">IID_IDebugENCBuildInfo2</name></decl>;</decl_stmt>

<cpp:if pos:line="1711" pos:column="1">#<cpp:directive pos:line="1711" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1711" pos:column="5">defined</name><argument_list pos:line="1711" pos:column="12">(<argument><expr><name pos:line="1711" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1711" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1711" pos:column="29">!</op:operator><call><name pos:line="1711" pos:column="30">defined</name><argument_list pos:line="1711" pos:column="37">(<argument><expr><name pos:line="1711" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1713" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1713" pos:column="19">(<argument pos:line="1713" pos:column="20">"EA70281B-BD58-11d2-9238-00A02448799A"</argument>)</argument_list></macro>
    <label><name pos:line="1714" pos:column="5">IDebugENCBuildInfo2</name> :</label> <expr_stmt><expr pos:line="1714" pos:column="27">public <name pos:line="1714" pos:column="34">IUnknown</name>
    <block pos:line="1715" pos:column="5">{
    <expr pos:line="1716" pos:column="5">public<op:operator pos:line="1716" pos:column="11">:</op:operator>
        virtual <name pos:line="1717" pos:column="17">HRESULT</name> <name pos:line="1717" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1717" pos:column="43">GetTargetBuildInfo</name><argument_list pos:line="1717" pos:column="61">( 
            <comment type="block" pos:line="1718" pos:column="13">/* [in] */</comment> <argument pos:line="1718" pos:column="24">__RPC__in LPCOLESTR in_szTargetPath</argument>,
            <comment type="block" pos:line="1719" pos:column="13">/* [out] */</comment> <argument pos:line="1719" pos:column="25">__RPC__deref_out_opt BSTR *out_pbstrSourcePath</argument>,
            <comment type="block" pos:line="1720" pos:column="13">/* [out] */</comment> <argument pos:line="1720" pos:column="25">__RPC__deref_out_opt BSTR *out_pbstrCommand</argument>,
            <comment type="block" pos:line="1721" pos:column="13">/* [out] */</comment> <argument pos:line="1721" pos:column="25">__RPC__deref_out_opt BSTR *out_pbstrCurrentdir</argument>)</argument_list></macro> <op:operator pos:line="1721" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="1721" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="1723" pos:column="9">virtual <name pos:line="1723" pos:column="17">HRESULT</name> <name pos:line="1723" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1723" pos:column="43">IsTargetEligible</name><argument_list pos:line="1723" pos:column="59">( 
            <comment type="block" pos:line="1724" pos:column="13">/* [in] */</comment> <argument pos:line="1724" pos:column="24">__RPC__in LPCOLESTR in_szTargetPath</argument>)</argument_list></macro> <op:operator pos:line="1724" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="1724" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="1726" pos:column="9">virtual <name pos:line="1726" pos:column="17">HRESULT</name> <name pos:line="1726" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1726" pos:column="43">EnumDebugIDBInfo</name><argument_list pos:line="1726" pos:column="59">( 
            <comment type="block" pos:line="1727" pos:column="13">/* [out] */</comment> <argument pos:line="1727" pos:column="25">__RPC__deref_out_opt IEnumDebugIDBInfo2 **out_ppEnumIDBInfo</argument>)</argument_list></macro> <op:operator pos:line="1727" pos:column="86">=</op:operator> <lit:literal type="number" pos:line="1727" pos:column="88">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1731" pos:column="1">#<cpp:directive pos:line="1731" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1731" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1733" pos:column="5">typedef <type><struct pos:line="1733" pos:column="13">struct <name pos:line="1733" pos:column="20">IDebugENCBuildInfo2Vtbl</name>
    <block pos:line="1734" pos:column="5">{<public type="default" pos:line="1734" pos:column="6">
        <function_decl><type><name pos:line="1735" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1737" pos:column="9">HRESULT</name></type> ( <name pos:line="1737" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1737" pos:column="37">*</type:modifier><name pos:line="1737" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1737" pos:column="54">( 
            <param><decl><type><name pos:line="1738" pos:column="13">IDebugENCBuildInfo2</name> <type:modifier pos:line="1738" pos:column="33">*</type:modifier></type> <name pos:line="1738" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="1739" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1739" pos:column="24">__RPC__in</name> <name pos:line="1739" pos:column="34">REFIID</name></type> <name pos:line="1739" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1740" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1741" pos:column="13">__RPC__deref_out</name>  <name pos:line="1741" pos:column="31">void</name> <type:modifier pos:line="1741" pos:column="36">*</type:modifier><type:modifier pos:line="1741" pos:column="37">*</type:modifier></type><name pos:line="1741" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1743" pos:column="9">ULONG</name></type> ( <name pos:line="1743" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1743" pos:column="35">*</type:modifier><name pos:line="1743" pos:column="36">AddRef</name> )<parameter_list pos:line="1743" pos:column="44">( 
            <param><decl><type><name pos:line="1744" pos:column="13">IDebugENCBuildInfo2</name> <type:modifier pos:line="1744" pos:column="33">*</type:modifier></type> <name pos:line="1744" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1746" pos:column="9">ULONG</name></type> ( <name pos:line="1746" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1746" pos:column="35">*</type:modifier><name pos:line="1746" pos:column="36">Release</name> )<parameter_list pos:line="1746" pos:column="45">( 
            <param><decl><type><name pos:line="1747" pos:column="13">IDebugENCBuildInfo2</name> <type:modifier pos:line="1747" pos:column="33">*</type:modifier></type> <name pos:line="1747" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1749" pos:column="9">HRESULT</name></type> ( <name pos:line="1749" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1749" pos:column="37">*</type:modifier><name pos:line="1749" pos:column="38">GetTargetBuildInfo</name> )<parameter_list pos:line="1749" pos:column="58">( 
            <param><decl><type><name pos:line="1750" pos:column="13">IDebugENCBuildInfo2</name> <type:modifier pos:line="1750" pos:column="33">*</type:modifier></type> <name pos:line="1750" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="1751" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1751" pos:column="24">__RPC__in</name> <name pos:line="1751" pos:column="34">LPCOLESTR</name></type> <name pos:line="1751" pos:column="44">in_szTargetPath</name></decl></param>,
            <comment type="block" pos:line="1752" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1752" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1752" pos:column="46">BSTR</name> <type:modifier pos:line="1752" pos:column="51">*</type:modifier></type><name pos:line="1752" pos:column="52">out_pbstrSourcePath</name></decl></param>,
            <comment type="block" pos:line="1753" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1753" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1753" pos:column="46">BSTR</name> <type:modifier pos:line="1753" pos:column="51">*</type:modifier></type><name pos:line="1753" pos:column="52">out_pbstrCommand</name></decl></param>,
            <comment type="block" pos:line="1754" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1754" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1754" pos:column="46">BSTR</name> <type:modifier pos:line="1754" pos:column="51">*</type:modifier></type><name pos:line="1754" pos:column="52">out_pbstrCurrentdir</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1756" pos:column="9">HRESULT</name></type> ( <name pos:line="1756" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1756" pos:column="37">*</type:modifier><name pos:line="1756" pos:column="38">IsTargetEligible</name> )<parameter_list pos:line="1756" pos:column="56">( 
            <param><decl><type><name pos:line="1757" pos:column="13">IDebugENCBuildInfo2</name> <type:modifier pos:line="1757" pos:column="33">*</type:modifier></type> <name pos:line="1757" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="1758" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1758" pos:column="24">__RPC__in</name> <name pos:line="1758" pos:column="34">LPCOLESTR</name></type> <name pos:line="1758" pos:column="44">in_szTargetPath</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1760" pos:column="9">HRESULT</name></type> ( <name pos:line="1760" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1760" pos:column="37">*</type:modifier><name pos:line="1760" pos:column="38">EnumDebugIDBInfo</name> )<parameter_list pos:line="1760" pos:column="56">( 
            <param><decl><type><name pos:line="1761" pos:column="13">IDebugENCBuildInfo2</name> <type:modifier pos:line="1761" pos:column="33">*</type:modifier></type> <name pos:line="1761" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="1762" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1762" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1762" pos:column="46">IEnumDebugIDBInfo2</name> <type:modifier pos:line="1762" pos:column="65">*</type:modifier><type:modifier pos:line="1762" pos:column="66">*</type:modifier></type><name pos:line="1762" pos:column="67">out_ppEnumIDBInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1764" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1765" pos:column="7">IDebugENCBuildInfo2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1767" pos:column="5">interface</name></type> <name pos:line="1767" pos:column="15">IDebugENCBuildInfo2</name>
    <argument_list pos:line="1768" pos:column="5">{
        <argument><expr><name pos:line="1769" pos:column="9">CONST_VTBL</name> struct <name pos:line="1769" pos:column="27">IDebugENCBuildInfo2Vtbl</name> <op:operator pos:line="1769" pos:column="51">*</op:operator><name pos:line="1769" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1774" pos:column="1">#<cpp:directive pos:line="1774" pos:column="2">ifdef</cpp:directive> <name pos:line="1774" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1777" pos:column="1">#<cpp:directive pos:line="1777" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1777" pos:column="9">IDebugENCBuildInfo2_QueryInterface</name><parameter_list pos:line="1777" pos:column="43">(<param><type><name pos:line="1777" pos:column="44">This</name></type></param>,<param><type><name pos:line="1777" pos:column="49">riid</name></type></param>,<param><type><name pos:line="1777" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1778" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1780" pos:column="1">#<cpp:directive pos:line="1780" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1780" pos:column="9">IDebugENCBuildInfo2_AddRef</name><parameter_list pos:line="1780" pos:column="35">(<param><type><name pos:line="1780" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1781" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1783" pos:column="1">#<cpp:directive pos:line="1783" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1783" pos:column="9">IDebugENCBuildInfo2_Release</name><parameter_list pos:line="1783" pos:column="36">(<param><type><name pos:line="1783" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1784" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1787" pos:column="1">#<cpp:directive pos:line="1787" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1787" pos:column="9">IDebugENCBuildInfo2_GetTargetBuildInfo</name><parameter_list pos:line="1787" pos:column="47">(<param><type><name pos:line="1787" pos:column="48">This</name></type></param>,<param><type><name pos:line="1787" pos:column="53">in_szTargetPath</name></type></param>,<param><type><name pos:line="1787" pos:column="69">out_pbstrSourcePath</name></type></param>,<param><type><name pos:line="1787" pos:column="89">out_pbstrCommand</name></type></param>,<param><type><name pos:line="1787" pos:column="106">out_pbstrCurrentdir</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1788" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTargetBuildInfo(This,in_szTargetPath,out_pbstrSourcePath,out_pbstrCommand,out_pbstrCurrentdir) )</cpp:value></cpp:define> 

<cpp:define pos:line="1790" pos:column="1">#<cpp:directive pos:line="1790" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1790" pos:column="9">IDebugENCBuildInfo2_IsTargetEligible</name><parameter_list pos:line="1790" pos:column="45">(<param><type><name pos:line="1790" pos:column="46">This</name></type></param>,<param><type><name pos:line="1790" pos:column="51">in_szTargetPath</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1791" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsTargetEligible(This,in_szTargetPath) )</cpp:value></cpp:define> 

<cpp:define pos:line="1793" pos:column="1">#<cpp:directive pos:line="1793" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1793" pos:column="9">IDebugENCBuildInfo2_EnumDebugIDBInfo</name><parameter_list pos:line="1793" pos:column="45">(<param><type><name pos:line="1793" pos:column="46">This</name></type></param>,<param><type><name pos:line="1793" pos:column="51">out_ppEnumIDBInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1794" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumDebugIDBInfo(This,out_ppEnumIDBInfo) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1796" pos:column="1">#<cpp:directive pos:line="1796" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1796" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1799" pos:column="1">#<cpp:directive pos:line="1799" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1799" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1804" pos:column="1">#<cpp:directive pos:line="1804" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1804" pos:column="9">/* __IDebugENCBuildInfo2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1807" pos:column="1">#<cpp:directive pos:line="1807" pos:column="2">ifndef</cpp:directive> <name pos:line="1807" pos:column="9">__IDebugENCUpdateOnRelinkEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1808" pos:column="1">#<cpp:directive pos:line="1808" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1808" pos:column="9">__IDebugENCUpdateOnRelinkEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1810" pos:column="1">/* interface IDebugENCUpdateOnRelinkEvent2 */</comment>
<comment type="block" pos:line="1811" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1814" pos:column="1">EXTERN_C</name> <specifier pos:line="1814" pos:column="10">const</specifier> <name pos:line="1814" pos:column="16">IID</name></type> <name pos:line="1814" pos:column="20">IID_IDebugENCUpdateOnRelinkEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="1816" pos:column="1">#<cpp:directive pos:line="1816" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1816" pos:column="5">defined</name><argument_list pos:line="1816" pos:column="12">(<argument><expr><name pos:line="1816" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1816" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1816" pos:column="29">!</op:operator><call><name pos:line="1816" pos:column="30">defined</name><argument_list pos:line="1816" pos:column="37">(<argument><expr><name pos:line="1816" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1818" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1818" pos:column="19">(<argument pos:line="1818" pos:column="20">"0EBF1959-BD57-11d2-9238-00A02448799A"</argument>)</argument_list></macro>
    <label><name pos:line="1819" pos:column="5">IDebugENCUpdateOnRelinkEvent2</name> :</label> <expr_stmt><expr pos:line="1819" pos:column="37">public <name pos:line="1819" pos:column="44">IUnknown</name>
    <block pos:line="1820" pos:column="5">{
    <expr pos:line="1821" pos:column="5">public<op:operator pos:line="1821" pos:column="11">:</op:operator>
        virtual <name pos:line="1822" pos:column="17">HRESULT</name> <name pos:line="1822" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1822" pos:column="43">GetInfo</name><argument_list pos:line="1822" pos:column="50">( 
            <comment type="block" pos:line="1823" pos:column="13">/* [out] */</comment> <argument pos:line="1823" pos:column="25">__RPC__deref_out_opt IEnumDebugENCRelinkInfo2 **out_ppEnumENCRelinkInfo</argument>)</argument_list></macro> <op:operator pos:line="1823" pos:column="98">=</op:operator> <lit:literal type="number" pos:line="1823" pos:column="100">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1827" pos:column="1">#<cpp:directive pos:line="1827" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1827" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1829" pos:column="5">typedef <type><struct pos:line="1829" pos:column="13">struct <name pos:line="1829" pos:column="20">IDebugENCUpdateOnRelinkEvent2Vtbl</name>
    <block pos:line="1830" pos:column="5">{<public type="default" pos:line="1830" pos:column="6">
        <function_decl><type><name pos:line="1831" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1833" pos:column="9">HRESULT</name></type> ( <name pos:line="1833" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1833" pos:column="37">*</type:modifier><name pos:line="1833" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1833" pos:column="54">( 
            <param><decl><type><name pos:line="1834" pos:column="13">IDebugENCUpdateOnRelinkEvent2</name> <type:modifier pos:line="1834" pos:column="43">*</type:modifier></type> <name pos:line="1834" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="1835" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1835" pos:column="24">__RPC__in</name> <name pos:line="1835" pos:column="34">REFIID</name></type> <name pos:line="1835" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1836" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1837" pos:column="13">__RPC__deref_out</name>  <name pos:line="1837" pos:column="31">void</name> <type:modifier pos:line="1837" pos:column="36">*</type:modifier><type:modifier pos:line="1837" pos:column="37">*</type:modifier></type><name pos:line="1837" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1839" pos:column="9">ULONG</name></type> ( <name pos:line="1839" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1839" pos:column="35">*</type:modifier><name pos:line="1839" pos:column="36">AddRef</name> )<parameter_list pos:line="1839" pos:column="44">( 
            <param><decl><type><name pos:line="1840" pos:column="13">IDebugENCUpdateOnRelinkEvent2</name> <type:modifier pos:line="1840" pos:column="43">*</type:modifier></type> <name pos:line="1840" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1842" pos:column="9">ULONG</name></type> ( <name pos:line="1842" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1842" pos:column="35">*</type:modifier><name pos:line="1842" pos:column="36">Release</name> )<parameter_list pos:line="1842" pos:column="45">( 
            <param><decl><type><name pos:line="1843" pos:column="13">IDebugENCUpdateOnRelinkEvent2</name> <type:modifier pos:line="1843" pos:column="43">*</type:modifier></type> <name pos:line="1843" pos:column="45">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1845" pos:column="9">HRESULT</name></type> ( <name pos:line="1845" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1845" pos:column="37">*</type:modifier><name pos:line="1845" pos:column="38">GetInfo</name> )<parameter_list pos:line="1845" pos:column="47">( 
            <param><decl><type><name pos:line="1846" pos:column="13">IDebugENCUpdateOnRelinkEvent2</name> <type:modifier pos:line="1846" pos:column="43">*</type:modifier></type> <name pos:line="1846" pos:column="45">This</name></decl></param>,
            <comment type="block" pos:line="1847" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1847" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1847" pos:column="46">IEnumDebugENCRelinkInfo2</name> <type:modifier pos:line="1847" pos:column="71">*</type:modifier><type:modifier pos:line="1847" pos:column="72">*</type:modifier></type><name pos:line="1847" pos:column="73">out_ppEnumENCRelinkInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1849" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1850" pos:column="7">IDebugENCUpdateOnRelinkEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1852" pos:column="5">interface</name></type> <name pos:line="1852" pos:column="15">IDebugENCUpdateOnRelinkEvent2</name>
    <argument_list pos:line="1853" pos:column="5">{
        <argument><expr><name pos:line="1854" pos:column="9">CONST_VTBL</name> struct <name pos:line="1854" pos:column="27">IDebugENCUpdateOnRelinkEvent2Vtbl</name> <op:operator pos:line="1854" pos:column="61">*</op:operator><name pos:line="1854" pos:column="62">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1859" pos:column="1">#<cpp:directive pos:line="1859" pos:column="2">ifdef</cpp:directive> <name pos:line="1859" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1862" pos:column="1">#<cpp:directive pos:line="1862" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1862" pos:column="9">IDebugENCUpdateOnRelinkEvent2_QueryInterface</name><parameter_list pos:line="1862" pos:column="53">(<param><type><name pos:line="1862" pos:column="54">This</name></type></param>,<param><type><name pos:line="1862" pos:column="59">riid</name></type></param>,<param><type><name pos:line="1862" pos:column="64">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1863" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1865" pos:column="1">#<cpp:directive pos:line="1865" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1865" pos:column="9">IDebugENCUpdateOnRelinkEvent2_AddRef</name><parameter_list pos:line="1865" pos:column="45">(<param><type><name pos:line="1865" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1866" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1868" pos:column="1">#<cpp:directive pos:line="1868" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1868" pos:column="9">IDebugENCUpdateOnRelinkEvent2_Release</name><parameter_list pos:line="1868" pos:column="46">(<param><type><name pos:line="1868" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1869" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1872" pos:column="1">#<cpp:directive pos:line="1872" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1872" pos:column="9">IDebugENCUpdateOnRelinkEvent2_GetInfo</name><parameter_list pos:line="1872" pos:column="46">(<param><type><name pos:line="1872" pos:column="47">This</name></type></param>,<param><type><name pos:line="1872" pos:column="52">out_ppEnumENCRelinkInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1873" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInfo(This,out_ppEnumENCRelinkInfo) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1875" pos:column="1">#<cpp:directive pos:line="1875" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1875" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1878" pos:column="1">#<cpp:directive pos:line="1878" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1878" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1883" pos:column="1">#<cpp:directive pos:line="1883" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1883" pos:column="9">/* __IDebugENCUpdateOnRelinkEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1886" pos:column="1">#<cpp:directive pos:line="1886" pos:column="2">ifndef</cpp:directive> <name pos:line="1886" pos:column="9">__IDebugENCUpdateOnStaleCodeEvent2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1887" pos:column="1">#<cpp:directive pos:line="1887" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1887" pos:column="9">__IDebugENCUpdateOnStaleCodeEvent2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1889" pos:column="1">/* interface IDebugENCUpdateOnStaleCodeEvent2 */</comment>
<comment type="block" pos:line="1890" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1893" pos:column="1">EXTERN_C</name> <specifier pos:line="1893" pos:column="10">const</specifier> <name pos:line="1893" pos:column="16">IID</name></type> <name pos:line="1893" pos:column="20">IID_IDebugENCUpdateOnStaleCodeEvent2</name></decl>;</decl_stmt>

<cpp:if pos:line="1895" pos:column="1">#<cpp:directive pos:line="1895" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1895" pos:column="5">defined</name><argument_list pos:line="1895" pos:column="12">(<argument><expr><name pos:line="1895" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1895" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1895" pos:column="29">!</op:operator><call><name pos:line="1895" pos:column="30">defined</name><argument_list pos:line="1895" pos:column="37">(<argument><expr><name pos:line="1895" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1897" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1897" pos:column="19">(<argument pos:line="1897" pos:column="20">"2F01EB29-BD57-11d2-9238-00A02448799A"</argument>)</argument_list></macro>
    <label><name pos:line="1898" pos:column="5">IDebugENCUpdateOnStaleCodeEvent2</name> :</label> <expr_stmt><expr pos:line="1898" pos:column="40">public <name pos:line="1898" pos:column="47">IUnknown</name>
    <block pos:line="1899" pos:column="5">{
    <expr pos:line="1900" pos:column="5">public<op:operator pos:line="1900" pos:column="11">:</op:operator>
        virtual <name pos:line="1901" pos:column="17">HRESULT</name> <name pos:line="1901" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1901" pos:column="43">GetInfo</name><argument_list pos:line="1901" pos:column="50">( 
            <comment type="block" pos:line="1902" pos:column="13">/* [out] */</comment> <argument pos:line="1902" pos:column="25">__RPC__deref_out_opt IEnumDebugENCInfo2 **out_ppEnumENCInfo</argument>)</argument_list></macro> <op:operator pos:line="1902" pos:column="86">=</op:operator> <lit:literal type="number" pos:line="1902" pos:column="88">0</lit:literal></expr>;
        
        <expr pos:line="1904" pos:column="9">virtual <name pos:line="1904" pos:column="17">HRESULT</name> <name pos:line="1904" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1904" pos:column="43">GetHResult</name><argument_list pos:line="1904" pos:column="53">( 
            <comment type="block" pos:line="1905" pos:column="13">/* [out] */</comment> <argument pos:line="1905" pos:column="25">__RPC__out HRESULT *out_pHResult</argument>)</argument_list></macro> <op:operator pos:line="1905" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="1905" pos:column="61">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1909" pos:column="1">#<cpp:directive pos:line="1909" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1909" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1911" pos:column="5">typedef <type><struct pos:line="1911" pos:column="13">struct <name pos:line="1911" pos:column="20">IDebugENCUpdateOnStaleCodeEvent2Vtbl</name>
    <block pos:line="1912" pos:column="5">{<public type="default" pos:line="1912" pos:column="6">
        <function_decl><type><name pos:line="1913" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1915" pos:column="9">HRESULT</name></type> ( <name pos:line="1915" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1915" pos:column="37">*</type:modifier><name pos:line="1915" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1915" pos:column="54">( 
            <param><decl><type><name pos:line="1916" pos:column="13">IDebugENCUpdateOnStaleCodeEvent2</name> <type:modifier pos:line="1916" pos:column="46">*</type:modifier></type> <name pos:line="1916" pos:column="48">This</name></decl></param>,
            <comment type="block" pos:line="1917" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1917" pos:column="24">__RPC__in</name> <name pos:line="1917" pos:column="34">REFIID</name></type> <name pos:line="1917" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1918" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1919" pos:column="13">__RPC__deref_out</name>  <name pos:line="1919" pos:column="31">void</name> <type:modifier pos:line="1919" pos:column="36">*</type:modifier><type:modifier pos:line="1919" pos:column="37">*</type:modifier></type><name pos:line="1919" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1921" pos:column="9">ULONG</name></type> ( <name pos:line="1921" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1921" pos:column="35">*</type:modifier><name pos:line="1921" pos:column="36">AddRef</name> )<parameter_list pos:line="1921" pos:column="44">( 
            <param><decl><type><name pos:line="1922" pos:column="13">IDebugENCUpdateOnStaleCodeEvent2</name> <type:modifier pos:line="1922" pos:column="46">*</type:modifier></type> <name pos:line="1922" pos:column="48">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1924" pos:column="9">ULONG</name></type> ( <name pos:line="1924" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1924" pos:column="35">*</type:modifier><name pos:line="1924" pos:column="36">Release</name> )<parameter_list pos:line="1924" pos:column="45">( 
            <param><decl><type><name pos:line="1925" pos:column="13">IDebugENCUpdateOnStaleCodeEvent2</name> <type:modifier pos:line="1925" pos:column="46">*</type:modifier></type> <name pos:line="1925" pos:column="48">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1927" pos:column="9">HRESULT</name></type> ( <name pos:line="1927" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1927" pos:column="37">*</type:modifier><name pos:line="1927" pos:column="38">GetInfo</name> )<parameter_list pos:line="1927" pos:column="47">( 
            <param><decl><type><name pos:line="1928" pos:column="13">IDebugENCUpdateOnStaleCodeEvent2</name> <type:modifier pos:line="1928" pos:column="46">*</type:modifier></type> <name pos:line="1928" pos:column="48">This</name></decl></param>,
            <comment type="block" pos:line="1929" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1929" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1929" pos:column="46">IEnumDebugENCInfo2</name> <type:modifier pos:line="1929" pos:column="65">*</type:modifier><type:modifier pos:line="1929" pos:column="66">*</type:modifier></type><name pos:line="1929" pos:column="67">out_ppEnumENCInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1931" pos:column="9">HRESULT</name></type> ( <name pos:line="1931" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1931" pos:column="37">*</type:modifier><name pos:line="1931" pos:column="38">GetHResult</name> )<parameter_list pos:line="1931" pos:column="50">( 
            <param><decl><type><name pos:line="1932" pos:column="13">IDebugENCUpdateOnStaleCodeEvent2</name> <type:modifier pos:line="1932" pos:column="46">*</type:modifier></type> <name pos:line="1932" pos:column="48">This</name></decl></param>,
            <comment type="block" pos:line="1933" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1933" pos:column="25">__RPC__out</name> <name pos:line="1933" pos:column="36">HRESULT</name> <type:modifier pos:line="1933" pos:column="44">*</type:modifier></type><name pos:line="1933" pos:column="45">out_pHResult</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1935" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1936" pos:column="7">IDebugENCUpdateOnStaleCodeEvent2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1938" pos:column="5">interface</name></type> <name pos:line="1938" pos:column="15">IDebugENCUpdateOnStaleCodeEvent2</name>
    <argument_list pos:line="1939" pos:column="5">{
        <argument><expr><name pos:line="1940" pos:column="9">CONST_VTBL</name> struct <name pos:line="1940" pos:column="27">IDebugENCUpdateOnStaleCodeEvent2Vtbl</name> <op:operator pos:line="1940" pos:column="64">*</op:operator><name pos:line="1940" pos:column="65">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1945" pos:column="1">#<cpp:directive pos:line="1945" pos:column="2">ifdef</cpp:directive> <name pos:line="1945" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1948" pos:column="1">#<cpp:directive pos:line="1948" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1948" pos:column="9">IDebugENCUpdateOnStaleCodeEvent2_QueryInterface</name><parameter_list pos:line="1948" pos:column="56">(<param><type><name pos:line="1948" pos:column="57">This</name></type></param>,<param><type><name pos:line="1948" pos:column="62">riid</name></type></param>,<param><type><name pos:line="1948" pos:column="67">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1949" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1951" pos:column="1">#<cpp:directive pos:line="1951" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1951" pos:column="9">IDebugENCUpdateOnStaleCodeEvent2_AddRef</name><parameter_list pos:line="1951" pos:column="48">(<param><type><name pos:line="1951" pos:column="49">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1952" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1954" pos:column="1">#<cpp:directive pos:line="1954" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1954" pos:column="9">IDebugENCUpdateOnStaleCodeEvent2_Release</name><parameter_list pos:line="1954" pos:column="49">(<param><type><name pos:line="1954" pos:column="50">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1955" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1958" pos:column="1">#<cpp:directive pos:line="1958" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1958" pos:column="9">IDebugENCUpdateOnStaleCodeEvent2_GetInfo</name><parameter_list pos:line="1958" pos:column="49">(<param><type><name pos:line="1958" pos:column="50">This</name></type></param>,<param><type><name pos:line="1958" pos:column="55">out_ppEnumENCInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1959" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInfo(This,out_ppEnumENCInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="1961" pos:column="1">#<cpp:directive pos:line="1961" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1961" pos:column="9">IDebugENCUpdateOnStaleCodeEvent2_GetHResult</name><parameter_list pos:line="1961" pos:column="52">(<param><type><name pos:line="1961" pos:column="53">This</name></type></param>,<param><type><name pos:line="1961" pos:column="58">out_pHResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1962" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHResult(This,out_pHResult) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1964" pos:column="1">#<cpp:directive pos:line="1964" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1964" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1967" pos:column="1">#<cpp:directive pos:line="1967" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1967" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1972" pos:column="1">#<cpp:directive pos:line="1972" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1972" pos:column="9">/* __IDebugENCUpdateOnStaleCodeEvent2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1975" pos:column="1">#<cpp:directive pos:line="1975" pos:column="2">ifndef</cpp:directive> <name pos:line="1975" pos:column="9">__IDebugENCUpdate_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1976" pos:column="1">#<cpp:directive pos:line="1976" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1976" pos:column="9">__IDebugENCUpdate_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1978" pos:column="1">/* interface IDebugENCUpdate */</comment>
<comment type="block" pos:line="1979" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1982" pos:column="1">EXTERN_C</name> <specifier pos:line="1982" pos:column="10">const</specifier> <name pos:line="1982" pos:column="16">IID</name></type> <name pos:line="1982" pos:column="20">IID_IDebugENCUpdate</name></decl>;</decl_stmt>

<cpp:if pos:line="1984" pos:column="1">#<cpp:directive pos:line="1984" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1984" pos:column="5">defined</name><argument_list pos:line="1984" pos:column="12">(<argument><expr><name pos:line="1984" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1984" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1984" pos:column="29">!</op:operator><call><name pos:line="1984" pos:column="30">defined</name><argument_list pos:line="1984" pos:column="37">(<argument><expr><name pos:line="1984" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1986" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1986" pos:column="19">(<argument pos:line="1986" pos:column="20">"978BAEE7-BD4C-11d2-9238-00A02448799A"</argument>)</argument_list></macro>
    <label><name pos:line="1987" pos:column="5">IDebugENCUpdate</name> :</label> <expr_stmt><expr pos:line="1987" pos:column="23">public <name pos:line="1987" pos:column="30">IUnknown</name>
    <block pos:line="1988" pos:column="5">{
    <expr pos:line="1989" pos:column="5">public<op:operator pos:line="1989" pos:column="11">:</op:operator>
        virtual <name pos:line="1990" pos:column="17">HRESULT</name> <name pos:line="1990" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1990" pos:column="43">EnumENCSnapshots</name><argument_list pos:line="1990" pos:column="59">( 
            <comment type="block" pos:line="1991" pos:column="13">/* [in] */</comment> <argument pos:line="1991" pos:column="24">__RPC__in LPCOLESTR pszModule</argument>,
            <comment type="block" pos:line="1992" pos:column="13">/* [out] */</comment> <argument pos:line="1992" pos:column="25">__RPC__deref_out_opt IEnumDebugENCSnapshots2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="1992" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="1992" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="1994" pos:column="9">virtual <name pos:line="1994" pos:column="17">HRESULT</name> <name pos:line="1994" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1994" pos:column="43">EnumENCSnapshotsByGuid</name><argument_list pos:line="1994" pos:column="65">( 
            <comment type="block" pos:line="1995" pos:column="13">/* [in] */</comment> <argument pos:line="1995" pos:column="24">__RPC__in REFGUID guidModule</argument>,
            <comment type="block" pos:line="1996" pos:column="13">/* [out] */</comment> <argument pos:line="1996" pos:column="25">__RPC__deref_out_opt IEnumDebugENCSnapshots2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="1996" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="1996" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="1998" pos:column="9">virtual <name pos:line="1998" pos:column="17">HRESULT</name> <name pos:line="1998" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1998" pos:column="43">CancelENC</name><argument_list pos:line="1998" pos:column="52">( <argument><expr><name pos:line="1998" pos:column="54">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1998" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="1998" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="2000" pos:column="9">virtual <name pos:line="2000" pos:column="17">HRESULT</name> <name pos:line="2000" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2000" pos:column="43">OnENCAttemptComplete</name><argument_list pos:line="2000" pos:column="63">( <argument><expr><name pos:line="2000" pos:column="65">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2000" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2000" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2004" pos:column="1">#<cpp:directive pos:line="2004" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2004" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2006" pos:column="5">typedef <type><struct pos:line="2006" pos:column="13">struct <name pos:line="2006" pos:column="20">IDebugENCUpdateVtbl</name>
    <block pos:line="2007" pos:column="5">{<public type="default" pos:line="2007" pos:column="6">
        <function_decl><type><name pos:line="2008" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2010" pos:column="9">HRESULT</name></type> ( <name pos:line="2010" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2010" pos:column="37">*</type:modifier><name pos:line="2010" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2010" pos:column="54">( 
            <param><decl><type><name pos:line="2011" pos:column="13">IDebugENCUpdate</name> <type:modifier pos:line="2011" pos:column="29">*</type:modifier></type> <name pos:line="2011" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="2012" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2012" pos:column="24">__RPC__in</name> <name pos:line="2012" pos:column="34">REFIID</name></type> <name pos:line="2012" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2013" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2014" pos:column="13">__RPC__deref_out</name>  <name pos:line="2014" pos:column="31">void</name> <type:modifier pos:line="2014" pos:column="36">*</type:modifier><type:modifier pos:line="2014" pos:column="37">*</type:modifier></type><name pos:line="2014" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2016" pos:column="9">ULONG</name></type> ( <name pos:line="2016" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2016" pos:column="35">*</type:modifier><name pos:line="2016" pos:column="36">AddRef</name> )<parameter_list pos:line="2016" pos:column="44">( 
            <param><decl><type><name pos:line="2017" pos:column="13">IDebugENCUpdate</name> <type:modifier pos:line="2017" pos:column="29">*</type:modifier></type> <name pos:line="2017" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2019" pos:column="9">ULONG</name></type> ( <name pos:line="2019" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2019" pos:column="35">*</type:modifier><name pos:line="2019" pos:column="36">Release</name> )<parameter_list pos:line="2019" pos:column="45">( 
            <param><decl><type><name pos:line="2020" pos:column="13">IDebugENCUpdate</name> <type:modifier pos:line="2020" pos:column="29">*</type:modifier></type> <name pos:line="2020" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2022" pos:column="9">HRESULT</name></type> ( <name pos:line="2022" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2022" pos:column="37">*</type:modifier><name pos:line="2022" pos:column="38">EnumENCSnapshots</name> )<parameter_list pos:line="2022" pos:column="56">( 
            <param><decl><type><name pos:line="2023" pos:column="13">IDebugENCUpdate</name> <type:modifier pos:line="2023" pos:column="29">*</type:modifier></type> <name pos:line="2023" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="2024" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2024" pos:column="24">__RPC__in</name> <name pos:line="2024" pos:column="34">LPCOLESTR</name></type> <name pos:line="2024" pos:column="44">pszModule</name></decl></param>,
            <comment type="block" pos:line="2025" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2025" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2025" pos:column="46">IEnumDebugENCSnapshots2</name> <type:modifier pos:line="2025" pos:column="70">*</type:modifier><type:modifier pos:line="2025" pos:column="71">*</type:modifier></type><name pos:line="2025" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2027" pos:column="9">HRESULT</name></type> ( <name pos:line="2027" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2027" pos:column="37">*</type:modifier><name pos:line="2027" pos:column="38">EnumENCSnapshotsByGuid</name> )<parameter_list pos:line="2027" pos:column="62">( 
            <param><decl><type><name pos:line="2028" pos:column="13">IDebugENCUpdate</name> <type:modifier pos:line="2028" pos:column="29">*</type:modifier></type> <name pos:line="2028" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="2029" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2029" pos:column="24">__RPC__in</name> <name pos:line="2029" pos:column="34">REFGUID</name></type> <name pos:line="2029" pos:column="42">guidModule</name></decl></param>,
            <comment type="block" pos:line="2030" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2030" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2030" pos:column="46">IEnumDebugENCSnapshots2</name> <type:modifier pos:line="2030" pos:column="70">*</type:modifier><type:modifier pos:line="2030" pos:column="71">*</type:modifier></type><name pos:line="2030" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2032" pos:column="9">HRESULT</name></type> ( <name pos:line="2032" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2032" pos:column="37">*</type:modifier><name pos:line="2032" pos:column="38">CancelENC</name> )<parameter_list pos:line="2032" pos:column="49">( 
            <param><decl><type><name pos:line="2033" pos:column="13">IDebugENCUpdate</name> <type:modifier pos:line="2033" pos:column="29">*</type:modifier></type> <name pos:line="2033" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2035" pos:column="9">HRESULT</name></type> ( <name pos:line="2035" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2035" pos:column="37">*</type:modifier><name pos:line="2035" pos:column="38">OnENCAttemptComplete</name> )<parameter_list pos:line="2035" pos:column="60">( 
            <param><decl><type><name pos:line="2036" pos:column="13">IDebugENCUpdate</name> <type:modifier pos:line="2036" pos:column="29">*</type:modifier></type> <name pos:line="2036" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2038" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2039" pos:column="7">IDebugENCUpdateVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2041" pos:column="5">interface</name></type> <name pos:line="2041" pos:column="15">IDebugENCUpdate</name>
    <argument_list pos:line="2042" pos:column="5">{
        <argument><expr><name pos:line="2043" pos:column="9">CONST_VTBL</name> struct <name pos:line="2043" pos:column="27">IDebugENCUpdateVtbl</name> <op:operator pos:line="2043" pos:column="47">*</op:operator><name pos:line="2043" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2048" pos:column="1">#<cpp:directive pos:line="2048" pos:column="2">ifdef</cpp:directive> <name pos:line="2048" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2051" pos:column="1">#<cpp:directive pos:line="2051" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2051" pos:column="9">IDebugENCUpdate_QueryInterface</name><parameter_list pos:line="2051" pos:column="39">(<param><type><name pos:line="2051" pos:column="40">This</name></type></param>,<param><type><name pos:line="2051" pos:column="45">riid</name></type></param>,<param><type><name pos:line="2051" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2052" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2054" pos:column="1">#<cpp:directive pos:line="2054" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2054" pos:column="9">IDebugENCUpdate_AddRef</name><parameter_list pos:line="2054" pos:column="31">(<param><type><name pos:line="2054" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2055" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2057" pos:column="1">#<cpp:directive pos:line="2057" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2057" pos:column="9">IDebugENCUpdate_Release</name><parameter_list pos:line="2057" pos:column="32">(<param><type><name pos:line="2057" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2058" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2061" pos:column="1">#<cpp:directive pos:line="2061" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2061" pos:column="9">IDebugENCUpdate_EnumENCSnapshots</name><parameter_list pos:line="2061" pos:column="41">(<param><type><name pos:line="2061" pos:column="42">This</name></type></param>,<param><type><name pos:line="2061" pos:column="47">pszModule</name></type></param>,<param><type><name pos:line="2061" pos:column="57">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2062" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumENCSnapshots(This,pszModule,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="2064" pos:column="1">#<cpp:directive pos:line="2064" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2064" pos:column="9">IDebugENCUpdate_EnumENCSnapshotsByGuid</name><parameter_list pos:line="2064" pos:column="47">(<param><type><name pos:line="2064" pos:column="48">This</name></type></param>,<param><type><name pos:line="2064" pos:column="53">guidModule</name></type></param>,<param><type><name pos:line="2064" pos:column="64">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2065" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumENCSnapshotsByGuid(This,guidModule,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="2067" pos:column="1">#<cpp:directive pos:line="2067" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2067" pos:column="9">IDebugENCUpdate_CancelENC</name><parameter_list pos:line="2067" pos:column="34">(<param><type><name pos:line="2067" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2068" pos:column="5">( (This)-&gt;lpVtbl -&gt; CancelENC(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2070" pos:column="1">#<cpp:directive pos:line="2070" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2070" pos:column="9">IDebugENCUpdate_OnENCAttemptComplete</name><parameter_list pos:line="2070" pos:column="45">(<param><type><name pos:line="2070" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2071" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnENCAttemptComplete(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2073" pos:column="1">#<cpp:directive pos:line="2073" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2073" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2076" pos:column="1">#<cpp:directive pos:line="2076" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2076" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2081" pos:column="1">#<cpp:directive pos:line="2081" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2081" pos:column="9">/* __IDebugENCUpdate_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2084" pos:column="1">#<cpp:directive pos:line="2084" pos:column="2">ifndef</cpp:directive> <name pos:line="2084" pos:column="9">__IDebugENCSnapshot2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2085" pos:column="1">#<cpp:directive pos:line="2085" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2085" pos:column="9">__IDebugENCSnapshot2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2087" pos:column="1">/* interface IDebugENCSnapshot2 */</comment>
<comment type="block" pos:line="2088" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="2091" pos:column="1">enum <name pos:line="2091" pos:column="6">__MIDL_IDebugENCSnapshot2_0001</name>
    <block pos:line="2092" pos:column="5">{	<decl><name pos:line="2092" pos:column="9">ENC_SNAPSHOT_TYPE_COMPLUS</name>	<init pos:line="2092" pos:column="41">= <expr><lit:literal type="number" pos:line="2092" pos:column="43">0x1</lit:literal></expr></init></decl><op:operator pos:line="2092" pos:column="46">,</op:operator>
	<decl><name pos:line="2093" pos:column="9">ENC_SNAPSHOT_TYPE_CPP</name>	<init pos:line="2093" pos:column="33">= <expr><lit:literal type="number" pos:line="2093" pos:column="35">0x2</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="2095" pos:column="1">typedef <type><name pos:line="2095" pos:column="9">DWORD</name></type> <name pos:line="2095" pos:column="15">ENC_SNAPSHOT_TYPE</name>;</typedef>

<typedef pos:line="2097" pos:column="1">typedef <type><struct pos:line="2097" pos:column="9">struct <name pos:line="2097" pos:column="16">_ENC_SNAPSHOT_COMPLUS</name>
    <block pos:line="2098" pos:column="5">{<public type="default" pos:line="2098" pos:column="6">
    <decl_stmt><decl><type><name pos:line="2099" pos:column="5">IDebugComPlusSnapshot2</name> <type:modifier pos:line="2099" pos:column="28">*</type:modifier></type><name pos:line="2099" pos:column="29">pcpSnapshot</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="2100" pos:column="9">ENC_SNAPSHOT_COMPLUS</name>;</typedef>

<typedef pos:line="2102" pos:column="1">typedef <type><struct pos:line="2102" pos:column="9">struct <name pos:line="2102" pos:column="16">_ENC_SNAPSHOT_CPP</name>
    <block pos:line="2103" pos:column="5">{<public type="default" pos:line="2103" pos:column="6">
    <decl_stmt><decl><type><name pos:line="2104" pos:column="5">DWORD</name></type> <name pos:line="2104" pos:column="11">dwNYI</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="2105" pos:column="9">ENC_SNAPSHOT_CPP</name>;</typedef>

<typedef pos:line="2107" pos:column="1">typedef <type><struct pos:line="2107" pos:column="9">struct <name pos:line="2107" pos:column="16">_ENC_SNAPSHOT</name>
    <block pos:line="2108" pos:column="5">{<public type="default" pos:line="2108" pos:column="6">
    <decl_stmt><decl><type><name pos:line="2109" pos:column="5">ENC_SNAPSHOT_TYPE</name></type> <name pos:line="2109" pos:column="23">ssType</name></decl>;</decl_stmt>
    <comment type="block" pos:line="2110" pos:column="5">/* [switch_type] */</comment> <union pos:line="2110" pos:column="25">union <name pos:line="2110" pos:column="31">__MIDL_IDebugENCSnapshot2_0002</name>
        <block pos:line="2111" pos:column="9">{<public type="default" pos:line="2111" pos:column="10">
        <decl_stmt><decl><type><name pos:line="2112" pos:column="9">ENC_SNAPSHOT_COMPLUS</name></type> <name pos:line="2112" pos:column="30">encComPlus</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="2113" pos:column="9">ENC_SNAPSHOT_CPP</name></type> <name pos:line="2113" pos:column="26">encCpp</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="2114" pos:column="9">DWORD</name></type> <name pos:line="2114" pos:column="15">unused</name></decl>;</decl_stmt>
        </public>}</block> 	<decl><name pos:line="2115" pos:column="17">encSnapshot</name></decl>;</union>
    </public>}</block></struct></type> 	<name pos:line="2116" pos:column="9">ENC_SNAPSHOT</name>;</typedef>

<typedef pos:line="2118" pos:column="1">typedef <type><struct pos:line="2118" pos:column="9">struct <name pos:line="2118" pos:column="16">_ENC_SNAPSHOT_INFO</name>
    <block pos:line="2119" pos:column="5">{<public type="default" pos:line="2119" pos:column="6">
    <decl_stmt><decl><type><name pos:line="2120" pos:column="5">IDebugProgram2</name> <type:modifier pos:line="2120" pos:column="20">*</type:modifier></type><name pos:line="2120" pos:column="21">pProgram</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2121" pos:column="5">ENC_SNAPSHOT</name></type> <name pos:line="2121" pos:column="18">encSnapshot</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="2122" pos:column="9">ENC_SNAPSHOT_INFO</name>;</typedef>


<decl_stmt><decl><type><name pos:line="2125" pos:column="1">EXTERN_C</name> <specifier pos:line="2125" pos:column="10">const</specifier> <name pos:line="2125" pos:column="16">IID</name></type> <name pos:line="2125" pos:column="20">IID_IDebugENCSnapshot2</name></decl>;</decl_stmt>

<cpp:if pos:line="2127" pos:column="1">#<cpp:directive pos:line="2127" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2127" pos:column="5">defined</name><argument_list pos:line="2127" pos:column="12">(<argument><expr><name pos:line="2127" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2127" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2127" pos:column="29">!</op:operator><call><name pos:line="2127" pos:column="30">defined</name><argument_list pos:line="2127" pos:column="37">(<argument><expr><name pos:line="2127" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2129" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2129" pos:column="19">(<argument pos:line="2129" pos:column="20">"f6f94d0e-78c2-11d2-8ffe-00c04fa38314"</argument>)</argument_list></macro>
    <label><name pos:line="2130" pos:column="5">IDebugENCSnapshot2</name> :</label> <expr_stmt><expr pos:line="2130" pos:column="26">public <name pos:line="2130" pos:column="33">IUnknown</name>
    <block pos:line="2131" pos:column="5">{
    <expr pos:line="2132" pos:column="5">public<op:operator pos:line="2132" pos:column="11">:</op:operator>
        virtual <name pos:line="2133" pos:column="17">HRESULT</name> <name pos:line="2133" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2133" pos:column="43">GetENCSnapshotInfo</name><argument_list pos:line="2133" pos:column="61">( 
            <comment type="block" pos:line="2134" pos:column="13">/* [out] */</comment> <argument pos:line="2134" pos:column="25">__RPC__out ENC_SNAPSHOT_INFO *pSnapshotInfo</argument>)</argument_list></macro> <op:operator pos:line="2134" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="2134" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="2136" pos:column="9">virtual <name pos:line="2136" pos:column="17">HRESULT</name> <name pos:line="2136" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2136" pos:column="43">ApplyCodeChange</name><argument_list pos:line="2136" pos:column="58">( 
            <comment type="block" pos:line="2137" pos:column="13">/* [in] */</comment> <argument pos:line="2137" pos:column="24">ULONG in_NoOfLineMaps</argument>,
            <comment type="block" pos:line="2138" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="2138" pos:column="33">__RPC__in_ecount_full(in_NoOfLineMaps) IDebugENCLineMap **in_ArrayOfLineMaps</argument>,
            <comment type="block" pos:line="2139" pos:column="13">/* [in] */</comment> <argument pos:line="2139" pos:column="24">__RPC__in_opt IServiceProvider *in_pServiceProvider</argument>,
            <comment type="block" pos:line="2140" pos:column="13">/* [in] */</comment> <argument pos:line="2140" pos:column="24">BOOL in_fOnContinue</argument>,
            <comment type="block" pos:line="2141" pos:column="13">/* [out] */</comment> <argument pos:line="2141" pos:column="25">__RPC__deref_out_opt IEnumDebugENCInfo2 **out_ppEnumENCInfo</argument>)</argument_list></macro> <op:operator pos:line="2141" pos:column="86">=</op:operator> <lit:literal type="number" pos:line="2141" pos:column="88">0</lit:literal></expr>;
        
        <expr pos:line="2143" pos:column="9">virtual <name pos:line="2143" pos:column="17">HRESULT</name> <name pos:line="2143" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2143" pos:column="43">CommitChange</name><argument_list pos:line="2143" pos:column="55">( 
            <comment type="block" pos:line="2144" pos:column="13">/* [out] */</comment> <argument pos:line="2144" pos:column="25">__RPC__deref_out_opt IEnumDebugENCInfo2 **out_ppEnumENCInfo</argument>)</argument_list></macro> <op:operator pos:line="2144" pos:column="86">=</op:operator> <lit:literal type="number" pos:line="2144" pos:column="88">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2148" pos:column="1">#<cpp:directive pos:line="2148" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2148" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2150" pos:column="5">typedef <type><struct pos:line="2150" pos:column="13">struct <name pos:line="2150" pos:column="20">IDebugENCSnapshot2Vtbl</name>
    <block pos:line="2151" pos:column="5">{<public type="default" pos:line="2151" pos:column="6">
        <function_decl><type><name pos:line="2152" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2154" pos:column="9">HRESULT</name></type> ( <name pos:line="2154" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2154" pos:column="37">*</type:modifier><name pos:line="2154" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2154" pos:column="54">( 
            <param><decl><type><name pos:line="2155" pos:column="13">IDebugENCSnapshot2</name> <type:modifier pos:line="2155" pos:column="32">*</type:modifier></type> <name pos:line="2155" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2156" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2156" pos:column="24">__RPC__in</name> <name pos:line="2156" pos:column="34">REFIID</name></type> <name pos:line="2156" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2157" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2158" pos:column="13">__RPC__deref_out</name>  <name pos:line="2158" pos:column="31">void</name> <type:modifier pos:line="2158" pos:column="36">*</type:modifier><type:modifier pos:line="2158" pos:column="37">*</type:modifier></type><name pos:line="2158" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2160" pos:column="9">ULONG</name></type> ( <name pos:line="2160" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2160" pos:column="35">*</type:modifier><name pos:line="2160" pos:column="36">AddRef</name> )<parameter_list pos:line="2160" pos:column="44">( 
            <param><decl><type><name pos:line="2161" pos:column="13">IDebugENCSnapshot2</name> <type:modifier pos:line="2161" pos:column="32">*</type:modifier></type> <name pos:line="2161" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2163" pos:column="9">ULONG</name></type> ( <name pos:line="2163" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2163" pos:column="35">*</type:modifier><name pos:line="2163" pos:column="36">Release</name> )<parameter_list pos:line="2163" pos:column="45">( 
            <param><decl><type><name pos:line="2164" pos:column="13">IDebugENCSnapshot2</name> <type:modifier pos:line="2164" pos:column="32">*</type:modifier></type> <name pos:line="2164" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2166" pos:column="9">HRESULT</name></type> ( <name pos:line="2166" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2166" pos:column="37">*</type:modifier><name pos:line="2166" pos:column="38">GetENCSnapshotInfo</name> )<parameter_list pos:line="2166" pos:column="58">( 
            <param><decl><type><name pos:line="2167" pos:column="13">IDebugENCSnapshot2</name> <type:modifier pos:line="2167" pos:column="32">*</type:modifier></type> <name pos:line="2167" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2168" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2168" pos:column="25">__RPC__out</name> <name pos:line="2168" pos:column="36">ENC_SNAPSHOT_INFO</name> <type:modifier pos:line="2168" pos:column="54">*</type:modifier></type><name pos:line="2168" pos:column="55">pSnapshotInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2170" pos:column="9">HRESULT</name> <argument_list pos:line="2170" pos:column="17">( <argument pos:line="2170" pos:column="19">STDMETHODCALLTYPE *ApplyCodeChange</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2170" pos:column="55">(</op:operator> 
            <name pos:line="2171" pos:column="13">IDebugENCSnapshot2</name> <op:operator pos:line="2171" pos:column="32">*</op:operator> <name pos:line="2171" pos:column="34">This</name><op:operator pos:line="2171" pos:column="38">,</op:operator>
            <comment type="block" pos:line="2172" pos:column="13">/* [in] */</comment> <name pos:line="2172" pos:column="24">ULONG</name> <name pos:line="2172" pos:column="30">in_NoOfLineMaps</name><op:operator pos:line="2172" pos:column="45">,</op:operator>
            <comment type="block" pos:line="2173" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="2173" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="2173" pos:column="54">(<argument pos:line="2173" pos:column="55">in_NoOfLineMaps</argument>)</argument_list></macro> <name pos:line="2173" pos:column="72">IDebugENCLineMap</name> <op:operator pos:line="2173" pos:column="89">*</op:operator><op:operator pos:line="2173" pos:column="90">*</op:operator><name pos:line="2173" pos:column="91">in_ArrayOfLineMaps</name><op:operator pos:line="2173" pos:column="109">,</op:operator>
            <comment type="block" pos:line="2174" pos:column="13">/* [in] */</comment> <name pos:line="2174" pos:column="24">__RPC__in_opt</name> <name pos:line="2174" pos:column="38">IServiceProvider</name> <op:operator pos:line="2174" pos:column="55">*</op:operator><name pos:line="2174" pos:column="56">in_pServiceProvider</name><op:operator pos:line="2174" pos:column="75">,</op:operator>
            <comment type="block" pos:line="2175" pos:column="13">/* [in] */</comment> <name pos:line="2175" pos:column="24">BOOL</name> <name pos:line="2175" pos:column="29">in_fOnContinue</name><op:operator pos:line="2175" pos:column="43">,</op:operator>
            <comment type="block" pos:line="2176" pos:column="13">/* [out] */</comment> <name pos:line="2176" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2176" pos:column="46">IEnumDebugENCInfo2</name> <op:operator pos:line="2176" pos:column="65">*</op:operator><op:operator pos:line="2176" pos:column="66">*</op:operator><name pos:line="2176" pos:column="67">out_ppEnumENCInfo</name><op:operator pos:line="2176" pos:column="84">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="2178" pos:column="9">HRESULT</name></type> ( <name pos:line="2178" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2178" pos:column="37">*</type:modifier><name pos:line="2178" pos:column="38">CommitChange</name> )<parameter_list pos:line="2178" pos:column="52">( 
            <param><decl><type><name pos:line="2179" pos:column="13">IDebugENCSnapshot2</name> <type:modifier pos:line="2179" pos:column="32">*</type:modifier></type> <name pos:line="2179" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2180" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2180" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2180" pos:column="46">IEnumDebugENCInfo2</name> <type:modifier pos:line="2180" pos:column="65">*</type:modifier><type:modifier pos:line="2180" pos:column="66">*</type:modifier></type><name pos:line="2180" pos:column="67">out_ppEnumENCInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2182" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2183" pos:column="7">IDebugENCSnapshot2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2185" pos:column="5">interface</name></type> <name pos:line="2185" pos:column="15">IDebugENCSnapshot2</name>
    <argument_list pos:line="2186" pos:column="5">{
        <argument><expr><name pos:line="2187" pos:column="9">CONST_VTBL</name> struct <name pos:line="2187" pos:column="27">IDebugENCSnapshot2Vtbl</name> <op:operator pos:line="2187" pos:column="50">*</op:operator><name pos:line="2187" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2192" pos:column="1">#<cpp:directive pos:line="2192" pos:column="2">ifdef</cpp:directive> <name pos:line="2192" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2195" pos:column="1">#<cpp:directive pos:line="2195" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2195" pos:column="9">IDebugENCSnapshot2_QueryInterface</name><parameter_list pos:line="2195" pos:column="42">(<param><type><name pos:line="2195" pos:column="43">This</name></type></param>,<param><type><name pos:line="2195" pos:column="48">riid</name></type></param>,<param><type><name pos:line="2195" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2196" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2198" pos:column="1">#<cpp:directive pos:line="2198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2198" pos:column="9">IDebugENCSnapshot2_AddRef</name><parameter_list pos:line="2198" pos:column="34">(<param><type><name pos:line="2198" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2199" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2201" pos:column="1">#<cpp:directive pos:line="2201" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2201" pos:column="9">IDebugENCSnapshot2_Release</name><parameter_list pos:line="2201" pos:column="35">(<param><type><name pos:line="2201" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2202" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2205" pos:column="1">#<cpp:directive pos:line="2205" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2205" pos:column="9">IDebugENCSnapshot2_GetENCSnapshotInfo</name><parameter_list pos:line="2205" pos:column="46">(<param><type><name pos:line="2205" pos:column="47">This</name></type></param>,<param><type><name pos:line="2205" pos:column="52">pSnapshotInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2206" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetENCSnapshotInfo(This,pSnapshotInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2208" pos:column="1">#<cpp:directive pos:line="2208" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2208" pos:column="9">IDebugENCSnapshot2_ApplyCodeChange</name><parameter_list pos:line="2208" pos:column="43">(<param><type><name pos:line="2208" pos:column="44">This</name></type></param>,<param><type><name pos:line="2208" pos:column="49">in_NoOfLineMaps</name></type></param>,<param><type><name pos:line="2208" pos:column="65">in_ArrayOfLineMaps</name></type></param>,<param><type><name pos:line="2208" pos:column="84">in_pServiceProvider</name></type></param>,<param><type><name pos:line="2208" pos:column="104">in_fOnContinue</name></type></param>,<param><type><name pos:line="2208" pos:column="119">out_ppEnumENCInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2209" pos:column="5">( (This)-&gt;lpVtbl -&gt; ApplyCodeChange(This,in_NoOfLineMaps,in_ArrayOfLineMaps,in_pServiceProvider,in_fOnContinue,out_ppEnumENCInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2211" pos:column="1">#<cpp:directive pos:line="2211" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2211" pos:column="9">IDebugENCSnapshot2_CommitChange</name><parameter_list pos:line="2211" pos:column="40">(<param><type><name pos:line="2211" pos:column="41">This</name></type></param>,<param><type><name pos:line="2211" pos:column="46">out_ppEnumENCInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2212" pos:column="5">( (This)-&gt;lpVtbl -&gt; CommitChange(This,out_ppEnumENCInfo) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2214" pos:column="1">#<cpp:directive pos:line="2214" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2214" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2217" pos:column="1">#<cpp:directive pos:line="2217" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2217" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2222" pos:column="1">#<cpp:directive pos:line="2222" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2222" pos:column="9">/* __IDebugENCSnapshot2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2225" pos:column="1">#<cpp:directive pos:line="2225" pos:column="2">ifndef</cpp:directive> <name pos:line="2225" pos:column="9">__IDebugENCSnapshot3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2226" pos:column="1">#<cpp:directive pos:line="2226" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2226" pos:column="9">__IDebugENCSnapshot3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2228" pos:column="1">/* interface IDebugENCSnapshot3 */</comment>
<comment type="block" pos:line="2229" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2232" pos:column="1">EXTERN_C</name> <specifier pos:line="2232" pos:column="10">const</specifier> <name pos:line="2232" pos:column="16">IID</name></type> <name pos:line="2232" pos:column="20">IID_IDebugENCSnapshot3</name></decl>;</decl_stmt>

<cpp:if pos:line="2234" pos:column="1">#<cpp:directive pos:line="2234" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2234" pos:column="5">defined</name><argument_list pos:line="2234" pos:column="12">(<argument><expr><name pos:line="2234" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2234" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2234" pos:column="29">!</op:operator><call><name pos:line="2234" pos:column="30">defined</name><argument_list pos:line="2234" pos:column="37">(<argument><expr><name pos:line="2234" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2236" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2236" pos:column="19">(<argument pos:line="2236" pos:column="20">"3F50C7D0-D1AF-4a97-AD81-7FDD5934AD32"</argument>)</argument_list></macro>
    <label><name pos:line="2237" pos:column="5">IDebugENCSnapshot3</name> :</label> <expr_stmt><expr pos:line="2237" pos:column="26">public <name pos:line="2237" pos:column="33">IDebugENCSnapshot2</name>
    <block pos:line="2238" pos:column="5">{
    <expr pos:line="2239" pos:column="5">public<op:operator pos:line="2239" pos:column="11">:</op:operator>
        virtual <name pos:line="2240" pos:column="17">HRESULT</name> <name pos:line="2240" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2240" pos:column="43">ApplyCodeChange3</name><argument_list pos:line="2240" pos:column="59">( 
            <comment type="block" pos:line="2241" pos:column="13">/* [in] */</comment> <argument pos:line="2241" pos:column="24">ULONG ulLineHint</argument>,
            <comment type="block" pos:line="2242" pos:column="13">/* [in] */</comment> <argument pos:line="2242" pos:column="24">ULONG in_NoOfLineMaps</argument>,
            <comment type="block" pos:line="2243" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="2243" pos:column="33">__RPC__in_ecount_full(in_NoOfLineMaps) IDebugENCLineMap **in_ArrayOfLineMaps</argument>,
            <comment type="block" pos:line="2244" pos:column="13">/* [in] */</comment> <argument pos:line="2244" pos:column="24">__RPC__in_opt IServiceProvider *in_pServiceProvider</argument>,
            <comment type="block" pos:line="2245" pos:column="13">/* [in] */</comment> <argument pos:line="2245" pos:column="24">BOOL in_fOnContinue</argument>,
            <comment type="block" pos:line="2246" pos:column="13">/* [out] */</comment> <argument pos:line="2246" pos:column="25">__RPC__deref_out_opt IEnumDebugENCInfo2 **out_ppEnumENCInfo</argument>)</argument_list></macro> <op:operator pos:line="2246" pos:column="86">=</op:operator> <lit:literal type="number" pos:line="2246" pos:column="88">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2250" pos:column="1">#<cpp:directive pos:line="2250" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2250" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2252" pos:column="5">typedef <type><struct pos:line="2252" pos:column="13">struct <name pos:line="2252" pos:column="20">IDebugENCSnapshot3Vtbl</name>
    <block pos:line="2253" pos:column="5">{<public type="default" pos:line="2253" pos:column="6">
        <function_decl><type><name pos:line="2254" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2256" pos:column="9">HRESULT</name></type> ( <name pos:line="2256" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2256" pos:column="37">*</type:modifier><name pos:line="2256" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2256" pos:column="54">( 
            <param><decl><type><name pos:line="2257" pos:column="13">IDebugENCSnapshot3</name> <type:modifier pos:line="2257" pos:column="32">*</type:modifier></type> <name pos:line="2257" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2258" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2258" pos:column="24">__RPC__in</name> <name pos:line="2258" pos:column="34">REFIID</name></type> <name pos:line="2258" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2259" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2260" pos:column="13">__RPC__deref_out</name>  <name pos:line="2260" pos:column="31">void</name> <type:modifier pos:line="2260" pos:column="36">*</type:modifier><type:modifier pos:line="2260" pos:column="37">*</type:modifier></type><name pos:line="2260" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2262" pos:column="9">ULONG</name></type> ( <name pos:line="2262" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2262" pos:column="35">*</type:modifier><name pos:line="2262" pos:column="36">AddRef</name> )<parameter_list pos:line="2262" pos:column="44">( 
            <param><decl><type><name pos:line="2263" pos:column="13">IDebugENCSnapshot3</name> <type:modifier pos:line="2263" pos:column="32">*</type:modifier></type> <name pos:line="2263" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2265" pos:column="9">ULONG</name></type> ( <name pos:line="2265" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2265" pos:column="35">*</type:modifier><name pos:line="2265" pos:column="36">Release</name> )<parameter_list pos:line="2265" pos:column="45">( 
            <param><decl><type><name pos:line="2266" pos:column="13">IDebugENCSnapshot3</name> <type:modifier pos:line="2266" pos:column="32">*</type:modifier></type> <name pos:line="2266" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2268" pos:column="9">HRESULT</name></type> ( <name pos:line="2268" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2268" pos:column="37">*</type:modifier><name pos:line="2268" pos:column="38">GetENCSnapshotInfo</name> )<parameter_list pos:line="2268" pos:column="58">( 
            <param><decl><type><name pos:line="2269" pos:column="13">IDebugENCSnapshot3</name> <type:modifier pos:line="2269" pos:column="32">*</type:modifier></type> <name pos:line="2269" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2270" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2270" pos:column="25">__RPC__out</name> <name pos:line="2270" pos:column="36">ENC_SNAPSHOT_INFO</name> <type:modifier pos:line="2270" pos:column="54">*</type:modifier></type><name pos:line="2270" pos:column="55">pSnapshotInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2272" pos:column="9">HRESULT</name> <argument_list pos:line="2272" pos:column="17">( <argument pos:line="2272" pos:column="19">STDMETHODCALLTYPE *ApplyCodeChange</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2272" pos:column="55">(</op:operator> 
            <name pos:line="2273" pos:column="13">IDebugENCSnapshot3</name> <op:operator pos:line="2273" pos:column="32">*</op:operator> <name pos:line="2273" pos:column="34">This</name><op:operator pos:line="2273" pos:column="38">,</op:operator>
            <comment type="block" pos:line="2274" pos:column="13">/* [in] */</comment> <name pos:line="2274" pos:column="24">ULONG</name> <name pos:line="2274" pos:column="30">in_NoOfLineMaps</name><op:operator pos:line="2274" pos:column="45">,</op:operator>
            <comment type="block" pos:line="2275" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="2275" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="2275" pos:column="54">(<argument pos:line="2275" pos:column="55">in_NoOfLineMaps</argument>)</argument_list></macro> <name pos:line="2275" pos:column="72">IDebugENCLineMap</name> <op:operator pos:line="2275" pos:column="89">*</op:operator><op:operator pos:line="2275" pos:column="90">*</op:operator><name pos:line="2275" pos:column="91">in_ArrayOfLineMaps</name><op:operator pos:line="2275" pos:column="109">,</op:operator>
            <comment type="block" pos:line="2276" pos:column="13">/* [in] */</comment> <name pos:line="2276" pos:column="24">__RPC__in_opt</name> <name pos:line="2276" pos:column="38">IServiceProvider</name> <op:operator pos:line="2276" pos:column="55">*</op:operator><name pos:line="2276" pos:column="56">in_pServiceProvider</name><op:operator pos:line="2276" pos:column="75">,</op:operator>
            <comment type="block" pos:line="2277" pos:column="13">/* [in] */</comment> <name pos:line="2277" pos:column="24">BOOL</name> <name pos:line="2277" pos:column="29">in_fOnContinue</name><op:operator pos:line="2277" pos:column="43">,</op:operator>
            <comment type="block" pos:line="2278" pos:column="13">/* [out] */</comment> <name pos:line="2278" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2278" pos:column="46">IEnumDebugENCInfo2</name> <op:operator pos:line="2278" pos:column="65">*</op:operator><op:operator pos:line="2278" pos:column="66">*</op:operator><name pos:line="2278" pos:column="67">out_ppEnumENCInfo</name><op:operator pos:line="2278" pos:column="84">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="2280" pos:column="9">HRESULT</name></type> ( <name pos:line="2280" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2280" pos:column="37">*</type:modifier><name pos:line="2280" pos:column="38">CommitChange</name> )<parameter_list pos:line="2280" pos:column="52">( 
            <param><decl><type><name pos:line="2281" pos:column="13">IDebugENCSnapshot3</name> <type:modifier pos:line="2281" pos:column="32">*</type:modifier></type> <name pos:line="2281" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2282" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2282" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2282" pos:column="46">IEnumDebugENCInfo2</name> <type:modifier pos:line="2282" pos:column="65">*</type:modifier><type:modifier pos:line="2282" pos:column="66">*</type:modifier></type><name pos:line="2282" pos:column="67">out_ppEnumENCInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2284" pos:column="9">HRESULT</name> <argument_list pos:line="2284" pos:column="17">( <argument pos:line="2284" pos:column="19">STDMETHODCALLTYPE *ApplyCodeChange3</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2284" pos:column="56">(</op:operator> 
            <name pos:line="2285" pos:column="13">IDebugENCSnapshot3</name> <op:operator pos:line="2285" pos:column="32">*</op:operator> <name pos:line="2285" pos:column="34">This</name><op:operator pos:line="2285" pos:column="38">,</op:operator>
            <comment type="block" pos:line="2286" pos:column="13">/* [in] */</comment> <name pos:line="2286" pos:column="24">ULONG</name> <name pos:line="2286" pos:column="30">ulLineHint</name><op:operator pos:line="2286" pos:column="40">,</op:operator>
            <comment type="block" pos:line="2287" pos:column="13">/* [in] */</comment> <name pos:line="2287" pos:column="24">ULONG</name> <name pos:line="2287" pos:column="30">in_NoOfLineMaps</name><op:operator pos:line="2287" pos:column="45">,</op:operator>
            <comment type="block" pos:line="2288" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="2288" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="2288" pos:column="54">(<argument pos:line="2288" pos:column="55">in_NoOfLineMaps</argument>)</argument_list></macro> <name pos:line="2288" pos:column="72">IDebugENCLineMap</name> <op:operator pos:line="2288" pos:column="89">*</op:operator><op:operator pos:line="2288" pos:column="90">*</op:operator><name pos:line="2288" pos:column="91">in_ArrayOfLineMaps</name><op:operator pos:line="2288" pos:column="109">,</op:operator>
            <comment type="block" pos:line="2289" pos:column="13">/* [in] */</comment> <name pos:line="2289" pos:column="24">__RPC__in_opt</name> <name pos:line="2289" pos:column="38">IServiceProvider</name> <op:operator pos:line="2289" pos:column="55">*</op:operator><name pos:line="2289" pos:column="56">in_pServiceProvider</name><op:operator pos:line="2289" pos:column="75">,</op:operator>
            <comment type="block" pos:line="2290" pos:column="13">/* [in] */</comment> <name pos:line="2290" pos:column="24">BOOL</name> <name pos:line="2290" pos:column="29">in_fOnContinue</name><op:operator pos:line="2290" pos:column="43">,</op:operator>
            <comment type="block" pos:line="2291" pos:column="13">/* [out] */</comment> <name pos:line="2291" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2291" pos:column="46">IEnumDebugENCInfo2</name> <op:operator pos:line="2291" pos:column="65">*</op:operator><op:operator pos:line="2291" pos:column="66">*</op:operator><name pos:line="2291" pos:column="67">out_ppEnumENCInfo</name><op:operator pos:line="2291" pos:column="84">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="2293" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2294" pos:column="7">IDebugENCSnapshot3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2296" pos:column="5">interface</name></type> <name pos:line="2296" pos:column="15">IDebugENCSnapshot3</name>
    <argument_list pos:line="2297" pos:column="5">{
        <argument><expr><name pos:line="2298" pos:column="9">CONST_VTBL</name> struct <name pos:line="2298" pos:column="27">IDebugENCSnapshot3Vtbl</name> <op:operator pos:line="2298" pos:column="50">*</op:operator><name pos:line="2298" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2303" pos:column="1">#<cpp:directive pos:line="2303" pos:column="2">ifdef</cpp:directive> <name pos:line="2303" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2306" pos:column="1">#<cpp:directive pos:line="2306" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2306" pos:column="9">IDebugENCSnapshot3_QueryInterface</name><parameter_list pos:line="2306" pos:column="42">(<param><type><name pos:line="2306" pos:column="43">This</name></type></param>,<param><type><name pos:line="2306" pos:column="48">riid</name></type></param>,<param><type><name pos:line="2306" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2307" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2309" pos:column="1">#<cpp:directive pos:line="2309" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2309" pos:column="9">IDebugENCSnapshot3_AddRef</name><parameter_list pos:line="2309" pos:column="34">(<param><type><name pos:line="2309" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2310" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2312" pos:column="1">#<cpp:directive pos:line="2312" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2312" pos:column="9">IDebugENCSnapshot3_Release</name><parameter_list pos:line="2312" pos:column="35">(<param><type><name pos:line="2312" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2313" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2316" pos:column="1">#<cpp:directive pos:line="2316" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2316" pos:column="9">IDebugENCSnapshot3_GetENCSnapshotInfo</name><parameter_list pos:line="2316" pos:column="46">(<param><type><name pos:line="2316" pos:column="47">This</name></type></param>,<param><type><name pos:line="2316" pos:column="52">pSnapshotInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2317" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetENCSnapshotInfo(This,pSnapshotInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2319" pos:column="1">#<cpp:directive pos:line="2319" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2319" pos:column="9">IDebugENCSnapshot3_ApplyCodeChange</name><parameter_list pos:line="2319" pos:column="43">(<param><type><name pos:line="2319" pos:column="44">This</name></type></param>,<param><type><name pos:line="2319" pos:column="49">in_NoOfLineMaps</name></type></param>,<param><type><name pos:line="2319" pos:column="65">in_ArrayOfLineMaps</name></type></param>,<param><type><name pos:line="2319" pos:column="84">in_pServiceProvider</name></type></param>,<param><type><name pos:line="2319" pos:column="104">in_fOnContinue</name></type></param>,<param><type><name pos:line="2319" pos:column="119">out_ppEnumENCInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2320" pos:column="5">( (This)-&gt;lpVtbl -&gt; ApplyCodeChange(This,in_NoOfLineMaps,in_ArrayOfLineMaps,in_pServiceProvider,in_fOnContinue,out_ppEnumENCInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2322" pos:column="1">#<cpp:directive pos:line="2322" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2322" pos:column="9">IDebugENCSnapshot3_CommitChange</name><parameter_list pos:line="2322" pos:column="40">(<param><type><name pos:line="2322" pos:column="41">This</name></type></param>,<param><type><name pos:line="2322" pos:column="46">out_ppEnumENCInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2323" pos:column="5">( (This)-&gt;lpVtbl -&gt; CommitChange(This,out_ppEnumENCInfo) )</cpp:value></cpp:define> 


<cpp:define pos:line="2326" pos:column="1">#<cpp:directive pos:line="2326" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2326" pos:column="9">IDebugENCSnapshot3_ApplyCodeChange3</name><parameter_list pos:line="2326" pos:column="44">(<param><type><name pos:line="2326" pos:column="45">This</name></type></param>,<param><type><name pos:line="2326" pos:column="50">ulLineHint</name></type></param>,<param><type><name pos:line="2326" pos:column="61">in_NoOfLineMaps</name></type></param>,<param><type><name pos:line="2326" pos:column="77">in_ArrayOfLineMaps</name></type></param>,<param><type><name pos:line="2326" pos:column="96">in_pServiceProvider</name></type></param>,<param><type><name pos:line="2326" pos:column="116">in_fOnContinue</name></type></param>,<param><type><name pos:line="2326" pos:column="131">out_ppEnumENCInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2327" pos:column="5">( (This)-&gt;lpVtbl -&gt; ApplyCodeChange3(This,ulLineHint,in_NoOfLineMaps,in_ArrayOfLineMaps,in_pServiceProvider,in_fOnContinue,out_ppEnumENCInfo) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2329" pos:column="1">#<cpp:directive pos:line="2329" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2329" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2332" pos:column="1">#<cpp:directive pos:line="2332" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2332" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2337" pos:column="1">#<cpp:directive pos:line="2337" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2337" pos:column="9">/* __IDebugENCSnapshot3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2340" pos:column="1">#<cpp:directive pos:line="2340" pos:column="2">ifndef</cpp:directive> <name pos:line="2340" pos:column="9">__IEnumDebugENCSnapshots2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2341" pos:column="1">#<cpp:directive pos:line="2341" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2341" pos:column="9">__IEnumDebugENCSnapshots2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2343" pos:column="1">/* interface IEnumDebugENCSnapshots2 */</comment>
<comment type="block" pos:line="2344" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2347" pos:column="1">EXTERN_C</name> <specifier pos:line="2347" pos:column="10">const</specifier> <name pos:line="2347" pos:column="16">IID</name></type> <name pos:line="2347" pos:column="20">IID_IEnumDebugENCSnapshots2</name></decl>;</decl_stmt>

<cpp:if pos:line="2349" pos:column="1">#<cpp:directive pos:line="2349" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2349" pos:column="5">defined</name><argument_list pos:line="2349" pos:column="12">(<argument><expr><name pos:line="2349" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2349" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2349" pos:column="29">!</op:operator><call><name pos:line="2349" pos:column="30">defined</name><argument_list pos:line="2349" pos:column="37">(<argument><expr><name pos:line="2349" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2351" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2351" pos:column="19">(<argument pos:line="2351" pos:column="20">"f6f94d1a-78c2-11d2-8ffe-00c04fa38314"</argument>)</argument_list></macro>
    <label><name pos:line="2352" pos:column="5">IEnumDebugENCSnapshots2</name> :</label> <expr_stmt><expr pos:line="2352" pos:column="31">public <name pos:line="2352" pos:column="38">IUnknown</name>
    <block pos:line="2353" pos:column="5">{
    <expr pos:line="2354" pos:column="5">public<op:operator pos:line="2354" pos:column="11">:</op:operator>
        virtual <name pos:line="2355" pos:column="17">HRESULT</name> <name pos:line="2355" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2355" pos:column="43">Next</name><argument_list pos:line="2355" pos:column="47">( 
            <comment type="block" pos:line="2356" pos:column="13">/* [in] */</comment> <argument pos:line="2356" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="2357" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="2357" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IDebugENCSnapshot2 **rgelt</argument>,
            <comment type="block" pos:line="2358" pos:column="13">/* [out][in] */</comment> <argument pos:line="2358" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="2358" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="2358" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="2360" pos:column="9">virtual <name pos:line="2360" pos:column="17">HRESULT</name> <name pos:line="2360" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2360" pos:column="43">Skip</name><argument_list pos:line="2360" pos:column="47">( 
            <comment type="block" pos:line="2361" pos:column="13">/* [in] */</comment> <argument pos:line="2361" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="2361" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="2361" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="2363" pos:column="9">virtual <name pos:line="2363" pos:column="17">HRESULT</name> <name pos:line="2363" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2363" pos:column="43">Reset</name><argument_list pos:line="2363" pos:column="48">( <argument><expr><name pos:line="2363" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2363" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="2363" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="2365" pos:column="9">virtual <name pos:line="2365" pos:column="17">HRESULT</name> <name pos:line="2365" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2365" pos:column="43">Clone</name><argument_list pos:line="2365" pos:column="48">( 
            <comment type="block" pos:line="2366" pos:column="13">/* [out] */</comment> <argument pos:line="2366" pos:column="25">__RPC__deref_out_opt IEnumDebugENCSnapshots2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="2366" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="2366" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="2368" pos:column="9">virtual <name pos:line="2368" pos:column="17">HRESULT</name> <name pos:line="2368" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2368" pos:column="43">GetCount</name><argument_list pos:line="2368" pos:column="51">( 
            <comment type="block" pos:line="2369" pos:column="13">/* [out] */</comment> <argument pos:line="2369" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="2369" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="2369" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2373" pos:column="1">#<cpp:directive pos:line="2373" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2373" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2375" pos:column="5">typedef <type><struct pos:line="2375" pos:column="13">struct <name pos:line="2375" pos:column="20">IEnumDebugENCSnapshots2Vtbl</name>
    <block pos:line="2376" pos:column="5">{<public type="default" pos:line="2376" pos:column="6">
        <function_decl><type><name pos:line="2377" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2379" pos:column="9">HRESULT</name></type> ( <name pos:line="2379" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2379" pos:column="37">*</type:modifier><name pos:line="2379" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2379" pos:column="54">( 
            <param><decl><type><name pos:line="2380" pos:column="13">IEnumDebugENCSnapshots2</name> <type:modifier pos:line="2380" pos:column="37">*</type:modifier></type> <name pos:line="2380" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="2381" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2381" pos:column="24">__RPC__in</name> <name pos:line="2381" pos:column="34">REFIID</name></type> <name pos:line="2381" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2382" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2383" pos:column="13">__RPC__deref_out</name>  <name pos:line="2383" pos:column="31">void</name> <type:modifier pos:line="2383" pos:column="36">*</type:modifier><type:modifier pos:line="2383" pos:column="37">*</type:modifier></type><name pos:line="2383" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2385" pos:column="9">ULONG</name></type> ( <name pos:line="2385" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2385" pos:column="35">*</type:modifier><name pos:line="2385" pos:column="36">AddRef</name> )<parameter_list pos:line="2385" pos:column="44">( 
            <param><decl><type><name pos:line="2386" pos:column="13">IEnumDebugENCSnapshots2</name> <type:modifier pos:line="2386" pos:column="37">*</type:modifier></type> <name pos:line="2386" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2388" pos:column="9">ULONG</name></type> ( <name pos:line="2388" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2388" pos:column="35">*</type:modifier><name pos:line="2388" pos:column="36">Release</name> )<parameter_list pos:line="2388" pos:column="45">( 
            <param><decl><type><name pos:line="2389" pos:column="13">IEnumDebugENCSnapshots2</name> <type:modifier pos:line="2389" pos:column="37">*</type:modifier></type> <name pos:line="2389" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2391" pos:column="9">HRESULT</name> <argument_list pos:line="2391" pos:column="17">( <argument pos:line="2391" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2391" pos:column="44">(</op:operator> 
            <name pos:line="2392" pos:column="13">IEnumDebugENCSnapshots2</name> <op:operator pos:line="2392" pos:column="37">*</op:operator> <name pos:line="2392" pos:column="39">This</name><op:operator pos:line="2392" pos:column="43">,</op:operator>
            <comment type="block" pos:line="2393" pos:column="13">/* [in] */</comment> <name pos:line="2393" pos:column="24">ULONG</name> <name pos:line="2393" pos:column="30">celt</name><op:operator pos:line="2393" pos:column="34">,</op:operator>
            <comment type="block" pos:line="2394" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="2394" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="2394" pos:column="67">(<argument pos:line="2394" pos:column="68">celt</argument>, <argument pos:line="2394" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="2394" pos:column="89">IDebugENCSnapshot2</name> <op:operator pos:line="2394" pos:column="108">*</op:operator><op:operator pos:line="2394" pos:column="109">*</op:operator><name pos:line="2394" pos:column="110">rgelt</name><op:operator pos:line="2394" pos:column="115">,</op:operator>
            <comment type="block" pos:line="2395" pos:column="13">/* [out][in] */</comment> <name pos:line="2395" pos:column="29">__RPC__inout</name> <name pos:line="2395" pos:column="42">ULONG</name> <op:operator pos:line="2395" pos:column="48">*</op:operator><name pos:line="2395" pos:column="49">pceltFetched</name><op:operator pos:line="2395" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="2397" pos:column="9">HRESULT</name></type> ( <name pos:line="2397" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2397" pos:column="37">*</type:modifier><name pos:line="2397" pos:column="38">Skip</name> )<parameter_list pos:line="2397" pos:column="44">( 
            <param><decl><type><name pos:line="2398" pos:column="13">IEnumDebugENCSnapshots2</name> <type:modifier pos:line="2398" pos:column="37">*</type:modifier></type> <name pos:line="2398" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="2399" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2399" pos:column="24">ULONG</name></type> <name pos:line="2399" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2401" pos:column="9">HRESULT</name></type> ( <name pos:line="2401" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2401" pos:column="37">*</type:modifier><name pos:line="2401" pos:column="38">Reset</name> )<parameter_list pos:line="2401" pos:column="45">( 
            <param><decl><type><name pos:line="2402" pos:column="13">IEnumDebugENCSnapshots2</name> <type:modifier pos:line="2402" pos:column="37">*</type:modifier></type> <name pos:line="2402" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2404" pos:column="9">HRESULT</name></type> ( <name pos:line="2404" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2404" pos:column="37">*</type:modifier><name pos:line="2404" pos:column="38">Clone</name> )<parameter_list pos:line="2404" pos:column="45">( 
            <param><decl><type><name pos:line="2405" pos:column="13">IEnumDebugENCSnapshots2</name> <type:modifier pos:line="2405" pos:column="37">*</type:modifier></type> <name pos:line="2405" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="2406" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2406" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2406" pos:column="46">IEnumDebugENCSnapshots2</name> <type:modifier pos:line="2406" pos:column="70">*</type:modifier><type:modifier pos:line="2406" pos:column="71">*</type:modifier></type><name pos:line="2406" pos:column="72">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2408" pos:column="9">HRESULT</name></type> ( <name pos:line="2408" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2408" pos:column="37">*</type:modifier><name pos:line="2408" pos:column="38">GetCount</name> )<parameter_list pos:line="2408" pos:column="48">( 
            <param><decl><type><name pos:line="2409" pos:column="13">IEnumDebugENCSnapshots2</name> <type:modifier pos:line="2409" pos:column="37">*</type:modifier></type> <name pos:line="2409" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="2410" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2410" pos:column="25">__RPC__out</name> <name pos:line="2410" pos:column="36">ULONG</name> <type:modifier pos:line="2410" pos:column="42">*</type:modifier></type><name pos:line="2410" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2412" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2413" pos:column="7">IEnumDebugENCSnapshots2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2415" pos:column="5">interface</name></type> <name pos:line="2415" pos:column="15">IEnumDebugENCSnapshots2</name>
    <argument_list pos:line="2416" pos:column="5">{
        <argument><expr><name pos:line="2417" pos:column="9">CONST_VTBL</name> struct <name pos:line="2417" pos:column="27">IEnumDebugENCSnapshots2Vtbl</name> <op:operator pos:line="2417" pos:column="55">*</op:operator><name pos:line="2417" pos:column="56">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2422" pos:column="1">#<cpp:directive pos:line="2422" pos:column="2">ifdef</cpp:directive> <name pos:line="2422" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2425" pos:column="1">#<cpp:directive pos:line="2425" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2425" pos:column="9">IEnumDebugENCSnapshots2_QueryInterface</name><parameter_list pos:line="2425" pos:column="47">(<param><type><name pos:line="2425" pos:column="48">This</name></type></param>,<param><type><name pos:line="2425" pos:column="53">riid</name></type></param>,<param><type><name pos:line="2425" pos:column="58">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2426" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2428" pos:column="1">#<cpp:directive pos:line="2428" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2428" pos:column="9">IEnumDebugENCSnapshots2_AddRef</name><parameter_list pos:line="2428" pos:column="39">(<param><type><name pos:line="2428" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2429" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2431" pos:column="1">#<cpp:directive pos:line="2431" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2431" pos:column="9">IEnumDebugENCSnapshots2_Release</name><parameter_list pos:line="2431" pos:column="40">(<param><type><name pos:line="2431" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2432" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2435" pos:column="1">#<cpp:directive pos:line="2435" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2435" pos:column="9">IEnumDebugENCSnapshots2_Next</name><parameter_list pos:line="2435" pos:column="37">(<param><type><name pos:line="2435" pos:column="38">This</name></type></param>,<param><type><name pos:line="2435" pos:column="43">celt</name></type></param>,<param><type><name pos:line="2435" pos:column="48">rgelt</name></type></param>,<param><type><name pos:line="2435" pos:column="54">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2436" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="2438" pos:column="1">#<cpp:directive pos:line="2438" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2438" pos:column="9">IEnumDebugENCSnapshots2_Skip</name><parameter_list pos:line="2438" pos:column="37">(<param><type><name pos:line="2438" pos:column="38">This</name></type></param>,<param><type><name pos:line="2438" pos:column="43">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2439" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="2441" pos:column="1">#<cpp:directive pos:line="2441" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2441" pos:column="9">IEnumDebugENCSnapshots2_Reset</name><parameter_list pos:line="2441" pos:column="38">(<param><type><name pos:line="2441" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2442" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2444" pos:column="1">#<cpp:directive pos:line="2444" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2444" pos:column="9">IEnumDebugENCSnapshots2_Clone</name><parameter_list pos:line="2444" pos:column="38">(<param><type><name pos:line="2444" pos:column="39">This</name></type></param>,<param><type><name pos:line="2444" pos:column="44">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2445" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="2447" pos:column="1">#<cpp:directive pos:line="2447" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2447" pos:column="9">IEnumDebugENCSnapshots2_GetCount</name><parameter_list pos:line="2447" pos:column="41">(<param><type><name pos:line="2447" pos:column="42">This</name></type></param>,<param><type><name pos:line="2447" pos:column="47">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2448" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2450" pos:column="1">#<cpp:directive pos:line="2450" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2450" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2453" pos:column="1">#<cpp:directive pos:line="2453" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2453" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2458" pos:column="1">#<cpp:directive pos:line="2458" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2458" pos:column="9">/* __IEnumDebugENCSnapshots2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2461" pos:column="1">#<cpp:directive pos:line="2461" pos:column="2">ifndef</cpp:directive> <name pos:line="2461" pos:column="9">__IEnumDebugErrorInfos2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2462" pos:column="1">#<cpp:directive pos:line="2462" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2462" pos:column="9">__IEnumDebugErrorInfos2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2464" pos:column="1">/* interface IEnumDebugErrorInfos2 */</comment>
<comment type="block" pos:line="2465" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2468" pos:column="1">EXTERN_C</name> <specifier pos:line="2468" pos:column="10">const</specifier> <name pos:line="2468" pos:column="16">IID</name></type> <name pos:line="2468" pos:column="20">IID_IEnumDebugErrorInfos2</name></decl>;</decl_stmt>

<cpp:if pos:line="2470" pos:column="1">#<cpp:directive pos:line="2470" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2470" pos:column="5">defined</name><argument_list pos:line="2470" pos:column="12">(<argument><expr><name pos:line="2470" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2470" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2470" pos:column="29">!</op:operator><call><name pos:line="2470" pos:column="30">defined</name><argument_list pos:line="2470" pos:column="37">(<argument><expr><name pos:line="2470" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2472" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2472" pos:column="19">(<argument pos:line="2472" pos:column="20">"f6f94d23-78c2-11d2-8ffe-00c04fa38314"</argument>)</argument_list></macro>
    <label><name pos:line="2473" pos:column="5">IEnumDebugErrorInfos2</name> :</label> <expr_stmt><expr pos:line="2473" pos:column="29">public <name pos:line="2473" pos:column="36">IUnknown</name>
    <block pos:line="2474" pos:column="5">{
    <expr pos:line="2475" pos:column="5">public<op:operator pos:line="2475" pos:column="11">:</op:operator>
        virtual <name pos:line="2476" pos:column="17">HRESULT</name> <name pos:line="2476" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2476" pos:column="43">Next</name><argument_list pos:line="2476" pos:column="47">( 
            <comment type="block" pos:line="2477" pos:column="13">/* [in] */</comment> <argument pos:line="2477" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="2478" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="2478" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IErrorInfo **rgelt</argument>,
            <comment type="block" pos:line="2479" pos:column="13">/* [out][in] */</comment> <argument pos:line="2479" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="2479" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="2479" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="2481" pos:column="9">virtual <name pos:line="2481" pos:column="17">HRESULT</name> <name pos:line="2481" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2481" pos:column="43">Skip</name><argument_list pos:line="2481" pos:column="47">( 
            <comment type="block" pos:line="2482" pos:column="13">/* [in] */</comment> <argument pos:line="2482" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="2482" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="2482" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="2484" pos:column="9">virtual <name pos:line="2484" pos:column="17">HRESULT</name> <name pos:line="2484" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2484" pos:column="43">Reset</name><argument_list pos:line="2484" pos:column="48">( <argument><expr><name pos:line="2484" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2484" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="2484" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="2486" pos:column="9">virtual <name pos:line="2486" pos:column="17">HRESULT</name> <name pos:line="2486" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2486" pos:column="43">Clone</name><argument_list pos:line="2486" pos:column="48">( 
            <comment type="block" pos:line="2487" pos:column="13">/* [out] */</comment> <argument pos:line="2487" pos:column="25">__RPC__deref_out_opt IEnumDebugErrorInfos2 **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="2487" pos:column="78">=</op:operator> <lit:literal type="number" pos:line="2487" pos:column="80">0</lit:literal></expr>;
        
        <expr pos:line="2489" pos:column="9">virtual <name pos:line="2489" pos:column="17">HRESULT</name> <name pos:line="2489" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2489" pos:column="43">GetCount</name><argument_list pos:line="2489" pos:column="51">( 
            <comment type="block" pos:line="2490" pos:column="13">/* [out] */</comment> <argument pos:line="2490" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="2490" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="2490" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2494" pos:column="1">#<cpp:directive pos:line="2494" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2494" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2496" pos:column="5">typedef <type><struct pos:line="2496" pos:column="13">struct <name pos:line="2496" pos:column="20">IEnumDebugErrorInfos2Vtbl</name>
    <block pos:line="2497" pos:column="5">{<public type="default" pos:line="2497" pos:column="6">
        <function_decl><type><name pos:line="2498" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2500" pos:column="9">HRESULT</name></type> ( <name pos:line="2500" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2500" pos:column="37">*</type:modifier><name pos:line="2500" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2500" pos:column="54">( 
            <param><decl><type><name pos:line="2501" pos:column="13">IEnumDebugErrorInfos2</name> <type:modifier pos:line="2501" pos:column="35">*</type:modifier></type> <name pos:line="2501" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="2502" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2502" pos:column="24">__RPC__in</name> <name pos:line="2502" pos:column="34">REFIID</name></type> <name pos:line="2502" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2503" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2504" pos:column="13">__RPC__deref_out</name>  <name pos:line="2504" pos:column="31">void</name> <type:modifier pos:line="2504" pos:column="36">*</type:modifier><type:modifier pos:line="2504" pos:column="37">*</type:modifier></type><name pos:line="2504" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2506" pos:column="9">ULONG</name></type> ( <name pos:line="2506" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2506" pos:column="35">*</type:modifier><name pos:line="2506" pos:column="36">AddRef</name> )<parameter_list pos:line="2506" pos:column="44">( 
            <param><decl><type><name pos:line="2507" pos:column="13">IEnumDebugErrorInfos2</name> <type:modifier pos:line="2507" pos:column="35">*</type:modifier></type> <name pos:line="2507" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2509" pos:column="9">ULONG</name></type> ( <name pos:line="2509" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2509" pos:column="35">*</type:modifier><name pos:line="2509" pos:column="36">Release</name> )<parameter_list pos:line="2509" pos:column="45">( 
            <param><decl><type><name pos:line="2510" pos:column="13">IEnumDebugErrorInfos2</name> <type:modifier pos:line="2510" pos:column="35">*</type:modifier></type> <name pos:line="2510" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2512" pos:column="9">HRESULT</name> <argument_list pos:line="2512" pos:column="17">( <argument pos:line="2512" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2512" pos:column="44">(</op:operator> 
            <name pos:line="2513" pos:column="13">IEnumDebugErrorInfos2</name> <op:operator pos:line="2513" pos:column="35">*</op:operator> <name pos:line="2513" pos:column="37">This</name><op:operator pos:line="2513" pos:column="41">,</op:operator>
            <comment type="block" pos:line="2514" pos:column="13">/* [in] */</comment> <name pos:line="2514" pos:column="24">ULONG</name> <name pos:line="2514" pos:column="30">celt</name><op:operator pos:line="2514" pos:column="34">,</op:operator>
            <comment type="block" pos:line="2515" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="2515" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="2515" pos:column="67">(<argument pos:line="2515" pos:column="68">celt</argument>, <argument pos:line="2515" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="2515" pos:column="89">IErrorInfo</name> <op:operator pos:line="2515" pos:column="100">*</op:operator><op:operator pos:line="2515" pos:column="101">*</op:operator><name pos:line="2515" pos:column="102">rgelt</name><op:operator pos:line="2515" pos:column="107">,</op:operator>
            <comment type="block" pos:line="2516" pos:column="13">/* [out][in] */</comment> <name pos:line="2516" pos:column="29">__RPC__inout</name> <name pos:line="2516" pos:column="42">ULONG</name> <op:operator pos:line="2516" pos:column="48">*</op:operator><name pos:line="2516" pos:column="49">pceltFetched</name><op:operator pos:line="2516" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="2518" pos:column="9">HRESULT</name></type> ( <name pos:line="2518" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2518" pos:column="37">*</type:modifier><name pos:line="2518" pos:column="38">Skip</name> )<parameter_list pos:line="2518" pos:column="44">( 
            <param><decl><type><name pos:line="2519" pos:column="13">IEnumDebugErrorInfos2</name> <type:modifier pos:line="2519" pos:column="35">*</type:modifier></type> <name pos:line="2519" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="2520" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2520" pos:column="24">ULONG</name></type> <name pos:line="2520" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2522" pos:column="9">HRESULT</name></type> ( <name pos:line="2522" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2522" pos:column="37">*</type:modifier><name pos:line="2522" pos:column="38">Reset</name> )<parameter_list pos:line="2522" pos:column="45">( 
            <param><decl><type><name pos:line="2523" pos:column="13">IEnumDebugErrorInfos2</name> <type:modifier pos:line="2523" pos:column="35">*</type:modifier></type> <name pos:line="2523" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2525" pos:column="9">HRESULT</name></type> ( <name pos:line="2525" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2525" pos:column="37">*</type:modifier><name pos:line="2525" pos:column="38">Clone</name> )<parameter_list pos:line="2525" pos:column="45">( 
            <param><decl><type><name pos:line="2526" pos:column="13">IEnumDebugErrorInfos2</name> <type:modifier pos:line="2526" pos:column="35">*</type:modifier></type> <name pos:line="2526" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="2527" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2527" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2527" pos:column="46">IEnumDebugErrorInfos2</name> <type:modifier pos:line="2527" pos:column="68">*</type:modifier><type:modifier pos:line="2527" pos:column="69">*</type:modifier></type><name pos:line="2527" pos:column="70">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2529" pos:column="9">HRESULT</name></type> ( <name pos:line="2529" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2529" pos:column="37">*</type:modifier><name pos:line="2529" pos:column="38">GetCount</name> )<parameter_list pos:line="2529" pos:column="48">( 
            <param><decl><type><name pos:line="2530" pos:column="13">IEnumDebugErrorInfos2</name> <type:modifier pos:line="2530" pos:column="35">*</type:modifier></type> <name pos:line="2530" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="2531" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2531" pos:column="25">__RPC__out</name> <name pos:line="2531" pos:column="36">ULONG</name> <type:modifier pos:line="2531" pos:column="42">*</type:modifier></type><name pos:line="2531" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2533" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2534" pos:column="7">IEnumDebugErrorInfos2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2536" pos:column="5">interface</name></type> <name pos:line="2536" pos:column="15">IEnumDebugErrorInfos2</name>
    <argument_list pos:line="2537" pos:column="5">{
        <argument><expr><name pos:line="2538" pos:column="9">CONST_VTBL</name> struct <name pos:line="2538" pos:column="27">IEnumDebugErrorInfos2Vtbl</name> <op:operator pos:line="2538" pos:column="53">*</op:operator><name pos:line="2538" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2543" pos:column="1">#<cpp:directive pos:line="2543" pos:column="2">ifdef</cpp:directive> <name pos:line="2543" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2546" pos:column="1">#<cpp:directive pos:line="2546" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2546" pos:column="9">IEnumDebugErrorInfos2_QueryInterface</name><parameter_list pos:line="2546" pos:column="45">(<param><type><name pos:line="2546" pos:column="46">This</name></type></param>,<param><type><name pos:line="2546" pos:column="51">riid</name></type></param>,<param><type><name pos:line="2546" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2547" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2549" pos:column="1">#<cpp:directive pos:line="2549" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2549" pos:column="9">IEnumDebugErrorInfos2_AddRef</name><parameter_list pos:line="2549" pos:column="37">(<param><type><name pos:line="2549" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2550" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2552" pos:column="1">#<cpp:directive pos:line="2552" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2552" pos:column="9">IEnumDebugErrorInfos2_Release</name><parameter_list pos:line="2552" pos:column="38">(<param><type><name pos:line="2552" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2553" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2556" pos:column="1">#<cpp:directive pos:line="2556" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2556" pos:column="9">IEnumDebugErrorInfos2_Next</name><parameter_list pos:line="2556" pos:column="35">(<param><type><name pos:line="2556" pos:column="36">This</name></type></param>,<param><type><name pos:line="2556" pos:column="41">celt</name></type></param>,<param><type><name pos:line="2556" pos:column="46">rgelt</name></type></param>,<param><type><name pos:line="2556" pos:column="52">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2557" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="2559" pos:column="1">#<cpp:directive pos:line="2559" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2559" pos:column="9">IEnumDebugErrorInfos2_Skip</name><parameter_list pos:line="2559" pos:column="35">(<param><type><name pos:line="2559" pos:column="36">This</name></type></param>,<param><type><name pos:line="2559" pos:column="41">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2560" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="2562" pos:column="1">#<cpp:directive pos:line="2562" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2562" pos:column="9">IEnumDebugErrorInfos2_Reset</name><parameter_list pos:line="2562" pos:column="36">(<param><type><name pos:line="2562" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2563" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2565" pos:column="1">#<cpp:directive pos:line="2565" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2565" pos:column="9">IEnumDebugErrorInfos2_Clone</name><parameter_list pos:line="2565" pos:column="36">(<param><type><name pos:line="2565" pos:column="37">This</name></type></param>,<param><type><name pos:line="2565" pos:column="42">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2566" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="2568" pos:column="1">#<cpp:directive pos:line="2568" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2568" pos:column="9">IEnumDebugErrorInfos2_GetCount</name><parameter_list pos:line="2568" pos:column="39">(<param><type><name pos:line="2568" pos:column="40">This</name></type></param>,<param><type><name pos:line="2568" pos:column="45">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2569" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2571" pos:column="1">#<cpp:directive pos:line="2571" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2571" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2574" pos:column="1">#<cpp:directive pos:line="2574" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2574" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2579" pos:column="1">#<cpp:directive pos:line="2579" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2579" pos:column="9">/* __IEnumDebugErrorInfos2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2582" pos:column="1">#<cpp:directive pos:line="2582" pos:column="2">ifndef</cpp:directive> <name pos:line="2582" pos:column="9">__IENCDebugInfo_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2583" pos:column="1">#<cpp:directive pos:line="2583" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2583" pos:column="9">__IENCDebugInfo_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2585" pos:column="1">/* interface IENCDebugInfo */</comment>
<comment type="block" pos:line="2586" pos:column="1">/* [unique][uuid][object] */</comment> 

<typedef pos:line="2588" pos:column="1">typedef <type><struct pos:line="2588" pos:column="9">struct <name pos:line="2588" pos:column="16">_ENC_LOCALINFO</name>
    <block pos:line="2589" pos:column="5">{<public type="default" pos:line="2589" pos:column="6">
    <decl_stmt><decl><type><name pos:line="2590" pos:column="5">BSTR</name></type> <name pos:line="2590" pos:column="10">bstrLocalName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2591" pos:column="5">ULONG32</name></type> <name pos:line="2591" pos:column="13">ulAttribute</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2592" pos:column="5">BYTE</name> <type:modifier pos:line="2592" pos:column="10">*</type:modifier></type><name pos:line="2592" pos:column="11">pSignature</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2593" pos:column="5">ULONG32</name></type> <name pos:line="2593" pos:column="13">cbSize</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2594" pos:column="5">UINT</name></type> <name pos:line="2594" pos:column="10">slot</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="2595" pos:column="9">ENC_LOCALINFO</name>;</typedef>

<typedef pos:line="2597" pos:column="1">typedef <type><struct pos:line="2597" pos:column="9">struct <name pos:line="2597" pos:column="16">_ENC_LOCAL_EXPR_CONTEXT</name>
    <block pos:line="2598" pos:column="5">{<public type="default" pos:line="2598" pos:column="6">
    <decl_stmt><decl><type><name pos:line="2599" pos:column="5">IDebugSymbolProvider</name> <type:modifier pos:line="2599" pos:column="26">*</type:modifier></type><name pos:line="2599" pos:column="27">pSymbolProvider</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2600" pos:column="5">IDebugAddress</name> <type:modifier pos:line="2600" pos:column="19">*</type:modifier></type><name pos:line="2600" pos:column="20">pAddress</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2601" pos:column="5">IUnknown</name> <type:modifier pos:line="2601" pos:column="14">*</type:modifier></type><name pos:line="2601" pos:column="15">pBinder</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2602" pos:column="5">IUnknown</name> <type:modifier pos:line="2602" pos:column="14">*</type:modifier></type><name pos:line="2602" pos:column="15">pEE</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="2603" pos:column="9">ENC_LOCAL_EXPR_CONTEXT</name>;</typedef>


<decl_stmt><decl><type><name pos:line="2606" pos:column="1">EXTERN_C</name> <specifier pos:line="2606" pos:column="10">const</specifier> <name pos:line="2606" pos:column="16">IID</name></type> <name pos:line="2606" pos:column="20">IID_IENCDebugInfo</name></decl>;</decl_stmt>

<cpp:if pos:line="2608" pos:column="1">#<cpp:directive pos:line="2608" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2608" pos:column="5">defined</name><argument_list pos:line="2608" pos:column="12">(<argument><expr><name pos:line="2608" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2608" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2608" pos:column="29">!</op:operator><call><name pos:line="2608" pos:column="30">defined</name><argument_list pos:line="2608" pos:column="37">(<argument><expr><name pos:line="2608" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2610" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2610" pos:column="19">(<argument pos:line="2610" pos:column="20">"1DA15C39-7E02-4ee8-8F60-FFF81275EE14"</argument>)</argument_list></macro>
    <label><name pos:line="2611" pos:column="5">IENCDebugInfo</name> :</label> <expr_stmt><expr pos:line="2611" pos:column="21">public <name pos:line="2611" pos:column="28">IUnknown</name>
    <block pos:line="2612" pos:column="5">{
    <expr pos:line="2613" pos:column="5">public<op:operator pos:line="2613" pos:column="11">:</op:operator>
        virtual <name pos:line="2614" pos:column="17">HRESULT</name> <name pos:line="2614" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2614" pos:column="43">GetLocalVariableCount</name><argument_list pos:line="2614" pos:column="64">( 
            <comment type="block" pos:line="2615" pos:column="13">/* [in] */</comment> <argument pos:line="2615" pos:column="24">UINT32 MethodToken</argument>,
            <comment type="block" pos:line="2616" pos:column="13">/* [out] */</comment> <argument pos:line="2616" pos:column="25">__RPC__out ULONG *pcLocals</argument>)</argument_list></macro> <op:operator pos:line="2616" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="2616" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="2618" pos:column="9">virtual <name pos:line="2618" pos:column="17">HRESULT</name> <name pos:line="2618" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2618" pos:column="43">GetLocalVariableLayout</name><argument_list pos:line="2618" pos:column="65">( 
            <comment type="block" pos:line="2619" pos:column="13">/* [in] */</comment> <argument pos:line="2619" pos:column="24">UINT32 MethodToken</argument>,
            <comment type="block" pos:line="2620" pos:column="13">/* [in] */</comment> <argument pos:line="2620" pos:column="24">ULONG cLocals</argument>,
            <comment type="block" pos:line="2621" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="2621" pos:column="45">__RPC__out_ecount_part(cLocals, *pceltFetched) ENC_LOCALINFO *rgLocalInfo</argument>,
            <comment type="block" pos:line="2622" pos:column="13">/* [out][in] */</comment> <argument pos:line="2622" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="2622" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="2622" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="2624" pos:column="9">virtual <name pos:line="2624" pos:column="17">HRESULT</name> <name pos:line="2624" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2624" pos:column="43">GetCountofExpressionContextsForMethod</name><argument_list pos:line="2624" pos:column="80">( 
            <comment type="block" pos:line="2625" pos:column="13">/* [in] */</comment> <argument pos:line="2625" pos:column="24">UINT32 MethodToken</argument>,
            <comment type="block" pos:line="2626" pos:column="13">/* [out] */</comment> <argument pos:line="2626" pos:column="25">__RPC__out ULONG *pcExprContext</argument>)</argument_list></macro> <op:operator pos:line="2626" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="2626" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="2628" pos:column="9">virtual <name pos:line="2628" pos:column="17">HRESULT</name> <name pos:line="2628" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2628" pos:column="43">GetExpressionContextsForMethod</name><argument_list pos:line="2628" pos:column="73">( 
            <comment type="block" pos:line="2629" pos:column="13">/* [in] */</comment> <argument pos:line="2629" pos:column="24">UINT32 MethodToken</argument>,
            <comment type="block" pos:line="2630" pos:column="13">/* [in] */</comment> <argument pos:line="2630" pos:column="24">ULONG cExprContext</argument>,
            <comment type="block" pos:line="2631" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="2631" pos:column="45">__RPC__out_ecount_part(cExprContext, *pceltFetched) ENC_LOCAL_EXPR_CONTEXT *plocalExprContext</argument>,
            <comment type="block" pos:line="2632" pos:column="13">/* [out][in] */</comment> <argument pos:line="2632" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="2632" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="2632" pos:column="65">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2636" pos:column="1">#<cpp:directive pos:line="2636" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2636" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2638" pos:column="5">typedef <type><struct pos:line="2638" pos:column="13">struct <name pos:line="2638" pos:column="20">IENCDebugInfoVtbl</name>
    <block pos:line="2639" pos:column="5">{<public type="default" pos:line="2639" pos:column="6">
        <function_decl><type><name pos:line="2640" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2642" pos:column="9">HRESULT</name></type> ( <name pos:line="2642" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2642" pos:column="37">*</type:modifier><name pos:line="2642" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2642" pos:column="54">( 
            <param><decl><type><name pos:line="2643" pos:column="13">IENCDebugInfo</name> <type:modifier pos:line="2643" pos:column="27">*</type:modifier></type> <name pos:line="2643" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2644" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2644" pos:column="24">__RPC__in</name> <name pos:line="2644" pos:column="34">REFIID</name></type> <name pos:line="2644" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2645" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2646" pos:column="13">__RPC__deref_out</name>  <name pos:line="2646" pos:column="31">void</name> <type:modifier pos:line="2646" pos:column="36">*</type:modifier><type:modifier pos:line="2646" pos:column="37">*</type:modifier></type><name pos:line="2646" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2648" pos:column="9">ULONG</name></type> ( <name pos:line="2648" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2648" pos:column="35">*</type:modifier><name pos:line="2648" pos:column="36">AddRef</name> )<parameter_list pos:line="2648" pos:column="44">( 
            <param><decl><type><name pos:line="2649" pos:column="13">IENCDebugInfo</name> <type:modifier pos:line="2649" pos:column="27">*</type:modifier></type> <name pos:line="2649" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2651" pos:column="9">ULONG</name></type> ( <name pos:line="2651" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2651" pos:column="35">*</type:modifier><name pos:line="2651" pos:column="36">Release</name> )<parameter_list pos:line="2651" pos:column="45">( 
            <param><decl><type><name pos:line="2652" pos:column="13">IENCDebugInfo</name> <type:modifier pos:line="2652" pos:column="27">*</type:modifier></type> <name pos:line="2652" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2654" pos:column="9">HRESULT</name></type> ( <name pos:line="2654" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2654" pos:column="37">*</type:modifier><name pos:line="2654" pos:column="38">GetLocalVariableCount</name> )<parameter_list pos:line="2654" pos:column="61">( 
            <param><decl><type><name pos:line="2655" pos:column="13">IENCDebugInfo</name> <type:modifier pos:line="2655" pos:column="27">*</type:modifier></type> <name pos:line="2655" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2656" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2656" pos:column="24">UINT32</name></type> <name pos:line="2656" pos:column="31">MethodToken</name></decl></param>,
            <comment type="block" pos:line="2657" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2657" pos:column="25">__RPC__out</name> <name pos:line="2657" pos:column="36">ULONG</name> <type:modifier pos:line="2657" pos:column="42">*</type:modifier></type><name pos:line="2657" pos:column="43">pcLocals</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2659" pos:column="9">HRESULT</name> <argument_list pos:line="2659" pos:column="17">( <argument pos:line="2659" pos:column="19">STDMETHODCALLTYPE *GetLocalVariableLayout</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2659" pos:column="62">(</op:operator> 
            <name pos:line="2660" pos:column="13">IENCDebugInfo</name> <op:operator pos:line="2660" pos:column="27">*</op:operator> <name pos:line="2660" pos:column="29">This</name><op:operator pos:line="2660" pos:column="33">,</op:operator>
            <comment type="block" pos:line="2661" pos:column="13">/* [in] */</comment> <name pos:line="2661" pos:column="24">UINT32</name> <name pos:line="2661" pos:column="31">MethodToken</name><op:operator pos:line="2661" pos:column="42">,</op:operator>
            <comment type="block" pos:line="2662" pos:column="13">/* [in] */</comment> <name pos:line="2662" pos:column="24">ULONG</name> <name pos:line="2662" pos:column="30">cLocals</name><op:operator pos:line="2662" pos:column="37">,</op:operator>
            <comment type="block" pos:line="2663" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="2663" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="2663" pos:column="67">(<argument pos:line="2663" pos:column="68">cLocals</argument>, <argument pos:line="2663" pos:column="77">*pceltFetched</argument>)</argument_list></macro> <name pos:line="2663" pos:column="92">ENC_LOCALINFO</name> <op:operator pos:line="2663" pos:column="106">*</op:operator><name pos:line="2663" pos:column="107">rgLocalInfo</name><op:operator pos:line="2663" pos:column="118">,</op:operator>
            <comment type="block" pos:line="2664" pos:column="13">/* [out][in] */</comment> <name pos:line="2664" pos:column="29">__RPC__inout</name> <name pos:line="2664" pos:column="42">ULONG</name> <op:operator pos:line="2664" pos:column="48">*</op:operator><name pos:line="2664" pos:column="49">pceltFetched</name><op:operator pos:line="2664" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="2666" pos:column="9">HRESULT</name></type> ( <name pos:line="2666" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2666" pos:column="37">*</type:modifier><name pos:line="2666" pos:column="38">GetCountofExpressionContextsForMethod</name> )<parameter_list pos:line="2666" pos:column="77">( 
            <param><decl><type><name pos:line="2667" pos:column="13">IENCDebugInfo</name> <type:modifier pos:line="2667" pos:column="27">*</type:modifier></type> <name pos:line="2667" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2668" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2668" pos:column="24">UINT32</name></type> <name pos:line="2668" pos:column="31">MethodToken</name></decl></param>,
            <comment type="block" pos:line="2669" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2669" pos:column="25">__RPC__out</name> <name pos:line="2669" pos:column="36">ULONG</name> <type:modifier pos:line="2669" pos:column="42">*</type:modifier></type><name pos:line="2669" pos:column="43">pcExprContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2671" pos:column="9">HRESULT</name> <argument_list pos:line="2671" pos:column="17">( <argument pos:line="2671" pos:column="19">STDMETHODCALLTYPE *GetExpressionContextsForMethod</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2671" pos:column="70">(</op:operator> 
            <name pos:line="2672" pos:column="13">IENCDebugInfo</name> <op:operator pos:line="2672" pos:column="27">*</op:operator> <name pos:line="2672" pos:column="29">This</name><op:operator pos:line="2672" pos:column="33">,</op:operator>
            <comment type="block" pos:line="2673" pos:column="13">/* [in] */</comment> <name pos:line="2673" pos:column="24">UINT32</name> <name pos:line="2673" pos:column="31">MethodToken</name><op:operator pos:line="2673" pos:column="42">,</op:operator>
            <comment type="block" pos:line="2674" pos:column="13">/* [in] */</comment> <name pos:line="2674" pos:column="24">ULONG</name> <name pos:line="2674" pos:column="30">cExprContext</name><op:operator pos:line="2674" pos:column="42">,</op:operator>
            <comment type="block" pos:line="2675" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="2675" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="2675" pos:column="67">(<argument pos:line="2675" pos:column="68">cExprContext</argument>, <argument pos:line="2675" pos:column="82">*pceltFetched</argument>)</argument_list></macro> <name pos:line="2675" pos:column="97">ENC_LOCAL_EXPR_CONTEXT</name> <op:operator pos:line="2675" pos:column="120">*</op:operator><name pos:line="2675" pos:column="121">plocalExprContext</name><op:operator pos:line="2675" pos:column="138">,</op:operator>
            <comment type="block" pos:line="2676" pos:column="13">/* [out][in] */</comment> <name pos:line="2676" pos:column="29">__RPC__inout</name> <name pos:line="2676" pos:column="42">ULONG</name> <op:operator pos:line="2676" pos:column="48">*</op:operator><name pos:line="2676" pos:column="49">pceltFetched</name><op:operator pos:line="2676" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="2678" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2679" pos:column="7">IENCDebugInfoVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2681" pos:column="5">interface</name></type> <name pos:line="2681" pos:column="15">IENCDebugInfo</name>
    <argument_list pos:line="2682" pos:column="5">{
        <argument><expr><name pos:line="2683" pos:column="9">CONST_VTBL</name> struct <name pos:line="2683" pos:column="27">IENCDebugInfoVtbl</name> <op:operator pos:line="2683" pos:column="45">*</op:operator><name pos:line="2683" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2688" pos:column="1">#<cpp:directive pos:line="2688" pos:column="2">ifdef</cpp:directive> <name pos:line="2688" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2691" pos:column="1">#<cpp:directive pos:line="2691" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2691" pos:column="9">IENCDebugInfo_QueryInterface</name><parameter_list pos:line="2691" pos:column="37">(<param><type><name pos:line="2691" pos:column="38">This</name></type></param>,<param><type><name pos:line="2691" pos:column="43">riid</name></type></param>,<param><type><name pos:line="2691" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2692" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2694" pos:column="1">#<cpp:directive pos:line="2694" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2694" pos:column="9">IENCDebugInfo_AddRef</name><parameter_list pos:line="2694" pos:column="29">(<param><type><name pos:line="2694" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2695" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2697" pos:column="1">#<cpp:directive pos:line="2697" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2697" pos:column="9">IENCDebugInfo_Release</name><parameter_list pos:line="2697" pos:column="30">(<param><type><name pos:line="2697" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2698" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2701" pos:column="1">#<cpp:directive pos:line="2701" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2701" pos:column="9">IENCDebugInfo_GetLocalVariableCount</name><parameter_list pos:line="2701" pos:column="44">(<param><type><name pos:line="2701" pos:column="45">This</name></type></param>,<param><type><name pos:line="2701" pos:column="50">MethodToken</name></type></param>,<param><type><name pos:line="2701" pos:column="62">pcLocals</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2702" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLocalVariableCount(This,MethodToken,pcLocals) )</cpp:value></cpp:define> 

<cpp:define pos:line="2704" pos:column="1">#<cpp:directive pos:line="2704" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2704" pos:column="9">IENCDebugInfo_GetLocalVariableLayout</name><parameter_list pos:line="2704" pos:column="45">(<param><type><name pos:line="2704" pos:column="46">This</name></type></param>,<param><type><name pos:line="2704" pos:column="51">MethodToken</name></type></param>,<param><type><name pos:line="2704" pos:column="63">cLocals</name></type></param>,<param><type><name pos:line="2704" pos:column="71">rgLocalInfo</name></type></param>,<param><type><name pos:line="2704" pos:column="83">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2705" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLocalVariableLayout(This,MethodToken,cLocals,rgLocalInfo,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="2707" pos:column="1">#<cpp:directive pos:line="2707" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2707" pos:column="9">IENCDebugInfo_GetCountofExpressionContextsForMethod</name><parameter_list pos:line="2707" pos:column="60">(<param><type><name pos:line="2707" pos:column="61">This</name></type></param>,<param><type><name pos:line="2707" pos:column="66">MethodToken</name></type></param>,<param><type><name pos:line="2707" pos:column="78">pcExprContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2708" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCountofExpressionContextsForMethod(This,MethodToken,pcExprContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="2710" pos:column="1">#<cpp:directive pos:line="2710" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2710" pos:column="9">IENCDebugInfo_GetExpressionContextsForMethod</name><parameter_list pos:line="2710" pos:column="53">(<param><type><name pos:line="2710" pos:column="54">This</name></type></param>,<param><type><name pos:line="2710" pos:column="59">MethodToken</name></type></param>,<param><type><name pos:line="2710" pos:column="71">cExprContext</name></type></param>,<param><type><name pos:line="2710" pos:column="84">plocalExprContext</name></type></param>,<param><type><name pos:line="2710" pos:column="102">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2711" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExpressionContextsForMethod(This,MethodToken,cExprContext,plocalExprContext,pceltFetched) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2713" pos:column="1">#<cpp:directive pos:line="2713" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2713" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2716" pos:column="1">#<cpp:directive pos:line="2716" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2716" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2721" pos:column="1">#<cpp:directive pos:line="2721" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2721" pos:column="9">/* __IENCDebugInfo_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="2724" pos:column="1">/* interface __MIDL_itf_enc_0000_0018 */</comment>
<comment type="block" pos:line="2725" pos:column="1">/* [local] */</comment> 


<enum pos:line="2728" pos:column="1">enum <name pos:line="2728" pos:column="6">enum_ENCASINFO</name>
    <block pos:line="2729" pos:column="5">{	<decl><name pos:line="2729" pos:column="9">ENCASINFO_NONE</name>	<init pos:line="2729" pos:column="25">= <expr><lit:literal type="number" pos:line="2729" pos:column="27">0</lit:literal></expr></init></decl><op:operator pos:line="2729" pos:column="28">,</op:operator>
	<decl><name pos:line="2730" pos:column="9">ENCASINFO_LEAF</name>	<init pos:line="2730" pos:column="25">= <expr><lit:literal type="number" pos:line="2730" pos:column="27">0x1</lit:literal></expr></init></decl><op:operator pos:line="2730" pos:column="30">,</op:operator>
	<decl><name pos:line="2731" pos:column="9">ENCASINFO_MIDSTATEMENT</name>	<init pos:line="2731" pos:column="33">= <expr><lit:literal type="number" pos:line="2731" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="2731" pos:column="38">,</op:operator>
	<decl><name pos:line="2732" pos:column="9">ENCASINFO_NONUSER</name>	<init pos:line="2732" pos:column="33">= <expr><lit:literal type="number" pos:line="2732" pos:column="35">0x4</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="2734" pos:column="1">typedef <type><name pos:line="2734" pos:column="9">DWORD</name></type> <name pos:line="2734" pos:column="15">ENCASINFO</name>;</typedef>

<typedef pos:line="2736" pos:column="1">typedef <type><struct pos:line="2736" pos:column="9">struct <name pos:line="2736" pos:column="16">_ASTMT</name>
    <block pos:line="2737" pos:column="5">{<public type="default" pos:line="2737" pos:column="6">
    <decl_stmt><decl><type><name pos:line="2738" pos:column="5">UINT32</name></type> <name pos:line="2738" pos:column="12">id</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2739" pos:column="5">UINT32</name></type> <name pos:line="2739" pos:column="12">methodToken</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2740" pos:column="5">UINT32</name></type> <name pos:line="2740" pos:column="12">methodVersion</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2741" pos:column="5">UINT32</name></type> <name pos:line="2741" pos:column="12">ilOffset</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2742" pos:column="5">UINT32</name></type> <name pos:line="2742" pos:column="12">startLine</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2743" pos:column="5">UINT32</name></type> <name pos:line="2743" pos:column="12">startCol</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2744" pos:column="5">UINT32</name></type> <name pos:line="2744" pos:column="12">endLine</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2745" pos:column="5">UINT32</name></type> <name pos:line="2745" pos:column="12">endCol</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2746" pos:column="5">BSTR</name></type> <name pos:line="2746" pos:column="10">bstrfilename</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2747" pos:column="5">ENCASINFO</name></type> <name pos:line="2747" pos:column="15">encASinfo</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2748" pos:column="5">BOOL</name></type> <name pos:line="2748" pos:column="10">methodUpToDate</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2749" pos:column="5">UINT64</name></type> <name pos:line="2749" pos:column="12">engineInstanceID</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2750" pos:column="5">INT32</name></type> <name pos:line="2750" pos:column="11">delta</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="2751" pos:column="9">ENCPROG_ACTIVE_STATEMENT</name>;</typedef>

<typedef pos:line="2753" pos:column="1">typedef <type><struct pos:line="2753" pos:column="9">struct <name pos:line="2753" pos:column="16">_EXCPTRANGE</name>
    <block pos:line="2754" pos:column="5">{<public type="default" pos:line="2754" pos:column="6">
    <decl_stmt><decl><type><name pos:line="2755" pos:column="5">UINT32</name></type> <name pos:line="2755" pos:column="12">methodToken</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2756" pos:column="5">UINT32</name></type> <name pos:line="2756" pos:column="12">methodVersion</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2757" pos:column="5">UINT32</name></type> <name pos:line="2757" pos:column="12">startLine</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2758" pos:column="5">UINT32</name></type> <name pos:line="2758" pos:column="12">startCol</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2759" pos:column="5">UINT32</name></type> <name pos:line="2759" pos:column="12">endLine</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2760" pos:column="5">UINT32</name></type> <name pos:line="2760" pos:column="12">endCol</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2761" pos:column="5">INT32</name></type> <name pos:line="2761" pos:column="11">delta</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="2762" pos:column="9">ENCPROG_EXCEPTION_RANGE</name>;</typedef>

<typedef pos:line="2764" pos:column="1">typedef <type><struct pos:line="2764" pos:column="9">struct <name pos:line="2764" pos:column="16">_LINEDELTA</name>
    <block pos:line="2765" pos:column="5">{<public type="default" pos:line="2765" pos:column="6">
    <decl_stmt><decl><type><name pos:line="2766" pos:column="5">UINT32</name></type> <name pos:line="2766" pos:column="12">mdMethod</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2767" pos:column="5">INT32</name></type> <name pos:line="2767" pos:column="11">delta</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="2768" pos:column="9">LINEDELTA</name>;</typedef>

<typedef pos:line="2770" pos:column="1">typedef <type><struct pos:line="2770" pos:column="9">struct <name pos:line="2770" pos:column="16">_LINEUPDATE</name>
    <block pos:line="2771" pos:column="5">{<public type="default" pos:line="2771" pos:column="6">
    <decl_stmt><decl><type><name pos:line="2772" pos:column="5">UINT32</name></type> <name pos:line="2772" pos:column="12">line</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2773" pos:column="5">UINT32</name></type> <name pos:line="2773" pos:column="12">updatedLine</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="2774" pos:column="9">LINEUPDATE</name>;</typedef>

<typedef pos:line="2776" pos:column="1">typedef <type><struct pos:line="2776" pos:column="9">struct <name pos:line="2776" pos:column="16">_FILEUPDATE</name>
    <block pos:line="2777" pos:column="5">{<public type="default" pos:line="2777" pos:column="6">
    <decl_stmt><decl><type><name pos:line="2778" pos:column="5">BSTR</name></type> <name pos:line="2778" pos:column="10">bstrFileName</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2779" pos:column="5">LINEUPDATE</name> <type:modifier pos:line="2779" pos:column="16">*</type:modifier></type><name pos:line="2779" pos:column="17">pLineUpdates</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2780" pos:column="5">UINT32</name></type> <name pos:line="2780" pos:column="12">cLineUpdate</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="2781" pos:column="9">FILEUPDATE</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="2785" pos:column="1">extern</specifier> <name pos:line="2785" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="2785" pos:column="22">__MIDL_itf_enc_0000_0018_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="2786" pos:column="1">extern</specifier> <name pos:line="2786" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="2786" pos:column="22">__MIDL_itf_enc_0000_0018_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="2788" pos:column="1">#<cpp:directive pos:line="2788" pos:column="2">ifndef</cpp:directive> <name pos:line="2788" pos:column="9">__IDebugENCSymbolProvider2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2789" pos:column="1">#<cpp:directive pos:line="2789" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2789" pos:column="9">__IDebugENCSymbolProvider2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2791" pos:column="1">/* interface IDebugENCSymbolProvider2 */</comment>
<comment type="block" pos:line="2792" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2795" pos:column="1">EXTERN_C</name> <specifier pos:line="2795" pos:column="10">const</specifier> <name pos:line="2795" pos:column="16">IID</name></type> <name pos:line="2795" pos:column="20">IID_IDebugENCSymbolProvider2</name></decl>;</decl_stmt>

<cpp:if pos:line="2797" pos:column="1">#<cpp:directive pos:line="2797" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2797" pos:column="5">defined</name><argument_list pos:line="2797" pos:column="12">(<argument><expr><name pos:line="2797" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2797" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2797" pos:column="29">!</op:operator><call><name pos:line="2797" pos:column="30">defined</name><argument_list pos:line="2797" pos:column="37">(<argument><expr><name pos:line="2797" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2799" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2799" pos:column="19">(<argument pos:line="2799" pos:column="20">"FF6D3520-E8D9-4e8c-BB75-CFFA7B03C633"</argument>)</argument_list></macro>
    <label><name pos:line="2800" pos:column="5">IDebugENCSymbolProvider2</name> :</label> <expr_stmt><expr pos:line="2800" pos:column="32">public <name pos:line="2800" pos:column="39">IUnknown</name>
    <block pos:line="2801" pos:column="5">{
    <expr pos:line="2802" pos:column="5">public<op:operator pos:line="2802" pos:column="11">:</op:operator>
        virtual <name pos:line="2803" pos:column="17">HRESULT</name> <name pos:line="2803" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2803" pos:column="43">UpdateSymbols2</name><argument_list pos:line="2803" pos:column="57">( 
            <comment type="block" pos:line="2804" pos:column="13">/* [in] */</comment> <argument pos:line="2804" pos:column="24">ULONG32 ulAppDomainID</argument>,
            <comment type="block" pos:line="2805" pos:column="13">/* [in] */</comment> <argument pos:line="2805" pos:column="24">GUID guidModule</argument>,
            <comment type="block" pos:line="2806" pos:column="13">/* [in] */</comment> <argument pos:line="2806" pos:column="24">__RPC__in_opt IStream *pUpdateStream</argument>,
            <comment type="block" pos:line="2807" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="2807" pos:column="44">__RPC__in_ecount_part(cDeltaLines, cDeltaLines) LINEDELTA *pDeltaLines</argument>,
            <comment type="block" pos:line="2808" pos:column="13">/* [in] */</comment> <argument pos:line="2808" pos:column="24">ULONG cDeltaLines</argument>)</argument_list></macro> <op:operator pos:line="2808" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="2808" pos:column="45">0</lit:literal></expr>;
        
        <expr pos:line="2810" pos:column="9">virtual <name pos:line="2810" pos:column="17">HRESULT</name> <name pos:line="2810" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2810" pos:column="43">GetFileLineFromOffset</name><argument_list pos:line="2810" pos:column="64">( 
            <comment type="block" pos:line="2811" pos:column="13">/* [in] */</comment> <argument pos:line="2811" pos:column="24">ULONG32 ulAppDomainID</argument>,
            <comment type="block" pos:line="2812" pos:column="13">/* [in] */</comment> <argument pos:line="2812" pos:column="24">GUID guidModule</argument>,
            <comment type="block" pos:line="2813" pos:column="13">/* [in] */</comment> <argument pos:line="2813" pos:column="24">DWORD mdMethod</argument>,
            <comment type="block" pos:line="2814" pos:column="13">/* [in] */</comment> <argument pos:line="2814" pos:column="24">DWORD dwVersion</argument>,
            <comment type="block" pos:line="2815" pos:column="13">/* [in] */</comment> <argument pos:line="2815" pos:column="24">DWORD dwOffset</argument>,
            <comment type="block" pos:line="2816" pos:column="13">/* [out] */</comment> <argument pos:line="2816" pos:column="25">__RPC__out DWORD *pdwStartLine</argument>,
            <comment type="block" pos:line="2817" pos:column="13">/* [out] */</comment> <argument pos:line="2817" pos:column="25">__RPC__out DWORD *pdwStartCol</argument>,
            <comment type="block" pos:line="2818" pos:column="13">/* [out] */</comment> <argument pos:line="2818" pos:column="25">__RPC__out DWORD *pdwEndLine</argument>,
            <comment type="block" pos:line="2819" pos:column="13">/* [out] */</comment> <argument pos:line="2819" pos:column="25">__RPC__out DWORD *pdwEndCol</argument>,
            <comment type="block" pos:line="2820" pos:column="13">/* [out] */</comment> <argument pos:line="2820" pos:column="25">__RPC__deref_out_opt BSTR *pbstrFileName</argument>,
            <comment type="block" pos:line="2821" pos:column="13">/* [out] */</comment> <argument pos:line="2821" pos:column="25">__RPC__out DWORD *pdwMappedOffset</argument>,
            <comment type="block" pos:line="2822" pos:column="13">/* [out] */</comment> <argument pos:line="2822" pos:column="25">__RPC__out BOOL *pfMethodUpToDate</argument>)</argument_list></macro> <op:operator pos:line="2822" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="2822" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="2824" pos:column="9">virtual <name pos:line="2824" pos:column="17">HRESULT</name> <name pos:line="2824" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2824" pos:column="43">Initialize</name><argument_list pos:line="2824" pos:column="53">( 
            <comment type="block" pos:line="2825" pos:column="13">/* [in] */</comment> <argument pos:line="2825" pos:column="24">ULONG32 ulAppDomainID</argument>,
            <comment type="block" pos:line="2826" pos:column="13">/* [in] */</comment> <argument pos:line="2826" pos:column="24">GUID guidModule</argument>)</argument_list></macro> <op:operator pos:line="2826" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="2826" pos:column="43">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2830" pos:column="1">#<cpp:directive pos:line="2830" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2830" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2832" pos:column="5">typedef <type><struct pos:line="2832" pos:column="13">struct <name pos:line="2832" pos:column="20">IDebugENCSymbolProvider2Vtbl</name>
    <block pos:line="2833" pos:column="5">{<public type="default" pos:line="2833" pos:column="6">
        <function_decl><type><name pos:line="2834" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2836" pos:column="9">HRESULT</name></type> ( <name pos:line="2836" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2836" pos:column="37">*</type:modifier><name pos:line="2836" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2836" pos:column="54">( 
            <param><decl><type><name pos:line="2837" pos:column="13">IDebugENCSymbolProvider2</name> <type:modifier pos:line="2837" pos:column="38">*</type:modifier></type> <name pos:line="2837" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="2838" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2838" pos:column="24">__RPC__in</name> <name pos:line="2838" pos:column="34">REFIID</name></type> <name pos:line="2838" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2839" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2840" pos:column="13">__RPC__deref_out</name>  <name pos:line="2840" pos:column="31">void</name> <type:modifier pos:line="2840" pos:column="36">*</type:modifier><type:modifier pos:line="2840" pos:column="37">*</type:modifier></type><name pos:line="2840" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2842" pos:column="9">ULONG</name></type> ( <name pos:line="2842" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2842" pos:column="35">*</type:modifier><name pos:line="2842" pos:column="36">AddRef</name> )<parameter_list pos:line="2842" pos:column="44">( 
            <param><decl><type><name pos:line="2843" pos:column="13">IDebugENCSymbolProvider2</name> <type:modifier pos:line="2843" pos:column="38">*</type:modifier></type> <name pos:line="2843" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2845" pos:column="9">ULONG</name></type> ( <name pos:line="2845" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2845" pos:column="35">*</type:modifier><name pos:line="2845" pos:column="36">Release</name> )<parameter_list pos:line="2845" pos:column="45">( 
            <param><decl><type><name pos:line="2846" pos:column="13">IDebugENCSymbolProvider2</name> <type:modifier pos:line="2846" pos:column="38">*</type:modifier></type> <name pos:line="2846" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2848" pos:column="9">HRESULT</name> <argument_list pos:line="2848" pos:column="17">( <argument pos:line="2848" pos:column="19">STDMETHODCALLTYPE *UpdateSymbols2</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2848" pos:column="54">(</op:operator> 
            <name pos:line="2849" pos:column="13">IDebugENCSymbolProvider2</name> <op:operator pos:line="2849" pos:column="38">*</op:operator> <name pos:line="2849" pos:column="40">This</name><op:operator pos:line="2849" pos:column="44">,</op:operator>
            <comment type="block" pos:line="2850" pos:column="13">/* [in] */</comment> <name pos:line="2850" pos:column="24">ULONG32</name> <name pos:line="2850" pos:column="32">ulAppDomainID</name><op:operator pos:line="2850" pos:column="45">,</op:operator>
            <comment type="block" pos:line="2851" pos:column="13">/* [in] */</comment> <name pos:line="2851" pos:column="24">GUID</name> <name pos:line="2851" pos:column="29">guidModule</name><op:operator pos:line="2851" pos:column="39">,</op:operator>
            <comment type="block" pos:line="2852" pos:column="13">/* [in] */</comment> <name pos:line="2852" pos:column="24">__RPC__in_opt</name> <name pos:line="2852" pos:column="38">IStream</name> <op:operator pos:line="2852" pos:column="46">*</op:operator><name pos:line="2852" pos:column="47">pUpdateStream</name><op:operator pos:line="2852" pos:column="60">,</op:operator>
            <comment type="block" pos:line="2853" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="2853" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="2853" pos:column="65">(<argument pos:line="2853" pos:column="66">cDeltaLines</argument>, <argument pos:line="2853" pos:column="79">cDeltaLines</argument>)</argument_list></macro> <name pos:line="2853" pos:column="92">LINEDELTA</name> <op:operator pos:line="2853" pos:column="102">*</op:operator><name pos:line="2853" pos:column="103">pDeltaLines</name><op:operator pos:line="2853" pos:column="114">,</op:operator>
            <comment type="block" pos:line="2854" pos:column="13">/* [in] */</comment> <name pos:line="2854" pos:column="24">ULONG</name> <name pos:line="2854" pos:column="30">cDeltaLines</name><op:operator pos:line="2854" pos:column="41">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="2856" pos:column="9">HRESULT</name></type> ( <name pos:line="2856" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2856" pos:column="37">*</type:modifier><name pos:line="2856" pos:column="38">GetFileLineFromOffset</name> )<parameter_list pos:line="2856" pos:column="61">( 
            <param><decl><type><name pos:line="2857" pos:column="13">IDebugENCSymbolProvider2</name> <type:modifier pos:line="2857" pos:column="38">*</type:modifier></type> <name pos:line="2857" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="2858" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2858" pos:column="24">ULONG32</name></type> <name pos:line="2858" pos:column="32">ulAppDomainID</name></decl></param>,
            <comment type="block" pos:line="2859" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2859" pos:column="24">GUID</name></type> <name pos:line="2859" pos:column="29">guidModule</name></decl></param>,
            <comment type="block" pos:line="2860" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2860" pos:column="24">DWORD</name></type> <name pos:line="2860" pos:column="30">mdMethod</name></decl></param>,
            <comment type="block" pos:line="2861" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2861" pos:column="24">DWORD</name></type> <name pos:line="2861" pos:column="30">dwVersion</name></decl></param>,
            <comment type="block" pos:line="2862" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2862" pos:column="24">DWORD</name></type> <name pos:line="2862" pos:column="30">dwOffset</name></decl></param>,
            <comment type="block" pos:line="2863" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2863" pos:column="25">__RPC__out</name> <name pos:line="2863" pos:column="36">DWORD</name> <type:modifier pos:line="2863" pos:column="42">*</type:modifier></type><name pos:line="2863" pos:column="43">pdwStartLine</name></decl></param>,
            <comment type="block" pos:line="2864" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2864" pos:column="25">__RPC__out</name> <name pos:line="2864" pos:column="36">DWORD</name> <type:modifier pos:line="2864" pos:column="42">*</type:modifier></type><name pos:line="2864" pos:column="43">pdwStartCol</name></decl></param>,
            <comment type="block" pos:line="2865" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2865" pos:column="25">__RPC__out</name> <name pos:line="2865" pos:column="36">DWORD</name> <type:modifier pos:line="2865" pos:column="42">*</type:modifier></type><name pos:line="2865" pos:column="43">pdwEndLine</name></decl></param>,
            <comment type="block" pos:line="2866" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2866" pos:column="25">__RPC__out</name> <name pos:line="2866" pos:column="36">DWORD</name> <type:modifier pos:line="2866" pos:column="42">*</type:modifier></type><name pos:line="2866" pos:column="43">pdwEndCol</name></decl></param>,
            <comment type="block" pos:line="2867" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2867" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2867" pos:column="46">BSTR</name> <type:modifier pos:line="2867" pos:column="51">*</type:modifier></type><name pos:line="2867" pos:column="52">pbstrFileName</name></decl></param>,
            <comment type="block" pos:line="2868" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2868" pos:column="25">__RPC__out</name> <name pos:line="2868" pos:column="36">DWORD</name> <type:modifier pos:line="2868" pos:column="42">*</type:modifier></type><name pos:line="2868" pos:column="43">pdwMappedOffset</name></decl></param>,
            <comment type="block" pos:line="2869" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2869" pos:column="25">__RPC__out</name> <name pos:line="2869" pos:column="36">BOOL</name> <type:modifier pos:line="2869" pos:column="41">*</type:modifier></type><name pos:line="2869" pos:column="42">pfMethodUpToDate</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2871" pos:column="9">HRESULT</name></type> ( <name pos:line="2871" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2871" pos:column="37">*</type:modifier><name pos:line="2871" pos:column="38">Initialize</name> )<parameter_list pos:line="2871" pos:column="50">( 
            <param><decl><type><name pos:line="2872" pos:column="13">IDebugENCSymbolProvider2</name> <type:modifier pos:line="2872" pos:column="38">*</type:modifier></type> <name pos:line="2872" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="2873" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2873" pos:column="24">ULONG32</name></type> <name pos:line="2873" pos:column="32">ulAppDomainID</name></decl></param>,
            <comment type="block" pos:line="2874" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2874" pos:column="24">GUID</name></type> <name pos:line="2874" pos:column="29">guidModule</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2876" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2877" pos:column="7">IDebugENCSymbolProvider2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2879" pos:column="5">interface</name></type> <name pos:line="2879" pos:column="15">IDebugENCSymbolProvider2</name>
    <argument_list pos:line="2880" pos:column="5">{
        <argument><expr><name pos:line="2881" pos:column="9">CONST_VTBL</name> struct <name pos:line="2881" pos:column="27">IDebugENCSymbolProvider2Vtbl</name> <op:operator pos:line="2881" pos:column="56">*</op:operator><name pos:line="2881" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2886" pos:column="1">#<cpp:directive pos:line="2886" pos:column="2">ifdef</cpp:directive> <name pos:line="2886" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2889" pos:column="1">#<cpp:directive pos:line="2889" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2889" pos:column="9">IDebugENCSymbolProvider2_QueryInterface</name><parameter_list pos:line="2889" pos:column="48">(<param><type><name pos:line="2889" pos:column="49">This</name></type></param>,<param><type><name pos:line="2889" pos:column="54">riid</name></type></param>,<param><type><name pos:line="2889" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2890" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2892" pos:column="1">#<cpp:directive pos:line="2892" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2892" pos:column="9">IDebugENCSymbolProvider2_AddRef</name><parameter_list pos:line="2892" pos:column="40">(<param><type><name pos:line="2892" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2893" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2895" pos:column="1">#<cpp:directive pos:line="2895" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2895" pos:column="9">IDebugENCSymbolProvider2_Release</name><parameter_list pos:line="2895" pos:column="41">(<param><type><name pos:line="2895" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2896" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2899" pos:column="1">#<cpp:directive pos:line="2899" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2899" pos:column="9">IDebugENCSymbolProvider2_UpdateSymbols2</name><parameter_list pos:line="2899" pos:column="48">(<param><type><name pos:line="2899" pos:column="49">This</name></type></param>,<param><type><name pos:line="2899" pos:column="54">ulAppDomainID</name></type></param>,<param><type><name pos:line="2899" pos:column="68">guidModule</name></type></param>,<param><type><name pos:line="2899" pos:column="79">pUpdateStream</name></type></param>,<param><type><name pos:line="2899" pos:column="93">pDeltaLines</name></type></param>,<param><type><name pos:line="2899" pos:column="105">cDeltaLines</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2900" pos:column="5">( (This)-&gt;lpVtbl -&gt; UpdateSymbols2(This,ulAppDomainID,guidModule,pUpdateStream,pDeltaLines,cDeltaLines) )</cpp:value></cpp:define> 

<cpp:define pos:line="2902" pos:column="1">#<cpp:directive pos:line="2902" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2902" pos:column="9">IDebugENCSymbolProvider2_GetFileLineFromOffset</name><parameter_list pos:line="2902" pos:column="55">(<param><type><name pos:line="2902" pos:column="56">This</name></type></param>,<param><type><name pos:line="2902" pos:column="61">ulAppDomainID</name></type></param>,<param><type><name pos:line="2902" pos:column="75">guidModule</name></type></param>,<param><type><name pos:line="2902" pos:column="86">mdMethod</name></type></param>,<param><type><name pos:line="2902" pos:column="95">dwVersion</name></type></param>,<param><type><name pos:line="2902" pos:column="105">dwOffset</name></type></param>,<param><type><name pos:line="2902" pos:column="114">pdwStartLine</name></type></param>,<param><type><name pos:line="2902" pos:column="127">pdwStartCol</name></type></param>,<param><type><name pos:line="2902" pos:column="139">pdwEndLine</name></type></param>,<param><type><name pos:line="2902" pos:column="150">pdwEndCol</name></type></param>,<param><type><name pos:line="2902" pos:column="160">pbstrFileName</name></type></param>,<param><type><name pos:line="2902" pos:column="174">pdwMappedOffset</name></type></param>,<param><type><name pos:line="2902" pos:column="190">pfMethodUpToDate</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2903" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFileLineFromOffset(This,ulAppDomainID,guidModule,mdMethod,dwVersion,dwOffset,pdwStartLine,pdwStartCol,pdwEndLine,pdwEndCol,pbstrFileName,pdwMappedOffset,pfMethodUpToDate) )</cpp:value></cpp:define> 

<cpp:define pos:line="2905" pos:column="1">#<cpp:directive pos:line="2905" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2905" pos:column="9">IDebugENCSymbolProvider2_Initialize</name><parameter_list pos:line="2905" pos:column="44">(<param><type><name pos:line="2905" pos:column="45">This</name></type></param>,<param><type><name pos:line="2905" pos:column="50">ulAppDomainID</name></type></param>,<param><type><name pos:line="2905" pos:column="64">guidModule</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2906" pos:column="5">( (This)-&gt;lpVtbl -&gt; Initialize(This,ulAppDomainID,guidModule) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2908" pos:column="1">#<cpp:directive pos:line="2908" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2908" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2911" pos:column="1">#<cpp:directive pos:line="2911" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2911" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2916" pos:column="1">#<cpp:directive pos:line="2916" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2916" pos:column="9">/* __IDebugENCSymbolProvider2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2919" pos:column="1">#<cpp:directive pos:line="2919" pos:column="2">ifndef</cpp:directive> <name pos:line="2919" pos:column="9">__IDebugENCModule_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2920" pos:column="1">#<cpp:directive pos:line="2920" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2920" pos:column="9">__IDebugENCModule_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2922" pos:column="1">/* interface IDebugENCModule */</comment>
<comment type="block" pos:line="2923" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2926" pos:column="1">EXTERN_C</name> <specifier pos:line="2926" pos:column="10">const</specifier> <name pos:line="2926" pos:column="16">IID</name></type> <name pos:line="2926" pos:column="20">IID_IDebugENCModule</name></decl>;</decl_stmt>

<cpp:if pos:line="2928" pos:column="1">#<cpp:directive pos:line="2928" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2928" pos:column="5">defined</name><argument_list pos:line="2928" pos:column="12">(<argument><expr><name pos:line="2928" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2928" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2928" pos:column="29">!</op:operator><call><name pos:line="2928" pos:column="30">defined</name><argument_list pos:line="2928" pos:column="37">(<argument><expr><name pos:line="2928" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2930" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2930" pos:column="19">(<argument pos:line="2930" pos:column="20">"95B8097D-3201-4b21-887C-239EE0A0D589"</argument>)</argument_list></macro>
    <label><name pos:line="2931" pos:column="5">IDebugENCModule</name> :</label> <expr_stmt><expr pos:line="2931" pos:column="23">public <name pos:line="2931" pos:column="30">IUnknown</name>
    <block pos:line="2932" pos:column="5">{
    <expr pos:line="2933" pos:column="5">public<op:operator pos:line="2933" pos:column="11">:</op:operator>
        virtual <name pos:line="2934" pos:column="17">HRESULT</name> <name pos:line="2934" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2934" pos:column="43">GetActiveStatementCount</name><argument_list pos:line="2934" pos:column="66">( 
            <comment type="block" pos:line="2935" pos:column="13">/* [out] */</comment> <argument pos:line="2935" pos:column="25">__RPC__out ULONG *cActiveStatements</argument>)</argument_list></macro> <op:operator pos:line="2935" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="2935" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="2937" pos:column="9">virtual <name pos:line="2937" pos:column="17">HRESULT</name> <name pos:line="2937" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2937" pos:column="43">GetActiveStatements</name><argument_list pos:line="2937" pos:column="62">( 
            <comment type="block" pos:line="2938" pos:column="13">/* [in] */</comment> <argument pos:line="2938" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="2939" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="2939" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) ENCPROG_ACTIVE_STATEMENT *rgelt</argument>,
            <comment type="block" pos:line="2940" pos:column="13">/* [out][in] */</comment> <argument pos:line="2940" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="2940" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="2940" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="2942" pos:column="9">virtual <name pos:line="2942" pos:column="17">HRESULT</name> <name pos:line="2942" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2942" pos:column="43">GetMetadataByteCount</name><argument_list pos:line="2942" pos:column="63">( 
            <comment type="block" pos:line="2943" pos:column="13">/* [out] */</comment> <argument pos:line="2943" pos:column="25">__RPC__out ULONG *cb</argument>)</argument_list></macro> <op:operator pos:line="2943" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="2943" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="2945" pos:column="9">virtual <name pos:line="2945" pos:column="17">HRESULT</name> <name pos:line="2945" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2945" pos:column="43">GetMetadataBytes</name><argument_list pos:line="2945" pos:column="59">( 
            <comment type="block" pos:line="2946" pos:column="13">/* [in] */</comment> <argument pos:line="2946" pos:column="24">ULONG cb</argument>,
            <comment type="block" pos:line="2947" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="2947" pos:column="45">__RPC__out_ecount_part(cb, *cbFetched) BYTE *pbMetadata</argument>,
            <comment type="block" pos:line="2948" pos:column="13">/* [out][in] */</comment> <argument pos:line="2948" pos:column="29">__RPC__inout ULONG *cbFetched</argument>)</argument_list></macro> <op:operator pos:line="2948" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="2948" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="2950" pos:column="9">virtual <name pos:line="2950" pos:column="17">HRESULT</name> <name pos:line="2950" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2950" pos:column="43">GetENCDebugInfo</name><argument_list pos:line="2950" pos:column="58">( 
            <comment type="block" pos:line="2951" pos:column="13">/* [out] */</comment> <argument pos:line="2951" pos:column="25">__RPC__deref_out_opt IENCDebugInfo **ppENCDebugInfo</argument>)</argument_list></macro> <op:operator pos:line="2951" pos:column="78">=</op:operator> <lit:literal type="number" pos:line="2951" pos:column="80">0</lit:literal></expr>;
        
        <expr pos:line="2953" pos:column="9">virtual <name pos:line="2953" pos:column="17">HRESULT</name> <name pos:line="2953" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2953" pos:column="43">ApplyENCUpdate</name><argument_list pos:line="2953" pos:column="57">( 
            <comment type="block" pos:line="2954" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="2954" pos:column="33">__RPC__in_ecount_full(cbDeltaIL) BYTE *pbDeltaIL</argument>,
            <comment type="block" pos:line="2955" pos:column="13">/* [in] */</comment> <argument pos:line="2955" pos:column="24">ULONG cbDeltaIL</argument>,
            <comment type="block" pos:line="2956" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="2956" pos:column="33">__RPC__in_ecount_full(cbDeltaMeta) BYTE *pbDeltaMeta</argument>,
            <comment type="block" pos:line="2957" pos:column="13">/* [in] */</comment> <argument pos:line="2957" pos:column="24">ULONG cbDeltaMeta</argument>,
            <comment type="block" pos:line="2958" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="2958" pos:column="33">__RPC__in_ecount_full(cbDeltaPdb) BYTE *pbDeltaPdb</argument>,
            <comment type="block" pos:line="2959" pos:column="13">/* [in] */</comment> <argument pos:line="2959" pos:column="24">ULONG cbDeltaPdb</argument>,
            <comment type="block" pos:line="2960" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="2960" pos:column="33">__RPC__in_ecount_full(cDeltaLines) LINEDELTA *pDeltaLines</argument>,
            <comment type="block" pos:line="2961" pos:column="13">/* [in] */</comment> <argument pos:line="2961" pos:column="24">ULONG cDeltaLines</argument>,
            <comment type="block" pos:line="2962" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="2962" pos:column="33">__RPC__in_ecount_full(cRemapStatements) ENCPROG_ACTIVE_STATEMENT *pRemapStatements</argument>,
            <comment type="block" pos:line="2963" pos:column="13">/* [in] */</comment> <argument pos:line="2963" pos:column="24">ULONG cRemapStatements</argument>,
            <comment type="block" pos:line="2964" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="2964" pos:column="33">__RPC__in_ecount_full(cExceptionRanges) ENCPROG_EXCEPTION_RANGE *pExceptionRanges</argument>,
            <comment type="block" pos:line="2965" pos:column="13">/* [in] */</comment> <argument pos:line="2965" pos:column="24">ULONG cExceptionRanges</argument>,
            <comment type="block" pos:line="2966" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="2966" pos:column="33">__RPC__in_ecount_full(cRemapMethods) UINT32 *pmdRemapMethods</argument>,
            <comment type="block" pos:line="2967" pos:column="13">/* [in] */</comment> <argument pos:line="2967" pos:column="24">ULONG cRemapMethods</argument>,
            <comment type="block" pos:line="2968" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="2968" pos:column="33">__RPC__in_ecount_full(cFileUpdates) FILEUPDATE *pFileUpdates</argument>,
            <comment type="block" pos:line="2969" pos:column="13">/* [in] */</comment> <argument pos:line="2969" pos:column="24">ULONG32 cFileUpdates</argument>)</argument_list></macro> <op:operator pos:line="2969" pos:column="46">=</op:operator> <lit:literal type="number" pos:line="2969" pos:column="48">0</lit:literal></expr>;
        
        <expr pos:line="2971" pos:column="9">virtual <name pos:line="2971" pos:column="17">HRESULT</name> <name pos:line="2971" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="2971" pos:column="43">Initialize</name><argument_list pos:line="2971" pos:column="53">( <argument><expr><name pos:line="2971" pos:column="55">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="2971" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="2971" pos:column="63">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2975" pos:column="1">#<cpp:directive pos:line="2975" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2975" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2977" pos:column="5">typedef <type><struct pos:line="2977" pos:column="13">struct <name pos:line="2977" pos:column="20">IDebugENCModuleVtbl</name>
    <block pos:line="2978" pos:column="5">{<public type="default" pos:line="2978" pos:column="6">
        <function_decl><type><name pos:line="2979" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2981" pos:column="9">HRESULT</name></type> ( <name pos:line="2981" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2981" pos:column="37">*</type:modifier><name pos:line="2981" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2981" pos:column="54">( 
            <param><decl><type><name pos:line="2982" pos:column="13">IDebugENCModule</name> <type:modifier pos:line="2982" pos:column="29">*</type:modifier></type> <name pos:line="2982" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="2983" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2983" pos:column="24">__RPC__in</name> <name pos:line="2983" pos:column="34">REFIID</name></type> <name pos:line="2983" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2984" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2985" pos:column="13">__RPC__deref_out</name>  <name pos:line="2985" pos:column="31">void</name> <type:modifier pos:line="2985" pos:column="36">*</type:modifier><type:modifier pos:line="2985" pos:column="37">*</type:modifier></type><name pos:line="2985" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2987" pos:column="9">ULONG</name></type> ( <name pos:line="2987" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2987" pos:column="35">*</type:modifier><name pos:line="2987" pos:column="36">AddRef</name> )<parameter_list pos:line="2987" pos:column="44">( 
            <param><decl><type><name pos:line="2988" pos:column="13">IDebugENCModule</name> <type:modifier pos:line="2988" pos:column="29">*</type:modifier></type> <name pos:line="2988" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2990" pos:column="9">ULONG</name></type> ( <name pos:line="2990" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2990" pos:column="35">*</type:modifier><name pos:line="2990" pos:column="36">Release</name> )<parameter_list pos:line="2990" pos:column="45">( 
            <param><decl><type><name pos:line="2991" pos:column="13">IDebugENCModule</name> <type:modifier pos:line="2991" pos:column="29">*</type:modifier></type> <name pos:line="2991" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2993" pos:column="9">HRESULT</name></type> ( <name pos:line="2993" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2993" pos:column="37">*</type:modifier><name pos:line="2993" pos:column="38">GetActiveStatementCount</name> )<parameter_list pos:line="2993" pos:column="63">( 
            <param><decl><type><name pos:line="2994" pos:column="13">IDebugENCModule</name> <type:modifier pos:line="2994" pos:column="29">*</type:modifier></type> <name pos:line="2994" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="2995" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2995" pos:column="25">__RPC__out</name> <name pos:line="2995" pos:column="36">ULONG</name> <type:modifier pos:line="2995" pos:column="42">*</type:modifier></type><name pos:line="2995" pos:column="43">cActiveStatements</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2997" pos:column="9">HRESULT</name> <argument_list pos:line="2997" pos:column="17">( <argument pos:line="2997" pos:column="19">STDMETHODCALLTYPE *GetActiveStatements</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2997" pos:column="59">(</op:operator> 
            <name pos:line="2998" pos:column="13">IDebugENCModule</name> <op:operator pos:line="2998" pos:column="29">*</op:operator> <name pos:line="2998" pos:column="31">This</name><op:operator pos:line="2998" pos:column="35">,</op:operator>
            <comment type="block" pos:line="2999" pos:column="13">/* [in] */</comment> <name pos:line="2999" pos:column="24">ULONG</name> <name pos:line="2999" pos:column="30">celt</name><op:operator pos:line="2999" pos:column="34">,</op:operator>
            <comment type="block" pos:line="3000" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="3000" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="3000" pos:column="67">(<argument pos:line="3000" pos:column="68">celt</argument>, <argument pos:line="3000" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="3000" pos:column="89">ENCPROG_ACTIVE_STATEMENT</name> <op:operator pos:line="3000" pos:column="114">*</op:operator><name pos:line="3000" pos:column="115">rgelt</name><op:operator pos:line="3000" pos:column="120">,</op:operator>
            <comment type="block" pos:line="3001" pos:column="13">/* [out][in] */</comment> <name pos:line="3001" pos:column="29">__RPC__inout</name> <name pos:line="3001" pos:column="42">ULONG</name> <op:operator pos:line="3001" pos:column="48">*</op:operator><name pos:line="3001" pos:column="49">pceltFetched</name><op:operator pos:line="3001" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3003" pos:column="9">HRESULT</name></type> ( <name pos:line="3003" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3003" pos:column="37">*</type:modifier><name pos:line="3003" pos:column="38">GetMetadataByteCount</name> )<parameter_list pos:line="3003" pos:column="60">( 
            <param><decl><type><name pos:line="3004" pos:column="13">IDebugENCModule</name> <type:modifier pos:line="3004" pos:column="29">*</type:modifier></type> <name pos:line="3004" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="3005" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3005" pos:column="25">__RPC__out</name> <name pos:line="3005" pos:column="36">ULONG</name> <type:modifier pos:line="3005" pos:column="42">*</type:modifier></type><name pos:line="3005" pos:column="43">cb</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3007" pos:column="9">HRESULT</name> <argument_list pos:line="3007" pos:column="17">( <argument pos:line="3007" pos:column="19">STDMETHODCALLTYPE *GetMetadataBytes</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3007" pos:column="56">(</op:operator> 
            <name pos:line="3008" pos:column="13">IDebugENCModule</name> <op:operator pos:line="3008" pos:column="29">*</op:operator> <name pos:line="3008" pos:column="31">This</name><op:operator pos:line="3008" pos:column="35">,</op:operator>
            <comment type="block" pos:line="3009" pos:column="13">/* [in] */</comment> <name pos:line="3009" pos:column="24">ULONG</name> <name pos:line="3009" pos:column="30">cb</name><op:operator pos:line="3009" pos:column="32">,</op:operator>
            <comment type="block" pos:line="3010" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="3010" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="3010" pos:column="67">(<argument pos:line="3010" pos:column="68">cb</argument>, <argument pos:line="3010" pos:column="72">*cbFetched</argument>)</argument_list></macro> <name pos:line="3010" pos:column="84">BYTE</name> <op:operator pos:line="3010" pos:column="89">*</op:operator><name pos:line="3010" pos:column="90">pbMetadata</name><op:operator pos:line="3010" pos:column="100">,</op:operator>
            <comment type="block" pos:line="3011" pos:column="13">/* [out][in] */</comment> <name pos:line="3011" pos:column="29">__RPC__inout</name> <name pos:line="3011" pos:column="42">ULONG</name> <op:operator pos:line="3011" pos:column="48">*</op:operator><name pos:line="3011" pos:column="49">cbFetched</name><op:operator pos:line="3011" pos:column="58">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3013" pos:column="9">HRESULT</name></type> ( <name pos:line="3013" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3013" pos:column="37">*</type:modifier><name pos:line="3013" pos:column="38">GetENCDebugInfo</name> )<parameter_list pos:line="3013" pos:column="55">( 
            <param><decl><type><name pos:line="3014" pos:column="13">IDebugENCModule</name> <type:modifier pos:line="3014" pos:column="29">*</type:modifier></type> <name pos:line="3014" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="3015" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3015" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3015" pos:column="46">IENCDebugInfo</name> <type:modifier pos:line="3015" pos:column="60">*</type:modifier><type:modifier pos:line="3015" pos:column="61">*</type:modifier></type><name pos:line="3015" pos:column="62">ppENCDebugInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3017" pos:column="9">HRESULT</name> <argument_list pos:line="3017" pos:column="17">( <argument pos:line="3017" pos:column="19">STDMETHODCALLTYPE *ApplyENCUpdate</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3017" pos:column="54">(</op:operator> 
            <name pos:line="3018" pos:column="13">IDebugENCModule</name> <op:operator pos:line="3018" pos:column="29">*</op:operator> <name pos:line="3018" pos:column="31">This</name><op:operator pos:line="3018" pos:column="35">,</op:operator>
            <comment type="block" pos:line="3019" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3019" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3019" pos:column="54">(<argument pos:line="3019" pos:column="55">cbDeltaIL</argument>)</argument_list></macro> <name pos:line="3019" pos:column="66">BYTE</name> <op:operator pos:line="3019" pos:column="71">*</op:operator><name pos:line="3019" pos:column="72">pbDeltaIL</name><op:operator pos:line="3019" pos:column="81">,</op:operator>
            <comment type="block" pos:line="3020" pos:column="13">/* [in] */</comment> <name pos:line="3020" pos:column="24">ULONG</name> <name pos:line="3020" pos:column="30">cbDeltaIL</name><op:operator pos:line="3020" pos:column="39">,</op:operator>
            <comment type="block" pos:line="3021" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3021" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3021" pos:column="54">(<argument pos:line="3021" pos:column="55">cbDeltaMeta</argument>)</argument_list></macro> <name pos:line="3021" pos:column="68">BYTE</name> <op:operator pos:line="3021" pos:column="73">*</op:operator><name pos:line="3021" pos:column="74">pbDeltaMeta</name><op:operator pos:line="3021" pos:column="85">,</op:operator>
            <comment type="block" pos:line="3022" pos:column="13">/* [in] */</comment> <name pos:line="3022" pos:column="24">ULONG</name> <name pos:line="3022" pos:column="30">cbDeltaMeta</name><op:operator pos:line="3022" pos:column="41">,</op:operator>
            <comment type="block" pos:line="3023" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3023" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3023" pos:column="54">(<argument pos:line="3023" pos:column="55">cbDeltaPdb</argument>)</argument_list></macro> <name pos:line="3023" pos:column="67">BYTE</name> <op:operator pos:line="3023" pos:column="72">*</op:operator><name pos:line="3023" pos:column="73">pbDeltaPdb</name><op:operator pos:line="3023" pos:column="83">,</op:operator>
            <comment type="block" pos:line="3024" pos:column="13">/* [in] */</comment> <name pos:line="3024" pos:column="24">ULONG</name> <name pos:line="3024" pos:column="30">cbDeltaPdb</name><op:operator pos:line="3024" pos:column="40">,</op:operator>
            <comment type="block" pos:line="3025" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3025" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3025" pos:column="54">(<argument pos:line="3025" pos:column="55">cDeltaLines</argument>)</argument_list></macro> <name pos:line="3025" pos:column="68">LINEDELTA</name> <op:operator pos:line="3025" pos:column="78">*</op:operator><name pos:line="3025" pos:column="79">pDeltaLines</name><op:operator pos:line="3025" pos:column="90">,</op:operator>
            <comment type="block" pos:line="3026" pos:column="13">/* [in] */</comment> <name pos:line="3026" pos:column="24">ULONG</name> <name pos:line="3026" pos:column="30">cDeltaLines</name><op:operator pos:line="3026" pos:column="41">,</op:operator>
            <comment type="block" pos:line="3027" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3027" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3027" pos:column="54">(<argument pos:line="3027" pos:column="55">cRemapStatements</argument>)</argument_list></macro> <name pos:line="3027" pos:column="73">ENCPROG_ACTIVE_STATEMENT</name> <op:operator pos:line="3027" pos:column="98">*</op:operator><name pos:line="3027" pos:column="99">pRemapStatements</name><op:operator pos:line="3027" pos:column="115">,</op:operator>
            <comment type="block" pos:line="3028" pos:column="13">/* [in] */</comment> <name pos:line="3028" pos:column="24">ULONG</name> <name pos:line="3028" pos:column="30">cRemapStatements</name><op:operator pos:line="3028" pos:column="46">,</op:operator>
            <comment type="block" pos:line="3029" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3029" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3029" pos:column="54">(<argument pos:line="3029" pos:column="55">cExceptionRanges</argument>)</argument_list></macro> <name pos:line="3029" pos:column="73">ENCPROG_EXCEPTION_RANGE</name> <op:operator pos:line="3029" pos:column="97">*</op:operator><name pos:line="3029" pos:column="98">pExceptionRanges</name><op:operator pos:line="3029" pos:column="114">,</op:operator>
            <comment type="block" pos:line="3030" pos:column="13">/* [in] */</comment> <name pos:line="3030" pos:column="24">ULONG</name> <name pos:line="3030" pos:column="30">cExceptionRanges</name><op:operator pos:line="3030" pos:column="46">,</op:operator>
            <comment type="block" pos:line="3031" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3031" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3031" pos:column="54">(<argument pos:line="3031" pos:column="55">cRemapMethods</argument>)</argument_list></macro> <name pos:line="3031" pos:column="70">UINT32</name> <op:operator pos:line="3031" pos:column="77">*</op:operator><name pos:line="3031" pos:column="78">pmdRemapMethods</name><op:operator pos:line="3031" pos:column="93">,</op:operator>
            <comment type="block" pos:line="3032" pos:column="13">/* [in] */</comment> <name pos:line="3032" pos:column="24">ULONG</name> <name pos:line="3032" pos:column="30">cRemapMethods</name><op:operator pos:line="3032" pos:column="43">,</op:operator>
            <comment type="block" pos:line="3033" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3033" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3033" pos:column="54">(<argument pos:line="3033" pos:column="55">cFileUpdates</argument>)</argument_list></macro> <name pos:line="3033" pos:column="69">FILEUPDATE</name> <op:operator pos:line="3033" pos:column="80">*</op:operator><name pos:line="3033" pos:column="81">pFileUpdates</name><op:operator pos:line="3033" pos:column="93">,</op:operator>
            <comment type="block" pos:line="3034" pos:column="13">/* [in] */</comment> <name pos:line="3034" pos:column="24">ULONG32</name> <name pos:line="3034" pos:column="32">cFileUpdates</name><op:operator pos:line="3034" pos:column="44">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3036" pos:column="9">HRESULT</name></type> ( <name pos:line="3036" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3036" pos:column="37">*</type:modifier><name pos:line="3036" pos:column="38">Initialize</name> )<parameter_list pos:line="3036" pos:column="50">( 
            <param><decl><type><name pos:line="3037" pos:column="13">IDebugENCModule</name> <type:modifier pos:line="3037" pos:column="29">*</type:modifier></type> <name pos:line="3037" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3039" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3040" pos:column="7">IDebugENCModuleVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3042" pos:column="5">interface</name></type> <name pos:line="3042" pos:column="15">IDebugENCModule</name>
    <argument_list pos:line="3043" pos:column="5">{
        <argument><expr><name pos:line="3044" pos:column="9">CONST_VTBL</name> struct <name pos:line="3044" pos:column="27">IDebugENCModuleVtbl</name> <op:operator pos:line="3044" pos:column="47">*</op:operator><name pos:line="3044" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3049" pos:column="1">#<cpp:directive pos:line="3049" pos:column="2">ifdef</cpp:directive> <name pos:line="3049" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3052" pos:column="1">#<cpp:directive pos:line="3052" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3052" pos:column="9">IDebugENCModule_QueryInterface</name><parameter_list pos:line="3052" pos:column="39">(<param><type><name pos:line="3052" pos:column="40">This</name></type></param>,<param><type><name pos:line="3052" pos:column="45">riid</name></type></param>,<param><type><name pos:line="3052" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3053" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3055" pos:column="1">#<cpp:directive pos:line="3055" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3055" pos:column="9">IDebugENCModule_AddRef</name><parameter_list pos:line="3055" pos:column="31">(<param><type><name pos:line="3055" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3056" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3058" pos:column="1">#<cpp:directive pos:line="3058" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3058" pos:column="9">IDebugENCModule_Release</name><parameter_list pos:line="3058" pos:column="32">(<param><type><name pos:line="3058" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3059" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3062" pos:column="1">#<cpp:directive pos:line="3062" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3062" pos:column="9">IDebugENCModule_GetActiveStatementCount</name><parameter_list pos:line="3062" pos:column="48">(<param><type><name pos:line="3062" pos:column="49">This</name></type></param>,<param><type><name pos:line="3062" pos:column="54">cActiveStatements</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3063" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetActiveStatementCount(This,cActiveStatements) )</cpp:value></cpp:define> 

<cpp:define pos:line="3065" pos:column="1">#<cpp:directive pos:line="3065" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3065" pos:column="9">IDebugENCModule_GetActiveStatements</name><parameter_list pos:line="3065" pos:column="44">(<param><type><name pos:line="3065" pos:column="45">This</name></type></param>,<param><type><name pos:line="3065" pos:column="50">celt</name></type></param>,<param><type><name pos:line="3065" pos:column="55">rgelt</name></type></param>,<param><type><name pos:line="3065" pos:column="61">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3066" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetActiveStatements(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="3068" pos:column="1">#<cpp:directive pos:line="3068" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3068" pos:column="9">IDebugENCModule_GetMetadataByteCount</name><parameter_list pos:line="3068" pos:column="45">(<param><type><name pos:line="3068" pos:column="46">This</name></type></param>,<param><type><name pos:line="3068" pos:column="51">cb</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3069" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMetadataByteCount(This,cb) )</cpp:value></cpp:define> 

<cpp:define pos:line="3071" pos:column="1">#<cpp:directive pos:line="3071" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3071" pos:column="9">IDebugENCModule_GetMetadataBytes</name><parameter_list pos:line="3071" pos:column="41">(<param><type><name pos:line="3071" pos:column="42">This</name></type></param>,<param><type><name pos:line="3071" pos:column="47">cb</name></type></param>,<param><type><name pos:line="3071" pos:column="50">pbMetadata</name></type></param>,<param><type><name pos:line="3071" pos:column="61">cbFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3072" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMetadataBytes(This,cb,pbMetadata,cbFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="3074" pos:column="1">#<cpp:directive pos:line="3074" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3074" pos:column="9">IDebugENCModule_GetENCDebugInfo</name><parameter_list pos:line="3074" pos:column="40">(<param><type><name pos:line="3074" pos:column="41">This</name></type></param>,<param><type><name pos:line="3074" pos:column="46">ppENCDebugInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3075" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetENCDebugInfo(This,ppENCDebugInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="3077" pos:column="1">#<cpp:directive pos:line="3077" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3077" pos:column="9">IDebugENCModule_ApplyENCUpdate</name><parameter_list pos:line="3077" pos:column="39">(<param><type><name pos:line="3077" pos:column="40">This</name></type></param>,<param><type><name pos:line="3077" pos:column="45">pbDeltaIL</name></type></param>,<param><type><name pos:line="3077" pos:column="55">cbDeltaIL</name></type></param>,<param><type><name pos:line="3077" pos:column="65">pbDeltaMeta</name></type></param>,<param><type><name pos:line="3077" pos:column="77">cbDeltaMeta</name></type></param>,<param><type><name pos:line="3077" pos:column="89">pbDeltaPdb</name></type></param>,<param><type><name pos:line="3077" pos:column="100">cbDeltaPdb</name></type></param>,<param><type><name pos:line="3077" pos:column="111">pDeltaLines</name></type></param>,<param><type><name pos:line="3077" pos:column="123">cDeltaLines</name></type></param>,<param><type><name pos:line="3077" pos:column="135">pRemapStatements</name></type></param>,<param><type><name pos:line="3077" pos:column="152">cRemapStatements</name></type></param>,<param><type><name pos:line="3077" pos:column="169">pExceptionRanges</name></type></param>,<param><type><name pos:line="3077" pos:column="186">cExceptionRanges</name></type></param>,<param><type><name pos:line="3077" pos:column="203">pmdRemapMethods</name></type></param>,<param><type><name pos:line="3077" pos:column="219">cRemapMethods</name></type></param>,<param><type><name pos:line="3077" pos:column="233">pFileUpdates</name></type></param>,<param><type><name pos:line="3077" pos:column="246">cFileUpdates</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3078" pos:column="5">( (This)-&gt;lpVtbl -&gt; ApplyENCUpdate(This,pbDeltaIL,cbDeltaIL,pbDeltaMeta,cbDeltaMeta,pbDeltaPdb,cbDeltaPdb,pDeltaLines,cDeltaLines,pRemapStatements,cRemapStatements,pExceptionRanges,cExceptionRanges,pmdRemapMethods,cRemapMethods,pFileUpdates,cFileUpdates) )</cpp:value></cpp:define> 

<cpp:define pos:line="3080" pos:column="1">#<cpp:directive pos:line="3080" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3080" pos:column="9">IDebugENCModule_Initialize</name><parameter_list pos:line="3080" pos:column="35">(<param><type><name pos:line="3080" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3081" pos:column="5">( (This)-&gt;lpVtbl -&gt; Initialize(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3083" pos:column="1">#<cpp:directive pos:line="3083" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3083" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3086" pos:column="1">#<cpp:directive pos:line="3086" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3086" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3091" pos:column="1">#<cpp:directive pos:line="3091" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3091" pos:column="9">/* __IDebugENCModule_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3094" pos:column="1">#<cpp:directive pos:line="3094" pos:column="2">ifndef</cpp:directive> <name pos:line="3094" pos:column="9">__IDebugCustomENCModule100_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3095" pos:column="1">#<cpp:directive pos:line="3095" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3095" pos:column="9">__IDebugCustomENCModule100_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3097" pos:column="1">/* interface IDebugCustomENCModule100 */</comment>
<comment type="block" pos:line="3098" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3101" pos:column="1">EXTERN_C</name> <specifier pos:line="3101" pos:column="10">const</specifier> <name pos:line="3101" pos:column="16">IID</name></type> <name pos:line="3101" pos:column="20">IID_IDebugCustomENCModule100</name></decl>;</decl_stmt>

<cpp:if pos:line="3103" pos:column="1">#<cpp:directive pos:line="3103" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3103" pos:column="5">defined</name><argument_list pos:line="3103" pos:column="12">(<argument><expr><name pos:line="3103" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3103" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3103" pos:column="29">!</op:operator><call><name pos:line="3103" pos:column="30">defined</name><argument_list pos:line="3103" pos:column="37">(<argument><expr><name pos:line="3103" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3105" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3105" pos:column="19">(<argument pos:line="3105" pos:column="20">"A39A3DDD-AF4D-48FA-BC0D-7AFD3FCDEE9B"</argument>)</argument_list></macro>
    <label><name pos:line="3106" pos:column="5">IDebugCustomENCModule100</name> :</label> <expr_stmt><expr pos:line="3106" pos:column="32">public <name pos:line="3106" pos:column="39">IUnknown</name>
    <block pos:line="3107" pos:column="5">{
    <expr pos:line="3108" pos:column="5">public<op:operator pos:line="3108" pos:column="11">:</op:operator>
        virtual <name pos:line="3109" pos:column="17">HRESULT</name> <name pos:line="3109" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3109" pos:column="43">GetEmptyDelta</name><argument_list pos:line="3109" pos:column="56">( 
            <comment type="block" pos:line="3110" pos:column="13">/* [out] */</comment> <argument pos:line="3110" pos:column="25">__RPC__deref_out_opt IUnknown **uninitializedDelta</argument>)</argument_list></macro> <op:operator pos:line="3110" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="3110" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="3112" pos:column="9">virtual <name pos:line="3112" pos:column="17">HRESULT</name> <name pos:line="3112" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3112" pos:column="43">GetRemapMethodCount</name><argument_list pos:line="3112" pos:column="62">( 
            <comment type="block" pos:line="3113" pos:column="13">/* [out] */</comment> <argument pos:line="3113" pos:column="25">__RPC__out ULONG *cb</argument>)</argument_list></macro> <op:operator pos:line="3113" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="3113" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="3115" pos:column="9">virtual <name pos:line="3115" pos:column="17">HRESULT</name> <name pos:line="3115" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3115" pos:column="43">GetDeltaForApply</name><argument_list pos:line="3115" pos:column="59">( 
            <comment type="block" pos:line="3116" pos:column="13">/* [out] */</comment> <argument pos:line="3116" pos:column="25">__RPC__deref_out_opt IUnknown **ppAbstractDelta</argument>,
            <comment type="block" pos:line="3117" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="3117" pos:column="45">__RPC__out_ecount_part(cRemapMethods, cRemapMethods) UINT32 *pmdRemapMethods</argument>,
            <comment type="block" pos:line="3118" pos:column="13">/* [in] */</comment> <argument pos:line="3118" pos:column="24">ULONG cRemapMethods</argument>)</argument_list></macro> <op:operator pos:line="3118" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="3118" pos:column="47">0</lit:literal></expr>;
        
        <expr pos:line="3120" pos:column="9">virtual <name pos:line="3120" pos:column="17">HRESULT</name> <name pos:line="3120" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3120" pos:column="43">Apply</name><argument_list pos:line="3120" pos:column="48">( 
            <comment type="block" pos:line="3121" pos:column="13">/* [in] */</comment> <argument pos:line="3121" pos:column="24">__RPC__in_opt IUnknown *pAbstractDelta</argument>,
            <comment type="block" pos:line="3122" pos:column="13">/* [in] */</comment> <argument pos:line="3122" pos:column="24">__RPC__in ENCPROG_ACTIVE_STATEMENT *pRemapStatements</argument>,
            <comment type="block" pos:line="3123" pos:column="13">/* [in] */</comment> <argument pos:line="3123" pos:column="24">ULONG cRemapStatements</argument>,
            <comment type="block" pos:line="3124" pos:column="13">/* [in] */</comment> <argument pos:line="3124" pos:column="24">__RPC__in ENCPROG_EXCEPTION_RANGE *pExceptionRanges</argument>,
            <comment type="block" pos:line="3125" pos:column="13">/* [in] */</comment> <argument pos:line="3125" pos:column="24">ULONG cExceptionRanges</argument>)</argument_list></macro> <op:operator pos:line="3125" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="3125" pos:column="50">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3129" pos:column="1">#<cpp:directive pos:line="3129" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3129" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3131" pos:column="5">typedef <type><struct pos:line="3131" pos:column="13">struct <name pos:line="3131" pos:column="20">IDebugCustomENCModule100Vtbl</name>
    <block pos:line="3132" pos:column="5">{<public type="default" pos:line="3132" pos:column="6">
        <function_decl><type><name pos:line="3133" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3135" pos:column="9">HRESULT</name></type> ( <name pos:line="3135" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3135" pos:column="37">*</type:modifier><name pos:line="3135" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3135" pos:column="54">( 
            <param><decl><type><name pos:line="3136" pos:column="13">IDebugCustomENCModule100</name> <type:modifier pos:line="3136" pos:column="38">*</type:modifier></type> <name pos:line="3136" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="3137" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3137" pos:column="24">__RPC__in</name> <name pos:line="3137" pos:column="34">REFIID</name></type> <name pos:line="3137" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3138" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3139" pos:column="13">__RPC__deref_out</name>  <name pos:line="3139" pos:column="31">void</name> <type:modifier pos:line="3139" pos:column="36">*</type:modifier><type:modifier pos:line="3139" pos:column="37">*</type:modifier></type><name pos:line="3139" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3141" pos:column="9">ULONG</name></type> ( <name pos:line="3141" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3141" pos:column="35">*</type:modifier><name pos:line="3141" pos:column="36">AddRef</name> )<parameter_list pos:line="3141" pos:column="44">( 
            <param><decl><type><name pos:line="3142" pos:column="13">IDebugCustomENCModule100</name> <type:modifier pos:line="3142" pos:column="38">*</type:modifier></type> <name pos:line="3142" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3144" pos:column="9">ULONG</name></type> ( <name pos:line="3144" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3144" pos:column="35">*</type:modifier><name pos:line="3144" pos:column="36">Release</name> )<parameter_list pos:line="3144" pos:column="45">( 
            <param><decl><type><name pos:line="3145" pos:column="13">IDebugCustomENCModule100</name> <type:modifier pos:line="3145" pos:column="38">*</type:modifier></type> <name pos:line="3145" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3147" pos:column="9">HRESULT</name></type> ( <name pos:line="3147" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3147" pos:column="37">*</type:modifier><name pos:line="3147" pos:column="38">GetEmptyDelta</name> )<parameter_list pos:line="3147" pos:column="53">( 
            <param><decl><type><name pos:line="3148" pos:column="13">IDebugCustomENCModule100</name> <type:modifier pos:line="3148" pos:column="38">*</type:modifier></type> <name pos:line="3148" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="3149" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3149" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3149" pos:column="46">IUnknown</name> <type:modifier pos:line="3149" pos:column="55">*</type:modifier><type:modifier pos:line="3149" pos:column="56">*</type:modifier></type><name pos:line="3149" pos:column="57">uninitializedDelta</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3151" pos:column="9">HRESULT</name></type> ( <name pos:line="3151" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3151" pos:column="37">*</type:modifier><name pos:line="3151" pos:column="38">GetRemapMethodCount</name> )<parameter_list pos:line="3151" pos:column="59">( 
            <param><decl><type><name pos:line="3152" pos:column="13">IDebugCustomENCModule100</name> <type:modifier pos:line="3152" pos:column="38">*</type:modifier></type> <name pos:line="3152" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="3153" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3153" pos:column="25">__RPC__out</name> <name pos:line="3153" pos:column="36">ULONG</name> <type:modifier pos:line="3153" pos:column="42">*</type:modifier></type><name pos:line="3153" pos:column="43">cb</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3155" pos:column="9">HRESULT</name> <argument_list pos:line="3155" pos:column="17">( <argument pos:line="3155" pos:column="19">STDMETHODCALLTYPE *GetDeltaForApply</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3155" pos:column="56">(</op:operator> 
            <name pos:line="3156" pos:column="13">IDebugCustomENCModule100</name> <op:operator pos:line="3156" pos:column="38">*</op:operator> <name pos:line="3156" pos:column="40">This</name><op:operator pos:line="3156" pos:column="44">,</op:operator>
            <comment type="block" pos:line="3157" pos:column="13">/* [out] */</comment> <name pos:line="3157" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3157" pos:column="46">IUnknown</name> <op:operator pos:line="3157" pos:column="55">*</op:operator><op:operator pos:line="3157" pos:column="56">*</op:operator><name pos:line="3157" pos:column="57">ppAbstractDelta</name><op:operator pos:line="3157" pos:column="72">,</op:operator>
            <comment type="block" pos:line="3158" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="3158" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="3158" pos:column="67">(<argument pos:line="3158" pos:column="68">cRemapMethods</argument>, <argument pos:line="3158" pos:column="83">cRemapMethods</argument>)</argument_list></macro> <name pos:line="3158" pos:column="98">UINT32</name> <op:operator pos:line="3158" pos:column="105">*</op:operator><name pos:line="3158" pos:column="106">pmdRemapMethods</name><op:operator pos:line="3158" pos:column="121">,</op:operator>
            <comment type="block" pos:line="3159" pos:column="13">/* [in] */</comment> <name pos:line="3159" pos:column="24">ULONG</name> <name pos:line="3159" pos:column="30">cRemapMethods</name><op:operator pos:line="3159" pos:column="43">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3161" pos:column="9">HRESULT</name></type> ( <name pos:line="3161" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3161" pos:column="37">*</type:modifier><name pos:line="3161" pos:column="38">Apply</name> )<parameter_list pos:line="3161" pos:column="45">( 
            <param><decl><type><name pos:line="3162" pos:column="13">IDebugCustomENCModule100</name> <type:modifier pos:line="3162" pos:column="38">*</type:modifier></type> <name pos:line="3162" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="3163" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3163" pos:column="24">__RPC__in_opt</name> <name pos:line="3163" pos:column="38">IUnknown</name> <type:modifier pos:line="3163" pos:column="47">*</type:modifier></type><name pos:line="3163" pos:column="48">pAbstractDelta</name></decl></param>,
            <comment type="block" pos:line="3164" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3164" pos:column="24">__RPC__in</name> <name pos:line="3164" pos:column="34">ENCPROG_ACTIVE_STATEMENT</name> <type:modifier pos:line="3164" pos:column="59">*</type:modifier></type><name pos:line="3164" pos:column="60">pRemapStatements</name></decl></param>,
            <comment type="block" pos:line="3165" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3165" pos:column="24">ULONG</name></type> <name pos:line="3165" pos:column="30">cRemapStatements</name></decl></param>,
            <comment type="block" pos:line="3166" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3166" pos:column="24">__RPC__in</name> <name pos:line="3166" pos:column="34">ENCPROG_EXCEPTION_RANGE</name> <type:modifier pos:line="3166" pos:column="58">*</type:modifier></type><name pos:line="3166" pos:column="59">pExceptionRanges</name></decl></param>,
            <comment type="block" pos:line="3167" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3167" pos:column="24">ULONG</name></type> <name pos:line="3167" pos:column="30">cExceptionRanges</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3169" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3170" pos:column="7">IDebugCustomENCModule100Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3172" pos:column="5">interface</name></type> <name pos:line="3172" pos:column="15">IDebugCustomENCModule100</name>
    <argument_list pos:line="3173" pos:column="5">{
        <argument><expr><name pos:line="3174" pos:column="9">CONST_VTBL</name> struct <name pos:line="3174" pos:column="27">IDebugCustomENCModule100Vtbl</name> <op:operator pos:line="3174" pos:column="56">*</op:operator><name pos:line="3174" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3179" pos:column="1">#<cpp:directive pos:line="3179" pos:column="2">ifdef</cpp:directive> <name pos:line="3179" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3182" pos:column="1">#<cpp:directive pos:line="3182" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3182" pos:column="9">IDebugCustomENCModule100_QueryInterface</name><parameter_list pos:line="3182" pos:column="48">(<param><type><name pos:line="3182" pos:column="49">This</name></type></param>,<param><type><name pos:line="3182" pos:column="54">riid</name></type></param>,<param><type><name pos:line="3182" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3183" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3185" pos:column="1">#<cpp:directive pos:line="3185" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3185" pos:column="9">IDebugCustomENCModule100_AddRef</name><parameter_list pos:line="3185" pos:column="40">(<param><type><name pos:line="3185" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3186" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3188" pos:column="1">#<cpp:directive pos:line="3188" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3188" pos:column="9">IDebugCustomENCModule100_Release</name><parameter_list pos:line="3188" pos:column="41">(<param><type><name pos:line="3188" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3189" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3192" pos:column="1">#<cpp:directive pos:line="3192" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3192" pos:column="9">IDebugCustomENCModule100_GetEmptyDelta</name><parameter_list pos:line="3192" pos:column="47">(<param><type><name pos:line="3192" pos:column="48">This</name></type></param>,<param><type><name pos:line="3192" pos:column="53">uninitializedDelta</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3193" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEmptyDelta(This,uninitializedDelta) )</cpp:value></cpp:define> 

<cpp:define pos:line="3195" pos:column="1">#<cpp:directive pos:line="3195" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3195" pos:column="9">IDebugCustomENCModule100_GetRemapMethodCount</name><parameter_list pos:line="3195" pos:column="53">(<param><type><name pos:line="3195" pos:column="54">This</name></type></param>,<param><type><name pos:line="3195" pos:column="59">cb</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3196" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRemapMethodCount(This,cb) )</cpp:value></cpp:define> 

<cpp:define pos:line="3198" pos:column="1">#<cpp:directive pos:line="3198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3198" pos:column="9">IDebugCustomENCModule100_GetDeltaForApply</name><parameter_list pos:line="3198" pos:column="50">(<param><type><name pos:line="3198" pos:column="51">This</name></type></param>,<param><type><name pos:line="3198" pos:column="56">ppAbstractDelta</name></type></param>,<param><type><name pos:line="3198" pos:column="72">pmdRemapMethods</name></type></param>,<param><type><name pos:line="3198" pos:column="88">cRemapMethods</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3199" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDeltaForApply(This,ppAbstractDelta,pmdRemapMethods,cRemapMethods) )</cpp:value></cpp:define> 

<cpp:define pos:line="3201" pos:column="1">#<cpp:directive pos:line="3201" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3201" pos:column="9">IDebugCustomENCModule100_Apply</name><parameter_list pos:line="3201" pos:column="39">(<param><type><name pos:line="3201" pos:column="40">This</name></type></param>,<param><type><name pos:line="3201" pos:column="45">pAbstractDelta</name></type></param>,<param><type><name pos:line="3201" pos:column="60">pRemapStatements</name></type></param>,<param><type><name pos:line="3201" pos:column="77">cRemapStatements</name></type></param>,<param><type><name pos:line="3201" pos:column="94">pExceptionRanges</name></type></param>,<param><type><name pos:line="3201" pos:column="111">cExceptionRanges</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3202" pos:column="5">( (This)-&gt;lpVtbl -&gt; Apply(This,pAbstractDelta,pRemapStatements,cRemapStatements,pExceptionRanges,cExceptionRanges) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3204" pos:column="1">#<cpp:directive pos:line="3204" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3204" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3207" pos:column="1">#<cpp:directive pos:line="3207" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3207" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3212" pos:column="1">#<cpp:directive pos:line="3212" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3212" pos:column="9">/* __IDebugCustomENCModule100_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3215" pos:column="1">#<cpp:directive pos:line="3215" pos:column="2">ifndef</cpp:directive> <name pos:line="3215" pos:column="9">__IVsENCRebuildableProjectCfg3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3216" pos:column="1">#<cpp:directive pos:line="3216" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3216" pos:column="9">__IVsENCRebuildableProjectCfg3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3218" pos:column="1">/* interface IVsENCRebuildableProjectCfg3 */</comment>
<comment type="block" pos:line="3219" pos:column="1">/* [unique][uuid][object][local] */</comment> 


<decl_stmt><decl><type><name pos:line="3222" pos:column="1">EXTERN_C</name> <specifier pos:line="3222" pos:column="10">const</specifier> <name pos:line="3222" pos:column="16">IID</name></type> <name pos:line="3222" pos:column="20">IID_IVsENCRebuildableProjectCfg3</name></decl>;</decl_stmt>

<cpp:if pos:line="3224" pos:column="1">#<cpp:directive pos:line="3224" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3224" pos:column="5">defined</name><argument_list pos:line="3224" pos:column="12">(<argument><expr><name pos:line="3224" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3224" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3224" pos:column="29">!</op:operator><call><name pos:line="3224" pos:column="30">defined</name><argument_list pos:line="3224" pos:column="37">(<argument><expr><name pos:line="3224" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3226" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3226" pos:column="19">(<argument pos:line="3226" pos:column="20">"12342E6D-563A-4195-B267-D080383DD437"</argument>)</argument_list></macro>
    <label><name pos:line="3227" pos:column="5">IVsENCRebuildableProjectCfg3</name> :</label> <expr_stmt><expr pos:line="3227" pos:column="36">public <name pos:line="3227" pos:column="43">IUnknown</name>
    <block pos:line="3228" pos:column="5">{
    <expr pos:line="3229" pos:column="5">public<op:operator pos:line="3229" pos:column="11">:</op:operator>
        virtual <name pos:line="3230" pos:column="17">HRESULT</name> <name pos:line="3230" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3230" pos:column="43">BuildForCustomEnc</name><argument_list pos:line="3230" pos:column="60">( 
            <comment type="block" pos:line="3231" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="3231" pos:column="24">IDebugCustomENCModule100</name> <op:operator pos:line="3231" pos:column="49">*</op:operator><name pos:line="3231" pos:column="50">pModule</name></expr></argument>)</argument_list></call> <op:operator pos:line="3231" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="3231" pos:column="61">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3235" pos:column="1">#<cpp:directive pos:line="3235" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3235" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3237" pos:column="5">typedef <type><struct pos:line="3237" pos:column="13">struct <name pos:line="3237" pos:column="20">IVsENCRebuildableProjectCfg3Vtbl</name>
    <block pos:line="3238" pos:column="5">{<public type="default" pos:line="3238" pos:column="6">
        <function_decl><type><name pos:line="3239" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3241" pos:column="9">HRESULT</name></type> ( <name pos:line="3241" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3241" pos:column="37">*</type:modifier><name pos:line="3241" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3241" pos:column="54">( 
            <param><decl><type><name pos:line="3242" pos:column="13">IVsENCRebuildableProjectCfg3</name> <type:modifier pos:line="3242" pos:column="42">*</type:modifier></type> <name pos:line="3242" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="3243" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3243" pos:column="24">REFIID</name></type> <name pos:line="3243" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="3244" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3245" pos:column="13">__RPC__deref_out</name>  <name pos:line="3245" pos:column="31">void</name> <type:modifier pos:line="3245" pos:column="36">*</type:modifier><type:modifier pos:line="3245" pos:column="37">*</type:modifier></type><name pos:line="3245" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3247" pos:column="9">ULONG</name></type> ( <name pos:line="3247" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3247" pos:column="35">*</type:modifier><name pos:line="3247" pos:column="36">AddRef</name> )<parameter_list pos:line="3247" pos:column="44">( 
            <param><decl><type><name pos:line="3248" pos:column="13">IVsENCRebuildableProjectCfg3</name> <type:modifier pos:line="3248" pos:column="42">*</type:modifier></type> <name pos:line="3248" pos:column="44">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3250" pos:column="9">ULONG</name></type> ( <name pos:line="3250" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3250" pos:column="35">*</type:modifier><name pos:line="3250" pos:column="36">Release</name> )<parameter_list pos:line="3250" pos:column="45">( 
            <param><decl><type><name pos:line="3251" pos:column="13">IVsENCRebuildableProjectCfg3</name> <type:modifier pos:line="3251" pos:column="42">*</type:modifier></type> <name pos:line="3251" pos:column="44">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3253" pos:column="9">HRESULT</name></type> ( <name pos:line="3253" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3253" pos:column="37">*</type:modifier><name pos:line="3253" pos:column="38">BuildForCustomEnc</name> )<parameter_list pos:line="3253" pos:column="57">( 
            <param><decl><type><name pos:line="3254" pos:column="13">IVsENCRebuildableProjectCfg3</name> <type:modifier pos:line="3254" pos:column="42">*</type:modifier></type> <name pos:line="3254" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="3255" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3255" pos:column="24">IDebugCustomENCModule100</name> <type:modifier pos:line="3255" pos:column="49">*</type:modifier></type><name pos:line="3255" pos:column="50">pModule</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3257" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3258" pos:column="7">IVsENCRebuildableProjectCfg3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3260" pos:column="5">interface</name></type> <name pos:line="3260" pos:column="15">IVsENCRebuildableProjectCfg3</name>
    <argument_list pos:line="3261" pos:column="5">{
        <argument><expr><name pos:line="3262" pos:column="9">CONST_VTBL</name> struct <name pos:line="3262" pos:column="27">IVsENCRebuildableProjectCfg3Vtbl</name> <op:operator pos:line="3262" pos:column="60">*</op:operator><name pos:line="3262" pos:column="61">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3267" pos:column="1">#<cpp:directive pos:line="3267" pos:column="2">ifdef</cpp:directive> <name pos:line="3267" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3270" pos:column="1">#<cpp:directive pos:line="3270" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3270" pos:column="9">IVsENCRebuildableProjectCfg3_QueryInterface</name><parameter_list pos:line="3270" pos:column="52">(<param><type><name pos:line="3270" pos:column="53">This</name></type></param>,<param><type><name pos:line="3270" pos:column="58">riid</name></type></param>,<param><type><name pos:line="3270" pos:column="63">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3271" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3273" pos:column="1">#<cpp:directive pos:line="3273" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3273" pos:column="9">IVsENCRebuildableProjectCfg3_AddRef</name><parameter_list pos:line="3273" pos:column="44">(<param><type><name pos:line="3273" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3274" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3276" pos:column="1">#<cpp:directive pos:line="3276" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3276" pos:column="9">IVsENCRebuildableProjectCfg3_Release</name><parameter_list pos:line="3276" pos:column="45">(<param><type><name pos:line="3276" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3277" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3280" pos:column="1">#<cpp:directive pos:line="3280" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3280" pos:column="9">IVsENCRebuildableProjectCfg3_BuildForCustomEnc</name><parameter_list pos:line="3280" pos:column="55">(<param><type><name pos:line="3280" pos:column="56">This</name></type></param>,<param><type><name pos:line="3280" pos:column="61">pModule</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3281" pos:column="5">( (This)-&gt;lpVtbl -&gt; BuildForCustomEnc(This,pModule) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3283" pos:column="1">#<cpp:directive pos:line="3283" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3283" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3286" pos:column="1">#<cpp:directive pos:line="3286" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3286" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3291" pos:column="1">#<cpp:directive pos:line="3291" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3291" pos:column="9">/* __IVsENCRebuildableProjectCfg3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3294" pos:column="1">#<cpp:directive pos:line="3294" pos:column="2">ifndef</cpp:directive> <name pos:line="3294" pos:column="9">__IDebugManagedENC_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3295" pos:column="1">#<cpp:directive pos:line="3295" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3295" pos:column="9">__IDebugManagedENC_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3297" pos:column="1">/* interface IDebugManagedENC */</comment>
<comment type="block" pos:line="3298" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3301" pos:column="1">EXTERN_C</name> <specifier pos:line="3301" pos:column="10">const</specifier> <name pos:line="3301" pos:column="16">IID</name></type> <name pos:line="3301" pos:column="20">IID_IDebugManagedENC</name></decl>;</decl_stmt>

<cpp:if pos:line="3303" pos:column="1">#<cpp:directive pos:line="3303" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3303" pos:column="5">defined</name><argument_list pos:line="3303" pos:column="12">(<argument><expr><name pos:line="3303" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3303" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3303" pos:column="29">!</op:operator><call><name pos:line="3303" pos:column="30">defined</name><argument_list pos:line="3303" pos:column="37">(<argument><expr><name pos:line="3303" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3305" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3305" pos:column="19">(<argument pos:line="3305" pos:column="20">"12DCD8B7-EBFC-4dbe-A72C-3E44CDD3CBAF"</argument>)</argument_list></macro>
    <label><name pos:line="3306" pos:column="5">IDebugManagedENC</name> :</label> <expr_stmt><expr pos:line="3306" pos:column="24">public <name pos:line="3306" pos:column="31">IUnknown</name>
    <block pos:line="3307" pos:column="5">{
    <expr pos:line="3308" pos:column="5">public<op:operator pos:line="3308" pos:column="11">:</op:operator>
        virtual <name pos:line="3309" pos:column="17">HRESULT</name> <name pos:line="3309" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3309" pos:column="43">GetENCModule</name><argument_list pos:line="3309" pos:column="55">( 
            <comment type="block" pos:line="3310" pos:column="13">/* [in] */</comment> <argument pos:line="3310" pos:column="24">GUID moduleID</argument>,
            <comment type="block" pos:line="3311" pos:column="13">/* [in] */</comment> <argument pos:line="3311" pos:column="24">__RPC__in LPCOLESTR strPEname</argument>,
            <comment type="block" pos:line="3312" pos:column="13">/* [in] */</comment> <argument pos:line="3312" pos:column="24">__RPC__in FILETIME *pBuiltFileTime</argument>,
            <comment type="block" pos:line="3313" pos:column="13">/* [out] */</comment> <argument pos:line="3313" pos:column="25">__RPC__deref_out_opt IDebugENCModule **ppENCModule</argument>)</argument_list></macro> <op:operator pos:line="3313" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="3313" pos:column="79">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3317" pos:column="1">#<cpp:directive pos:line="3317" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3317" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3319" pos:column="5">typedef <type><struct pos:line="3319" pos:column="13">struct <name pos:line="3319" pos:column="20">IDebugManagedENCVtbl</name>
    <block pos:line="3320" pos:column="5">{<public type="default" pos:line="3320" pos:column="6">
        <function_decl><type><name pos:line="3321" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3323" pos:column="9">HRESULT</name></type> ( <name pos:line="3323" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3323" pos:column="37">*</type:modifier><name pos:line="3323" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3323" pos:column="54">( 
            <param><decl><type><name pos:line="3324" pos:column="13">IDebugManagedENC</name> <type:modifier pos:line="3324" pos:column="30">*</type:modifier></type> <name pos:line="3324" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="3325" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3325" pos:column="24">__RPC__in</name> <name pos:line="3325" pos:column="34">REFIID</name></type> <name pos:line="3325" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3326" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3327" pos:column="13">__RPC__deref_out</name>  <name pos:line="3327" pos:column="31">void</name> <type:modifier pos:line="3327" pos:column="36">*</type:modifier><type:modifier pos:line="3327" pos:column="37">*</type:modifier></type><name pos:line="3327" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3329" pos:column="9">ULONG</name></type> ( <name pos:line="3329" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3329" pos:column="35">*</type:modifier><name pos:line="3329" pos:column="36">AddRef</name> )<parameter_list pos:line="3329" pos:column="44">( 
            <param><decl><type><name pos:line="3330" pos:column="13">IDebugManagedENC</name> <type:modifier pos:line="3330" pos:column="30">*</type:modifier></type> <name pos:line="3330" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3332" pos:column="9">ULONG</name></type> ( <name pos:line="3332" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3332" pos:column="35">*</type:modifier><name pos:line="3332" pos:column="36">Release</name> )<parameter_list pos:line="3332" pos:column="45">( 
            <param><decl><type><name pos:line="3333" pos:column="13">IDebugManagedENC</name> <type:modifier pos:line="3333" pos:column="30">*</type:modifier></type> <name pos:line="3333" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3335" pos:column="9">HRESULT</name></type> ( <name pos:line="3335" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3335" pos:column="37">*</type:modifier><name pos:line="3335" pos:column="38">GetENCModule</name> )<parameter_list pos:line="3335" pos:column="52">( 
            <param><decl><type><name pos:line="3336" pos:column="13">IDebugManagedENC</name> <type:modifier pos:line="3336" pos:column="30">*</type:modifier></type> <name pos:line="3336" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="3337" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3337" pos:column="24">GUID</name></type> <name pos:line="3337" pos:column="29">moduleID</name></decl></param>,
            <comment type="block" pos:line="3338" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3338" pos:column="24">__RPC__in</name> <name pos:line="3338" pos:column="34">LPCOLESTR</name></type> <name pos:line="3338" pos:column="44">strPEname</name></decl></param>,
            <comment type="block" pos:line="3339" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3339" pos:column="24">__RPC__in</name> <name pos:line="3339" pos:column="34">FILETIME</name> <type:modifier pos:line="3339" pos:column="43">*</type:modifier></type><name pos:line="3339" pos:column="44">pBuiltFileTime</name></decl></param>,
            <comment type="block" pos:line="3340" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3340" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3340" pos:column="46">IDebugENCModule</name> <type:modifier pos:line="3340" pos:column="62">*</type:modifier><type:modifier pos:line="3340" pos:column="63">*</type:modifier></type><name pos:line="3340" pos:column="64">ppENCModule</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3342" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3343" pos:column="7">IDebugManagedENCVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3345" pos:column="5">interface</name></type> <name pos:line="3345" pos:column="15">IDebugManagedENC</name>
    <argument_list pos:line="3346" pos:column="5">{
        <argument><expr><name pos:line="3347" pos:column="9">CONST_VTBL</name> struct <name pos:line="3347" pos:column="27">IDebugManagedENCVtbl</name> <op:operator pos:line="3347" pos:column="48">*</op:operator><name pos:line="3347" pos:column="49">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3352" pos:column="1">#<cpp:directive pos:line="3352" pos:column="2">ifdef</cpp:directive> <name pos:line="3352" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3355" pos:column="1">#<cpp:directive pos:line="3355" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3355" pos:column="9">IDebugManagedENC_QueryInterface</name><parameter_list pos:line="3355" pos:column="40">(<param><type><name pos:line="3355" pos:column="41">This</name></type></param>,<param><type><name pos:line="3355" pos:column="46">riid</name></type></param>,<param><type><name pos:line="3355" pos:column="51">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3356" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3358" pos:column="1">#<cpp:directive pos:line="3358" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3358" pos:column="9">IDebugManagedENC_AddRef</name><parameter_list pos:line="3358" pos:column="32">(<param><type><name pos:line="3358" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3359" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3361" pos:column="1">#<cpp:directive pos:line="3361" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3361" pos:column="9">IDebugManagedENC_Release</name><parameter_list pos:line="3361" pos:column="33">(<param><type><name pos:line="3361" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3362" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3365" pos:column="1">#<cpp:directive pos:line="3365" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3365" pos:column="9">IDebugManagedENC_GetENCModule</name><parameter_list pos:line="3365" pos:column="38">(<param><type><name pos:line="3365" pos:column="39">This</name></type></param>,<param><type><name pos:line="3365" pos:column="44">moduleID</name></type></param>,<param><type><name pos:line="3365" pos:column="53">strPEname</name></type></param>,<param><type><name pos:line="3365" pos:column="63">pBuiltFileTime</name></type></param>,<param><type><name pos:line="3365" pos:column="78">ppENCModule</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3366" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetENCModule(This,moduleID,strPEname,pBuiltFileTime,ppENCModule) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3368" pos:column="1">#<cpp:directive pos:line="3368" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3368" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3371" pos:column="1">#<cpp:directive pos:line="3371" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3371" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3376" pos:column="1">#<cpp:directive pos:line="3376" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3376" pos:column="9">/* __IDebugManagedENC_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3379" pos:column="1">#<cpp:directive pos:line="3379" pos:column="2">ifndef</cpp:directive> <name pos:line="3379" pos:column="9">__IDebugUpdateInMemoryPE_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3380" pos:column="1">#<cpp:directive pos:line="3380" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3380" pos:column="9">__IDebugUpdateInMemoryPE_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3382" pos:column="1">/* interface IDebugUpdateInMemoryPE */</comment>
<comment type="block" pos:line="3383" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3386" pos:column="1">EXTERN_C</name> <specifier pos:line="3386" pos:column="10">const</specifier> <name pos:line="3386" pos:column="16">IID</name></type> <name pos:line="3386" pos:column="20">IID_IDebugUpdateInMemoryPE</name></decl>;</decl_stmt>

<cpp:if pos:line="3388" pos:column="1">#<cpp:directive pos:line="3388" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3388" pos:column="5">defined</name><argument_list pos:line="3388" pos:column="12">(<argument><expr><name pos:line="3388" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3388" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3388" pos:column="29">!</op:operator><call><name pos:line="3388" pos:column="30">defined</name><argument_list pos:line="3388" pos:column="37">(<argument><expr><name pos:line="3388" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3390" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3390" pos:column="19">(<argument pos:line="3390" pos:column="20">"9E2BD568-7CEE-4166-ABC9-495BA8D3054A"</argument>)</argument_list></macro>
    <label><name pos:line="3391" pos:column="5">IDebugUpdateInMemoryPE</name> :</label> <expr_stmt><expr pos:line="3391" pos:column="30">public <name pos:line="3391" pos:column="37">IUnknown</name>
    <block pos:line="3392" pos:column="5">{
    <expr pos:line="3393" pos:column="5">public<op:operator pos:line="3393" pos:column="11">:</op:operator>
        virtual <name pos:line="3394" pos:column="17">HRESULT</name> <name pos:line="3394" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3394" pos:column="43">GetMetadataEmit</name><argument_list pos:line="3394" pos:column="58">( 
            <comment type="block" pos:line="3395" pos:column="13">/* [out] */</comment> <argument pos:line="3395" pos:column="25">__RPC__deref_out_opt IUnknown **ppMetadataEmit</argument>)</argument_list></macro> <op:operator pos:line="3395" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="3395" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="3397" pos:column="9">virtual <name pos:line="3397" pos:column="17">HRESULT</name> <name pos:line="3397" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3397" pos:column="43">SetDeltaIL</name><argument_list pos:line="3397" pos:column="53">( 
            <comment type="block" pos:line="3398" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="3398" pos:column="33">__RPC__in_ecount_full(cbIL) BYTE *pbIL</argument>,
            <comment type="block" pos:line="3399" pos:column="13">/* [in] */</comment> <argument pos:line="3399" pos:column="24">ULONG32 cbIL</argument>)</argument_list></macro> <op:operator pos:line="3399" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="3399" pos:column="40">0</lit:literal></expr>;
        
        <expr pos:line="3401" pos:column="9">virtual <name pos:line="3401" pos:column="17">HRESULT</name> <name pos:line="3401" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3401" pos:column="43">SetDeltaPdb</name><argument_list pos:line="3401" pos:column="54">( 
            <comment type="block" pos:line="3402" pos:column="13">/* [in] */</comment> <argument pos:line="3402" pos:column="24">__RPC__in_opt IStream *pDeltaPdbStream</argument>)</argument_list></macro> <op:operator pos:line="3402" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="3402" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="3404" pos:column="9">virtual <name pos:line="3404" pos:column="17">HRESULT</name> <name pos:line="3404" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3404" pos:column="43">SetDeltaLines</name><argument_list pos:line="3404" pos:column="56">( 
            <comment type="block" pos:line="3405" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="3405" pos:column="33">__RPC__in_ecount_full(cLineDeltas) LINEDELTA *pLineDeltas</argument>,
            <comment type="block" pos:line="3406" pos:column="13">/* [in] */</comment> <argument pos:line="3406" pos:column="24">ULONG32 cLineDeltas</argument>)</argument_list></macro> <op:operator pos:line="3406" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="3406" pos:column="47">0</lit:literal></expr>;
        
        <expr pos:line="3408" pos:column="9">virtual <name pos:line="3408" pos:column="17">HRESULT</name> <name pos:line="3408" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3408" pos:column="43">GetENCDebugInfo</name><argument_list pos:line="3408" pos:column="58">( 
            <comment type="block" pos:line="3409" pos:column="13">/* [out] */</comment> <argument pos:line="3409" pos:column="25">__RPC__deref_out_opt IENCDebugInfo **ppDebugInfo</argument>)</argument_list></macro> <op:operator pos:line="3409" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="3409" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="3411" pos:column="9">virtual <name pos:line="3411" pos:column="17">HRESULT</name> <name pos:line="3411" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3411" pos:column="43">SetRemapMethods</name><argument_list pos:line="3411" pos:column="58">( 
            <comment type="block" pos:line="3412" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="3412" pos:column="33">__RPC__in_ecount_full(cRemapMethods) UINT32 *pmdRemapMethodTokens</argument>,
            <comment type="block" pos:line="3413" pos:column="13">/* [in] */</comment> <argument pos:line="3413" pos:column="24">ULONG32 cRemapMethods</argument>)</argument_list></macro> <op:operator pos:line="3413" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="3413" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="3415" pos:column="9">virtual <name pos:line="3415" pos:column="17">HRESULT</name> <name pos:line="3415" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3415" pos:column="43">SetFileUpdates</name><argument_list pos:line="3415" pos:column="57">( 
            <comment type="block" pos:line="3416" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="3416" pos:column="33">__RPC__in_ecount_full(cFileUpdates) FILEUPDATE *pFileUpdates</argument>,
            <comment type="block" pos:line="3417" pos:column="13">/* [in] */</comment> <argument pos:line="3417" pos:column="24">ULONG32 cFileUpdates</argument>)</argument_list></macro> <op:operator pos:line="3417" pos:column="46">=</op:operator> <lit:literal type="number" pos:line="3417" pos:column="48">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3421" pos:column="1">#<cpp:directive pos:line="3421" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3421" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3423" pos:column="5">typedef <type><struct pos:line="3423" pos:column="13">struct <name pos:line="3423" pos:column="20">IDebugUpdateInMemoryPEVtbl</name>
    <block pos:line="3424" pos:column="5">{<public type="default" pos:line="3424" pos:column="6">
        <function_decl><type><name pos:line="3425" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3427" pos:column="9">HRESULT</name></type> ( <name pos:line="3427" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3427" pos:column="37">*</type:modifier><name pos:line="3427" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3427" pos:column="54">( 
            <param><decl><type><name pos:line="3428" pos:column="13">IDebugUpdateInMemoryPE</name> <type:modifier pos:line="3428" pos:column="36">*</type:modifier></type> <name pos:line="3428" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="3429" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3429" pos:column="24">__RPC__in</name> <name pos:line="3429" pos:column="34">REFIID</name></type> <name pos:line="3429" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3430" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3431" pos:column="13">__RPC__deref_out</name>  <name pos:line="3431" pos:column="31">void</name> <type:modifier pos:line="3431" pos:column="36">*</type:modifier><type:modifier pos:line="3431" pos:column="37">*</type:modifier></type><name pos:line="3431" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3433" pos:column="9">ULONG</name></type> ( <name pos:line="3433" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3433" pos:column="35">*</type:modifier><name pos:line="3433" pos:column="36">AddRef</name> )<parameter_list pos:line="3433" pos:column="44">( 
            <param><decl><type><name pos:line="3434" pos:column="13">IDebugUpdateInMemoryPE</name> <type:modifier pos:line="3434" pos:column="36">*</type:modifier></type> <name pos:line="3434" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3436" pos:column="9">ULONG</name></type> ( <name pos:line="3436" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3436" pos:column="35">*</type:modifier><name pos:line="3436" pos:column="36">Release</name> )<parameter_list pos:line="3436" pos:column="45">( 
            <param><decl><type><name pos:line="3437" pos:column="13">IDebugUpdateInMemoryPE</name> <type:modifier pos:line="3437" pos:column="36">*</type:modifier></type> <name pos:line="3437" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3439" pos:column="9">HRESULT</name></type> ( <name pos:line="3439" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3439" pos:column="37">*</type:modifier><name pos:line="3439" pos:column="38">GetMetadataEmit</name> )<parameter_list pos:line="3439" pos:column="55">( 
            <param><decl><type><name pos:line="3440" pos:column="13">IDebugUpdateInMemoryPE</name> <type:modifier pos:line="3440" pos:column="36">*</type:modifier></type> <name pos:line="3440" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="3441" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3441" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3441" pos:column="46">IUnknown</name> <type:modifier pos:line="3441" pos:column="55">*</type:modifier><type:modifier pos:line="3441" pos:column="56">*</type:modifier></type><name pos:line="3441" pos:column="57">ppMetadataEmit</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3443" pos:column="9">HRESULT</name> <argument_list pos:line="3443" pos:column="17">( <argument pos:line="3443" pos:column="19">STDMETHODCALLTYPE *SetDeltaIL</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3443" pos:column="50">(</op:operator> 
            <name pos:line="3444" pos:column="13">IDebugUpdateInMemoryPE</name> <op:operator pos:line="3444" pos:column="36">*</op:operator> <name pos:line="3444" pos:column="38">This</name><op:operator pos:line="3444" pos:column="42">,</op:operator>
            <comment type="block" pos:line="3445" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3445" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3445" pos:column="54">(<argument pos:line="3445" pos:column="55">cbIL</argument>)</argument_list></macro> <name pos:line="3445" pos:column="61">BYTE</name> <op:operator pos:line="3445" pos:column="66">*</op:operator><name pos:line="3445" pos:column="67">pbIL</name><op:operator pos:line="3445" pos:column="71">,</op:operator>
            <comment type="block" pos:line="3446" pos:column="13">/* [in] */</comment> <name pos:line="3446" pos:column="24">ULONG32</name> <name pos:line="3446" pos:column="32">cbIL</name><op:operator pos:line="3446" pos:column="36">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3448" pos:column="9">HRESULT</name></type> ( <name pos:line="3448" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3448" pos:column="37">*</type:modifier><name pos:line="3448" pos:column="38">SetDeltaPdb</name> )<parameter_list pos:line="3448" pos:column="51">( 
            <param><decl><type><name pos:line="3449" pos:column="13">IDebugUpdateInMemoryPE</name> <type:modifier pos:line="3449" pos:column="36">*</type:modifier></type> <name pos:line="3449" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="3450" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3450" pos:column="24">__RPC__in_opt</name> <name pos:line="3450" pos:column="38">IStream</name> <type:modifier pos:line="3450" pos:column="46">*</type:modifier></type><name pos:line="3450" pos:column="47">pDeltaPdbStream</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3452" pos:column="9">HRESULT</name> <argument_list pos:line="3452" pos:column="17">( <argument pos:line="3452" pos:column="19">STDMETHODCALLTYPE *SetDeltaLines</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3452" pos:column="53">(</op:operator> 
            <name pos:line="3453" pos:column="13">IDebugUpdateInMemoryPE</name> <op:operator pos:line="3453" pos:column="36">*</op:operator> <name pos:line="3453" pos:column="38">This</name><op:operator pos:line="3453" pos:column="42">,</op:operator>
            <comment type="block" pos:line="3454" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3454" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3454" pos:column="54">(<argument pos:line="3454" pos:column="55">cLineDeltas</argument>)</argument_list></macro> <name pos:line="3454" pos:column="68">LINEDELTA</name> <op:operator pos:line="3454" pos:column="78">*</op:operator><name pos:line="3454" pos:column="79">pLineDeltas</name><op:operator pos:line="3454" pos:column="90">,</op:operator>
            <comment type="block" pos:line="3455" pos:column="13">/* [in] */</comment> <name pos:line="3455" pos:column="24">ULONG32</name> <name pos:line="3455" pos:column="32">cLineDeltas</name><op:operator pos:line="3455" pos:column="43">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3457" pos:column="9">HRESULT</name></type> ( <name pos:line="3457" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3457" pos:column="37">*</type:modifier><name pos:line="3457" pos:column="38">GetENCDebugInfo</name> )<parameter_list pos:line="3457" pos:column="55">( 
            <param><decl><type><name pos:line="3458" pos:column="13">IDebugUpdateInMemoryPE</name> <type:modifier pos:line="3458" pos:column="36">*</type:modifier></type> <name pos:line="3458" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="3459" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3459" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3459" pos:column="46">IENCDebugInfo</name> <type:modifier pos:line="3459" pos:column="60">*</type:modifier><type:modifier pos:line="3459" pos:column="61">*</type:modifier></type><name pos:line="3459" pos:column="62">ppDebugInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3461" pos:column="9">HRESULT</name> <argument_list pos:line="3461" pos:column="17">( <argument pos:line="3461" pos:column="19">STDMETHODCALLTYPE *SetRemapMethods</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3461" pos:column="55">(</op:operator> 
            <name pos:line="3462" pos:column="13">IDebugUpdateInMemoryPE</name> <op:operator pos:line="3462" pos:column="36">*</op:operator> <name pos:line="3462" pos:column="38">This</name><op:operator pos:line="3462" pos:column="42">,</op:operator>
            <comment type="block" pos:line="3463" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3463" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3463" pos:column="54">(<argument pos:line="3463" pos:column="55">cRemapMethods</argument>)</argument_list></macro> <name pos:line="3463" pos:column="70">UINT32</name> <op:operator pos:line="3463" pos:column="77">*</op:operator><name pos:line="3463" pos:column="78">pmdRemapMethodTokens</name><op:operator pos:line="3463" pos:column="98">,</op:operator>
            <comment type="block" pos:line="3464" pos:column="13">/* [in] */</comment> <name pos:line="3464" pos:column="24">ULONG32</name> <name pos:line="3464" pos:column="32">cRemapMethods</name><op:operator pos:line="3464" pos:column="45">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="3466" pos:column="9">HRESULT</name> <argument_list pos:line="3466" pos:column="17">( <argument pos:line="3466" pos:column="19">STDMETHODCALLTYPE *SetFileUpdates</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3466" pos:column="54">(</op:operator> 
            <name pos:line="3467" pos:column="13">IDebugUpdateInMemoryPE</name> <op:operator pos:line="3467" pos:column="36">*</op:operator> <name pos:line="3467" pos:column="38">This</name><op:operator pos:line="3467" pos:column="42">,</op:operator>
            <comment type="block" pos:line="3468" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3468" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3468" pos:column="54">(<argument pos:line="3468" pos:column="55">cFileUpdates</argument>)</argument_list></macro> <name pos:line="3468" pos:column="69">FILEUPDATE</name> <op:operator pos:line="3468" pos:column="80">*</op:operator><name pos:line="3468" pos:column="81">pFileUpdates</name><op:operator pos:line="3468" pos:column="93">,</op:operator>
            <comment type="block" pos:line="3469" pos:column="13">/* [in] */</comment> <name pos:line="3469" pos:column="24">ULONG32</name> <name pos:line="3469" pos:column="32">cFileUpdates</name><op:operator pos:line="3469" pos:column="44">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="3471" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3472" pos:column="7">IDebugUpdateInMemoryPEVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3474" pos:column="5">interface</name></type> <name pos:line="3474" pos:column="15">IDebugUpdateInMemoryPE</name>
    <argument_list pos:line="3475" pos:column="5">{
        <argument><expr><name pos:line="3476" pos:column="9">CONST_VTBL</name> struct <name pos:line="3476" pos:column="27">IDebugUpdateInMemoryPEVtbl</name> <op:operator pos:line="3476" pos:column="54">*</op:operator><name pos:line="3476" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3481" pos:column="1">#<cpp:directive pos:line="3481" pos:column="2">ifdef</cpp:directive> <name pos:line="3481" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3484" pos:column="1">#<cpp:directive pos:line="3484" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3484" pos:column="9">IDebugUpdateInMemoryPE_QueryInterface</name><parameter_list pos:line="3484" pos:column="46">(<param><type><name pos:line="3484" pos:column="47">This</name></type></param>,<param><type><name pos:line="3484" pos:column="52">riid</name></type></param>,<param><type><name pos:line="3484" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3485" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3487" pos:column="1">#<cpp:directive pos:line="3487" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3487" pos:column="9">IDebugUpdateInMemoryPE_AddRef</name><parameter_list pos:line="3487" pos:column="38">(<param><type><name pos:line="3487" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3488" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3490" pos:column="1">#<cpp:directive pos:line="3490" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3490" pos:column="9">IDebugUpdateInMemoryPE_Release</name><parameter_list pos:line="3490" pos:column="39">(<param><type><name pos:line="3490" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3491" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3494" pos:column="1">#<cpp:directive pos:line="3494" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3494" pos:column="9">IDebugUpdateInMemoryPE_GetMetadataEmit</name><parameter_list pos:line="3494" pos:column="47">(<param><type><name pos:line="3494" pos:column="48">This</name></type></param>,<param><type><name pos:line="3494" pos:column="53">ppMetadataEmit</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3495" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMetadataEmit(This,ppMetadataEmit) )</cpp:value></cpp:define> 

<cpp:define pos:line="3497" pos:column="1">#<cpp:directive pos:line="3497" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3497" pos:column="9">IDebugUpdateInMemoryPE_SetDeltaIL</name><parameter_list pos:line="3497" pos:column="42">(<param><type><name pos:line="3497" pos:column="43">This</name></type></param>,<param><type><name pos:line="3497" pos:column="48">pbIL</name></type></param>,<param><type><name pos:line="3497" pos:column="53">cbIL</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3498" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetDeltaIL(This,pbIL,cbIL) )</cpp:value></cpp:define> 

<cpp:define pos:line="3500" pos:column="1">#<cpp:directive pos:line="3500" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3500" pos:column="9">IDebugUpdateInMemoryPE_SetDeltaPdb</name><parameter_list pos:line="3500" pos:column="43">(<param><type><name pos:line="3500" pos:column="44">This</name></type></param>,<param><type><name pos:line="3500" pos:column="49">pDeltaPdbStream</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3501" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetDeltaPdb(This,pDeltaPdbStream) )</cpp:value></cpp:define> 

<cpp:define pos:line="3503" pos:column="1">#<cpp:directive pos:line="3503" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3503" pos:column="9">IDebugUpdateInMemoryPE_SetDeltaLines</name><parameter_list pos:line="3503" pos:column="45">(<param><type><name pos:line="3503" pos:column="46">This</name></type></param>,<param><type><name pos:line="3503" pos:column="51">pLineDeltas</name></type></param>,<param><type><name pos:line="3503" pos:column="63">cLineDeltas</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3504" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetDeltaLines(This,pLineDeltas,cLineDeltas) )</cpp:value></cpp:define> 

<cpp:define pos:line="3506" pos:column="1">#<cpp:directive pos:line="3506" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3506" pos:column="9">IDebugUpdateInMemoryPE_GetENCDebugInfo</name><parameter_list pos:line="3506" pos:column="47">(<param><type><name pos:line="3506" pos:column="48">This</name></type></param>,<param><type><name pos:line="3506" pos:column="53">ppDebugInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3507" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetENCDebugInfo(This,ppDebugInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="3509" pos:column="1">#<cpp:directive pos:line="3509" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3509" pos:column="9">IDebugUpdateInMemoryPE_SetRemapMethods</name><parameter_list pos:line="3509" pos:column="47">(<param><type><name pos:line="3509" pos:column="48">This</name></type></param>,<param><type><name pos:line="3509" pos:column="53">pmdRemapMethodTokens</name></type></param>,<param><type><name pos:line="3509" pos:column="74">cRemapMethods</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3510" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetRemapMethods(This,pmdRemapMethodTokens,cRemapMethods) )</cpp:value></cpp:define> 

<cpp:define pos:line="3512" pos:column="1">#<cpp:directive pos:line="3512" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3512" pos:column="9">IDebugUpdateInMemoryPE_SetFileUpdates</name><parameter_list pos:line="3512" pos:column="46">(<param><type><name pos:line="3512" pos:column="47">This</name></type></param>,<param><type><name pos:line="3512" pos:column="52">pFileUpdates</name></type></param>,<param><type><name pos:line="3512" pos:column="65">cFileUpdates</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3513" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetFileUpdates(This,pFileUpdates,cFileUpdates) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3515" pos:column="1">#<cpp:directive pos:line="3515" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3515" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3518" pos:column="1">#<cpp:directive pos:line="3518" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3518" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3523" pos:column="1">#<cpp:directive pos:line="3523" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3523" pos:column="9">/* __IDebugUpdateInMemoryPE_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3526" pos:column="1">#<cpp:directive pos:line="3526" pos:column="2">ifndef</cpp:directive> <name pos:line="3526" pos:column="9">__IDebugComPlusSnapshot2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3527" pos:column="1">#<cpp:directive pos:line="3527" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3527" pos:column="9">__IDebugComPlusSnapshot2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3529" pos:column="1">/* interface IDebugComPlusSnapshot2 */</comment>
<comment type="block" pos:line="3530" pos:column="1">/* [unique][uuid][object] */</comment> 

<typedef pos:line="3532" pos:column="1">typedef <type><struct pos:line="3532" pos:column="9">struct <name pos:line="3532" pos:column="16">_IL_MAP</name>
    <block pos:line="3533" pos:column="5">{<public type="default" pos:line="3533" pos:column="6">
    <decl_stmt><decl><type><name pos:line="3534" pos:column="5">ULONG32</name></type> <name pos:line="3534" pos:column="13">oldOffset</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3535" pos:column="5">ULONG32</name></type> <name pos:line="3535" pos:column="13">newOffset</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3536" pos:column="5">BOOL</name></type> <name pos:line="3536" pos:column="10">fAccurate</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="3537" pos:column="9">IL_MAP</name>;</typedef>


<decl_stmt><decl><type><name pos:line="3540" pos:column="1">EXTERN_C</name> <specifier pos:line="3540" pos:column="10">const</specifier> <name pos:line="3540" pos:column="16">IID</name></type> <name pos:line="3540" pos:column="20">IID_IDebugComPlusSnapshot2</name></decl>;</decl_stmt>

<cpp:if pos:line="3542" pos:column="1">#<cpp:directive pos:line="3542" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3542" pos:column="5">defined</name><argument_list pos:line="3542" pos:column="12">(<argument><expr><name pos:line="3542" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3542" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3542" pos:column="29">!</op:operator><call><name pos:line="3542" pos:column="30">defined</name><argument_list pos:line="3542" pos:column="37">(<argument><expr><name pos:line="3542" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3544" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3544" pos:column="19">(<argument pos:line="3544" pos:column="20">"f6f94d20-78c2-11d2-8ffe-00c04fa38314"</argument>)</argument_list></macro>
    <label><name pos:line="3545" pos:column="5">IDebugComPlusSnapshot2</name> :</label> <expr_stmt><expr pos:line="3545" pos:column="30">public <name pos:line="3545" pos:column="37">IUnknown</name>
    <block pos:line="3546" pos:column="5">{
    <expr pos:line="3547" pos:column="5">public<op:operator pos:line="3547" pos:column="11">:</op:operator>
        virtual <name pos:line="3548" pos:column="17">HRESULT</name> <name pos:line="3548" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3548" pos:column="43">CopyMetaData</name><argument_list pos:line="3548" pos:column="55">( 
            <comment type="block" pos:line="3549" pos:column="13">/* [in] */</comment> <argument pos:line="3549" pos:column="24">__RPC__in_opt IStream *pIStream</argument>,
            <comment type="block" pos:line="3550" pos:column="13">/* [out] */</comment> <argument pos:line="3550" pos:column="25">__RPC__out GUID *pMvid</argument>)</argument_list></macro> <op:operator pos:line="3550" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="3550" pos:column="51">0</lit:literal></expr>;
        
        <expr pos:line="3552" pos:column="9">virtual <name pos:line="3552" pos:column="17">HRESULT</name> <name pos:line="3552" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3552" pos:column="43">GetMvid</name><argument_list pos:line="3552" pos:column="50">( 
            <comment type="block" pos:line="3553" pos:column="13">/* [out] */</comment> <argument pos:line="3553" pos:column="25">__RPC__out GUID *pMvid</argument>)</argument_list></macro> <op:operator pos:line="3553" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="3553" pos:column="51">0</lit:literal></expr>;
        
        <expr pos:line="3555" pos:column="9">virtual <name pos:line="3555" pos:column="17">HRESULT</name> <name pos:line="3555" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3555" pos:column="43">GetRoDataRVA</name><argument_list pos:line="3555" pos:column="55">( 
            <comment type="block" pos:line="3556" pos:column="13">/* [out] */</comment> <argument pos:line="3556" pos:column="25">__RPC__out ULONG32 *pRoDataRVA</argument>)</argument_list></macro> <op:operator pos:line="3556" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="3556" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="3558" pos:column="9">virtual <name pos:line="3558" pos:column="17">HRESULT</name> <name pos:line="3558" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3558" pos:column="43">GetRwDataRVA</name><argument_list pos:line="3558" pos:column="55">( 
            <comment type="block" pos:line="3559" pos:column="13">/* [out] */</comment> <argument pos:line="3559" pos:column="25">__RPC__out ULONG32 *pRwDataRVA</argument>)</argument_list></macro> <op:operator pos:line="3559" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="3559" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="3561" pos:column="9">virtual <name pos:line="3561" pos:column="17">HRESULT</name> <name pos:line="3561" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3561" pos:column="43">SetPEBytes</name><argument_list pos:line="3561" pos:column="53">( 
            <comment type="block" pos:line="3562" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="3562" pos:column="44">__RPC__in_ecount_part(dwBytes, dwBytes) BYTE *pBytes</argument>,
            <comment type="block" pos:line="3563" pos:column="13">/* [in] */</comment> <argument pos:line="3563" pos:column="24">DWORD dwBytes</argument>)</argument_list></macro> <op:operator pos:line="3563" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="3563" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="3565" pos:column="9">virtual <name pos:line="3565" pos:column="17">HRESULT</name> <name pos:line="3565" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3565" pos:column="43">SetILMap</name><argument_list pos:line="3565" pos:column="51">( 
            <comment type="block" pos:line="3566" pos:column="13">/* [in] */</comment> <argument pos:line="3566" pos:column="24">DWORD mdFunction</argument>,
            <comment type="block" pos:line="3567" pos:column="13">/* [in] */</comment> <argument pos:line="3567" pos:column="24">ULONG cMapSize</argument>,
            <comment type="block" pos:line="3568" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="3568" pos:column="33">__RPC__in_ecount_full(cMapSize) IL_MAP map[  ]</argument>)</argument_list></macro> <op:operator pos:line="3568" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="3568" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="3570" pos:column="9">virtual <name pos:line="3570" pos:column="17">HRESULT</name> <name pos:line="3570" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3570" pos:column="43">SetSymbolBytes</name><argument_list pos:line="3570" pos:column="57">( 
            <comment type="block" pos:line="3571" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="3571" pos:column="44">__RPC__in_ecount_part(dwBytes, dwBytes) BYTE *pBytes</argument>,
            <comment type="block" pos:line="3572" pos:column="13">/* [in] */</comment> <argument pos:line="3572" pos:column="24">DWORD dwBytes</argument>)</argument_list></macro> <op:operator pos:line="3572" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="3572" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="3574" pos:column="9">virtual <name pos:line="3574" pos:column="17">HRESULT</name> <name pos:line="3574" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3574" pos:column="43">GetSymbolProvider</name><argument_list pos:line="3574" pos:column="60">( 
            <comment type="block" pos:line="3575" pos:column="13">/* [out] */</comment> <argument pos:line="3575" pos:column="25">__RPC__deref_out_opt IDebugComPlusSymbolProvider **ppSym</argument>)</argument_list></macro> <op:operator pos:line="3575" pos:column="83">=</op:operator> <lit:literal type="number" pos:line="3575" pos:column="85">0</lit:literal></expr>;
        
        <expr pos:line="3577" pos:column="9">virtual <name pos:line="3577" pos:column="17">HRESULT</name> <name pos:line="3577" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3577" pos:column="43">GetAppDomainAndModuleIDs</name><argument_list pos:line="3577" pos:column="67">( 
            <comment type="block" pos:line="3578" pos:column="13">/* [out] */</comment> <argument pos:line="3578" pos:column="25">__RPC__out ULONG32 *pulAppDomainID</argument>,
            <comment type="block" pos:line="3579" pos:column="13">/* [out] */</comment> <argument pos:line="3579" pos:column="25">__RPC__out GUID *pguidModule</argument>)</argument_list></macro> <op:operator pos:line="3579" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="3579" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="3581" pos:column="9">virtual <name pos:line="3581" pos:column="17">HRESULT</name> <name pos:line="3581" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3581" pos:column="43">RequestILMap</name><argument_list pos:line="3581" pos:column="55">( 
            <comment type="block" pos:line="3582" pos:column="13">/* [in] */</comment> <argument pos:line="3582" pos:column="24">DWORD mdFunction</argument>)</argument_list></macro> <op:operator pos:line="3582" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="3582" pos:column="44">0</lit:literal></expr>;
        
        <expr pos:line="3584" pos:column="9">virtual <name pos:line="3584" pos:column="17">HRESULT</name> <name pos:line="3584" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3584" pos:column="43">CreateILMaps</name><argument_list pos:line="3584" pos:column="55">( 
            <comment type="block" pos:line="3585" pos:column="13">/* [in] */</comment> <argument pos:line="3585" pos:column="24">ULONG in_NoOfLineMaps</argument>,
            <comment type="block" pos:line="3586" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="3586" pos:column="33">__RPC__in_ecount_full(in_NoOfLineMaps) IDebugENCLineMap **in_ArrayOfLineMaps</argument>)</argument_list></macro> <op:operator pos:line="3586" pos:column="111">=</op:operator> <lit:literal type="number" pos:line="3586" pos:column="113">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3590" pos:column="1">#<cpp:directive pos:line="3590" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3590" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3592" pos:column="5">typedef <type><struct pos:line="3592" pos:column="13">struct <name pos:line="3592" pos:column="20">IDebugComPlusSnapshot2Vtbl</name>
    <block pos:line="3593" pos:column="5">{<public type="default" pos:line="3593" pos:column="6">
        <function_decl><type><name pos:line="3594" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3596" pos:column="9">HRESULT</name></type> ( <name pos:line="3596" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3596" pos:column="37">*</type:modifier><name pos:line="3596" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3596" pos:column="54">( 
            <param><decl><type><name pos:line="3597" pos:column="13">IDebugComPlusSnapshot2</name> <type:modifier pos:line="3597" pos:column="36">*</type:modifier></type> <name pos:line="3597" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="3598" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3598" pos:column="24">__RPC__in</name> <name pos:line="3598" pos:column="34">REFIID</name></type> <name pos:line="3598" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3599" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3600" pos:column="13">__RPC__deref_out</name>  <name pos:line="3600" pos:column="31">void</name> <type:modifier pos:line="3600" pos:column="36">*</type:modifier><type:modifier pos:line="3600" pos:column="37">*</type:modifier></type><name pos:line="3600" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3602" pos:column="9">ULONG</name></type> ( <name pos:line="3602" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3602" pos:column="35">*</type:modifier><name pos:line="3602" pos:column="36">AddRef</name> )<parameter_list pos:line="3602" pos:column="44">( 
            <param><decl><type><name pos:line="3603" pos:column="13">IDebugComPlusSnapshot2</name> <type:modifier pos:line="3603" pos:column="36">*</type:modifier></type> <name pos:line="3603" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3605" pos:column="9">ULONG</name></type> ( <name pos:line="3605" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3605" pos:column="35">*</type:modifier><name pos:line="3605" pos:column="36">Release</name> )<parameter_list pos:line="3605" pos:column="45">( 
            <param><decl><type><name pos:line="3606" pos:column="13">IDebugComPlusSnapshot2</name> <type:modifier pos:line="3606" pos:column="36">*</type:modifier></type> <name pos:line="3606" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3608" pos:column="9">HRESULT</name></type> ( <name pos:line="3608" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3608" pos:column="37">*</type:modifier><name pos:line="3608" pos:column="38">CopyMetaData</name> )<parameter_list pos:line="3608" pos:column="52">( 
            <param><decl><type><name pos:line="3609" pos:column="13">IDebugComPlusSnapshot2</name> <type:modifier pos:line="3609" pos:column="36">*</type:modifier></type> <name pos:line="3609" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="3610" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3610" pos:column="24">__RPC__in_opt</name> <name pos:line="3610" pos:column="38">IStream</name> <type:modifier pos:line="3610" pos:column="46">*</type:modifier></type><name pos:line="3610" pos:column="47">pIStream</name></decl></param>,
            <comment type="block" pos:line="3611" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3611" pos:column="25">__RPC__out</name> <name pos:line="3611" pos:column="36">GUID</name> <type:modifier pos:line="3611" pos:column="41">*</type:modifier></type><name pos:line="3611" pos:column="42">pMvid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3613" pos:column="9">HRESULT</name></type> ( <name pos:line="3613" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3613" pos:column="37">*</type:modifier><name pos:line="3613" pos:column="38">GetMvid</name> )<parameter_list pos:line="3613" pos:column="47">( 
            <param><decl><type><name pos:line="3614" pos:column="13">IDebugComPlusSnapshot2</name> <type:modifier pos:line="3614" pos:column="36">*</type:modifier></type> <name pos:line="3614" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="3615" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3615" pos:column="25">__RPC__out</name> <name pos:line="3615" pos:column="36">GUID</name> <type:modifier pos:line="3615" pos:column="41">*</type:modifier></type><name pos:line="3615" pos:column="42">pMvid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3617" pos:column="9">HRESULT</name></type> ( <name pos:line="3617" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3617" pos:column="37">*</type:modifier><name pos:line="3617" pos:column="38">GetRoDataRVA</name> )<parameter_list pos:line="3617" pos:column="52">( 
            <param><decl><type><name pos:line="3618" pos:column="13">IDebugComPlusSnapshot2</name> <type:modifier pos:line="3618" pos:column="36">*</type:modifier></type> <name pos:line="3618" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="3619" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3619" pos:column="25">__RPC__out</name> <name pos:line="3619" pos:column="36">ULONG32</name> <type:modifier pos:line="3619" pos:column="44">*</type:modifier></type><name pos:line="3619" pos:column="45">pRoDataRVA</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3621" pos:column="9">HRESULT</name></type> ( <name pos:line="3621" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3621" pos:column="37">*</type:modifier><name pos:line="3621" pos:column="38">GetRwDataRVA</name> )<parameter_list pos:line="3621" pos:column="52">( 
            <param><decl><type><name pos:line="3622" pos:column="13">IDebugComPlusSnapshot2</name> <type:modifier pos:line="3622" pos:column="36">*</type:modifier></type> <name pos:line="3622" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="3623" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3623" pos:column="25">__RPC__out</name> <name pos:line="3623" pos:column="36">ULONG32</name> <type:modifier pos:line="3623" pos:column="44">*</type:modifier></type><name pos:line="3623" pos:column="45">pRwDataRVA</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3625" pos:column="9">HRESULT</name> <argument_list pos:line="3625" pos:column="17">( <argument pos:line="3625" pos:column="19">STDMETHODCALLTYPE *SetPEBytes</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3625" pos:column="50">(</op:operator> 
            <name pos:line="3626" pos:column="13">IDebugComPlusSnapshot2</name> <op:operator pos:line="3626" pos:column="36">*</op:operator> <name pos:line="3626" pos:column="38">This</name><op:operator pos:line="3626" pos:column="42">,</op:operator>
            <comment type="block" pos:line="3627" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="3627" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="3627" pos:column="65">(<argument pos:line="3627" pos:column="66">dwBytes</argument>, <argument pos:line="3627" pos:column="75">dwBytes</argument>)</argument_list></macro> <name pos:line="3627" pos:column="84">BYTE</name> <op:operator pos:line="3627" pos:column="89">*</op:operator><name pos:line="3627" pos:column="90">pBytes</name><op:operator pos:line="3627" pos:column="96">,</op:operator>
            <comment type="block" pos:line="3628" pos:column="13">/* [in] */</comment> <name pos:line="3628" pos:column="24">DWORD</name> <name pos:line="3628" pos:column="30">dwBytes</name><op:operator pos:line="3628" pos:column="37">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="3630" pos:column="9">HRESULT</name> <argument_list pos:line="3630" pos:column="17">( <argument pos:line="3630" pos:column="19">STDMETHODCALLTYPE *SetILMap</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3630" pos:column="48">(</op:operator> 
            <name pos:line="3631" pos:column="13">IDebugComPlusSnapshot2</name> <op:operator pos:line="3631" pos:column="36">*</op:operator> <name pos:line="3631" pos:column="38">This</name><op:operator pos:line="3631" pos:column="42">,</op:operator>
            <comment type="block" pos:line="3632" pos:column="13">/* [in] */</comment> <name pos:line="3632" pos:column="24">DWORD</name> <name pos:line="3632" pos:column="30">mdFunction</name><op:operator pos:line="3632" pos:column="40">,</op:operator>
            <comment type="block" pos:line="3633" pos:column="13">/* [in] */</comment> <name pos:line="3633" pos:column="24">ULONG</name> <name pos:line="3633" pos:column="30">cMapSize</name><op:operator pos:line="3633" pos:column="38">,</op:operator>
            <comment type="block" pos:line="3634" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3634" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3634" pos:column="54">(<argument pos:line="3634" pos:column="55">cMapSize</argument>)</argument_list></macro> <name pos:line="3634" pos:column="65">IL_MAP</name> <name><name pos:line="3634" pos:column="72">map</name><index pos:line="3634" pos:column="75">[  ]</index></name><op:operator pos:line="3634" pos:column="79">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="3636" pos:column="9">HRESULT</name> <argument_list pos:line="3636" pos:column="17">( <argument pos:line="3636" pos:column="19">STDMETHODCALLTYPE *SetSymbolBytes</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3636" pos:column="54">(</op:operator> 
            <name pos:line="3637" pos:column="13">IDebugComPlusSnapshot2</name> <op:operator pos:line="3637" pos:column="36">*</op:operator> <name pos:line="3637" pos:column="38">This</name><op:operator pos:line="3637" pos:column="42">,</op:operator>
            <comment type="block" pos:line="3638" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="3638" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="3638" pos:column="65">(<argument pos:line="3638" pos:column="66">dwBytes</argument>, <argument pos:line="3638" pos:column="75">dwBytes</argument>)</argument_list></macro> <name pos:line="3638" pos:column="84">BYTE</name> <op:operator pos:line="3638" pos:column="89">*</op:operator><name pos:line="3638" pos:column="90">pBytes</name><op:operator pos:line="3638" pos:column="96">,</op:operator>
            <comment type="block" pos:line="3639" pos:column="13">/* [in] */</comment> <name pos:line="3639" pos:column="24">DWORD</name> <name pos:line="3639" pos:column="30">dwBytes</name><op:operator pos:line="3639" pos:column="37">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3641" pos:column="9">HRESULT</name></type> ( <name pos:line="3641" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3641" pos:column="37">*</type:modifier><name pos:line="3641" pos:column="38">GetSymbolProvider</name> )<parameter_list pos:line="3641" pos:column="57">( 
            <param><decl><type><name pos:line="3642" pos:column="13">IDebugComPlusSnapshot2</name> <type:modifier pos:line="3642" pos:column="36">*</type:modifier></type> <name pos:line="3642" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="3643" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3643" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3643" pos:column="46">IDebugComPlusSymbolProvider</name> <type:modifier pos:line="3643" pos:column="74">*</type:modifier><type:modifier pos:line="3643" pos:column="75">*</type:modifier></type><name pos:line="3643" pos:column="76">ppSym</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3645" pos:column="9">HRESULT</name></type> ( <name pos:line="3645" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3645" pos:column="37">*</type:modifier><name pos:line="3645" pos:column="38">GetAppDomainAndModuleIDs</name> )<parameter_list pos:line="3645" pos:column="64">( 
            <param><decl><type><name pos:line="3646" pos:column="13">IDebugComPlusSnapshot2</name> <type:modifier pos:line="3646" pos:column="36">*</type:modifier></type> <name pos:line="3646" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="3647" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3647" pos:column="25">__RPC__out</name> <name pos:line="3647" pos:column="36">ULONG32</name> <type:modifier pos:line="3647" pos:column="44">*</type:modifier></type><name pos:line="3647" pos:column="45">pulAppDomainID</name></decl></param>,
            <comment type="block" pos:line="3648" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3648" pos:column="25">__RPC__out</name> <name pos:line="3648" pos:column="36">GUID</name> <type:modifier pos:line="3648" pos:column="41">*</type:modifier></type><name pos:line="3648" pos:column="42">pguidModule</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3650" pos:column="9">HRESULT</name></type> ( <name pos:line="3650" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3650" pos:column="37">*</type:modifier><name pos:line="3650" pos:column="38">RequestILMap</name> )<parameter_list pos:line="3650" pos:column="52">( 
            <param><decl><type><name pos:line="3651" pos:column="13">IDebugComPlusSnapshot2</name> <type:modifier pos:line="3651" pos:column="36">*</type:modifier></type> <name pos:line="3651" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="3652" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3652" pos:column="24">DWORD</name></type> <name pos:line="3652" pos:column="30">mdFunction</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3654" pos:column="9">HRESULT</name> <argument_list pos:line="3654" pos:column="17">( <argument pos:line="3654" pos:column="19">STDMETHODCALLTYPE *CreateILMaps</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3654" pos:column="52">(</op:operator> 
            <name pos:line="3655" pos:column="13">IDebugComPlusSnapshot2</name> <op:operator pos:line="3655" pos:column="36">*</op:operator> <name pos:line="3655" pos:column="38">This</name><op:operator pos:line="3655" pos:column="42">,</op:operator>
            <comment type="block" pos:line="3656" pos:column="13">/* [in] */</comment> <name pos:line="3656" pos:column="24">ULONG</name> <name pos:line="3656" pos:column="30">in_NoOfLineMaps</name><op:operator pos:line="3656" pos:column="45">,</op:operator>
            <comment type="block" pos:line="3657" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3657" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3657" pos:column="54">(<argument pos:line="3657" pos:column="55">in_NoOfLineMaps</argument>)</argument_list></macro> <name pos:line="3657" pos:column="72">IDebugENCLineMap</name> <op:operator pos:line="3657" pos:column="89">*</op:operator><op:operator pos:line="3657" pos:column="90">*</op:operator><name pos:line="3657" pos:column="91">in_ArrayOfLineMaps</name><op:operator pos:line="3657" pos:column="109">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="3659" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3660" pos:column="7">IDebugComPlusSnapshot2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3662" pos:column="5">interface</name></type> <name pos:line="3662" pos:column="15">IDebugComPlusSnapshot2</name>
    <argument_list pos:line="3663" pos:column="5">{
        <argument><expr><name pos:line="3664" pos:column="9">CONST_VTBL</name> struct <name pos:line="3664" pos:column="27">IDebugComPlusSnapshot2Vtbl</name> <op:operator pos:line="3664" pos:column="54">*</op:operator><name pos:line="3664" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3669" pos:column="1">#<cpp:directive pos:line="3669" pos:column="2">ifdef</cpp:directive> <name pos:line="3669" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3672" pos:column="1">#<cpp:directive pos:line="3672" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3672" pos:column="9">IDebugComPlusSnapshot2_QueryInterface</name><parameter_list pos:line="3672" pos:column="46">(<param><type><name pos:line="3672" pos:column="47">This</name></type></param>,<param><type><name pos:line="3672" pos:column="52">riid</name></type></param>,<param><type><name pos:line="3672" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3673" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3675" pos:column="1">#<cpp:directive pos:line="3675" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3675" pos:column="9">IDebugComPlusSnapshot2_AddRef</name><parameter_list pos:line="3675" pos:column="38">(<param><type><name pos:line="3675" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3676" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3678" pos:column="1">#<cpp:directive pos:line="3678" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3678" pos:column="9">IDebugComPlusSnapshot2_Release</name><parameter_list pos:line="3678" pos:column="39">(<param><type><name pos:line="3678" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3679" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3682" pos:column="1">#<cpp:directive pos:line="3682" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3682" pos:column="9">IDebugComPlusSnapshot2_CopyMetaData</name><parameter_list pos:line="3682" pos:column="44">(<param><type><name pos:line="3682" pos:column="45">This</name></type></param>,<param><type><name pos:line="3682" pos:column="50">pIStream</name></type></param>,<param><type><name pos:line="3682" pos:column="59">pMvid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3683" pos:column="5">( (This)-&gt;lpVtbl -&gt; CopyMetaData(This,pIStream,pMvid) )</cpp:value></cpp:define> 

<cpp:define pos:line="3685" pos:column="1">#<cpp:directive pos:line="3685" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3685" pos:column="9">IDebugComPlusSnapshot2_GetMvid</name><parameter_list pos:line="3685" pos:column="39">(<param><type><name pos:line="3685" pos:column="40">This</name></type></param>,<param><type><name pos:line="3685" pos:column="45">pMvid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3686" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMvid(This,pMvid) )</cpp:value></cpp:define> 

<cpp:define pos:line="3688" pos:column="1">#<cpp:directive pos:line="3688" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3688" pos:column="9">IDebugComPlusSnapshot2_GetRoDataRVA</name><parameter_list pos:line="3688" pos:column="44">(<param><type><name pos:line="3688" pos:column="45">This</name></type></param>,<param><type><name pos:line="3688" pos:column="50">pRoDataRVA</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3689" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRoDataRVA(This,pRoDataRVA) )</cpp:value></cpp:define> 

<cpp:define pos:line="3691" pos:column="1">#<cpp:directive pos:line="3691" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3691" pos:column="9">IDebugComPlusSnapshot2_GetRwDataRVA</name><parameter_list pos:line="3691" pos:column="44">(<param><type><name pos:line="3691" pos:column="45">This</name></type></param>,<param><type><name pos:line="3691" pos:column="50">pRwDataRVA</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3692" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRwDataRVA(This,pRwDataRVA) )</cpp:value></cpp:define> 

<cpp:define pos:line="3694" pos:column="1">#<cpp:directive pos:line="3694" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3694" pos:column="9">IDebugComPlusSnapshot2_SetPEBytes</name><parameter_list pos:line="3694" pos:column="42">(<param><type><name pos:line="3694" pos:column="43">This</name></type></param>,<param><type><name pos:line="3694" pos:column="48">pBytes</name></type></param>,<param><type><name pos:line="3694" pos:column="55">dwBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3695" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetPEBytes(This,pBytes,dwBytes) )</cpp:value></cpp:define> 

<cpp:define pos:line="3697" pos:column="1">#<cpp:directive pos:line="3697" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3697" pos:column="9">IDebugComPlusSnapshot2_SetILMap</name><parameter_list pos:line="3697" pos:column="40">(<param><type><name pos:line="3697" pos:column="41">This</name></type></param>,<param><type><name pos:line="3697" pos:column="46">mdFunction</name></type></param>,<param><type><name pos:line="3697" pos:column="57">cMapSize</name></type></param>,<param><type><name pos:line="3697" pos:column="66">map</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3698" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetILMap(This,mdFunction,cMapSize,map) )</cpp:value></cpp:define> 

<cpp:define pos:line="3700" pos:column="1">#<cpp:directive pos:line="3700" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3700" pos:column="9">IDebugComPlusSnapshot2_SetSymbolBytes</name><parameter_list pos:line="3700" pos:column="46">(<param><type><name pos:line="3700" pos:column="47">This</name></type></param>,<param><type><name pos:line="3700" pos:column="52">pBytes</name></type></param>,<param><type><name pos:line="3700" pos:column="59">dwBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3701" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSymbolBytes(This,pBytes,dwBytes) )</cpp:value></cpp:define> 

<cpp:define pos:line="3703" pos:column="1">#<cpp:directive pos:line="3703" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3703" pos:column="9">IDebugComPlusSnapshot2_GetSymbolProvider</name><parameter_list pos:line="3703" pos:column="49">(<param><type><name pos:line="3703" pos:column="50">This</name></type></param>,<param><type><name pos:line="3703" pos:column="55">ppSym</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3704" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSymbolProvider(This,ppSym) )</cpp:value></cpp:define> 

<cpp:define pos:line="3706" pos:column="1">#<cpp:directive pos:line="3706" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3706" pos:column="9">IDebugComPlusSnapshot2_GetAppDomainAndModuleIDs</name><parameter_list pos:line="3706" pos:column="56">(<param><type><name pos:line="3706" pos:column="57">This</name></type></param>,<param><type><name pos:line="3706" pos:column="62">pulAppDomainID</name></type></param>,<param><type><name pos:line="3706" pos:column="77">pguidModule</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3707" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAppDomainAndModuleIDs(This,pulAppDomainID,pguidModule) )</cpp:value></cpp:define> 

<cpp:define pos:line="3709" pos:column="1">#<cpp:directive pos:line="3709" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3709" pos:column="9">IDebugComPlusSnapshot2_RequestILMap</name><parameter_list pos:line="3709" pos:column="44">(<param><type><name pos:line="3709" pos:column="45">This</name></type></param>,<param><type><name pos:line="3709" pos:column="50">mdFunction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3710" pos:column="5">( (This)-&gt;lpVtbl -&gt; RequestILMap(This,mdFunction) )</cpp:value></cpp:define> 

<cpp:define pos:line="3712" pos:column="1">#<cpp:directive pos:line="3712" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3712" pos:column="9">IDebugComPlusSnapshot2_CreateILMaps</name><parameter_list pos:line="3712" pos:column="44">(<param><type><name pos:line="3712" pos:column="45">This</name></type></param>,<param><type><name pos:line="3712" pos:column="50">in_NoOfLineMaps</name></type></param>,<param><type><name pos:line="3712" pos:column="66">in_ArrayOfLineMaps</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3713" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateILMaps(This,in_NoOfLineMaps,in_ArrayOfLineMaps) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3715" pos:column="1">#<cpp:directive pos:line="3715" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3715" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3718" pos:column="1">#<cpp:directive pos:line="3718" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3718" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3723" pos:column="1">#<cpp:directive pos:line="3723" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3723" pos:column="9">/* __IDebugComPlusSnapshot2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3726" pos:column="1">#<cpp:directive pos:line="3726" pos:column="2">ifndef</cpp:directive> <name pos:line="3726" pos:column="9">__IDebugNativeSnapshot2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3727" pos:column="1">#<cpp:directive pos:line="3727" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3727" pos:column="9">__IDebugNativeSnapshot2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3729" pos:column="1">/* interface IDebugNativeSnapshot2 */</comment>
<comment type="block" pos:line="3730" pos:column="1">/* [unique][uuid][object] */</comment> 

<typedef pos:line="3732" pos:column="1">typedef 
<type><enum pos:line="3733" pos:column="1">enum <name pos:line="3733" pos:column="6">_ENC_NOTIFY</name>
    <block pos:line="3734" pos:column="5">{	<decl><name pos:line="3734" pos:column="9">ENC_NOTIFY_COMPILE_START</name>	<init pos:line="3734" pos:column="41">= <expr><lit:literal type="number" pos:line="3734" pos:column="43">0</lit:literal></expr></init></decl><op:operator pos:line="3734" pos:column="44">,</op:operator>
	<decl><name pos:line="3735" pos:column="9">ENC_NOTIFY_COMPILE_END</name>	<init pos:line="3735" pos:column="33">= <expr><op:operator pos:line="3735" pos:column="35">(</op:operator> <name pos:line="3735" pos:column="37">ENC_NOTIFY_COMPILE_START</name> <op:operator pos:line="3735" pos:column="62">+</op:operator> <lit:literal type="number" pos:line="3735" pos:column="64">1</lit:literal> <op:operator pos:line="3735" pos:column="66">)</op:operator></expr></init></decl> 
    }</block></enum></type> 	<name pos:line="3736" pos:column="9">ENC_NOTIFY</name>;</typedef>


<decl_stmt><decl><type><name pos:line="3739" pos:column="1">EXTERN_C</name> <specifier pos:line="3739" pos:column="10">const</specifier> <name pos:line="3739" pos:column="16">IID</name></type> <name pos:line="3739" pos:column="20">IID_IDebugNativeSnapshot2</name></decl>;</decl_stmt>

<cpp:if pos:line="3741" pos:column="1">#<cpp:directive pos:line="3741" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3741" pos:column="5">defined</name><argument_list pos:line="3741" pos:column="12">(<argument><expr><name pos:line="3741" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3741" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3741" pos:column="29">!</op:operator><call><name pos:line="3741" pos:column="30">defined</name><argument_list pos:line="3741" pos:column="37">(<argument><expr><name pos:line="3741" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3743" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3743" pos:column="19">(<argument pos:line="3743" pos:column="20">"461fda3e-bba5-11d2-b10f-00c04f72dc32"</argument>)</argument_list></macro>
    <label><name pos:line="3744" pos:column="5">IDebugNativeSnapshot2</name> :</label> <expr_stmt><expr pos:line="3744" pos:column="29">public <name pos:line="3744" pos:column="36">IUnknown</name>
    <block pos:line="3745" pos:column="5">{
    <expr pos:line="3746" pos:column="5">public<op:operator pos:line="3746" pos:column="11">:</op:operator>
        virtual <name pos:line="3747" pos:column="17">HRESULT</name> <name pos:line="3747" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3747" pos:column="43">HasDependentTargets</name><argument_list pos:line="3747" pos:column="62">( 
            <comment type="block" pos:line="3748" pos:column="13">/* [in] */</comment> <argument pos:line="3748" pos:column="24">__RPC__in LPCOLESTR pszSourcePath</argument>)</argument_list></macro> <op:operator pos:line="3748" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="3748" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="3750" pos:column="9">virtual <name pos:line="3750" pos:column="17">HRESULT</name> <name pos:line="3750" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3750" pos:column="43">EnumDependentImages</name><argument_list pos:line="3750" pos:column="62">( 
            <comment type="block" pos:line="3751" pos:column="13">/* [in] */</comment> <argument pos:line="3751" pos:column="24">__RPC__in LPCOLESTR pszSourcePath</argument>,
            <comment type="block" pos:line="3752" pos:column="13">/* [out] */</comment> <argument pos:line="3752" pos:column="25">__RPC__deref_out_opt IEnumString **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="3752" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="3752" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="3754" pos:column="9">virtual <name pos:line="3754" pos:column="17">HRESULT</name> <name pos:line="3754" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3754" pos:column="43">EnumDependentTargets</name><argument_list pos:line="3754" pos:column="63">( 
            <comment type="block" pos:line="3755" pos:column="13">/* [in] */</comment> <argument pos:line="3755" pos:column="24">ULONG cSrc</argument>,
            <comment type="block" pos:line="3756" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="3756" pos:column="33">__RPC__in_ecount_full(cSrc) LPCOLESTR pszSourcePath[  ]</argument>,
            <comment type="block" pos:line="3757" pos:column="13">/* [out] */</comment> <argument pos:line="3757" pos:column="25">__RPC__deref_out_opt IEnumString **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="3757" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="3757" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="3759" pos:column="9">virtual <name pos:line="3759" pos:column="17">HRESULT</name> <name pos:line="3759" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3759" pos:column="43">GetTargetBuildInfo</name><argument_list pos:line="3759" pos:column="61">( 
            <comment type="block" pos:line="3760" pos:column="13">/* [in] */</comment> <argument pos:line="3760" pos:column="24">__RPC__in LPCOLESTR pszTargetPath</argument>,
            <comment type="block" pos:line="3761" pos:column="13">/* [out] */</comment> <argument pos:line="3761" pos:column="25">__RPC__deref_out_opt BSTR *pbstrSourcePath</argument>,
            <comment type="block" pos:line="3762" pos:column="13">/* [out] */</comment> <argument pos:line="3762" pos:column="25">__RPC__deref_out_opt BSTR *pbstrCommand</argument>,
            <comment type="block" pos:line="3763" pos:column="13">/* [out] */</comment> <argument pos:line="3763" pos:column="25">__RPC__deref_out_opt BSTR *pbstrCommandArgs</argument>,
            <comment type="block" pos:line="3764" pos:column="13">/* [out] */</comment> <argument pos:line="3764" pos:column="25">__RPC__deref_out_opt BSTR *pbstrCurrentDir</argument>)</argument_list></macro> <op:operator pos:line="3764" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="3764" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="3766" pos:column="9">virtual <name pos:line="3766" pos:column="17">HRESULT</name> <name pos:line="3766" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3766" pos:column="43">Notify</name><argument_list pos:line="3766" pos:column="49">( 
            <comment type="block" pos:line="3767" pos:column="13">/* [in] */</comment> <argument pos:line="3767" pos:column="24">ENC_NOTIFY encnotify</argument>)</argument_list></macro> <op:operator pos:line="3767" pos:column="46">=</op:operator> <lit:literal type="number" pos:line="3767" pos:column="48">0</lit:literal></expr>;
        
        <expr pos:line="3769" pos:column="9">virtual <name pos:line="3769" pos:column="17">HRESULT</name> <name pos:line="3769" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3769" pos:column="43">IsTargetEligible</name><argument_list pos:line="3769" pos:column="59">( 
            <comment type="block" pos:line="3770" pos:column="13">/* [in] */</comment> <argument pos:line="3770" pos:column="24">__RPC__in LPCOLESTR pszTargetPath</argument>)</argument_list></macro> <op:operator pos:line="3770" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="3770" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="3772" pos:column="9">virtual <name pos:line="3772" pos:column="17">HRESULT</name> <name pos:line="3772" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3772" pos:column="43">AddRecompiledTarget</name><argument_list pos:line="3772" pos:column="62">( 
            <comment type="block" pos:line="3773" pos:column="13">/* [in] */</comment> <argument pos:line="3773" pos:column="24">__RPC__in LPCOLESTR in_szTargetPath</argument>,
            <comment type="block" pos:line="3774" pos:column="13">/* [in] */</comment> <argument pos:line="3774" pos:column="24">__RPC__in LPCOLESTR in_szSavedTargetPath</argument>)</argument_list></macro> <op:operator pos:line="3774" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="3774" pos:column="68">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3778" pos:column="1">#<cpp:directive pos:line="3778" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3778" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3780" pos:column="5">typedef <type><struct pos:line="3780" pos:column="13">struct <name pos:line="3780" pos:column="20">IDebugNativeSnapshot2Vtbl</name>
    <block pos:line="3781" pos:column="5">{<public type="default" pos:line="3781" pos:column="6">
        <function_decl><type><name pos:line="3782" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3784" pos:column="9">HRESULT</name></type> ( <name pos:line="3784" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3784" pos:column="37">*</type:modifier><name pos:line="3784" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3784" pos:column="54">( 
            <param><decl><type><name pos:line="3785" pos:column="13">IDebugNativeSnapshot2</name> <type:modifier pos:line="3785" pos:column="35">*</type:modifier></type> <name pos:line="3785" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="3786" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3786" pos:column="24">__RPC__in</name> <name pos:line="3786" pos:column="34">REFIID</name></type> <name pos:line="3786" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3787" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3788" pos:column="13">__RPC__deref_out</name>  <name pos:line="3788" pos:column="31">void</name> <type:modifier pos:line="3788" pos:column="36">*</type:modifier><type:modifier pos:line="3788" pos:column="37">*</type:modifier></type><name pos:line="3788" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3790" pos:column="9">ULONG</name></type> ( <name pos:line="3790" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3790" pos:column="35">*</type:modifier><name pos:line="3790" pos:column="36">AddRef</name> )<parameter_list pos:line="3790" pos:column="44">( 
            <param><decl><type><name pos:line="3791" pos:column="13">IDebugNativeSnapshot2</name> <type:modifier pos:line="3791" pos:column="35">*</type:modifier></type> <name pos:line="3791" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3793" pos:column="9">ULONG</name></type> ( <name pos:line="3793" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3793" pos:column="35">*</type:modifier><name pos:line="3793" pos:column="36">Release</name> )<parameter_list pos:line="3793" pos:column="45">( 
            <param><decl><type><name pos:line="3794" pos:column="13">IDebugNativeSnapshot2</name> <type:modifier pos:line="3794" pos:column="35">*</type:modifier></type> <name pos:line="3794" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3796" pos:column="9">HRESULT</name></type> ( <name pos:line="3796" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3796" pos:column="37">*</type:modifier><name pos:line="3796" pos:column="38">HasDependentTargets</name> )<parameter_list pos:line="3796" pos:column="59">( 
            <param><decl><type><name pos:line="3797" pos:column="13">IDebugNativeSnapshot2</name> <type:modifier pos:line="3797" pos:column="35">*</type:modifier></type> <name pos:line="3797" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="3798" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3798" pos:column="24">__RPC__in</name> <name pos:line="3798" pos:column="34">LPCOLESTR</name></type> <name pos:line="3798" pos:column="44">pszSourcePath</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3800" pos:column="9">HRESULT</name></type> ( <name pos:line="3800" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3800" pos:column="37">*</type:modifier><name pos:line="3800" pos:column="38">EnumDependentImages</name> )<parameter_list pos:line="3800" pos:column="59">( 
            <param><decl><type><name pos:line="3801" pos:column="13">IDebugNativeSnapshot2</name> <type:modifier pos:line="3801" pos:column="35">*</type:modifier></type> <name pos:line="3801" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="3802" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3802" pos:column="24">__RPC__in</name> <name pos:line="3802" pos:column="34">LPCOLESTR</name></type> <name pos:line="3802" pos:column="44">pszSourcePath</name></decl></param>,
            <comment type="block" pos:line="3803" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3803" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3803" pos:column="46">IEnumString</name> <type:modifier pos:line="3803" pos:column="58">*</type:modifier><type:modifier pos:line="3803" pos:column="59">*</type:modifier></type><name pos:line="3803" pos:column="60">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3805" pos:column="9">HRESULT</name> <argument_list pos:line="3805" pos:column="17">( <argument pos:line="3805" pos:column="19">STDMETHODCALLTYPE *EnumDependentTargets</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3805" pos:column="60">(</op:operator> 
            <name pos:line="3806" pos:column="13">IDebugNativeSnapshot2</name> <op:operator pos:line="3806" pos:column="35">*</op:operator> <name pos:line="3806" pos:column="37">This</name><op:operator pos:line="3806" pos:column="41">,</op:operator>
            <comment type="block" pos:line="3807" pos:column="13">/* [in] */</comment> <name pos:line="3807" pos:column="24">ULONG</name> <name pos:line="3807" pos:column="30">cSrc</name><op:operator pos:line="3807" pos:column="34">,</op:operator>
            <comment type="block" pos:line="3808" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3808" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3808" pos:column="54">(<argument pos:line="3808" pos:column="55">cSrc</argument>)</argument_list></macro> <name pos:line="3808" pos:column="61">LPCOLESTR</name> <name><name pos:line="3808" pos:column="71">pszSourcePath</name><index pos:line="3808" pos:column="84">[  ]</index></name><op:operator pos:line="3808" pos:column="88">,</op:operator>
            <comment type="block" pos:line="3809" pos:column="13">/* [out] */</comment> <name pos:line="3809" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3809" pos:column="46">IEnumString</name> <op:operator pos:line="3809" pos:column="58">*</op:operator><op:operator pos:line="3809" pos:column="59">*</op:operator><name pos:line="3809" pos:column="60">ppEnum</name><op:operator pos:line="3809" pos:column="66">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3811" pos:column="9">HRESULT</name></type> ( <name pos:line="3811" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3811" pos:column="37">*</type:modifier><name pos:line="3811" pos:column="38">GetTargetBuildInfo</name> )<parameter_list pos:line="3811" pos:column="58">( 
            <param><decl><type><name pos:line="3812" pos:column="13">IDebugNativeSnapshot2</name> <type:modifier pos:line="3812" pos:column="35">*</type:modifier></type> <name pos:line="3812" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="3813" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3813" pos:column="24">__RPC__in</name> <name pos:line="3813" pos:column="34">LPCOLESTR</name></type> <name pos:line="3813" pos:column="44">pszTargetPath</name></decl></param>,
            <comment type="block" pos:line="3814" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3814" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3814" pos:column="46">BSTR</name> <type:modifier pos:line="3814" pos:column="51">*</type:modifier></type><name pos:line="3814" pos:column="52">pbstrSourcePath</name></decl></param>,
            <comment type="block" pos:line="3815" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3815" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3815" pos:column="46">BSTR</name> <type:modifier pos:line="3815" pos:column="51">*</type:modifier></type><name pos:line="3815" pos:column="52">pbstrCommand</name></decl></param>,
            <comment type="block" pos:line="3816" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3816" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3816" pos:column="46">BSTR</name> <type:modifier pos:line="3816" pos:column="51">*</type:modifier></type><name pos:line="3816" pos:column="52">pbstrCommandArgs</name></decl></param>,
            <comment type="block" pos:line="3817" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3817" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3817" pos:column="46">BSTR</name> <type:modifier pos:line="3817" pos:column="51">*</type:modifier></type><name pos:line="3817" pos:column="52">pbstrCurrentDir</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3819" pos:column="9">HRESULT</name></type> ( <name pos:line="3819" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3819" pos:column="37">*</type:modifier><name pos:line="3819" pos:column="38">Notify</name> )<parameter_list pos:line="3819" pos:column="46">( 
            <param><decl><type><name pos:line="3820" pos:column="13">IDebugNativeSnapshot2</name> <type:modifier pos:line="3820" pos:column="35">*</type:modifier></type> <name pos:line="3820" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="3821" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3821" pos:column="24">ENC_NOTIFY</name></type> <name pos:line="3821" pos:column="35">encnotify</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3823" pos:column="9">HRESULT</name></type> ( <name pos:line="3823" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3823" pos:column="37">*</type:modifier><name pos:line="3823" pos:column="38">IsTargetEligible</name> )<parameter_list pos:line="3823" pos:column="56">( 
            <param><decl><type><name pos:line="3824" pos:column="13">IDebugNativeSnapshot2</name> <type:modifier pos:line="3824" pos:column="35">*</type:modifier></type> <name pos:line="3824" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="3825" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3825" pos:column="24">__RPC__in</name> <name pos:line="3825" pos:column="34">LPCOLESTR</name></type> <name pos:line="3825" pos:column="44">pszTargetPath</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3827" pos:column="9">HRESULT</name></type> ( <name pos:line="3827" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3827" pos:column="37">*</type:modifier><name pos:line="3827" pos:column="38">AddRecompiledTarget</name> )<parameter_list pos:line="3827" pos:column="59">( 
            <param><decl><type><name pos:line="3828" pos:column="13">IDebugNativeSnapshot2</name> <type:modifier pos:line="3828" pos:column="35">*</type:modifier></type> <name pos:line="3828" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="3829" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3829" pos:column="24">__RPC__in</name> <name pos:line="3829" pos:column="34">LPCOLESTR</name></type> <name pos:line="3829" pos:column="44">in_szTargetPath</name></decl></param>,
            <comment type="block" pos:line="3830" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3830" pos:column="24">__RPC__in</name> <name pos:line="3830" pos:column="34">LPCOLESTR</name></type> <name pos:line="3830" pos:column="44">in_szSavedTargetPath</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3832" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3833" pos:column="7">IDebugNativeSnapshot2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3835" pos:column="5">interface</name></type> <name pos:line="3835" pos:column="15">IDebugNativeSnapshot2</name>
    <argument_list pos:line="3836" pos:column="5">{
        <argument><expr><name pos:line="3837" pos:column="9">CONST_VTBL</name> struct <name pos:line="3837" pos:column="27">IDebugNativeSnapshot2Vtbl</name> <op:operator pos:line="3837" pos:column="53">*</op:operator><name pos:line="3837" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3842" pos:column="1">#<cpp:directive pos:line="3842" pos:column="2">ifdef</cpp:directive> <name pos:line="3842" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3845" pos:column="1">#<cpp:directive pos:line="3845" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3845" pos:column="9">IDebugNativeSnapshot2_QueryInterface</name><parameter_list pos:line="3845" pos:column="45">(<param><type><name pos:line="3845" pos:column="46">This</name></type></param>,<param><type><name pos:line="3845" pos:column="51">riid</name></type></param>,<param><type><name pos:line="3845" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3846" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3848" pos:column="1">#<cpp:directive pos:line="3848" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3848" pos:column="9">IDebugNativeSnapshot2_AddRef</name><parameter_list pos:line="3848" pos:column="37">(<param><type><name pos:line="3848" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3849" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3851" pos:column="1">#<cpp:directive pos:line="3851" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3851" pos:column="9">IDebugNativeSnapshot2_Release</name><parameter_list pos:line="3851" pos:column="38">(<param><type><name pos:line="3851" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3852" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3855" pos:column="1">#<cpp:directive pos:line="3855" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3855" pos:column="9">IDebugNativeSnapshot2_HasDependentTargets</name><parameter_list pos:line="3855" pos:column="50">(<param><type><name pos:line="3855" pos:column="51">This</name></type></param>,<param><type><name pos:line="3855" pos:column="56">pszSourcePath</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3856" pos:column="5">( (This)-&gt;lpVtbl -&gt; HasDependentTargets(This,pszSourcePath) )</cpp:value></cpp:define> 

<cpp:define pos:line="3858" pos:column="1">#<cpp:directive pos:line="3858" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3858" pos:column="9">IDebugNativeSnapshot2_EnumDependentImages</name><parameter_list pos:line="3858" pos:column="50">(<param><type><name pos:line="3858" pos:column="51">This</name></type></param>,<param><type><name pos:line="3858" pos:column="56">pszSourcePath</name></type></param>,<param><type><name pos:line="3858" pos:column="70">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3859" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumDependentImages(This,pszSourcePath,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="3861" pos:column="1">#<cpp:directive pos:line="3861" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3861" pos:column="9">IDebugNativeSnapshot2_EnumDependentTargets</name><parameter_list pos:line="3861" pos:column="51">(<param><type><name pos:line="3861" pos:column="52">This</name></type></param>,<param><type><name pos:line="3861" pos:column="57">cSrc</name></type></param>,<param><type><name pos:line="3861" pos:column="62">pszSourcePath</name></type></param>,<param><type><name pos:line="3861" pos:column="76">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3862" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnumDependentTargets(This,cSrc,pszSourcePath,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="3864" pos:column="1">#<cpp:directive pos:line="3864" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3864" pos:column="9">IDebugNativeSnapshot2_GetTargetBuildInfo</name><parameter_list pos:line="3864" pos:column="49">(<param><type><name pos:line="3864" pos:column="50">This</name></type></param>,<param><type><name pos:line="3864" pos:column="55">pszTargetPath</name></type></param>,<param><type><name pos:line="3864" pos:column="69">pbstrSourcePath</name></type></param>,<param><type><name pos:line="3864" pos:column="85">pbstrCommand</name></type></param>,<param><type><name pos:line="3864" pos:column="98">pbstrCommandArgs</name></type></param>,<param><type><name pos:line="3864" pos:column="115">pbstrCurrentDir</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3865" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTargetBuildInfo(This,pszTargetPath,pbstrSourcePath,pbstrCommand,pbstrCommandArgs,pbstrCurrentDir) )</cpp:value></cpp:define> 

<cpp:define pos:line="3867" pos:column="1">#<cpp:directive pos:line="3867" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3867" pos:column="9">IDebugNativeSnapshot2_Notify</name><parameter_list pos:line="3867" pos:column="37">(<param><type><name pos:line="3867" pos:column="38">This</name></type></param>,<param><type><name pos:line="3867" pos:column="43">encnotify</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3868" pos:column="5">( (This)-&gt;lpVtbl -&gt; Notify(This,encnotify) )</cpp:value></cpp:define> 

<cpp:define pos:line="3870" pos:column="1">#<cpp:directive pos:line="3870" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3870" pos:column="9">IDebugNativeSnapshot2_IsTargetEligible</name><parameter_list pos:line="3870" pos:column="47">(<param><type><name pos:line="3870" pos:column="48">This</name></type></param>,<param><type><name pos:line="3870" pos:column="53">pszTargetPath</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3871" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsTargetEligible(This,pszTargetPath) )</cpp:value></cpp:define> 

<cpp:define pos:line="3873" pos:column="1">#<cpp:directive pos:line="3873" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3873" pos:column="9">IDebugNativeSnapshot2_AddRecompiledTarget</name><parameter_list pos:line="3873" pos:column="50">(<param><type><name pos:line="3873" pos:column="51">This</name></type></param>,<param><type><name pos:line="3873" pos:column="56">in_szTargetPath</name></type></param>,<param><type><name pos:line="3873" pos:column="72">in_szSavedTargetPath</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3874" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRecompiledTarget(This,in_szTargetPath,in_szSavedTargetPath) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3876" pos:column="1">#<cpp:directive pos:line="3876" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3876" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3879" pos:column="1">#<cpp:directive pos:line="3879" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3879" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3884" pos:column="1">#<cpp:directive pos:line="3884" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3884" pos:column="9">/* __IDebugNativeSnapshot2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3887" pos:column="1">#<cpp:directive pos:line="3887" pos:column="2">ifndef</cpp:directive> <name pos:line="3887" pos:column="9">__IDebugENCStackFrame2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3888" pos:column="1">#<cpp:directive pos:line="3888" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3888" pos:column="9">__IDebugENCStackFrame2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3890" pos:column="1">/* interface IDebugENCStackFrame2 */</comment>
<comment type="block" pos:line="3891" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3894" pos:column="1">EXTERN_C</name> <specifier pos:line="3894" pos:column="10">const</specifier> <name pos:line="3894" pos:column="16">IID</name></type> <name pos:line="3894" pos:column="20">IID_IDebugENCStackFrame2</name></decl>;</decl_stmt>

<cpp:if pos:line="3896" pos:column="1">#<cpp:directive pos:line="3896" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3896" pos:column="5">defined</name><argument_list pos:line="3896" pos:column="12">(<argument><expr><name pos:line="3896" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3896" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3896" pos:column="29">!</op:operator><call><name pos:line="3896" pos:column="30">defined</name><argument_list pos:line="3896" pos:column="37">(<argument><expr><name pos:line="3896" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3898" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3898" pos:column="19">(<argument pos:line="3898" pos:column="20">"B3C64D7F-DB9D-47c7-B479-C579C7F07103"</argument>)</argument_list></macro>
    <label><name pos:line="3899" pos:column="5">IDebugENCStackFrame2</name> :</label> <expr_stmt><expr pos:line="3899" pos:column="28">public <name pos:line="3899" pos:column="35">IUnknown</name>
    <block pos:line="3900" pos:column="5">{
    <expr pos:line="3901" pos:column="5">public<op:operator pos:line="3901" pos:column="11">:</op:operator>
        virtual <name pos:line="3902" pos:column="17">HRESULT</name> <name pos:line="3902" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3902" pos:column="43">GetAllLocalsProperty</name><argument_list pos:line="3902" pos:column="63">( 
            <comment type="block" pos:line="3903" pos:column="13">/* [out] */</comment> <argument pos:line="3903" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppProperty</argument>)</argument_list></macro> <op:operator pos:line="3903" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="3903" pos:column="78">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3907" pos:column="1">#<cpp:directive pos:line="3907" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3907" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3909" pos:column="5">typedef <type><struct pos:line="3909" pos:column="13">struct <name pos:line="3909" pos:column="20">IDebugENCStackFrame2Vtbl</name>
    <block pos:line="3910" pos:column="5">{<public type="default" pos:line="3910" pos:column="6">
        <function_decl><type><name pos:line="3911" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3913" pos:column="9">HRESULT</name></type> ( <name pos:line="3913" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3913" pos:column="37">*</type:modifier><name pos:line="3913" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3913" pos:column="54">( 
            <param><decl><type><name pos:line="3914" pos:column="13">IDebugENCStackFrame2</name> <type:modifier pos:line="3914" pos:column="34">*</type:modifier></type> <name pos:line="3914" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3915" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3915" pos:column="24">__RPC__in</name> <name pos:line="3915" pos:column="34">REFIID</name></type> <name pos:line="3915" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3916" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3917" pos:column="13">__RPC__deref_out</name>  <name pos:line="3917" pos:column="31">void</name> <type:modifier pos:line="3917" pos:column="36">*</type:modifier><type:modifier pos:line="3917" pos:column="37">*</type:modifier></type><name pos:line="3917" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3919" pos:column="9">ULONG</name></type> ( <name pos:line="3919" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3919" pos:column="35">*</type:modifier><name pos:line="3919" pos:column="36">AddRef</name> )<parameter_list pos:line="3919" pos:column="44">( 
            <param><decl><type><name pos:line="3920" pos:column="13">IDebugENCStackFrame2</name> <type:modifier pos:line="3920" pos:column="34">*</type:modifier></type> <name pos:line="3920" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3922" pos:column="9">ULONG</name></type> ( <name pos:line="3922" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3922" pos:column="35">*</type:modifier><name pos:line="3922" pos:column="36">Release</name> )<parameter_list pos:line="3922" pos:column="45">( 
            <param><decl><type><name pos:line="3923" pos:column="13">IDebugENCStackFrame2</name> <type:modifier pos:line="3923" pos:column="34">*</type:modifier></type> <name pos:line="3923" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3925" pos:column="9">HRESULT</name></type> ( <name pos:line="3925" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3925" pos:column="37">*</type:modifier><name pos:line="3925" pos:column="38">GetAllLocalsProperty</name> )<parameter_list pos:line="3925" pos:column="60">( 
            <param><decl><type><name pos:line="3926" pos:column="13">IDebugENCStackFrame2</name> <type:modifier pos:line="3926" pos:column="34">*</type:modifier></type> <name pos:line="3926" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3927" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3927" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3927" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="3927" pos:column="62">*</type:modifier><type:modifier pos:line="3927" pos:column="63">*</type:modifier></type><name pos:line="3927" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3929" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3930" pos:column="7">IDebugENCStackFrame2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3932" pos:column="5">interface</name></type> <name pos:line="3932" pos:column="15">IDebugENCStackFrame2</name>
    <argument_list pos:line="3933" pos:column="5">{
        <argument><expr><name pos:line="3934" pos:column="9">CONST_VTBL</name> struct <name pos:line="3934" pos:column="27">IDebugENCStackFrame2Vtbl</name> <op:operator pos:line="3934" pos:column="52">*</op:operator><name pos:line="3934" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3939" pos:column="1">#<cpp:directive pos:line="3939" pos:column="2">ifdef</cpp:directive> <name pos:line="3939" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3942" pos:column="1">#<cpp:directive pos:line="3942" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3942" pos:column="9">IDebugENCStackFrame2_QueryInterface</name><parameter_list pos:line="3942" pos:column="44">(<param><type><name pos:line="3942" pos:column="45">This</name></type></param>,<param><type><name pos:line="3942" pos:column="50">riid</name></type></param>,<param><type><name pos:line="3942" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3943" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3945" pos:column="1">#<cpp:directive pos:line="3945" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3945" pos:column="9">IDebugENCStackFrame2_AddRef</name><parameter_list pos:line="3945" pos:column="36">(<param><type><name pos:line="3945" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3946" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3948" pos:column="1">#<cpp:directive pos:line="3948" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3948" pos:column="9">IDebugENCStackFrame2_Release</name><parameter_list pos:line="3948" pos:column="37">(<param><type><name pos:line="3948" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3949" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3952" pos:column="1">#<cpp:directive pos:line="3952" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3952" pos:column="9">IDebugENCStackFrame2_GetAllLocalsProperty</name><parameter_list pos:line="3952" pos:column="50">(<param><type><name pos:line="3952" pos:column="51">This</name></type></param>,<param><type><name pos:line="3952" pos:column="56">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3953" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAllLocalsProperty(This,ppProperty) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3955" pos:column="1">#<cpp:directive pos:line="3955" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3955" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3958" pos:column="1">#<cpp:directive pos:line="3958" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3958" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3963" pos:column="1">#<cpp:directive pos:line="3963" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3963" pos:column="9">/* __IDebugENCStackFrame2_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="3966" pos:column="1">/* interface __MIDL_itf_enc_0000_0027 */</comment>
<comment type="block" pos:line="3967" pos:column="1">/* [local] */</comment> 

<typedef pos:line="3969" pos:column="1">typedef <type><name pos:line="3969" pos:column="9">INT32</name></type> <name pos:line="3969" pos:column="15">_mdToken</name>;</typedef>

<cpp:pragma pos:line="3971" pos:column="1">#<cpp:directive pos:line="3971" pos:column="2">pragma</cpp:directive> warning(push)</cpp:pragma>
<cpp:pragma pos:line="3972" pos:column="1">#<cpp:directive pos:line="3972" pos:column="2">pragma</cpp:directive> warning(disable:28718)</cpp:pragma>


<decl_stmt><decl><type><specifier pos:line="3975" pos:column="1">extern</specifier> <name pos:line="3975" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="3975" pos:column="22">__MIDL_itf_enc_0000_0027_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="3976" pos:column="1">extern</specifier> <name pos:line="3976" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="3976" pos:column="22">__MIDL_itf_enc_0000_0027_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="3978" pos:column="1">#<cpp:directive pos:line="3978" pos:column="2">ifndef</cpp:directive> <name pos:line="3978" pos:column="9">__IDebugMetaDataEmit2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3979" pos:column="1">#<cpp:directive pos:line="3979" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3979" pos:column="9">__IDebugMetaDataEmit2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3981" pos:column="1">/* interface IDebugMetaDataEmit2 */</comment>
<comment type="block" pos:line="3982" pos:column="1">/* [unique][uuid][object] */</comment> 

<typedef pos:line="3984" pos:column="1">typedef <type><struct pos:line="3984" pos:column="9">struct <name pos:line="3984" pos:column="16">_FIELD_OFFSET</name>
    <block pos:line="3985" pos:column="5">{<public type="default" pos:line="3985" pos:column="6">
    <decl_stmt><decl><type><name pos:line="3986" pos:column="5">_mdToken</name></type> <name pos:line="3986" pos:column="14">ridOfField</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3987" pos:column="5">ULONG</name></type> <name pos:line="3987" pos:column="11">ulOffset</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="3988" pos:column="9">FIELD_OFFSET</name>;</typedef>

<typedef pos:line="3990" pos:column="1">typedef <type><struct pos:line="3990" pos:column="9">struct <name pos:line="3990" pos:column="16">_IMAGE_FIXUPENTRY</name>
    <block pos:line="3991" pos:column="5">{<public type="default" pos:line="3991" pos:column="6">
    <decl_stmt><decl><type><name pos:line="3992" pos:column="5">ULONG</name></type> <name pos:line="3992" pos:column="11">ulRVA</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="3993" pos:column="5">ULONG</name></type> <name pos:line="3993" pos:column="11">Count</name></decl>;</decl_stmt>
    </public>}</block></struct></type> 	<name pos:line="3994" pos:column="9">IMAGE_FIXUPENTRY</name>;</typedef>


<decl_stmt><decl><type><name pos:line="3997" pos:column="1">EXTERN_C</name> <specifier pos:line="3997" pos:column="10">const</specifier> <name pos:line="3997" pos:column="16">IID</name></type> <name pos:line="3997" pos:column="20">IID_IDebugMetaDataEmit2</name></decl>;</decl_stmt>

<cpp:if pos:line="3999" pos:column="1">#<cpp:directive pos:line="3999" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3999" pos:column="5">defined</name><argument_list pos:line="3999" pos:column="12">(<argument><expr><name pos:line="3999" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3999" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3999" pos:column="29">!</op:operator><call><name pos:line="3999" pos:column="30">defined</name><argument_list pos:line="3999" pos:column="37">(<argument><expr><name pos:line="3999" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4001" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4001" pos:column="19">(<argument pos:line="4001" pos:column="20">"f6f94d21-78c2-11d2-8ffe-00c04fa38314"</argument>)</argument_list></macro>
    <label><name pos:line="4002" pos:column="5">IDebugMetaDataEmit2</name> :</label> <expr_stmt><expr pos:line="4002" pos:column="27">public <name pos:line="4002" pos:column="34">IUnknown</name>
    <block pos:line="4003" pos:column="5">{
    <expr pos:line="4004" pos:column="5">public<op:operator pos:line="4004" pos:column="11">:</op:operator>
        virtual <name pos:line="4005" pos:column="17">HRESULT</name> <name pos:line="4005" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4005" pos:column="43">SetModuleProps</name><argument_list pos:line="4005" pos:column="57">( 
            <comment type="block" pos:line="4006" pos:column="13">/* [in] */</comment> <argument pos:line="4006" pos:column="24">__RPC__in LPOLESTR szName</argument>,
            <comment type="block" pos:line="4007" pos:column="13">/* [in] */</comment> <argument pos:line="4007" pos:column="24">__RPC__in GUID *ppid</argument>,
            <comment type="block" pos:line="4008" pos:column="13">/* [in] */</comment> <argument pos:line="4008" pos:column="24">LCID lcid</argument>)</argument_list></macro> <op:operator pos:line="4008" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="4008" pos:column="37">0</lit:literal></expr>;
        
        <expr pos:line="4010" pos:column="9">virtual <name pos:line="4010" pos:column="17">HRESULT</name> <name pos:line="4010" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4010" pos:column="43">Save</name><argument_list pos:line="4010" pos:column="47">( 
            <comment type="block" pos:line="4011" pos:column="13">/* [in] */</comment> <argument pos:line="4011" pos:column="24">__RPC__in LPOLESTR szFile</argument>,
            <comment type="block" pos:line="4012" pos:column="13">/* [in] */</comment> <argument pos:line="4012" pos:column="24">DWORD dwSaveFlags</argument>)</argument_list></macro> <op:operator pos:line="4012" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="4012" pos:column="45">0</lit:literal></expr>;
        
        <expr pos:line="4014" pos:column="9">virtual <name pos:line="4014" pos:column="17">HRESULT</name> <name pos:line="4014" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4014" pos:column="43">SaveToStream</name><argument_list pos:line="4014" pos:column="55">( 
            <comment type="block" pos:line="4015" pos:column="13">/* [in] */</comment> <argument pos:line="4015" pos:column="24">__RPC__in_opt IStream *pIStream</argument>,
            <comment type="block" pos:line="4016" pos:column="13">/* [in] */</comment> <argument pos:line="4016" pos:column="24">DWORD dwSaveFlags</argument>)</argument_list></macro> <op:operator pos:line="4016" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="4016" pos:column="45">0</lit:literal></expr>;
        
        <expr pos:line="4018" pos:column="9">virtual <name pos:line="4018" pos:column="17">HRESULT</name> <name pos:line="4018" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4018" pos:column="43">GetSaveSize</name><argument_list pos:line="4018" pos:column="54">( 
            <comment type="block" pos:line="4019" pos:column="13">/* [in] */</comment> <argument pos:line="4019" pos:column="24">DWORD fSave</argument>,
            <comment type="block" pos:line="4020" pos:column="13">/* [out] */</comment> <argument pos:line="4020" pos:column="25">__RPC__out DWORD *pdwSaveSize</argument>)</argument_list></macro> <op:operator pos:line="4020" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="4020" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="4022" pos:column="9">virtual <name pos:line="4022" pos:column="17">HRESULT</name> <name pos:line="4022" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4022" pos:column="43">DefineCustomValueAsBlob</name><argument_list pos:line="4022" pos:column="66">( 
            <comment type="block" pos:line="4023" pos:column="13">/* [in] */</comment> <argument pos:line="4023" pos:column="24">_mdToken tkObj</argument>,
            <comment type="block" pos:line="4024" pos:column="13">/* [in] */</comment> <argument pos:line="4024" pos:column="24">__RPC__in LPOLESTR szName</argument>,
            <comment type="block" pos:line="4025" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="4025" pos:column="33">__RPC__in_ecount_full(cbCustomValue) BYTE *pCustomValue</argument>,
            <comment type="block" pos:line="4026" pos:column="13">/* [in] */</comment> <argument pos:line="4026" pos:column="24">ULONG cbCustomValue</argument>,
            <comment type="block" pos:line="4027" pos:column="13">/* [in] */</comment> <argument pos:line="4027" pos:column="24">__RPC__in _mdToken *pcv</argument>)</argument_list></macro> <op:operator pos:line="4027" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="4027" pos:column="51">0</lit:literal></expr>;
        
        <expr pos:line="4029" pos:column="9">virtual <name pos:line="4029" pos:column="17">HRESULT</name> <name pos:line="4029" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4029" pos:column="43">DefineTypeDef</name><argument_list pos:line="4029" pos:column="56">( 
            <comment type="block" pos:line="4030" pos:column="13">/* [in] */</comment> <argument pos:line="4030" pos:column="24">__RPC__in LPOLESTR szNamespace</argument>,
            <comment type="block" pos:line="4031" pos:column="13">/* [in] */</comment> <argument pos:line="4031" pos:column="24">__RPC__in LPOLESTR szTypeDef</argument>,
            <comment type="block" pos:line="4032" pos:column="13">/* [in] */</comment> <argument pos:line="4032" pos:column="24">__RPC__in GUID *pguid</argument>,
            <comment type="block" pos:line="4033" pos:column="13">/* [in] */</comment> <argument pos:line="4033" pos:column="24">__RPC__in INT64 *pVer</argument>,
            <comment type="block" pos:line="4034" pos:column="13">/* [in] */</comment> <argument pos:line="4034" pos:column="24">DWORD dwTypeDefFlags</argument>,
            <comment type="block" pos:line="4035" pos:column="13">/* [in] */</comment> <argument pos:line="4035" pos:column="24">_mdToken tkExtends</argument>,
            <comment type="block" pos:line="4036" pos:column="13">/* [in] */</comment> <argument pos:line="4036" pos:column="24">DWORD dwExtendsFlags</argument>,
            <comment type="block" pos:line="4037" pos:column="13">/* [in] */</comment> <argument pos:line="4037" pos:column="24">DWORD dwImplements</argument>,
            <comment type="block" pos:line="4038" pos:column="13">/* [length_is][size_is][out][in] */</comment> <argument pos:line="4038" pos:column="49">__RPC__inout_ecount_part(dwImplements, dwImplements) _mdToken rtkImplements[  ]</argument>,
            <comment type="block" pos:line="4039" pos:column="13">/* [in] */</comment> <argument pos:line="4039" pos:column="24">DWORD dwEvents</argument>,
            <comment type="block" pos:line="4040" pos:column="13">/* [length_is][size_is][out][in] */</comment> <argument pos:line="4040" pos:column="49">__RPC__inout_ecount_part(dwEvents, dwEvents) _mdToken rtkEvents[  ]</argument>,
            <comment type="block" pos:line="4041" pos:column="13">/* [out] */</comment> <argument pos:line="4041" pos:column="25">__RPC__out _mdToken *ptd</argument>)</argument_list></macro> <op:operator pos:line="4041" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="4041" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="4043" pos:column="9">virtual <name pos:line="4043" pos:column="17">HRESULT</name> <name pos:line="4043" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4043" pos:column="43">SetTypeDefProps</name><argument_list pos:line="4043" pos:column="58">( 
            <comment type="block" pos:line="4044" pos:column="13">/* [in] */</comment> <argument pos:line="4044" pos:column="24">_mdToken td</argument>,
            <comment type="block" pos:line="4045" pos:column="13">/* [in] */</comment> <argument pos:line="4045" pos:column="24">__RPC__in INT64 *pVer</argument>,
            <comment type="block" pos:line="4046" pos:column="13">/* [in] */</comment> <argument pos:line="4046" pos:column="24">DWORD dwTypeDefFlags</argument>,
            <comment type="block" pos:line="4047" pos:column="13">/* [in] */</comment> <argument pos:line="4047" pos:column="24">_mdToken tkExtends</argument>,
            <comment type="block" pos:line="4048" pos:column="13">/* [in] */</comment> <argument pos:line="4048" pos:column="24">DWORD dwExtendsFlags</argument>,
            <comment type="block" pos:line="4049" pos:column="13">/* [in] */</comment> <argument pos:line="4049" pos:column="24">DWORD dwImplements</argument>,
            <comment type="block" pos:line="4050" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4050" pos:column="44">__RPC__in_ecount_part(dwImplements, dwImplements) _mdToken rtkImplements[  ]</argument>,
            <comment type="block" pos:line="4051" pos:column="13">/* [in] */</comment> <argument pos:line="4051" pos:column="24">DWORD dwEvents</argument>,
            <comment type="block" pos:line="4052" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4052" pos:column="44">__RPC__in_ecount_part(dwEvents, dwEvents) _mdToken rtkEvents[  ]</argument>)</argument_list></macro> <op:operator pos:line="4052" pos:column="110">=</op:operator> <lit:literal type="number" pos:line="4052" pos:column="112">0</lit:literal></expr>;
        
        <expr pos:line="4054" pos:column="9">virtual <name pos:line="4054" pos:column="17">HRESULT</name> <name pos:line="4054" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4054" pos:column="43">SetClassSvcsContext</name><argument_list pos:line="4054" pos:column="62">( 
            <comment type="block" pos:line="4055" pos:column="13">/* [in] */</comment> <argument pos:line="4055" pos:column="24">_mdToken td</argument>,
            <comment type="block" pos:line="4056" pos:column="13">/* [in] */</comment> <argument pos:line="4056" pos:column="24">DWORD dwClassActivateAttr</argument>,
            <comment type="block" pos:line="4057" pos:column="13">/* [in] */</comment> <argument pos:line="4057" pos:column="24">DWORD dwClassThreadAttr</argument>,
            <comment type="block" pos:line="4058" pos:column="13">/* [in] */</comment> <argument pos:line="4058" pos:column="24">DWORD dwXactionAttr</argument>,
            <comment type="block" pos:line="4059" pos:column="13">/* [in] */</comment> <argument pos:line="4059" pos:column="24">DWORD dwSynchAttr</argument>)</argument_list></macro> <op:operator pos:line="4059" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="4059" pos:column="45">0</lit:literal></expr>;
        
        <expr pos:line="4061" pos:column="9">virtual <name pos:line="4061" pos:column="17">HRESULT</name> <name pos:line="4061" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4061" pos:column="43">DefineTypeRefByGUID</name><argument_list pos:line="4061" pos:column="62">( 
            <comment type="block" pos:line="4062" pos:column="13">/* [in] */</comment> <argument pos:line="4062" pos:column="24">__RPC__in GUID *pguid</argument>,
            <comment type="block" pos:line="4063" pos:column="13">/* [out] */</comment> <argument pos:line="4063" pos:column="25">__RPC__out _mdToken *ptr</argument>)</argument_list></macro> <op:operator pos:line="4063" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="4063" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="4065" pos:column="9">virtual <name pos:line="4065" pos:column="17">HRESULT</name> <name pos:line="4065" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4065" pos:column="43">SetModuleReg</name><argument_list pos:line="4065" pos:column="55">( 
            <comment type="block" pos:line="4066" pos:column="13">/* [in] */</comment> <argument pos:line="4066" pos:column="24">DWORD dwModuleRegAttr</argument>,
            <comment type="block" pos:line="4067" pos:column="13">/* [in] */</comment> <argument pos:line="4067" pos:column="24">__RPC__in GUID *pguid</argument>)</argument_list></macro> <op:operator pos:line="4067" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="4067" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="4069" pos:column="9">virtual <name pos:line="4069" pos:column="17">HRESULT</name> <name pos:line="4069" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4069" pos:column="43">SetClassReg</name><argument_list pos:line="4069" pos:column="54">( 
            <comment type="block" pos:line="4070" pos:column="13">/* [in] */</comment> <argument pos:line="4070" pos:column="24">_mdToken td</argument>,
            <comment type="block" pos:line="4071" pos:column="13">/* [in] */</comment> <argument pos:line="4071" pos:column="24">__RPC__in LPOLESTR szProgID</argument>,
            <comment type="block" pos:line="4072" pos:column="13">/* [in] */</comment> <argument pos:line="4072" pos:column="24">__RPC__in LPOLESTR szVIProgID</argument>,
            <comment type="block" pos:line="4073" pos:column="13">/* [in] */</comment> <argument pos:line="4073" pos:column="24">__RPC__in LPOLESTR szIconURL</argument>,
            <comment type="block" pos:line="4074" pos:column="13">/* [in] */</comment> <argument pos:line="4074" pos:column="24">ULONG ulIconResource</argument>,
            <comment type="block" pos:line="4075" pos:column="13">/* [in] */</comment> <argument pos:line="4075" pos:column="24">__RPC__in LPOLESTR szSmallIconURL</argument>,
            <comment type="block" pos:line="4076" pos:column="13">/* [in] */</comment> <argument pos:line="4076" pos:column="24">ULONG ulSmallIconResource</argument>,
            <comment type="block" pos:line="4077" pos:column="13">/* [in] */</comment> <argument pos:line="4077" pos:column="24">__RPC__in LPOLESTR szDefaultDispName</argument>)</argument_list></macro> <op:operator pos:line="4077" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="4077" pos:column="64">0</lit:literal></expr>;
        
        <expr pos:line="4079" pos:column="9">virtual <name pos:line="4079" pos:column="17">HRESULT</name> <name pos:line="4079" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4079" pos:column="43">SetIfaceReg</name><argument_list pos:line="4079" pos:column="54">( 
            <comment type="block" pos:line="4080" pos:column="13">/* [in] */</comment> <argument pos:line="4080" pos:column="24">_mdToken td</argument>,
            <comment type="block" pos:line="4081" pos:column="13">/* [in] */</comment> <argument pos:line="4081" pos:column="24">DWORD dwIfaceSvcs</argument>,
            <comment type="block" pos:line="4082" pos:column="13">/* [in] */</comment> <argument pos:line="4082" pos:column="24">__RPC__in GUID *proxyStub</argument>)</argument_list></macro> <op:operator pos:line="4082" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="4082" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="4084" pos:column="9">virtual <name pos:line="4084" pos:column="17">HRESULT</name> <name pos:line="4084" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4084" pos:column="43">SetCategoryImpl</name><argument_list pos:line="4084" pos:column="58">( 
            <comment type="block" pos:line="4085" pos:column="13">/* [in] */</comment> <argument pos:line="4085" pos:column="24">_mdToken td</argument>,
            <comment type="block" pos:line="4086" pos:column="13">/* [in] */</comment> <argument pos:line="4086" pos:column="24">DWORD dwImpl</argument>,
            <comment type="block" pos:line="4087" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4087" pos:column="44">__RPC__in_ecount_part(dwImpl, dwImpl) GUID rGuidCoCatImpl[  ]</argument>,
            <comment type="block" pos:line="4088" pos:column="13">/* [in] */</comment> <argument pos:line="4088" pos:column="24">DWORD dwReqd</argument>,
            <comment type="block" pos:line="4089" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4089" pos:column="44">__RPC__in_ecount_part(dwReqd, dwReqd) GUID rGuidCoCatReqd[  ]</argument>)</argument_list></macro> <op:operator pos:line="4089" pos:column="107">=</op:operator> <lit:literal type="number" pos:line="4089" pos:column="109">0</lit:literal></expr>;
        
        <expr pos:line="4091" pos:column="9">virtual <name pos:line="4091" pos:column="17">HRESULT</name> <name pos:line="4091" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4091" pos:column="43">SetRedirectProgID</name><argument_list pos:line="4091" pos:column="60">( 
            <comment type="block" pos:line="4092" pos:column="13">/* [in] */</comment> <argument pos:line="4092" pos:column="24">_mdToken td</argument>,
            <comment type="block" pos:line="4093" pos:column="13">/* [in] */</comment> <argument pos:line="4093" pos:column="24">DWORD dwProgIds</argument>,
            <comment type="block" pos:line="4094" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4094" pos:column="44">__RPC__in_ecount_part(dwProgIds, dwProgIds) LPOLESTR rszRedirectProgID[  ]</argument>)</argument_list></macro> <op:operator pos:line="4094" pos:column="120">=</op:operator> <lit:literal type="number" pos:line="4094" pos:column="122">0</lit:literal></expr>;
        
        <expr pos:line="4096" pos:column="9">virtual <name pos:line="4096" pos:column="17">HRESULT</name> <name pos:line="4096" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4096" pos:column="43">SetMimeTypeImpl</name><argument_list pos:line="4096" pos:column="58">( 
            <comment type="block" pos:line="4097" pos:column="13">/* [in] */</comment> <argument pos:line="4097" pos:column="24">_mdToken td</argument>,
            <comment type="block" pos:line="4098" pos:column="13">/* [in] */</comment> <argument pos:line="4098" pos:column="24">DWORD dwTypes</argument>,
            <comment type="block" pos:line="4099" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4099" pos:column="44">__RPC__in_ecount_part(dwTypes, dwTypes) LPOLESTR rszMimeType[  ]</argument>)</argument_list></macro> <op:operator pos:line="4099" pos:column="110">=</op:operator> <lit:literal type="number" pos:line="4099" pos:column="112">0</lit:literal></expr>;
        
        <expr pos:line="4101" pos:column="9">virtual <name pos:line="4101" pos:column="17">HRESULT</name> <name pos:line="4101" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4101" pos:column="43">SetFormatImpl</name><argument_list pos:line="4101" pos:column="56">( 
            <comment type="block" pos:line="4102" pos:column="13">/* [in] */</comment> <argument pos:line="4102" pos:column="24">_mdToken td</argument>,
            <comment type="block" pos:line="4103" pos:column="13">/* [in] */</comment> <argument pos:line="4103" pos:column="24">DWORD dwSupported</argument>,
            <comment type="block" pos:line="4104" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4104" pos:column="44">__RPC__in_ecount_part(dwSupported, dwSupported) LPOLESTR rszFormatSupported[  ]</argument>,
            <comment type="block" pos:line="4105" pos:column="13">/* [in] */</comment> <argument pos:line="4105" pos:column="24">DWORD dwFrom</argument>,
            <comment type="block" pos:line="4106" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4106" pos:column="44">__RPC__in_ecount_part(dwFrom, dwFrom) LPOLESTR rszFormatConvertsFrom[  ]</argument>,
            <comment type="block" pos:line="4107" pos:column="13">/* [in] */</comment> <argument pos:line="4107" pos:column="24">DWORD dwTo</argument>,
            <comment type="block" pos:line="4108" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4108" pos:column="44">__RPC__in_ecount_part(dwTo, dwTo) LPOLESTR rszFormatConvertsTo[  ]</argument>,
            <comment type="block" pos:line="4109" pos:column="13">/* [in] */</comment> <argument pos:line="4109" pos:column="24">DWORD dwDefault</argument>,
            <comment type="block" pos:line="4110" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4110" pos:column="44">__RPC__in_ecount_part(dwDefault, dwDefault) LPOLESTR rszFormatDefault[  ]</argument>,
            <comment type="block" pos:line="4111" pos:column="13">/* [in] */</comment> <argument pos:line="4111" pos:column="24">DWORD dwExt</argument>,
            <comment type="block" pos:line="4112" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4112" pos:column="44">__RPC__in_ecount_part(dwExt, dwExt) LPOLESTR rszFileExt[  ]</argument>,
            <comment type="block" pos:line="4113" pos:column="13">/* [in] */</comment> <argument pos:line="4113" pos:column="24">DWORD dwType</argument>,
            <comment type="block" pos:line="4114" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4114" pos:column="44">__RPC__in_ecount_part(dwType, dwType) LPOLESTR rszFileType[  ]</argument>)</argument_list></macro> <op:operator pos:line="4114" pos:column="108">=</op:operator> <lit:literal type="number" pos:line="4114" pos:column="110">0</lit:literal></expr>;
        
        <expr pos:line="4116" pos:column="9">virtual <name pos:line="4116" pos:column="17">HRESULT</name> <name pos:line="4116" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4116" pos:column="43">SetRoleCheck</name><argument_list pos:line="4116" pos:column="55">( 
            <comment type="block" pos:line="4117" pos:column="13">/* [in] */</comment> <argument pos:line="4117" pos:column="24">_mdToken tk</argument>,
            <comment type="block" pos:line="4118" pos:column="13">/* [in] */</comment> <argument pos:line="4118" pos:column="24">DWORD dwNames</argument>,
            <comment type="block" pos:line="4119" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4119" pos:column="44">__RPC__in_ecount_part(dwNames, dwNames) LPOLESTR rszName[  ]</argument>,
            <comment type="block" pos:line="4120" pos:column="13">/* [in] */</comment> <argument pos:line="4120" pos:column="24">DWORD dwFlags</argument>,
            <comment type="block" pos:line="4121" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4121" pos:column="44">__RPC__in_ecount_part(dwFlags, dwFlags) DWORD rdwRoleFlags[  ]</argument>)</argument_list></macro> <op:operator pos:line="4121" pos:column="108">=</op:operator> <lit:literal type="number" pos:line="4121" pos:column="110">0</lit:literal></expr>;
        
        <expr pos:line="4123" pos:column="9">virtual <name pos:line="4123" pos:column="17">HRESULT</name> <name pos:line="4123" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4123" pos:column="43">DefineMethod</name><argument_list pos:line="4123" pos:column="55">( 
            <comment type="block" pos:line="4124" pos:column="13">/* [in] */</comment> <argument pos:line="4124" pos:column="24">_mdToken td</argument>,
            <comment type="block" pos:line="4125" pos:column="13">/* [in] */</comment> <argument pos:line="4125" pos:column="24">__RPC__in LPOLESTR szName</argument>,
            <comment type="block" pos:line="4126" pos:column="13">/* [in] */</comment> <argument pos:line="4126" pos:column="24">DWORD dwMethodFlags</argument>,
            <comment type="block" pos:line="4127" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="4127" pos:column="33">__RPC__in_ecount_full(cbSigBlob) BYTE *pvSigBlob</argument>,
            <comment type="block" pos:line="4128" pos:column="13">/* [in] */</comment> <argument pos:line="4128" pos:column="24">ULONG cbSigBlob</argument>,
            <comment type="block" pos:line="4129" pos:column="13">/* [in] */</comment> <argument pos:line="4129" pos:column="24">ULONG ulSlot</argument>,
            <comment type="block" pos:line="4130" pos:column="13">/* [in] */</comment> <argument pos:line="4130" pos:column="24">ULONG ulCodeRVA</argument>,
            <comment type="block" pos:line="4131" pos:column="13">/* [in] */</comment> <argument pos:line="4131" pos:column="24">DWORD dwImplFlags</argument>,
            <comment type="block" pos:line="4132" pos:column="13">/* [out] */</comment> <argument pos:line="4132" pos:column="25">__RPC__out _mdToken *pmd</argument>)</argument_list></macro> <op:operator pos:line="4132" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="4132" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="4134" pos:column="9">virtual <name pos:line="4134" pos:column="17">HRESULT</name> <name pos:line="4134" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4134" pos:column="43">DefineField</name><argument_list pos:line="4134" pos:column="54">( 
            <comment type="block" pos:line="4135" pos:column="13">/* [in] */</comment> <argument pos:line="4135" pos:column="24">_mdToken td</argument>,
            <comment type="block" pos:line="4136" pos:column="13">/* [in] */</comment> <argument pos:line="4136" pos:column="24">__RPC__in LPOLESTR szName</argument>,
            <comment type="block" pos:line="4137" pos:column="13">/* [in] */</comment> <argument pos:line="4137" pos:column="24">DWORD dwFieldFlags</argument>,
            <comment type="block" pos:line="4138" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="4138" pos:column="33">__RPC__in_ecount_full(cbSigBlob) BYTE *pvSigBlob</argument>,
            <comment type="block" pos:line="4139" pos:column="13">/* [in] */</comment> <argument pos:line="4139" pos:column="24">ULONG cbSigBlob</argument>,
            <comment type="block" pos:line="4140" pos:column="13">/* [in] */</comment> <argument pos:line="4140" pos:column="24">DWORD dwCPlusTypeFlag</argument>,
            <comment type="block" pos:line="4141" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="4141" pos:column="33">__RPC__in_ecount_full(cbValue) BYTE *pValue</argument>,
            <comment type="block" pos:line="4142" pos:column="13">/* [in] */</comment> <argument pos:line="4142" pos:column="24">ULONG cbValue</argument>,
            <comment type="block" pos:line="4143" pos:column="13">/* [out] */</comment> <argument pos:line="4143" pos:column="25">__RPC__out _mdToken *pmd</argument>)</argument_list></macro> <op:operator pos:line="4143" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="4143" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="4145" pos:column="9">virtual <name pos:line="4145" pos:column="17">HRESULT</name> <name pos:line="4145" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4145" pos:column="43">SetParamProps</name><argument_list pos:line="4145" pos:column="56">( 
            <comment type="block" pos:line="4146" pos:column="13">/* [in] */</comment> <argument pos:line="4146" pos:column="24">_mdToken md</argument>,
            <comment type="block" pos:line="4147" pos:column="13">/* [in] */</comment> <argument pos:line="4147" pos:column="24">ULONG ulParamSeq</argument>,
            <comment type="block" pos:line="4148" pos:column="13">/* [in] */</comment> <argument pos:line="4148" pos:column="24">__RPC__in LPOLESTR szName</argument>,
            <comment type="block" pos:line="4149" pos:column="13">/* [in] */</comment> <argument pos:line="4149" pos:column="24">DWORD dwParamFlags</argument>,
            <comment type="block" pos:line="4150" pos:column="13">/* [in] */</comment> <argument pos:line="4150" pos:column="24">DWORD dwCPlusTypeFlag</argument>,
            <comment type="block" pos:line="4151" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="4151" pos:column="33">__RPC__in_ecount_full(cbValue) BYTE *pValue</argument>,
            <comment type="block" pos:line="4152" pos:column="13">/* [in] */</comment> <argument pos:line="4152" pos:column="24">ULONG cbValue</argument>,
            <comment type="block" pos:line="4153" pos:column="13">/* [out] */</comment> <argument pos:line="4153" pos:column="25">__RPC__out _mdToken *ppd</argument>)</argument_list></macro> <op:operator pos:line="4153" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="4153" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="4155" pos:column="9">virtual <name pos:line="4155" pos:column="17">HRESULT</name> <name pos:line="4155" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4155" pos:column="43">DefineMethodImpl</name><argument_list pos:line="4155" pos:column="59">( 
            <comment type="block" pos:line="4156" pos:column="13">/* [in] */</comment> <argument pos:line="4156" pos:column="24">_mdToken td</argument>,
            <comment type="block" pos:line="4157" pos:column="13">/* [in] */</comment> <argument pos:line="4157" pos:column="24">_mdToken tk</argument>,
            <comment type="block" pos:line="4158" pos:column="13">/* [in] */</comment> <argument pos:line="4158" pos:column="24">ULONG ulCodeRVA</argument>,
            <comment type="block" pos:line="4159" pos:column="13">/* [in] */</comment> <argument pos:line="4159" pos:column="24">DWORD dwImplFlags</argument>,
            <comment type="block" pos:line="4160" pos:column="13">/* [out] */</comment> <argument pos:line="4160" pos:column="25">__RPC__out _mdToken *pmi</argument>)</argument_list></macro> <op:operator pos:line="4160" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="4160" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="4162" pos:column="9">virtual <name pos:line="4162" pos:column="17">HRESULT</name> <name pos:line="4162" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4162" pos:column="43">SetRVA</name><argument_list pos:line="4162" pos:column="49">( 
            <comment type="block" pos:line="4163" pos:column="13">/* [in] */</comment> <argument pos:line="4163" pos:column="24">_mdToken md</argument>,
            <comment type="block" pos:line="4164" pos:column="13">/* [in] */</comment> <argument pos:line="4164" pos:column="24">ULONG ulCodeRVA</argument>,
            <comment type="block" pos:line="4165" pos:column="13">/* [in] */</comment> <argument pos:line="4165" pos:column="24">DWORD dwImplFlags</argument>)</argument_list></macro> <op:operator pos:line="4165" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="4165" pos:column="45">0</lit:literal></expr>;
        
        <expr pos:line="4167" pos:column="9">virtual <name pos:line="4167" pos:column="17">HRESULT</name> <name pos:line="4167" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4167" pos:column="43">DefineTypeRefByName</name><argument_list pos:line="4167" pos:column="62">( 
            <comment type="block" pos:line="4168" pos:column="13">/* [in] */</comment> <argument pos:line="4168" pos:column="24">__RPC__in LPOLESTR szNamespace</argument>,
            <comment type="block" pos:line="4169" pos:column="13">/* [in] */</comment> <argument pos:line="4169" pos:column="24">__RPC__in LPOLESTR szType</argument>,
            <comment type="block" pos:line="4170" pos:column="13">/* [out] */</comment> <argument pos:line="4170" pos:column="25">__RPC__out _mdToken *ptr</argument>)</argument_list></macro> <op:operator pos:line="4170" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="4170" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="4172" pos:column="9">virtual <name pos:line="4172" pos:column="17">HRESULT</name> <name pos:line="4172" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4172" pos:column="43">SetTypeRefBind</name><argument_list pos:line="4172" pos:column="57">( 
            <comment type="block" pos:line="4173" pos:column="13">/* [in] */</comment> <argument pos:line="4173" pos:column="24">_mdToken tr</argument>,
            <comment type="block" pos:line="4174" pos:column="13">/* [in] */</comment> <argument pos:line="4174" pos:column="24">DWORD dwBindFlags</argument>,
            <comment type="block" pos:line="4175" pos:column="13">/* [in] */</comment> <argument pos:line="4175" pos:column="24">DWORD dwMinVersion</argument>,
            <comment type="block" pos:line="4176" pos:column="13">/* [in] */</comment> <argument pos:line="4176" pos:column="24">DWORD dwMaxVersion</argument>,
            <comment type="block" pos:line="4177" pos:column="13">/* [in] */</comment> <argument pos:line="4177" pos:column="24">__RPC__in LPOLESTR szCodebase</argument>)</argument_list></macro> <op:operator pos:line="4177" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="4177" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="4179" pos:column="9">virtual <name pos:line="4179" pos:column="17">HRESULT</name> <name pos:line="4179" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4179" pos:column="43">DefineMemberRef</name><argument_list pos:line="4179" pos:column="58">( 
            <comment type="block" pos:line="4180" pos:column="13">/* [in] */</comment> <argument pos:line="4180" pos:column="24">_mdToken tkImport</argument>,
            <comment type="block" pos:line="4181" pos:column="13">/* [in] */</comment> <argument pos:line="4181" pos:column="24">__RPC__in LPOLESTR szName</argument>,
            <comment type="block" pos:line="4182" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="4182" pos:column="33">__RPC__in_ecount_full(cbSigBlob) BYTE *pvSigBlob</argument>,
            <comment type="block" pos:line="4183" pos:column="13">/* [in] */</comment> <argument pos:line="4183" pos:column="24">ULONG cbSigBlob</argument>,
            <comment type="block" pos:line="4184" pos:column="13">/* [out] */</comment> <argument pos:line="4184" pos:column="25">__RPC__out _mdToken *pmr</argument>)</argument_list></macro> <op:operator pos:line="4184" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="4184" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="4186" pos:column="9">virtual <name pos:line="4186" pos:column="17">HRESULT</name> <name pos:line="4186" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4186" pos:column="43">DefineException</name><argument_list pos:line="4186" pos:column="58">( 
            <comment type="block" pos:line="4187" pos:column="13">/* [in] */</comment> <argument pos:line="4187" pos:column="24">_mdToken mb</argument>,
            <comment type="block" pos:line="4188" pos:column="13">/* [in] */</comment> <argument pos:line="4188" pos:column="24">_mdToken tk</argument>,
            <comment type="block" pos:line="4189" pos:column="13">/* [out] */</comment> <argument pos:line="4189" pos:column="25">__RPC__out _mdToken *pex</argument>)</argument_list></macro> <op:operator pos:line="4189" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="4189" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="4191" pos:column="9">virtual <name pos:line="4191" pos:column="17">HRESULT</name> <name pos:line="4191" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4191" pos:column="43">DefineProperty</name><argument_list pos:line="4191" pos:column="57">( 
            <comment type="block" pos:line="4192" pos:column="13">/* [in] */</comment> <argument pos:line="4192" pos:column="24">_mdToken td</argument>,
            <comment type="block" pos:line="4193" pos:column="13">/* [in] */</comment> <argument pos:line="4193" pos:column="24">__RPC__in LPOLESTR szProperty</argument>,
            <comment type="block" pos:line="4194" pos:column="13">/* [in] */</comment> <argument pos:line="4194" pos:column="24">DWORD dwPropFlags</argument>,
            <comment type="block" pos:line="4195" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="4195" pos:column="33">__RPC__in_ecount_full(cbSig) BYTE *pvSig</argument>,
            <comment type="block" pos:line="4196" pos:column="13">/* [in] */</comment> <argument pos:line="4196" pos:column="24">ULONG cbSig</argument>,
            <comment type="block" pos:line="4197" pos:column="13">/* [in] */</comment> <argument pos:line="4197" pos:column="24">DWORD dwCPlusTypeFlag</argument>,
            <comment type="block" pos:line="4198" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="4198" pos:column="33">__RPC__in_ecount_full(cbValue) BYTE *pValue</argument>,
            <comment type="block" pos:line="4199" pos:column="13">/* [in] */</comment> <argument pos:line="4199" pos:column="24">ULONG cbValue</argument>,
            <comment type="block" pos:line="4200" pos:column="13">/* [in] */</comment> <argument pos:line="4200" pos:column="24">_mdToken mdSetter</argument>,
            <comment type="block" pos:line="4201" pos:column="13">/* [in] */</comment> <argument pos:line="4201" pos:column="24">_mdToken mdGetter</argument>,
            <comment type="block" pos:line="4202" pos:column="13">/* [in] */</comment> <argument pos:line="4202" pos:column="24">_mdToken mdReset</argument>,
            <comment type="block" pos:line="4203" pos:column="13">/* [in] */</comment> <argument pos:line="4203" pos:column="24">_mdToken mdTestDefault</argument>,
            <comment type="block" pos:line="4204" pos:column="13">/* [in] */</comment> <argument pos:line="4204" pos:column="24">DWORD dwOthers</argument>,
            <comment type="block" pos:line="4205" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4205" pos:column="44">__RPC__in_ecount_part(dwOthers, dwOthers) _mdToken rmdOtherMethods[  ]</argument>,
            <comment type="block" pos:line="4206" pos:column="13">/* [in] */</comment> <argument pos:line="4206" pos:column="24">_mdToken evNotifyChanging</argument>,
            <comment type="block" pos:line="4207" pos:column="13">/* [in] */</comment> <argument pos:line="4207" pos:column="24">_mdToken evNotifyChanged</argument>,
            <comment type="block" pos:line="4208" pos:column="13">/* [in] */</comment> <argument pos:line="4208" pos:column="24">_mdToken fdBackingField</argument>,
            <comment type="block" pos:line="4209" pos:column="13">/* [out] */</comment> <argument pos:line="4209" pos:column="25">__RPC__out _mdToken *pmdProp</argument>)</argument_list></macro> <op:operator pos:line="4209" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="4209" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="4211" pos:column="9">virtual <name pos:line="4211" pos:column="17">HRESULT</name> <name pos:line="4211" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4211" pos:column="43">DefineEvent</name><argument_list pos:line="4211" pos:column="54">( 
            <comment type="block" pos:line="4212" pos:column="13">/* [in] */</comment> <argument pos:line="4212" pos:column="24">_mdToken td</argument>,
            <comment type="block" pos:line="4213" pos:column="13">/* [in] */</comment> <argument pos:line="4213" pos:column="24">__RPC__in LPOLESTR szEvent</argument>,
            <comment type="block" pos:line="4214" pos:column="13">/* [in] */</comment> <argument pos:line="4214" pos:column="24">DWORD dwEventFlags</argument>,
            <comment type="block" pos:line="4215" pos:column="13">/* [in] */</comment> <argument pos:line="4215" pos:column="24">_mdToken tkEventType</argument>,
            <comment type="block" pos:line="4216" pos:column="13">/* [in] */</comment> <argument pos:line="4216" pos:column="24">_mdToken mdAddOn</argument>,
            <comment type="block" pos:line="4217" pos:column="13">/* [in] */</comment> <argument pos:line="4217" pos:column="24">_mdToken mdRemoveOn</argument>,
            <comment type="block" pos:line="4218" pos:column="13">/* [in] */</comment> <argument pos:line="4218" pos:column="24">_mdToken mdFire</argument>,
            <comment type="block" pos:line="4219" pos:column="13">/* [in] */</comment> <argument pos:line="4219" pos:column="24">DWORD dwOthers</argument>,
            <comment type="block" pos:line="4220" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="4220" pos:column="44">__RPC__in_ecount_part(dwOthers, dwOthers) _mdToken rmdOtherMethods[  ]</argument>,
            <comment type="block" pos:line="4221" pos:column="13">/* [out] */</comment> <argument pos:line="4221" pos:column="25">__RPC__out _mdToken *pmdEvent</argument>)</argument_list></macro> <op:operator pos:line="4221" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="4221" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="4223" pos:column="9">virtual <name pos:line="4223" pos:column="17">HRESULT</name> <name pos:line="4223" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4223" pos:column="43">SetFieldMarshal</name><argument_list pos:line="4223" pos:column="58">( 
            <comment type="block" pos:line="4224" pos:column="13">/* [in] */</comment> <argument pos:line="4224" pos:column="24">_mdToken tk</argument>,
            <comment type="block" pos:line="4225" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="4225" pos:column="33">__RPC__in_ecount_full(cbNativeType) BYTE *pvNativeType</argument>,
            <comment type="block" pos:line="4226" pos:column="13">/* [in] */</comment> <argument pos:line="4226" pos:column="24">ULONG cbNativeType</argument>)</argument_list></macro> <op:operator pos:line="4226" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="4226" pos:column="46">0</lit:literal></expr>;
        
        <expr pos:line="4228" pos:column="9">virtual <name pos:line="4228" pos:column="17">HRESULT</name> <name pos:line="4228" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4228" pos:column="43">DefinePermissionSet</name><argument_list pos:line="4228" pos:column="62">( 
            <comment type="block" pos:line="4229" pos:column="13">/* [in] */</comment> <argument pos:line="4229" pos:column="24">_mdToken tk</argument>,
            <comment type="block" pos:line="4230" pos:column="13">/* [in] */</comment> <argument pos:line="4230" pos:column="24">DWORD dwAction</argument>,
            <comment type="block" pos:line="4231" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="4231" pos:column="33">__RPC__in_ecount_full(cbPermission) BYTE *pvPermission</argument>,
            <comment type="block" pos:line="4232" pos:column="13">/* [in] */</comment> <argument pos:line="4232" pos:column="24">ULONG cbPermission</argument>,
            <comment type="block" pos:line="4233" pos:column="13">/* [out] */</comment> <argument pos:line="4233" pos:column="25">__RPC__out _mdToken *ppm</argument>)</argument_list></macro> <op:operator pos:line="4233" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="4233" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="4235" pos:column="9">virtual <name pos:line="4235" pos:column="17">HRESULT</name> <name pos:line="4235" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4235" pos:column="43">SetMemberIndex</name><argument_list pos:line="4235" pos:column="57">( 
            <comment type="block" pos:line="4236" pos:column="13">/* [in] */</comment> <argument pos:line="4236" pos:column="24">_mdToken md</argument>,
            <comment type="block" pos:line="4237" pos:column="13">/* [in] */</comment> <argument pos:line="4237" pos:column="24">ULONG ulIndex</argument>)</argument_list></macro> <op:operator pos:line="4237" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="4237" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="4239" pos:column="9">virtual <name pos:line="4239" pos:column="17">HRESULT</name> <name pos:line="4239" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4239" pos:column="43">GetTokenFromSig</name><argument_list pos:line="4239" pos:column="58">( 
            <comment type="block" pos:line="4240" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="4240" pos:column="33">__RPC__in_ecount_full(cbSig) BYTE *pvSig</argument>,
            <comment type="block" pos:line="4241" pos:column="13">/* [in] */</comment> <argument pos:line="4241" pos:column="24">ULONG cbSig</argument>,
            <comment type="block" pos:line="4242" pos:column="13">/* [in] */</comment> <argument pos:line="4242" pos:column="24">__RPC__in _mdToken *pmsig</argument>)</argument_list></macro> <op:operator pos:line="4242" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="4242" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="4244" pos:column="9">virtual <name pos:line="4244" pos:column="17">HRESULT</name> <name pos:line="4244" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4244" pos:column="43">DefineModuleRef</name><argument_list pos:line="4244" pos:column="58">( 
            <comment type="block" pos:line="4245" pos:column="13">/* [in] */</comment> <argument pos:line="4245" pos:column="24">__RPC__in LPOLESTR szName</argument>,
            <comment type="block" pos:line="4246" pos:column="13">/* [in] */</comment> <argument pos:line="4246" pos:column="24">__RPC__in GUID *pguid</argument>,
            <comment type="block" pos:line="4247" pos:column="13">/* [in] */</comment> <argument pos:line="4247" pos:column="24">__RPC__in GUID *pmvid</argument>,
            <comment type="block" pos:line="4248" pos:column="13">/* [out] */</comment> <argument pos:line="4248" pos:column="25">__RPC__out _mdToken *pmur</argument>)</argument_list></macro> <op:operator pos:line="4248" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="4248" pos:column="54">0</lit:literal></expr>;
        
        <expr pos:line="4250" pos:column="9">virtual <name pos:line="4250" pos:column="17">HRESULT</name> <name pos:line="4250" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4250" pos:column="43">SetParent</name><argument_list pos:line="4250" pos:column="52">( 
            <comment type="block" pos:line="4251" pos:column="13">/* [in] */</comment> <argument pos:line="4251" pos:column="24">_mdToken mr</argument>,
            <comment type="block" pos:line="4252" pos:column="13">/* [in] */</comment> <argument pos:line="4252" pos:column="24">_mdToken tk</argument>)</argument_list></macro> <op:operator pos:line="4252" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="4252" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="4254" pos:column="9">virtual <name pos:line="4254" pos:column="17">HRESULT</name> <name pos:line="4254" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4254" pos:column="43">GetTokenFromArraySpec</name><argument_list pos:line="4254" pos:column="64">( 
            <comment type="block" pos:line="4255" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="4255" pos:column="33">__RPC__in_ecount_full(cbSig) BYTE *pvSig</argument>,
            <comment type="block" pos:line="4256" pos:column="13">/* [in] */</comment> <argument pos:line="4256" pos:column="24">ULONG cbSig</argument>,
            <comment type="block" pos:line="4257" pos:column="13">/* [out] */</comment> <argument pos:line="4257" pos:column="25">__RPC__out _mdToken *parrspec</argument>)</argument_list></macro> <op:operator pos:line="4257" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="4257" pos:column="58">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4261" pos:column="1">#<cpp:directive pos:line="4261" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4261" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4263" pos:column="5">typedef <type><struct pos:line="4263" pos:column="13">struct <name pos:line="4263" pos:column="20">IDebugMetaDataEmit2Vtbl</name>
    <block pos:line="4264" pos:column="5">{<public type="default" pos:line="4264" pos:column="6">
        <function_decl><type><name pos:line="4265" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4267" pos:column="9">HRESULT</name></type> ( <name pos:line="4267" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4267" pos:column="37">*</type:modifier><name pos:line="4267" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4267" pos:column="54">( 
            <param><decl><type><name pos:line="4268" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4268" pos:column="33">*</type:modifier></type> <name pos:line="4268" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4269" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4269" pos:column="24">__RPC__in</name> <name pos:line="4269" pos:column="34">REFIID</name></type> <name pos:line="4269" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="4270" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4271" pos:column="13">__RPC__deref_out</name>  <name pos:line="4271" pos:column="31">void</name> <type:modifier pos:line="4271" pos:column="36">*</type:modifier><type:modifier pos:line="4271" pos:column="37">*</type:modifier></type><name pos:line="4271" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4273" pos:column="9">ULONG</name></type> ( <name pos:line="4273" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4273" pos:column="35">*</type:modifier><name pos:line="4273" pos:column="36">AddRef</name> )<parameter_list pos:line="4273" pos:column="44">( 
            <param><decl><type><name pos:line="4274" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4274" pos:column="33">*</type:modifier></type> <name pos:line="4274" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4276" pos:column="9">ULONG</name></type> ( <name pos:line="4276" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4276" pos:column="35">*</type:modifier><name pos:line="4276" pos:column="36">Release</name> )<parameter_list pos:line="4276" pos:column="45">( 
            <param><decl><type><name pos:line="4277" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4277" pos:column="33">*</type:modifier></type> <name pos:line="4277" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4279" pos:column="9">HRESULT</name></type> ( <name pos:line="4279" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4279" pos:column="37">*</type:modifier><name pos:line="4279" pos:column="38">SetModuleProps</name> )<parameter_list pos:line="4279" pos:column="54">( 
            <param><decl><type><name pos:line="4280" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4280" pos:column="33">*</type:modifier></type> <name pos:line="4280" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4281" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4281" pos:column="24">__RPC__in</name> <name pos:line="4281" pos:column="34">LPOLESTR</name></type> <name pos:line="4281" pos:column="43">szName</name></decl></param>,
            <comment type="block" pos:line="4282" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4282" pos:column="24">__RPC__in</name> <name pos:line="4282" pos:column="34">GUID</name> <type:modifier pos:line="4282" pos:column="39">*</type:modifier></type><name pos:line="4282" pos:column="40">ppid</name></decl></param>,
            <comment type="block" pos:line="4283" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4283" pos:column="24">LCID</name></type> <name pos:line="4283" pos:column="29">lcid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4285" pos:column="9">HRESULT</name></type> ( <name pos:line="4285" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4285" pos:column="37">*</type:modifier><name pos:line="4285" pos:column="38">Save</name> )<parameter_list pos:line="4285" pos:column="44">( 
            <param><decl><type><name pos:line="4286" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4286" pos:column="33">*</type:modifier></type> <name pos:line="4286" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4287" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4287" pos:column="24">__RPC__in</name> <name pos:line="4287" pos:column="34">LPOLESTR</name></type> <name pos:line="4287" pos:column="43">szFile</name></decl></param>,
            <comment type="block" pos:line="4288" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4288" pos:column="24">DWORD</name></type> <name pos:line="4288" pos:column="30">dwSaveFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4290" pos:column="9">HRESULT</name></type> ( <name pos:line="4290" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4290" pos:column="37">*</type:modifier><name pos:line="4290" pos:column="38">SaveToStream</name> )<parameter_list pos:line="4290" pos:column="52">( 
            <param><decl><type><name pos:line="4291" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4291" pos:column="33">*</type:modifier></type> <name pos:line="4291" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4292" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4292" pos:column="24">__RPC__in_opt</name> <name pos:line="4292" pos:column="38">IStream</name> <type:modifier pos:line="4292" pos:column="46">*</type:modifier></type><name pos:line="4292" pos:column="47">pIStream</name></decl></param>,
            <comment type="block" pos:line="4293" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4293" pos:column="24">DWORD</name></type> <name pos:line="4293" pos:column="30">dwSaveFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4295" pos:column="9">HRESULT</name></type> ( <name pos:line="4295" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4295" pos:column="37">*</type:modifier><name pos:line="4295" pos:column="38">GetSaveSize</name> )<parameter_list pos:line="4295" pos:column="51">( 
            <param><decl><type><name pos:line="4296" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4296" pos:column="33">*</type:modifier></type> <name pos:line="4296" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4297" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4297" pos:column="24">DWORD</name></type> <name pos:line="4297" pos:column="30">fSave</name></decl></param>,
            <comment type="block" pos:line="4298" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4298" pos:column="25">__RPC__out</name> <name pos:line="4298" pos:column="36">DWORD</name> <type:modifier pos:line="4298" pos:column="42">*</type:modifier></type><name pos:line="4298" pos:column="43">pdwSaveSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4300" pos:column="9">HRESULT</name> <argument_list pos:line="4300" pos:column="17">( <argument pos:line="4300" pos:column="19">STDMETHODCALLTYPE *DefineCustomValueAsBlob</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4300" pos:column="63">(</op:operator> 
            <name pos:line="4301" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4301" pos:column="33">*</op:operator> <name pos:line="4301" pos:column="35">This</name><op:operator pos:line="4301" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4302" pos:column="13">/* [in] */</comment> <name pos:line="4302" pos:column="24">_mdToken</name> <name pos:line="4302" pos:column="33">tkObj</name><op:operator pos:line="4302" pos:column="38">,</op:operator>
            <comment type="block" pos:line="4303" pos:column="13">/* [in] */</comment> <name pos:line="4303" pos:column="24">__RPC__in</name> <name pos:line="4303" pos:column="34">LPOLESTR</name> <name pos:line="4303" pos:column="43">szName</name><op:operator pos:line="4303" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4304" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="4304" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="4304" pos:column="54">(<argument pos:line="4304" pos:column="55">cbCustomValue</argument>)</argument_list></macro> <name pos:line="4304" pos:column="70">BYTE</name> <op:operator pos:line="4304" pos:column="75">*</op:operator><name pos:line="4304" pos:column="76">pCustomValue</name><op:operator pos:line="4304" pos:column="88">,</op:operator>
            <comment type="block" pos:line="4305" pos:column="13">/* [in] */</comment> <name pos:line="4305" pos:column="24">ULONG</name> <name pos:line="4305" pos:column="30">cbCustomValue</name><op:operator pos:line="4305" pos:column="43">,</op:operator>
            <comment type="block" pos:line="4306" pos:column="13">/* [in] */</comment> <name pos:line="4306" pos:column="24">__RPC__in</name> <name pos:line="4306" pos:column="34">_mdToken</name> <op:operator pos:line="4306" pos:column="43">*</op:operator><name pos:line="4306" pos:column="44">pcv</name><op:operator pos:line="4306" pos:column="47">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="4308" pos:column="9">HRESULT</name> <argument_list pos:line="4308" pos:column="17">( <argument pos:line="4308" pos:column="19">STDMETHODCALLTYPE *DefineTypeDef</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4308" pos:column="53">(</op:operator> 
            <name pos:line="4309" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4309" pos:column="33">*</op:operator> <name pos:line="4309" pos:column="35">This</name><op:operator pos:line="4309" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4310" pos:column="13">/* [in] */</comment> <name pos:line="4310" pos:column="24">__RPC__in</name> <name pos:line="4310" pos:column="34">LPOLESTR</name> <name pos:line="4310" pos:column="43">szNamespace</name><op:operator pos:line="4310" pos:column="54">,</op:operator>
            <comment type="block" pos:line="4311" pos:column="13">/* [in] */</comment> <name pos:line="4311" pos:column="24">__RPC__in</name> <name pos:line="4311" pos:column="34">LPOLESTR</name> <name pos:line="4311" pos:column="43">szTypeDef</name><op:operator pos:line="4311" pos:column="52">,</op:operator>
            <comment type="block" pos:line="4312" pos:column="13">/* [in] */</comment> <name pos:line="4312" pos:column="24">__RPC__in</name> <name pos:line="4312" pos:column="34">GUID</name> <op:operator pos:line="4312" pos:column="39">*</op:operator><name pos:line="4312" pos:column="40">pguid</name><op:operator pos:line="4312" pos:column="45">,</op:operator>
            <comment type="block" pos:line="4313" pos:column="13">/* [in] */</comment> <name pos:line="4313" pos:column="24">__RPC__in</name> <name pos:line="4313" pos:column="34">INT64</name> <op:operator pos:line="4313" pos:column="40">*</op:operator><name pos:line="4313" pos:column="41">pVer</name><op:operator pos:line="4313" pos:column="45">,</op:operator>
            <comment type="block" pos:line="4314" pos:column="13">/* [in] */</comment> <name pos:line="4314" pos:column="24">DWORD</name> <name pos:line="4314" pos:column="30">dwTypeDefFlags</name><op:operator pos:line="4314" pos:column="44">,</op:operator>
            <comment type="block" pos:line="4315" pos:column="13">/* [in] */</comment> <name pos:line="4315" pos:column="24">_mdToken</name> <name pos:line="4315" pos:column="33">tkExtends</name><op:operator pos:line="4315" pos:column="42">,</op:operator>
            <comment type="block" pos:line="4316" pos:column="13">/* [in] */</comment> <name pos:line="4316" pos:column="24">DWORD</name> <name pos:line="4316" pos:column="30">dwExtendsFlags</name><op:operator pos:line="4316" pos:column="44">,</op:operator>
            <comment type="block" pos:line="4317" pos:column="13">/* [in] */</comment> <name pos:line="4317" pos:column="24">DWORD</name> <name pos:line="4317" pos:column="30">dwImplements</name><op:operator pos:line="4317" pos:column="42">,</op:operator>
            <comment type="block" pos:line="4318" pos:column="13">/* [length_is][size_is][out][in] */</comment> <macro><name pos:line="4318" pos:column="49">__RPC__inout_ecount_part</name><argument_list pos:line="4318" pos:column="73">(<argument pos:line="4318" pos:column="74">dwImplements</argument>, <argument pos:line="4318" pos:column="88">dwImplements</argument>)</argument_list></macro> <name pos:line="4318" pos:column="102">_mdToken</name> <name><name pos:line="4318" pos:column="111">rtkImplements</name><index pos:line="4318" pos:column="124">[  ]</index></name><op:operator pos:line="4318" pos:column="128">,</op:operator>
            <comment type="block" pos:line="4319" pos:column="13">/* [in] */</comment> <name pos:line="4319" pos:column="24">DWORD</name> <name pos:line="4319" pos:column="30">dwEvents</name><op:operator pos:line="4319" pos:column="38">,</op:operator>
            <comment type="block" pos:line="4320" pos:column="13">/* [length_is][size_is][out][in] */</comment> <macro><name pos:line="4320" pos:column="49">__RPC__inout_ecount_part</name><argument_list pos:line="4320" pos:column="73">(<argument pos:line="4320" pos:column="74">dwEvents</argument>, <argument pos:line="4320" pos:column="84">dwEvents</argument>)</argument_list></macro> <name pos:line="4320" pos:column="94">_mdToken</name> <name><name pos:line="4320" pos:column="103">rtkEvents</name><index pos:line="4320" pos:column="112">[  ]</index></name><op:operator pos:line="4320" pos:column="116">,</op:operator>
            <comment type="block" pos:line="4321" pos:column="13">/* [out] */</comment> <name pos:line="4321" pos:column="25">__RPC__out</name> <name pos:line="4321" pos:column="36">_mdToken</name> <op:operator pos:line="4321" pos:column="45">*</op:operator><name pos:line="4321" pos:column="46">ptd</name><op:operator pos:line="4321" pos:column="49">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="4323" pos:column="9">HRESULT</name> <argument_list pos:line="4323" pos:column="17">( <argument pos:line="4323" pos:column="19">STDMETHODCALLTYPE *SetTypeDefProps</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4323" pos:column="55">(</op:operator> 
            <name pos:line="4324" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4324" pos:column="33">*</op:operator> <name pos:line="4324" pos:column="35">This</name><op:operator pos:line="4324" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4325" pos:column="13">/* [in] */</comment> <name pos:line="4325" pos:column="24">_mdToken</name> <name pos:line="4325" pos:column="33">td</name><op:operator pos:line="4325" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4326" pos:column="13">/* [in] */</comment> <name pos:line="4326" pos:column="24">__RPC__in</name> <name pos:line="4326" pos:column="34">INT64</name> <op:operator pos:line="4326" pos:column="40">*</op:operator><name pos:line="4326" pos:column="41">pVer</name><op:operator pos:line="4326" pos:column="45">,</op:operator>
            <comment type="block" pos:line="4327" pos:column="13">/* [in] */</comment> <name pos:line="4327" pos:column="24">DWORD</name> <name pos:line="4327" pos:column="30">dwTypeDefFlags</name><op:operator pos:line="4327" pos:column="44">,</op:operator>
            <comment type="block" pos:line="4328" pos:column="13">/* [in] */</comment> <name pos:line="4328" pos:column="24">_mdToken</name> <name pos:line="4328" pos:column="33">tkExtends</name><op:operator pos:line="4328" pos:column="42">,</op:operator>
            <comment type="block" pos:line="4329" pos:column="13">/* [in] */</comment> <name pos:line="4329" pos:column="24">DWORD</name> <name pos:line="4329" pos:column="30">dwExtendsFlags</name><op:operator pos:line="4329" pos:column="44">,</op:operator>
            <comment type="block" pos:line="4330" pos:column="13">/* [in] */</comment> <name pos:line="4330" pos:column="24">DWORD</name> <name pos:line="4330" pos:column="30">dwImplements</name><op:operator pos:line="4330" pos:column="42">,</op:operator>
            <comment type="block" pos:line="4331" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4331" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4331" pos:column="65">(<argument pos:line="4331" pos:column="66">dwImplements</argument>, <argument pos:line="4331" pos:column="80">dwImplements</argument>)</argument_list></macro> <name pos:line="4331" pos:column="94">_mdToken</name> <name><name pos:line="4331" pos:column="103">rtkImplements</name><index pos:line="4331" pos:column="116">[  ]</index></name><op:operator pos:line="4331" pos:column="120">,</op:operator>
            <comment type="block" pos:line="4332" pos:column="13">/* [in] */</comment> <name pos:line="4332" pos:column="24">DWORD</name> <name pos:line="4332" pos:column="30">dwEvents</name><op:operator pos:line="4332" pos:column="38">,</op:operator>
            <comment type="block" pos:line="4333" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4333" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4333" pos:column="65">(<argument pos:line="4333" pos:column="66">dwEvents</argument>, <argument pos:line="4333" pos:column="76">dwEvents</argument>)</argument_list></macro> <name pos:line="4333" pos:column="86">_mdToken</name> <name><name pos:line="4333" pos:column="95">rtkEvents</name><index pos:line="4333" pos:column="104">[  ]</index></name><op:operator pos:line="4333" pos:column="108">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="4335" pos:column="9">HRESULT</name></type> ( <name pos:line="4335" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4335" pos:column="37">*</type:modifier><name pos:line="4335" pos:column="38">SetClassSvcsContext</name> )<parameter_list pos:line="4335" pos:column="59">( 
            <param><decl><type><name pos:line="4336" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4336" pos:column="33">*</type:modifier></type> <name pos:line="4336" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4337" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4337" pos:column="24">_mdToken</name></type> <name pos:line="4337" pos:column="33">td</name></decl></param>,
            <comment type="block" pos:line="4338" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4338" pos:column="24">DWORD</name></type> <name pos:line="4338" pos:column="30">dwClassActivateAttr</name></decl></param>,
            <comment type="block" pos:line="4339" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4339" pos:column="24">DWORD</name></type> <name pos:line="4339" pos:column="30">dwClassThreadAttr</name></decl></param>,
            <comment type="block" pos:line="4340" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4340" pos:column="24">DWORD</name></type> <name pos:line="4340" pos:column="30">dwXactionAttr</name></decl></param>,
            <comment type="block" pos:line="4341" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4341" pos:column="24">DWORD</name></type> <name pos:line="4341" pos:column="30">dwSynchAttr</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4343" pos:column="9">HRESULT</name></type> ( <name pos:line="4343" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4343" pos:column="37">*</type:modifier><name pos:line="4343" pos:column="38">DefineTypeRefByGUID</name> )<parameter_list pos:line="4343" pos:column="59">( 
            <param><decl><type><name pos:line="4344" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4344" pos:column="33">*</type:modifier></type> <name pos:line="4344" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4345" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4345" pos:column="24">__RPC__in</name> <name pos:line="4345" pos:column="34">GUID</name> <type:modifier pos:line="4345" pos:column="39">*</type:modifier></type><name pos:line="4345" pos:column="40">pguid</name></decl></param>,
            <comment type="block" pos:line="4346" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4346" pos:column="25">__RPC__out</name> <name pos:line="4346" pos:column="36">_mdToken</name> <type:modifier pos:line="4346" pos:column="45">*</type:modifier></type><name pos:line="4346" pos:column="46">ptr</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4348" pos:column="9">HRESULT</name></type> ( <name pos:line="4348" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4348" pos:column="37">*</type:modifier><name pos:line="4348" pos:column="38">SetModuleReg</name> )<parameter_list pos:line="4348" pos:column="52">( 
            <param><decl><type><name pos:line="4349" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4349" pos:column="33">*</type:modifier></type> <name pos:line="4349" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4350" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4350" pos:column="24">DWORD</name></type> <name pos:line="4350" pos:column="30">dwModuleRegAttr</name></decl></param>,
            <comment type="block" pos:line="4351" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4351" pos:column="24">__RPC__in</name> <name pos:line="4351" pos:column="34">GUID</name> <type:modifier pos:line="4351" pos:column="39">*</type:modifier></type><name pos:line="4351" pos:column="40">pguid</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4353" pos:column="9">HRESULT</name></type> ( <name pos:line="4353" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4353" pos:column="37">*</type:modifier><name pos:line="4353" pos:column="38">SetClassReg</name> )<parameter_list pos:line="4353" pos:column="51">( 
            <param><decl><type><name pos:line="4354" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4354" pos:column="33">*</type:modifier></type> <name pos:line="4354" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4355" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4355" pos:column="24">_mdToken</name></type> <name pos:line="4355" pos:column="33">td</name></decl></param>,
            <comment type="block" pos:line="4356" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4356" pos:column="24">__RPC__in</name> <name pos:line="4356" pos:column="34">LPOLESTR</name></type> <name pos:line="4356" pos:column="43">szProgID</name></decl></param>,
            <comment type="block" pos:line="4357" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4357" pos:column="24">__RPC__in</name> <name pos:line="4357" pos:column="34">LPOLESTR</name></type> <name pos:line="4357" pos:column="43">szVIProgID</name></decl></param>,
            <comment type="block" pos:line="4358" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4358" pos:column="24">__RPC__in</name> <name pos:line="4358" pos:column="34">LPOLESTR</name></type> <name pos:line="4358" pos:column="43">szIconURL</name></decl></param>,
            <comment type="block" pos:line="4359" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4359" pos:column="24">ULONG</name></type> <name pos:line="4359" pos:column="30">ulIconResource</name></decl></param>,
            <comment type="block" pos:line="4360" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4360" pos:column="24">__RPC__in</name> <name pos:line="4360" pos:column="34">LPOLESTR</name></type> <name pos:line="4360" pos:column="43">szSmallIconURL</name></decl></param>,
            <comment type="block" pos:line="4361" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4361" pos:column="24">ULONG</name></type> <name pos:line="4361" pos:column="30">ulSmallIconResource</name></decl></param>,
            <comment type="block" pos:line="4362" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4362" pos:column="24">__RPC__in</name> <name pos:line="4362" pos:column="34">LPOLESTR</name></type> <name pos:line="4362" pos:column="43">szDefaultDispName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4364" pos:column="9">HRESULT</name></type> ( <name pos:line="4364" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4364" pos:column="37">*</type:modifier><name pos:line="4364" pos:column="38">SetIfaceReg</name> )<parameter_list pos:line="4364" pos:column="51">( 
            <param><decl><type><name pos:line="4365" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4365" pos:column="33">*</type:modifier></type> <name pos:line="4365" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4366" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4366" pos:column="24">_mdToken</name></type> <name pos:line="4366" pos:column="33">td</name></decl></param>,
            <comment type="block" pos:line="4367" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4367" pos:column="24">DWORD</name></type> <name pos:line="4367" pos:column="30">dwIfaceSvcs</name></decl></param>,
            <comment type="block" pos:line="4368" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4368" pos:column="24">__RPC__in</name> <name pos:line="4368" pos:column="34">GUID</name> <type:modifier pos:line="4368" pos:column="39">*</type:modifier></type><name pos:line="4368" pos:column="40">proxyStub</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4370" pos:column="9">HRESULT</name> <argument_list pos:line="4370" pos:column="17">( <argument pos:line="4370" pos:column="19">STDMETHODCALLTYPE *SetCategoryImpl</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4370" pos:column="55">(</op:operator> 
            <name pos:line="4371" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4371" pos:column="33">*</op:operator> <name pos:line="4371" pos:column="35">This</name><op:operator pos:line="4371" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4372" pos:column="13">/* [in] */</comment> <name pos:line="4372" pos:column="24">_mdToken</name> <name pos:line="4372" pos:column="33">td</name><op:operator pos:line="4372" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4373" pos:column="13">/* [in] */</comment> <name pos:line="4373" pos:column="24">DWORD</name> <name pos:line="4373" pos:column="30">dwImpl</name><op:operator pos:line="4373" pos:column="36">,</op:operator>
            <comment type="block" pos:line="4374" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4374" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4374" pos:column="65">(<argument pos:line="4374" pos:column="66">dwImpl</argument>, <argument pos:line="4374" pos:column="74">dwImpl</argument>)</argument_list></macro> <name pos:line="4374" pos:column="82">GUID</name> <name><name pos:line="4374" pos:column="87">rGuidCoCatImpl</name><index pos:line="4374" pos:column="101">[  ]</index></name><op:operator pos:line="4374" pos:column="105">,</op:operator>
            <comment type="block" pos:line="4375" pos:column="13">/* [in] */</comment> <name pos:line="4375" pos:column="24">DWORD</name> <name pos:line="4375" pos:column="30">dwReqd</name><op:operator pos:line="4375" pos:column="36">,</op:operator>
            <comment type="block" pos:line="4376" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4376" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4376" pos:column="65">(<argument pos:line="4376" pos:column="66">dwReqd</argument>, <argument pos:line="4376" pos:column="74">dwReqd</argument>)</argument_list></macro> <name pos:line="4376" pos:column="82">GUID</name> <name><name pos:line="4376" pos:column="87">rGuidCoCatReqd</name><index pos:line="4376" pos:column="101">[  ]</index></name><op:operator pos:line="4376" pos:column="105">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="4378" pos:column="9">HRESULT</name> <argument_list pos:line="4378" pos:column="17">( <argument pos:line="4378" pos:column="19">STDMETHODCALLTYPE *SetRedirectProgID</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4378" pos:column="57">(</op:operator> 
            <name pos:line="4379" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4379" pos:column="33">*</op:operator> <name pos:line="4379" pos:column="35">This</name><op:operator pos:line="4379" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4380" pos:column="13">/* [in] */</comment> <name pos:line="4380" pos:column="24">_mdToken</name> <name pos:line="4380" pos:column="33">td</name><op:operator pos:line="4380" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4381" pos:column="13">/* [in] */</comment> <name pos:line="4381" pos:column="24">DWORD</name> <name pos:line="4381" pos:column="30">dwProgIds</name><op:operator pos:line="4381" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4382" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4382" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4382" pos:column="65">(<argument pos:line="4382" pos:column="66">dwProgIds</argument>, <argument pos:line="4382" pos:column="77">dwProgIds</argument>)</argument_list></macro> <name pos:line="4382" pos:column="88">LPOLESTR</name> <name><name pos:line="4382" pos:column="97">rszRedirectProgID</name><index pos:line="4382" pos:column="114">[  ]</index></name><op:operator pos:line="4382" pos:column="118">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="4384" pos:column="9">HRESULT</name> <argument_list pos:line="4384" pos:column="17">( <argument pos:line="4384" pos:column="19">STDMETHODCALLTYPE *SetMimeTypeImpl</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4384" pos:column="55">(</op:operator> 
            <name pos:line="4385" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4385" pos:column="33">*</op:operator> <name pos:line="4385" pos:column="35">This</name><op:operator pos:line="4385" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4386" pos:column="13">/* [in] */</comment> <name pos:line="4386" pos:column="24">_mdToken</name> <name pos:line="4386" pos:column="33">td</name><op:operator pos:line="4386" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4387" pos:column="13">/* [in] */</comment> <name pos:line="4387" pos:column="24">DWORD</name> <name pos:line="4387" pos:column="30">dwTypes</name><op:operator pos:line="4387" pos:column="37">,</op:operator>
            <comment type="block" pos:line="4388" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4388" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4388" pos:column="65">(<argument pos:line="4388" pos:column="66">dwTypes</argument>, <argument pos:line="4388" pos:column="75">dwTypes</argument>)</argument_list></macro> <name pos:line="4388" pos:column="84">LPOLESTR</name> <name><name pos:line="4388" pos:column="93">rszMimeType</name><index pos:line="4388" pos:column="104">[  ]</index></name><op:operator pos:line="4388" pos:column="108">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="4390" pos:column="9">HRESULT</name> <argument_list pos:line="4390" pos:column="17">( <argument pos:line="4390" pos:column="19">STDMETHODCALLTYPE *SetFormatImpl</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4390" pos:column="53">(</op:operator> 
            <name pos:line="4391" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4391" pos:column="33">*</op:operator> <name pos:line="4391" pos:column="35">This</name><op:operator pos:line="4391" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4392" pos:column="13">/* [in] */</comment> <name pos:line="4392" pos:column="24">_mdToken</name> <name pos:line="4392" pos:column="33">td</name><op:operator pos:line="4392" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4393" pos:column="13">/* [in] */</comment> <name pos:line="4393" pos:column="24">DWORD</name> <name pos:line="4393" pos:column="30">dwSupported</name><op:operator pos:line="4393" pos:column="41">,</op:operator>
            <comment type="block" pos:line="4394" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4394" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4394" pos:column="65">(<argument pos:line="4394" pos:column="66">dwSupported</argument>, <argument pos:line="4394" pos:column="79">dwSupported</argument>)</argument_list></macro> <name pos:line="4394" pos:column="92">LPOLESTR</name> <name><name pos:line="4394" pos:column="101">rszFormatSupported</name><index pos:line="4394" pos:column="119">[  ]</index></name><op:operator pos:line="4394" pos:column="123">,</op:operator>
            <comment type="block" pos:line="4395" pos:column="13">/* [in] */</comment> <name pos:line="4395" pos:column="24">DWORD</name> <name pos:line="4395" pos:column="30">dwFrom</name><op:operator pos:line="4395" pos:column="36">,</op:operator>
            <comment type="block" pos:line="4396" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4396" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4396" pos:column="65">(<argument pos:line="4396" pos:column="66">dwFrom</argument>, <argument pos:line="4396" pos:column="74">dwFrom</argument>)</argument_list></macro> <name pos:line="4396" pos:column="82">LPOLESTR</name> <name><name pos:line="4396" pos:column="91">rszFormatConvertsFrom</name><index pos:line="4396" pos:column="112">[  ]</index></name><op:operator pos:line="4396" pos:column="116">,</op:operator>
            <comment type="block" pos:line="4397" pos:column="13">/* [in] */</comment> <name pos:line="4397" pos:column="24">DWORD</name> <name pos:line="4397" pos:column="30">dwTo</name><op:operator pos:line="4397" pos:column="34">,</op:operator>
            <comment type="block" pos:line="4398" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4398" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4398" pos:column="65">(<argument pos:line="4398" pos:column="66">dwTo</argument>, <argument pos:line="4398" pos:column="72">dwTo</argument>)</argument_list></macro> <name pos:line="4398" pos:column="78">LPOLESTR</name> <name><name pos:line="4398" pos:column="87">rszFormatConvertsTo</name><index pos:line="4398" pos:column="106">[  ]</index></name><op:operator pos:line="4398" pos:column="110">,</op:operator>
            <comment type="block" pos:line="4399" pos:column="13">/* [in] */</comment> <name pos:line="4399" pos:column="24">DWORD</name> <name pos:line="4399" pos:column="30">dwDefault</name><op:operator pos:line="4399" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4400" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4400" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4400" pos:column="65">(<argument pos:line="4400" pos:column="66">dwDefault</argument>, <argument pos:line="4400" pos:column="77">dwDefault</argument>)</argument_list></macro> <name pos:line="4400" pos:column="88">LPOLESTR</name> <name><name pos:line="4400" pos:column="97">rszFormatDefault</name><index pos:line="4400" pos:column="113">[  ]</index></name><op:operator pos:line="4400" pos:column="117">,</op:operator>
            <comment type="block" pos:line="4401" pos:column="13">/* [in] */</comment> <name pos:line="4401" pos:column="24">DWORD</name> <name pos:line="4401" pos:column="30">dwExt</name><op:operator pos:line="4401" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4402" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4402" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4402" pos:column="65">(<argument pos:line="4402" pos:column="66">dwExt</argument>, <argument pos:line="4402" pos:column="73">dwExt</argument>)</argument_list></macro> <name pos:line="4402" pos:column="80">LPOLESTR</name> <name><name pos:line="4402" pos:column="89">rszFileExt</name><index pos:line="4402" pos:column="99">[  ]</index></name><op:operator pos:line="4402" pos:column="103">,</op:operator>
            <comment type="block" pos:line="4403" pos:column="13">/* [in] */</comment> <name pos:line="4403" pos:column="24">DWORD</name> <name pos:line="4403" pos:column="30">dwType</name><op:operator pos:line="4403" pos:column="36">,</op:operator>
            <comment type="block" pos:line="4404" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4404" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4404" pos:column="65">(<argument pos:line="4404" pos:column="66">dwType</argument>, <argument pos:line="4404" pos:column="74">dwType</argument>)</argument_list></macro> <name pos:line="4404" pos:column="82">LPOLESTR</name> <name><name pos:line="4404" pos:column="91">rszFileType</name><index pos:line="4404" pos:column="102">[  ]</index></name><op:operator pos:line="4404" pos:column="106">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="4406" pos:column="9">HRESULT</name> <argument_list pos:line="4406" pos:column="17">( <argument pos:line="4406" pos:column="19">STDMETHODCALLTYPE *SetRoleCheck</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4406" pos:column="52">(</op:operator> 
            <name pos:line="4407" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4407" pos:column="33">*</op:operator> <name pos:line="4407" pos:column="35">This</name><op:operator pos:line="4407" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4408" pos:column="13">/* [in] */</comment> <name pos:line="4408" pos:column="24">_mdToken</name> <name pos:line="4408" pos:column="33">tk</name><op:operator pos:line="4408" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4409" pos:column="13">/* [in] */</comment> <name pos:line="4409" pos:column="24">DWORD</name> <name pos:line="4409" pos:column="30">dwNames</name><op:operator pos:line="4409" pos:column="37">,</op:operator>
            <comment type="block" pos:line="4410" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4410" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4410" pos:column="65">(<argument pos:line="4410" pos:column="66">dwNames</argument>, <argument pos:line="4410" pos:column="75">dwNames</argument>)</argument_list></macro> <name pos:line="4410" pos:column="84">LPOLESTR</name> <name><name pos:line="4410" pos:column="93">rszName</name><index pos:line="4410" pos:column="100">[  ]</index></name><op:operator pos:line="4410" pos:column="104">,</op:operator>
            <comment type="block" pos:line="4411" pos:column="13">/* [in] */</comment> <name pos:line="4411" pos:column="24">DWORD</name> <name pos:line="4411" pos:column="30">dwFlags</name><op:operator pos:line="4411" pos:column="37">,</op:operator>
            <comment type="block" pos:line="4412" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4412" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4412" pos:column="65">(<argument pos:line="4412" pos:column="66">dwFlags</argument>, <argument pos:line="4412" pos:column="75">dwFlags</argument>)</argument_list></macro> <name pos:line="4412" pos:column="84">DWORD</name> <name><name pos:line="4412" pos:column="90">rdwRoleFlags</name><index pos:line="4412" pos:column="102">[  ]</index></name><op:operator pos:line="4412" pos:column="106">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="4414" pos:column="9">HRESULT</name> <argument_list pos:line="4414" pos:column="17">( <argument pos:line="4414" pos:column="19">STDMETHODCALLTYPE *DefineMethod</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4414" pos:column="52">(</op:operator> 
            <name pos:line="4415" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4415" pos:column="33">*</op:operator> <name pos:line="4415" pos:column="35">This</name><op:operator pos:line="4415" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4416" pos:column="13">/* [in] */</comment> <name pos:line="4416" pos:column="24">_mdToken</name> <name pos:line="4416" pos:column="33">td</name><op:operator pos:line="4416" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4417" pos:column="13">/* [in] */</comment> <name pos:line="4417" pos:column="24">__RPC__in</name> <name pos:line="4417" pos:column="34">LPOLESTR</name> <name pos:line="4417" pos:column="43">szName</name><op:operator pos:line="4417" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4418" pos:column="13">/* [in] */</comment> <name pos:line="4418" pos:column="24">DWORD</name> <name pos:line="4418" pos:column="30">dwMethodFlags</name><op:operator pos:line="4418" pos:column="43">,</op:operator>
            <comment type="block" pos:line="4419" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="4419" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="4419" pos:column="54">(<argument pos:line="4419" pos:column="55">cbSigBlob</argument>)</argument_list></macro> <name pos:line="4419" pos:column="66">BYTE</name> <op:operator pos:line="4419" pos:column="71">*</op:operator><name pos:line="4419" pos:column="72">pvSigBlob</name><op:operator pos:line="4419" pos:column="81">,</op:operator>
            <comment type="block" pos:line="4420" pos:column="13">/* [in] */</comment> <name pos:line="4420" pos:column="24">ULONG</name> <name pos:line="4420" pos:column="30">cbSigBlob</name><op:operator pos:line="4420" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4421" pos:column="13">/* [in] */</comment> <name pos:line="4421" pos:column="24">ULONG</name> <name pos:line="4421" pos:column="30">ulSlot</name><op:operator pos:line="4421" pos:column="36">,</op:operator>
            <comment type="block" pos:line="4422" pos:column="13">/* [in] */</comment> <name pos:line="4422" pos:column="24">ULONG</name> <name pos:line="4422" pos:column="30">ulCodeRVA</name><op:operator pos:line="4422" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4423" pos:column="13">/* [in] */</comment> <name pos:line="4423" pos:column="24">DWORD</name> <name pos:line="4423" pos:column="30">dwImplFlags</name><op:operator pos:line="4423" pos:column="41">,</op:operator>
            <comment type="block" pos:line="4424" pos:column="13">/* [out] */</comment> <name pos:line="4424" pos:column="25">__RPC__out</name> <name pos:line="4424" pos:column="36">_mdToken</name> <op:operator pos:line="4424" pos:column="45">*</op:operator><name pos:line="4424" pos:column="46">pmd</name><op:operator pos:line="4424" pos:column="49">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="4426" pos:column="9">HRESULT</name> <argument_list pos:line="4426" pos:column="17">( <argument pos:line="4426" pos:column="19">STDMETHODCALLTYPE *DefineField</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4426" pos:column="51">(</op:operator> 
            <name pos:line="4427" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4427" pos:column="33">*</op:operator> <name pos:line="4427" pos:column="35">This</name><op:operator pos:line="4427" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4428" pos:column="13">/* [in] */</comment> <name pos:line="4428" pos:column="24">_mdToken</name> <name pos:line="4428" pos:column="33">td</name><op:operator pos:line="4428" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4429" pos:column="13">/* [in] */</comment> <name pos:line="4429" pos:column="24">__RPC__in</name> <name pos:line="4429" pos:column="34">LPOLESTR</name> <name pos:line="4429" pos:column="43">szName</name><op:operator pos:line="4429" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4430" pos:column="13">/* [in] */</comment> <name pos:line="4430" pos:column="24">DWORD</name> <name pos:line="4430" pos:column="30">dwFieldFlags</name><op:operator pos:line="4430" pos:column="42">,</op:operator>
            <comment type="block" pos:line="4431" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="4431" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="4431" pos:column="54">(<argument pos:line="4431" pos:column="55">cbSigBlob</argument>)</argument_list></macro> <name pos:line="4431" pos:column="66">BYTE</name> <op:operator pos:line="4431" pos:column="71">*</op:operator><name pos:line="4431" pos:column="72">pvSigBlob</name><op:operator pos:line="4431" pos:column="81">,</op:operator>
            <comment type="block" pos:line="4432" pos:column="13">/* [in] */</comment> <name pos:line="4432" pos:column="24">ULONG</name> <name pos:line="4432" pos:column="30">cbSigBlob</name><op:operator pos:line="4432" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4433" pos:column="13">/* [in] */</comment> <name pos:line="4433" pos:column="24">DWORD</name> <name pos:line="4433" pos:column="30">dwCPlusTypeFlag</name><op:operator pos:line="4433" pos:column="45">,</op:operator>
            <comment type="block" pos:line="4434" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="4434" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="4434" pos:column="54">(<argument pos:line="4434" pos:column="55">cbValue</argument>)</argument_list></macro> <name pos:line="4434" pos:column="64">BYTE</name> <op:operator pos:line="4434" pos:column="69">*</op:operator><name pos:line="4434" pos:column="70">pValue</name><op:operator pos:line="4434" pos:column="76">,</op:operator>
            <comment type="block" pos:line="4435" pos:column="13">/* [in] */</comment> <name pos:line="4435" pos:column="24">ULONG</name> <name pos:line="4435" pos:column="30">cbValue</name><op:operator pos:line="4435" pos:column="37">,</op:operator>
            <comment type="block" pos:line="4436" pos:column="13">/* [out] */</comment> <name pos:line="4436" pos:column="25">__RPC__out</name> <name pos:line="4436" pos:column="36">_mdToken</name> <op:operator pos:line="4436" pos:column="45">*</op:operator><name pos:line="4436" pos:column="46">pmd</name><op:operator pos:line="4436" pos:column="49">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="4438" pos:column="9">HRESULT</name> <argument_list pos:line="4438" pos:column="17">( <argument pos:line="4438" pos:column="19">STDMETHODCALLTYPE *SetParamProps</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4438" pos:column="53">(</op:operator> 
            <name pos:line="4439" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4439" pos:column="33">*</op:operator> <name pos:line="4439" pos:column="35">This</name><op:operator pos:line="4439" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4440" pos:column="13">/* [in] */</comment> <name pos:line="4440" pos:column="24">_mdToken</name> <name pos:line="4440" pos:column="33">md</name><op:operator pos:line="4440" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4441" pos:column="13">/* [in] */</comment> <name pos:line="4441" pos:column="24">ULONG</name> <name pos:line="4441" pos:column="30">ulParamSeq</name><op:operator pos:line="4441" pos:column="40">,</op:operator>
            <comment type="block" pos:line="4442" pos:column="13">/* [in] */</comment> <name pos:line="4442" pos:column="24">__RPC__in</name> <name pos:line="4442" pos:column="34">LPOLESTR</name> <name pos:line="4442" pos:column="43">szName</name><op:operator pos:line="4442" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4443" pos:column="13">/* [in] */</comment> <name pos:line="4443" pos:column="24">DWORD</name> <name pos:line="4443" pos:column="30">dwParamFlags</name><op:operator pos:line="4443" pos:column="42">,</op:operator>
            <comment type="block" pos:line="4444" pos:column="13">/* [in] */</comment> <name pos:line="4444" pos:column="24">DWORD</name> <name pos:line="4444" pos:column="30">dwCPlusTypeFlag</name><op:operator pos:line="4444" pos:column="45">,</op:operator>
            <comment type="block" pos:line="4445" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="4445" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="4445" pos:column="54">(<argument pos:line="4445" pos:column="55">cbValue</argument>)</argument_list></macro> <name pos:line="4445" pos:column="64">BYTE</name> <op:operator pos:line="4445" pos:column="69">*</op:operator><name pos:line="4445" pos:column="70">pValue</name><op:operator pos:line="4445" pos:column="76">,</op:operator>
            <comment type="block" pos:line="4446" pos:column="13">/* [in] */</comment> <name pos:line="4446" pos:column="24">ULONG</name> <name pos:line="4446" pos:column="30">cbValue</name><op:operator pos:line="4446" pos:column="37">,</op:operator>
            <comment type="block" pos:line="4447" pos:column="13">/* [out] */</comment> <name pos:line="4447" pos:column="25">__RPC__out</name> <name pos:line="4447" pos:column="36">_mdToken</name> <op:operator pos:line="4447" pos:column="45">*</op:operator><name pos:line="4447" pos:column="46">ppd</name><op:operator pos:line="4447" pos:column="49">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="4449" pos:column="9">HRESULT</name></type> ( <name pos:line="4449" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4449" pos:column="37">*</type:modifier><name pos:line="4449" pos:column="38">DefineMethodImpl</name> )<parameter_list pos:line="4449" pos:column="56">( 
            <param><decl><type><name pos:line="4450" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4450" pos:column="33">*</type:modifier></type> <name pos:line="4450" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4451" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4451" pos:column="24">_mdToken</name></type> <name pos:line="4451" pos:column="33">td</name></decl></param>,
            <comment type="block" pos:line="4452" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4452" pos:column="24">_mdToken</name></type> <name pos:line="4452" pos:column="33">tk</name></decl></param>,
            <comment type="block" pos:line="4453" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4453" pos:column="24">ULONG</name></type> <name pos:line="4453" pos:column="30">ulCodeRVA</name></decl></param>,
            <comment type="block" pos:line="4454" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4454" pos:column="24">DWORD</name></type> <name pos:line="4454" pos:column="30">dwImplFlags</name></decl></param>,
            <comment type="block" pos:line="4455" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4455" pos:column="25">__RPC__out</name> <name pos:line="4455" pos:column="36">_mdToken</name> <type:modifier pos:line="4455" pos:column="45">*</type:modifier></type><name pos:line="4455" pos:column="46">pmi</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4457" pos:column="9">HRESULT</name></type> ( <name pos:line="4457" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4457" pos:column="37">*</type:modifier><name pos:line="4457" pos:column="38">SetRVA</name> )<parameter_list pos:line="4457" pos:column="46">( 
            <param><decl><type><name pos:line="4458" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4458" pos:column="33">*</type:modifier></type> <name pos:line="4458" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4459" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4459" pos:column="24">_mdToken</name></type> <name pos:line="4459" pos:column="33">md</name></decl></param>,
            <comment type="block" pos:line="4460" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4460" pos:column="24">ULONG</name></type> <name pos:line="4460" pos:column="30">ulCodeRVA</name></decl></param>,
            <comment type="block" pos:line="4461" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4461" pos:column="24">DWORD</name></type> <name pos:line="4461" pos:column="30">dwImplFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4463" pos:column="9">HRESULT</name></type> ( <name pos:line="4463" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4463" pos:column="37">*</type:modifier><name pos:line="4463" pos:column="38">DefineTypeRefByName</name> )<parameter_list pos:line="4463" pos:column="59">( 
            <param><decl><type><name pos:line="4464" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4464" pos:column="33">*</type:modifier></type> <name pos:line="4464" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4465" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4465" pos:column="24">__RPC__in</name> <name pos:line="4465" pos:column="34">LPOLESTR</name></type> <name pos:line="4465" pos:column="43">szNamespace</name></decl></param>,
            <comment type="block" pos:line="4466" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4466" pos:column="24">__RPC__in</name> <name pos:line="4466" pos:column="34">LPOLESTR</name></type> <name pos:line="4466" pos:column="43">szType</name></decl></param>,
            <comment type="block" pos:line="4467" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4467" pos:column="25">__RPC__out</name> <name pos:line="4467" pos:column="36">_mdToken</name> <type:modifier pos:line="4467" pos:column="45">*</type:modifier></type><name pos:line="4467" pos:column="46">ptr</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4469" pos:column="9">HRESULT</name></type> ( <name pos:line="4469" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4469" pos:column="37">*</type:modifier><name pos:line="4469" pos:column="38">SetTypeRefBind</name> )<parameter_list pos:line="4469" pos:column="54">( 
            <param><decl><type><name pos:line="4470" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4470" pos:column="33">*</type:modifier></type> <name pos:line="4470" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4471" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4471" pos:column="24">_mdToken</name></type> <name pos:line="4471" pos:column="33">tr</name></decl></param>,
            <comment type="block" pos:line="4472" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4472" pos:column="24">DWORD</name></type> <name pos:line="4472" pos:column="30">dwBindFlags</name></decl></param>,
            <comment type="block" pos:line="4473" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4473" pos:column="24">DWORD</name></type> <name pos:line="4473" pos:column="30">dwMinVersion</name></decl></param>,
            <comment type="block" pos:line="4474" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4474" pos:column="24">DWORD</name></type> <name pos:line="4474" pos:column="30">dwMaxVersion</name></decl></param>,
            <comment type="block" pos:line="4475" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4475" pos:column="24">__RPC__in</name> <name pos:line="4475" pos:column="34">LPOLESTR</name></type> <name pos:line="4475" pos:column="43">szCodebase</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4477" pos:column="9">HRESULT</name> <argument_list pos:line="4477" pos:column="17">( <argument pos:line="4477" pos:column="19">STDMETHODCALLTYPE *DefineMemberRef</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4477" pos:column="55">(</op:operator> 
            <name pos:line="4478" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4478" pos:column="33">*</op:operator> <name pos:line="4478" pos:column="35">This</name><op:operator pos:line="4478" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4479" pos:column="13">/* [in] */</comment> <name pos:line="4479" pos:column="24">_mdToken</name> <name pos:line="4479" pos:column="33">tkImport</name><op:operator pos:line="4479" pos:column="41">,</op:operator>
            <comment type="block" pos:line="4480" pos:column="13">/* [in] */</comment> <name pos:line="4480" pos:column="24">__RPC__in</name> <name pos:line="4480" pos:column="34">LPOLESTR</name> <name pos:line="4480" pos:column="43">szName</name><op:operator pos:line="4480" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4481" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="4481" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="4481" pos:column="54">(<argument pos:line="4481" pos:column="55">cbSigBlob</argument>)</argument_list></macro> <name pos:line="4481" pos:column="66">BYTE</name> <op:operator pos:line="4481" pos:column="71">*</op:operator><name pos:line="4481" pos:column="72">pvSigBlob</name><op:operator pos:line="4481" pos:column="81">,</op:operator>
            <comment type="block" pos:line="4482" pos:column="13">/* [in] */</comment> <name pos:line="4482" pos:column="24">ULONG</name> <name pos:line="4482" pos:column="30">cbSigBlob</name><op:operator pos:line="4482" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4483" pos:column="13">/* [out] */</comment> <name pos:line="4483" pos:column="25">__RPC__out</name> <name pos:line="4483" pos:column="36">_mdToken</name> <op:operator pos:line="4483" pos:column="45">*</op:operator><name pos:line="4483" pos:column="46">pmr</name><op:operator pos:line="4483" pos:column="49">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="4485" pos:column="9">HRESULT</name></type> ( <name pos:line="4485" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4485" pos:column="37">*</type:modifier><name pos:line="4485" pos:column="38">DefineException</name> )<parameter_list pos:line="4485" pos:column="55">( 
            <param><decl><type><name pos:line="4486" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4486" pos:column="33">*</type:modifier></type> <name pos:line="4486" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4487" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4487" pos:column="24">_mdToken</name></type> <name pos:line="4487" pos:column="33">mb</name></decl></param>,
            <comment type="block" pos:line="4488" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4488" pos:column="24">_mdToken</name></type> <name pos:line="4488" pos:column="33">tk</name></decl></param>,
            <comment type="block" pos:line="4489" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4489" pos:column="25">__RPC__out</name> <name pos:line="4489" pos:column="36">_mdToken</name> <type:modifier pos:line="4489" pos:column="45">*</type:modifier></type><name pos:line="4489" pos:column="46">pex</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4491" pos:column="9">HRESULT</name> <argument_list pos:line="4491" pos:column="17">( <argument pos:line="4491" pos:column="19">STDMETHODCALLTYPE *DefineProperty</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4491" pos:column="54">(</op:operator> 
            <name pos:line="4492" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4492" pos:column="33">*</op:operator> <name pos:line="4492" pos:column="35">This</name><op:operator pos:line="4492" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4493" pos:column="13">/* [in] */</comment> <name pos:line="4493" pos:column="24">_mdToken</name> <name pos:line="4493" pos:column="33">td</name><op:operator pos:line="4493" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4494" pos:column="13">/* [in] */</comment> <name pos:line="4494" pos:column="24">__RPC__in</name> <name pos:line="4494" pos:column="34">LPOLESTR</name> <name pos:line="4494" pos:column="43">szProperty</name><op:operator pos:line="4494" pos:column="53">,</op:operator>
            <comment type="block" pos:line="4495" pos:column="13">/* [in] */</comment> <name pos:line="4495" pos:column="24">DWORD</name> <name pos:line="4495" pos:column="30">dwPropFlags</name><op:operator pos:line="4495" pos:column="41">,</op:operator>
            <comment type="block" pos:line="4496" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="4496" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="4496" pos:column="54">(<argument pos:line="4496" pos:column="55">cbSig</argument>)</argument_list></macro> <name pos:line="4496" pos:column="62">BYTE</name> <op:operator pos:line="4496" pos:column="67">*</op:operator><name pos:line="4496" pos:column="68">pvSig</name><op:operator pos:line="4496" pos:column="73">,</op:operator>
            <comment type="block" pos:line="4497" pos:column="13">/* [in] */</comment> <name pos:line="4497" pos:column="24">ULONG</name> <name pos:line="4497" pos:column="30">cbSig</name><op:operator pos:line="4497" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4498" pos:column="13">/* [in] */</comment> <name pos:line="4498" pos:column="24">DWORD</name> <name pos:line="4498" pos:column="30">dwCPlusTypeFlag</name><op:operator pos:line="4498" pos:column="45">,</op:operator>
            <comment type="block" pos:line="4499" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="4499" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="4499" pos:column="54">(<argument pos:line="4499" pos:column="55">cbValue</argument>)</argument_list></macro> <name pos:line="4499" pos:column="64">BYTE</name> <op:operator pos:line="4499" pos:column="69">*</op:operator><name pos:line="4499" pos:column="70">pValue</name><op:operator pos:line="4499" pos:column="76">,</op:operator>
            <comment type="block" pos:line="4500" pos:column="13">/* [in] */</comment> <name pos:line="4500" pos:column="24">ULONG</name> <name pos:line="4500" pos:column="30">cbValue</name><op:operator pos:line="4500" pos:column="37">,</op:operator>
            <comment type="block" pos:line="4501" pos:column="13">/* [in] */</comment> <name pos:line="4501" pos:column="24">_mdToken</name> <name pos:line="4501" pos:column="33">mdSetter</name><op:operator pos:line="4501" pos:column="41">,</op:operator>
            <comment type="block" pos:line="4502" pos:column="13">/* [in] */</comment> <name pos:line="4502" pos:column="24">_mdToken</name> <name pos:line="4502" pos:column="33">mdGetter</name><op:operator pos:line="4502" pos:column="41">,</op:operator>
            <comment type="block" pos:line="4503" pos:column="13">/* [in] */</comment> <name pos:line="4503" pos:column="24">_mdToken</name> <name pos:line="4503" pos:column="33">mdReset</name><op:operator pos:line="4503" pos:column="40">,</op:operator>
            <comment type="block" pos:line="4504" pos:column="13">/* [in] */</comment> <name pos:line="4504" pos:column="24">_mdToken</name> <name pos:line="4504" pos:column="33">mdTestDefault</name><op:operator pos:line="4504" pos:column="46">,</op:operator>
            <comment type="block" pos:line="4505" pos:column="13">/* [in] */</comment> <name pos:line="4505" pos:column="24">DWORD</name> <name pos:line="4505" pos:column="30">dwOthers</name><op:operator pos:line="4505" pos:column="38">,</op:operator>
            <comment type="block" pos:line="4506" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4506" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4506" pos:column="65">(<argument pos:line="4506" pos:column="66">dwOthers</argument>, <argument pos:line="4506" pos:column="76">dwOthers</argument>)</argument_list></macro> <name pos:line="4506" pos:column="86">_mdToken</name> <name><name pos:line="4506" pos:column="95">rmdOtherMethods</name><index pos:line="4506" pos:column="110">[  ]</index></name><op:operator pos:line="4506" pos:column="114">,</op:operator>
            <comment type="block" pos:line="4507" pos:column="13">/* [in] */</comment> <name pos:line="4507" pos:column="24">_mdToken</name> <name pos:line="4507" pos:column="33">evNotifyChanging</name><op:operator pos:line="4507" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4508" pos:column="13">/* [in] */</comment> <name pos:line="4508" pos:column="24">_mdToken</name> <name pos:line="4508" pos:column="33">evNotifyChanged</name><op:operator pos:line="4508" pos:column="48">,</op:operator>
            <comment type="block" pos:line="4509" pos:column="13">/* [in] */</comment> <name pos:line="4509" pos:column="24">_mdToken</name> <name pos:line="4509" pos:column="33">fdBackingField</name><op:operator pos:line="4509" pos:column="47">,</op:operator>
            <comment type="block" pos:line="4510" pos:column="13">/* [out] */</comment> <name pos:line="4510" pos:column="25">__RPC__out</name> <name pos:line="4510" pos:column="36">_mdToken</name> <op:operator pos:line="4510" pos:column="45">*</op:operator><name pos:line="4510" pos:column="46">pmdProp</name><op:operator pos:line="4510" pos:column="53">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="4512" pos:column="9">HRESULT</name> <argument_list pos:line="4512" pos:column="17">( <argument pos:line="4512" pos:column="19">STDMETHODCALLTYPE *DefineEvent</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4512" pos:column="51">(</op:operator> 
            <name pos:line="4513" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4513" pos:column="33">*</op:operator> <name pos:line="4513" pos:column="35">This</name><op:operator pos:line="4513" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4514" pos:column="13">/* [in] */</comment> <name pos:line="4514" pos:column="24">_mdToken</name> <name pos:line="4514" pos:column="33">td</name><op:operator pos:line="4514" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4515" pos:column="13">/* [in] */</comment> <name pos:line="4515" pos:column="24">__RPC__in</name> <name pos:line="4515" pos:column="34">LPOLESTR</name> <name pos:line="4515" pos:column="43">szEvent</name><op:operator pos:line="4515" pos:column="50">,</op:operator>
            <comment type="block" pos:line="4516" pos:column="13">/* [in] */</comment> <name pos:line="4516" pos:column="24">DWORD</name> <name pos:line="4516" pos:column="30">dwEventFlags</name><op:operator pos:line="4516" pos:column="42">,</op:operator>
            <comment type="block" pos:line="4517" pos:column="13">/* [in] */</comment> <name pos:line="4517" pos:column="24">_mdToken</name> <name pos:line="4517" pos:column="33">tkEventType</name><op:operator pos:line="4517" pos:column="44">,</op:operator>
            <comment type="block" pos:line="4518" pos:column="13">/* [in] */</comment> <name pos:line="4518" pos:column="24">_mdToken</name> <name pos:line="4518" pos:column="33">mdAddOn</name><op:operator pos:line="4518" pos:column="40">,</op:operator>
            <comment type="block" pos:line="4519" pos:column="13">/* [in] */</comment> <name pos:line="4519" pos:column="24">_mdToken</name> <name pos:line="4519" pos:column="33">mdRemoveOn</name><op:operator pos:line="4519" pos:column="43">,</op:operator>
            <comment type="block" pos:line="4520" pos:column="13">/* [in] */</comment> <name pos:line="4520" pos:column="24">_mdToken</name> <name pos:line="4520" pos:column="33">mdFire</name><op:operator pos:line="4520" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4521" pos:column="13">/* [in] */</comment> <name pos:line="4521" pos:column="24">DWORD</name> <name pos:line="4521" pos:column="30">dwOthers</name><op:operator pos:line="4521" pos:column="38">,</op:operator>
            <comment type="block" pos:line="4522" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="4522" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="4522" pos:column="65">(<argument pos:line="4522" pos:column="66">dwOthers</argument>, <argument pos:line="4522" pos:column="76">dwOthers</argument>)</argument_list></macro> <name pos:line="4522" pos:column="86">_mdToken</name> <name><name pos:line="4522" pos:column="95">rmdOtherMethods</name><index pos:line="4522" pos:column="110">[  ]</index></name><op:operator pos:line="4522" pos:column="114">,</op:operator>
            <comment type="block" pos:line="4523" pos:column="13">/* [out] */</comment> <name pos:line="4523" pos:column="25">__RPC__out</name> <name pos:line="4523" pos:column="36">_mdToken</name> <op:operator pos:line="4523" pos:column="45">*</op:operator><name pos:line="4523" pos:column="46">pmdEvent</name><op:operator pos:line="4523" pos:column="54">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="4525" pos:column="9">HRESULT</name> <argument_list pos:line="4525" pos:column="17">( <argument pos:line="4525" pos:column="19">STDMETHODCALLTYPE *SetFieldMarshal</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4525" pos:column="55">(</op:operator> 
            <name pos:line="4526" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4526" pos:column="33">*</op:operator> <name pos:line="4526" pos:column="35">This</name><op:operator pos:line="4526" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4527" pos:column="13">/* [in] */</comment> <name pos:line="4527" pos:column="24">_mdToken</name> <name pos:line="4527" pos:column="33">tk</name><op:operator pos:line="4527" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4528" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="4528" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="4528" pos:column="54">(<argument pos:line="4528" pos:column="55">cbNativeType</argument>)</argument_list></macro> <name pos:line="4528" pos:column="69">BYTE</name> <op:operator pos:line="4528" pos:column="74">*</op:operator><name pos:line="4528" pos:column="75">pvNativeType</name><op:operator pos:line="4528" pos:column="87">,</op:operator>
            <comment type="block" pos:line="4529" pos:column="13">/* [in] */</comment> <name pos:line="4529" pos:column="24">ULONG</name> <name pos:line="4529" pos:column="30">cbNativeType</name><op:operator pos:line="4529" pos:column="42">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="4531" pos:column="9">HRESULT</name> <argument_list pos:line="4531" pos:column="17">( <argument pos:line="4531" pos:column="19">STDMETHODCALLTYPE *DefinePermissionSet</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4531" pos:column="59">(</op:operator> 
            <name pos:line="4532" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4532" pos:column="33">*</op:operator> <name pos:line="4532" pos:column="35">This</name><op:operator pos:line="4532" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4533" pos:column="13">/* [in] */</comment> <name pos:line="4533" pos:column="24">_mdToken</name> <name pos:line="4533" pos:column="33">tk</name><op:operator pos:line="4533" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4534" pos:column="13">/* [in] */</comment> <name pos:line="4534" pos:column="24">DWORD</name> <name pos:line="4534" pos:column="30">dwAction</name><op:operator pos:line="4534" pos:column="38">,</op:operator>
            <comment type="block" pos:line="4535" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="4535" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="4535" pos:column="54">(<argument pos:line="4535" pos:column="55">cbPermission</argument>)</argument_list></macro> <name pos:line="4535" pos:column="69">BYTE</name> <op:operator pos:line="4535" pos:column="74">*</op:operator><name pos:line="4535" pos:column="75">pvPermission</name><op:operator pos:line="4535" pos:column="87">,</op:operator>
            <comment type="block" pos:line="4536" pos:column="13">/* [in] */</comment> <name pos:line="4536" pos:column="24">ULONG</name> <name pos:line="4536" pos:column="30">cbPermission</name><op:operator pos:line="4536" pos:column="42">,</op:operator>
            <comment type="block" pos:line="4537" pos:column="13">/* [out] */</comment> <name pos:line="4537" pos:column="25">__RPC__out</name> <name pos:line="4537" pos:column="36">_mdToken</name> <op:operator pos:line="4537" pos:column="45">*</op:operator><name pos:line="4537" pos:column="46">ppm</name><op:operator pos:line="4537" pos:column="49">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="4539" pos:column="9">HRESULT</name></type> ( <name pos:line="4539" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4539" pos:column="37">*</type:modifier><name pos:line="4539" pos:column="38">SetMemberIndex</name> )<parameter_list pos:line="4539" pos:column="54">( 
            <param><decl><type><name pos:line="4540" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4540" pos:column="33">*</type:modifier></type> <name pos:line="4540" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4541" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4541" pos:column="24">_mdToken</name></type> <name pos:line="4541" pos:column="33">md</name></decl></param>,
            <comment type="block" pos:line="4542" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4542" pos:column="24">ULONG</name></type> <name pos:line="4542" pos:column="30">ulIndex</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4544" pos:column="9">HRESULT</name> <argument_list pos:line="4544" pos:column="17">( <argument pos:line="4544" pos:column="19">STDMETHODCALLTYPE *GetTokenFromSig</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4544" pos:column="55">(</op:operator> 
            <name pos:line="4545" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4545" pos:column="33">*</op:operator> <name pos:line="4545" pos:column="35">This</name><op:operator pos:line="4545" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4546" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="4546" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="4546" pos:column="54">(<argument pos:line="4546" pos:column="55">cbSig</argument>)</argument_list></macro> <name pos:line="4546" pos:column="62">BYTE</name> <op:operator pos:line="4546" pos:column="67">*</op:operator><name pos:line="4546" pos:column="68">pvSig</name><op:operator pos:line="4546" pos:column="73">,</op:operator>
            <comment type="block" pos:line="4547" pos:column="13">/* [in] */</comment> <name pos:line="4547" pos:column="24">ULONG</name> <name pos:line="4547" pos:column="30">cbSig</name><op:operator pos:line="4547" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4548" pos:column="13">/* [in] */</comment> <name pos:line="4548" pos:column="24">__RPC__in</name> <name pos:line="4548" pos:column="34">_mdToken</name> <op:operator pos:line="4548" pos:column="43">*</op:operator><name pos:line="4548" pos:column="44">pmsig</name><op:operator pos:line="4548" pos:column="49">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="4550" pos:column="9">HRESULT</name></type> ( <name pos:line="4550" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4550" pos:column="37">*</type:modifier><name pos:line="4550" pos:column="38">DefineModuleRef</name> )<parameter_list pos:line="4550" pos:column="55">( 
            <param><decl><type><name pos:line="4551" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4551" pos:column="33">*</type:modifier></type> <name pos:line="4551" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4552" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4552" pos:column="24">__RPC__in</name> <name pos:line="4552" pos:column="34">LPOLESTR</name></type> <name pos:line="4552" pos:column="43">szName</name></decl></param>,
            <comment type="block" pos:line="4553" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4553" pos:column="24">__RPC__in</name> <name pos:line="4553" pos:column="34">GUID</name> <type:modifier pos:line="4553" pos:column="39">*</type:modifier></type><name pos:line="4553" pos:column="40">pguid</name></decl></param>,
            <comment type="block" pos:line="4554" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4554" pos:column="24">__RPC__in</name> <name pos:line="4554" pos:column="34">GUID</name> <type:modifier pos:line="4554" pos:column="39">*</type:modifier></type><name pos:line="4554" pos:column="40">pmvid</name></decl></param>,
            <comment type="block" pos:line="4555" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4555" pos:column="25">__RPC__out</name> <name pos:line="4555" pos:column="36">_mdToken</name> <type:modifier pos:line="4555" pos:column="45">*</type:modifier></type><name pos:line="4555" pos:column="46">pmur</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4557" pos:column="9">HRESULT</name></type> ( <name pos:line="4557" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4557" pos:column="37">*</type:modifier><name pos:line="4557" pos:column="38">SetParent</name> )<parameter_list pos:line="4557" pos:column="49">( 
            <param><decl><type><name pos:line="4558" pos:column="13">IDebugMetaDataEmit2</name> <type:modifier pos:line="4558" pos:column="33">*</type:modifier></type> <name pos:line="4558" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="4559" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4559" pos:column="24">_mdToken</name></type> <name pos:line="4559" pos:column="33">mr</name></decl></param>,
            <comment type="block" pos:line="4560" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4560" pos:column="24">_mdToken</name></type> <name pos:line="4560" pos:column="33">tk</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4562" pos:column="9">HRESULT</name> <argument_list pos:line="4562" pos:column="17">( <argument pos:line="4562" pos:column="19">STDMETHODCALLTYPE *GetTokenFromArraySpec</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4562" pos:column="61">(</op:operator> 
            <name pos:line="4563" pos:column="13">IDebugMetaDataEmit2</name> <op:operator pos:line="4563" pos:column="33">*</op:operator> <name pos:line="4563" pos:column="35">This</name><op:operator pos:line="4563" pos:column="39">,</op:operator>
            <comment type="block" pos:line="4564" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="4564" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="4564" pos:column="54">(<argument pos:line="4564" pos:column="55">cbSig</argument>)</argument_list></macro> <name pos:line="4564" pos:column="62">BYTE</name> <op:operator pos:line="4564" pos:column="67">*</op:operator><name pos:line="4564" pos:column="68">pvSig</name><op:operator pos:line="4564" pos:column="73">,</op:operator>
            <comment type="block" pos:line="4565" pos:column="13">/* [in] */</comment> <name pos:line="4565" pos:column="24">ULONG</name> <name pos:line="4565" pos:column="30">cbSig</name><op:operator pos:line="4565" pos:column="35">,</op:operator>
            <comment type="block" pos:line="4566" pos:column="13">/* [out] */</comment> <name pos:line="4566" pos:column="25">__RPC__out</name> <name pos:line="4566" pos:column="36">_mdToken</name> <op:operator pos:line="4566" pos:column="45">*</op:operator><name pos:line="4566" pos:column="46">parrspec</name><op:operator pos:line="4566" pos:column="54">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="4568" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4569" pos:column="7">IDebugMetaDataEmit2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4571" pos:column="5">interface</name></type> <name pos:line="4571" pos:column="15">IDebugMetaDataEmit2</name>
    <argument_list pos:line="4572" pos:column="5">{
        <argument><expr><name pos:line="4573" pos:column="9">CONST_VTBL</name> struct <name pos:line="4573" pos:column="27">IDebugMetaDataEmit2Vtbl</name> <op:operator pos:line="4573" pos:column="51">*</op:operator><name pos:line="4573" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4578" pos:column="1">#<cpp:directive pos:line="4578" pos:column="2">ifdef</cpp:directive> <name pos:line="4578" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4581" pos:column="1">#<cpp:directive pos:line="4581" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4581" pos:column="9">IDebugMetaDataEmit2_QueryInterface</name><parameter_list pos:line="4581" pos:column="43">(<param><type><name pos:line="4581" pos:column="44">This</name></type></param>,<param><type><name pos:line="4581" pos:column="49">riid</name></type></param>,<param><type><name pos:line="4581" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4582" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4584" pos:column="1">#<cpp:directive pos:line="4584" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4584" pos:column="9">IDebugMetaDataEmit2_AddRef</name><parameter_list pos:line="4584" pos:column="35">(<param><type><name pos:line="4584" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4585" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4587" pos:column="1">#<cpp:directive pos:line="4587" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4587" pos:column="9">IDebugMetaDataEmit2_Release</name><parameter_list pos:line="4587" pos:column="36">(<param><type><name pos:line="4587" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4588" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="4591" pos:column="1">#<cpp:directive pos:line="4591" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4591" pos:column="9">IDebugMetaDataEmit2_SetModuleProps</name><parameter_list pos:line="4591" pos:column="43">(<param><type><name pos:line="4591" pos:column="44">This</name></type></param>,<param><type><name pos:line="4591" pos:column="49">szName</name></type></param>,<param><type><name pos:line="4591" pos:column="56">ppid</name></type></param>,<param><type><name pos:line="4591" pos:column="61">lcid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4592" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetModuleProps(This,szName,ppid,lcid) )</cpp:value></cpp:define> 

<cpp:define pos:line="4594" pos:column="1">#<cpp:directive pos:line="4594" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4594" pos:column="9">IDebugMetaDataEmit2_Save</name><parameter_list pos:line="4594" pos:column="33">(<param><type><name pos:line="4594" pos:column="34">This</name></type></param>,<param><type><name pos:line="4594" pos:column="39">szFile</name></type></param>,<param><type><name pos:line="4594" pos:column="46">dwSaveFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4595" pos:column="5">( (This)-&gt;lpVtbl -&gt; Save(This,szFile,dwSaveFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="4597" pos:column="1">#<cpp:directive pos:line="4597" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4597" pos:column="9">IDebugMetaDataEmit2_SaveToStream</name><parameter_list pos:line="4597" pos:column="41">(<param><type><name pos:line="4597" pos:column="42">This</name></type></param>,<param><type><name pos:line="4597" pos:column="47">pIStream</name></type></param>,<param><type><name pos:line="4597" pos:column="56">dwSaveFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4598" pos:column="5">( (This)-&gt;lpVtbl -&gt; SaveToStream(This,pIStream,dwSaveFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="4600" pos:column="1">#<cpp:directive pos:line="4600" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4600" pos:column="9">IDebugMetaDataEmit2_GetSaveSize</name><parameter_list pos:line="4600" pos:column="40">(<param><type><name pos:line="4600" pos:column="41">This</name></type></param>,<param><type><name pos:line="4600" pos:column="46">fSave</name></type></param>,<param><type><name pos:line="4600" pos:column="52">pdwSaveSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4601" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSaveSize(This,fSave,pdwSaveSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="4603" pos:column="1">#<cpp:directive pos:line="4603" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4603" pos:column="9">IDebugMetaDataEmit2_DefineCustomValueAsBlob</name><parameter_list pos:line="4603" pos:column="52">(<param><type><name pos:line="4603" pos:column="53">This</name></type></param>,<param><type><name pos:line="4603" pos:column="58">tkObj</name></type></param>,<param><type><name pos:line="4603" pos:column="64">szName</name></type></param>,<param><type><name pos:line="4603" pos:column="71">pCustomValue</name></type></param>,<param><type><name pos:line="4603" pos:column="84">cbCustomValue</name></type></param>,<param><type><name pos:line="4603" pos:column="98">pcv</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4604" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineCustomValueAsBlob(This,tkObj,szName,pCustomValue,cbCustomValue,pcv) )</cpp:value></cpp:define> 

<cpp:define pos:line="4606" pos:column="1">#<cpp:directive pos:line="4606" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4606" pos:column="9">IDebugMetaDataEmit2_DefineTypeDef</name><parameter_list pos:line="4606" pos:column="42">(<param><type><name pos:line="4606" pos:column="43">This</name></type></param>,<param><type><name pos:line="4606" pos:column="48">szNamespace</name></type></param>,<param><type><name pos:line="4606" pos:column="60">szTypeDef</name></type></param>,<param><type><name pos:line="4606" pos:column="70">pguid</name></type></param>,<param><type><name pos:line="4606" pos:column="76">pVer</name></type></param>,<param><type><name pos:line="4606" pos:column="81">dwTypeDefFlags</name></type></param>,<param><type><name pos:line="4606" pos:column="96">tkExtends</name></type></param>,<param><type><name pos:line="4606" pos:column="106">dwExtendsFlags</name></type></param>,<param><type><name pos:line="4606" pos:column="121">dwImplements</name></type></param>,<param><type><name pos:line="4606" pos:column="134">rtkImplements</name></type></param>,<param><type><name pos:line="4606" pos:column="148">dwEvents</name></type></param>,<param><type><name pos:line="4606" pos:column="157">rtkEvents</name></type></param>,<param><type><name pos:line="4606" pos:column="167">ptd</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4607" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineTypeDef(This,szNamespace,szTypeDef,pguid,pVer,dwTypeDefFlags,tkExtends,dwExtendsFlags,dwImplements,rtkImplements,dwEvents,rtkEvents,ptd) )</cpp:value></cpp:define> 

<cpp:define pos:line="4609" pos:column="1">#<cpp:directive pos:line="4609" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4609" pos:column="9">IDebugMetaDataEmit2_SetTypeDefProps</name><parameter_list pos:line="4609" pos:column="44">(<param><type><name pos:line="4609" pos:column="45">This</name></type></param>,<param><type><name pos:line="4609" pos:column="50">td</name></type></param>,<param><type><name pos:line="4609" pos:column="53">pVer</name></type></param>,<param><type><name pos:line="4609" pos:column="58">dwTypeDefFlags</name></type></param>,<param><type><name pos:line="4609" pos:column="73">tkExtends</name></type></param>,<param><type><name pos:line="4609" pos:column="83">dwExtendsFlags</name></type></param>,<param><type><name pos:line="4609" pos:column="98">dwImplements</name></type></param>,<param><type><name pos:line="4609" pos:column="111">rtkImplements</name></type></param>,<param><type><name pos:line="4609" pos:column="125">dwEvents</name></type></param>,<param><type><name pos:line="4609" pos:column="134">rtkEvents</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4610" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetTypeDefProps(This,td,pVer,dwTypeDefFlags,tkExtends,dwExtendsFlags,dwImplements,rtkImplements,dwEvents,rtkEvents) )</cpp:value></cpp:define> 

<cpp:define pos:line="4612" pos:column="1">#<cpp:directive pos:line="4612" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4612" pos:column="9">IDebugMetaDataEmit2_SetClassSvcsContext</name><parameter_list pos:line="4612" pos:column="48">(<param><type><name pos:line="4612" pos:column="49">This</name></type></param>,<param><type><name pos:line="4612" pos:column="54">td</name></type></param>,<param><type><name pos:line="4612" pos:column="57">dwClassActivateAttr</name></type></param>,<param><type><name pos:line="4612" pos:column="77">dwClassThreadAttr</name></type></param>,<param><type><name pos:line="4612" pos:column="95">dwXactionAttr</name></type></param>,<param><type><name pos:line="4612" pos:column="109">dwSynchAttr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4613" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetClassSvcsContext(This,td,dwClassActivateAttr,dwClassThreadAttr,dwXactionAttr,dwSynchAttr) )</cpp:value></cpp:define> 

<cpp:define pos:line="4615" pos:column="1">#<cpp:directive pos:line="4615" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4615" pos:column="9">IDebugMetaDataEmit2_DefineTypeRefByGUID</name><parameter_list pos:line="4615" pos:column="48">(<param><type><name pos:line="4615" pos:column="49">This</name></type></param>,<param><type><name pos:line="4615" pos:column="54">pguid</name></type></param>,<param><type><name pos:line="4615" pos:column="60">ptr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4616" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineTypeRefByGUID(This,pguid,ptr) )</cpp:value></cpp:define> 

<cpp:define pos:line="4618" pos:column="1">#<cpp:directive pos:line="4618" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4618" pos:column="9">IDebugMetaDataEmit2_SetModuleReg</name><parameter_list pos:line="4618" pos:column="41">(<param><type><name pos:line="4618" pos:column="42">This</name></type></param>,<param><type><name pos:line="4618" pos:column="47">dwModuleRegAttr</name></type></param>,<param><type><name pos:line="4618" pos:column="63">pguid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4619" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetModuleReg(This,dwModuleRegAttr,pguid) )</cpp:value></cpp:define> 

<cpp:define pos:line="4621" pos:column="1">#<cpp:directive pos:line="4621" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4621" pos:column="9">IDebugMetaDataEmit2_SetClassReg</name><parameter_list pos:line="4621" pos:column="40">(<param><type><name pos:line="4621" pos:column="41">This</name></type></param>,<param><type><name pos:line="4621" pos:column="46">td</name></type></param>,<param><type><name pos:line="4621" pos:column="49">szProgID</name></type></param>,<param><type><name pos:line="4621" pos:column="58">szVIProgID</name></type></param>,<param><type><name pos:line="4621" pos:column="69">szIconURL</name></type></param>,<param><type><name pos:line="4621" pos:column="79">ulIconResource</name></type></param>,<param><type><name pos:line="4621" pos:column="94">szSmallIconURL</name></type></param>,<param><type><name pos:line="4621" pos:column="109">ulSmallIconResource</name></type></param>,<param><type><name pos:line="4621" pos:column="129">szDefaultDispName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4622" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetClassReg(This,td,szProgID,szVIProgID,szIconURL,ulIconResource,szSmallIconURL,ulSmallIconResource,szDefaultDispName) )</cpp:value></cpp:define> 

<cpp:define pos:line="4624" pos:column="1">#<cpp:directive pos:line="4624" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4624" pos:column="9">IDebugMetaDataEmit2_SetIfaceReg</name><parameter_list pos:line="4624" pos:column="40">(<param><type><name pos:line="4624" pos:column="41">This</name></type></param>,<param><type><name pos:line="4624" pos:column="46">td</name></type></param>,<param><type><name pos:line="4624" pos:column="49">dwIfaceSvcs</name></type></param>,<param><type><name pos:line="4624" pos:column="61">proxyStub</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4625" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetIfaceReg(This,td,dwIfaceSvcs,proxyStub) )</cpp:value></cpp:define> 

<cpp:define pos:line="4627" pos:column="1">#<cpp:directive pos:line="4627" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4627" pos:column="9">IDebugMetaDataEmit2_SetCategoryImpl</name><parameter_list pos:line="4627" pos:column="44">(<param><type><name pos:line="4627" pos:column="45">This</name></type></param>,<param><type><name pos:line="4627" pos:column="50">td</name></type></param>,<param><type><name pos:line="4627" pos:column="53">dwImpl</name></type></param>,<param><type><name pos:line="4627" pos:column="60">rGuidCoCatImpl</name></type></param>,<param><type><name pos:line="4627" pos:column="75">dwReqd</name></type></param>,<param><type><name pos:line="4627" pos:column="82">rGuidCoCatReqd</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4628" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetCategoryImpl(This,td,dwImpl,rGuidCoCatImpl,dwReqd,rGuidCoCatReqd) )</cpp:value></cpp:define> 

<cpp:define pos:line="4630" pos:column="1">#<cpp:directive pos:line="4630" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4630" pos:column="9">IDebugMetaDataEmit2_SetRedirectProgID</name><parameter_list pos:line="4630" pos:column="46">(<param><type><name pos:line="4630" pos:column="47">This</name></type></param>,<param><type><name pos:line="4630" pos:column="52">td</name></type></param>,<param><type><name pos:line="4630" pos:column="55">dwProgIds</name></type></param>,<param><type><name pos:line="4630" pos:column="65">rszRedirectProgID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4631" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetRedirectProgID(This,td,dwProgIds,rszRedirectProgID) )</cpp:value></cpp:define> 

<cpp:define pos:line="4633" pos:column="1">#<cpp:directive pos:line="4633" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4633" pos:column="9">IDebugMetaDataEmit2_SetMimeTypeImpl</name><parameter_list pos:line="4633" pos:column="44">(<param><type><name pos:line="4633" pos:column="45">This</name></type></param>,<param><type><name pos:line="4633" pos:column="50">td</name></type></param>,<param><type><name pos:line="4633" pos:column="53">dwTypes</name></type></param>,<param><type><name pos:line="4633" pos:column="61">rszMimeType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4634" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetMimeTypeImpl(This,td,dwTypes,rszMimeType) )</cpp:value></cpp:define> 

<cpp:define pos:line="4636" pos:column="1">#<cpp:directive pos:line="4636" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4636" pos:column="9">IDebugMetaDataEmit2_SetFormatImpl</name><parameter_list pos:line="4636" pos:column="42">(<param><type><name pos:line="4636" pos:column="43">This</name></type></param>,<param><type><name pos:line="4636" pos:column="48">td</name></type></param>,<param><type><name pos:line="4636" pos:column="51">dwSupported</name></type></param>,<param><type><name pos:line="4636" pos:column="63">rszFormatSupported</name></type></param>,<param><type><name pos:line="4636" pos:column="82">dwFrom</name></type></param>,<param><type><name pos:line="4636" pos:column="89">rszFormatConvertsFrom</name></type></param>,<param><type><name pos:line="4636" pos:column="111">dwTo</name></type></param>,<param><type><name pos:line="4636" pos:column="116">rszFormatConvertsTo</name></type></param>,<param><type><name pos:line="4636" pos:column="136">dwDefault</name></type></param>,<param><type><name pos:line="4636" pos:column="146">rszFormatDefault</name></type></param>,<param><type><name pos:line="4636" pos:column="163">dwExt</name></type></param>,<param><type><name pos:line="4636" pos:column="169">rszFileExt</name></type></param>,<param><type><name pos:line="4636" pos:column="180">dwType</name></type></param>,<param><type><name pos:line="4636" pos:column="187">rszFileType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4637" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetFormatImpl(This,td,dwSupported,rszFormatSupported,dwFrom,rszFormatConvertsFrom,dwTo,rszFormatConvertsTo,dwDefault,rszFormatDefault,dwExt,rszFileExt,dwType,rszFileType) )</cpp:value></cpp:define> 

<cpp:define pos:line="4639" pos:column="1">#<cpp:directive pos:line="4639" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4639" pos:column="9">IDebugMetaDataEmit2_SetRoleCheck</name><parameter_list pos:line="4639" pos:column="41">(<param><type><name pos:line="4639" pos:column="42">This</name></type></param>,<param><type><name pos:line="4639" pos:column="47">tk</name></type></param>,<param><type><name pos:line="4639" pos:column="50">dwNames</name></type></param>,<param><type><name pos:line="4639" pos:column="58">rszName</name></type></param>,<param><type><name pos:line="4639" pos:column="66">dwFlags</name></type></param>,<param><type><name pos:line="4639" pos:column="74">rdwRoleFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4640" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetRoleCheck(This,tk,dwNames,rszName,dwFlags,rdwRoleFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="4642" pos:column="1">#<cpp:directive pos:line="4642" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4642" pos:column="9">IDebugMetaDataEmit2_DefineMethod</name><parameter_list pos:line="4642" pos:column="41">(<param><type><name pos:line="4642" pos:column="42">This</name></type></param>,<param><type><name pos:line="4642" pos:column="47">td</name></type></param>,<param><type><name pos:line="4642" pos:column="50">szName</name></type></param>,<param><type><name pos:line="4642" pos:column="57">dwMethodFlags</name></type></param>,<param><type><name pos:line="4642" pos:column="71">pvSigBlob</name></type></param>,<param><type><name pos:line="4642" pos:column="81">cbSigBlob</name></type></param>,<param><type><name pos:line="4642" pos:column="91">ulSlot</name></type></param>,<param><type><name pos:line="4642" pos:column="98">ulCodeRVA</name></type></param>,<param><type><name pos:line="4642" pos:column="108">dwImplFlags</name></type></param>,<param><type><name pos:line="4642" pos:column="120">pmd</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4643" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineMethod(This,td,szName,dwMethodFlags,pvSigBlob,cbSigBlob,ulSlot,ulCodeRVA,dwImplFlags,pmd) )</cpp:value></cpp:define> 

<cpp:define pos:line="4645" pos:column="1">#<cpp:directive pos:line="4645" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4645" pos:column="9">IDebugMetaDataEmit2_DefineField</name><parameter_list pos:line="4645" pos:column="40">(<param><type><name pos:line="4645" pos:column="41">This</name></type></param>,<param><type><name pos:line="4645" pos:column="46">td</name></type></param>,<param><type><name pos:line="4645" pos:column="49">szName</name></type></param>,<param><type><name pos:line="4645" pos:column="56">dwFieldFlags</name></type></param>,<param><type><name pos:line="4645" pos:column="69">pvSigBlob</name></type></param>,<param><type><name pos:line="4645" pos:column="79">cbSigBlob</name></type></param>,<param><type><name pos:line="4645" pos:column="89">dwCPlusTypeFlag</name></type></param>,<param><type><name pos:line="4645" pos:column="105">pValue</name></type></param>,<param><type><name pos:line="4645" pos:column="112">cbValue</name></type></param>,<param><type><name pos:line="4645" pos:column="120">pmd</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4646" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineField(This,td,szName,dwFieldFlags,pvSigBlob,cbSigBlob,dwCPlusTypeFlag,pValue,cbValue,pmd) )</cpp:value></cpp:define> 

<cpp:define pos:line="4648" pos:column="1">#<cpp:directive pos:line="4648" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4648" pos:column="9">IDebugMetaDataEmit2_SetParamProps</name><parameter_list pos:line="4648" pos:column="42">(<param><type><name pos:line="4648" pos:column="43">This</name></type></param>,<param><type><name pos:line="4648" pos:column="48">md</name></type></param>,<param><type><name pos:line="4648" pos:column="51">ulParamSeq</name></type></param>,<param><type><name pos:line="4648" pos:column="62">szName</name></type></param>,<param><type><name pos:line="4648" pos:column="69">dwParamFlags</name></type></param>,<param><type><name pos:line="4648" pos:column="82">dwCPlusTypeFlag</name></type></param>,<param><type><name pos:line="4648" pos:column="98">pValue</name></type></param>,<param><type><name pos:line="4648" pos:column="105">cbValue</name></type></param>,<param><type><name pos:line="4648" pos:column="113">ppd</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4649" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetParamProps(This,md,ulParamSeq,szName,dwParamFlags,dwCPlusTypeFlag,pValue,cbValue,ppd) )</cpp:value></cpp:define> 

<cpp:define pos:line="4651" pos:column="1">#<cpp:directive pos:line="4651" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4651" pos:column="9">IDebugMetaDataEmit2_DefineMethodImpl</name><parameter_list pos:line="4651" pos:column="45">(<param><type><name pos:line="4651" pos:column="46">This</name></type></param>,<param><type><name pos:line="4651" pos:column="51">td</name></type></param>,<param><type><name pos:line="4651" pos:column="54">tk</name></type></param>,<param><type><name pos:line="4651" pos:column="57">ulCodeRVA</name></type></param>,<param><type><name pos:line="4651" pos:column="67">dwImplFlags</name></type></param>,<param><type><name pos:line="4651" pos:column="79">pmi</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4652" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineMethodImpl(This,td,tk,ulCodeRVA,dwImplFlags,pmi) )</cpp:value></cpp:define> 

<cpp:define pos:line="4654" pos:column="1">#<cpp:directive pos:line="4654" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4654" pos:column="9">IDebugMetaDataEmit2_SetRVA</name><parameter_list pos:line="4654" pos:column="35">(<param><type><name pos:line="4654" pos:column="36">This</name></type></param>,<param><type><name pos:line="4654" pos:column="41">md</name></type></param>,<param><type><name pos:line="4654" pos:column="44">ulCodeRVA</name></type></param>,<param><type><name pos:line="4654" pos:column="54">dwImplFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4655" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetRVA(This,md,ulCodeRVA,dwImplFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="4657" pos:column="1">#<cpp:directive pos:line="4657" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4657" pos:column="9">IDebugMetaDataEmit2_DefineTypeRefByName</name><parameter_list pos:line="4657" pos:column="48">(<param><type><name pos:line="4657" pos:column="49">This</name></type></param>,<param><type><name pos:line="4657" pos:column="54">szNamespace</name></type></param>,<param><type><name pos:line="4657" pos:column="66">szType</name></type></param>,<param><type><name pos:line="4657" pos:column="73">ptr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4658" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineTypeRefByName(This,szNamespace,szType,ptr) )</cpp:value></cpp:define> 

<cpp:define pos:line="4660" pos:column="1">#<cpp:directive pos:line="4660" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4660" pos:column="9">IDebugMetaDataEmit2_SetTypeRefBind</name><parameter_list pos:line="4660" pos:column="43">(<param><type><name pos:line="4660" pos:column="44">This</name></type></param>,<param><type><name pos:line="4660" pos:column="49">tr</name></type></param>,<param><type><name pos:line="4660" pos:column="52">dwBindFlags</name></type></param>,<param><type><name pos:line="4660" pos:column="64">dwMinVersion</name></type></param>,<param><type><name pos:line="4660" pos:column="77">dwMaxVersion</name></type></param>,<param><type><name pos:line="4660" pos:column="90">szCodebase</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4661" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetTypeRefBind(This,tr,dwBindFlags,dwMinVersion,dwMaxVersion,szCodebase) )</cpp:value></cpp:define> 

<cpp:define pos:line="4663" pos:column="1">#<cpp:directive pos:line="4663" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4663" pos:column="9">IDebugMetaDataEmit2_DefineMemberRef</name><parameter_list pos:line="4663" pos:column="44">(<param><type><name pos:line="4663" pos:column="45">This</name></type></param>,<param><type><name pos:line="4663" pos:column="50">tkImport</name></type></param>,<param><type><name pos:line="4663" pos:column="59">szName</name></type></param>,<param><type><name pos:line="4663" pos:column="66">pvSigBlob</name></type></param>,<param><type><name pos:line="4663" pos:column="76">cbSigBlob</name></type></param>,<param><type><name pos:line="4663" pos:column="86">pmr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4664" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineMemberRef(This,tkImport,szName,pvSigBlob,cbSigBlob,pmr) )</cpp:value></cpp:define> 

<cpp:define pos:line="4666" pos:column="1">#<cpp:directive pos:line="4666" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4666" pos:column="9">IDebugMetaDataEmit2_DefineException</name><parameter_list pos:line="4666" pos:column="44">(<param><type><name pos:line="4666" pos:column="45">This</name></type></param>,<param><type><name pos:line="4666" pos:column="50">mb</name></type></param>,<param><type><name pos:line="4666" pos:column="53">tk</name></type></param>,<param><type><name pos:line="4666" pos:column="56">pex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4667" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineException(This,mb,tk,pex) )</cpp:value></cpp:define> 

<cpp:define pos:line="4669" pos:column="1">#<cpp:directive pos:line="4669" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4669" pos:column="9">IDebugMetaDataEmit2_DefineProperty</name><parameter_list pos:line="4669" pos:column="43">(<param><type><name pos:line="4669" pos:column="44">This</name></type></param>,<param><type><name pos:line="4669" pos:column="49">td</name></type></param>,<param><type><name pos:line="4669" pos:column="52">szProperty</name></type></param>,<param><type><name pos:line="4669" pos:column="63">dwPropFlags</name></type></param>,<param><type><name pos:line="4669" pos:column="75">pvSig</name></type></param>,<param><type><name pos:line="4669" pos:column="81">cbSig</name></type></param>,<param><type><name pos:line="4669" pos:column="87">dwCPlusTypeFlag</name></type></param>,<param><type><name pos:line="4669" pos:column="103">pValue</name></type></param>,<param><type><name pos:line="4669" pos:column="110">cbValue</name></type></param>,<param><type><name pos:line="4669" pos:column="118">mdSetter</name></type></param>,<param><type><name pos:line="4669" pos:column="127">mdGetter</name></type></param>,<param><type><name pos:line="4669" pos:column="136">mdReset</name></type></param>,<param><type><name pos:line="4669" pos:column="144">mdTestDefault</name></type></param>,<param><type><name pos:line="4669" pos:column="158">dwOthers</name></type></param>,<param><type><name pos:line="4669" pos:column="167">rmdOtherMethods</name></type></param>,<param><type><name pos:line="4669" pos:column="183">evNotifyChanging</name></type></param>,<param><type><name pos:line="4669" pos:column="200">evNotifyChanged</name></type></param>,<param><type><name pos:line="4669" pos:column="216">fdBackingField</name></type></param>,<param><type><name pos:line="4669" pos:column="231">pmdProp</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4670" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineProperty(This,td,szProperty,dwPropFlags,pvSig,cbSig,dwCPlusTypeFlag,pValue,cbValue,mdSetter,mdGetter,mdReset,mdTestDefault,dwOthers,rmdOtherMethods,evNotifyChanging,evNotifyChanged,fdBackingField,pmdProp) )</cpp:value></cpp:define> 

<cpp:define pos:line="4672" pos:column="1">#<cpp:directive pos:line="4672" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4672" pos:column="9">IDebugMetaDataEmit2_DefineEvent</name><parameter_list pos:line="4672" pos:column="40">(<param><type><name pos:line="4672" pos:column="41">This</name></type></param>,<param><type><name pos:line="4672" pos:column="46">td</name></type></param>,<param><type><name pos:line="4672" pos:column="49">szEvent</name></type></param>,<param><type><name pos:line="4672" pos:column="57">dwEventFlags</name></type></param>,<param><type><name pos:line="4672" pos:column="70">tkEventType</name></type></param>,<param><type><name pos:line="4672" pos:column="82">mdAddOn</name></type></param>,<param><type><name pos:line="4672" pos:column="90">mdRemoveOn</name></type></param>,<param><type><name pos:line="4672" pos:column="101">mdFire</name></type></param>,<param><type><name pos:line="4672" pos:column="108">dwOthers</name></type></param>,<param><type><name pos:line="4672" pos:column="117">rmdOtherMethods</name></type></param>,<param><type><name pos:line="4672" pos:column="133">pmdEvent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4673" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineEvent(This,td,szEvent,dwEventFlags,tkEventType,mdAddOn,mdRemoveOn,mdFire,dwOthers,rmdOtherMethods,pmdEvent) )</cpp:value></cpp:define> 

<cpp:define pos:line="4675" pos:column="1">#<cpp:directive pos:line="4675" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4675" pos:column="9">IDebugMetaDataEmit2_SetFieldMarshal</name><parameter_list pos:line="4675" pos:column="44">(<param><type><name pos:line="4675" pos:column="45">This</name></type></param>,<param><type><name pos:line="4675" pos:column="50">tk</name></type></param>,<param><type><name pos:line="4675" pos:column="53">pvNativeType</name></type></param>,<param><type><name pos:line="4675" pos:column="66">cbNativeType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4676" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetFieldMarshal(This,tk,pvNativeType,cbNativeType) )</cpp:value></cpp:define> 

<cpp:define pos:line="4678" pos:column="1">#<cpp:directive pos:line="4678" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4678" pos:column="9">IDebugMetaDataEmit2_DefinePermissionSet</name><parameter_list pos:line="4678" pos:column="48">(<param><type><name pos:line="4678" pos:column="49">This</name></type></param>,<param><type><name pos:line="4678" pos:column="54">tk</name></type></param>,<param><type><name pos:line="4678" pos:column="57">dwAction</name></type></param>,<param><type><name pos:line="4678" pos:column="66">pvPermission</name></type></param>,<param><type><name pos:line="4678" pos:column="79">cbPermission</name></type></param>,<param><type><name pos:line="4678" pos:column="92">ppm</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4679" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefinePermissionSet(This,tk,dwAction,pvPermission,cbPermission,ppm) )</cpp:value></cpp:define> 

<cpp:define pos:line="4681" pos:column="1">#<cpp:directive pos:line="4681" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4681" pos:column="9">IDebugMetaDataEmit2_SetMemberIndex</name><parameter_list pos:line="4681" pos:column="43">(<param><type><name pos:line="4681" pos:column="44">This</name></type></param>,<param><type><name pos:line="4681" pos:column="49">md</name></type></param>,<param><type><name pos:line="4681" pos:column="52">ulIndex</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4682" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetMemberIndex(This,md,ulIndex) )</cpp:value></cpp:define> 

<cpp:define pos:line="4684" pos:column="1">#<cpp:directive pos:line="4684" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4684" pos:column="9">IDebugMetaDataEmit2_GetTokenFromSig</name><parameter_list pos:line="4684" pos:column="44">(<param><type><name pos:line="4684" pos:column="45">This</name></type></param>,<param><type><name pos:line="4684" pos:column="50">pvSig</name></type></param>,<param><type><name pos:line="4684" pos:column="56">cbSig</name></type></param>,<param><type><name pos:line="4684" pos:column="62">pmsig</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4685" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTokenFromSig(This,pvSig,cbSig,pmsig) )</cpp:value></cpp:define> 

<cpp:define pos:line="4687" pos:column="1">#<cpp:directive pos:line="4687" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4687" pos:column="9">IDebugMetaDataEmit2_DefineModuleRef</name><parameter_list pos:line="4687" pos:column="44">(<param><type><name pos:line="4687" pos:column="45">This</name></type></param>,<param><type><name pos:line="4687" pos:column="50">szName</name></type></param>,<param><type><name pos:line="4687" pos:column="57">pguid</name></type></param>,<param><type><name pos:line="4687" pos:column="63">pmvid</name></type></param>,<param><type><name pos:line="4687" pos:column="69">pmur</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4688" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineModuleRef(This,szName,pguid,pmvid,pmur) )</cpp:value></cpp:define> 

<cpp:define pos:line="4690" pos:column="1">#<cpp:directive pos:line="4690" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4690" pos:column="9">IDebugMetaDataEmit2_SetParent</name><parameter_list pos:line="4690" pos:column="38">(<param><type><name pos:line="4690" pos:column="39">This</name></type></param>,<param><type><name pos:line="4690" pos:column="44">mr</name></type></param>,<param><type><name pos:line="4690" pos:column="47">tk</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4691" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetParent(This,mr,tk) )</cpp:value></cpp:define> 

<cpp:define pos:line="4693" pos:column="1">#<cpp:directive pos:line="4693" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4693" pos:column="9">IDebugMetaDataEmit2_GetTokenFromArraySpec</name><parameter_list pos:line="4693" pos:column="50">(<param><type><name pos:line="4693" pos:column="51">This</name></type></param>,<param><type><name pos:line="4693" pos:column="56">pvSig</name></type></param>,<param><type><name pos:line="4693" pos:column="62">cbSig</name></type></param>,<param><type><name pos:line="4693" pos:column="68">parrspec</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4694" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTokenFromArraySpec(This,pvSig,cbSig,parrspec) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4696" pos:column="1">#<cpp:directive pos:line="4696" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4696" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4699" pos:column="1">#<cpp:directive pos:line="4699" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4699" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4704" pos:column="1">#<cpp:directive pos:line="4704" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4704" pos:column="9">/* __IDebugMetaDataEmit2_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="4707" pos:column="1">/* interface __MIDL_itf_enc_0000_0028 */</comment>
<comment type="block" pos:line="4708" pos:column="1">/* [local] */</comment> 

<cpp:pragma pos:line="4710" pos:column="1">#<cpp:directive pos:line="4710" pos:column="2">pragma</cpp:directive> warning(pop)</cpp:pragma>
<cpp:pragma pos:line="4711" pos:column="1">#<cpp:directive pos:line="4711" pos:column="2">pragma</cpp:directive> warning(push)</cpp:pragma>
<cpp:pragma pos:line="4712" pos:column="1">#<cpp:directive pos:line="4712" pos:column="2">pragma</cpp:directive> warning(disable:28718)</cpp:pragma>	


<decl_stmt><decl><type><specifier pos:line="4715" pos:column="1">extern</specifier> <name pos:line="4715" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="4715" pos:column="22">__MIDL_itf_enc_0000_0028_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="4716" pos:column="1">extern</specifier> <name pos:line="4716" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="4716" pos:column="22">__MIDL_itf_enc_0000_0028_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="4718" pos:column="1">#<cpp:directive pos:line="4718" pos:column="2">ifndef</cpp:directive> <name pos:line="4718" pos:column="9">__IDebugMetaDataDebugEmit2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4719" pos:column="1">#<cpp:directive pos:line="4719" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4719" pos:column="9">__IDebugMetaDataDebugEmit2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4721" pos:column="1">/* interface IDebugMetaDataDebugEmit2 */</comment>
<comment type="block" pos:line="4722" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="4725" pos:column="1">EXTERN_C</name> <specifier pos:line="4725" pos:column="10">const</specifier> <name pos:line="4725" pos:column="16">IID</name></type> <name pos:line="4725" pos:column="20">IID_IDebugMetaDataDebugEmit2</name></decl>;</decl_stmt>

<cpp:if pos:line="4727" pos:column="1">#<cpp:directive pos:line="4727" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4727" pos:column="5">defined</name><argument_list pos:line="4727" pos:column="12">(<argument><expr><name pos:line="4727" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4727" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4727" pos:column="29">!</op:operator><call><name pos:line="4727" pos:column="30">defined</name><argument_list pos:line="4727" pos:column="37">(<argument><expr><name pos:line="4727" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4729" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4729" pos:column="19">(<argument pos:line="4729" pos:column="20">"f6f94d22-78c2-11d2-8ffe-00c04fa38314"</argument>)</argument_list></macro>
    <label><name pos:line="4730" pos:column="5">IDebugMetaDataDebugEmit2</name> :</label> <expr_stmt><expr pos:line="4730" pos:column="32">public <name pos:line="4730" pos:column="39">IUnknown</name>
    <block pos:line="4731" pos:column="5">{
    <expr pos:line="4732" pos:column="5">public<op:operator pos:line="4732" pos:column="11">:</op:operator>
        virtual <name pos:line="4733" pos:column="17">HRESULT</name> <name pos:line="4733" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4733" pos:column="43">DefineSourceFile</name><argument_list pos:line="4733" pos:column="59">( 
            <comment type="block" pos:line="4734" pos:column="13">/* [in] */</comment> <argument pos:line="4734" pos:column="24">__RPC__in LPOLESTR szFileName</argument>,
            <comment type="block" pos:line="4735" pos:column="13">/* [out] */</comment> <argument pos:line="4735" pos:column="25">__RPC__out _mdToken *psourcefile</argument>)</argument_list></macro> <op:operator pos:line="4735" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="4735" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="4737" pos:column="9">virtual <name pos:line="4737" pos:column="17">HRESULT</name> <name pos:line="4737" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4737" pos:column="43">DefineBlock</name><argument_list pos:line="4737" pos:column="54">( 
            <comment type="block" pos:line="4738" pos:column="13">/* [in] */</comment> <argument pos:line="4738" pos:column="24">_mdToken member</argument>,
            <comment type="block" pos:line="4739" pos:column="13">/* [in] */</comment> <argument pos:line="4739" pos:column="24">_mdToken sourcefile</argument>,
            <comment type="block" pos:line="4740" pos:column="13">/* [in] */</comment> <argument pos:line="4740" pos:column="24">__RPC__in BYTE *pAttr</argument>,
            <comment type="block" pos:line="4741" pos:column="13">/* [in] */</comment> <argument pos:line="4741" pos:column="24">ULONG cbAttr</argument>)</argument_list></macro> <op:operator pos:line="4741" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="4741" pos:column="40">0</lit:literal></expr>;
        
        <expr pos:line="4743" pos:column="9">virtual <name pos:line="4743" pos:column="17">HRESULT</name> <name pos:line="4743" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4743" pos:column="43">DefineLocalVarScope</name><argument_list pos:line="4743" pos:column="62">( 
            <comment type="block" pos:line="4744" pos:column="13">/* [in] */</comment> <argument pos:line="4744" pos:column="24">_mdToken scopeParent</argument>,
            <comment type="block" pos:line="4745" pos:column="13">/* [in] */</comment> <argument pos:line="4745" pos:column="24">ULONG ulStartLine</argument>,
            <comment type="block" pos:line="4746" pos:column="13">/* [in] */</comment> <argument pos:line="4746" pos:column="24">ULONG ulEndLine</argument>,
            <comment type="block" pos:line="4747" pos:column="13">/* [in] */</comment> <argument pos:line="4747" pos:column="24">_mdToken member</argument>,
            <comment type="block" pos:line="4748" pos:column="13">/* [out] */</comment> <argument pos:line="4748" pos:column="25">__RPC__out _mdToken *plocalvarscope</argument>)</argument_list></macro> <op:operator pos:line="4748" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="4748" pos:column="64">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4752" pos:column="1">#<cpp:directive pos:line="4752" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4752" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4754" pos:column="5">typedef <type><struct pos:line="4754" pos:column="13">struct <name pos:line="4754" pos:column="20">IDebugMetaDataDebugEmit2Vtbl</name>
    <block pos:line="4755" pos:column="5">{<public type="default" pos:line="4755" pos:column="6">
        <function_decl><type><name pos:line="4756" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4758" pos:column="9">HRESULT</name></type> ( <name pos:line="4758" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4758" pos:column="37">*</type:modifier><name pos:line="4758" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4758" pos:column="54">( 
            <param><decl><type><name pos:line="4759" pos:column="13">IDebugMetaDataDebugEmit2</name> <type:modifier pos:line="4759" pos:column="38">*</type:modifier></type> <name pos:line="4759" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="4760" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4760" pos:column="24">__RPC__in</name> <name pos:line="4760" pos:column="34">REFIID</name></type> <name pos:line="4760" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="4761" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4762" pos:column="13">__RPC__deref_out</name>  <name pos:line="4762" pos:column="31">void</name> <type:modifier pos:line="4762" pos:column="36">*</type:modifier><type:modifier pos:line="4762" pos:column="37">*</type:modifier></type><name pos:line="4762" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4764" pos:column="9">ULONG</name></type> ( <name pos:line="4764" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4764" pos:column="35">*</type:modifier><name pos:line="4764" pos:column="36">AddRef</name> )<parameter_list pos:line="4764" pos:column="44">( 
            <param><decl><type><name pos:line="4765" pos:column="13">IDebugMetaDataDebugEmit2</name> <type:modifier pos:line="4765" pos:column="38">*</type:modifier></type> <name pos:line="4765" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4767" pos:column="9">ULONG</name></type> ( <name pos:line="4767" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4767" pos:column="35">*</type:modifier><name pos:line="4767" pos:column="36">Release</name> )<parameter_list pos:line="4767" pos:column="45">( 
            <param><decl><type><name pos:line="4768" pos:column="13">IDebugMetaDataDebugEmit2</name> <type:modifier pos:line="4768" pos:column="38">*</type:modifier></type> <name pos:line="4768" pos:column="40">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4770" pos:column="9">HRESULT</name></type> ( <name pos:line="4770" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4770" pos:column="37">*</type:modifier><name pos:line="4770" pos:column="38">DefineSourceFile</name> )<parameter_list pos:line="4770" pos:column="56">( 
            <param><decl><type><name pos:line="4771" pos:column="13">IDebugMetaDataDebugEmit2</name> <type:modifier pos:line="4771" pos:column="38">*</type:modifier></type> <name pos:line="4771" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="4772" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4772" pos:column="24">__RPC__in</name> <name pos:line="4772" pos:column="34">LPOLESTR</name></type> <name pos:line="4772" pos:column="43">szFileName</name></decl></param>,
            <comment type="block" pos:line="4773" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4773" pos:column="25">__RPC__out</name> <name pos:line="4773" pos:column="36">_mdToken</name> <type:modifier pos:line="4773" pos:column="45">*</type:modifier></type><name pos:line="4773" pos:column="46">psourcefile</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4775" pos:column="9">HRESULT</name></type> ( <name pos:line="4775" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4775" pos:column="37">*</type:modifier><name pos:line="4775" pos:column="38">DefineBlock</name> )<parameter_list pos:line="4775" pos:column="51">( 
            <param><decl><type><name pos:line="4776" pos:column="13">IDebugMetaDataDebugEmit2</name> <type:modifier pos:line="4776" pos:column="38">*</type:modifier></type> <name pos:line="4776" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="4777" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4777" pos:column="24">_mdToken</name></type> <name pos:line="4777" pos:column="33">member</name></decl></param>,
            <comment type="block" pos:line="4778" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4778" pos:column="24">_mdToken</name></type> <name pos:line="4778" pos:column="33">sourcefile</name></decl></param>,
            <comment type="block" pos:line="4779" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4779" pos:column="24">__RPC__in</name> <name pos:line="4779" pos:column="34">BYTE</name> <type:modifier pos:line="4779" pos:column="39">*</type:modifier></type><name pos:line="4779" pos:column="40">pAttr</name></decl></param>,
            <comment type="block" pos:line="4780" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4780" pos:column="24">ULONG</name></type> <name pos:line="4780" pos:column="30">cbAttr</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4782" pos:column="9">HRESULT</name></type> ( <name pos:line="4782" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4782" pos:column="37">*</type:modifier><name pos:line="4782" pos:column="38">DefineLocalVarScope</name> )<parameter_list pos:line="4782" pos:column="59">( 
            <param><decl><type><name pos:line="4783" pos:column="13">IDebugMetaDataDebugEmit2</name> <type:modifier pos:line="4783" pos:column="38">*</type:modifier></type> <name pos:line="4783" pos:column="40">This</name></decl></param>,
            <comment type="block" pos:line="4784" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4784" pos:column="24">_mdToken</name></type> <name pos:line="4784" pos:column="33">scopeParent</name></decl></param>,
            <comment type="block" pos:line="4785" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4785" pos:column="24">ULONG</name></type> <name pos:line="4785" pos:column="30">ulStartLine</name></decl></param>,
            <comment type="block" pos:line="4786" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4786" pos:column="24">ULONG</name></type> <name pos:line="4786" pos:column="30">ulEndLine</name></decl></param>,
            <comment type="block" pos:line="4787" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4787" pos:column="24">_mdToken</name></type> <name pos:line="4787" pos:column="33">member</name></decl></param>,
            <comment type="block" pos:line="4788" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4788" pos:column="25">__RPC__out</name> <name pos:line="4788" pos:column="36">_mdToken</name> <type:modifier pos:line="4788" pos:column="45">*</type:modifier></type><name pos:line="4788" pos:column="46">plocalvarscope</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4790" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4791" pos:column="7">IDebugMetaDataDebugEmit2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4793" pos:column="5">interface</name></type> <name pos:line="4793" pos:column="15">IDebugMetaDataDebugEmit2</name>
    <argument_list pos:line="4794" pos:column="5">{
        <argument><expr><name pos:line="4795" pos:column="9">CONST_VTBL</name> struct <name pos:line="4795" pos:column="27">IDebugMetaDataDebugEmit2Vtbl</name> <op:operator pos:line="4795" pos:column="56">*</op:operator><name pos:line="4795" pos:column="57">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4800" pos:column="1">#<cpp:directive pos:line="4800" pos:column="2">ifdef</cpp:directive> <name pos:line="4800" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4803" pos:column="1">#<cpp:directive pos:line="4803" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4803" pos:column="9">IDebugMetaDataDebugEmit2_QueryInterface</name><parameter_list pos:line="4803" pos:column="48">(<param><type><name pos:line="4803" pos:column="49">This</name></type></param>,<param><type><name pos:line="4803" pos:column="54">riid</name></type></param>,<param><type><name pos:line="4803" pos:column="59">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4804" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4806" pos:column="1">#<cpp:directive pos:line="4806" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4806" pos:column="9">IDebugMetaDataDebugEmit2_AddRef</name><parameter_list pos:line="4806" pos:column="40">(<param><type><name pos:line="4806" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4807" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4809" pos:column="1">#<cpp:directive pos:line="4809" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4809" pos:column="9">IDebugMetaDataDebugEmit2_Release</name><parameter_list pos:line="4809" pos:column="41">(<param><type><name pos:line="4809" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4810" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="4813" pos:column="1">#<cpp:directive pos:line="4813" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4813" pos:column="9">IDebugMetaDataDebugEmit2_DefineSourceFile</name><parameter_list pos:line="4813" pos:column="50">(<param><type><name pos:line="4813" pos:column="51">This</name></type></param>,<param><type><name pos:line="4813" pos:column="56">szFileName</name></type></param>,<param><type><name pos:line="4813" pos:column="67">psourcefile</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4814" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineSourceFile(This,szFileName,psourcefile) )</cpp:value></cpp:define> 

<cpp:define pos:line="4816" pos:column="1">#<cpp:directive pos:line="4816" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4816" pos:column="9">IDebugMetaDataDebugEmit2_DefineBlock</name><parameter_list pos:line="4816" pos:column="45">(<param><type><name pos:line="4816" pos:column="46">This</name></type></param>,<param><type><name pos:line="4816" pos:column="51">member</name></type></param>,<param><type><name pos:line="4816" pos:column="58">sourcefile</name></type></param>,<param><type><name pos:line="4816" pos:column="69">pAttr</name></type></param>,<param><type><name pos:line="4816" pos:column="75">cbAttr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4817" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineBlock(This,member,sourcefile,pAttr,cbAttr) )</cpp:value></cpp:define> 

<cpp:define pos:line="4819" pos:column="1">#<cpp:directive pos:line="4819" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4819" pos:column="9">IDebugMetaDataDebugEmit2_DefineLocalVarScope</name><parameter_list pos:line="4819" pos:column="53">(<param><type><name pos:line="4819" pos:column="54">This</name></type></param>,<param><type><name pos:line="4819" pos:column="59">scopeParent</name></type></param>,<param><type><name pos:line="4819" pos:column="71">ulStartLine</name></type></param>,<param><type><name pos:line="4819" pos:column="83">ulEndLine</name></type></param>,<param><type><name pos:line="4819" pos:column="93">member</name></type></param>,<param><type><name pos:line="4819" pos:column="100">plocalvarscope</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4820" pos:column="5">( (This)-&gt;lpVtbl -&gt; DefineLocalVarScope(This,scopeParent,ulStartLine,ulEndLine,member,plocalvarscope) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4822" pos:column="1">#<cpp:directive pos:line="4822" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4822" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4825" pos:column="1">#<cpp:directive pos:line="4825" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4825" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4830" pos:column="1">#<cpp:directive pos:line="4830" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4830" pos:column="9">/* __IDebugMetaDataDebugEmit2_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="4833" pos:column="1">/* interface __MIDL_itf_enc_0000_0029 */</comment>
<comment type="block" pos:line="4834" pos:column="1">/* [local] */</comment> 

<cpp:pragma pos:line="4836" pos:column="1">#<cpp:directive pos:line="4836" pos:column="2">pragma</cpp:directive> warning(pop)</cpp:pragma>


<decl_stmt><decl><type><specifier pos:line="4839" pos:column="1">extern</specifier> <name pos:line="4839" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="4839" pos:column="22">__MIDL_itf_enc_0000_0029_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="4840" pos:column="1">extern</specifier> <name pos:line="4840" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="4840" pos:column="22">__MIDL_itf_enc_0000_0029_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="4842" pos:column="1">#<cpp:directive pos:line="4842" pos:column="2">ifndef</cpp:directive> <name pos:line="4842" pos:column="9">__IDebugENCStateEvents_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4843" pos:column="1">#<cpp:directive pos:line="4843" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4843" pos:column="9">__IDebugENCStateEvents_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4845" pos:column="1">/* interface IDebugENCStateEvents */</comment>
<comment type="block" pos:line="4846" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="4849" pos:column="1">EXTERN_C</name> <specifier pos:line="4849" pos:column="10">const</specifier> <name pos:line="4849" pos:column="16">IID</name></type> <name pos:line="4849" pos:column="20">IID_IDebugENCStateEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="4851" pos:column="1">#<cpp:directive pos:line="4851" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4851" pos:column="5">defined</name><argument_list pos:line="4851" pos:column="12">(<argument><expr><name pos:line="4851" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4851" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4851" pos:column="29">!</op:operator><call><name pos:line="4851" pos:column="30">defined</name><argument_list pos:line="4851" pos:column="37">(<argument><expr><name pos:line="4851" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4853" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4853" pos:column="19">(<argument pos:line="4853" pos:column="20">"ec80d064-102e-435f-aafb-d37e2a4ef654"</argument>)</argument_list></macro>
    <label><name pos:line="4854" pos:column="5">IDebugENCStateEvents</name> :</label> <expr_stmt><expr pos:line="4854" pos:column="28">public <name pos:line="4854" pos:column="35">IUnknown</name>
    <block pos:line="4855" pos:column="5">{
    <expr pos:line="4856" pos:column="5">public<op:operator pos:line="4856" pos:column="11">:</op:operator>
        virtual <name pos:line="4857" pos:column="17">HRESULT</name> <name pos:line="4857" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4857" pos:column="43">OnStateChange</name><argument_list pos:line="4857" pos:column="56">( 
            <comment type="block" pos:line="4858" pos:column="13">/* [in] */</comment> <argument pos:line="4858" pos:column="24">__RPC__in ENCSTATE *in_pENCSTATE</argument>,
            <comment type="block" pos:line="4859" pos:column="13">/* [in] */</comment> <argument pos:line="4859" pos:column="24">BOOL in_fReserved</argument>)</argument_list></macro> <op:operator pos:line="4859" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="4859" pos:column="45">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4863" pos:column="1">#<cpp:directive pos:line="4863" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4863" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4865" pos:column="5">typedef <type><struct pos:line="4865" pos:column="13">struct <name pos:line="4865" pos:column="20">IDebugENCStateEventsVtbl</name>
    <block pos:line="4866" pos:column="5">{<public type="default" pos:line="4866" pos:column="6">
        <function_decl><type><name pos:line="4867" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4869" pos:column="9">HRESULT</name></type> ( <name pos:line="4869" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4869" pos:column="37">*</type:modifier><name pos:line="4869" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4869" pos:column="54">( 
            <param><decl><type><name pos:line="4870" pos:column="13">IDebugENCStateEvents</name> <type:modifier pos:line="4870" pos:column="34">*</type:modifier></type> <name pos:line="4870" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="4871" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4871" pos:column="24">__RPC__in</name> <name pos:line="4871" pos:column="34">REFIID</name></type> <name pos:line="4871" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="4872" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4873" pos:column="13">__RPC__deref_out</name>  <name pos:line="4873" pos:column="31">void</name> <type:modifier pos:line="4873" pos:column="36">*</type:modifier><type:modifier pos:line="4873" pos:column="37">*</type:modifier></type><name pos:line="4873" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4875" pos:column="9">ULONG</name></type> ( <name pos:line="4875" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4875" pos:column="35">*</type:modifier><name pos:line="4875" pos:column="36">AddRef</name> )<parameter_list pos:line="4875" pos:column="44">( 
            <param><decl><type><name pos:line="4876" pos:column="13">IDebugENCStateEvents</name> <type:modifier pos:line="4876" pos:column="34">*</type:modifier></type> <name pos:line="4876" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4878" pos:column="9">ULONG</name></type> ( <name pos:line="4878" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4878" pos:column="35">*</type:modifier><name pos:line="4878" pos:column="36">Release</name> )<parameter_list pos:line="4878" pos:column="45">( 
            <param><decl><type><name pos:line="4879" pos:column="13">IDebugENCStateEvents</name> <type:modifier pos:line="4879" pos:column="34">*</type:modifier></type> <name pos:line="4879" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4881" pos:column="9">HRESULT</name></type> ( <name pos:line="4881" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4881" pos:column="37">*</type:modifier><name pos:line="4881" pos:column="38">OnStateChange</name> )<parameter_list pos:line="4881" pos:column="53">( 
            <param><decl><type><name pos:line="4882" pos:column="13">IDebugENCStateEvents</name> <type:modifier pos:line="4882" pos:column="34">*</type:modifier></type> <name pos:line="4882" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="4883" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4883" pos:column="24">__RPC__in</name> <name pos:line="4883" pos:column="34">ENCSTATE</name> <type:modifier pos:line="4883" pos:column="43">*</type:modifier></type><name pos:line="4883" pos:column="44">in_pENCSTATE</name></decl></param>,
            <comment type="block" pos:line="4884" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4884" pos:column="24">BOOL</name></type> <name pos:line="4884" pos:column="29">in_fReserved</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4886" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4887" pos:column="7">IDebugENCStateEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4889" pos:column="5">interface</name></type> <name pos:line="4889" pos:column="15">IDebugENCStateEvents</name>
    <argument_list pos:line="4890" pos:column="5">{
        <argument><expr><name pos:line="4891" pos:column="9">CONST_VTBL</name> struct <name pos:line="4891" pos:column="27">IDebugENCStateEventsVtbl</name> <op:operator pos:line="4891" pos:column="52">*</op:operator><name pos:line="4891" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4896" pos:column="1">#<cpp:directive pos:line="4896" pos:column="2">ifdef</cpp:directive> <name pos:line="4896" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4899" pos:column="1">#<cpp:directive pos:line="4899" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4899" pos:column="9">IDebugENCStateEvents_QueryInterface</name><parameter_list pos:line="4899" pos:column="44">(<param><type><name pos:line="4899" pos:column="45">This</name></type></param>,<param><type><name pos:line="4899" pos:column="50">riid</name></type></param>,<param><type><name pos:line="4899" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4900" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4902" pos:column="1">#<cpp:directive pos:line="4902" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4902" pos:column="9">IDebugENCStateEvents_AddRef</name><parameter_list pos:line="4902" pos:column="36">(<param><type><name pos:line="4902" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4903" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4905" pos:column="1">#<cpp:directive pos:line="4905" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4905" pos:column="9">IDebugENCStateEvents_Release</name><parameter_list pos:line="4905" pos:column="37">(<param><type><name pos:line="4905" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4906" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="4909" pos:column="1">#<cpp:directive pos:line="4909" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4909" pos:column="9">IDebugENCStateEvents_OnStateChange</name><parameter_list pos:line="4909" pos:column="43">(<param><type><name pos:line="4909" pos:column="44">This</name></type></param>,<param><type><name pos:line="4909" pos:column="49">in_pENCSTATE</name></type></param>,<param><type><name pos:line="4909" pos:column="62">in_fReserved</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4910" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnStateChange(This,in_pENCSTATE,in_fReserved) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4912" pos:column="1">#<cpp:directive pos:line="4912" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4912" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4915" pos:column="1">#<cpp:directive pos:line="4915" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4915" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4920" pos:column="1">#<cpp:directive pos:line="4920" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4920" pos:column="9">/* __IDebugENCStateEvents_INTERFACE_DEFINED__ */</comment>



<cpp:ifndef pos:line="4924" pos:column="1">#<cpp:directive pos:line="4924" pos:column="2">ifndef</cpp:directive> <name pos:line="4924" pos:column="9">__EncLib_LIBRARY_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4925" pos:column="1">#<cpp:directive pos:line="4925" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4925" pos:column="9">__EncLib_LIBRARY_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4927" pos:column="1">/* library EncLib */</comment>
<comment type="block" pos:line="4928" pos:column="1">/* [uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="4931" pos:column="1">EXTERN_C</name> <specifier pos:line="4931" pos:column="10">const</specifier> <name pos:line="4931" pos:column="16">IID</name></type> <name pos:line="4931" pos:column="20">LIBID_EncLib</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name pos:line="4933" pos:column="1">EXTERN_C</name> <specifier pos:line="4933" pos:column="10">const</specifier> <name pos:line="4933" pos:column="16">CLSID</name></type> <name pos:line="4933" pos:column="22">CLSID_EncMgr</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="4935" pos:column="1">#<cpp:directive pos:line="4935" pos:column="2">ifdef</cpp:directive> <name pos:line="4935" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="4937" pos:column="1">class</type> <name pos:line="4937" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="4937" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="4937" pos:column="21">"99A426F1-AF1D-11d2-922C-00A02448799A"</lit:literal></expr></argument>)</argument_list>
<name pos:line="4938" pos:column="1">EncMgr</name></decl>;</decl_stmt>
<cpp:endif pos:line="4939" pos:column="1">#<cpp:directive pos:line="4939" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:endif pos:line="4940" pos:column="1">#<cpp:directive pos:line="4940" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4940" pos:column="8">/* __EncLib_LIBRARY_DEFINED__ */</comment>

<comment type="block" pos:line="4942" pos:column="1">/* Additional Prototypes for ALL interfaces */</comment>

<function_decl><type><name pos:line="4944" pos:column="1">unsigned</name> <name pos:line="4944" pos:column="10">long</name>             <name pos:line="4944" pos:column="27">__RPC_USER</name></type>  <name pos:line="4944" pos:column="39">BSTR_UserSize</name><parameter_list pos:line="4944" pos:column="52">(     <param><decl><type><name pos:line="4944" pos:column="58">unsigned</name></type> <name pos:line="4944" pos:column="67">long</name> <type:modifier pos:line="4944" pos:column="72">*</type:modifier></decl></param>, <param><decl><type><name pos:line="4944" pos:column="75">unsigned</name></type> <name pos:line="4944" pos:column="84">long</name></decl></param>            , <param><decl><type><name pos:line="4944" pos:column="102">BSTR</name> <type:modifier pos:line="4944" pos:column="107">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="4945" pos:column="1">unsigned</name> <name pos:line="4945" pos:column="10">char</name> <type:modifier pos:line="4945" pos:column="15">*</type:modifier> <name pos:line="4945" pos:column="17">__RPC_USER</name></type>  <name pos:line="4945" pos:column="29">BSTR_UserMarshal</name><parameter_list pos:line="4945" pos:column="45">(  <param><decl><type><name pos:line="4945" pos:column="48">unsigned</name></type> <name pos:line="4945" pos:column="57">long</name> <type:modifier pos:line="4945" pos:column="62">*</type:modifier></decl></param>, <param><decl><type><name pos:line="4945" pos:column="65">unsigned</name></type> <name pos:line="4945" pos:column="74">char</name> <type:modifier pos:line="4945" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="4945" pos:column="82">BSTR</name> <type:modifier pos:line="4945" pos:column="87">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="4946" pos:column="1">unsigned</name> <name pos:line="4946" pos:column="10">char</name> <type:modifier pos:line="4946" pos:column="15">*</type:modifier> <name pos:line="4946" pos:column="17">__RPC_USER</name></type>  <name pos:line="4946" pos:column="29">BSTR_UserUnmarshal</name><parameter_list pos:line="4946" pos:column="47">(<param><decl><type><name pos:line="4946" pos:column="48">unsigned</name></type> <name pos:line="4946" pos:column="57">long</name> <type:modifier pos:line="4946" pos:column="62">*</type:modifier></decl></param>, <param><decl><type><name pos:line="4946" pos:column="65">unsigned</name></type> <name pos:line="4946" pos:column="74">char</name> <type:modifier pos:line="4946" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="4946" pos:column="82">BSTR</name> <type:modifier pos:line="4946" pos:column="87">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="4947" pos:column="1">void</name>                      <name pos:line="4947" pos:column="27">__RPC_USER</name></type>  <name pos:line="4947" pos:column="39">BSTR_UserFree</name><parameter_list pos:line="4947" pos:column="52">(     <param><decl><type><name pos:line="4947" pos:column="58">unsigned</name></type> <name pos:line="4947" pos:column="67">long</name> <type:modifier pos:line="4947" pos:column="72">*</type:modifier></decl></param>, <param><decl><type><name pos:line="4947" pos:column="75">BSTR</name> <type:modifier pos:line="4947" pos:column="80">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 

<comment type="block" pos:line="4949" pos:column="1">/* end of Additional Prototypes */</comment>

<cpp:ifdef pos:line="4951" pos:column="1">#<cpp:directive pos:line="4951" pos:column="2">ifdef</cpp:directive> <name pos:line="4951" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif pos:line="4953" pos:column="1">#<cpp:directive pos:line="4953" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="4955" pos:column="1">#<cpp:directive pos:line="4955" pos:column="2">endif</cpp:directive></cpp:endif>


</unit>
