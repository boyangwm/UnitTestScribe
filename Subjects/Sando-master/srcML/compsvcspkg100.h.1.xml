<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\compsvcspkg100.h" pos:tabs="8" pos:line="1" pos:column="1">

<comment type="block" pos:line="3" pos:column="1">/* this ALWAYS GENERATED file contains the definitions for the interfaces */</comment>


 <comment type="block" pos:line="6" pos:column="2">/* File created by MIDL compiler version 7.00.0499 */</comment>
<comment type="block" pos:line="7" pos:column="1">/* Compiler settings for compsvcspkg100.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/</comment>
<comment type="line" pos:line="15" pos:column="1">//@@MIDL_FILE_HEADING(  )</comment>

<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma</cpp:directive> warning( disable: 4049 )</cpp:pragma>  <comment type="block" pos:line="17" pos:column="35">/* more than 64k source lines */</comment>


<comment type="block" pos:line="20" pos:column="1">/* verify that the &lt;rpcndr.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef</cpp:directive> <name pos:line="21" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:macro> <cpp:value pos:line="22" pos:column="39">475</cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="25" pos:column="1">/* verify that the &lt;rpcsal.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifndef</cpp:directive> <name pos:line="26" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="27" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:macro> <cpp:value pos:line="27" pos:column="39">100</cpp:value></cpp:define>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"rpc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"rpcndr.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">__RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:error pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">error</cpp:directive> this stub requires an updated version of &lt;rpcndr.h&gt;</cpp:error>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">// __RPCNDR_H_VERSION__</comment>

<cpp:ifndef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifndef</cpp:directive> <name pos:line="37" pos:column="9">COM_NO_WINDOWS_H</name></cpp:ifndef>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="38" pos:column="10">"windows.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="39" pos:column="10">"ole2.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="40" pos:column="8">/*COM_NO_WINDOWS_H*/</comment>

<cpp:ifndef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifndef</cpp:directive> <name pos:line="42" pos:column="9">__compsvcspkg100_h__</name></cpp:ifndef>
<cpp:define pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="43" pos:column="9">__compsvcspkg100_h__</name></cpp:macro></cpp:define>

<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if</cpp:directive> <expr><call><name pos:line="45" pos:column="5">defined</name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">_MSC_VER</name></expr></argument>)</argument_list></call> <op:operator pos:line="45" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="45" pos:column="26">(</op:operator><name pos:line="45" pos:column="27">_MSC_VER</name> <op:operator pos:line="45" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="45" pos:column="39">1020</lit:literal><op:operator pos:line="45" pos:column="43">)</op:operator></expr></cpp:if>
<cpp:pragma pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="49" pos:column="1">/* Forward Declarations */</comment> 

<cpp:ifndef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifndef</cpp:directive> <name pos:line="51" pos:column="9">__IVsFrameworkMultiTargeting_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="52" pos:column="9">__IVsFrameworkMultiTargeting_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="53" pos:column="1">typedef <type><name pos:line="53" pos:column="9">interface</name> <name pos:line="53" pos:column="19">IVsFrameworkMultiTargeting</name></type> <name pos:line="53" pos:column="46">IVsFrameworkMultiTargeting</name>;</typedef>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="54" pos:column="9">/* __IVsFrameworkMultiTargeting_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifndef</cpp:directive> <name pos:line="57" pos:column="9">__SVsFrameworkMultiTargeting_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="58" pos:column="9">__SVsFrameworkMultiTargeting_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="59" pos:column="1">typedef <type><name pos:line="59" pos:column="9">interface</name> <name pos:line="59" pos:column="19">SVsFrameworkMultiTargeting</name></type> <name pos:line="59" pos:column="46">SVsFrameworkMultiTargeting</name>;</typedef>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="60" pos:column="9">/* __SVsFrameworkMultiTargeting_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">ifndef</cpp:directive> <name pos:line="63" pos:column="9">__IVsFrameworkRetargetingDlg_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="64" pos:column="9">__IVsFrameworkRetargetingDlg_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="65" pos:column="1">typedef <type><name pos:line="65" pos:column="9">interface</name> <name pos:line="65" pos:column="19">IVsFrameworkRetargetingDlg</name></type> <name pos:line="65" pos:column="46">IVsFrameworkRetargetingDlg</name>;</typedef>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="66" pos:column="9">/* __IVsFrameworkRetargetingDlg_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">ifndef</cpp:directive> <name pos:line="69" pos:column="9">__SVsFrameworkRetargetingDlg_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="70" pos:column="9">__SVsFrameworkRetargetingDlg_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="71" pos:column="1">typedef <type><name pos:line="71" pos:column="9">interface</name> <name pos:line="71" pos:column="19">SVsFrameworkRetargetingDlg</name></type> <name pos:line="71" pos:column="46">SVsFrameworkRetargetingDlg</name>;</typedef>
<cpp:endif pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="72" pos:column="9">/* __SVsFrameworkRetargetingDlg_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">ifndef</cpp:directive> <name pos:line="75" pos:column="9">__IVsComponentEnumeratorFactory4_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="76" pos:column="9">__IVsComponentEnumeratorFactory4_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="77" pos:column="1">typedef <type><name pos:line="77" pos:column="9">interface</name> <name pos:line="77" pos:column="19">IVsComponentEnumeratorFactory4</name></type> <name pos:line="77" pos:column="50">IVsComponentEnumeratorFactory4</name>;</typedef>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="78" pos:column="9">/* __IVsComponentEnumeratorFactory4_FWD_DEFINED__ */</comment>


<comment type="block" pos:line="81" pos:column="1">/* header files for imported files */</comment>
<cpp:include pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="82" pos:column="10">"oaidl.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="83" pos:column="10">"ocidl.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="84" pos:column="10">"vsshell90.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="85" pos:column="10">"vsshell100.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="86" pos:column="10">"compsvcspkg80.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="87" pos:column="10">"compsvcspkg90.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">ifdef</cpp:directive> <name pos:line="89" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="90" pos:column="1">extern <lit:literal type="string" pos:line="90" pos:column="8">"C"</lit:literal><block pos:line="90" pos:column="11">{
<cpp:endif pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">endif</cpp:directive></cpp:endif> 


<comment type="block" pos:line="94" pos:column="1">/* interface __MIDL_itf_compsvcspkg100_0000_0000 */</comment>
<comment type="block" pos:line="95" pos:column="1">/* [local] */</comment> 

<typedef pos:line="97" pos:column="1">typedef 
<type><enum pos:line="98" pos:column="1">enum <name pos:line="98" pos:column="6">_tagVSFRAMEWORKASSEMBLYTYPE</name>
    <block pos:line="99" pos:column="5">{	<decl><name pos:line="99" pos:column="9">VSFRAMEWORKASSEMBLYTYPE_FRAMEWORK</name>	<init pos:line="99" pos:column="49">= <expr><lit:literal type="number" pos:line="99" pos:column="51">0x1</lit:literal></expr></init></decl><op:operator pos:line="99" pos:column="54">,</op:operator>
	<decl><name pos:line="100" pos:column="9">VSFRAMEWORKASSEMBLYTYPE_EXTENSIONS</name>	<init pos:line="100" pos:column="49">= <expr><lit:literal type="number" pos:line="100" pos:column="51">0x2</lit:literal></expr></init></decl><op:operator pos:line="100" pos:column="54">,</op:operator>
	<decl><name pos:line="101" pos:column="9">VSFRAMEWORKASSEMBLYTYPE_ALL</name>	<init pos:line="101" pos:column="41">= <expr><lit:literal type="number" pos:line="101" pos:column="43">0x8000</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="102" pos:column="9">__VSFRAMEWORKASSEMBLYTYPE</name>;</typedef>

<typedef pos:line="104" pos:column="1">typedef <type><name pos:line="104" pos:column="9">DWORD</name></type> <name pos:line="104" pos:column="15">VSFRAMEWORKASSEMBLYTYPE</name>;</typedef>

<typedef pos:line="106" pos:column="1">typedef 
<type><enum pos:line="107" pos:column="1">enum <name pos:line="107" pos:column="6">_tagVSFRAMEWORKCOMPATIBILITY</name>
    <block pos:line="108" pos:column="5">{	<decl><name pos:line="108" pos:column="9">VSFRAMEWORKCOMPATIBILITY_COMPATIBLE</name>	<init pos:line="108" pos:column="49">= <expr><lit:literal type="number" pos:line="108" pos:column="51">0</lit:literal></expr></init></decl><op:operator pos:line="108" pos:column="52">,</op:operator>
	<decl><name pos:line="109" pos:column="9">VSFRAMEWORKCOMPATIBILITY_INCOMPATIBLEIDENTITY</name>	<init pos:line="109" pos:column="57">= <expr><lit:literal type="number" pos:line="109" pos:column="59">0x1</lit:literal></expr></init></decl><op:operator pos:line="109" pos:column="62">,</op:operator>
	<decl><name pos:line="110" pos:column="9">VSFRAMEWORKCOMPATIBILITY_INCOMPATIBLEVERSION</name>	<init pos:line="110" pos:column="57">= <expr><lit:literal type="number" pos:line="110" pos:column="59">0x2</lit:literal></expr></init></decl><op:operator pos:line="110" pos:column="62">,</op:operator>
	<decl><name pos:line="111" pos:column="9">VSFRAMEWORKCOMPATIBILITY_INCOMPATIBLEPROFILE</name>	<init pos:line="111" pos:column="57">= <expr><lit:literal type="number" pos:line="111" pos:column="59">0x4</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="112" pos:column="9">__VSFRAMEWORKCOMPATIBILITY</name>;</typedef>

<typedef pos:line="114" pos:column="1">typedef <type><name pos:line="114" pos:column="9">DWORD</name></type> <name pos:line="114" pos:column="15">VSFRAMEWORKCOMPATIBILITY</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="118" pos:column="1">extern</specifier> <name pos:line="118" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="118" pos:column="22">__MIDL_itf_compsvcspkg100_0000_0000_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="119" pos:column="1">extern</specifier> <name pos:line="119" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="119" pos:column="22">__MIDL_itf_compsvcspkg100_0000_0000_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="121" pos:column="1">#<cpp:directive pos:line="121" pos:column="2">ifndef</cpp:directive> <name pos:line="121" pos:column="9">__IVsFrameworkMultiTargeting_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="122" pos:column="9">__IVsFrameworkMultiTargeting_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="124" pos:column="1">/* interface IVsFrameworkMultiTargeting */</comment>
<comment type="block" pos:line="125" pos:column="1">/* [object][unique][helpstring][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="128" pos:column="1">EXTERN_C</name> <specifier pos:line="128" pos:column="10">const</specifier> <name pos:line="128" pos:column="16">IID</name></type> <name pos:line="128" pos:column="20">IID_IVsFrameworkMultiTargeting</name></decl>;</decl_stmt>

<cpp:if pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">if</cpp:directive> <expr><call><name pos:line="130" pos:column="5">defined</name><argument_list pos:line="130" pos:column="12">(<argument><expr><name pos:line="130" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="130" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="130" pos:column="29">!</op:operator><call><name pos:line="130" pos:column="30">defined</name><argument_list pos:line="130" pos:column="37">(<argument><expr><name pos:line="130" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="132" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="132" pos:column="19">(<argument pos:line="132" pos:column="20">"B096B75C-5DF5-42c6-888F-A007CCEB6635"</argument>)</argument_list></macro>
    <label><name pos:line="133" pos:column="5">IVsFrameworkMultiTargeting</name> :</label> <expr_stmt><expr pos:line="133" pos:column="34">public <name pos:line="133" pos:column="41">IUnknown</name>
    <block pos:line="134" pos:column="5">{
    <expr pos:line="135" pos:column="5">public<op:operator pos:line="135" pos:column="11">:</op:operator>
        virtual <name pos:line="136" pos:column="17">HRESULT</name> <name pos:line="136" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="136" pos:column="43">IsReferenceableInTargetFx</name><argument_list pos:line="136" pos:column="68">( 
            <comment type="block" pos:line="137" pos:column="13">/* [in] */</comment> <argument pos:line="137" pos:column="24">__RPC__in LPCWSTR pwszAssemblySpec</argument>,
            <comment type="block" pos:line="138" pos:column="13">/* [in] */</comment> <argument pos:line="138" pos:column="24">__RPC__in LPCWSTR pwszTargetFrameworkMoniker</argument>,
            <comment type="block" pos:line="139" pos:column="13">/* [retval][out] */</comment> <argument pos:line="139" pos:column="33">__RPC__out VARIANT_BOOL *pbIsReferenceable</argument>)</argument_list></macro> <op:operator pos:line="139" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="139" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="141" pos:column="9">virtual <name pos:line="141" pos:column="17">HRESULT</name> <name pos:line="141" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="141" pos:column="43">GetTargetFramework</name><argument_list pos:line="141" pos:column="61">( 
            <comment type="block" pos:line="142" pos:column="13">/* [in] */</comment> <argument pos:line="142" pos:column="24">__RPC__in LPCWSTR pwszAssemblyPath</argument>,
            <comment type="block" pos:line="143" pos:column="13">/* [in] */</comment> <argument pos:line="143" pos:column="24">__RPC__in LPCWSTR pwszTargetFrameworkIdentifier</argument>,
            <comment type="block" pos:line="144" pos:column="13">/* [retval][out] */</comment> <argument pos:line="144" pos:column="33">__RPC__deref_out_opt BSTR *pbstrTargetFrameworkMoniker</argument>)</argument_list></macro> <op:operator pos:line="144" pos:column="89">=</op:operator> <lit:literal type="number" pos:line="144" pos:column="91">0</lit:literal></expr>;
        
        <expr pos:line="146" pos:column="9">virtual <name pos:line="146" pos:column="17">HRESULT</name> <name pos:line="146" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="146" pos:column="43">GetSupportedFrameworks</name><argument_list pos:line="146" pos:column="65">( 
            <comment type="block" pos:line="147" pos:column="13">/* [retval][out] */</comment> <argument pos:line="147" pos:column="33">__RPC__deref_out_opt SAFEARRAY * *prgSupportedFrameworks</argument>)</argument_list></macro> <op:operator pos:line="147" pos:column="91">=</op:operator> <lit:literal type="number" pos:line="147" pos:column="93">0</lit:literal></expr>;
        
        <expr pos:line="149" pos:column="9">virtual <name pos:line="149" pos:column="17">HRESULT</name> <name pos:line="149" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="149" pos:column="43">GetFrameworkAssemblies</name><argument_list pos:line="149" pos:column="65">( 
            <comment type="block" pos:line="150" pos:column="13">/* [in] */</comment> <argument pos:line="150" pos:column="24">__RPC__in LPCWSTR pwszTargetFrameworkMoniker</argument>,
            <comment type="block" pos:line="151" pos:column="13">/* [in] */</comment> <argument pos:line="151" pos:column="24">VSFRAMEWORKASSEMBLYTYPE atAssemblyType</argument>,
            <comment type="block" pos:line="152" pos:column="13">/* [retval][out] */</comment> <argument pos:line="152" pos:column="33">__RPC__deref_out_opt SAFEARRAY * *prgAssemblyPaths</argument>)</argument_list></macro> <op:operator pos:line="152" pos:column="85">=</op:operator> <lit:literal type="number" pos:line="152" pos:column="87">0</lit:literal></expr>;
        
        <expr pos:line="154" pos:column="9">virtual <name pos:line="154" pos:column="17">HRESULT</name> <name pos:line="154" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="154" pos:column="43">CheckFrameworkCompatibility</name><argument_list pos:line="154" pos:column="70">( 
            <comment type="block" pos:line="155" pos:column="13">/* [in] */</comment> <argument pos:line="155" pos:column="24">__RPC__in LPCWSTR pwszTargetFrameworkMonikerSource</argument>,
            <comment type="block" pos:line="156" pos:column="13">/* [in] */</comment> <argument pos:line="156" pos:column="24">__RPC__in LPCWSTR pwszTargetFrameworkMonikerTarget</argument>,
            <comment type="block" pos:line="157" pos:column="13">/* [retval][out] */</comment> <argument pos:line="157" pos:column="33">__RPC__out VSFRAMEWORKCOMPATIBILITY *pdwCompat</argument>)</argument_list></macro> <op:operator pos:line="157" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="157" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="159" pos:column="9">virtual <name pos:line="159" pos:column="17">HRESULT</name> <name pos:line="159" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="159" pos:column="43">ResolveAssemblyPath</name><argument_list pos:line="159" pos:column="62">( 
            <comment type="block" pos:line="160" pos:column="13">/* [in] */</comment> <argument pos:line="160" pos:column="24">__RPC__in LPCWSTR pwszAssemblySpec</argument>,
            <comment type="block" pos:line="161" pos:column="13">/* [in] */</comment> <argument pos:line="161" pos:column="24">__RPC__in LPCWSTR pwszTargetFrameworkMoniker</argument>,
            <comment type="block" pos:line="162" pos:column="13">/* [retval][out] */</comment> <argument pos:line="162" pos:column="33">__RPC__deref_out_opt BSTR *pbstrResolvedAssemblyPath</argument>)</argument_list></macro> <op:operator pos:line="162" pos:column="87">=</op:operator> <lit:literal type="number" pos:line="162" pos:column="89">0</lit:literal></expr>;
        
        <expr pos:line="164" pos:column="9">virtual <name pos:line="164" pos:column="17">HRESULT</name> <name pos:line="164" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="164" pos:column="43">GetDisplayNameForTargetFx</name><argument_list pos:line="164" pos:column="68">( 
            <comment type="block" pos:line="165" pos:column="13">/* [in] */</comment> <argument pos:line="165" pos:column="24">__RPC__in LPCWSTR pwszTargetFrameworkMoniker</argument>,
            <comment type="block" pos:line="166" pos:column="13">/* [retval][out] */</comment> <argument pos:line="166" pos:column="33">__RPC__deref_out_opt BSTR *pbstrDisplayName</argument>)</argument_list></macro> <op:operator pos:line="166" pos:column="78">=</op:operator> <lit:literal type="number" pos:line="166" pos:column="80">0</lit:literal></expr>;
        
        <expr pos:line="168" pos:column="9">virtual <name pos:line="168" pos:column="17">HRESULT</name> <name pos:line="168" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="168" pos:column="43">ResolveAssemblyPathsInTargetFx</name><argument_list pos:line="168" pos:column="73">( 
            <comment type="block" pos:line="169" pos:column="13">/* [in] */</comment> <argument pos:line="169" pos:column="24">__RPC__in LPCWSTR pwszTargetFrameworkMoniker</argument>,
            <comment type="block" pos:line="170" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="170" pos:column="33">__RPC__in_ecount_full(cAssembliesToResolve) SAFEARRAY * prgAssemblySpecs</argument>,
            <comment type="block" pos:line="171" pos:column="13">/* [in] */</comment> <argument pos:line="171" pos:column="24">ULONG cAssembliesToResolve</argument>,
            <comment type="block" pos:line="172" pos:column="13">/* [size_is][out][in] */</comment> <argument pos:line="172" pos:column="38">__RPC__inout_ecount_full(cAssembliesToResolve) PVsResolvedAssemblyPath prgResolvedAssemblyPaths</argument>,
            <comment type="block" pos:line="173" pos:column="13">/* [out] */</comment> <argument pos:line="173" pos:column="25">__RPC__out ULONG *pcResolvedAssemblyPaths</argument>)</argument_list></macro> <op:operator pos:line="173" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="173" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="175" pos:column="9">virtual <name pos:line="175" pos:column="17">HRESULT</name> <name pos:line="175" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="175" pos:column="43">GetInstallableFrameworkForTargetFx</name><argument_list pos:line="175" pos:column="77">( 
            <comment type="block" pos:line="176" pos:column="13">/* [in] */</comment> <argument pos:line="176" pos:column="24">__RPC__in LPCWSTR pwszTargetFrameworkMoniker</argument>,
            <comment type="block" pos:line="177" pos:column="13">/* [retval][out] */</comment> <argument pos:line="177" pos:column="33">__RPC__deref_out_opt BSTR *pbstrInstallableFrameworkMoniker</argument>)</argument_list></macro> <op:operator pos:line="177" pos:column="94">=</op:operator> <lit:literal type="number" pos:line="177" pos:column="96">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="181" pos:column="1">#<cpp:directive pos:line="181" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="181" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="183" pos:column="5">typedef <type><struct pos:line="183" pos:column="13">struct <name pos:line="183" pos:column="20">IVsFrameworkMultiTargetingVtbl</name>
    <block pos:line="184" pos:column="5">{<public type="default" pos:line="184" pos:column="6">
        <function_decl><type><name pos:line="185" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="187" pos:column="9">HRESULT</name></type> ( <name pos:line="187" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="187" pos:column="37">*</type:modifier><name pos:line="187" pos:column="38">QueryInterface</name> )<parameter_list pos:line="187" pos:column="54">( 
            <param><decl><type><name pos:line="188" pos:column="13">IVsFrameworkMultiTargeting</name> <type:modifier pos:line="188" pos:column="40">*</type:modifier></type> <name pos:line="188" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="189" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="189" pos:column="24">__RPC__in</name> <name pos:line="189" pos:column="34">REFIID</name></type> <name pos:line="189" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="190" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="191" pos:column="13">__RPC__deref_out</name>  <name pos:line="191" pos:column="31">void</name> <type:modifier pos:line="191" pos:column="36">*</type:modifier><type:modifier pos:line="191" pos:column="37">*</type:modifier></type><name pos:line="191" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="193" pos:column="9">ULONG</name></type> ( <name pos:line="193" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="193" pos:column="35">*</type:modifier><name pos:line="193" pos:column="36">AddRef</name> )<parameter_list pos:line="193" pos:column="44">( 
            <param><decl><type><name pos:line="194" pos:column="13">IVsFrameworkMultiTargeting</name> <type:modifier pos:line="194" pos:column="40">*</type:modifier></type> <name pos:line="194" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="196" pos:column="9">ULONG</name></type> ( <name pos:line="196" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="196" pos:column="35">*</type:modifier><name pos:line="196" pos:column="36">Release</name> )<parameter_list pos:line="196" pos:column="45">( 
            <param><decl><type><name pos:line="197" pos:column="13">IVsFrameworkMultiTargeting</name> <type:modifier pos:line="197" pos:column="40">*</type:modifier></type> <name pos:line="197" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="199" pos:column="9">HRESULT</name></type> ( <name pos:line="199" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="199" pos:column="37">*</type:modifier><name pos:line="199" pos:column="38">IsReferenceableInTargetFx</name> )<parameter_list pos:line="199" pos:column="65">( 
            <param><decl><type><name pos:line="200" pos:column="13">IVsFrameworkMultiTargeting</name> <type:modifier pos:line="200" pos:column="40">*</type:modifier></type> <name pos:line="200" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="201" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="201" pos:column="24">__RPC__in</name> <name pos:line="201" pos:column="34">LPCWSTR</name></type> <name pos:line="201" pos:column="42">pwszAssemblySpec</name></decl></param>,
            <comment type="block" pos:line="202" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="202" pos:column="24">__RPC__in</name> <name pos:line="202" pos:column="34">LPCWSTR</name></type> <name pos:line="202" pos:column="42">pwszTargetFrameworkMoniker</name></decl></param>,
            <comment type="block" pos:line="203" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="203" pos:column="33">__RPC__out</name> <name pos:line="203" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="203" pos:column="57">*</type:modifier></type><name pos:line="203" pos:column="58">pbIsReferenceable</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="205" pos:column="9">HRESULT</name></type> ( <name pos:line="205" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="205" pos:column="37">*</type:modifier><name pos:line="205" pos:column="38">GetTargetFramework</name> )<parameter_list pos:line="205" pos:column="58">( 
            <param><decl><type><name pos:line="206" pos:column="13">IVsFrameworkMultiTargeting</name> <type:modifier pos:line="206" pos:column="40">*</type:modifier></type> <name pos:line="206" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="207" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="207" pos:column="24">__RPC__in</name> <name pos:line="207" pos:column="34">LPCWSTR</name></type> <name pos:line="207" pos:column="42">pwszAssemblyPath</name></decl></param>,
            <comment type="block" pos:line="208" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="208" pos:column="24">__RPC__in</name> <name pos:line="208" pos:column="34">LPCWSTR</name></type> <name pos:line="208" pos:column="42">pwszTargetFrameworkIdentifier</name></decl></param>,
            <comment type="block" pos:line="209" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="209" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="209" pos:column="54">BSTR</name> <type:modifier pos:line="209" pos:column="59">*</type:modifier></type><name pos:line="209" pos:column="60">pbstrTargetFrameworkMoniker</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="211" pos:column="9">HRESULT</name></type> ( <name pos:line="211" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="211" pos:column="37">*</type:modifier><name pos:line="211" pos:column="38">GetSupportedFrameworks</name> )<parameter_list pos:line="211" pos:column="62">( 
            <param><decl><type><name pos:line="212" pos:column="13">IVsFrameworkMultiTargeting</name> <type:modifier pos:line="212" pos:column="40">*</type:modifier></type> <name pos:line="212" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="213" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="213" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="213" pos:column="54">SAFEARRAY</name> <type:modifier pos:line="213" pos:column="64">*</type:modifier> <type:modifier pos:line="213" pos:column="66">*</type:modifier></type><name pos:line="213" pos:column="67">prgSupportedFrameworks</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="215" pos:column="9">HRESULT</name></type> ( <name pos:line="215" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="215" pos:column="37">*</type:modifier><name pos:line="215" pos:column="38">GetFrameworkAssemblies</name> )<parameter_list pos:line="215" pos:column="62">( 
            <param><decl><type><name pos:line="216" pos:column="13">IVsFrameworkMultiTargeting</name> <type:modifier pos:line="216" pos:column="40">*</type:modifier></type> <name pos:line="216" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="217" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="217" pos:column="24">__RPC__in</name> <name pos:line="217" pos:column="34">LPCWSTR</name></type> <name pos:line="217" pos:column="42">pwszTargetFrameworkMoniker</name></decl></param>,
            <comment type="block" pos:line="218" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="218" pos:column="24">VSFRAMEWORKASSEMBLYTYPE</name></type> <name pos:line="218" pos:column="48">atAssemblyType</name></decl></param>,
            <comment type="block" pos:line="219" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="219" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="219" pos:column="54">SAFEARRAY</name> <type:modifier pos:line="219" pos:column="64">*</type:modifier> <type:modifier pos:line="219" pos:column="66">*</type:modifier></type><name pos:line="219" pos:column="67">prgAssemblyPaths</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="221" pos:column="9">HRESULT</name></type> ( <name pos:line="221" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="221" pos:column="37">*</type:modifier><name pos:line="221" pos:column="38">CheckFrameworkCompatibility</name> )<parameter_list pos:line="221" pos:column="67">( 
            <param><decl><type><name pos:line="222" pos:column="13">IVsFrameworkMultiTargeting</name> <type:modifier pos:line="222" pos:column="40">*</type:modifier></type> <name pos:line="222" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="223" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="223" pos:column="24">__RPC__in</name> <name pos:line="223" pos:column="34">LPCWSTR</name></type> <name pos:line="223" pos:column="42">pwszTargetFrameworkMonikerSource</name></decl></param>,
            <comment type="block" pos:line="224" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="224" pos:column="24">__RPC__in</name> <name pos:line="224" pos:column="34">LPCWSTR</name></type> <name pos:line="224" pos:column="42">pwszTargetFrameworkMonikerTarget</name></decl></param>,
            <comment type="block" pos:line="225" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="225" pos:column="33">__RPC__out</name> <name pos:line="225" pos:column="44">VSFRAMEWORKCOMPATIBILITY</name> <type:modifier pos:line="225" pos:column="69">*</type:modifier></type><name pos:line="225" pos:column="70">pdwCompat</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="227" pos:column="9">HRESULT</name></type> ( <name pos:line="227" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="227" pos:column="37">*</type:modifier><name pos:line="227" pos:column="38">ResolveAssemblyPath</name> )<parameter_list pos:line="227" pos:column="59">( 
            <param><decl><type><name pos:line="228" pos:column="13">IVsFrameworkMultiTargeting</name> <type:modifier pos:line="228" pos:column="40">*</type:modifier></type> <name pos:line="228" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="229" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="229" pos:column="24">__RPC__in</name> <name pos:line="229" pos:column="34">LPCWSTR</name></type> <name pos:line="229" pos:column="42">pwszAssemblySpec</name></decl></param>,
            <comment type="block" pos:line="230" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="230" pos:column="24">__RPC__in</name> <name pos:line="230" pos:column="34">LPCWSTR</name></type> <name pos:line="230" pos:column="42">pwszTargetFrameworkMoniker</name></decl></param>,
            <comment type="block" pos:line="231" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="231" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="231" pos:column="54">BSTR</name> <type:modifier pos:line="231" pos:column="59">*</type:modifier></type><name pos:line="231" pos:column="60">pbstrResolvedAssemblyPath</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="233" pos:column="9">HRESULT</name></type> ( <name pos:line="233" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="233" pos:column="37">*</type:modifier><name pos:line="233" pos:column="38">GetDisplayNameForTargetFx</name> )<parameter_list pos:line="233" pos:column="65">( 
            <param><decl><type><name pos:line="234" pos:column="13">IVsFrameworkMultiTargeting</name> <type:modifier pos:line="234" pos:column="40">*</type:modifier></type> <name pos:line="234" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="235" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="235" pos:column="24">__RPC__in</name> <name pos:line="235" pos:column="34">LPCWSTR</name></type> <name pos:line="235" pos:column="42">pwszTargetFrameworkMoniker</name></decl></param>,
            <comment type="block" pos:line="236" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="236" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="236" pos:column="54">BSTR</name> <type:modifier pos:line="236" pos:column="59">*</type:modifier></type><name pos:line="236" pos:column="60">pbstrDisplayName</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="238" pos:column="9">HRESULT</name> <argument_list pos:line="238" pos:column="17">( <argument pos:line="238" pos:column="19">STDMETHODCALLTYPE *ResolveAssemblyPathsInTargetFx</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="238" pos:column="70">(</op:operator> 
            <name pos:line="239" pos:column="13">IVsFrameworkMultiTargeting</name> <op:operator pos:line="239" pos:column="40">*</op:operator> <name pos:line="239" pos:column="42">This</name><op:operator pos:line="239" pos:column="46">,</op:operator>
            <comment type="block" pos:line="240" pos:column="13">/* [in] */</comment> <name pos:line="240" pos:column="24">__RPC__in</name> <name pos:line="240" pos:column="34">LPCWSTR</name> <name pos:line="240" pos:column="42">pwszTargetFrameworkMoniker</name><op:operator pos:line="240" pos:column="68">,</op:operator>
            <comment type="block" pos:line="241" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="241" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="241" pos:column="54">(<argument pos:line="241" pos:column="55">cAssembliesToResolve</argument>)</argument_list></macro> <name pos:line="241" pos:column="77">SAFEARRAY</name> <op:operator pos:line="241" pos:column="87">*</op:operator> <name pos:line="241" pos:column="89">prgAssemblySpecs</name><op:operator pos:line="241" pos:column="105">,</op:operator>
            <comment type="block" pos:line="242" pos:column="13">/* [in] */</comment> <name pos:line="242" pos:column="24">ULONG</name> <name pos:line="242" pos:column="30">cAssembliesToResolve</name><op:operator pos:line="242" pos:column="50">,</op:operator>
            <comment type="block" pos:line="243" pos:column="13">/* [size_is][out][in] */</comment> <macro><name pos:line="243" pos:column="38">__RPC__inout_ecount_full</name><argument_list pos:line="243" pos:column="62">(<argument pos:line="243" pos:column="63">cAssembliesToResolve</argument>)</argument_list></macro> <name pos:line="243" pos:column="85">PVsResolvedAssemblyPath</name> <name pos:line="243" pos:column="109">prgResolvedAssemblyPaths</name><op:operator pos:line="243" pos:column="133">,</op:operator>
            <comment type="block" pos:line="244" pos:column="13">/* [out] */</comment> <name pos:line="244" pos:column="25">__RPC__out</name> <name pos:line="244" pos:column="36">ULONG</name> <op:operator pos:line="244" pos:column="42">*</op:operator><name pos:line="244" pos:column="43">pcResolvedAssemblyPaths</name><op:operator pos:line="244" pos:column="66">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="246" pos:column="9">HRESULT</name></type> ( <name pos:line="246" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="246" pos:column="37">*</type:modifier><name pos:line="246" pos:column="38">GetInstallableFrameworkForTargetFx</name> )<parameter_list pos:line="246" pos:column="74">( 
            <param><decl><type><name pos:line="247" pos:column="13">IVsFrameworkMultiTargeting</name> <type:modifier pos:line="247" pos:column="40">*</type:modifier></type> <name pos:line="247" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="248" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="248" pos:column="24">__RPC__in</name> <name pos:line="248" pos:column="34">LPCWSTR</name></type> <name pos:line="248" pos:column="42">pwszTargetFrameworkMoniker</name></decl></param>,
            <comment type="block" pos:line="249" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="249" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="249" pos:column="54">BSTR</name> <type:modifier pos:line="249" pos:column="59">*</type:modifier></type><name pos:line="249" pos:column="60">pbstrInstallableFrameworkMoniker</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="251" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="252" pos:column="7">IVsFrameworkMultiTargetingVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="254" pos:column="5">interface</name></type> <name pos:line="254" pos:column="15">IVsFrameworkMultiTargeting</name>
    <argument_list pos:line="255" pos:column="5">{
        <argument><expr><name pos:line="256" pos:column="9">CONST_VTBL</name> struct <name pos:line="256" pos:column="27">IVsFrameworkMultiTargetingVtbl</name> <op:operator pos:line="256" pos:column="58">*</op:operator><name pos:line="256" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="261" pos:column="1">#<cpp:directive pos:line="261" pos:column="2">ifdef</cpp:directive> <name pos:line="261" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="264" pos:column="1">#<cpp:directive pos:line="264" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="264" pos:column="9">IVsFrameworkMultiTargeting_QueryInterface</name><parameter_list pos:line="264" pos:column="50">(<param><type><name pos:line="264" pos:column="51">This</name></type></param>,<param><type><name pos:line="264" pos:column="56">riid</name></type></param>,<param><type><name pos:line="264" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="265" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="267" pos:column="1">#<cpp:directive pos:line="267" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="267" pos:column="9">IVsFrameworkMultiTargeting_AddRef</name><parameter_list pos:line="267" pos:column="42">(<param><type><name pos:line="267" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="268" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="270" pos:column="1">#<cpp:directive pos:line="270" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="270" pos:column="9">IVsFrameworkMultiTargeting_Release</name><parameter_list pos:line="270" pos:column="43">(<param><type><name pos:line="270" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="271" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="274" pos:column="1">#<cpp:directive pos:line="274" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="274" pos:column="9">IVsFrameworkMultiTargeting_IsReferenceableInTargetFx</name><parameter_list pos:line="274" pos:column="61">(<param><type><name pos:line="274" pos:column="62">This</name></type></param>,<param><type><name pos:line="274" pos:column="67">pwszAssemblySpec</name></type></param>,<param><type><name pos:line="274" pos:column="84">pwszTargetFrameworkMoniker</name></type></param>,<param><type><name pos:line="274" pos:column="111">pbIsReferenceable</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="275" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReferenceableInTargetFx(This,pwszAssemblySpec,pwszTargetFrameworkMoniker,pbIsReferenceable) )</cpp:value></cpp:define> 

<cpp:define pos:line="277" pos:column="1">#<cpp:directive pos:line="277" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="277" pos:column="9">IVsFrameworkMultiTargeting_GetTargetFramework</name><parameter_list pos:line="277" pos:column="54">(<param><type><name pos:line="277" pos:column="55">This</name></type></param>,<param><type><name pos:line="277" pos:column="60">pwszAssemblyPath</name></type></param>,<param><type><name pos:line="277" pos:column="77">pwszTargetFrameworkIdentifier</name></type></param>,<param><type><name pos:line="277" pos:column="107">pbstrTargetFrameworkMoniker</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="278" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTargetFramework(This,pwszAssemblyPath,pwszTargetFrameworkIdentifier,pbstrTargetFrameworkMoniker) )</cpp:value></cpp:define> 

<cpp:define pos:line="280" pos:column="1">#<cpp:directive pos:line="280" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="280" pos:column="9">IVsFrameworkMultiTargeting_GetSupportedFrameworks</name><parameter_list pos:line="280" pos:column="58">(<param><type><name pos:line="280" pos:column="59">This</name></type></param>,<param><type><name pos:line="280" pos:column="64">prgSupportedFrameworks</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="281" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSupportedFrameworks(This,prgSupportedFrameworks) )</cpp:value></cpp:define> 

<cpp:define pos:line="283" pos:column="1">#<cpp:directive pos:line="283" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="283" pos:column="9">IVsFrameworkMultiTargeting_GetFrameworkAssemblies</name><parameter_list pos:line="283" pos:column="58">(<param><type><name pos:line="283" pos:column="59">This</name></type></param>,<param><type><name pos:line="283" pos:column="64">pwszTargetFrameworkMoniker</name></type></param>,<param><type><name pos:line="283" pos:column="91">atAssemblyType</name></type></param>,<param><type><name pos:line="283" pos:column="106">prgAssemblyPaths</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="284" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFrameworkAssemblies(This,pwszTargetFrameworkMoniker,atAssemblyType,prgAssemblyPaths) )</cpp:value></cpp:define> 

<cpp:define pos:line="286" pos:column="1">#<cpp:directive pos:line="286" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="286" pos:column="9">IVsFrameworkMultiTargeting_CheckFrameworkCompatibility</name><parameter_list pos:line="286" pos:column="63">(<param><type><name pos:line="286" pos:column="64">This</name></type></param>,<param><type><name pos:line="286" pos:column="69">pwszTargetFrameworkMonikerSource</name></type></param>,<param><type><name pos:line="286" pos:column="102">pwszTargetFrameworkMonikerTarget</name></type></param>,<param><type><name pos:line="286" pos:column="135">pdwCompat</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="287" pos:column="5">( (This)-&gt;lpVtbl -&gt; CheckFrameworkCompatibility(This,pwszTargetFrameworkMonikerSource,pwszTargetFrameworkMonikerTarget,pdwCompat) )</cpp:value></cpp:define> 

<cpp:define pos:line="289" pos:column="1">#<cpp:directive pos:line="289" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="289" pos:column="9">IVsFrameworkMultiTargeting_ResolveAssemblyPath</name><parameter_list pos:line="289" pos:column="55">(<param><type><name pos:line="289" pos:column="56">This</name></type></param>,<param><type><name pos:line="289" pos:column="61">pwszAssemblySpec</name></type></param>,<param><type><name pos:line="289" pos:column="78">pwszTargetFrameworkMoniker</name></type></param>,<param><type><name pos:line="289" pos:column="105">pbstrResolvedAssemblyPath</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="290" pos:column="5">( (This)-&gt;lpVtbl -&gt; ResolveAssemblyPath(This,pwszAssemblySpec,pwszTargetFrameworkMoniker,pbstrResolvedAssemblyPath) )</cpp:value></cpp:define> 

<cpp:define pos:line="292" pos:column="1">#<cpp:directive pos:line="292" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="292" pos:column="9">IVsFrameworkMultiTargeting_GetDisplayNameForTargetFx</name><parameter_list pos:line="292" pos:column="61">(<param><type><name pos:line="292" pos:column="62">This</name></type></param>,<param><type><name pos:line="292" pos:column="67">pwszTargetFrameworkMoniker</name></type></param>,<param><type><name pos:line="292" pos:column="94">pbstrDisplayName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="293" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDisplayNameForTargetFx(This,pwszTargetFrameworkMoniker,pbstrDisplayName) )</cpp:value></cpp:define> 

<cpp:define pos:line="295" pos:column="1">#<cpp:directive pos:line="295" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="295" pos:column="9">IVsFrameworkMultiTargeting_ResolveAssemblyPathsInTargetFx</name><parameter_list pos:line="295" pos:column="66">(<param><type><name pos:line="295" pos:column="67">This</name></type></param>,<param><type><name pos:line="295" pos:column="72">pwszTargetFrameworkMoniker</name></type></param>,<param><type><name pos:line="295" pos:column="99">prgAssemblySpecs</name></type></param>,<param><type><name pos:line="295" pos:column="116">cAssembliesToResolve</name></type></param>,<param><type><name pos:line="295" pos:column="137">prgResolvedAssemblyPaths</name></type></param>,<param><type><name pos:line="295" pos:column="162">pcResolvedAssemblyPaths</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="296" pos:column="5">( (This)-&gt;lpVtbl -&gt; ResolveAssemblyPathsInTargetFx(This,pwszTargetFrameworkMoniker,prgAssemblySpecs,cAssembliesToResolve,prgResolvedAssemblyPaths,pcResolvedAssemblyPaths) )</cpp:value></cpp:define> 

<cpp:define pos:line="298" pos:column="1">#<cpp:directive pos:line="298" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="298" pos:column="9">IVsFrameworkMultiTargeting_GetInstallableFrameworkForTargetFx</name><parameter_list pos:line="298" pos:column="70">(<param><type><name pos:line="298" pos:column="71">This</name></type></param>,<param><type><name pos:line="298" pos:column="76">pwszTargetFrameworkMoniker</name></type></param>,<param><type><name pos:line="298" pos:column="103">pbstrInstallableFrameworkMoniker</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="299" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetInstallableFrameworkForTargetFx(This,pwszTargetFrameworkMoniker,pbstrInstallableFrameworkMoniker) )</cpp:value></cpp:define> 

<cpp:endif pos:line="301" pos:column="1">#<cpp:directive pos:line="301" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="301" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="304" pos:column="1">#<cpp:directive pos:line="304" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="304" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="309" pos:column="1">#<cpp:directive pos:line="309" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="309" pos:column="9">/* __IVsFrameworkMultiTargeting_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="312" pos:column="1">#<cpp:directive pos:line="312" pos:column="2">ifndef</cpp:directive> <name pos:line="312" pos:column="9">__SVsFrameworkMultiTargeting_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="313" pos:column="1">#<cpp:directive pos:line="313" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="313" pos:column="9">__SVsFrameworkMultiTargeting_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="315" pos:column="1">/* interface SVsFrameworkMultiTargeting */</comment>
<comment type="block" pos:line="316" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="319" pos:column="1">EXTERN_C</name> <specifier pos:line="319" pos:column="10">const</specifier> <name pos:line="319" pos:column="16">IID</name></type> <name pos:line="319" pos:column="20">IID_SVsFrameworkMultiTargeting</name></decl>;</decl_stmt>

<cpp:if pos:line="321" pos:column="1">#<cpp:directive pos:line="321" pos:column="2">if</cpp:directive> <expr><call><name pos:line="321" pos:column="5">defined</name><argument_list pos:line="321" pos:column="12">(<argument><expr><name pos:line="321" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="321" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="321" pos:column="29">!</op:operator><call><name pos:line="321" pos:column="30">defined</name><argument_list pos:line="321" pos:column="37">(<argument><expr><name pos:line="321" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="323" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="323" pos:column="19">(<argument pos:line="323" pos:column="20">"6F209208-4D8F-4412-B125-CD839B055D52"</argument>)</argument_list></macro>
    <label><name pos:line="324" pos:column="5">SVsFrameworkMultiTargeting</name> :</label> <expr_stmt><expr pos:line="324" pos:column="34">public <name pos:line="324" pos:column="41">IUnknown</name>
    <block pos:line="325" pos:column="5">{
    <expr pos:line="326" pos:column="5">public<op:operator pos:line="326" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="329" pos:column="1">#<cpp:directive pos:line="329" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="329" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="331" pos:column="5">typedef <type><struct pos:line="331" pos:column="13">struct <name pos:line="331" pos:column="20">SVsFrameworkMultiTargetingVtbl</name>
    <block pos:line="332" pos:column="5">{<public type="default" pos:line="332" pos:column="6">
        <function_decl><type><name pos:line="333" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="335" pos:column="9">HRESULT</name></type> ( <name pos:line="335" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="335" pos:column="37">*</type:modifier><name pos:line="335" pos:column="38">QueryInterface</name> )<parameter_list pos:line="335" pos:column="54">( 
            <param><decl><type><name pos:line="336" pos:column="13">SVsFrameworkMultiTargeting</name> <type:modifier pos:line="336" pos:column="40">*</type:modifier></type> <name pos:line="336" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="337" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="337" pos:column="24">__RPC__in</name> <name pos:line="337" pos:column="34">REFIID</name></type> <name pos:line="337" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="338" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="339" pos:column="13">__RPC__deref_out</name>  <name pos:line="339" pos:column="31">void</name> <type:modifier pos:line="339" pos:column="36">*</type:modifier><type:modifier pos:line="339" pos:column="37">*</type:modifier></type><name pos:line="339" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="341" pos:column="9">ULONG</name></type> ( <name pos:line="341" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="341" pos:column="35">*</type:modifier><name pos:line="341" pos:column="36">AddRef</name> )<parameter_list pos:line="341" pos:column="44">( 
            <param><decl><type><name pos:line="342" pos:column="13">SVsFrameworkMultiTargeting</name> <type:modifier pos:line="342" pos:column="40">*</type:modifier></type> <name pos:line="342" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="344" pos:column="9">ULONG</name></type> ( <name pos:line="344" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="344" pos:column="35">*</type:modifier><name pos:line="344" pos:column="36">Release</name> )<parameter_list pos:line="344" pos:column="45">( 
            <param><decl><type><name pos:line="345" pos:column="13">SVsFrameworkMultiTargeting</name> <type:modifier pos:line="345" pos:column="40">*</type:modifier></type> <name pos:line="345" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="347" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="348" pos:column="7">SVsFrameworkMultiTargetingVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="350" pos:column="5">interface</name></type> <name pos:line="350" pos:column="15">SVsFrameworkMultiTargeting</name>
    <argument_list pos:line="351" pos:column="5">{
        <argument><expr><name pos:line="352" pos:column="9">CONST_VTBL</name> struct <name pos:line="352" pos:column="27">SVsFrameworkMultiTargetingVtbl</name> <op:operator pos:line="352" pos:column="58">*</op:operator><name pos:line="352" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="357" pos:column="1">#<cpp:directive pos:line="357" pos:column="2">ifdef</cpp:directive> <name pos:line="357" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="360" pos:column="1">#<cpp:directive pos:line="360" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="360" pos:column="9">SVsFrameworkMultiTargeting_QueryInterface</name><parameter_list pos:line="360" pos:column="50">(<param><type><name pos:line="360" pos:column="51">This</name></type></param>,<param><type><name pos:line="360" pos:column="56">riid</name></type></param>,<param><type><name pos:line="360" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="361" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="363" pos:column="1">#<cpp:directive pos:line="363" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="363" pos:column="9">SVsFrameworkMultiTargeting_AddRef</name><parameter_list pos:line="363" pos:column="42">(<param><type><name pos:line="363" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="364" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="366" pos:column="1">#<cpp:directive pos:line="366" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="366" pos:column="9">SVsFrameworkMultiTargeting_Release</name><parameter_list pos:line="366" pos:column="43">(<param><type><name pos:line="366" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="367" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="370" pos:column="1">#<cpp:directive pos:line="370" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="370" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="373" pos:column="1">#<cpp:directive pos:line="373" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="373" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="378" pos:column="1">#<cpp:directive pos:line="378" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="378" pos:column="9">/* __SVsFrameworkMultiTargeting_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="381" pos:column="1">/* interface __MIDL_itf_compsvcspkg100_0000_0002 */</comment>
<comment type="block" pos:line="382" pos:column="1">/* [local] */</comment> 

<cpp:define pos:line="384" pos:column="1">#<cpp:directive pos:line="384" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="384" pos:column="9">SID_SVsFrameworkMultiTargeting</name></cpp:macro> <cpp:value pos:line="384" pos:column="40">IID_SVsFrameworkMultiTargeting</cpp:value></cpp:define>
<typedef pos:line="385" pos:column="1">typedef 
<type><enum pos:line="386" pos:column="1">enum <name pos:line="386" pos:column="6">_tagFRD_FLAGS</name>
    <block pos:line="387" pos:column="5">{	<decl><name pos:line="387" pos:column="9">FRDF_SUPPORTS_RETARGETING</name>	<init pos:line="387" pos:column="41">= <expr><lit:literal type="number" pos:line="387" pos:column="43">1</lit:literal></expr></init></decl><op:operator pos:line="387" pos:column="44">,</op:operator>
	<decl><name pos:line="388" pos:column="9">FRDF_DEFAULT</name>	<init pos:line="388" pos:column="25">= <expr><name pos:line="388" pos:column="27">FRDF_SUPPORTS_RETARGETING</name></expr></init></decl>
    }</block></enum></type> 	<name pos:line="389" pos:column="9">__FRD_FLAGS</name>;</typedef>

<typedef pos:line="391" pos:column="1">typedef <type><name pos:line="391" pos:column="9">DWORD</name></type> <name pos:line="391" pos:column="15">FRD_FLAGS</name>;</typedef>

<typedef pos:line="393" pos:column="1">typedef 
<type><enum pos:line="394" pos:column="1">enum <name pos:line="394" pos:column="6">_tagFRD_OUTCOME</name>
    <block pos:line="395" pos:column="5">{	<decl><name pos:line="395" pos:column="9">FRDO_RETARGET_TO_40</name>	<init pos:line="395" pos:column="33">= <expr><lit:literal type="number" pos:line="395" pos:column="35">1</lit:literal></expr></init></decl><op:operator pos:line="395" pos:column="36">,</op:operator>
	<decl><name pos:line="396" pos:column="9">FRDO_LEAVE_UNLOADED</name>	<init pos:line="396" pos:column="33">= <expr><lit:literal type="number" pos:line="396" pos:column="35">2</lit:literal></expr></init></decl><op:operator pos:line="396" pos:column="36">,</op:operator>
	<decl><name pos:line="397" pos:column="9">FRDO_GOTO_DOWNLOAD_SITE</name>	<init pos:line="397" pos:column="33">= <expr><lit:literal type="number" pos:line="397" pos:column="35">3</lit:literal></expr></init></decl>
    }</block></enum></type> 	<name pos:line="398" pos:column="9">__FRD_OUTCOME</name>;</typedef>

<typedef pos:line="400" pos:column="1">typedef <type><name pos:line="400" pos:column="9">DWORD</name></type> <name pos:line="400" pos:column="15">FRD_OUTCOME</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="404" pos:column="1">extern</specifier> <name pos:line="404" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="404" pos:column="22">__MIDL_itf_compsvcspkg100_0000_0002_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="405" pos:column="1">extern</specifier> <name pos:line="405" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="405" pos:column="22">__MIDL_itf_compsvcspkg100_0000_0002_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="407" pos:column="1">#<cpp:directive pos:line="407" pos:column="2">ifndef</cpp:directive> <name pos:line="407" pos:column="9">__IVsFrameworkRetargetingDlg_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="408" pos:column="1">#<cpp:directive pos:line="408" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="408" pos:column="9">__IVsFrameworkRetargetingDlg_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="410" pos:column="1">/* interface IVsFrameworkRetargetingDlg */</comment>
<comment type="block" pos:line="411" pos:column="1">/* [object][unique][helpstring][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="414" pos:column="1">EXTERN_C</name> <specifier pos:line="414" pos:column="10">const</specifier> <name pos:line="414" pos:column="16">IID</name></type> <name pos:line="414" pos:column="20">IID_IVsFrameworkRetargetingDlg</name></decl>;</decl_stmt>

<cpp:if pos:line="416" pos:column="1">#<cpp:directive pos:line="416" pos:column="2">if</cpp:directive> <expr><call><name pos:line="416" pos:column="5">defined</name><argument_list pos:line="416" pos:column="12">(<argument><expr><name pos:line="416" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="416" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="416" pos:column="29">!</op:operator><call><name pos:line="416" pos:column="30">defined</name><argument_list pos:line="416" pos:column="37">(<argument><expr><name pos:line="416" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="418" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="418" pos:column="19">(<argument pos:line="418" pos:column="20">"47f60934-4361-443a-9411-020bc2055608"</argument>)</argument_list></macro>
    <label><name pos:line="419" pos:column="5">IVsFrameworkRetargetingDlg</name> :</label> <expr_stmt><expr pos:line="419" pos:column="34">public <name pos:line="419" pos:column="41">IUnknown</name>
    <block pos:line="420" pos:column="5">{
    <expr pos:line="421" pos:column="5">public<op:operator pos:line="421" pos:column="11">:</op:operator>
        virtual <name pos:line="422" pos:column="17">HRESULT</name> <name pos:line="422" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="422" pos:column="43">ShowFrameworkRetargetingDlg</name><argument_list pos:line="422" pos:column="70">( 
            <comment type="block" pos:line="423" pos:column="13">/* [in] */</comment> <argument pos:line="423" pos:column="24">__RPC__in LPCWSTR pszProjectType</argument>,
            <comment type="block" pos:line="424" pos:column="13">/* [in] */</comment> <argument pos:line="424" pos:column="24">__RPC__in LPCWSTR pszProjectName</argument>,
            <comment type="block" pos:line="425" pos:column="13">/* [in] */</comment> <argument pos:line="425" pos:column="24">__RPC__in LPCWSTR pszTargetedFrameworkMoniker</argument>,
            <comment type="block" pos:line="426" pos:column="13">/* [in] */</comment> <argument pos:line="426" pos:column="24">FRD_FLAGS dwFlags</argument>,
            <comment type="block" pos:line="427" pos:column="13">/* [out] */</comment> <argument pos:line="427" pos:column="25">__RPC__out FRD_OUTCOME *pdwOutcome</argument>,
            <comment type="block" pos:line="428" pos:column="13">/* [out] */</comment> <argument pos:line="428" pos:column="25">__RPC__out BOOL *pbDontShowAgain</argument>)</argument_list></macro> <op:operator pos:line="428" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="428" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="430" pos:column="9">virtual <name pos:line="430" pos:column="17">HRESULT</name> <name pos:line="430" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="430" pos:column="43">NavigateToFrameworkDownloadUrl</name><argument_list pos:line="430" pos:column="73">( <argument><expr><name pos:line="430" pos:column="75">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="430" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="430" pos:column="83">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="434" pos:column="1">#<cpp:directive pos:line="434" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="434" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="436" pos:column="5">typedef <type><struct pos:line="436" pos:column="13">struct <name pos:line="436" pos:column="20">IVsFrameworkRetargetingDlgVtbl</name>
    <block pos:line="437" pos:column="5">{<public type="default" pos:line="437" pos:column="6">
        <function_decl><type><name pos:line="438" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="440" pos:column="9">HRESULT</name></type> ( <name pos:line="440" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="440" pos:column="37">*</type:modifier><name pos:line="440" pos:column="38">QueryInterface</name> )<parameter_list pos:line="440" pos:column="54">( 
            <param><decl><type><name pos:line="441" pos:column="13">IVsFrameworkRetargetingDlg</name> <type:modifier pos:line="441" pos:column="40">*</type:modifier></type> <name pos:line="441" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="442" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="442" pos:column="24">__RPC__in</name> <name pos:line="442" pos:column="34">REFIID</name></type> <name pos:line="442" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="443" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="444" pos:column="13">__RPC__deref_out</name>  <name pos:line="444" pos:column="31">void</name> <type:modifier pos:line="444" pos:column="36">*</type:modifier><type:modifier pos:line="444" pos:column="37">*</type:modifier></type><name pos:line="444" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="446" pos:column="9">ULONG</name></type> ( <name pos:line="446" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="446" pos:column="35">*</type:modifier><name pos:line="446" pos:column="36">AddRef</name> )<parameter_list pos:line="446" pos:column="44">( 
            <param><decl><type><name pos:line="447" pos:column="13">IVsFrameworkRetargetingDlg</name> <type:modifier pos:line="447" pos:column="40">*</type:modifier></type> <name pos:line="447" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="449" pos:column="9">ULONG</name></type> ( <name pos:line="449" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="449" pos:column="35">*</type:modifier><name pos:line="449" pos:column="36">Release</name> )<parameter_list pos:line="449" pos:column="45">( 
            <param><decl><type><name pos:line="450" pos:column="13">IVsFrameworkRetargetingDlg</name> <type:modifier pos:line="450" pos:column="40">*</type:modifier></type> <name pos:line="450" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="452" pos:column="9">HRESULT</name></type> ( <name pos:line="452" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="452" pos:column="37">*</type:modifier><name pos:line="452" pos:column="38">ShowFrameworkRetargetingDlg</name> )<parameter_list pos:line="452" pos:column="67">( 
            <param><decl><type><name pos:line="453" pos:column="13">IVsFrameworkRetargetingDlg</name> <type:modifier pos:line="453" pos:column="40">*</type:modifier></type> <name pos:line="453" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="454" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="454" pos:column="24">__RPC__in</name> <name pos:line="454" pos:column="34">LPCWSTR</name></type> <name pos:line="454" pos:column="42">pszProjectType</name></decl></param>,
            <comment type="block" pos:line="455" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="455" pos:column="24">__RPC__in</name> <name pos:line="455" pos:column="34">LPCWSTR</name></type> <name pos:line="455" pos:column="42">pszProjectName</name></decl></param>,
            <comment type="block" pos:line="456" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="456" pos:column="24">__RPC__in</name> <name pos:line="456" pos:column="34">LPCWSTR</name></type> <name pos:line="456" pos:column="42">pszTargetedFrameworkMoniker</name></decl></param>,
            <comment type="block" pos:line="457" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="457" pos:column="24">FRD_FLAGS</name></type> <name pos:line="457" pos:column="34">dwFlags</name></decl></param>,
            <comment type="block" pos:line="458" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="458" pos:column="25">__RPC__out</name> <name pos:line="458" pos:column="36">FRD_OUTCOME</name> <type:modifier pos:line="458" pos:column="48">*</type:modifier></type><name pos:line="458" pos:column="49">pdwOutcome</name></decl></param>,
            <comment type="block" pos:line="459" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="459" pos:column="25">__RPC__out</name> <name pos:line="459" pos:column="36">BOOL</name> <type:modifier pos:line="459" pos:column="41">*</type:modifier></type><name pos:line="459" pos:column="42">pbDontShowAgain</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="461" pos:column="9">HRESULT</name></type> ( <name pos:line="461" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="461" pos:column="37">*</type:modifier><name pos:line="461" pos:column="38">NavigateToFrameworkDownloadUrl</name> )<parameter_list pos:line="461" pos:column="70">( 
            <param><decl><type><name pos:line="462" pos:column="13">IVsFrameworkRetargetingDlg</name> <type:modifier pos:line="462" pos:column="40">*</type:modifier></type> <name pos:line="462" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="464" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="465" pos:column="7">IVsFrameworkRetargetingDlgVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="467" pos:column="5">interface</name></type> <name pos:line="467" pos:column="15">IVsFrameworkRetargetingDlg</name>
    <argument_list pos:line="468" pos:column="5">{
        <argument><expr><name pos:line="469" pos:column="9">CONST_VTBL</name> struct <name pos:line="469" pos:column="27">IVsFrameworkRetargetingDlgVtbl</name> <op:operator pos:line="469" pos:column="58">*</op:operator><name pos:line="469" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="474" pos:column="1">#<cpp:directive pos:line="474" pos:column="2">ifdef</cpp:directive> <name pos:line="474" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="477" pos:column="1">#<cpp:directive pos:line="477" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="477" pos:column="9">IVsFrameworkRetargetingDlg_QueryInterface</name><parameter_list pos:line="477" pos:column="50">(<param><type><name pos:line="477" pos:column="51">This</name></type></param>,<param><type><name pos:line="477" pos:column="56">riid</name></type></param>,<param><type><name pos:line="477" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="478" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="480" pos:column="1">#<cpp:directive pos:line="480" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="480" pos:column="9">IVsFrameworkRetargetingDlg_AddRef</name><parameter_list pos:line="480" pos:column="42">(<param><type><name pos:line="480" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="481" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="483" pos:column="1">#<cpp:directive pos:line="483" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="483" pos:column="9">IVsFrameworkRetargetingDlg_Release</name><parameter_list pos:line="483" pos:column="43">(<param><type><name pos:line="483" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="484" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="487" pos:column="1">#<cpp:directive pos:line="487" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="487" pos:column="9">IVsFrameworkRetargetingDlg_ShowFrameworkRetargetingDlg</name><parameter_list pos:line="487" pos:column="63">(<param><type><name pos:line="487" pos:column="64">This</name></type></param>,<param><type><name pos:line="487" pos:column="69">pszProjectType</name></type></param>,<param><type><name pos:line="487" pos:column="84">pszProjectName</name></type></param>,<param><type><name pos:line="487" pos:column="99">pszTargetedFrameworkMoniker</name></type></param>,<param><type><name pos:line="487" pos:column="127">dwFlags</name></type></param>,<param><type><name pos:line="487" pos:column="135">pdwOutcome</name></type></param>,<param><type><name pos:line="487" pos:column="146">pbDontShowAgain</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="488" pos:column="5">( (This)-&gt;lpVtbl -&gt; ShowFrameworkRetargetingDlg(This,pszProjectType,pszProjectName,pszTargetedFrameworkMoniker,dwFlags,pdwOutcome,pbDontShowAgain) )</cpp:value></cpp:define> 

<cpp:define pos:line="490" pos:column="1">#<cpp:directive pos:line="490" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="490" pos:column="9">IVsFrameworkRetargetingDlg_NavigateToFrameworkDownloadUrl</name><parameter_list pos:line="490" pos:column="66">(<param><type><name pos:line="490" pos:column="67">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="491" pos:column="5">( (This)-&gt;lpVtbl -&gt; NavigateToFrameworkDownloadUrl(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="493" pos:column="1">#<cpp:directive pos:line="493" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="493" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="496" pos:column="1">#<cpp:directive pos:line="496" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="496" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="501" pos:column="1">#<cpp:directive pos:line="501" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="501" pos:column="9">/* __IVsFrameworkRetargetingDlg_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="504" pos:column="1">#<cpp:directive pos:line="504" pos:column="2">ifndef</cpp:directive> <name pos:line="504" pos:column="9">__SVsFrameworkRetargetingDlg_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="505" pos:column="1">#<cpp:directive pos:line="505" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="505" pos:column="9">__SVsFrameworkRetargetingDlg_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="507" pos:column="1">/* interface SVsFrameworkRetargetingDlg */</comment>
<comment type="block" pos:line="508" pos:column="1">/* [object][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="511" pos:column="1">EXTERN_C</name> <specifier pos:line="511" pos:column="10">const</specifier> <name pos:line="511" pos:column="16">IID</name></type> <name pos:line="511" pos:column="20">IID_SVsFrameworkRetargetingDlg</name></decl>;</decl_stmt>

<cpp:if pos:line="513" pos:column="1">#<cpp:directive pos:line="513" pos:column="2">if</cpp:directive> <expr><call><name pos:line="513" pos:column="5">defined</name><argument_list pos:line="513" pos:column="12">(<argument><expr><name pos:line="513" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="513" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="513" pos:column="29">!</op:operator><call><name pos:line="513" pos:column="30">defined</name><argument_list pos:line="513" pos:column="37">(<argument><expr><name pos:line="513" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="515" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="515" pos:column="19">(<argument pos:line="515" pos:column="20">"d4d51b8e-6ecf-4c42-a3e2-e0925e5115d6"</argument>)</argument_list></macro>
    <label><name pos:line="516" pos:column="5">SVsFrameworkRetargetingDlg</name> :</label> <expr_stmt><expr pos:line="516" pos:column="34">public <name pos:line="516" pos:column="41">IUnknown</name>
    <block pos:line="517" pos:column="5">{
    <expr pos:line="518" pos:column="5">public<op:operator pos:line="518" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="521" pos:column="1">#<cpp:directive pos:line="521" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="521" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="523" pos:column="5">typedef <type><struct pos:line="523" pos:column="13">struct <name pos:line="523" pos:column="20">SVsFrameworkRetargetingDlgVtbl</name>
    <block pos:line="524" pos:column="5">{<public type="default" pos:line="524" pos:column="6">
        <function_decl><type><name pos:line="525" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="527" pos:column="9">HRESULT</name></type> ( <name pos:line="527" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="527" pos:column="37">*</type:modifier><name pos:line="527" pos:column="38">QueryInterface</name> )<parameter_list pos:line="527" pos:column="54">( 
            <param><decl><type><name pos:line="528" pos:column="13">SVsFrameworkRetargetingDlg</name> <type:modifier pos:line="528" pos:column="40">*</type:modifier></type> <name pos:line="528" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="529" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="529" pos:column="24">__RPC__in</name> <name pos:line="529" pos:column="34">REFIID</name></type> <name pos:line="529" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="530" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="531" pos:column="13">__RPC__deref_out</name>  <name pos:line="531" pos:column="31">void</name> <type:modifier pos:line="531" pos:column="36">*</type:modifier><type:modifier pos:line="531" pos:column="37">*</type:modifier></type><name pos:line="531" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="533" pos:column="9">ULONG</name></type> ( <name pos:line="533" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="533" pos:column="35">*</type:modifier><name pos:line="533" pos:column="36">AddRef</name> )<parameter_list pos:line="533" pos:column="44">( 
            <param><decl><type><name pos:line="534" pos:column="13">SVsFrameworkRetargetingDlg</name> <type:modifier pos:line="534" pos:column="40">*</type:modifier></type> <name pos:line="534" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="536" pos:column="9">ULONG</name></type> ( <name pos:line="536" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="536" pos:column="35">*</type:modifier><name pos:line="536" pos:column="36">Release</name> )<parameter_list pos:line="536" pos:column="45">( 
            <param><decl><type><name pos:line="537" pos:column="13">SVsFrameworkRetargetingDlg</name> <type:modifier pos:line="537" pos:column="40">*</type:modifier></type> <name pos:line="537" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="539" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="540" pos:column="7">SVsFrameworkRetargetingDlgVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="542" pos:column="5">interface</name></type> <name pos:line="542" pos:column="15">SVsFrameworkRetargetingDlg</name>
    <argument_list pos:line="543" pos:column="5">{
        <argument><expr><name pos:line="544" pos:column="9">CONST_VTBL</name> struct <name pos:line="544" pos:column="27">SVsFrameworkRetargetingDlgVtbl</name> <op:operator pos:line="544" pos:column="58">*</op:operator><name pos:line="544" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="549" pos:column="1">#<cpp:directive pos:line="549" pos:column="2">ifdef</cpp:directive> <name pos:line="549" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="552" pos:column="1">#<cpp:directive pos:line="552" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="552" pos:column="9">SVsFrameworkRetargetingDlg_QueryInterface</name><parameter_list pos:line="552" pos:column="50">(<param><type><name pos:line="552" pos:column="51">This</name></type></param>,<param><type><name pos:line="552" pos:column="56">riid</name></type></param>,<param><type><name pos:line="552" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="553" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="555" pos:column="1">#<cpp:directive pos:line="555" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="555" pos:column="9">SVsFrameworkRetargetingDlg_AddRef</name><parameter_list pos:line="555" pos:column="42">(<param><type><name pos:line="555" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="556" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="558" pos:column="1">#<cpp:directive pos:line="558" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="558" pos:column="9">SVsFrameworkRetargetingDlg_Release</name><parameter_list pos:line="558" pos:column="43">(<param><type><name pos:line="558" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="559" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:endif pos:line="562" pos:column="1">#<cpp:directive pos:line="562" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="562" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="565" pos:column="1">#<cpp:directive pos:line="565" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="565" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="570" pos:column="1">#<cpp:directive pos:line="570" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="570" pos:column="9">/* __SVsFrameworkRetargetingDlg_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="573" pos:column="1">/* interface __MIDL_itf_compsvcspkg100_0000_0004 */</comment>
<comment type="block" pos:line="574" pos:column="1">/* [local] */</comment> 

<cpp:define pos:line="576" pos:column="1">#<cpp:directive pos:line="576" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="576" pos:column="9">SID_SVsFrameworkRetargetingDlg</name></cpp:macro> <cpp:value pos:line="576" pos:column="40">IID_SVsFrameworkRetargetingDlg</cpp:value></cpp:define>


<decl_stmt><decl><type><specifier pos:line="579" pos:column="1">extern</specifier> <name pos:line="579" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="579" pos:column="22">__MIDL_itf_compsvcspkg100_0000_0004_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="580" pos:column="1">extern</specifier> <name pos:line="580" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="580" pos:column="22">__MIDL_itf_compsvcspkg100_0000_0004_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="582" pos:column="1">#<cpp:directive pos:line="582" pos:column="2">ifndef</cpp:directive> <name pos:line="582" pos:column="9">__IVsComponentEnumeratorFactory4_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="583" pos:column="1">#<cpp:directive pos:line="583" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="583" pos:column="9">__IVsComponentEnumeratorFactory4_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="585" pos:column="1">/* interface IVsComponentEnumeratorFactory4 */</comment>
<comment type="block" pos:line="586" pos:column="1">/* [object][unique][helpstring][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="589" pos:column="1">EXTERN_C</name> <specifier pos:line="589" pos:column="10">const</specifier> <name pos:line="589" pos:column="16">IID</name></type> <name pos:line="589" pos:column="20">IID_IVsComponentEnumeratorFactory4</name></decl>;</decl_stmt>

<cpp:if pos:line="591" pos:column="1">#<cpp:directive pos:line="591" pos:column="2">if</cpp:directive> <expr><call><name pos:line="591" pos:column="5">defined</name><argument_list pos:line="591" pos:column="12">(<argument><expr><name pos:line="591" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="591" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="591" pos:column="29">!</op:operator><call><name pos:line="591" pos:column="30">defined</name><argument_list pos:line="591" pos:column="37">(<argument><expr><name pos:line="591" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="593" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="593" pos:column="19">(<argument pos:line="593" pos:column="20">"8F18FE7E-ACB7-4031-AAE5-039B49DF5191"</argument>)</argument_list></macro>
    <label><name pos:line="594" pos:column="5">IVsComponentEnumeratorFactory4</name> :</label> <expr_stmt><expr pos:line="594" pos:column="38">public <name pos:line="594" pos:column="45">IUnknown</name>
    <block pos:line="595" pos:column="5">{
    <expr pos:line="596" pos:column="5">public<op:operator pos:line="596" pos:column="11">:</op:operator>
        virtual <name pos:line="597" pos:column="17">HRESULT</name> <name pos:line="597" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="597" pos:column="43">GetReferencePathsForTargetFramework</name><argument_list pos:line="597" pos:column="78">( 
            <comment type="block" pos:line="598" pos:column="13">/* [in] */</comment> <argument pos:line="598" pos:column="24">__RPC__in LPCWSTR targetFrameworkMoniker</argument>,
            <comment type="block" pos:line="599" pos:column="13">/* [out] */</comment> <argument pos:line="599" pos:column="25">__RPC__deref_out_opt IEnumComponents **ppEnumerator</argument>)</argument_list></macro> <op:operator pos:line="599" pos:column="78">=</op:operator> <lit:literal type="number" pos:line="599" pos:column="80">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="603" pos:column="1">#<cpp:directive pos:line="603" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="603" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="605" pos:column="5">typedef <type><struct pos:line="605" pos:column="13">struct <name pos:line="605" pos:column="20">IVsComponentEnumeratorFactory4Vtbl</name>
    <block pos:line="606" pos:column="5">{<public type="default" pos:line="606" pos:column="6">
        <function_decl><type><name pos:line="607" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="609" pos:column="9">HRESULT</name></type> ( <name pos:line="609" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="609" pos:column="37">*</type:modifier><name pos:line="609" pos:column="38">QueryInterface</name> )<parameter_list pos:line="609" pos:column="54">( 
            <param><decl><type><name pos:line="610" pos:column="13">IVsComponentEnumeratorFactory4</name> <type:modifier pos:line="610" pos:column="44">*</type:modifier></type> <name pos:line="610" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="611" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="611" pos:column="24">__RPC__in</name> <name pos:line="611" pos:column="34">REFIID</name></type> <name pos:line="611" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="612" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="613" pos:column="13">__RPC__deref_out</name>  <name pos:line="613" pos:column="31">void</name> <type:modifier pos:line="613" pos:column="36">*</type:modifier><type:modifier pos:line="613" pos:column="37">*</type:modifier></type><name pos:line="613" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="615" pos:column="9">ULONG</name></type> ( <name pos:line="615" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="615" pos:column="35">*</type:modifier><name pos:line="615" pos:column="36">AddRef</name> )<parameter_list pos:line="615" pos:column="44">( 
            <param><decl><type><name pos:line="616" pos:column="13">IVsComponentEnumeratorFactory4</name> <type:modifier pos:line="616" pos:column="44">*</type:modifier></type> <name pos:line="616" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="618" pos:column="9">ULONG</name></type> ( <name pos:line="618" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="618" pos:column="35">*</type:modifier><name pos:line="618" pos:column="36">Release</name> )<parameter_list pos:line="618" pos:column="45">( 
            <param><decl><type><name pos:line="619" pos:column="13">IVsComponentEnumeratorFactory4</name> <type:modifier pos:line="619" pos:column="44">*</type:modifier></type> <name pos:line="619" pos:column="46">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="621" pos:column="9">HRESULT</name></type> ( <name pos:line="621" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="621" pos:column="37">*</type:modifier><name pos:line="621" pos:column="38">GetReferencePathsForTargetFramework</name> )<parameter_list pos:line="621" pos:column="75">( 
            <param><decl><type><name pos:line="622" pos:column="13">IVsComponentEnumeratorFactory4</name> <type:modifier pos:line="622" pos:column="44">*</type:modifier></type> <name pos:line="622" pos:column="46">This</name></decl></param>,
            <comment type="block" pos:line="623" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="623" pos:column="24">__RPC__in</name> <name pos:line="623" pos:column="34">LPCWSTR</name></type> <name pos:line="623" pos:column="42">targetFrameworkMoniker</name></decl></param>,
            <comment type="block" pos:line="624" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="624" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="624" pos:column="46">IEnumComponents</name> <type:modifier pos:line="624" pos:column="62">*</type:modifier><type:modifier pos:line="624" pos:column="63">*</type:modifier></type><name pos:line="624" pos:column="64">ppEnumerator</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="626" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="627" pos:column="7">IVsComponentEnumeratorFactory4Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="629" pos:column="5">interface</name></type> <name pos:line="629" pos:column="15">IVsComponentEnumeratorFactory4</name>
    <argument_list pos:line="630" pos:column="5">{
        <argument><expr><name pos:line="631" pos:column="9">CONST_VTBL</name> struct <name pos:line="631" pos:column="27">IVsComponentEnumeratorFactory4Vtbl</name> <op:operator pos:line="631" pos:column="62">*</op:operator><name pos:line="631" pos:column="63">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="636" pos:column="1">#<cpp:directive pos:line="636" pos:column="2">ifdef</cpp:directive> <name pos:line="636" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="639" pos:column="1">#<cpp:directive pos:line="639" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="639" pos:column="9">IVsComponentEnumeratorFactory4_QueryInterface</name><parameter_list pos:line="639" pos:column="54">(<param><type><name pos:line="639" pos:column="55">This</name></type></param>,<param><type><name pos:line="639" pos:column="60">riid</name></type></param>,<param><type><name pos:line="639" pos:column="65">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="640" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="642" pos:column="1">#<cpp:directive pos:line="642" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="642" pos:column="9">IVsComponentEnumeratorFactory4_AddRef</name><parameter_list pos:line="642" pos:column="46">(<param><type><name pos:line="642" pos:column="47">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="643" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="645" pos:column="1">#<cpp:directive pos:line="645" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="645" pos:column="9">IVsComponentEnumeratorFactory4_Release</name><parameter_list pos:line="645" pos:column="47">(<param><type><name pos:line="645" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="646" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="649" pos:column="1">#<cpp:directive pos:line="649" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="649" pos:column="9">IVsComponentEnumeratorFactory4_GetReferencePathsForTargetFramework</name><parameter_list pos:line="649" pos:column="75">(<param><type><name pos:line="649" pos:column="76">This</name></type></param>,<param><type><name pos:line="649" pos:column="81">targetFrameworkMoniker</name></type></param>,<param><type><name pos:line="649" pos:column="104">ppEnumerator</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="650" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetReferencePathsForTargetFramework(This,targetFrameworkMoniker,ppEnumerator) )</cpp:value></cpp:define> 

<cpp:endif pos:line="652" pos:column="1">#<cpp:directive pos:line="652" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="652" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="655" pos:column="1">#<cpp:directive pos:line="655" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="655" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="660" pos:column="1">#<cpp:directive pos:line="660" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="660" pos:column="9">/* __IVsComponentEnumeratorFactory4_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="663" pos:column="1">/* Additional Prototypes for ALL interfaces */</comment>

<function_decl><type><name pos:line="665" pos:column="1">unsigned</name> <name pos:line="665" pos:column="10">long</name>             <name pos:line="665" pos:column="27">__RPC_USER</name></type>  <name pos:line="665" pos:column="39">BSTR_UserSize</name><parameter_list pos:line="665" pos:column="52">(     <param><decl><type><name pos:line="665" pos:column="58">unsigned</name></type> <name pos:line="665" pos:column="67">long</name> <type:modifier pos:line="665" pos:column="72">*</type:modifier></decl></param>, <param><decl><type><name pos:line="665" pos:column="75">unsigned</name></type> <name pos:line="665" pos:column="84">long</name></decl></param>            , <param><decl><type><name pos:line="665" pos:column="102">BSTR</name> <type:modifier pos:line="665" pos:column="107">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="666" pos:column="1">unsigned</name> <name pos:line="666" pos:column="10">char</name> <type:modifier pos:line="666" pos:column="15">*</type:modifier> <name pos:line="666" pos:column="17">__RPC_USER</name></type>  <name pos:line="666" pos:column="29">BSTR_UserMarshal</name><parameter_list pos:line="666" pos:column="45">(  <param><decl><type><name pos:line="666" pos:column="48">unsigned</name></type> <name pos:line="666" pos:column="57">long</name> <type:modifier pos:line="666" pos:column="62">*</type:modifier></decl></param>, <param><decl><type><name pos:line="666" pos:column="65">unsigned</name></type> <name pos:line="666" pos:column="74">char</name> <type:modifier pos:line="666" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="666" pos:column="82">BSTR</name> <type:modifier pos:line="666" pos:column="87">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="667" pos:column="1">unsigned</name> <name pos:line="667" pos:column="10">char</name> <type:modifier pos:line="667" pos:column="15">*</type:modifier> <name pos:line="667" pos:column="17">__RPC_USER</name></type>  <name pos:line="667" pos:column="29">BSTR_UserUnmarshal</name><parameter_list pos:line="667" pos:column="47">(<param><decl><type><name pos:line="667" pos:column="48">unsigned</name></type> <name pos:line="667" pos:column="57">long</name> <type:modifier pos:line="667" pos:column="62">*</type:modifier></decl></param>, <param><decl><type><name pos:line="667" pos:column="65">unsigned</name></type> <name pos:line="667" pos:column="74">char</name> <type:modifier pos:line="667" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="667" pos:column="82">BSTR</name> <type:modifier pos:line="667" pos:column="87">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="668" pos:column="1">void</name>                      <name pos:line="668" pos:column="27">__RPC_USER</name></type>  <name pos:line="668" pos:column="39">BSTR_UserFree</name><parameter_list pos:line="668" pos:column="52">(     <param><decl><type><name pos:line="668" pos:column="58">unsigned</name></type> <name pos:line="668" pos:column="67">long</name> <type:modifier pos:line="668" pos:column="72">*</type:modifier></decl></param>, <param><decl><type><name pos:line="668" pos:column="75">BSTR</name> <type:modifier pos:line="668" pos:column="80">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 

<function_decl><type><name pos:line="670" pos:column="1">unsigned</name> <name pos:line="670" pos:column="10">long</name>             <name pos:line="670" pos:column="27">__RPC_USER</name></type>  <name pos:line="670" pos:column="39">LPSAFEARRAY_UserSize</name><parameter_list pos:line="670" pos:column="59">(     <param><decl><type><name pos:line="670" pos:column="65">unsigned</name></type> <name pos:line="670" pos:column="74">long</name> <type:modifier pos:line="670" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="670" pos:column="82">unsigned</name></type> <name pos:line="670" pos:column="91">long</name></decl></param>            , <param><decl><type><name pos:line="670" pos:column="109">LPSAFEARRAY</name> <type:modifier pos:line="670" pos:column="121">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="671" pos:column="1">unsigned</name> <name pos:line="671" pos:column="10">char</name> <type:modifier pos:line="671" pos:column="15">*</type:modifier> <name pos:line="671" pos:column="17">__RPC_USER</name></type>  <name pos:line="671" pos:column="29">LPSAFEARRAY_UserMarshal</name><parameter_list pos:line="671" pos:column="52">(  <param><decl><type><name pos:line="671" pos:column="55">unsigned</name></type> <name pos:line="671" pos:column="64">long</name> <type:modifier pos:line="671" pos:column="69">*</type:modifier></decl></param>, <param><decl><type><name pos:line="671" pos:column="72">unsigned</name></type> <name pos:line="671" pos:column="81">char</name> <type:modifier pos:line="671" pos:column="86">*</type:modifier></decl></param>, <param><decl><type><name pos:line="671" pos:column="89">LPSAFEARRAY</name> <type:modifier pos:line="671" pos:column="101">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="672" pos:column="1">unsigned</name> <name pos:line="672" pos:column="10">char</name> <type:modifier pos:line="672" pos:column="15">*</type:modifier> <name pos:line="672" pos:column="17">__RPC_USER</name></type>  <name pos:line="672" pos:column="29">LPSAFEARRAY_UserUnmarshal</name><parameter_list pos:line="672" pos:column="54">(<param><decl><type><name pos:line="672" pos:column="55">unsigned</name></type> <name pos:line="672" pos:column="64">long</name> <type:modifier pos:line="672" pos:column="69">*</type:modifier></decl></param>, <param><decl><type><name pos:line="672" pos:column="72">unsigned</name></type> <name pos:line="672" pos:column="81">char</name> <type:modifier pos:line="672" pos:column="86">*</type:modifier></decl></param>, <param><decl><type><name pos:line="672" pos:column="89">LPSAFEARRAY</name> <type:modifier pos:line="672" pos:column="101">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="673" pos:column="1">void</name>                      <name pos:line="673" pos:column="27">__RPC_USER</name></type>  <name pos:line="673" pos:column="39">LPSAFEARRAY_UserFree</name><parameter_list pos:line="673" pos:column="59">(     <param><decl><type><name pos:line="673" pos:column="65">unsigned</name></type> <name pos:line="673" pos:column="74">long</name> <type:modifier pos:line="673" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="673" pos:column="82">LPSAFEARRAY</name> <type:modifier pos:line="673" pos:column="94">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 

<comment type="block" pos:line="675" pos:column="1">/* end of Additional Prototypes */</comment>

<cpp:ifdef pos:line="677" pos:column="1">#<cpp:directive pos:line="677" pos:column="2">ifdef</cpp:directive> <name pos:line="677" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif pos:line="679" pos:column="1">#<cpp:directive pos:line="679" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="681" pos:column="1">#<cpp:directive pos:line="681" pos:column="2">endif</cpp:directive></cpp:endif>


</unit>
