<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\Core\Core\QueryRefomers\TypoCorrectionReformer.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Sando</name><op:operator pos:line="5" pos:column="12">.</op:operator><name pos:line="5" pos:column="13">Core</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Tools</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Sando</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">DependencyInjection</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Sando</name><op:operator pos:line="8" pos:column="16">.</op:operator><name pos:line="8" pos:column="17">Core</name><op:operator pos:line="8" pos:column="21">.</op:operator><name pos:line="8" pos:column="22">QueryRefomers</name></name>
<block pos:line="9" pos:column="1">{
    <class><specifier pos:line="10" pos:column="5">internal</specifier> class <name pos:line="10" pos:column="20">TypoCorrectionReformer</name> <super pos:line="10" pos:column="43">: <name pos:line="10" pos:column="45">AbstractWordReformer</name></super>
    <block pos:line="11" pos:column="5">{
        <constructor><specifier pos:line="12" pos:column="9">internal</specifier> <name pos:line="12" pos:column="18">TypoCorrectionReformer</name><parameter_list pos:line="12" pos:column="40">(<param><decl><type><name pos:line="12" pos:column="41">DictionaryBasedSplitter</name></type> <name pos:line="12" pos:column="65">localDictionary</name></decl></param>)</parameter_list> 
            <member_list pos:line="13" pos:column="13">: <call><name pos:line="13" pos:column="15">base</name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">localDictionary</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="14" pos:column="9">{
        }</block></constructor>

        <function><type><specifier pos:line="17" pos:column="9">private</specifier> <name pos:line="17" pos:column="17">string</name></type> <name pos:line="17" pos:column="24">GetReformMessage</name><parameter_list pos:line="17" pos:column="40">(<param><decl><type><name pos:line="17" pos:column="41">string</name></type> <name pos:line="17" pos:column="48">originalWord</name></decl></param>, <param><decl><type><name pos:line="17" pos:column="62">string</name></type> <name pos:line="17" pos:column="69">newWord</name></decl></param>)</parameter_list>
        <block pos:line="18" pos:column="9">{
            <return pos:line="19" pos:column="13">return <expr><lit:literal type="string" pos:line="19" pos:column="20">"Typo Correction"</lit:literal></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="22" pos:column="9">protected</specifier> <specifier pos:line="22" pos:column="19">override</specifier> <name><name pos:line="22" pos:column="28">IEnumerable</name><argument_list pos:line="22" pos:column="39">&lt;<argument><name pos:line="22" pos:column="40">ReformedWord</name></argument>&gt;</argument_list></name></type> <name pos:line="22" pos:column="54">GetReformedTargetInternal</name><parameter_list pos:line="22" pos:column="79">(<param><decl><type><name pos:line="22" pos:column="80">string</name></type> <name pos:line="22" pos:column="87">target</name></decl></param>)</parameter_list>
        <block pos:line="23" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="24" pos:column="13">var</name></type> <name pos:line="24" pos:column="17">list</name> <init pos:line="24" pos:column="22">= <expr><call><name><name pos:line="24" pos:column="24">localDictionary</name><op:operator pos:line="24" pos:column="39">.</op:operator><name pos:line="24" pos:column="40">FindSimilarWords</name></name><argument_list pos:line="24" pos:column="56">(<argument><expr><name pos:line="24" pos:column="57">target</name></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="64">.</op:operator><call><name pos:line="24" pos:column="65">ToList</name><argument_list pos:line="24" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><call><name><name pos:line="25" pos:column="17">list</name><op:operator pos:line="25" pos:column="21">.</op:operator><name pos:line="25" pos:column="22">Any</name></name><argument_list pos:line="25" pos:column="25">()</argument_list></call></expr>)</condition><then pos:line="25" pos:column="28">
            <block pos:line="26" pos:column="13">{
                <decl_stmt><decl><type><name><name pos:line="27" pos:column="17">IEnumerable</name><argument_list pos:line="27" pos:column="28">&lt;<argument><name pos:line="27" pos:column="29">ReformedWord</name></argument>&gt;</argument_list></name></type> <name pos:line="27" pos:column="43">correctedList</name> <init pos:line="27" pos:column="57">= <expr><call><name><name pos:line="27" pos:column="59">list</name><op:operator pos:line="27" pos:column="63">.</op:operator><name pos:line="27" pos:column="64">Select</name></name><argument_list pos:line="27" pos:column="70">(<argument><expr><lambda><name pos:line="27" pos:column="71">w</name> <op:operator pos:line="27" pos:column="73">=&gt;</op:operator> <op:operator pos:line="27" pos:column="76">new</op:operator> <call><name pos:line="27" pos:column="80">ReformedWord</name>
                      <argument_list pos:line="28" pos:column="23">(<argument><expr><name><name pos:line="28" pos:column="24">TermChangeCategory</name><op:operator pos:line="28" pos:column="42">.</op:operator><name pos:line="28" pos:column="43">MISSPELLING</name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="56">target</name></expr></argument>, <argument><expr><name pos:line="28" pos:column="64">w</name></expr></argument>,
                            <argument><expr><call><name pos:line="29" pos:column="29">GetReformMessage</name><argument_list pos:line="29" pos:column="45">(<argument><expr><name pos:line="29" pos:column="46">target</name></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">w</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="29" pos:column="58">.</op:operator><call><name pos:line="29" pos:column="59">OrderBy</name><argument_list pos:line="29" pos:column="66">(<argument><expr><lambda><name pos:line="29" pos:column="67">t</name> <op:operator pos:line="29" pos:column="69">=&gt;</op:operator> <name><name pos:line="29" pos:column="72">t</name><op:operator pos:line="29" pos:column="73">.</op:operator><name pos:line="29" pos:column="74">DistanceFromOriginal</name></name></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <return pos:line="30" pos:column="17">return <expr><name pos:line="30" pos:column="24">correctedList</name></expr>;</return>
            }</block></then></if>
            <return pos:line="32" pos:column="13">return <expr><call><name><name pos:line="32" pos:column="20">Enumerable</name><op:operator pos:line="32" pos:column="30">.</op:operator><name><name pos:line="32" pos:column="31">Empty</name><argument_list pos:line="32" pos:column="36">&lt;<argument><name pos:line="32" pos:column="37">ReformedWord</name></argument>&gt;</argument_list></name></name><argument_list pos:line="32" pos:column="50">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="35" pos:column="9">protected</specifier> <specifier pos:line="35" pos:column="19">override</specifier> <name pos:line="35" pos:column="28">int</name></type> <name pos:line="35" pos:column="32">GetMaximumReformCount</name><parameter_list pos:line="35" pos:column="53">()</parameter_list>
        <block pos:line="36" pos:column="9">{
            <return pos:line="37" pos:column="13">return <expr><name><name pos:line="37" pos:column="20">QuerySuggestionConfigurations</name><op:operator pos:line="37" pos:column="49">.</op:operator><name pos:line="37" pos:column="50">SIMILAR_WORDS_MAX_COUNT</name></name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
