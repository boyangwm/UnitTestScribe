<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\IntegrationTests\Search\AutomaticallyIndexingTestClass.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">IO</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Linq</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Lucene</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Net</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Analysis</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Lucene</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Net</name><op:operator pos:line="6" pos:column="17">.</op:operator><name pos:line="6" pos:column="18">Analysis</name><op:operator pos:line="6" pos:column="26">.</op:operator><name pos:line="6" pos:column="27">Snowball</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">NUnit</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">Framework</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Sando</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Sando</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">ExtensionContracts</name><op:operator pos:line="9" pos:column="31">.</op:operator><name pos:line="9" pos:column="32">ResultsReordererContracts</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Sando</name><op:operator pos:line="10" pos:column="12">.</op:operator><name pos:line="10" pos:column="13">ExtensionContracts</name><op:operator pos:line="10" pos:column="31">.</op:operator><name pos:line="10" pos:column="32">SearchContracts</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Sando</name><op:operator pos:line="11" pos:column="12">.</op:operator><name pos:line="11" pos:column="13">Indexer</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">Sando</name><op:operator pos:line="12" pos:column="12">.</op:operator><name pos:line="12" pos:column="13">Indexer</name><op:operator pos:line="12" pos:column="20">.</op:operator><name pos:line="12" pos:column="21">Searching</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Sando</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">SearchEngine</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">Sando</name><op:operator pos:line="14" pos:column="12">.</op:operator><name pos:line="14" pos:column="13">UI</name><op:operator pos:line="14" pos:column="15">.</op:operator><name pos:line="14" pos:column="16">Monitoring</name></name>;</using>
<using pos:line="15" pos:column="1">using <name pos:line="15" pos:column="7">UnitTestHelpers</name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">Sando</name><op:operator pos:line="16" pos:column="12">.</op:operator><name pos:line="16" pos:column="13">Recommender</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">Sando</name><op:operator pos:line="17" pos:column="12">.</op:operator><name pos:line="17" pos:column="13">Indexer</name><op:operator pos:line="17" pos:column="20">.</op:operator><name pos:line="17" pos:column="21">IndexFiltering</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">Sando</name><op:operator pos:line="18" pos:column="12">.</op:operator><name pos:line="18" pos:column="13">UI</name><op:operator pos:line="18" pos:column="15">.</op:operator><name pos:line="18" pos:column="16">Options</name></name>;</using>
<using pos:line="19" pos:column="1">using <name><name pos:line="19" pos:column="7">Configuration</name><op:operator pos:line="19" pos:column="20">.</op:operator><name pos:line="19" pos:column="21">OptionsPages</name></name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">ABB</name><op:operator pos:line="20" pos:column="10">.</op:operator><name pos:line="20" pos:column="11">SrcML</name><op:operator pos:line="20" pos:column="16">.</op:operator><name pos:line="20" pos:column="17">VisualStudio</name><op:operator pos:line="20" pos:column="29">.</op:operator><name pos:line="20" pos:column="30">SolutionMonitor</name></name>;</using>
<using pos:line="21" pos:column="1">using <name><name pos:line="21" pos:column="7">ABB</name><op:operator pos:line="21" pos:column="10">.</op:operator><name pos:line="21" pos:column="11">SrcML</name></name>;</using>
<using pos:line="22" pos:column="1">using <name><name pos:line="22" pos:column="7">System</name><op:operator pos:line="22" pos:column="13">.</op:operator><name pos:line="22" pos:column="14">Threading</name></name>;</using>
<using pos:line="23" pos:column="1">using <name><name pos:line="23" pos:column="7">Sando</name><op:operator pos:line="23" pos:column="12">.</op:operator><name pos:line="23" pos:column="13">Core</name><op:operator pos:line="23" pos:column="17">.</op:operator><name pos:line="23" pos:column="18">Tools</name></name>;</using>
<using pos:line="24" pos:column="1">using <name><name pos:line="24" pos:column="7">ABB</name><op:operator pos:line="24" pos:column="10">.</op:operator><name pos:line="24" pos:column="11">SrcML</name><op:operator pos:line="24" pos:column="16">.</op:operator><name pos:line="24" pos:column="17">VisualStudio</name><op:operator pos:line="24" pos:column="29">.</op:operator><name pos:line="24" pos:column="30">SrcMLService</name></name>;</using>
<using pos:line="25" pos:column="1">using <name><name pos:line="25" pos:column="7">Sando</name><op:operator pos:line="25" pos:column="12">.</op:operator><name pos:line="25" pos:column="13">UI</name><op:operator pos:line="25" pos:column="15">.</op:operator><name pos:line="25" pos:column="16">View</name></name>;</using>
<using pos:line="26" pos:column="1">using <name><name pos:line="26" pos:column="7">System</name><op:operator pos:line="26" pos:column="13">.</op:operator><name pos:line="26" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="27" pos:column="1">using <name><name pos:line="27" pos:column="7">System</name><op:operator pos:line="27" pos:column="13">.</op:operator><name pos:line="27" pos:column="14">Text</name></name>;</using>
<using pos:line="28" pos:column="1">using <name><name pos:line="28" pos:column="7">Sando</name><op:operator pos:line="28" pos:column="12">.</op:operator><name pos:line="28" pos:column="13">Indexer</name><op:operator pos:line="28" pos:column="20">.</op:operator><name pos:line="28" pos:column="21">Documents</name></name>;</using>
<using pos:line="29" pos:column="1">using <name><name pos:line="29" pos:column="7">Lucene</name><op:operator pos:line="29" pos:column="13">.</op:operator><name pos:line="29" pos:column="14">Net</name><op:operator pos:line="29" pos:column="17">.</op:operator><name pos:line="29" pos:column="18">Analysis</name><op:operator pos:line="29" pos:column="26">.</op:operator><name pos:line="29" pos:column="27">Standard</name></name>;</using>
<using pos:line="30" pos:column="1">using <name><name pos:line="30" pos:column="7">Sando</name><op:operator pos:line="30" pos:column="12">.</op:operator><name pos:line="30" pos:column="13">Core</name><op:operator pos:line="30" pos:column="17">.</op:operator><name pos:line="30" pos:column="18">QueryRefomers</name></name>;</using>
<using pos:line="31" pos:column="1">using <name><name pos:line="31" pos:column="7">Sando</name><op:operator pos:line="31" pos:column="12">.</op:operator><name pos:line="31" pos:column="13">UI</name></name>;</using>

<namespace pos:line="33" pos:column="1">namespace <name><name pos:line="33" pos:column="11">Sando</name><op:operator pos:line="33" pos:column="16">.</op:operator><name pos:line="33" pos:column="17">IntegrationTests</name><op:operator pos:line="33" pos:column="33">.</op:operator><name pos:line="33" pos:column="34">Search</name></name>
<block pos:line="34" pos:column="1">{
    <class><specifier pos:line="35" pos:column="5">public</specifier> class <name pos:line="35" pos:column="18">AutomaticallyIndexingTestClass</name> <super pos:line="35" pos:column="49">: <name pos:line="35" pos:column="51">ISrcMLGlobalService</name>, <name pos:line="35" pos:column="72">ISearchResultListener</name></super>
    <block pos:line="36" pos:column="5">{ 
        <decl_stmt><decl><type><specifier pos:line="37" pos:column="9">public</specifier> <specifier pos:line="37" pos:column="16">event</specifier> <name><name pos:line="37" pos:column="22">EventHandler</name><argument_list pos:line="37" pos:column="34">&lt;<argument><name pos:line="37" pos:column="35">IsReadyChangedEventArgs</name></argument>&gt;</argument_list></name></type> <name pos:line="37" pos:column="60">IsReadyChanged</name></decl>;</decl_stmt>

        <function><type><specifier pos:line="39" pos:column="9">public</specifier> <name pos:line="39" pos:column="16">void</name></type> <name pos:line="39" pos:column="21">Reset</name><parameter_list pos:line="39" pos:column="26">()</parameter_list>
        <block pos:line="40" pos:column="9">{

        }</block></function>

        <function><type><attribute pos:line="44" pos:column="9">[<expr><name pos:line="44" pos:column="10">TestFixtureSetUp</name></expr>]</attribute>
        <specifier pos:line="45" pos:column="9">public</specifier> <name pos:line="45" pos:column="16">void</name></type> <name pos:line="45" pos:column="21">Setup</name><parameter_list pos:line="45" pos:column="26">()</parameter_list>
        <block pos:line="46" pos:column="9">{        
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">IndexSpecifiedFiles</name><argument_list pos:line="47" pos:column="32">(<argument><expr><call><name pos:line="47" pos:column="33">GetFilesDirectory</name><argument_list pos:line="47" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="54">GetIndexDirName</name><argument_list pos:line="47" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="50" pos:column="9">public</specifier> <specifier pos:line="50" pos:column="16">virtual</specifier> <name pos:line="50" pos:column="24">TimeSpan</name><type:modifier pos:line="50" pos:column="32">?</type:modifier></type> <name pos:line="50" pos:column="34">GetTimeToCommit</name><parameter_list pos:line="50" pos:column="49">()</parameter_list>
        <block pos:line="51" pos:column="9">{
            <return pos:line="52" pos:column="13">return <expr><name pos:line="52" pos:column="20">null</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="55" pos:column="9">public</specifier> <specifier pos:line="55" pos:column="16">virtual</specifier> <name pos:line="55" pos:column="24">string</name></type> <name pos:line="55" pos:column="31">GetIndexDirName</name><parameter_list pos:line="55" pos:column="46">()</parameter_list>
        <block pos:line="56" pos:column="9">{
            <throw pos:line="57" pos:column="13">throw <expr><op:operator pos:line="57" pos:column="19">new</op:operator> <call><name pos:line="57" pos:column="23">NotImplementedException</name><argument_list pos:line="57" pos:column="46">()</argument_list></call></expr>;</throw>
        }</block></function>

        <function><type><specifier pos:line="60" pos:column="9">public</specifier> <specifier pos:line="60" pos:column="16">virtual</specifier> <name pos:line="60" pos:column="24">string</name></type> <name pos:line="60" pos:column="31">GetFilesDirectory</name><parameter_list pos:line="60" pos:column="48">()</parameter_list>
        <block pos:line="61" pos:column="9">{
            <throw pos:line="62" pos:column="13">throw <expr><op:operator pos:line="62" pos:column="19">new</op:operator> <call><name><name pos:line="62" pos:column="23">System</name><op:operator pos:line="62" pos:column="29">.</op:operator><name pos:line="62" pos:column="30">NotImplementedException</name></name><argument_list pos:line="62" pos:column="53">()</argument_list></call></expr>;</throw>
        }</block></function>

        <function><type><specifier pos:line="65" pos:column="9">private</specifier> <name pos:line="65" pos:column="17">void</name></type> <name pos:line="65" pos:column="22">IndexSpecifiedFiles</name><parameter_list pos:line="65" pos:column="41">(<param><decl><type><name pos:line="65" pos:column="42">string</name></type> <name pos:line="65" pos:column="49">filesInThisDirectory</name></decl></param>, <param><decl><type><name pos:line="65" pos:column="71">string</name></type> <name pos:line="65" pos:column="78">indexDirName</name></decl></param>)</parameter_list>
        <block pos:line="66" pos:column="9">{
            <expr_stmt><expr><name pos:line="67" pos:column="13">filesInThisDirectory</name> <op:operator pos:line="67" pos:column="34">=</op:operator> <call><name><name pos:line="67" pos:column="36">Path</name><op:operator pos:line="67" pos:column="40">.</op:operator><name pos:line="67" pos:column="41">GetFullPath</name></name><argument_list pos:line="67" pos:column="52">(<argument><expr><name pos:line="67" pos:column="53">filesInThisDirectory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">CreateSystemWideDefaults</name><argument_list pos:line="68" pos:column="37">(<argument><expr><name pos:line="68" pos:column="38">indexDirName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">CreateKey</name><argument_list pos:line="69" pos:column="22">(<argument><expr><name pos:line="69" pos:column="23">filesInThisDirectory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">CreateIndexer</name><argument_list pos:line="70" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">CreateArchive</name><argument_list pos:line="71" pos:column="26">(<argument><expr><name pos:line="71" pos:column="27">filesInThisDirectory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>            
            <expr_stmt><expr><call><name pos:line="72" pos:column="13">CreateSwum</name><argument_list pos:line="72" pos:column="23">()</argument_list></call></expr>;</expr_stmt>            
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">AddFilesToIndex</name><argument_list pos:line="73" pos:column="28">(<argument><expr><name pos:line="73" pos:column="29">filesInThisDirectory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>            
            <expr_stmt><expr><call><name><name pos:line="74" pos:column="13">_handler</name><op:operator pos:line="74" pos:column="21">.</op:operator><name pos:line="74" pos:column="22">WaitForIndexing</name></name><argument_list pos:line="74" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="75" pos:column="13">ServiceLocator</name><op:operator pos:line="75" pos:column="27">.</op:operator><name><name pos:line="75" pos:column="28">Resolve</name><argument_list pos:line="75" pos:column="35">&lt;<argument><name pos:line="75" pos:column="36">DocumentIndexer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="75" pos:column="52">()</argument_list></call><op:operator pos:line="75" pos:column="54">.</op:operator><call><name pos:line="75" pos:column="55">ForceReaderRefresh</name><argument_list pos:line="75" pos:column="73">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="76" pos:column="13">Thread</name><op:operator pos:line="76" pos:column="19">.</op:operator><name pos:line="76" pos:column="20">Sleep</name></name><argument_list pos:line="76" pos:column="25">(<argument><expr><op:operator pos:line="76" pos:column="26">(</op:operator><name pos:line="76" pos:column="27">int</name><op:operator pos:line="76" pos:column="30">)</op:operator><call><name pos:line="76" pos:column="31">GetTimeToCommit</name><argument_list pos:line="76" pos:column="46">()</argument_list></call><op:operator pos:line="76" pos:column="48">.</op:operator><name><name pos:line="76" pos:column="49">Value</name><op:operator pos:line="76" pos:column="54">.</op:operator><name pos:line="76" pos:column="55">TotalMilliseconds</name><type:modifier pos:line="76" pos:column="72">*</type:modifier></name><lit:literal type="number" pos:line="76" pos:column="73">4</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="77" pos:column="13">ServiceLocator</name><op:operator pos:line="77" pos:column="27">.</op:operator><name><name pos:line="77" pos:column="28">Resolve</name><argument_list pos:line="77" pos:column="35">&lt;<argument><name pos:line="77" pos:column="36">DocumentIndexer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="77" pos:column="52">()</argument_list></call><op:operator pos:line="77" pos:column="54">.</op:operator><call><name pos:line="77" pos:column="55">ForceReaderRefresh</name><argument_list pos:line="77" pos:column="73">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

 

        <function><type><specifier pos:line="82" pos:column="9">private</specifier> <name pos:line="82" pos:column="17">void</name></type> <name pos:line="82" pos:column="22">AddFilesToIndex</name><parameter_list pos:line="82" pos:column="37">(<param><decl><type><name pos:line="82" pos:column="38">string</name></type> <name pos:line="82" pos:column="45">filesInThisDirectory</name></decl></param>)</parameter_list>
        <block pos:line="83" pos:column="9">{
            <expr_stmt><expr><name pos:line="84" pos:column="13">_handler</name> <op:operator pos:line="84" pos:column="22">=</op:operator> <op:operator pos:line="84" pos:column="24">new</op:operator> <call><name pos:line="84" pos:column="28">SrcMLArchiveEventsHandlers</name><argument_list pos:line="84" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="85" pos:column="13">var</name></type> <name pos:line="85" pos:column="17">files</name> <init pos:line="85" pos:column="23">= <expr><call><name pos:line="85" pos:column="25">GetFileList</name><argument_list pos:line="85" pos:column="36">(<argument><expr><name pos:line="85" pos:column="37">filesInThisDirectory</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="86" pos:column="13">foreach (<init><decl><type><name pos:line="86" pos:column="22">var</name></type> <name pos:line="86" pos:column="26">file</name> <range pos:line="86" pos:column="31">in <expr><name pos:line="86" pos:column="34">files</name></expr></range></decl></init>)
            <block pos:line="87" pos:column="13">{
                <if pos:line="88" pos:column="17">if <condition pos:line="88" pos:column="20">(<expr><call><name><name pos:line="88" pos:column="21">Path</name><op:operator pos:line="88" pos:column="25">.</op:operator><name pos:line="88" pos:column="26">GetExtension</name></name><argument_list pos:line="88" pos:column="38">(<argument><expr><call><name><name pos:line="88" pos:column="39">Path</name><op:operator pos:line="88" pos:column="43">.</op:operator><name pos:line="88" pos:column="44">GetFullPath</name></name><argument_list pos:line="88" pos:column="55">(<argument><expr><name pos:line="88" pos:column="56">file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="88" pos:column="62">.</op:operator><call><name pos:line="88" pos:column="63">Equals</name><argument_list pos:line="88" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="88" pos:column="70">".cs"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="88" pos:column="77">||</op:operator>
                    <call><name><name pos:line="89" pos:column="21">Path</name><op:operator pos:line="89" pos:column="25">.</op:operator><name pos:line="89" pos:column="26">GetExtension</name></name><argument_list pos:line="89" pos:column="38">(<argument><expr><call><name><name pos:line="89" pos:column="39">Path</name><op:operator pos:line="89" pos:column="43">.</op:operator><name pos:line="89" pos:column="44">GetFullPath</name></name><argument_list pos:line="89" pos:column="55">(<argument><expr><name pos:line="89" pos:column="56">file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="89" pos:column="62">.</op:operator><call><name pos:line="89" pos:column="63">Equals</name><argument_list pos:line="89" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="89" pos:column="70">".cpp"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="89" pos:column="78">||</op:operator>
                    <call><name><name pos:line="90" pos:column="21">Path</name><op:operator pos:line="90" pos:column="25">.</op:operator><name pos:line="90" pos:column="26">GetExtension</name></name><argument_list pos:line="90" pos:column="38">(<argument><expr><call><name><name pos:line="90" pos:column="39">Path</name><op:operator pos:line="90" pos:column="43">.</op:operator><name pos:line="90" pos:column="44">GetFullPath</name></name><argument_list pos:line="90" pos:column="55">(<argument><expr><name pos:line="90" pos:column="56">file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="90" pos:column="62">.</op:operator><call><name pos:line="90" pos:column="63">Equals</name><argument_list pos:line="90" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="90" pos:column="70">".c"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="90" pos:column="76">||</op:operator>
                    <call><name><name pos:line="91" pos:column="21">Path</name><op:operator pos:line="91" pos:column="25">.</op:operator><name pos:line="91" pos:column="26">GetExtension</name></name><argument_list pos:line="91" pos:column="38">(<argument><expr><call><name><name pos:line="91" pos:column="39">Path</name><op:operator pos:line="91" pos:column="43">.</op:operator><name pos:line="91" pos:column="44">GetFullPath</name></name><argument_list pos:line="91" pos:column="55">(<argument><expr><name pos:line="91" pos:column="56">file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="91" pos:column="62">.</op:operator><call><name pos:line="91" pos:column="63">Equals</name><argument_list pos:line="91" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="91" pos:column="70">".h"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="91" pos:column="76">||</op:operator>
                    <call><name><name pos:line="92" pos:column="21">Path</name><op:operator pos:line="92" pos:column="25">.</op:operator><name pos:line="92" pos:column="26">GetExtension</name></name><argument_list pos:line="92" pos:column="38">(<argument><expr><call><name><name pos:line="92" pos:column="39">Path</name><op:operator pos:line="92" pos:column="43">.</op:operator><name pos:line="92" pos:column="44">GetFullPath</name></name><argument_list pos:line="92" pos:column="55">(<argument><expr><name pos:line="92" pos:column="56">file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="92" pos:column="62">.</op:operator><call><name pos:line="92" pos:column="63">Equals</name><argument_list pos:line="92" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="92" pos:column="70">".cxx"</lit:literal></expr></argument>)</argument_list></call></expr>
                    )</condition><then pos:line="93" pos:column="22">
                        <expr_stmt><expr><call><name><name pos:line="94" pos:column="25">_handler</name><op:operator pos:line="94" pos:column="33">.</op:operator><name pos:line="94" pos:column="34">SourceFileChanged</name></name><argument_list pos:line="94" pos:column="51">(<argument><expr><name pos:line="94" pos:column="52">this</name></expr></argument>, <argument><expr><op:operator pos:line="94" pos:column="58">new</op:operator> <call><name pos:line="94" pos:column="62">FileEventRaisedArgs</name><argument_list pos:line="94" pos:column="81">(<argument><expr><name><name pos:line="94" pos:column="82">FileEventType</name><op:operator pos:line="94" pos:column="95">.</op:operator><name pos:line="94" pos:column="96">FileAdded</name></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="107">file</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>  
            }</block></foreach>
            <expr_stmt><expr><name pos:line="96" pos:column="13">done</name> <op:operator pos:line="96" pos:column="18">=</op:operator> <lit:literal type="boolean" pos:line="96" pos:column="20">true</lit:literal></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="99" pos:column="9">private</specifier> <name><name pos:line="99" pos:column="17">List</name><argument_list pos:line="99" pos:column="21">&lt;<argument><name pos:line="99" pos:column="22">string</name></argument>&gt;</argument_list></name></type> <name pos:line="99" pos:column="30">GetFileList</name><parameter_list pos:line="99" pos:column="41">(<param><decl><type><name pos:line="99" pos:column="42">string</name></type> <name pos:line="99" pos:column="49">filesInThisDirectory</name></decl></param>, <param><decl><type><name><name pos:line="99" pos:column="71">List</name><argument_list pos:line="99" pos:column="75">&lt;<argument><name pos:line="99" pos:column="76">string</name></argument>&gt;</argument_list></name></type> <name pos:line="99" pos:column="84">incoming</name> <init pos:line="99" pos:column="93">= <expr><name pos:line="99" pos:column="95">null</name></expr></init></decl></param>)</parameter_list>
        <block pos:line="100" pos:column="9">{
            <if pos:line="101" pos:column="13">if <condition pos:line="101" pos:column="16">(<expr><call><name><name pos:line="101" pos:column="17">filesInThisDirectory</name><op:operator pos:line="101" pos:column="37">.</op:operator><name pos:line="101" pos:column="38">EndsWith</name></name><argument_list pos:line="101" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="101" pos:column="47">"LIBS"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="101" pos:column="55">||</op:operator> <call><name><name pos:line="101" pos:column="58">filesInThisDirectory</name><op:operator pos:line="101" pos:column="78">.</op:operator><name pos:line="101" pos:column="79">EndsWith</name></name><argument_list pos:line="101" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="101" pos:column="88">"bin"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="101" pos:column="95">||</op:operator> <call><name><name pos:line="101" pos:column="98">filesInThisDirectory</name><op:operator pos:line="101" pos:column="118">.</op:operator><name pos:line="101" pos:column="119">EndsWith</name></name><argument_list pos:line="101" pos:column="127">(<argument><expr><lit:literal type="string" pos:line="101" pos:column="128">"Debug"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="101" pos:column="137">
                <return pos:line="102" pos:column="17">return <expr><name pos:line="102" pos:column="24">incoming</name></expr>;</return></then></if>
            <if pos:line="103" pos:column="13">if <condition pos:line="103" pos:column="16">(<expr><name pos:line="103" pos:column="17">incoming</name> <op:operator pos:line="103" pos:column="26">==</op:operator> <name pos:line="103" pos:column="29">null</name></expr>)</condition><then pos:line="103" pos:column="34">
                <expr_stmt><expr><name pos:line="104" pos:column="17">incoming</name> <op:operator pos:line="104" pos:column="26">=</op:operator> <op:operator pos:line="104" pos:column="28">new</op:operator> <call><name><name pos:line="104" pos:column="32">List</name><argument_list pos:line="104" pos:column="36">&lt;<argument><name pos:line="104" pos:column="37">string</name></argument>&gt;</argument_list></name><argument_list pos:line="104" pos:column="44">()</argument_list></call></expr>;</expr_stmt></then></if>
            <expr_stmt><expr><call><name><name pos:line="105" pos:column="13">incoming</name><op:operator pos:line="105" pos:column="21">.</op:operator><name pos:line="105" pos:column="22">AddRange</name></name><argument_list pos:line="105" pos:column="30">(<argument><expr><call><name><name pos:line="105" pos:column="31">Directory</name><op:operator pos:line="105" pos:column="40">.</op:operator><name pos:line="105" pos:column="41">EnumerateFiles</name></name><argument_list pos:line="105" pos:column="55">(<argument><expr><name pos:line="105" pos:column="56">filesInThisDirectory</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="106" pos:column="13">var</name></type> <name pos:line="106" pos:column="17">dirs</name> <init pos:line="106" pos:column="22">= <expr><op:operator pos:line="106" pos:column="24">new</op:operator> <call><name><name pos:line="106" pos:column="28">List</name><argument_list pos:line="106" pos:column="32">&lt;<argument><name pos:line="106" pos:column="33">string</name></argument>&gt;</argument_list></name><argument_list pos:line="106" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="107" pos:column="13">dirs</name><op:operator pos:line="107" pos:column="17">.</op:operator><name pos:line="107" pos:column="18">AddRange</name></name><argument_list pos:line="107" pos:column="26">(<argument><expr><call><name><name pos:line="107" pos:column="27">Directory</name><op:operator pos:line="107" pos:column="36">.</op:operator><name pos:line="107" pos:column="37">EnumerateDirectories</name></name><argument_list pos:line="107" pos:column="57">(<argument><expr><name pos:line="107" pos:column="58">filesInThisDirectory</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <foreach pos:line="108" pos:column="13">foreach (<init><decl><type><name pos:line="108" pos:column="22">var</name></type> <name pos:line="108" pos:column="26">dir</name> <range pos:line="108" pos:column="30">in <expr><name pos:line="108" pos:column="33">dirs</name></expr></range></decl></init>)
                <expr_stmt><expr><call><name pos:line="109" pos:column="17">GetFileList</name><argument_list pos:line="109" pos:column="28">(<argument><expr><name pos:line="109" pos:column="29">dir</name></expr></argument>, <argument><expr><name pos:line="109" pos:column="34">incoming</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>
            <return pos:line="110" pos:column="13">return <expr><name pos:line="110" pos:column="20">incoming</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="113" pos:column="9">private</specifier> <name pos:line="113" pos:column="17">void</name></type> <name pos:line="113" pos:column="22">CreateSwum</name><parameter_list pos:line="113" pos:column="32">()</parameter_list>
        <block pos:line="114" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="115" pos:column="13">SwumManager</name><op:operator pos:line="115" pos:column="24">.</op:operator><name pos:line="115" pos:column="25">Instance</name><op:operator pos:line="115" pos:column="33">.</op:operator><name pos:line="115" pos:column="34">Initialize</name></name><argument_list pos:line="115" pos:column="44">(<argument><expr><call><name><name pos:line="115" pos:column="45">PathManager</name><op:operator pos:line="115" pos:column="56">.</op:operator><name pos:line="115" pos:column="57">Instance</name><op:operator pos:line="115" pos:column="65">.</op:operator><name pos:line="115" pos:column="66">GetIndexPath</name></name><argument_list pos:line="115" pos:column="78">(<argument><expr><call><name><name pos:line="115" pos:column="79">ServiceLocator</name><op:operator pos:line="115" pos:column="93">.</op:operator><name><name pos:line="115" pos:column="94">Resolve</name><argument_list pos:line="115" pos:column="101">&lt;<argument><name><name pos:line="115" pos:column="102">Sando</name><op:operator pos:line="115" pos:column="107">.</op:operator><name pos:line="115" pos:column="108">Core</name><op:operator pos:line="115" pos:column="112">.</op:operator><name pos:line="115" pos:column="113">Tools</name><op:operator pos:line="115" pos:column="118">.</op:operator><name pos:line="115" pos:column="119">SolutionKey</name></name></argument>&gt;</argument_list></name></name><argument_list pos:line="115" pos:column="131">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="115" pos:column="136">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="116" pos:column="13">SwumManager</name><op:operator pos:line="116" pos:column="24">.</op:operator><name pos:line="116" pos:column="25">Instance</name><op:operator pos:line="116" pos:column="33">.</op:operator><name pos:line="116" pos:column="34">Archive</name></name> <op:operator pos:line="116" pos:column="42">=</op:operator> <name pos:line="116" pos:column="44">_srcMLArchive</name></expr>;</expr_stmt>
        }</block></function>


        <function><type><specifier pos:line="120" pos:column="9">private</specifier> <name pos:line="120" pos:column="17">void</name></type> <name pos:line="120" pos:column="22">CreateArchive</name><parameter_list pos:line="120" pos:column="35">(<param><decl><type><name pos:line="120" pos:column="36">string</name></type> <name pos:line="120" pos:column="43">filesInThisDirectory</name></decl></param>)</parameter_list>
        <block pos:line="121" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="122" pos:column="13">var</name></type> <name pos:line="122" pos:column="17">srcMlArchiveFolder</name> <init pos:line="122" pos:column="36">= <expr><call><name><name pos:line="122" pos:column="38">Path</name><op:operator pos:line="122" pos:column="42">.</op:operator><name pos:line="122" pos:column="43">Combine</name></name><argument_list pos:line="122" pos:column="50">(<argument><expr><name pos:line="122" pos:column="51">_indexPath</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="122" pos:column="63">"archive"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="123" pos:column="13">var</name></type> <name pos:line="123" pos:column="17">srcMLFolder</name> <init pos:line="123" pos:column="29">= <expr><call><name><name pos:line="123" pos:column="31">Path</name><op:operator pos:line="123" pos:column="35">.</op:operator><name pos:line="123" pos:column="36">Combine</name></name><argument_list pos:line="123" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="123" pos:column="44">"."</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="123" pos:column="49">"SrcML"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="123" pos:column="58">"CSharp"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="124" pos:column="13">Directory</name><op:operator pos:line="124" pos:column="22">.</op:operator><name pos:line="124" pos:column="23">CreateDirectory</name></name><argument_list pos:line="124" pos:column="38">(<argument><expr><name pos:line="124" pos:column="39">srcMlArchiveFolder</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="125" pos:column="13">var</name></type> <name pos:line="125" pos:column="17">generator</name> <init pos:line="125" pos:column="27">= <expr><op:operator pos:line="125" pos:column="29">new</op:operator> <call><name pos:line="125" pos:column="33">SrcMLGenerator</name><argument_list pos:line="125" pos:column="47">(<argument><expr><name><name pos:line="125" pos:column="48">TestUtils</name><op:operator pos:line="125" pos:column="57">.</op:operator><name pos:line="125" pos:column="58">SrcMLDirectory</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name pos:line="126" pos:column="13">_srcMLArchive</name> <op:operator pos:line="126" pos:column="27">=</op:operator> <op:operator pos:line="126" pos:column="29">new</op:operator> <call><name pos:line="126" pos:column="33">SrcMLArchive</name><argument_list pos:line="126" pos:column="45">(<argument><expr><name pos:line="126" pos:column="46">_indexPath</name></expr></argument>,  <argument><expr><lit:literal type="boolean" pos:line="126" pos:column="59">false</lit:literal></expr></argument>, <argument><expr><name pos:line="126" pos:column="66">generator</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>



        <function><type><specifier pos:line="131" pos:column="9">private</specifier> <name pos:line="131" pos:column="17">void</name></type> <name pos:line="131" pos:column="22">CreateIndexer</name><parameter_list pos:line="131" pos:column="35">()</parameter_list>
        <block pos:line="132" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="133" pos:column="13">ServiceLocator</name><op:operator pos:line="133" pos:column="27">.</op:operator><name><name pos:line="133" pos:column="28">Resolve</name><argument_list pos:line="133" pos:column="35">&lt;<argument><name pos:line="133" pos:column="36">UIPackage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="133" pos:column="46">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="135" pos:column="13">ServiceLocator</name><op:operator pos:line="135" pos:column="27">.</op:operator><name pos:line="135" pos:column="28">RegisterInstance</name></name><argument_list pos:line="135" pos:column="44">(<argument><expr><op:operator pos:line="135" pos:column="45">new</op:operator> <call><name pos:line="135" pos:column="49">IndexFilterManager</name><argument_list pos:line="135" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="137" pos:column="13">PerFieldAnalyzerWrapper</name></type> <name pos:line="137" pos:column="37">analyzer</name> <init pos:line="137" pos:column="46">= <expr><op:operator pos:line="137" pos:column="48">new</op:operator> <call><name pos:line="137" pos:column="52">PerFieldAnalyzerWrapper</name><argument_list pos:line="137" pos:column="75">(<argument><expr><op:operator pos:line="137" pos:column="76">new</op:operator> <call><name pos:line="137" pos:column="80">SnowballAnalyzer</name><argument_list pos:line="137" pos:column="96">(<argument><expr><lit:literal type="string" pos:line="137" pos:column="97">"English"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>            
            <expr_stmt><expr><call><name><name pos:line="138" pos:column="13">analyzer</name><op:operator pos:line="138" pos:column="21">.</op:operator><name pos:line="138" pos:column="22">AddAnalyzer</name></name><argument_list pos:line="138" pos:column="33">(<argument><expr><call><name><name pos:line="138" pos:column="34">SandoField</name><op:operator pos:line="138" pos:column="44">.</op:operator><name pos:line="138" pos:column="45">Source</name><op:operator pos:line="138" pos:column="51">.</op:operator><name pos:line="138" pos:column="52">ToString</name></name><argument_list pos:line="138" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="138" pos:column="64">new</op:operator> <call><name pos:line="138" pos:column="68">KeywordAnalyzer</name><argument_list pos:line="138" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="139" pos:column="13">analyzer</name><op:operator pos:line="139" pos:column="21">.</op:operator><name pos:line="139" pos:column="22">AddAnalyzer</name></name><argument_list pos:line="139" pos:column="33">(<argument><expr><call><name><name pos:line="139" pos:column="34">SandoField</name><op:operator pos:line="139" pos:column="44">.</op:operator><name pos:line="139" pos:column="45">AccessLevel</name><op:operator pos:line="139" pos:column="56">.</op:operator><name pos:line="139" pos:column="57">ToString</name></name><argument_list pos:line="139" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="139" pos:column="69">new</op:operator> <call><name pos:line="139" pos:column="73">KeywordAnalyzer</name><argument_list pos:line="139" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="140" pos:column="13">analyzer</name><op:operator pos:line="140" pos:column="21">.</op:operator><name pos:line="140" pos:column="22">AddAnalyzer</name></name><argument_list pos:line="140" pos:column="33">(<argument><expr><call><name><name pos:line="140" pos:column="34">SandoField</name><op:operator pos:line="140" pos:column="44">.</op:operator><name pos:line="140" pos:column="45">ProgramElementType</name><op:operator pos:line="140" pos:column="63">.</op:operator><name pos:line="140" pos:column="64">ToString</name></name><argument_list pos:line="140" pos:column="72">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="140" pos:column="76">new</op:operator> <call><name pos:line="140" pos:column="80">KeywordAnalyzer</name><argument_list pos:line="140" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="141" pos:column="13">ServiceLocator</name><op:operator pos:line="141" pos:column="27">.</op:operator><name><name pos:line="141" pos:column="28">RegisterInstance</name><argument_list pos:line="141" pos:column="44">&lt;<argument><name pos:line="141" pos:column="45">Analyzer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="141" pos:column="54">(<argument><expr><name pos:line="141" pos:column="55">analyzer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="143" pos:column="13">var</name></type> <name pos:line="143" pos:column="17">currentIndexer</name> <init pos:line="143" pos:column="32">= <expr><op:operator pos:line="143" pos:column="34">new</op:operator> <call><name pos:line="143" pos:column="38">DocumentIndexer</name><argument_list pos:line="143" pos:column="53">(<argument><expr><call><name><name pos:line="143" pos:column="54">TimeSpan</name><op:operator pos:line="143" pos:column="62">.</op:operator><name pos:line="143" pos:column="63">FromSeconds</name></name><argument_list pos:line="143" pos:column="74">(<argument><expr><lit:literal type="number" pos:line="143" pos:column="75">10</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="143" pos:column="80">GetTimeToCommit</name><argument_list pos:line="143" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="144" pos:column="13">ServiceLocator</name><op:operator pos:line="144" pos:column="27">.</op:operator><name pos:line="144" pos:column="28">RegisterInstance</name></name><argument_list pos:line="144" pos:column="44">(<argument><expr><name pos:line="144" pos:column="45">currentIndexer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="145" pos:column="13">ServiceLocator</name><op:operator pos:line="145" pos:column="27">.</op:operator><name pos:line="145" pos:column="28">RegisterInstance</name></name><argument_list pos:line="145" pos:column="44">(<argument><expr><op:operator pos:line="145" pos:column="45">new</op:operator> <call><name pos:line="145" pos:column="49">IndexUpdateManager</name><argument_list pos:line="145" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="146" pos:column="13">currentIndexer</name><op:operator pos:line="146" pos:column="27">.</op:operator><name pos:line="146" pos:column="28">ClearIndex</name></name><argument_list pos:line="146" pos:column="38">()</argument_list></call></expr>;</expr_stmt>            
            <expr_stmt><expr><call><name><name pos:line="147" pos:column="13">ServiceLocator</name><op:operator pos:line="147" pos:column="27">.</op:operator><name><name pos:line="147" pos:column="28">Resolve</name><argument_list pos:line="147" pos:column="35">&lt;<argument><name pos:line="147" pos:column="36">InitialIndexingWatcher</name></argument>&gt;</argument_list></name></name><argument_list pos:line="147" pos:column="59">()</argument_list></call><op:operator pos:line="147" pos:column="61">.</op:operator><call><name pos:line="147" pos:column="62">InitialIndexingStarted</name><argument_list pos:line="147" pos:column="84">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="149" pos:column="13">var</name></type> <name pos:line="149" pos:column="17">dictionary</name> <init pos:line="149" pos:column="28">= <expr><op:operator pos:line="149" pos:column="30">new</op:operator> <call><name pos:line="149" pos:column="34">DictionaryBasedSplitter</name><argument_list pos:line="149" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="150" pos:column="13">dictionary</name><op:operator pos:line="150" pos:column="23">.</op:operator><name pos:line="150" pos:column="24">Initialize</name></name><argument_list pos:line="150" pos:column="34">(<argument><expr><call><name><name pos:line="150" pos:column="35">PathManager</name><op:operator pos:line="150" pos:column="46">.</op:operator><name pos:line="150" pos:column="47">Instance</name><op:operator pos:line="150" pos:column="55">.</op:operator><name pos:line="150" pos:column="56">GetIndexPath</name></name><argument_list pos:line="150" pos:column="68">(<argument><expr><call><name><name pos:line="150" pos:column="69">ServiceLocator</name><op:operator pos:line="150" pos:column="83">.</op:operator><name><name pos:line="150" pos:column="84">Resolve</name><argument_list pos:line="150" pos:column="91">&lt;<argument><name pos:line="150" pos:column="92">SolutionKey</name></argument>&gt;</argument_list></name></name><argument_list pos:line="150" pos:column="104">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="152" pos:column="13">var</name></type> <name pos:line="152" pos:column="17">reformer</name> <init pos:line="152" pos:column="26">= <expr><op:operator pos:line="152" pos:column="28">new</op:operator> <call><name pos:line="152" pos:column="32">QueryReformerManager</name><argument_list pos:line="152" pos:column="52">(<argument><expr><name pos:line="152" pos:column="53">dictionary</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="153" pos:column="13">reformer</name><op:operator pos:line="153" pos:column="21">.</op:operator><name pos:line="153" pos:column="22">Initialize</name></name><argument_list pos:line="153" pos:column="32">(<argument><expr><name pos:line="153" pos:column="33">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="154" pos:column="13">ServiceLocator</name><op:operator pos:line="154" pos:column="27">.</op:operator><name pos:line="154" pos:column="28">RegisterInstance</name></name><argument_list pos:line="154" pos:column="44">(<argument><expr><name pos:line="154" pos:column="45">reformer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="156" pos:column="13">var</name></type> <name pos:line="156" pos:column="17">history</name> <init pos:line="156" pos:column="25">= <expr><op:operator pos:line="156" pos:column="27">new</op:operator> <call><name pos:line="156" pos:column="31">SearchHistory</name><argument_list pos:line="156" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="157" pos:column="13">history</name><op:operator pos:line="157" pos:column="20">.</op:operator><name pos:line="157" pos:column="21">Initialize</name></name><argument_list pos:line="157" pos:column="31">(<argument><expr><call><name><name pos:line="157" pos:column="32">PathManager</name><op:operator pos:line="157" pos:column="43">.</op:operator><name pos:line="157" pos:column="44">Instance</name><op:operator pos:line="157" pos:column="52">.</op:operator><name pos:line="157" pos:column="53">GetIndexPath</name></name>
                <argument_list pos:line="158" pos:column="17">(<argument><expr><call><name><name pos:line="158" pos:column="18">ServiceLocator</name><op:operator pos:line="158" pos:column="32">.</op:operator><name><name pos:line="158" pos:column="33">Resolve</name><argument_list pos:line="158" pos:column="40">&lt;<argument><name pos:line="158" pos:column="41">SolutionKey</name></argument>&gt;</argument_list></name></name><argument_list pos:line="158" pos:column="53">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="159" pos:column="13">ServiceLocator</name><op:operator pos:line="159" pos:column="27">.</op:operator><name pos:line="159" pos:column="28">RegisterInstance</name></name><argument_list pos:line="159" pos:column="44">(<argument><expr><name pos:line="159" pos:column="45">history</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        }</block></function>



        <function><type><specifier pos:line="165" pos:column="9">private</specifier> <name pos:line="165" pos:column="17">void</name></type> <name pos:line="165" pos:column="22">CreateKey</name><parameter_list pos:line="165" pos:column="31">(<param><decl><type><name pos:line="165" pos:column="32">string</name></type> <name pos:line="165" pos:column="39">filesInThisDirectory</name></decl></param>)</parameter_list>
        <block pos:line="166" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="167" pos:column="13">Directory</name><op:operator pos:line="167" pos:column="22">.</op:operator><name pos:line="167" pos:column="23">CreateDirectory</name></name><argument_list pos:line="167" pos:column="38">(<argument><expr><name pos:line="167" pos:column="39">_indexPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="168" pos:column="13">var</name></type> <name pos:line="168" pos:column="17">key</name> <init pos:line="168" pos:column="21">= <expr><op:operator pos:line="168" pos:column="23">new</op:operator> <call><name><name pos:line="168" pos:column="27">Sando</name><op:operator pos:line="168" pos:column="32">.</op:operator><name pos:line="168" pos:column="33">Core</name><op:operator pos:line="168" pos:column="37">.</op:operator><name pos:line="168" pos:column="38">Tools</name><op:operator pos:line="168" pos:column="43">.</op:operator><name pos:line="168" pos:column="44">SolutionKey</name></name><argument_list pos:line="168" pos:column="55">(<argument><expr><call><name><name pos:line="168" pos:column="56">Guid</name><op:operator pos:line="168" pos:column="60">.</op:operator><name pos:line="168" pos:column="61">NewGuid</name></name><argument_list pos:line="168" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="168" pos:column="72">filesInThisDirectory</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="169" pos:column="13">ServiceLocator</name><op:operator pos:line="169" pos:column="27">.</op:operator><name pos:line="169" pos:column="28">RegisterInstance</name></name><argument_list pos:line="169" pos:column="44">(<argument><expr><name pos:line="169" pos:column="45">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="172" pos:column="9">private</specifier> <name pos:line="172" pos:column="17">void</name></type> <name pos:line="172" pos:column="22">CreateSystemWideDefaults</name><parameter_list pos:line="172" pos:column="46">(<param><decl><type><name pos:line="172" pos:column="47">string</name></type> <name pos:line="172" pos:column="54">indexDirName</name></decl></param>)</parameter_list>
        <block pos:line="173" pos:column="9">{
            <expr_stmt><expr><name pos:line="174" pos:column="13">_indexPath</name> <op:operator pos:line="174" pos:column="24">=</op:operator> <call><name><name pos:line="174" pos:column="26">Path</name><op:operator pos:line="174" pos:column="30">.</op:operator><name pos:line="174" pos:column="31">Combine</name></name><argument_list pos:line="174" pos:column="38">(<argument><expr><call><name><name pos:line="174" pos:column="39">Path</name><op:operator pos:line="174" pos:column="43">.</op:operator><name pos:line="174" pos:column="44">GetTempPath</name></name><argument_list pos:line="174" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="174" pos:column="59">indexDirName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="175" pos:column="13">TestUtils</name><op:operator pos:line="175" pos:column="22">.</op:operator><name pos:line="175" pos:column="23">InitializeDefaultExtensionPoints</name></name><argument_list pos:line="175" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="176" pos:column="13">ServiceLocator</name><op:operator pos:line="176" pos:column="27">.</op:operator><name><name pos:line="176" pos:column="28">RegisterInstance</name><argument_list pos:line="176" pos:column="44">&lt;<argument><name pos:line="176" pos:column="45">ISandoOptionsProvider</name></argument>&gt;</argument_list></name></name><argument_list pos:line="176" pos:column="67">(<argument><expr><op:operator pos:line="176" pos:column="68">new</op:operator> <call><name pos:line="176" pos:column="72">FakeOptionsProvider</name><argument_list pos:line="176" pos:column="91">(<argument><expr><name pos:line="176" pos:column="92">_indexPath</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="176" pos:column="103">40</lit:literal></expr></argument>,<argument><expr><lit:literal type="boolean" pos:line="176" pos:column="106">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="177" pos:column="13">ServiceLocator</name><op:operator pos:line="177" pos:column="27">.</op:operator><name pos:line="177" pos:column="28">RegisterInstance</name></name><argument_list pos:line="177" pos:column="44">(<argument><expr><op:operator pos:line="177" pos:column="45">new</op:operator> <call><name pos:line="177" pos:column="49">SrcMLArchiveEventsHandlers</name><argument_list pos:line="177" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="178" pos:column="13">ServiceLocator</name><op:operator pos:line="178" pos:column="27">.</op:operator><name pos:line="178" pos:column="28">RegisterInstance</name></name><argument_list pos:line="178" pos:column="44">(<argument><expr><op:operator pos:line="178" pos:column="45">new</op:operator> <call><name pos:line="178" pos:column="49">InitialIndexingWatcher</name><argument_list pos:line="178" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>


        <function><type><attribute pos:line="182" pos:column="9">[<expr><name pos:line="182" pos:column="10">TestFixtureTearDown</name></expr>]</attribute>
        <specifier pos:line="183" pos:column="9">public</specifier> <name pos:line="183" pos:column="16">void</name></type> <name pos:line="183" pos:column="21">TearDown</name><parameter_list pos:line="183" pos:column="29">()</parameter_list>
        <block pos:line="184" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="185" pos:column="13">_srcMLArchive</name><op:operator pos:line="185" pos:column="26">.</op:operator><name pos:line="185" pos:column="27">Dispose</name></name><argument_list pos:line="185" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="186" pos:column="13">ServiceLocator</name><op:operator pos:line="186" pos:column="27">.</op:operator><name><name pos:line="186" pos:column="28">Resolve</name><argument_list pos:line="186" pos:column="35">&lt;<argument><name pos:line="186" pos:column="36">IndexFilterManager</name></argument>&gt;</argument_list></name></name><argument_list pos:line="186" pos:column="55">()</argument_list></call><op:operator pos:line="186" pos:column="57">.</op:operator><call><name pos:line="186" pos:column="58">Dispose</name><argument_list pos:line="186" pos:column="65">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="187" pos:column="13">ServiceLocator</name><op:operator pos:line="187" pos:column="27">.</op:operator><name><name pos:line="187" pos:column="28">Resolve</name><argument_list pos:line="187" pos:column="35">&lt;<argument><name pos:line="187" pos:column="36">DocumentIndexer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="187" pos:column="52">()</argument_list></call><op:operator pos:line="187" pos:column="54">.</op:operator><call><name pos:line="187" pos:column="55">Dispose</name><argument_list pos:line="187" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="188" pos:column="13">DeleteTestDirectoryContents</name><argument_list pos:line="188" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="191" pos:column="9">private</specifier> <name pos:line="191" pos:column="17">void</name></type> <name pos:line="191" pos:column="22">DeleteTestDirectoryContents</name><parameter_list pos:line="191" pos:column="49">()</parameter_list>
        <block pos:line="192" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="193" pos:column="13">var</name></type> <name pos:line="193" pos:column="17">deleted</name> <init pos:line="193" pos:column="25">= <expr><lit:literal type="boolean" pos:line="193" pos:column="27">false</lit:literal></expr></init></decl>;</decl_stmt>
            <while pos:line="194" pos:column="13">while <condition pos:line="194" pos:column="19">(<expr><op:operator pos:line="194" pos:column="20">!</op:operator><name pos:line="194" pos:column="21">deleted</name></expr>)</condition>
            <block pos:line="195" pos:column="13">{
                <try pos:line="196" pos:column="17">try
                <block pos:line="197" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="198" pos:column="21">Directory</name><op:operator pos:line="198" pos:column="30">.</op:operator><name pos:line="198" pos:column="31">Delete</name></name><argument_list pos:line="198" pos:column="37">(<argument><expr><name pos:line="198" pos:column="38">_indexPath</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="198" pos:column="50">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="199" pos:column="21">deleted</name> <op:operator pos:line="199" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="199" pos:column="31">true</lit:literal></expr>;</expr_stmt>
                }</block>
                <catch pos:line="201" pos:column="17">catch <parameter_list pos:line="201" pos:column="23">(<param><decl><type><name pos:line="201" pos:column="24">Exception</name></type> <name pos:line="201" pos:column="34">e</name></decl></param>)</parameter_list>
                <block pos:line="202" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="203" pos:column="21">Thread</name><op:operator pos:line="203" pos:column="27">.</op:operator><name pos:line="203" pos:column="28">Sleep</name></name><argument_list pos:line="203" pos:column="33">(<argument><expr><lit:literal type="number" pos:line="203" pos:column="34">1000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></catch></try>
            }</block></while>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="208" pos:column="9">private</specifier> <name pos:line="208" pos:column="17">string</name></type> <name pos:line="208" pos:column="24">_indexPath</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="209" pos:column="9">private</specifier> <name pos:line="209" pos:column="17">SrcMLArchive</name></type> <name pos:line="209" pos:column="30">_srcMLArchive</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="210" pos:column="9">private</specifier> <name pos:line="210" pos:column="17">SrcMLArchiveEventsHandlers</name></type> <name pos:line="210" pos:column="44">_handler</name></decl>;</decl_stmt>

        <function><type><specifier pos:line="212" pos:column="9">protected</specifier> <name><name pos:line="212" pos:column="19">List</name><argument_list pos:line="212" pos:column="23">&lt;<argument><name pos:line="212" pos:column="24">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="212" pos:column="42">EnsureRankingPrettyGood</name><parameter_list pos:line="212" pos:column="65">(<param><decl><type><name pos:line="212" pos:column="66">string</name></type> <name pos:line="212" pos:column="73">keywords</name></decl></param>, <param><decl><type><name><name pos:line="212" pos:column="83">Predicate</name><argument_list pos:line="212" pos:column="92">&lt;<argument><name pos:line="212" pos:column="93">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="212" pos:column="111">predicate</name></decl></param>, <param><decl><type><name pos:line="212" pos:column="122">int</name></type> <name pos:line="212" pos:column="126">expectedLowestRank</name></decl></param>)</parameter_list>
        <block pos:line="213" pos:column="9">{
            <expr_stmt><expr><name pos:line="214" pos:column="13">_results</name> <op:operator pos:line="214" pos:column="22">=</op:operator> <call><name pos:line="214" pos:column="24">GetResults</name><argument_list pos:line="214" pos:column="34">(<argument><expr><name pos:line="214" pos:column="35">keywords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="215" pos:column="13">if <condition pos:line="215" pos:column="16">(<expr><name pos:line="215" pos:column="17">expectedLowestRank</name> <op:operator pos:line="215" pos:column="36">&gt;</op:operator> <lit:literal type="number" pos:line="215" pos:column="38">0</lit:literal></expr>)</condition><then pos:line="215" pos:column="40">
            <block pos:line="216" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="217" pos:column="17">var</name></type> <name pos:line="217" pos:column="21">methodSearchResult</name> <init pos:line="217" pos:column="40">= <expr><call><name pos:line="217" pos:column="42">CheckExistance</name><argument_list pos:line="217" pos:column="56">(<argument><expr><name pos:line="217" pos:column="57">keywords</name></expr></argument>, <argument><expr><name pos:line="217" pos:column="67">predicate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name pos:line="218" pos:column="17">CheckRanking</name><argument_list pos:line="218" pos:column="29">(<argument><expr><name pos:line="218" pos:column="30">keywords</name></expr></argument>, <argument><expr><name pos:line="218" pos:column="40">expectedLowestRank</name></expr></argument>, <argument><expr><name pos:line="218" pos:column="60">methodSearchResult</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <return pos:line="220" pos:column="13">return <expr><name pos:line="220" pos:column="20">_results</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="223" pos:column="9">private</specifier> <name pos:line="223" pos:column="17">void</name></type> <name pos:line="223" pos:column="22">CheckRanking</name><parameter_list pos:line="223" pos:column="34">(<param><decl><type><name pos:line="223" pos:column="35">string</name></type> <name pos:line="223" pos:column="42">keywords</name></decl></param>, <param><decl><type><name pos:line="223" pos:column="52">int</name></type> <name pos:line="223" pos:column="56">expectedLowestRank</name></decl></param>, <param><decl><type><name pos:line="223" pos:column="76">CodeSearchResult</name></type> <name pos:line="223" pos:column="93">methodSearchResult</name></decl></param>)</parameter_list>
        <block pos:line="224" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="225" pos:column="13">var</name></type> <name pos:line="225" pos:column="17">rank</name> <init pos:line="225" pos:column="22">= <expr><call><name><name pos:line="225" pos:column="24">_results</name><op:operator pos:line="225" pos:column="32">.</op:operator><name pos:line="225" pos:column="33">IndexOf</name></name><argument_list pos:line="225" pos:column="40">(<argument><expr><name pos:line="225" pos:column="41">methodSearchResult</name></expr></argument>)</argument_list></call> <op:operator pos:line="225" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="225" pos:column="63">1</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="226" pos:column="13">Assert</name><op:operator pos:line="226" pos:column="19">.</op:operator><name pos:line="226" pos:column="20">IsTrue</name></name><argument_list pos:line="226" pos:column="26">(<argument><expr><name pos:line="226" pos:column="27">rank</name> <op:operator pos:line="226" pos:column="32">&lt;=</op:operator> <name pos:line="226" pos:column="35">expectedLowestRank</name></expr></argument>,
                          <argument><expr><lit:literal type="string" pos:line="227" pos:column="27">"Searching for "</lit:literal> <op:operator pos:line="227" pos:column="44">+</op:operator> <name pos:line="227" pos:column="46">keywords</name> <op:operator pos:line="227" pos:column="55">+</op:operator> <lit:literal type="string" pos:line="227" pos:column="57">" doesn't return a result in the top "</lit:literal> <op:operator pos:line="227" pos:column="96">+</op:operator> <name pos:line="227" pos:column="98">expectedLowestRank</name> <op:operator pos:line="227" pos:column="117">+</op:operator> <lit:literal type="string" pos:line="227" pos:column="119">"; rank="</lit:literal> <op:operator pos:line="227" pos:column="129">+</op:operator>
                          <name pos:line="228" pos:column="27">rank</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="231" pos:column="9">private</specifier> <name pos:line="231" pos:column="17">CodeSearchResult</name></type> <name pos:line="231" pos:column="34">CheckExistance</name><parameter_list pos:line="231" pos:column="48">(<param><decl><type><name pos:line="231" pos:column="49">string</name></type> <name pos:line="231" pos:column="56">keywords</name></decl></param>, <param><decl><type><name><name pos:line="231" pos:column="66">Predicate</name><argument_list pos:line="231" pos:column="75">&lt;<argument><name pos:line="231" pos:column="76">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="231" pos:column="94">predicate</name></decl></param>)</parameter_list>
        <block pos:line="232" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="233" pos:column="13">var</name></type> <name pos:line="233" pos:column="17">methodSearchResult</name> <init pos:line="233" pos:column="36">= <expr><call><name><name pos:line="233" pos:column="38">_results</name><op:operator pos:line="233" pos:column="46">.</op:operator><name pos:line="233" pos:column="47">Find</name></name><argument_list pos:line="233" pos:column="51">(<argument><expr><name pos:line="233" pos:column="52">predicate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="234" pos:column="13">if <condition pos:line="234" pos:column="16">(<expr><name pos:line="234" pos:column="17">methodSearchResult</name> <op:operator pos:line="234" pos:column="36">==</op:operator> <name pos:line="234" pos:column="39">null</name></expr>)</condition><then pos:line="234" pos:column="44">
            <block pos:line="235" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="236" pos:column="17">string</name></type> <name pos:line="236" pos:column="24">info</name> <init pos:line="236" pos:column="29">= <expr><call><name pos:line="236" pos:column="31">PrintFailInformation</name><argument_list pos:line="236" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="237" pos:column="17">Assert</name><op:operator pos:line="237" pos:column="23">.</op:operator><name pos:line="237" pos:column="24">Fail</name></name><argument_list pos:line="237" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="237" pos:column="29">"Failed to find relevant search result for search: "</lit:literal> <op:operator pos:line="237" pos:column="82">+</op:operator> <name pos:line="237" pos:column="84">keywords</name><op:operator pos:line="237" pos:column="92">+</op:operator><lit:literal type="string" pos:line="237" pos:column="93">"\n"</lit:literal><op:operator pos:line="237" pos:column="97">+</op:operator><name pos:line="237" pos:column="98">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                
            }</block></then></if>
            <return pos:line="239" pos:column="13">return <expr><name pos:line="239" pos:column="20">methodSearchResult</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="242" pos:column="9">public</specifier> <name pos:line="242" pos:column="16">string</name></type> <name pos:line="242" pos:column="23">PrintFailInformation</name><parameter_list pos:line="242" pos:column="43">(<param><decl><type><name pos:line="242" pos:column="44">bool</name></type> <name pos:line="242" pos:column="49">includeFiles</name> <init pos:line="242" pos:column="62">= <expr><lit:literal type="boolean" pos:line="242" pos:column="64">true</lit:literal></expr></init></decl></param>)</parameter_list>
        <block pos:line="243" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="244" pos:column="13">StringBuilder</name></type> <name pos:line="244" pos:column="27">info</name> <init pos:line="244" pos:column="32">= <expr><op:operator pos:line="244" pos:column="34">new</op:operator> <call><name pos:line="244" pos:column="38">StringBuilder</name><argument_list pos:line="244" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="245" pos:column="13">if <condition pos:line="245" pos:column="16">(<expr><name pos:line="245" pos:column="17">includeFiles</name></expr>)</condition><then pos:line="245" pos:column="30">
            <block pos:line="246" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="247" pos:column="17">info</name><op:operator pos:line="247" pos:column="21">.</op:operator><name pos:line="247" pos:column="22">AppendLine</name></name><argument_list pos:line="247" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="247" pos:column="33">"Indexed Documents: "</lit:literal> <op:operator pos:line="247" pos:column="55">+</op:operator> <call><name><name pos:line="247" pos:column="57">ServiceLocator</name><op:operator pos:line="247" pos:column="71">.</op:operator><name><name pos:line="247" pos:column="72">Resolve</name><argument_list pos:line="247" pos:column="79">&lt;<argument><name pos:line="247" pos:column="80">DocumentIndexer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="247" pos:column="96">()</argument_list></call><op:operator pos:line="247" pos:column="98">.</op:operator><call><name pos:line="247" pos:column="99">GetNumberOfIndexedDocuments</name><argument_list pos:line="247" pos:column="126">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <foreach pos:line="248" pos:column="17">foreach (<init><decl><type><name pos:line="248" pos:column="26">var</name></type> <name pos:line="248" pos:column="30">file</name> <range pos:line="248" pos:column="35">in <expr><call><name pos:line="248" pos:column="38">GetFileList</name><argument_list pos:line="248" pos:column="49">(<argument><expr><call><name pos:line="248" pos:column="50">GetFilesDirectory</name><argument_list pos:line="248" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr></range></decl></init>)
                    <expr_stmt><expr><call><name><name pos:line="249" pos:column="21">info</name><op:operator pos:line="249" pos:column="25">.</op:operator><name pos:line="249" pos:column="26">AppendLine</name></name><argument_list pos:line="249" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="249" pos:column="37">"file: "</lit:literal> <op:operator pos:line="249" pos:column="46">+</op:operator> <name pos:line="249" pos:column="48">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>
            }</block></then></if>
            <if pos:line="251" pos:column="13">if <condition pos:line="251" pos:column="16">(<expr><name pos:line="251" pos:column="17">_results</name> <op:operator pos:line="251" pos:column="26">!=</op:operator> <name pos:line="251" pos:column="29">null</name></expr>)</condition><then pos:line="251" pos:column="34">
                <foreach pos:line="252" pos:column="17">foreach (<init><decl><type><name pos:line="252" pos:column="26">var</name></type> <name pos:line="252" pos:column="30">result</name> <range pos:line="252" pos:column="37">in <expr><name pos:line="252" pos:column="40">_results</name></expr></range></decl></init>)
                    <expr_stmt><expr><call><name><name pos:line="253" pos:column="21">info</name><op:operator pos:line="253" pos:column="25">.</op:operator><name pos:line="253" pos:column="26">AppendLine</name></name><argument_list pos:line="253" pos:column="36">(<argument><expr><name><name pos:line="253" pos:column="37">result</name><op:operator pos:line="253" pos:column="43">.</op:operator><name pos:line="253" pos:column="44">Name</name></name><op:operator pos:line="253" pos:column="48">+</op:operator><lit:literal type="string" pos:line="253" pos:column="49">" in "</lit:literal><op:operator pos:line="253" pos:column="55">+</op:operator> <name><name pos:line="253" pos:column="57">result</name><op:operator pos:line="253" pos:column="63">.</op:operator><name pos:line="253" pos:column="64">FileName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach></then></if>
            <return pos:line="254" pos:column="13">return <expr><call><name><name pos:line="254" pos:column="20">info</name><op:operator pos:line="254" pos:column="24">.</op:operator><name pos:line="254" pos:column="25">ToString</name></name><argument_list pos:line="254" pos:column="33">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="257" pos:column="9">private</specifier> <name><name pos:line="257" pos:column="17">List</name><argument_list pos:line="257" pos:column="21">&lt;<argument><name pos:line="257" pos:column="22">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="257" pos:column="40">GetResults</name><parameter_list pos:line="257" pos:column="50">(<param><decl><type><name pos:line="257" pos:column="51">string</name></type> <name pos:line="257" pos:column="58">keywords</name></decl></param>)</parameter_list>
        <block pos:line="258" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="259" pos:column="13">var</name></type> <name pos:line="259" pos:column="17">manager</name> <init pos:line="259" pos:column="25">= <expr><call><name><name pos:line="259" pos:column="27">SearchManagerFactory</name><op:operator pos:line="259" pos:column="47">.</op:operator><name pos:line="259" pos:column="48">GetNewBackgroundSearchManager</name></name><argument_list pos:line="259" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="260" pos:column="13">manager</name><op:operator pos:line="260" pos:column="20">.</op:operator><name pos:line="260" pos:column="21">AddListener</name></name><argument_list pos:line="260" pos:column="32">(<argument><expr><name pos:line="260" pos:column="33">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="261" pos:column="13">_results</name> <op:operator pos:line="261" pos:column="22">=</op:operator> <name pos:line="261" pos:column="24">null</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="262" pos:column="13">manager</name><op:operator pos:line="262" pos:column="20">.</op:operator><name pos:line="262" pos:column="21">Search</name></name><argument_list pos:line="262" pos:column="27">(<argument><expr><name pos:line="262" pos:column="28">keywords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="263" pos:column="13">int</name></type> <name pos:line="263" pos:column="17">i</name> <init pos:line="263" pos:column="19">= <expr><lit:literal type="number" pos:line="263" pos:column="21">0</lit:literal></expr></init></decl>;</decl_stmt>
            <while pos:line="264" pos:column="13">while <condition pos:line="264" pos:column="19">(<expr><name pos:line="264" pos:column="20">_results</name> <op:operator pos:line="264" pos:column="29">==</op:operator> <name pos:line="264" pos:column="32">null</name></expr>)</condition>
            <block pos:line="265" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="266" pos:column="17">Thread</name><op:operator pos:line="266" pos:column="23">.</op:operator><name pos:line="266" pos:column="24">Sleep</name></name><argument_list pos:line="266" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="266" pos:column="30">50</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="267" pos:column="17">i</name><op:operator pos:line="267" pos:column="18">++</op:operator></expr>;</expr_stmt>
                <if pos:line="268" pos:column="17">if <condition pos:line="268" pos:column="20">(<expr><name pos:line="268" pos:column="21">i</name> <op:operator pos:line="268" pos:column="23">&gt;</op:operator> <lit:literal type="number" pos:line="268" pos:column="25">100</lit:literal></expr>)</condition><then pos:line="268" pos:column="29">
                    <break pos:line="269" pos:column="21">break;</break></then></if>
            }</block></while>
            <return pos:line="271" pos:column="13">return <expr><name pos:line="271" pos:column="20">_results</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="274" pos:column="9">public</specifier> <name><name pos:line="274" pos:column="16">System</name><op:operator pos:line="274" pos:column="22">.</op:operator><name pos:line="274" pos:column="23">Xml</name><op:operator pos:line="274" pos:column="26">.</op:operator><name pos:line="274" pos:column="27">Linq</name><op:operator pos:line="274" pos:column="31">.</op:operator><name pos:line="274" pos:column="32">XElement</name></name></type> <name pos:line="274" pos:column="41">GetXElementForSourceFile</name><parameter_list pos:line="274" pos:column="65">(<param><decl><type><name pos:line="274" pos:column="66">string</name></type> <name pos:line="274" pos:column="73">sourceFilePath</name></decl></param>)</parameter_list>
        <block pos:line="275" pos:column="9">{
            <return pos:line="276" pos:column="13">return <expr><call><name><name pos:line="276" pos:column="20">_srcMLArchive</name><op:operator pos:line="276" pos:column="33">.</op:operator><name pos:line="276" pos:column="34">GetXElementForSourceFile</name></name><argument_list pos:line="276" pos:column="58">(<argument><expr><name pos:line="276" pos:column="59">sourceFilePath</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="279" pos:column="9">public</specifier> <name pos:line="279" pos:column="16">ISrcMLArchive</name></type> <name pos:line="279" pos:column="30">GetSrcMLArchive</name><parameter_list pos:line="279" pos:column="45">()</parameter_list>
        <block pos:line="280" pos:column="9">{
            <throw pos:line="281" pos:column="13">throw <expr><op:operator pos:line="281" pos:column="19">new</op:operator> <call><name pos:line="281" pos:column="23">NotImplementedException</name><argument_list pos:line="281" pos:column="46">()</argument_list></call></expr>;</throw>
        }</block></function>


        <decl_stmt><decl><type><specifier pos:line="285" pos:column="9">public</specifier> <specifier pos:line="285" pos:column="16">event</specifier> <name><name pos:line="285" pos:column="22">EventHandler</name><argument_list pos:line="285" pos:column="34">&lt;<argument><name pos:line="285" pos:column="35">EventArgs</name></argument>&gt;</argument_list></name></type> <name pos:line="285" pos:column="46">MonitoringStopped</name></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="287" pos:column="9">public</specifier> <specifier pos:line="287" pos:column="16">event</specifier> <name><name pos:line="287" pos:column="22">EventHandler</name><argument_list pos:line="287" pos:column="34">&lt;<argument><name pos:line="287" pos:column="35">FileEventRaisedArgs</name></argument>&gt;</argument_list></name></type> <name pos:line="287" pos:column="56">SourceFileChanged</name></decl>;</decl_stmt>


        <decl_stmt><decl><type><specifier pos:line="290" pos:column="9">public</specifier> <specifier pos:line="290" pos:column="16">event</specifier> <name><name pos:line="290" pos:column="22">EventHandler</name><argument_list pos:line="290" pos:column="34">&lt;<argument><name pos:line="290" pos:column="35">EventArgs</name></argument>&gt;</argument_list></name></type> <name pos:line="290" pos:column="46">StartupCompleted</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="291" pos:column="9">private</specifier> <name><name pos:line="291" pos:column="17">List</name><argument_list pos:line="291" pos:column="21">&lt;<argument><name pos:line="291" pos:column="22">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="291" pos:column="40">_results</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="292" pos:column="9">protected</specifier> <name pos:line="292" pos:column="19">string</name></type> <name pos:line="292" pos:column="26">_myMessage</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="293" pos:column="9">private</specifier> <name pos:line="293" pos:column="17">bool</name></type> <name pos:line="293" pos:column="22">done</name> <init pos:line="293" pos:column="27">= <expr><lit:literal type="boolean" pos:line="293" pos:column="29">false</lit:literal></expr></init></decl>;</decl_stmt>


        <function><type><specifier pos:line="296" pos:column="9">public</specifier> <name pos:line="296" pos:column="16">void</name></type> <name pos:line="296" pos:column="21">StopMonitoring</name><parameter_list pos:line="296" pos:column="35">()</parameter_list>
        <block pos:line="297" pos:column="9">{
            <throw pos:line="298" pos:column="13">throw <expr><op:operator pos:line="298" pos:column="19">new</op:operator> <call><name pos:line="298" pos:column="23">NotImplementedException</name><argument_list pos:line="298" pos:column="46">()</argument_list></call></expr>;</throw>
        }</block></function>

        <function><type><specifier pos:line="301" pos:column="9">public</specifier> <name pos:line="301" pos:column="16">void</name></type> <name pos:line="301" pos:column="21">Update</name><parameter_list pos:line="301" pos:column="27">(<param><decl><type><name pos:line="301" pos:column="28">string</name></type> <name pos:line="301" pos:column="35">searchString</name></decl></param>, <param><decl><type><name><name pos:line="301" pos:column="49">IQueryable</name><argument_list pos:line="301" pos:column="59">&lt;<argument><name pos:line="301" pos:column="60">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="301" pos:column="78">results</name></decl></param>)</parameter_list>
        <block pos:line="302" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="303" pos:column="13">var</name></type> <name pos:line="303" pos:column="17">newResults</name> <init pos:line="303" pos:column="28">= <expr><op:operator pos:line="303" pos:column="30">new</op:operator> <call><name><name pos:line="303" pos:column="34">List</name><argument_list pos:line="303" pos:column="38">&lt;<argument><name pos:line="303" pos:column="39">CodeSearchResult</name></argument>&gt;</argument_list></name><argument_list pos:line="303" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="304" pos:column="13">foreach(<init><decl><type><name pos:line="304" pos:column="21">var</name></type> <name pos:line="304" pos:column="25">result</name> <range pos:line="304" pos:column="32">in <expr><name pos:line="304" pos:column="35">results</name></expr></range></decl></init>)
                 <expr_stmt><expr><call><name><name pos:line="305" pos:column="18">newResults</name><op:operator pos:line="305" pos:column="28">.</op:operator><name pos:line="305" pos:column="29">Add</name></name><argument_list pos:line="305" pos:column="32">(<argument><expr><name pos:line="305" pos:column="33">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>
            <expr_stmt><expr><name pos:line="306" pos:column="13">_results</name> <op:operator pos:line="306" pos:column="22">=</op:operator> <name pos:line="306" pos:column="24">newResults</name></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="309" pos:column="9">public</specifier> <name pos:line="309" pos:column="16">void</name></type> <name pos:line="309" pos:column="21">UpdateMessage</name><parameter_list pos:line="309" pos:column="34">(<param><decl><type><name pos:line="309" pos:column="35">string</name></type> <name pos:line="309" pos:column="42">message</name></decl></param>)</parameter_list>
        <block pos:line="310" pos:column="9">{
            <expr_stmt><expr><name pos:line="311" pos:column="13">_myMessage</name> <op:operator pos:line="311" pos:column="24">=</op:operator> <name pos:line="311" pos:column="26">message</name></expr>;</expr_stmt>            
        }</block></function>

        <function><type><specifier pos:line="314" pos:column="9">public</specifier> <name pos:line="314" pos:column="16">void</name></type> <name pos:line="314" pos:column="21">UpdateRecommendedQueries</name><parameter_list pos:line="314" pos:column="45">(<param><decl><type><name><name pos:line="314" pos:column="46">IQueryable</name><argument_list pos:line="314" pos:column="56">&lt;<argument><name pos:line="314" pos:column="57">string</name></argument>&gt;</argument_list></name></type> <name pos:line="314" pos:column="65">queries</name></decl></param>)</parameter_list>
        <block pos:line="315" pos:column="9">{
            
        }</block></function>

        <class><specifier pos:line="319" pos:column="9">public</specifier> class <name pos:line="319" pos:column="22">FakeOptionsProvider</name> <super pos:line="319" pos:column="42">: <name pos:line="319" pos:column="44">ISandoOptionsProvider</name></super>
        <block pos:line="320" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="321" pos:column="13">private</specifier> <name pos:line="321" pos:column="21">string</name></type> <name pos:line="321" pos:column="28">_myIndex</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="322" pos:column="13">private</specifier> <name pos:line="322" pos:column="21">int</name></type> <name pos:line="322" pos:column="25">_myResultsNumber</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="323" pos:column="25">private</specifier> <name pos:line="323" pos:column="33">bool</name></type> <name pos:line="323" pos:column="38">_myAllowLogs</name></decl>;</decl_stmt>

            <constructor><specifier pos:line="325" pos:column="13">public</specifier> <name pos:line="325" pos:column="20">FakeOptionsProvider</name><parameter_list pos:line="325" pos:column="39">(<param><decl><type><name pos:line="325" pos:column="40">string</name></type> <name pos:line="325" pos:column="47">index</name></decl></param>, <param><decl><type><name pos:line="325" pos:column="54">int</name></type> <name pos:line="325" pos:column="58">num</name></decl></param>, <param><decl><type><name pos:line="325" pos:column="63">bool</name></type> <name pos:line="325" pos:column="68">allowLogs</name></decl></param>)</parameter_list>
            <block pos:line="326" pos:column="13">{
                <expr_stmt><expr><name pos:line="327" pos:column="17">_myIndex</name> <op:operator pos:line="327" pos:column="26">=</op:operator> <name pos:line="327" pos:column="28">index</name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="328" pos:column="17">_myResultsNumber</name> <op:operator pos:line="328" pos:column="34">=</op:operator> <name pos:line="328" pos:column="36">num</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="329" pos:column="33">_myAllowLogs</name> <op:operator pos:line="329" pos:column="46">=</op:operator> <name pos:line="329" pos:column="48">allowLogs</name></expr>;</expr_stmt>
            }</block></constructor>

            <function><type><specifier pos:line="332" pos:column="13">public</specifier> <name pos:line="332" pos:column="20">SandoOptions</name></type> <name pos:line="332" pos:column="33">GetSandoOptions</name><parameter_list pos:line="332" pos:column="48">()</parameter_list>
            <block pos:line="333" pos:column="13">{
                <return pos:line="334" pos:column="17">return <expr><op:operator pos:line="334" pos:column="24">new</op:operator> <call><name pos:line="334" pos:column="28">SandoOptions</name><argument_list pos:line="334" pos:column="40">(<argument><expr><name pos:line="334" pos:column="41">_myIndex</name></expr></argument>,<argument><expr><name pos:line="334" pos:column="50">_myResultsNumber</name></expr></argument>, <argument><expr><name pos:line="334" pos:column="68">_myAllowLogs</name></expr></argument>)</argument_list></call></expr>;</return>
            }</block></function>
        }</block></class>


       

        <function><type><specifier pos:line="341" pos:column="9">public</specifier> <name pos:line="341" pos:column="16">void</name></type> <name pos:line="341" pos:column="21">StartMonitoring</name><parameter_list pos:line="341" pos:column="36">()</parameter_list>
        <block pos:line="342" pos:column="9">{
            <throw pos:line="343" pos:column="13">throw <expr><op:operator pos:line="343" pos:column="19">new</op:operator> <call><name pos:line="343" pos:column="23">NotImplementedException</name><argument_list pos:line="343" pos:column="46">()</argument_list></call></expr>;</throw>
        }</block></function>

        <function><type><specifier pos:line="346" pos:column="9">public</specifier> <name><name pos:line="346" pos:column="16">ABB</name><op:operator pos:line="346" pos:column="19">.</op:operator><name pos:line="346" pos:column="20">SrcML</name><op:operator pos:line="346" pos:column="25">.</op:operator><name pos:line="346" pos:column="26">Data</name><op:operator pos:line="346" pos:column="30">.</op:operator><name pos:line="346" pos:column="31">DataRepository</name></name></type> <name pos:line="346" pos:column="46">GetDataRepository</name><parameter_list pos:line="346" pos:column="63">()</parameter_list> <block pos:line="346" pos:column="66">{
            <throw pos:line="347" pos:column="13">throw <expr><op:operator pos:line="347" pos:column="19">new</op:operator> <call><name pos:line="347" pos:column="23">NotImplementedException</name><argument_list pos:line="347" pos:column="46">()</argument_list></call></expr>;</throw>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="350" pos:column="9">public</specifier> <name pos:line="350" pos:column="16">bool</name></type> <name pos:line="350" pos:column="21">IsReady</name>
        <block pos:line="351" pos:column="9">{
            <function><name pos:line="352" pos:column="13">get</name> <block pos:line="352" pos:column="17">{ <return pos:line="352" pos:column="19">return <expr><name pos:line="352" pos:column="26">done</name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="355" pos:column="9">public</specifier> <name pos:line="355" pos:column="16">void</name></type> <name pos:line="355" pos:column="21">AddDirectoryToMonitor</name><parameter_list pos:line="355" pos:column="42">(<param><decl><type><name pos:line="355" pos:column="43">string</name></type> <name pos:line="355" pos:column="50">pathToDirectory</name></decl></param>)</parameter_list>
        <block pos:line="356" pos:column="9">{
            <throw pos:line="357" pos:column="13">throw <expr><op:operator pos:line="357" pos:column="19">new</op:operator> <call><name pos:line="357" pos:column="23">NotImplementedException</name><argument_list pos:line="357" pos:column="46">()</argument_list></call></expr>;</throw>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="360" pos:column="9">public</specifier> <name><name pos:line="360" pos:column="16">System</name><op:operator pos:line="360" pos:column="22">.</op:operator><name pos:line="360" pos:column="23">Collections</name><op:operator pos:line="360" pos:column="34">.</op:operator><name pos:line="360" pos:column="35">ObjectModel</name><op:operator pos:line="360" pos:column="46">.</op:operator><name><name pos:line="360" pos:column="47">ReadOnlyCollection</name><argument_list pos:line="360" pos:column="65">&lt;<argument><name pos:line="360" pos:column="66">string</name></argument>&gt;</argument_list></name></name></type> <name pos:line="360" pos:column="74">MonitoredDirectories</name>
        <block pos:line="361" pos:column="9">{
            <function><name pos:line="362" pos:column="13">get</name> <block pos:line="362" pos:column="17">{ <throw pos:line="362" pos:column="19">throw <expr><op:operator pos:line="362" pos:column="25">new</op:operator> <call><name pos:line="362" pos:column="29">NotImplementedException</name><argument_list pos:line="362" pos:column="52">()</argument_list></call></expr>;</throw> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="365" pos:column="9">public</specifier> <name pos:line="365" pos:column="16">void</name></type> <name pos:line="365" pos:column="21">RemoveDirectoryFromMonitor</name><parameter_list pos:line="365" pos:column="47">(<param><decl><type><name pos:line="365" pos:column="48">string</name></type> <name pos:line="365" pos:column="55">pathToDirectory</name></decl></param>)</parameter_list>
        <block pos:line="366" pos:column="9">{
            <throw pos:line="367" pos:column="13">throw <expr><op:operator pos:line="367" pos:column="19">new</op:operator> <call><name pos:line="367" pos:column="23">NotImplementedException</name><argument_list pos:line="367" pos:column="46">()</argument_list></call></expr>;</throw>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="370" pos:column="9">public</specifier> <name pos:line="370" pos:column="16">double</name></type> <name pos:line="370" pos:column="23">ScanInterval</name>
        <block pos:line="371" pos:column="9">{
            <function><name pos:line="372" pos:column="13">get</name>
            <block pos:line="373" pos:column="13">{
                <return pos:line="374" pos:column="17">return <expr><lit:literal type="number" pos:line="374" pos:column="24">60</lit:literal></expr>;</return>
            }</block></function>
            <function><name pos:line="376" pos:column="13">set</name>
            <block pos:line="377" pos:column="13">{
                <throw pos:line="378" pos:column="17">throw <expr><op:operator pos:line="378" pos:column="23">new</op:operator> <call><name pos:line="378" pos:column="27">NotImplementedException</name><argument_list pos:line="378" pos:column="50">()</argument_list></call></expr>;</throw>
            }</block></function>
        }</block></decl></decl_stmt>
    }</block></class>
}</block></namespace>
</unit>
