<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\Core\Core\QueryRefomers\RecommendationRelatedEvents.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Sando</name><op:operator pos:line="5" pos:column="12">.</op:operator><name pos:line="5" pos:column="13">Core</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">QueryRefomers</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">Sando</name><op:operator pos:line="7" pos:column="16">.</op:operator><name pos:line="7" pos:column="17">Core</name><op:operator pos:line="7" pos:column="21">.</op:operator><name pos:line="7" pos:column="22">Logging</name><op:operator pos:line="7" pos:column="29">.</op:operator><name pos:line="7" pos:column="30">Events</name></name>
<block pos:line="8" pos:column="1">{
    <class><specifier pos:line="9" pos:column="5">public</specifier> <specifier pos:line="9" pos:column="12">partial</specifier> class <name pos:line="9" pos:column="26">LogEvents</name>
    <block pos:line="10" pos:column="5">{
        <function><type><specifier pos:line="11" pos:column="9">public</specifier> <specifier pos:line="11" pos:column="16">static</specifier> <name pos:line="11" pos:column="23">void</name></type> <name pos:line="11" pos:column="28">IssueRecommendedQueries</name><parameter_list pos:line="11" pos:column="51">(<param><decl><type><name><name pos:line="11" pos:column="52">IReformedQuery</name><index pos:line="11" pos:column="66">[]</index></name></type> <name pos:line="11" pos:column="69">allQueries</name></decl></param>)</parameter_list>
        <block pos:line="12" pos:column="9">{
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><call><name><name pos:line="13" pos:column="17">allQueries</name><op:operator pos:line="13" pos:column="27">.</op:operator><name pos:line="13" pos:column="28">Any</name></name><argument_list pos:line="13" pos:column="31">()</argument_list></call></expr>)</condition><then pos:line="13" pos:column="34">
            <block pos:line="14" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="15" pos:column="17">var</name></type> <name pos:line="15" pos:column="21">sb</name> <init pos:line="15" pos:column="24">= <expr><op:operator pos:line="15" pos:column="26">new</op:operator> <call><name pos:line="15" pos:column="30">StringBuilder</name><argument_list pos:line="15" pos:column="43">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="16" pos:column="17">sb</name><op:operator pos:line="16" pos:column="19">.</op:operator><name pos:line="16" pos:column="20">Append</name></name><argument_list pos:line="16" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="16" pos:column="27">"Created links."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="17" pos:column="17">sb</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">Append</name></name><argument_list pos:line="17" pos:column="26">(<argument><expr><call><name><name pos:line="17" pos:column="27">allQueries</name><op:operator pos:line="17" pos:column="37">.</op:operator><name pos:line="17" pos:column="38">Select</name></name><argument_list pos:line="17" pos:column="44">(<argument><expr><name pos:line="17" pos:column="45">CreateReformedQueryMessage</name></expr></argument>)</argument_list></call><op:operator pos:line="17" pos:column="72">.</op:operator><call><name pos:line="17" pos:column="73">Aggregate</name>
                    <argument_list pos:line="18" pos:column="21">(<argument><expr><lambda><parameter_list pos:line="18" pos:column="22">(<param><decl><name pos:line="18" pos:column="23">n1</name></decl></param>, <param><decl><name pos:line="18" pos:column="27">n2</name></decl></param>)</parameter_list> <op:operator pos:line="18" pos:column="31">=&gt;</op:operator> <name pos:line="18" pos:column="34">n1</name> <op:operator pos:line="18" pos:column="37">+</op:operator> <name pos:line="18" pos:column="39">n2</name></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="19" pos:column="17">DataCollectionLogEventHandlers</name><op:operator pos:line="19" pos:column="47">.</op:operator><name pos:line="19" pos:column="48">WriteInfoLogMessage</name></name><argument_list pos:line="19" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="19" pos:column="68">"Post-search recommendation"</lit:literal></expr></argument>,
                    <argument><expr><call><name><name pos:line="20" pos:column="21">sb</name><op:operator pos:line="20" pos:column="23">.</op:operator><name pos:line="20" pos:column="24">ToString</name></name><argument_list pos:line="20" pos:column="32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="24" pos:column="9">public</specifier> <specifier pos:line="24" pos:column="16">static</specifier> <name pos:line="24" pos:column="23">void</name></type> <name pos:line="24" pos:column="28">AddSearchTermsToOriginal</name><parameter_list pos:line="24" pos:column="52">(<param><decl><type><name pos:line="24" pos:column="53">IReformedQuery</name></type> <name pos:line="24" pos:column="68">query</name></decl></param>)</parameter_list>
        <block pos:line="25" pos:column="9">{
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><op:operator pos:line="26" pos:column="17">!</op:operator><call><name><name pos:line="26" pos:column="18">query</name><op:operator pos:line="26" pos:column="23">.</op:operator><name pos:line="26" pos:column="24">OriginalQueryString</name><op:operator pos:line="26" pos:column="43">.</op:operator><name pos:line="26" pos:column="44">Equals</name></name><argument_list pos:line="26" pos:column="50">(<argument><expr><name><name pos:line="26" pos:column="51">query</name><op:operator pos:line="26" pos:column="56">.</op:operator><name pos:line="26" pos:column="57">QueryString</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="26" pos:column="70">
            <block pos:line="27" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="28" pos:column="17">var</name></type> <name pos:line="28" pos:column="21">sb</name> <init pos:line="28" pos:column="24">= <expr><op:operator pos:line="28" pos:column="26">new</op:operator> <call><name pos:line="28" pos:column="30">StringBuilder</name><argument_list pos:line="28" pos:column="43">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="29" pos:column="17">sb</name><op:operator pos:line="29" pos:column="19">.</op:operator><name pos:line="29" pos:column="20">Append</name></name><argument_list pos:line="29" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="29" pos:column="27">"Add search terms automatically."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="30" pos:column="17">sb</name><op:operator pos:line="30" pos:column="19">.</op:operator><name pos:line="30" pos:column="20">Append</name></name><argument_list pos:line="30" pos:column="26">(<argument><expr><call><name pos:line="30" pos:column="27">CreateReformedQueryMessage</name><argument_list pos:line="30" pos:column="53">(<argument><expr><name pos:line="30" pos:column="54">query</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="31" pos:column="17">DataCollectionLogEventHandlers</name><op:operator pos:line="31" pos:column="47">.</op:operator><name pos:line="31" pos:column="48">WriteInfoLogMessage</name></name><argument_list pos:line="31" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="31" pos:column="68">"Post-search recommendation"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="31" pos:column="98">sb</name><op:operator pos:line="31" pos:column="100">.</op:operator><name pos:line="31" pos:column="101">ToString</name></name><argument_list pos:line="31" pos:column="109">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>


        <function><type><specifier pos:line="36" pos:column="9">private</specifier> <specifier pos:line="36" pos:column="17">static</specifier> <name pos:line="36" pos:column="24">string</name></type> <name pos:line="36" pos:column="31">CreateReformedQueryMessage</name><parameter_list pos:line="36" pos:column="57">(<param><decl><type><name pos:line="36" pos:column="58">IReformedQuery</name></type> <name pos:line="36" pos:column="73">query</name></decl></param>)</parameter_list>
        <block pos:line="37" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="38" pos:column="13">var</name></type> <name pos:line="38" pos:column="17">sb</name> <init pos:line="38" pos:column="20">= <expr><op:operator pos:line="38" pos:column="22">new</op:operator> <call><name pos:line="38" pos:column="26">StringBuilder</name><argument_list pos:line="38" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="39" pos:column="13">sb</name><op:operator pos:line="39" pos:column="15">.</op:operator><name pos:line="39" pos:column="16">Append</name></name><argument_list pos:line="39" pos:column="22">(<argument><expr><name><name pos:line="39" pos:column="23">query</name><op:operator pos:line="39" pos:column="28">.</op:operator><name pos:line="39" pos:column="29">ReformExplanation</name></name> <op:operator pos:line="39" pos:column="47">+</op:operator> <lit:literal type="string" pos:line="39" pos:column="49">" "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="40" pos:column="13">return <expr><call><name><name pos:line="40" pos:column="20">sb</name><op:operator pos:line="40" pos:column="22">.</op:operator><name pos:line="40" pos:column="23">ToString</name></name><argument_list pos:line="40" pos:column="31">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="43" pos:column="9">public</specifier> <specifier pos:line="43" pos:column="16">static</specifier> <name pos:line="43" pos:column="23">void</name></type> <name pos:line="43" pos:column="28">SelectRecommendedQuery</name><parameter_list pos:line="43" pos:column="50">(<param><decl><type><name pos:line="43" pos:column="51">String</name></type> <name pos:line="43" pos:column="58">query</name></decl></param>, <param><decl><type><name pos:line="43" pos:column="65">int</name></type> <name pos:line="43" pos:column="69">index</name></decl></param>)</parameter_list>
        <block pos:line="44" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="45" pos:column="13">DataCollectionLogEventHandlers</name><op:operator pos:line="45" pos:column="43">.</op:operator><name pos:line="45" pos:column="44">WriteInfoLogMessage</name></name><argument_list pos:line="45" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="45" pos:column="64">"Post-search recommendation"</lit:literal></expr></argument>, 
                <argument><expr><lit:literal type="string" pos:line="46" pos:column="17">"Clicked link: "</lit:literal> <op:operator pos:line="46" pos:column="34">+</op:operator> <name pos:line="46" pos:column="36">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="49" pos:column="9">public</specifier> <specifier pos:line="49" pos:column="16">static</specifier> <name pos:line="49" pos:column="23">void</name></type> <name pos:line="49" pos:column="28">TagCloudShowing</name><parameter_list pos:line="49" pos:column="43">(<param><decl><type><name pos:line="49" pos:column="44">string</name></type> <name pos:line="49" pos:column="51">query</name></decl></param>)</parameter_list>
        <block pos:line="50" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="51" pos:column="13">var</name></type> <name pos:line="51" pos:column="17">sb</name> <init pos:line="51" pos:column="20">= <expr><op:operator pos:line="51" pos:column="22">new</op:operator> <call><name pos:line="51" pos:column="26">StringBuilder</name><argument_list pos:line="51" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">sb</name><op:operator pos:line="52" pos:column="15">.</op:operator><name pos:line="52" pos:column="16">Append</name></name><argument_list pos:line="52" pos:column="22">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="23">"Render a tag cloud."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="53" pos:column="13">DataCollectionLogEventHandlers</name><op:operator pos:line="53" pos:column="43">.</op:operator><name pos:line="53" pos:column="44">WriteInfoLogMessage</name></name><argument_list pos:line="53" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="53" pos:column="64">"TagCloud"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="53" pos:column="76">sb</name><op:operator pos:line="53" pos:column="78">.</op:operator><name pos:line="53" pos:column="79">ToString</name></name><argument_list pos:line="53" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="56" pos:column="9">public</specifier> <specifier pos:line="56" pos:column="16">static</specifier> <name pos:line="56" pos:column="23">void</name></type> <name pos:line="56" pos:column="28">AddWordFromTagCloud</name><parameter_list pos:line="56" pos:column="47">(<param><decl><type><name pos:line="56" pos:column="48">string</name></type> <name pos:line="56" pos:column="55">query</name></decl></param>, <param><decl><type><name pos:line="56" pos:column="62">string</name></type> <name pos:line="56" pos:column="69">header</name></decl></param>, <param><decl><type><name pos:line="56" pos:column="77">string</name></type> <name pos:line="56" pos:column="84">word</name></decl></param>)</parameter_list>
        <block pos:line="57" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="58" pos:column="13">var</name></type> <name pos:line="58" pos:column="17">sb</name> <init pos:line="58" pos:column="20">= <expr><op:operator pos:line="58" pos:column="22">new</op:operator> <call><name pos:line="58" pos:column="26">StringBuilder</name><argument_list pos:line="58" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="59" pos:column="13">sb</name><op:operator pos:line="59" pos:column="15">.</op:operator><name pos:line="59" pos:column="16">AppendLine</name></name><argument_list pos:line="59" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="59" pos:column="27">"Select a tag."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="60" pos:column="13">DataCollectionLogEventHandlers</name><op:operator pos:line="60" pos:column="43">.</op:operator><name pos:line="60" pos:column="44">WriteInfoLogMessage</name></name><argument_list pos:line="60" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="64">"TagCloud"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="60" pos:column="76">sb</name><op:operator pos:line="60" pos:column="78">.</op:operator><name pos:line="60" pos:column="79">ToString</name></name><argument_list pos:line="60" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="63" pos:column="9">public</specifier> <specifier pos:line="63" pos:column="16">static</specifier> <name pos:line="63" pos:column="23">void</name></type> <name pos:line="63" pos:column="28">SelectHistoryItem</name><parameter_list pos:line="63" pos:column="45">()</parameter_list>
        <block pos:line="64" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="65" pos:column="13">DataCollectionLogEventHandlers</name><op:operator pos:line="65" pos:column="43">.</op:operator><name pos:line="65" pos:column="44">WriteInfoLogMessage</name></name><argument_list pos:line="65" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="65" pos:column="64">"Pre-search recommendation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="65" pos:column="93">"History"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="68" pos:column="9">public</specifier> <specifier pos:line="68" pos:column="16">static</specifier> <name pos:line="68" pos:column="23">void</name></type> <name pos:line="68" pos:column="28">SelectSwumRecommendation</name><parameter_list pos:line="68" pos:column="52">(<param><decl><type><name pos:line="68" pos:column="53">string</name></type> <name pos:line="68" pos:column="60">query</name></decl></param>)</parameter_list>
        <block pos:line="69" pos:column="9">{
            <if pos:line="70" pos:column="13">if <condition pos:line="70" pos:column="16">(<expr><call><name><name pos:line="70" pos:column="17">query</name><op:operator pos:line="70" pos:column="22">.</op:operator><name pos:line="70" pos:column="23">Trim</name></name><argument_list pos:line="70" pos:column="27">()</argument_list></call><op:operator pos:line="70" pos:column="29">.</op:operator><call><name pos:line="70" pos:column="30">Split</name><argument_list pos:line="70" pos:column="35">()</argument_list></call><op:operator pos:line="70" pos:column="37">.</op:operator><call><name pos:line="70" pos:column="38">Count</name><argument_list pos:line="70" pos:column="43">()</argument_list></call> <op:operator pos:line="70" pos:column="46">==</op:operator> <lit:literal type="number" pos:line="70" pos:column="49">1</lit:literal></expr>)</condition><then pos:line="70" pos:column="51">
            <block pos:line="71" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="72" pos:column="17">DataCollectionLogEventHandlers</name><op:operator pos:line="72" pos:column="47">.</op:operator><name pos:line="72" pos:column="48">WriteInfoLogMessage</name></name><argument_list pos:line="72" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="72" pos:column="68">"Pre-search recommendation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="72" pos:column="97">"Identifier"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="74" pos:column="13">else
            <block pos:line="75" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="76" pos:column="17">DataCollectionLogEventHandlers</name><op:operator pos:line="76" pos:column="47">.</op:operator><name pos:line="76" pos:column="48">WriteInfoLogMessage</name></name><argument_list pos:line="76" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="76" pos:column="68">"Pre-search recommendation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="76" pos:column="97">"Verb-DO pair"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
