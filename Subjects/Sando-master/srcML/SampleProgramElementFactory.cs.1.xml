<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\UnitTestHelpers\SampleProgramElementFactory.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Sando</name><op:operator pos:line="2" pos:column="12">.</op:operator><name pos:line="2" pos:column="13">ExtensionContracts</name><op:operator pos:line="2" pos:column="31">.</op:operator><name pos:line="2" pos:column="32">ProgramElementContracts</name></name>;</using>

<namespace pos:line="4" pos:column="1">namespace <name><name pos:line="4" pos:column="11">Sando</name><op:operator pos:line="4" pos:column="16">.</op:operator><name pos:line="4" pos:column="17">UnitTestHelpers</name></name>
<block pos:line="5" pos:column="1">{
	<class><specifier pos:line="6" pos:column="9">public</specifier> <specifier pos:line="6" pos:column="16">static</specifier> class <name pos:line="6" pos:column="29">SampleProgramElementFactory</name>
	<block pos:line="7" pos:column="9">{
		<function><type><specifier pos:line="8" pos:column="17">public</specifier> <specifier pos:line="8" pos:column="24">static</specifier> <name pos:line="8" pos:column="31">ClassElement</name></type> <name pos:line="8" pos:column="44">GetSampleClassElement</name><parameter_list pos:line="8" pos:column="65">(
			<param><decl><type><name pos:line="9" pos:column="25">AccessLevel</name></type> <name pos:line="9" pos:column="37">accessLevel</name> <init pos:line="9" pos:column="49">= <expr><name><name pos:line="9" pos:column="51">AccessLevel</name><op:operator pos:line="9" pos:column="62">.</op:operator><name pos:line="9" pos:column="63">Public</name></name></expr></init></decl></param>,
			<name pos:line="10" pos:column="25">int</name> <name pos:line="10" pos:column="29">definitionLineNumber</name> <op:operator pos:line="10" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="10" pos:column="52">11</lit:literal>,
			<name pos:line="11" pos:column="25">string</name> <name pos:line="11" pos:column="32">extendedClasses</name> <op:operator pos:line="11" pos:column="48">=</op:operator> <lit:literal type="string" pos:line="11" pos:column="50">"SimpleClassBase"</lit:literal>,
			<name pos:line="12" pos:column="25">string</name> <name pos:line="12" pos:column="32">fullFilePath</name> <op:operator pos:line="12" pos:column="45">=</op:operator> <lit:literal type="string" pos:line="12" pos:column="47">"C:/Projects/SampleClass.cs"</lit:literal>,
			<name pos:line="13" pos:column="25">string</name> <name pos:line="13" pos:column="32">implementedInterfaces</name> <op:operator pos:line="13" pos:column="54">=</op:operator> <lit:literal type="string" pos:line="13" pos:column="56">"IDisposable"</lit:literal>,
			<name pos:line="14" pos:column="25">string</name> <name pos:line="14" pos:column="32">name</name> <op:operator pos:line="14" pos:column="37">=</op:operator> <lit:literal type="string" pos:line="14" pos:column="39">"SimpleClassName"</lit:literal>,
			<name pos:line="15" pos:column="25">string</name> <name pos:line="15" pos:column="32">namespaceName</name> <op:operator pos:line="15" pos:column="46">=</op:operator> <lit:literal type="string" pos:line="15" pos:column="48">"Sando.Indexer.UnitTests"</lit:literal>,
			<name pos:line="16" pos:column="25">string</name> <name pos:line="16" pos:column="32">snippet</name> <op:operator pos:line="16" pos:column="40">=</op:operator> <lit:literal type="string" pos:line="16" pos:column="42">"public class SimpleClass\n{private int field1;\nprotected void method(){}\n}"</lit:literal>,
			<name pos:line="17" pos:column="25">string</name> <name pos:line="17" pos:column="32">modifiers</name> <op:operator pos:line="17" pos:column="42">=</op:operator> <lit:literal type="string" pos:line="17" pos:column="44">""</lit:literal>
		)</parameter_list>
		<block pos:line="19" pos:column="17">{
			<return pos:line="20" pos:column="25">return <expr><op:operator pos:line="20" pos:column="32">new</op:operator> <call><name pos:line="20" pos:column="36">ClassElement</name><argument_list pos:line="20" pos:column="48">(<argument><expr><name pos:line="20" pos:column="49">name</name></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">definitionLineNumber</name></expr></argument>, <argument><expr><op:operator pos:line="20" pos:column="77">-</op:operator><lit:literal type="number" pos:line="20" pos:column="78">1000</lit:literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="84">fullFilePath</name></expr></argument>, <argument><expr><name pos:line="20" pos:column="98">snippet</name></expr></argument>, <argument><expr><name pos:line="20" pos:column="107">accessLevel</name></expr></argument>, <argument><expr><name pos:line="20" pos:column="120">namespaceName</name></expr></argument>, <argument><expr><name pos:line="20" pos:column="135">extendedClasses</name></expr></argument>, <argument><expr><name pos:line="20" pos:column="152">implementedInterfaces</name></expr></argument>, <argument><expr><name pos:line="20" pos:column="175">modifiers</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="20" pos:column="186">"junk body"</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="23" pos:column="17">public</specifier> <specifier pos:line="23" pos:column="24">static</specifier> <name pos:line="23" pos:column="31">CommentElement</name></type> <name pos:line="23" pos:column="46">GetSampleCommentElement</name><parameter_list pos:line="23" pos:column="69">(
			<param><decl><type><name pos:line="24" pos:column="25">string</name></type> <name pos:line="24" pos:column="32">body</name> <init pos:line="24" pos:column="37">= <expr><lit:literal type="string" pos:line="24" pos:column="39">"Comment body"</lit:literal></expr></init></decl></param>,
			<name pos:line="25" pos:column="25">int</name> <name pos:line="25" pos:column="29">definitionLineNumber</name> <op:operator pos:line="25" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="25" pos:column="52">11</lit:literal>,
			<name pos:line="26" pos:column="25">string</name> <name pos:line="26" pos:column="32">fullFilePath</name> <op:operator pos:line="26" pos:column="45">=</op:operator> <lit:literal type="string" pos:line="26" pos:column="47">"C:/Projects/SimpleClass.cs"</lit:literal>,
			<name pos:line="27" pos:column="25">string</name> <name pos:line="27" pos:column="32">name</name> <op:operator pos:line="27" pos:column="37">=</op:operator> <lit:literal type="string" pos:line="27" pos:column="39">"SimpleComment"</lit:literal>,
			<name pos:line="28" pos:column="25">string</name> <name pos:line="28" pos:column="32">snippet</name> <op:operator pos:line="28" pos:column="40">=</op:operator> <lit:literal type="string" pos:line="28" pos:column="42">"//Comment body"</lit:literal>
		)</parameter_list>
		<block pos:line="30" pos:column="17">{
			<return pos:line="31" pos:column="25">return <expr><op:operator pos:line="31" pos:column="32">new</op:operator> <call><name pos:line="31" pos:column="36">CommentElement</name><argument_list pos:line="31" pos:column="50">(<argument><expr><name pos:line="31" pos:column="51">name</name></expr></argument>, <argument><expr><name pos:line="31" pos:column="57">definitionLineNumber</name></expr></argument>, <argument><expr><op:operator pos:line="31" pos:column="79">-</op:operator><lit:literal type="number" pos:line="31" pos:column="80">1000</lit:literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="86">fullFilePath</name></expr></argument>, <argument><expr><name pos:line="31" pos:column="100">snippet</name></expr></argument>, <argument><expr><name pos:line="31" pos:column="109">body</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="34" pos:column="17">public</specifier> <specifier pos:line="34" pos:column="24">static</specifier> <name pos:line="34" pos:column="31">EnumElement</name></type> <name pos:line="34" pos:column="43">GetSampleEnumElement</name><parameter_list pos:line="34" pos:column="63">(
			<param><decl><type><name pos:line="35" pos:column="25">AccessLevel</name></type> <name pos:line="35" pos:column="37">accessLevel</name> <init pos:line="35" pos:column="49">= <expr><name><name pos:line="35" pos:column="51">AccessLevel</name><op:operator pos:line="35" pos:column="62">.</op:operator><name pos:line="35" pos:column="63">Public</name></name></expr></init></decl></param>,
			<name pos:line="36" pos:column="25">int</name> <name pos:line="36" pos:column="29">definitionLineNumber</name> <op:operator pos:line="36" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="36" pos:column="52">11</lit:literal>,
			<name pos:line="37" pos:column="25">string</name> <name pos:line="37" pos:column="32">fullFilePath</name> <op:operator pos:line="37" pos:column="45">=</op:operator> <lit:literal type="string" pos:line="37" pos:column="47">"C:/Projects/UsageType.cs"</lit:literal>,
			<name pos:line="38" pos:column="25">string</name> <name pos:line="38" pos:column="32">name</name> <op:operator pos:line="38" pos:column="37">=</op:operator> <lit:literal type="string" pos:line="38" pos:column="39">"UsageType"</lit:literal>,
			<name pos:line="39" pos:column="25">string</name> <name pos:line="39" pos:column="32">namespaceName</name> <op:operator pos:line="39" pos:column="46">=</op:operator> <lit:literal type="string" pos:line="39" pos:column="48">"Sando.Indexer.UnitTests"</lit:literal>,
			<name pos:line="40" pos:column="25">string</name> <name pos:line="40" pos:column="32">snippet</name> <op:operator pos:line="40" pos:column="40">=</op:operator> <lit:literal type="string" pos:line="40" pos:column="42">"public enum UsageType\n{Definition,\nCall,\nComment\n}"</lit:literal>,
			<name pos:line="41" pos:column="25">string</name> <name pos:line="41" pos:column="32">body</name> <op:operator pos:line="41" pos:column="37">=</op:operator> <lit:literal type="string" pos:line="41" pos:column="39">"Definition, Call, Comment"</lit:literal>
		)</parameter_list>
		<block pos:line="43" pos:column="17">{
            <return pos:line="44" pos:column="13">return <expr><op:operator pos:line="44" pos:column="20">new</op:operator> <call><name pos:line="44" pos:column="24">EnumElement</name><argument_list pos:line="44" pos:column="35">(<argument><expr><name pos:line="44" pos:column="36">name</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="42">definitionLineNumber</name></expr></argument>, <argument><expr><op:operator pos:line="44" pos:column="64">-</op:operator><lit:literal type="number" pos:line="44" pos:column="65">1000</lit:literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="71">fullFilePath</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="85">snippet</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="94">accessLevel</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="107">namespaceName</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="122">body</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="47" pos:column="17">public</specifier> <specifier pos:line="47" pos:column="24">static</specifier> <name pos:line="47" pos:column="31">FieldElement</name></type> <name pos:line="47" pos:column="44">GetSampleFieldElement</name><parameter_list pos:line="47" pos:column="65">(
			<param><decl><type><name pos:line="48" pos:column="25">AccessLevel</name></type> <name pos:line="48" pos:column="37">accessLevel</name> <init pos:line="48" pos:column="49">= <expr><name><name pos:line="48" pos:column="51">AccessLevel</name><op:operator pos:line="48" pos:column="62">.</op:operator><name pos:line="48" pos:column="63">Private</name></name></expr></init></decl></param>,
			<name pos:line="49" pos:column="25">string</name> <name pos:line="49" pos:column="32">classId</name> <op:operator pos:line="49" pos:column="40">=</op:operator> <lit:literal type="string" pos:line="49" pos:column="42">"0f8fad5b-d9cb-469f-a165-70867728950e"</lit:literal>,
			<name pos:line="50" pos:column="25">string</name> <name pos:line="50" pos:column="32">className</name> <op:operator pos:line="50" pos:column="42">=</op:operator> <lit:literal type="string" pos:line="50" pos:column="44">"SampleCLass"</lit:literal>,
			<name pos:line="51" pos:column="25">int</name> <name pos:line="51" pos:column="29">definitionLineNumber</name> <op:operator pos:line="51" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="51" pos:column="52">11</lit:literal>,
			<name pos:line="52" pos:column="25">string</name> <name pos:line="52" pos:column="32">fieldType</name> <op:operator pos:line="52" pos:column="42">=</op:operator> <lit:literal type="string" pos:line="52" pos:column="44">"int"</lit:literal>,
			<name pos:line="53" pos:column="25">string</name> <name pos:line="53" pos:column="32">fullFilePath</name> <op:operator pos:line="53" pos:column="45">=</op:operator> <lit:literal type="string" pos:line="53" pos:column="47">"C:/Projects/SampleClass.cs"</lit:literal>,
			<name pos:line="54" pos:column="25">string</name> <name pos:line="54" pos:column="32">name</name> <op:operator pos:line="54" pos:column="37">=</op:operator> <lit:literal type="string" pos:line="54" pos:column="39">"maxCollectionLength"</lit:literal>,
			<name pos:line="55" pos:column="25">string</name> <name pos:line="55" pos:column="32">snippet</name> <op:operator pos:line="55" pos:column="40">=</op:operator> <lit:literal type="string" pos:line="55" pos:column="42">"private int maxCollectionLength;"</lit:literal>,
			<name pos:line="56" pos:column="25">string</name> <name pos:line="56" pos:column="32">modifiers</name> <op:operator pos:line="56" pos:column="42">=</op:operator> <lit:literal type="string" pos:line="56" pos:column="44">""</lit:literal>,
			<name pos:line="57" pos:column="25">string</name> <name pos:line="57" pos:column="32">initialValue</name> <op:operator pos:line="57" pos:column="45">=</op:operator> <lit:literal type="string" pos:line="57" pos:column="47">""</lit:literal>
		)</parameter_list>
		<block pos:line="59" pos:column="17">{
            <return pos:line="60" pos:column="13">return <expr><op:operator pos:line="60" pos:column="20">new</op:operator> <call><name pos:line="60" pos:column="24">FieldElement</name><argument_list pos:line="60" pos:column="36">(<argument><expr><name pos:line="60" pos:column="37">name</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="43">definitionLineNumber</name></expr></argument>, <argument><expr><op:operator pos:line="60" pos:column="65">-</op:operator><lit:literal type="number" pos:line="60" pos:column="66">1000</lit:literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="72">fullFilePath</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="86">snippet</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="95">accessLevel</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="108">fieldType</name></expr></argument>, <argument><expr><op:operator pos:line="60" pos:column="119">new</op:operator> <call><name pos:line="60" pos:column="123">Guid</name><argument_list pos:line="60" pos:column="127">(<argument><expr><name pos:line="60" pos:column="128">classId</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="60" pos:column="138">className</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="149">modifiers</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="160">initialValue</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="63" pos:column="17">public</specifier> <specifier pos:line="63" pos:column="24">static</specifier> <name pos:line="63" pos:column="31">MethodElement</name></type> <name pos:line="63" pos:column="45">GetSampleMethodElement</name><parameter_list pos:line="63" pos:column="67">(
			<param><decl><type><name pos:line="64" pos:column="25">AccessLevel</name></type> <name pos:line="64" pos:column="37">accessLevel</name> <init pos:line="64" pos:column="49">= <expr><name><name pos:line="64" pos:column="51">AccessLevel</name><op:operator pos:line="64" pos:column="62">.</op:operator><name pos:line="64" pos:column="63">Public</name></name></expr></init></decl></param>,
			<name pos:line="65" pos:column="25">string</name> <name pos:line="65" pos:column="32">arguments</name> <op:operator pos:line="65" pos:column="42">=</op:operator> <lit:literal type="string" pos:line="65" pos:column="44">"int number, int factor"</lit:literal>,
			<name pos:line="66" pos:column="25">string</name> <name pos:line="66" pos:column="32">body</name> <op:operator pos:line="66" pos:column="37">=</op:operator> <lit:literal type="string" pos:line="66" pos:column="39">"return number * factor;"</lit:literal>,
			<name pos:line="67" pos:column="25">string</name> <name pos:line="67" pos:column="32">classId</name> <op:operator pos:line="67" pos:column="40">=</op:operator> <lit:literal type="string" pos:line="67" pos:column="42">"0f8fad5b-d9cb-469f-a165-70867728950e"</lit:literal>,
			<name pos:line="68" pos:column="25">string</name> <name pos:line="68" pos:column="32">className</name> <op:operator pos:line="68" pos:column="42">=</op:operator> <lit:literal type="string" pos:line="68" pos:column="44">"SampleCLass"</lit:literal>,
			<name pos:line="69" pos:column="25">int</name> <name pos:line="69" pos:column="29">definitionLineNumber</name> <op:operator pos:line="69" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="69" pos:column="52">12</lit:literal>,
			<name pos:line="70" pos:column="25">string</name> <name pos:line="70" pos:column="32">fullFilePath</name> <op:operator pos:line="70" pos:column="45">=</op:operator> <lit:literal type="string" pos:line="70" pos:column="47">"C:/Projects/SampleClass.cs"</lit:literal>,
			<name pos:line="71" pos:column="25">string</name> <name pos:line="71" pos:column="32">name</name> <op:operator pos:line="71" pos:column="37">=</op:operator> <lit:literal type="string" pos:line="71" pos:column="39">"multiply"</lit:literal>,
			<name pos:line="72" pos:column="25">string</name> <name pos:line="72" pos:column="32">returnType</name> <op:operator pos:line="72" pos:column="43">=</op:operator> <lit:literal type="string" pos:line="72" pos:column="45">"int"</lit:literal>,
			<name pos:line="73" pos:column="25">string</name> <name pos:line="73" pos:column="32">snippet</name> <op:operator pos:line="73" pos:column="40">=</op:operator> <lit:literal type="string" pos:line="73" pos:column="42">"private int multiply(int number, int factor)\n{\nreturn number * factor;\n};"</lit:literal>,
			<name pos:line="74" pos:column="25">string</name> <name pos:line="74" pos:column="32">modifiers</name> <op:operator pos:line="74" pos:column="42">=</op:operator> <lit:literal type="string" pos:line="74" pos:column="44">""</lit:literal>
		)</parameter_list>
		<block pos:line="76" pos:column="17">{
            <return pos:line="77" pos:column="13">return <expr><op:operator pos:line="77" pos:column="20">new</op:operator> <call><name pos:line="77" pos:column="24">MethodElement</name><argument_list pos:line="77" pos:column="37">(<argument><expr><name pos:line="77" pos:column="38">name</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="44">definitionLineNumber</name></expr></argument>, <argument><expr><op:operator pos:line="77" pos:column="66">-</op:operator><lit:literal type="number" pos:line="77" pos:column="67">1000</lit:literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="73">fullFilePath</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="87">snippet</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="96">accessLevel</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="109">arguments</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="120">returnType</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="132">body</name></expr></argument>, <argument><expr><op:operator pos:line="77" pos:column="138">new</op:operator> <call><name pos:line="77" pos:column="142">Guid</name><argument_list pos:line="77" pos:column="146">(<argument><expr><name pos:line="77" pos:column="147">classId</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="77" pos:column="157">className</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="168">modifiers</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="77" pos:column="179">false</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="80" pos:column="17">public</specifier> <specifier pos:line="80" pos:column="24">static</specifier> <name pos:line="80" pos:column="31">PropertyElement</name></type> <name pos:line="80" pos:column="47">GetSamplePropertyElement</name><parameter_list pos:line="80" pos:column="71">(
			<param><decl><type><name pos:line="81" pos:column="25">AccessLevel</name></type> <name pos:line="81" pos:column="37">accessLevel</name> <init pos:line="81" pos:column="49">= <expr><name><name pos:line="81" pos:column="51">AccessLevel</name><op:operator pos:line="81" pos:column="62">.</op:operator><name pos:line="81" pos:column="63">Private</name></name></expr></init></decl></param>,
			<name pos:line="82" pos:column="25">string</name> <name pos:line="82" pos:column="32">body</name> <op:operator pos:line="82" pos:column="37">=</op:operator> <lit:literal type="string" pos:line="82" pos:column="39">""</lit:literal>,
			<name pos:line="83" pos:column="25">string</name> <name pos:line="83" pos:column="32">classId</name> <op:operator pos:line="83" pos:column="40">=</op:operator> <lit:literal type="string" pos:line="83" pos:column="42">"0f8fad5b-d9cb-469f-a165-70867728950e"</lit:literal>,
			<name pos:line="84" pos:column="25">string</name> <name pos:line="84" pos:column="32">className</name> <op:operator pos:line="84" pos:column="42">=</op:operator> <lit:literal type="string" pos:line="84" pos:column="44">"SampleCLass"</lit:literal>,
			<name pos:line="85" pos:column="25">int</name> <name pos:line="85" pos:column="29">definitionLineNumber</name> <op:operator pos:line="85" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="85" pos:column="52">3</lit:literal>,
			<name pos:line="86" pos:column="25">string</name> <name pos:line="86" pos:column="32">propertyType</name> <op:operator pos:line="86" pos:column="45">=</op:operator> <lit:literal type="string" pos:line="86" pos:column="47">"double"</lit:literal>,
			<name pos:line="87" pos:column="25">string</name> <name pos:line="87" pos:column="32">fullFilePath</name> <op:operator pos:line="87" pos:column="45">=</op:operator> <lit:literal type="string" pos:line="87" pos:column="47">"C:/Projects/SampleClass.cs"</lit:literal>,
			<name pos:line="88" pos:column="25">string</name> <name pos:line="88" pos:column="32">name</name> <op:operator pos:line="88" pos:column="37">=</op:operator> <lit:literal type="string" pos:line="88" pos:column="39">"StockValue"</lit:literal>,
			<name pos:line="89" pos:column="25">string</name> <name pos:line="89" pos:column="32">snippet</name> <op:operator pos:line="89" pos:column="40">=</op:operator> <lit:literal type="string" pos:line="89" pos:column="42">"protected double StockValue{get; set;};"</lit:literal>,
			<name pos:line="90" pos:column="25">string</name> <name pos:line="90" pos:column="32">modifiers</name> <op:operator pos:line="90" pos:column="42">=</op:operator> <lit:literal type="string" pos:line="90" pos:column="44">""</lit:literal>
		)</parameter_list>
		<block pos:line="92" pos:column="17">{
            <return pos:line="93" pos:column="13">return <expr><op:operator pos:line="93" pos:column="20">new</op:operator> <call><name pos:line="93" pos:column="24">PropertyElement</name><argument_list pos:line="93" pos:column="39">(<argument><expr><name pos:line="93" pos:column="40">name</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="46">definitionLineNumber</name></expr></argument>, <argument><expr><op:operator pos:line="93" pos:column="68">-</op:operator><lit:literal type="number" pos:line="93" pos:column="69">1000</lit:literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="75">fullFilePath</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="89">snippet</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="98">accessLevel</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="111">propertyType</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="125">body</name></expr></argument>, <argument><expr><op:operator pos:line="93" pos:column="131">new</op:operator> <call><name pos:line="93" pos:column="135">Guid</name><argument_list pos:line="93" pos:column="139">(<argument><expr><name pos:line="93" pos:column="140">classId</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="93" pos:column="150">className</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="161">modifiers</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

        <function><type><specifier pos:line="96" pos:column="9">public</specifier> <specifier pos:line="96" pos:column="16">static</specifier> <name pos:line="96" pos:column="23">ProgramElement</name></type> <name pos:line="96" pos:column="38">GetSampleStructElement</name><parameter_list pos:line="96" pos:column="60">(
            <param><decl><type><name pos:line="97" pos:column="13">AccessLevel</name></type> <name pos:line="97" pos:column="25">accessLevel</name> <init pos:line="97" pos:column="37">= <expr><name><name pos:line="97" pos:column="39">AccessLevel</name><op:operator pos:line="97" pos:column="50">.</op:operator><name pos:line="97" pos:column="51">Public</name></name></expr></init></decl></param>,
            <name pos:line="98" pos:column="13">int</name> <name pos:line="98" pos:column="17">definitionLineNumber</name> <op:operator pos:line="98" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="98" pos:column="40">11</lit:literal>,
            <name pos:line="99" pos:column="13">string</name> <name pos:line="99" pos:column="20">extendedClasses</name> <op:operator pos:line="99" pos:column="36">=</op:operator> <lit:literal type="string" pos:line="99" pos:column="38">"SimpleClassBase"</lit:literal>,
            <name pos:line="100" pos:column="13">string</name> <name pos:line="100" pos:column="20">body</name> <op:operator pos:line="100" pos:column="25">=</op:operator> <lit:literal type="string" pos:line="100" pos:column="27">""</lit:literal>,
            <name pos:line="101" pos:column="13">string</name> <name pos:line="101" pos:column="20">fullFilePath</name> <op:operator pos:line="101" pos:column="33">=</op:operator> <lit:literal type="string" pos:line="101" pos:column="35">"C:/Projects/SampleClass.cs"</lit:literal>,
            <name pos:line="102" pos:column="13">string</name> <name pos:line="102" pos:column="20">implementedInterfaces</name> <op:operator pos:line="102" pos:column="42">=</op:operator> <lit:literal type="string" pos:line="102" pos:column="44">"IDisposable"</lit:literal>,
            <name pos:line="103" pos:column="13">string</name> <name pos:line="103" pos:column="20">name</name> <op:operator pos:line="103" pos:column="25">=</op:operator> <lit:literal type="string" pos:line="103" pos:column="27">"SimpleClassName"</lit:literal>,
            <name pos:line="104" pos:column="13">string</name> <name pos:line="104" pos:column="20">namespaceName</name> <op:operator pos:line="104" pos:column="34">=</op:operator> <lit:literal type="string" pos:line="104" pos:column="36">"Sando.Indexer.UnitTests"</lit:literal>,
            <name pos:line="105" pos:column="13">string</name> <name pos:line="105" pos:column="20">snippet</name> <op:operator pos:line="105" pos:column="28">=</op:operator> <lit:literal type="string" pos:line="105" pos:column="30">"public class SimpleClass\n{private int field1;\nprotected void method(){}\n}"</lit:literal>,
            <name pos:line="106" pos:column="13">string</name> <name pos:line="106" pos:column="20">modifiers</name> <op:operator pos:line="106" pos:column="30">=</op:operator> <lit:literal type="string" pos:line="106" pos:column="32">""</lit:literal>
        )</parameter_list>
        <block pos:line="108" pos:column="9">{
            <return pos:line="109" pos:column="13">return <expr><op:operator pos:line="109" pos:column="20">new</op:operator> <call><name pos:line="109" pos:column="24">StructElement</name><argument_list pos:line="109" pos:column="37">(<argument><expr><name pos:line="109" pos:column="38">name</name></expr></argument>, <argument><expr><name pos:line="109" pos:column="44">definitionLineNumber</name></expr></argument>, <argument><expr><op:operator pos:line="109" pos:column="66">-</op:operator><lit:literal type="number" pos:line="109" pos:column="67">1000</lit:literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="73">fullFilePath</name></expr></argument>, <argument><expr><name pos:line="109" pos:column="87">snippet</name></expr></argument>, <argument><expr><name pos:line="109" pos:column="96">accessLevel</name></expr></argument>, <argument><expr><name pos:line="109" pos:column="109">namespaceName</name></expr></argument>, <argument><expr><name pos:line="109" pos:column="124">body</name></expr></argument>, <argument><expr><name pos:line="109" pos:column="130">extendedClasses</name></expr></argument>, <argument><expr><name pos:line="109" pos:column="147">modifiers</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
	}</block></class>
}</block></namespace>
</unit>
