<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\IntegrationTests\SandoServiceTest.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<comment type="line" pos:line="2" pos:column="1">//using Microsoft.VisualStudio.Shell.Interop;</comment>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Microsoft</name><op:operator pos:line="3" pos:column="16">.</op:operator><name pos:line="3" pos:column="17">VisualStudio</name><op:operator pos:line="3" pos:column="29">.</op:operator><name pos:line="3" pos:column="30">TestTools</name><op:operator pos:line="3" pos:column="39">.</op:operator><name pos:line="3" pos:column="40">UnitTesting</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Sando</name><op:operator pos:line="4" pos:column="12">.</op:operator><name pos:line="4" pos:column="13">UI</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Windows</name><op:operator pos:line="5" pos:column="21">.</op:operator><name pos:line="5" pos:column="22">Forms</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Sando</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">UI</name><op:operator pos:line="6" pos:column="15">.</op:operator><name pos:line="6" pos:column="16">Service</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Microsoft</name><op:operator pos:line="7" pos:column="16">.</op:operator><name pos:line="7" pos:column="17">VisualStudio</name><op:operator pos:line="7" pos:column="29">.</op:operator><name pos:line="7" pos:column="30">Shell</name><op:operator pos:line="7" pos:column="35">.</op:operator><name pos:line="7" pos:column="36">Interop</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Sando</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">ExtensionContracts</name><op:operator pos:line="8" pos:column="31">.</op:operator><name pos:line="8" pos:column="32">ServiceContracts</name></name>;</using>

<namespace pos:line="10" pos:column="1">namespace <name><name pos:line="10" pos:column="11">Sando</name><op:operator pos:line="10" pos:column="16">.</op:operator><name pos:line="10" pos:column="17">IntegrationTests</name></name>
<block pos:line="11" pos:column="1">{
    <class><attribute pos:line="12" pos:column="5">[<expr><name pos:line="12" pos:column="6">TestClass</name></expr>]</attribute>
    <specifier pos:line="13" pos:column="5">public</specifier> class <name pos:line="13" pos:column="18">SandoServiceTest</name>
    <block pos:line="14" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">private</specifier> <specifier pos:line="15" pos:column="17">static</specifier> <name pos:line="15" pos:column="24">IVsPackage</name></type> <name pos:line="15" pos:column="35">package</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">private</specifier> <specifier pos:line="16" pos:column="17">static</specifier> <name pos:line="16" pos:column="24">ISandoGlobalService</name></type> <name pos:line="16" pos:column="44">sandoService</name></decl>;</decl_stmt>

        <function><type><attribute pos:line="18" pos:column="9">[<expr><name pos:line="18" pos:column="10">ClassInitialize</name></expr>]</attribute>
        <specifier pos:line="19" pos:column="9">public</specifier> <specifier pos:line="19" pos:column="16">static</specifier> <name pos:line="19" pos:column="23">void</name></type> <name pos:line="19" pos:column="28">ClassInitialize</name><parameter_list pos:line="19" pos:column="43">(<param><decl><type><name pos:line="19" pos:column="44">TestContext</name></type> <name pos:line="19" pos:column="56">testContext</name></decl></param>)</parameter_list>
        <block pos:line="20" pos:column="9">{
            <comment type="line" pos:line="21" pos:column="13">// Create SandoServicePackage</comment>
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">UIPackage</name></type> <name pos:line="22" pos:column="23">packageObject</name> <init pos:line="22" pos:column="37">= <expr><op:operator pos:line="22" pos:column="39">new</op:operator> <call><name pos:line="22" pos:column="43">UIPackage</name><argument_list pos:line="22" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">var</name></type> <name pos:line="23" pos:column="17">package</name> <init pos:line="23" pos:column="25">= <expr><op:operator pos:line="23" pos:column="27">(</op:operator><name pos:line="23" pos:column="28">IVsPackage</name><op:operator pos:line="23" pos:column="38">)</op:operator><name pos:line="23" pos:column="39">packageObject</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="24" pos:column="13">Assert</name><op:operator pos:line="24" pos:column="19">.</op:operator><name pos:line="24" pos:column="20">IsNotNull</name></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">package</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="24" pos:column="39">"Get a null UIPackage instance."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">MessageBox</name><op:operator pos:line="25" pos:column="23">.</op:operator><name pos:line="25" pos:column="24">Show</name></name><argument_list pos:line="25" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="25" pos:column="29">"hi"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="27" pos:column="13">IServiceProvider</name></type> <name pos:line="27" pos:column="30">serviceProvider</name> <init pos:line="27" pos:column="46">= <expr><name pos:line="27" pos:column="48">package</name> <op:operator pos:line="27" pos:column="56">as</op:operator> <name pos:line="27" pos:column="59">IServiceProvider</name></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="28" pos:column="13">// Get Sando Service</comment>
            <decl_stmt><decl><type><name pos:line="29" pos:column="13">object</name></type> <name pos:line="29" pos:column="20">o</name> <init pos:line="29" pos:column="22">= <expr><call><name><name pos:line="29" pos:column="24">serviceProvider</name><op:operator pos:line="29" pos:column="39">.</op:operator><name pos:line="29" pos:column="40">GetService</name></name><argument_list pos:line="29" pos:column="50">(<argument><expr><call><name pos:line="29" pos:column="51">typeof</name><argument_list pos:line="29" pos:column="57">(<argument><expr><name pos:line="29" pos:column="58">SSandoGlobalService</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">Assert</name><op:operator pos:line="30" pos:column="19">.</op:operator><name pos:line="30" pos:column="20">IsNotNull</name></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">o</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="30" pos:column="33">"GetService returned null for the global service."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">MessageBox</name><op:operator pos:line="31" pos:column="23">.</op:operator><name pos:line="31" pos:column="24">Show</name></name><argument_list pos:line="31" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="31" pos:column="29">"hi2"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="33" pos:column="13">sandoService</name> <op:operator pos:line="33" pos:column="26">=</op:operator> <name pos:line="33" pos:column="28">o</name> <op:operator pos:line="33" pos:column="30">as</op:operator> <name pos:line="33" pos:column="33">ISandoGlobalService</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="34" pos:column="13">Assert</name><op:operator pos:line="34" pos:column="19">.</op:operator><name pos:line="34" pos:column="20">IsNotNull</name></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">sandoService</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="34" pos:column="44">"The service SSandoGlobalService does not implements ISandoGlobalService."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="35" pos:column="13">MessageBox</name><op:operator pos:line="35" pos:column="23">.</op:operator><name pos:line="35" pos:column="24">Show</name></name><argument_list pos:line="35" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="35" pos:column="29">"hi3"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        }</block></function>

        <function><type><attribute pos:line="39" pos:column="9">[<expr><name pos:line="39" pos:column="10">TestMethod</name></expr>]</attribute>
        <attribute pos:line="40" pos:column="9">[<expr><call><name pos:line="40" pos:column="10">HostType</name><argument_list pos:line="40" pos:column="18">(<argument><expr><lit:literal type="string" pos:line="40" pos:column="19">"VS IDE"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="41" pos:column="9">public</specifier> <name pos:line="41" pos:column="16">void</name></type> <name pos:line="41" pos:column="21">TestMethod1</name><parameter_list pos:line="41" pos:column="32">()</parameter_list>
        <block pos:line="42" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="43" pos:column="13">MessageBox</name><op:operator pos:line="43" pos:column="23">.</op:operator><name pos:line="43" pos:column="24">Show</name></name><argument_list pos:line="43" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="43" pos:column="29">"hihi"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           
        }</block></function>

        <function><type><attribute pos:line="47" pos:column="9">[<expr><name pos:line="47" pos:column="10">ClassCleanup</name></expr>]</attribute>
        <specifier pos:line="48" pos:column="9">public</specifier> <specifier pos:line="48" pos:column="16">static</specifier> <name pos:line="48" pos:column="23">void</name></type> <name pos:line="48" pos:column="28">ClassCleanup</name><parameter_list pos:line="48" pos:column="40">()</parameter_list>
        <block pos:line="49" pos:column="9">{
            <expr_stmt><expr><name pos:line="50" pos:column="13">sandoService</name> <op:operator pos:line="50" pos:column="26">=</op:operator> <name pos:line="50" pos:column="28">null</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="51" pos:column="13">package</name><op:operator pos:line="51" pos:column="20">.</op:operator><name pos:line="51" pos:column="21">SetSite</name></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">package</name><op:operator pos:line="52" pos:column="20">.</op:operator><name pos:line="52" pos:column="21">Close</name></name><argument_list pos:line="52" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="53" pos:column="13">package</name> <op:operator pos:line="53" pos:column="21">=</op:operator> <name pos:line="53" pos:column="23">null</name></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
