<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\UI\UI\Service\SandoLocalService.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2013 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Xiao Qu (ABB Group) - Initial implementation
 *****************************************************************************/</comment>
<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">System</name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">System</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Microsoft</name><op:operator pos:line="13" pos:column="16">.</op:operator><name pos:line="13" pos:column="17">VisualStudio</name><op:operator pos:line="13" pos:column="29">.</op:operator><name pos:line="13" pos:column="30">Shell</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">Microsoft</name><op:operator pos:line="14" pos:column="16">.</op:operator><name pos:line="14" pos:column="17">VisualStudio</name><op:operator pos:line="14" pos:column="29">.</op:operator><name pos:line="14" pos:column="30">Shell</name><op:operator pos:line="14" pos:column="35">.</op:operator><name pos:line="14" pos:column="36">Interop</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">Sando</name><op:operator pos:line="15" pos:column="12">.</op:operator><name pos:line="15" pos:column="13">ExtensionContracts</name><op:operator pos:line="15" pos:column="31">.</op:operator><name pos:line="15" pos:column="32">ServiceContracts</name></name>;</using>

<namespace pos:line="17" pos:column="1">namespace <name><name pos:line="17" pos:column="11">Sando</name><op:operator pos:line="17" pos:column="16">.</op:operator><name pos:line="17" pos:column="17">UI</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">Service</name></name> <block pos:line="17" pos:column="28">{
    <comment type="line" pos:line="18" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="19" pos:column="5">/// Implement the local service class. (never used)</comment>
    <comment type="line" pos:line="20" pos:column="5">/// This is the class that implements the local service. It implements ISandoLocalService</comment>
    <comment type="line" pos:line="21" pos:column="5">/// because this is the interface that we want to use, but it also implements the empty</comment>
    <comment type="line" pos:line="22" pos:column="5">/// interface SSandoLocalService in order to notify the service creator that it actually</comment>
    <comment type="line" pos:line="23" pos:column="5">/// implements this service.</comment>
    <comment type="line" pos:line="24" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="25" pos:column="5">public</specifier> class <name pos:line="25" pos:column="18">SandoLocalService</name> <super pos:line="25" pos:column="36">: <name pos:line="25" pos:column="38">ISandoLocalService</name>, <name pos:line="25" pos:column="58">SSandoLocalService</name></super> <block pos:line="25" pos:column="77">{
        <comment type="line" pos:line="26" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="27" pos:column="9">/// Store a reference to the service provider that will be used to access the shell's services</comment>
        <comment type="line" pos:line="28" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="29" pos:column="9">private</specifier> <name pos:line="29" pos:column="17">IServiceProvider</name></type> <name pos:line="29" pos:column="34">provider</name></decl>;</decl_stmt>

        <comment type="line" pos:line="31" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="32" pos:column="9">/// Public constructor of this service. This will use a reference to a service provider to</comment>
        <comment type="line" pos:line="33" pos:column="9">/// access the services provided by the shell.</comment>
        <comment type="line" pos:line="34" pos:column="9">/// &lt;/summary&gt;</comment>
        <constructor><specifier pos:line="35" pos:column="9">public</specifier> <name pos:line="35" pos:column="16">SandoLocalService</name><parameter_list pos:line="35" pos:column="33">(<param><decl><type><name pos:line="35" pos:column="34">IServiceProvider</name></type> <name pos:line="35" pos:column="51">sp</name></decl></param>)</parameter_list> <block pos:line="35" pos:column="55">{
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">Trace</name><op:operator pos:line="36" pos:column="18">.</op:operator><name pos:line="36" pos:column="19">WriteLine</name></name><argument_list pos:line="36" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="36" pos:column="29">"Constructing a new instance of SrcMLLocalService"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="37" pos:column="13">provider</name> <op:operator pos:line="37" pos:column="22">=</op:operator> <name pos:line="37" pos:column="24">sp</name></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="40" pos:column="9">//// Implement the methods of ISandoLocalService here.</comment>
        <cpp:region pos:line="41" pos:column="9">#<cpp:directive pos:line="41" pos:column="10">region</cpp:directive> ISrcMLLocalService Members</cpp:region>
        <function><type><attribute pos:line="42" pos:column="9">[<expr><call><name><name pos:line="42" pos:column="10">System</name><op:operator pos:line="42" pos:column="16">.</op:operator><name pos:line="42" pos:column="17">Diagnostics</name><op:operator pos:line="42" pos:column="28">.</op:operator><name pos:line="42" pos:column="29">CodeAnalysis</name><op:operator pos:line="42" pos:column="41">.</op:operator><name pos:line="42" pos:column="42">SuppressMessage</name></name><argument_list pos:line="42" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="42" pos:column="58">"Microsoft.Globalization"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="42" pos:column="85">"CA1303:DoNotPassLiteralsAsLocalizedParameters"</lit:literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="134">MessageId</name> <op:operator pos:line="42" pos:column="144">=</op:operator> <lit:literal type="string" pos:line="42" pos:column="146">"Microsoft.Samples.VisualStudio.Services.HelperFunctions.WriteOnOutputWindow(System.IServiceProvider,System.String)"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="43" pos:column="9">public</specifier> <name pos:line="43" pos:column="16">int</name></type> <name pos:line="43" pos:column="20">LocalServiceFunction</name><parameter_list pos:line="43" pos:column="40">()</parameter_list> <block pos:line="43" pos:column="43">{
            <decl_stmt><decl><type><name pos:line="44" pos:column="13">string</name></type> <name pos:line="44" pos:column="20">outputText</name> <init pos:line="44" pos:column="31">= <expr><lit:literal type="string" pos:line="44" pos:column="33">"Local Sando Service Function called.\n"</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="45" pos:column="13">HelperFunctions</name><op:operator pos:line="45" pos:column="28">.</op:operator><name pos:line="45" pos:column="29">WriteOnOutputWindow</name></name><argument_list pos:line="45" pos:column="48">(<argument><expr><name pos:line="45" pos:column="49">provider</name></expr></argument>, <argument><expr><name pos:line="45" pos:column="59">outputText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="46" pos:column="13">return <expr><lit:literal type="number" pos:line="46" pos:column="20">0</lit:literal></expr>;</return>
        }</block></function>
        <cpp:endregion pos:line="48" pos:column="9">#<cpp:directive pos:line="48" pos:column="10">endregion</cpp:directive></cpp:endregion>
    }</block></class>
}</block></namespace>
</unit>
