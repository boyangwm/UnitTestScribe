<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\ee.h" pos:tabs="8" pos:line="1" pos:column="1">

<comment type="block" pos:line="3" pos:column="1">/* this ALWAYS GENERATED file contains the definitions for the interfaces */</comment>


 <comment type="block" pos:line="6" pos:column="2">/* File created by MIDL compiler version 7.00.0499 */</comment>
<comment type="block" pos:line="7" pos:column="1">/* Compiler settings for ee.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/</comment>
<comment type="line" pos:line="15" pos:column="1">//@@MIDL_FILE_HEADING(  )</comment>

<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma</cpp:directive> warning( disable: 4049 )</cpp:pragma>  <comment type="block" pos:line="17" pos:column="35">/* more than 64k source lines */</comment>


<comment type="block" pos:line="20" pos:column="1">/* verify that the &lt;rpcndr.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef</cpp:directive> <name pos:line="21" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:macro> <cpp:value pos:line="22" pos:column="39">475</cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="25" pos:column="1">/* verify that the &lt;rpcsal.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifndef</cpp:directive> <name pos:line="26" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="27" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:macro> <cpp:value pos:line="27" pos:column="39">100</cpp:value></cpp:define>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"rpc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"rpcndr.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">__RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:error pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">error</cpp:directive> this stub requires an updated version of &lt;rpcndr.h&gt;</cpp:error>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">// __RPCNDR_H_VERSION__</comment>

<cpp:ifndef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifndef</cpp:directive> <name pos:line="37" pos:column="9">COM_NO_WINDOWS_H</name></cpp:ifndef>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="38" pos:column="10">"windows.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="39" pos:column="10">"ole2.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="40" pos:column="8">/*COM_NO_WINDOWS_H*/</comment>

<cpp:ifndef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifndef</cpp:directive> <name pos:line="42" pos:column="9">__ee_h__</name></cpp:ifndef>
<cpp:define pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="43" pos:column="9">__ee_h__</name></cpp:macro></cpp:define>

<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if</cpp:directive> <expr><call><name pos:line="45" pos:column="5">defined</name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">_MSC_VER</name></expr></argument>)</argument_list></call> <op:operator pos:line="45" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="45" pos:column="26">(</op:operator><name pos:line="45" pos:column="27">_MSC_VER</name> <op:operator pos:line="45" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="45" pos:column="39">1020</lit:literal><op:operator pos:line="45" pos:column="43">)</op:operator></expr></cpp:if>
<cpp:pragma pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="49" pos:column="1">/* Forward Declarations */</comment> 

<cpp:ifndef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifndef</cpp:directive> <name pos:line="51" pos:column="9">__IDebugExpressionEvaluator_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="52" pos:column="9">__IDebugExpressionEvaluator_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="53" pos:column="1">typedef <type><name pos:line="53" pos:column="9">interface</name> <name pos:line="53" pos:column="19">IDebugExpressionEvaluator</name></type> <name pos:line="53" pos:column="45">IDebugExpressionEvaluator</name>;</typedef>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="54" pos:column="9">/* __IDebugExpressionEvaluator_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifndef</cpp:directive> <name pos:line="57" pos:column="9">__IDebugExpressionEvaluator2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="58" pos:column="9">__IDebugExpressionEvaluator2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="59" pos:column="1">typedef <type><name pos:line="59" pos:column="9">interface</name> <name pos:line="59" pos:column="19">IDebugExpressionEvaluator2</name></type> <name pos:line="59" pos:column="46">IDebugExpressionEvaluator2</name>;</typedef>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="60" pos:column="9">/* __IDebugExpressionEvaluator2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">ifndef</cpp:directive> <name pos:line="63" pos:column="9">__IDebugExpressionEvaluator3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="64" pos:column="9">__IDebugExpressionEvaluator3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="65" pos:column="1">typedef <type><name pos:line="65" pos:column="9">interface</name> <name pos:line="65" pos:column="19">IDebugExpressionEvaluator3</name></type> <name pos:line="65" pos:column="46">IDebugExpressionEvaluator3</name>;</typedef>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="66" pos:column="9">/* __IDebugExpressionEvaluator3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">ifndef</cpp:directive> <name pos:line="69" pos:column="9">__IDebugIDECallback_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="70" pos:column="9">__IDebugIDECallback_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="71" pos:column="1">typedef <type><name pos:line="71" pos:column="9">interface</name> <name pos:line="71" pos:column="19">IDebugIDECallback</name></type> <name pos:line="71" pos:column="37">IDebugIDECallback</name>;</typedef>
<cpp:endif pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="72" pos:column="9">/* __IDebugIDECallback_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">ifndef</cpp:directive> <name pos:line="75" pos:column="9">__IDebugIteratorFrameProvider_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="76" pos:column="9">__IDebugIteratorFrameProvider_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="77" pos:column="1">typedef <type><name pos:line="77" pos:column="9">interface</name> <name pos:line="77" pos:column="19">IDebugIteratorFrameProvider</name></type> <name pos:line="77" pos:column="47">IDebugIteratorFrameProvider</name>;</typedef>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="78" pos:column="9">/* __IDebugIteratorFrameProvider_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">ifndef</cpp:directive> <name pos:line="81" pos:column="9">__IDebugObject_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="82" pos:column="9">__IDebugObject_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="83" pos:column="1">typedef <type><name pos:line="83" pos:column="9">interface</name> <name pos:line="83" pos:column="19">IDebugObject</name></type> <name pos:line="83" pos:column="32">IDebugObject</name>;</typedef>
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="84" pos:column="9">/* __IDebugObject_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">ifndef</cpp:directive> <name pos:line="87" pos:column="9">__IDebugObject2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="88" pos:column="9">__IDebugObject2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="89" pos:column="1">typedef <type><name pos:line="89" pos:column="9">interface</name> <name pos:line="89" pos:column="19">IDebugObject2</name></type> <name pos:line="89" pos:column="33">IDebugObject2</name>;</typedef>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="90" pos:column="9">/* __IDebugObject2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">ifndef</cpp:directive> <name pos:line="93" pos:column="9">__IDebugArrayObject_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="94" pos:column="9">__IDebugArrayObject_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="95" pos:column="1">typedef <type><name pos:line="95" pos:column="9">interface</name> <name pos:line="95" pos:column="19">IDebugArrayObject</name></type> <name pos:line="95" pos:column="37">IDebugArrayObject</name>;</typedef>
<cpp:endif pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="96" pos:column="9">/* __IDebugArrayObject_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">ifndef</cpp:directive> <name pos:line="99" pos:column="9">__IDebugArrayObject2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="100" pos:column="9">__IDebugArrayObject2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="101" pos:column="1">typedef <type><name pos:line="101" pos:column="9">interface</name> <name pos:line="101" pos:column="19">IDebugArrayObject2</name></type> <name pos:line="101" pos:column="38">IDebugArrayObject2</name>;</typedef>
<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="102" pos:column="9">/* __IDebugArrayObject2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">ifndef</cpp:directive> <name pos:line="105" pos:column="9">__IDebugFunctionObject_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="106" pos:column="9">__IDebugFunctionObject_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="107" pos:column="1">typedef <type><name pos:line="107" pos:column="9">interface</name> <name pos:line="107" pos:column="19">IDebugFunctionObject</name></type> <name pos:line="107" pos:column="40">IDebugFunctionObject</name>;</typedef>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="108" pos:column="9">/* __IDebugFunctionObject_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">ifndef</cpp:directive> <name pos:line="111" pos:column="9">__IDebugFunctionObject2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="112" pos:column="9">__IDebugFunctionObject2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="113" pos:column="1">typedef <type><name pos:line="113" pos:column="9">interface</name> <name pos:line="113" pos:column="19">IDebugFunctionObject2</name></type> <name pos:line="113" pos:column="41">IDebugFunctionObject2</name>;</typedef>
<cpp:endif pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="114" pos:column="9">/* __IDebugFunctionObject2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">ifndef</cpp:directive> <name pos:line="117" pos:column="9">__IDebugManagedObject_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="118" pos:column="9">__IDebugManagedObject_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="119" pos:column="1">typedef <type><name pos:line="119" pos:column="9">interface</name> <name pos:line="119" pos:column="19">IDebugManagedObject</name></type> <name pos:line="119" pos:column="39">IDebugManagedObject</name>;</typedef>
<cpp:endif pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="120" pos:column="9">/* __IDebugManagedObject_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="123" pos:column="1">#<cpp:directive pos:line="123" pos:column="2">ifndef</cpp:directive> <name pos:line="123" pos:column="9">__IDebugBinder_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="124" pos:column="9">__IDebugBinder_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="125" pos:column="1">typedef <type><name pos:line="125" pos:column="9">interface</name> <name pos:line="125" pos:column="19">IDebugBinder</name></type> <name pos:line="125" pos:column="32">IDebugBinder</name>;</typedef>
<cpp:endif pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="126" pos:column="9">/* __IDebugBinder_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">ifndef</cpp:directive> <name pos:line="129" pos:column="9">__IDebugBinderDirect_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="130" pos:column="9">__IDebugBinderDirect_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="131" pos:column="1">typedef <type><name pos:line="131" pos:column="9">interface</name> <name pos:line="131" pos:column="19">IDebugBinderDirect</name></type> <name pos:line="131" pos:column="38">IDebugBinderDirect</name>;</typedef>
<cpp:endif pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="132" pos:column="9">/* __IDebugBinderDirect_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">ifndef</cpp:directive> <name pos:line="135" pos:column="9">__IDebugBinder2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="136" pos:column="1">#<cpp:directive pos:line="136" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="136" pos:column="9">__IDebugBinder2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="137" pos:column="1">typedef <type><name pos:line="137" pos:column="9">interface</name> <name pos:line="137" pos:column="19">IDebugBinder2</name></type> <name pos:line="137" pos:column="33">IDebugBinder2</name>;</typedef>
<cpp:endif pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="138" pos:column="9">/* __IDebugBinder2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="141" pos:column="1">#<cpp:directive pos:line="141" pos:column="2">ifndef</cpp:directive> <name pos:line="141" pos:column="9">__IDebugBinder3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="142" pos:column="1">#<cpp:directive pos:line="142" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="142" pos:column="9">__IDebugBinder3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="143" pos:column="1">typedef <type><name pos:line="143" pos:column="9">interface</name> <name pos:line="143" pos:column="19">IDebugBinder3</name></type> <name pos:line="143" pos:column="33">IDebugBinder3</name>;</typedef>
<cpp:endif pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="144" pos:column="9">/* __IDebugBinder3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">ifndef</cpp:directive> <name pos:line="147" pos:column="9">__IEEVisualizerDataProvider_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="148" pos:column="9">__IEEVisualizerDataProvider_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="149" pos:column="1">typedef <type><name pos:line="149" pos:column="9">interface</name> <name pos:line="149" pos:column="19">IEEVisualizerDataProvider</name></type> <name pos:line="149" pos:column="45">IEEVisualizerDataProvider</name>;</typedef>
<cpp:endif pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="150" pos:column="9">/* __IEEVisualizerDataProvider_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">ifndef</cpp:directive> <name pos:line="153" pos:column="9">__IEEVisualizerService_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="154" pos:column="1">#<cpp:directive pos:line="154" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="154" pos:column="9">__IEEVisualizerService_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="155" pos:column="1">typedef <type><name pos:line="155" pos:column="9">interface</name> <name pos:line="155" pos:column="19">IEEVisualizerService</name></type> <name pos:line="155" pos:column="40">IEEVisualizerService</name>;</typedef>
<cpp:endif pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="156" pos:column="9">/* __IEEVisualizerService_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">ifndef</cpp:directive> <name pos:line="159" pos:column="9">__IEEVisualizerServiceProvider_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="160" pos:column="9">__IEEVisualizerServiceProvider_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="161" pos:column="1">typedef <type><name pos:line="161" pos:column="9">interface</name> <name pos:line="161" pos:column="19">IEEVisualizerServiceProvider</name></type> <name pos:line="161" pos:column="48">IEEVisualizerServiceProvider</name>;</typedef>
<cpp:endif pos:line="162" pos:column="1">#<cpp:directive pos:line="162" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="162" pos:column="9">/* __IEEVisualizerServiceProvider_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">ifndef</cpp:directive> <name pos:line="165" pos:column="9">__IDebugPointerObject_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="166" pos:column="1">#<cpp:directive pos:line="166" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="166" pos:column="9">__IDebugPointerObject_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="167" pos:column="1">typedef <type><name pos:line="167" pos:column="9">interface</name> <name pos:line="167" pos:column="19">IDebugPointerObject</name></type> <name pos:line="167" pos:column="39">IDebugPointerObject</name>;</typedef>
<cpp:endif pos:line="168" pos:column="1">#<cpp:directive pos:line="168" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="168" pos:column="9">/* __IDebugPointerObject_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="171" pos:column="1">#<cpp:directive pos:line="171" pos:column="2">ifndef</cpp:directive> <name pos:line="171" pos:column="9">__IDebugPointerObject2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="172" pos:column="1">#<cpp:directive pos:line="172" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="172" pos:column="9">__IDebugPointerObject2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="173" pos:column="1">typedef <type><name pos:line="173" pos:column="9">interface</name> <name pos:line="173" pos:column="19">IDebugPointerObject2</name></type> <name pos:line="173" pos:column="40">IDebugPointerObject2</name>;</typedef>
<cpp:endif pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="174" pos:column="9">/* __IDebugPointerObject2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="177" pos:column="1">#<cpp:directive pos:line="177" pos:column="2">ifndef</cpp:directive> <name pos:line="177" pos:column="9">__IDebugPointerObject3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="178" pos:column="1">#<cpp:directive pos:line="178" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="178" pos:column="9">__IDebugPointerObject3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="179" pos:column="1">typedef <type><name pos:line="179" pos:column="9">interface</name> <name pos:line="179" pos:column="19">IDebugPointerObject3</name></type> <name pos:line="179" pos:column="40">IDebugPointerObject3</name>;</typedef>
<cpp:endif pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="180" pos:column="9">/* __IDebugPointerObject3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="183" pos:column="1">#<cpp:directive pos:line="183" pos:column="2">ifndef</cpp:directive> <name pos:line="183" pos:column="9">__IDebugParsedExpression_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="184" pos:column="1">#<cpp:directive pos:line="184" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="184" pos:column="9">__IDebugParsedExpression_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="185" pos:column="1">typedef <type><name pos:line="185" pos:column="9">interface</name> <name pos:line="185" pos:column="19">IDebugParsedExpression</name></type> <name pos:line="185" pos:column="42">IDebugParsedExpression</name>;</typedef>
<cpp:endif pos:line="186" pos:column="1">#<cpp:directive pos:line="186" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="186" pos:column="9">/* __IDebugParsedExpression_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="189" pos:column="1">#<cpp:directive pos:line="189" pos:column="2">ifndef</cpp:directive> <name pos:line="189" pos:column="9">__IEnumDebugObjects_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="190" pos:column="9">__IEnumDebugObjects_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="191" pos:column="1">typedef <type><name pos:line="191" pos:column="9">interface</name> <name pos:line="191" pos:column="19">IEnumDebugObjects</name></type> <name pos:line="191" pos:column="37">IEnumDebugObjects</name>;</typedef>
<cpp:endif pos:line="192" pos:column="1">#<cpp:directive pos:line="192" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="192" pos:column="9">/* __IEnumDebugObjects_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="195" pos:column="1">#<cpp:directive pos:line="195" pos:column="2">ifndef</cpp:directive> <name pos:line="195" pos:column="9">__IDebugAlias_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="196" pos:column="1">#<cpp:directive pos:line="196" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="196" pos:column="9">__IDebugAlias_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="197" pos:column="1">typedef <type><name pos:line="197" pos:column="9">interface</name> <name pos:line="197" pos:column="19">IDebugAlias</name></type> <name pos:line="197" pos:column="31">IDebugAlias</name>;</typedef>
<cpp:endif pos:line="198" pos:column="1">#<cpp:directive pos:line="198" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="198" pos:column="9">/* __IDebugAlias_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="201" pos:column="1">#<cpp:directive pos:line="201" pos:column="2">ifndef</cpp:directive> <name pos:line="201" pos:column="9">__ManagedCppExpressionEvaluator_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="202" pos:column="1">#<cpp:directive pos:line="202" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="202" pos:column="9">__ManagedCppExpressionEvaluator_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="204" pos:column="1">#<cpp:directive pos:line="204" pos:column="2">ifdef</cpp:directive> <name pos:line="204" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="205" pos:column="1">typedef <type pos:line="205" pos:column="9">class <name pos:line="205" pos:column="15">ManagedCppExpressionEvaluator</name></type> <name pos:line="205" pos:column="45">ManagedCppExpressionEvaluator</name>;</typedef>
<cpp:else pos:line="206" pos:column="1">#<cpp:directive pos:line="206" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="207" pos:column="1">typedef <type pos:line="207" pos:column="9">struct <name pos:line="207" pos:column="16">ManagedCppExpressionEvaluator</name></type> <name pos:line="207" pos:column="46">ManagedCppExpressionEvaluator</name>;</typedef>
<cpp:endif pos:line="208" pos:column="1">#<cpp:directive pos:line="208" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="208" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="210" pos:column="1">#<cpp:directive pos:line="210" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="210" pos:column="9">/* __ManagedCppExpressionEvaluator_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="213" pos:column="1">#<cpp:directive pos:line="213" pos:column="2">ifndef</cpp:directive> <name pos:line="213" pos:column="9">__CSharpExpressionEvaluator_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="214" pos:column="1">#<cpp:directive pos:line="214" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="214" pos:column="9">__CSharpExpressionEvaluator_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="216" pos:column="1">#<cpp:directive pos:line="216" pos:column="2">ifdef</cpp:directive> <name pos:line="216" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="217" pos:column="1">typedef <type pos:line="217" pos:column="9">class <name pos:line="217" pos:column="15">CSharpExpressionEvaluator</name></type> <name pos:line="217" pos:column="41">CSharpExpressionEvaluator</name>;</typedef>
<cpp:else pos:line="218" pos:column="1">#<cpp:directive pos:line="218" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="219" pos:column="1">typedef <type pos:line="219" pos:column="9">struct <name pos:line="219" pos:column="16">CSharpExpressionEvaluator</name></type> <name pos:line="219" pos:column="42">CSharpExpressionEvaluator</name>;</typedef>
<cpp:endif pos:line="220" pos:column="1">#<cpp:directive pos:line="220" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="220" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="222" pos:column="1">#<cpp:directive pos:line="222" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="222" pos:column="9">/* __CSharpExpressionEvaluator_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="225" pos:column="1">#<cpp:directive pos:line="225" pos:column="2">ifndef</cpp:directive> <name pos:line="225" pos:column="9">__JSharpExpressionEvaluator_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="226" pos:column="1">#<cpp:directive pos:line="226" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="226" pos:column="9">__JSharpExpressionEvaluator_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="228" pos:column="1">#<cpp:directive pos:line="228" pos:column="2">ifdef</cpp:directive> <name pos:line="228" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="229" pos:column="1">typedef <type pos:line="229" pos:column="9">class <name pos:line="229" pos:column="15">JSharpExpressionEvaluator</name></type> <name pos:line="229" pos:column="41">JSharpExpressionEvaluator</name>;</typedef>
<cpp:else pos:line="230" pos:column="1">#<cpp:directive pos:line="230" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="231" pos:column="1">typedef <type pos:line="231" pos:column="9">struct <name pos:line="231" pos:column="16">JSharpExpressionEvaluator</name></type> <name pos:line="231" pos:column="42">JSharpExpressionEvaluator</name>;</typedef>
<cpp:endif pos:line="232" pos:column="1">#<cpp:directive pos:line="232" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="232" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="234" pos:column="1">#<cpp:directive pos:line="234" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="234" pos:column="9">/* __JSharpExpressionEvaluator_FWD_DEFINED__ */</comment>


<comment type="block" pos:line="237" pos:column="1">/* header files for imported files */</comment>
<cpp:include pos:line="238" pos:column="1">#<cpp:directive pos:line="238" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="238" pos:column="10">"ocidl.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="239" pos:column="1">#<cpp:directive pos:line="239" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="239" pos:column="10">"msdbg.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="241" pos:column="1">#<cpp:directive pos:line="241" pos:column="2">ifdef</cpp:directive> <name pos:line="241" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="242" pos:column="1">extern <lit:literal type="string" pos:line="242" pos:column="8">"C"</lit:literal><block pos:line="242" pos:column="11">{
<cpp:endif pos:line="243" pos:column="1">#<cpp:directive pos:line="243" pos:column="2">endif</cpp:directive></cpp:endif> 


<comment type="block" pos:line="246" pos:column="1">/* interface __MIDL_itf_ee_0000_0000 */</comment>
<comment type="block" pos:line="247" pos:column="1">/* [local] */</comment> 















<cpp:define pos:line="263" pos:column="1">#<cpp:directive pos:line="263" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="263" pos:column="9">S_EVAL_EXCEPTION</name></cpp:macro>                 	<cpp:value pos:line="263" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x0002)</cpp:value></cpp:define>
<cpp:define pos:line="264" pos:column="1">#<cpp:directive pos:line="264" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="264" pos:column="9">S_EVAL_ABORTED</name></cpp:macro>                   	<cpp:value pos:line="264" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x0003)</cpp:value></cpp:define>
<cpp:define pos:line="265" pos:column="1">#<cpp:directive pos:line="265" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="265" pos:column="9">S_EVAL_TIMEDOUT</name></cpp:macro>                  	<cpp:value pos:line="265" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x0004)</cpp:value></cpp:define>
<cpp:define pos:line="266" pos:column="1">#<cpp:directive pos:line="266" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="266" pos:column="9">S_EVAL_NO_RESULT</name></cpp:macro>                 	<cpp:value pos:line="266" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x0005)</cpp:value></cpp:define>
<cpp:define pos:line="267" pos:column="1">#<cpp:directive pos:line="267" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="267" pos:column="9">S_EVAL_THREAD_SUSPENDED</name></cpp:macro>          	<cpp:value pos:line="267" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x0006)</cpp:value></cpp:define>
<cpp:define pos:line="268" pos:column="1">#<cpp:directive pos:line="268" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="268" pos:column="9">S_EVAL_THREAD_SLEEP_WAIT_JOIN</name></cpp:macro>    	<cpp:value pos:line="268" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x0007)</cpp:value></cpp:define>
<cpp:define pos:line="269" pos:column="1">#<cpp:directive pos:line="269" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="269" pos:column="9">S_EVAL_BAD_THREAD_STATE</name></cpp:macro>          	<cpp:value pos:line="269" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x0008)</cpp:value></cpp:define>
<cpp:define pos:line="270" pos:column="1">#<cpp:directive pos:line="270" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="270" pos:column="9">S_EVAL_THREAD_NOT_STARTED</name></cpp:macro>        	<cpp:value pos:line="270" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x0009)</cpp:value></cpp:define>
<cpp:define pos:line="271" pos:column="1">#<cpp:directive pos:line="271" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="271" pos:column="9">S_EVAL_BAD_START_POINT</name></cpp:macro>           	<cpp:value pos:line="271" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x000A)</cpp:value></cpp:define>
<cpp:define pos:line="272" pos:column="1">#<cpp:directive pos:line="272" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="272" pos:column="9">E_STATIC_VAR_NOT_AVAILABLE</name></cpp:macro>       	<cpp:value pos:line="272" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x000B)</cpp:value></cpp:define>
<cpp:define pos:line="273" pos:column="1">#<cpp:directive pos:line="273" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="273" pos:column="9">S_EVAL_WEB_METHOD</name></cpp:macro>                	<cpp:value pos:line="273" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x000C)</cpp:value></cpp:define>
<cpp:define pos:line="274" pos:column="1">#<cpp:directive pos:line="274" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="274" pos:column="9">S_EVAL_STOP_REQUESTED</name></cpp:macro>            	<cpp:value pos:line="274" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x000D)</cpp:value></cpp:define>
<cpp:define pos:line="275" pos:column="1">#<cpp:directive pos:line="275" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="275" pos:column="9">S_EVAL_SUSPEND_REQUESTED</name></cpp:macro>         	<cpp:value pos:line="275" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x000E)</cpp:value></cpp:define>
<cpp:define pos:line="276" pos:column="1">#<cpp:directive pos:line="276" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="276" pos:column="9">S_EVAL_UNSCHEDULED_FIBER</name></cpp:macro>         	<cpp:value pos:line="276" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x000F)</cpp:value></cpp:define>
<cpp:define pos:line="277" pos:column="1">#<cpp:directive pos:line="277" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="277" pos:column="9">E_EVAL_NOT_SUPPORTED_IN_CLR</name></cpp:macro>      	<cpp:value pos:line="277" pos:column="49">MAKE_HRESULT(1, FACILITY_ITF, 0x0010)</cpp:value></cpp:define>
<cpp:define pos:line="278" pos:column="1">#<cpp:directive pos:line="278" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="278" pos:column="9">E_EVAL_OBJECT_ID_NOT_FOUND</name></cpp:macro>       	<cpp:value pos:line="278" pos:column="49">MAKE_HRESULT(1, FACILITY_ITF, 0x0011)</cpp:value></cpp:define>
<cpp:define pos:line="279" pos:column="1">#<cpp:directive pos:line="279" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="279" pos:column="9">E_EVAL_DIFFERENT_APPIDS</name></cpp:macro>          	<cpp:value pos:line="279" pos:column="49">MAKE_HRESULT(1, FACILITY_ITF, 0x0012)</cpp:value></cpp:define>
<cpp:define pos:line="280" pos:column="1">#<cpp:directive pos:line="280" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="280" pos:column="9">E_EVAL_MODULE_NOT_FOUND_IN_APPID</name></cpp:macro> 	<cpp:value pos:line="280" pos:column="49">MAKE_HRESULT(1, FACILITY_ITF, 0x0013)</cpp:value></cpp:define>
<cpp:define pos:line="281" pos:column="1">#<cpp:directive pos:line="281" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="281" pos:column="9">E_EVAL_OVERFLOW_HAS_OCCURRED</name></cpp:macro>     	<cpp:value pos:line="281" pos:column="49">MAKE_HRESULT(1, FACILITY_ITF, 0x0014)</cpp:value></cpp:define>
<cpp:define pos:line="282" pos:column="1">#<cpp:directive pos:line="282" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="282" pos:column="9">E_EVAL_NULL_REFERENCE</name></cpp:macro>            	<cpp:value pos:line="282" pos:column="49">MAKE_HRESULT(1, FACILITY_ITF, 0x0015)</cpp:value></cpp:define>
<cpp:define pos:line="283" pos:column="1">#<cpp:directive pos:line="283" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="283" pos:column="9">S_EVAL_ENC_OUTDATED</name></cpp:macro>              	<cpp:value pos:line="283" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x0016)</cpp:value></cpp:define>
<cpp:define pos:line="284" pos:column="1">#<cpp:directive pos:line="284" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="284" pos:column="9">S_EVAL_PRIOREVALTIMEDOUT</name></cpp:macro>				<cpp:value pos:line="284" pos:column="65">MAKE_HRESULT(0, FACILITY_ITF, 0x0017)</cpp:value></cpp:define>
<cpp:define pos:line="285" pos:column="1">#<cpp:directive pos:line="285" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="285" pos:column="9">E_EVAL_OBJECT_ID_NOT_IN_APP_DOMAIN</name></cpp:macro>	<cpp:value pos:line="285" pos:column="49">MAKE_HRESULT(0, FACILITY_ITF, 0x0018)</cpp:value></cpp:define>


<decl_stmt><decl><type><specifier pos:line="288" pos:column="1">extern</specifier> <name pos:line="288" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="288" pos:column="22">__MIDL_itf_ee_0000_0000_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="289" pos:column="1">extern</specifier> <name pos:line="289" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="289" pos:column="22">__MIDL_itf_ee_0000_0000_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="291" pos:column="1">#<cpp:directive pos:line="291" pos:column="2">ifndef</cpp:directive> <name pos:line="291" pos:column="9">__IDebugExpressionEvaluator_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="292" pos:column="1">#<cpp:directive pos:line="292" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="292" pos:column="9">__IDebugExpressionEvaluator_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="294" pos:column="1">/* interface IDebugExpressionEvaluator */</comment>
<comment type="block" pos:line="295" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="298" pos:column="1">EXTERN_C</name> <specifier pos:line="298" pos:column="10">const</specifier> <name pos:line="298" pos:column="16">IID</name></type> <name pos:line="298" pos:column="20">IID_IDebugExpressionEvaluator</name></decl>;</decl_stmt>

<cpp:if pos:line="300" pos:column="1">#<cpp:directive pos:line="300" pos:column="2">if</cpp:directive> <expr><call><name pos:line="300" pos:column="5">defined</name><argument_list pos:line="300" pos:column="12">(<argument><expr><name pos:line="300" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="300" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="300" pos:column="29">!</op:operator><call><name pos:line="300" pos:column="30">defined</name><argument_list pos:line="300" pos:column="37">(<argument><expr><name pos:line="300" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="302" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="302" pos:column="19">(<argument pos:line="302" pos:column="20">"C077C822-476C-11d2-B73C-0000F87572EF"</argument>)</argument_list></macro>
    <label><name pos:line="303" pos:column="5">IDebugExpressionEvaluator</name> :</label> <expr_stmt><expr pos:line="303" pos:column="33">public <name pos:line="303" pos:column="40">IUnknown</name>
    <block pos:line="304" pos:column="5">{
    <expr pos:line="305" pos:column="5">public<op:operator pos:line="305" pos:column="11">:</op:operator>
        virtual <name pos:line="306" pos:column="17">HRESULT</name> <name pos:line="306" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="306" pos:column="43">Parse</name><argument_list pos:line="306" pos:column="48">( 
            <comment type="block" pos:line="307" pos:column="13">/* [in] */</comment> <argument pos:line="307" pos:column="24">__RPC__in LPCOLESTR upstrExpression</argument>,
            <comment type="block" pos:line="308" pos:column="13">/* [in] */</comment> <argument pos:line="308" pos:column="24">PARSEFLAGS dwFlags</argument>,
            <comment type="block" pos:line="309" pos:column="13">/* [in] */</comment> <argument pos:line="309" pos:column="24">UINT nRadix</argument>,
            <comment type="block" pos:line="310" pos:column="13">/* [out] */</comment> <argument pos:line="310" pos:column="25">__RPC__deref_out_opt BSTR *pbstrError</argument>,
            <comment type="block" pos:line="311" pos:column="13">/* [out] */</comment> <argument pos:line="311" pos:column="25">__RPC__out UINT *pichError</argument>,
            <comment type="block" pos:line="312" pos:column="13">/* [out] */</comment> <argument pos:line="312" pos:column="25">__RPC__deref_out_opt IDebugParsedExpression **ppParsedExpression</argument>)</argument_list></macro> <op:operator pos:line="312" pos:column="91">=</op:operator> <lit:literal type="number" pos:line="312" pos:column="93">0</lit:literal></expr>;
        
        <expr pos:line="314" pos:column="9">virtual <name pos:line="314" pos:column="17">HRESULT</name> <name pos:line="314" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="314" pos:column="43">GetMethodProperty</name><argument_list pos:line="314" pos:column="60">( 
            <comment type="block" pos:line="315" pos:column="13">/* [in] */</comment> <argument pos:line="315" pos:column="24">__RPC__in_opt IDebugSymbolProvider *pSymbolProvider</argument>,
            <comment type="block" pos:line="316" pos:column="13">/* [in] */</comment> <argument pos:line="316" pos:column="24">__RPC__in_opt IDebugAddress *pAddress</argument>,
            <comment type="block" pos:line="317" pos:column="13">/* [in] */</comment> <argument pos:line="317" pos:column="24">__RPC__in_opt IDebugBinder *pBinder</argument>,
            <comment type="block" pos:line="318" pos:column="13">/* [in] */</comment> <argument pos:line="318" pos:column="24">BOOL fIncludeHiddenLocals</argument>,
            <comment type="block" pos:line="319" pos:column="13">/* [out] */</comment> <argument pos:line="319" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppProperty</argument>)</argument_list></macro> <op:operator pos:line="319" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="319" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="321" pos:column="9">virtual <name pos:line="321" pos:column="17">HRESULT</name> <name pos:line="321" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="321" pos:column="43">GetMethodLocationProperty</name><argument_list pos:line="321" pos:column="68">( 
            <comment type="block" pos:line="322" pos:column="13">/* [in] */</comment> <argument pos:line="322" pos:column="24">__RPC__in LPCOLESTR upstrFullyQualifiedMethodPlusOffset</argument>,
            <comment type="block" pos:line="323" pos:column="13">/* [in] */</comment> <argument pos:line="323" pos:column="24">__RPC__in_opt IDebugSymbolProvider *pSymbolProvider</argument>,
            <comment type="block" pos:line="324" pos:column="13">/* [in] */</comment> <argument pos:line="324" pos:column="24">__RPC__in_opt IDebugAddress *pAddress</argument>,
            <comment type="block" pos:line="325" pos:column="13">/* [in] */</comment> <argument pos:line="325" pos:column="24">__RPC__in_opt IDebugBinder *pBinder</argument>,
            <comment type="block" pos:line="326" pos:column="13">/* [out] */</comment> <argument pos:line="326" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppProperty</argument>)</argument_list></macro> <op:operator pos:line="326" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="326" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="328" pos:column="9">virtual <name pos:line="328" pos:column="17">HRESULT</name> <name pos:line="328" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="328" pos:column="43">SetLocale</name><argument_list pos:line="328" pos:column="52">( 
            <comment type="block" pos:line="329" pos:column="13">/* [in] */</comment> <argument pos:line="329" pos:column="24">WORD wLangID</argument>)</argument_list></macro> <op:operator pos:line="329" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="329" pos:column="40">0</lit:literal></expr>;
        
        <expr pos:line="331" pos:column="9">virtual <name pos:line="331" pos:column="17">HRESULT</name> <name pos:line="331" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="331" pos:column="43">SetRegistryRoot</name><argument_list pos:line="331" pos:column="58">( 
            <comment type="block" pos:line="332" pos:column="13">/* [in] */</comment> <argument pos:line="332" pos:column="24">__RPC__in LPCOLESTR ustrRegistryRoot</argument>)</argument_list></macro> <op:operator pos:line="332" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="332" pos:column="64">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="336" pos:column="1">#<cpp:directive pos:line="336" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="336" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="338" pos:column="5">typedef <type><struct pos:line="338" pos:column="13">struct <name pos:line="338" pos:column="20">IDebugExpressionEvaluatorVtbl</name>
    <block pos:line="339" pos:column="5">{<public type="default" pos:line="339" pos:column="6">
        <function_decl><type><name pos:line="340" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="342" pos:column="9">HRESULT</name></type> ( <name pos:line="342" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="342" pos:column="37">*</type:modifier><name pos:line="342" pos:column="38">QueryInterface</name> )<parameter_list pos:line="342" pos:column="54">( 
            <param><decl><type><name pos:line="343" pos:column="13">IDebugExpressionEvaluator</name> <type:modifier pos:line="343" pos:column="39">*</type:modifier></type> <name pos:line="343" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="344" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="344" pos:column="24">__RPC__in</name> <name pos:line="344" pos:column="34">REFIID</name></type> <name pos:line="344" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="345" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="346" pos:column="13">__RPC__deref_out</name>  <name pos:line="346" pos:column="31">void</name> <type:modifier pos:line="346" pos:column="36">*</type:modifier><type:modifier pos:line="346" pos:column="37">*</type:modifier></type><name pos:line="346" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="348" pos:column="9">ULONG</name></type> ( <name pos:line="348" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="348" pos:column="35">*</type:modifier><name pos:line="348" pos:column="36">AddRef</name> )<parameter_list pos:line="348" pos:column="44">( 
            <param><decl><type><name pos:line="349" pos:column="13">IDebugExpressionEvaluator</name> <type:modifier pos:line="349" pos:column="39">*</type:modifier></type> <name pos:line="349" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="351" pos:column="9">ULONG</name></type> ( <name pos:line="351" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="351" pos:column="35">*</type:modifier><name pos:line="351" pos:column="36">Release</name> )<parameter_list pos:line="351" pos:column="45">( 
            <param><decl><type><name pos:line="352" pos:column="13">IDebugExpressionEvaluator</name> <type:modifier pos:line="352" pos:column="39">*</type:modifier></type> <name pos:line="352" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="354" pos:column="9">HRESULT</name></type> ( <name pos:line="354" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="354" pos:column="37">*</type:modifier><name pos:line="354" pos:column="38">Parse</name> )<parameter_list pos:line="354" pos:column="45">( 
            <param><decl><type><name pos:line="355" pos:column="13">IDebugExpressionEvaluator</name> <type:modifier pos:line="355" pos:column="39">*</type:modifier></type> <name pos:line="355" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="356" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="356" pos:column="24">__RPC__in</name> <name pos:line="356" pos:column="34">LPCOLESTR</name></type> <name pos:line="356" pos:column="44">upstrExpression</name></decl></param>,
            <comment type="block" pos:line="357" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="357" pos:column="24">PARSEFLAGS</name></type> <name pos:line="357" pos:column="35">dwFlags</name></decl></param>,
            <comment type="block" pos:line="358" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="358" pos:column="24">UINT</name></type> <name pos:line="358" pos:column="29">nRadix</name></decl></param>,
            <comment type="block" pos:line="359" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="359" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="359" pos:column="46">BSTR</name> <type:modifier pos:line="359" pos:column="51">*</type:modifier></type><name pos:line="359" pos:column="52">pbstrError</name></decl></param>,
            <comment type="block" pos:line="360" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="360" pos:column="25">__RPC__out</name> <name pos:line="360" pos:column="36">UINT</name> <type:modifier pos:line="360" pos:column="41">*</type:modifier></type><name pos:line="360" pos:column="42">pichError</name></decl></param>,
            <comment type="block" pos:line="361" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="361" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="361" pos:column="46">IDebugParsedExpression</name> <type:modifier pos:line="361" pos:column="69">*</type:modifier><type:modifier pos:line="361" pos:column="70">*</type:modifier></type><name pos:line="361" pos:column="71">ppParsedExpression</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="363" pos:column="9">HRESULT</name></type> ( <name pos:line="363" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="363" pos:column="37">*</type:modifier><name pos:line="363" pos:column="38">GetMethodProperty</name> )<parameter_list pos:line="363" pos:column="57">( 
            <param><decl><type><name pos:line="364" pos:column="13">IDebugExpressionEvaluator</name> <type:modifier pos:line="364" pos:column="39">*</type:modifier></type> <name pos:line="364" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="365" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="365" pos:column="24">__RPC__in_opt</name> <name pos:line="365" pos:column="38">IDebugSymbolProvider</name> <type:modifier pos:line="365" pos:column="59">*</type:modifier></type><name pos:line="365" pos:column="60">pSymbolProvider</name></decl></param>,
            <comment type="block" pos:line="366" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="366" pos:column="24">__RPC__in_opt</name> <name pos:line="366" pos:column="38">IDebugAddress</name> <type:modifier pos:line="366" pos:column="52">*</type:modifier></type><name pos:line="366" pos:column="53">pAddress</name></decl></param>,
            <comment type="block" pos:line="367" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="367" pos:column="24">__RPC__in_opt</name> <name pos:line="367" pos:column="38">IDebugBinder</name> <type:modifier pos:line="367" pos:column="51">*</type:modifier></type><name pos:line="367" pos:column="52">pBinder</name></decl></param>,
            <comment type="block" pos:line="368" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="368" pos:column="24">BOOL</name></type> <name pos:line="368" pos:column="29">fIncludeHiddenLocals</name></decl></param>,
            <comment type="block" pos:line="369" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="369" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="369" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="369" pos:column="62">*</type:modifier><type:modifier pos:line="369" pos:column="63">*</type:modifier></type><name pos:line="369" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="371" pos:column="9">HRESULT</name></type> ( <name pos:line="371" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="371" pos:column="37">*</type:modifier><name pos:line="371" pos:column="38">GetMethodLocationProperty</name> )<parameter_list pos:line="371" pos:column="65">( 
            <param><decl><type><name pos:line="372" pos:column="13">IDebugExpressionEvaluator</name> <type:modifier pos:line="372" pos:column="39">*</type:modifier></type> <name pos:line="372" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="373" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="373" pos:column="24">__RPC__in</name> <name pos:line="373" pos:column="34">LPCOLESTR</name></type> <name pos:line="373" pos:column="44">upstrFullyQualifiedMethodPlusOffset</name></decl></param>,
            <comment type="block" pos:line="374" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="374" pos:column="24">__RPC__in_opt</name> <name pos:line="374" pos:column="38">IDebugSymbolProvider</name> <type:modifier pos:line="374" pos:column="59">*</type:modifier></type><name pos:line="374" pos:column="60">pSymbolProvider</name></decl></param>,
            <comment type="block" pos:line="375" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="375" pos:column="24">__RPC__in_opt</name> <name pos:line="375" pos:column="38">IDebugAddress</name> <type:modifier pos:line="375" pos:column="52">*</type:modifier></type><name pos:line="375" pos:column="53">pAddress</name></decl></param>,
            <comment type="block" pos:line="376" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="376" pos:column="24">__RPC__in_opt</name> <name pos:line="376" pos:column="38">IDebugBinder</name> <type:modifier pos:line="376" pos:column="51">*</type:modifier></type><name pos:line="376" pos:column="52">pBinder</name></decl></param>,
            <comment type="block" pos:line="377" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="377" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="377" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="377" pos:column="62">*</type:modifier><type:modifier pos:line="377" pos:column="63">*</type:modifier></type><name pos:line="377" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="379" pos:column="9">HRESULT</name></type> ( <name pos:line="379" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="379" pos:column="37">*</type:modifier><name pos:line="379" pos:column="38">SetLocale</name> )<parameter_list pos:line="379" pos:column="49">( 
            <param><decl><type><name pos:line="380" pos:column="13">IDebugExpressionEvaluator</name> <type:modifier pos:line="380" pos:column="39">*</type:modifier></type> <name pos:line="380" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="381" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="381" pos:column="24">WORD</name></type> <name pos:line="381" pos:column="29">wLangID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="383" pos:column="9">HRESULT</name></type> ( <name pos:line="383" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="383" pos:column="37">*</type:modifier><name pos:line="383" pos:column="38">SetRegistryRoot</name> )<parameter_list pos:line="383" pos:column="55">( 
            <param><decl><type><name pos:line="384" pos:column="13">IDebugExpressionEvaluator</name> <type:modifier pos:line="384" pos:column="39">*</type:modifier></type> <name pos:line="384" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="385" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="385" pos:column="24">__RPC__in</name> <name pos:line="385" pos:column="34">LPCOLESTR</name></type> <name pos:line="385" pos:column="44">ustrRegistryRoot</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="387" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="388" pos:column="7">IDebugExpressionEvaluatorVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="390" pos:column="5">interface</name></type> <name pos:line="390" pos:column="15">IDebugExpressionEvaluator</name>
    <argument_list pos:line="391" pos:column="5">{
        <argument><expr><name pos:line="392" pos:column="9">CONST_VTBL</name> struct <name pos:line="392" pos:column="27">IDebugExpressionEvaluatorVtbl</name> <op:operator pos:line="392" pos:column="57">*</op:operator><name pos:line="392" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="397" pos:column="1">#<cpp:directive pos:line="397" pos:column="2">ifdef</cpp:directive> <name pos:line="397" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="400" pos:column="1">#<cpp:directive pos:line="400" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="400" pos:column="9">IDebugExpressionEvaluator_QueryInterface</name><parameter_list pos:line="400" pos:column="49">(<param><type><name pos:line="400" pos:column="50">This</name></type></param>,<param><type><name pos:line="400" pos:column="55">riid</name></type></param>,<param><type><name pos:line="400" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="401" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="403" pos:column="1">#<cpp:directive pos:line="403" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="403" pos:column="9">IDebugExpressionEvaluator_AddRef</name><parameter_list pos:line="403" pos:column="41">(<param><type><name pos:line="403" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="404" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="406" pos:column="1">#<cpp:directive pos:line="406" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="406" pos:column="9">IDebugExpressionEvaluator_Release</name><parameter_list pos:line="406" pos:column="42">(<param><type><name pos:line="406" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="407" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="410" pos:column="1">#<cpp:directive pos:line="410" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="410" pos:column="9">IDebugExpressionEvaluator_Parse</name><parameter_list pos:line="410" pos:column="40">(<param><type><name pos:line="410" pos:column="41">This</name></type></param>,<param><type><name pos:line="410" pos:column="46">upstrExpression</name></type></param>,<param><type><name pos:line="410" pos:column="62">dwFlags</name></type></param>,<param><type><name pos:line="410" pos:column="70">nRadix</name></type></param>,<param><type><name pos:line="410" pos:column="77">pbstrError</name></type></param>,<param><type><name pos:line="410" pos:column="88">pichError</name></type></param>,<param><type><name pos:line="410" pos:column="98">ppParsedExpression</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="411" pos:column="5">( (This)-&gt;lpVtbl -&gt; Parse(This,upstrExpression,dwFlags,nRadix,pbstrError,pichError,ppParsedExpression) )</cpp:value></cpp:define> 

<cpp:define pos:line="413" pos:column="1">#<cpp:directive pos:line="413" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="413" pos:column="9">IDebugExpressionEvaluator_GetMethodProperty</name><parameter_list pos:line="413" pos:column="52">(<param><type><name pos:line="413" pos:column="53">This</name></type></param>,<param><type><name pos:line="413" pos:column="58">pSymbolProvider</name></type></param>,<param><type><name pos:line="413" pos:column="74">pAddress</name></type></param>,<param><type><name pos:line="413" pos:column="83">pBinder</name></type></param>,<param><type><name pos:line="413" pos:column="91">fIncludeHiddenLocals</name></type></param>,<param><type><name pos:line="413" pos:column="112">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="414" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMethodProperty(This,pSymbolProvider,pAddress,pBinder,fIncludeHiddenLocals,ppProperty) )</cpp:value></cpp:define> 

<cpp:define pos:line="416" pos:column="1">#<cpp:directive pos:line="416" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="416" pos:column="9">IDebugExpressionEvaluator_GetMethodLocationProperty</name><parameter_list pos:line="416" pos:column="60">(<param><type><name pos:line="416" pos:column="61">This</name></type></param>,<param><type><name pos:line="416" pos:column="66">upstrFullyQualifiedMethodPlusOffset</name></type></param>,<param><type><name pos:line="416" pos:column="102">pSymbolProvider</name></type></param>,<param><type><name pos:line="416" pos:column="118">pAddress</name></type></param>,<param><type><name pos:line="416" pos:column="127">pBinder</name></type></param>,<param><type><name pos:line="416" pos:column="135">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="417" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMethodLocationProperty(This,upstrFullyQualifiedMethodPlusOffset,pSymbolProvider,pAddress,pBinder,ppProperty) )</cpp:value></cpp:define> 

<cpp:define pos:line="419" pos:column="1">#<cpp:directive pos:line="419" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="419" pos:column="9">IDebugExpressionEvaluator_SetLocale</name><parameter_list pos:line="419" pos:column="44">(<param><type><name pos:line="419" pos:column="45">This</name></type></param>,<param><type><name pos:line="419" pos:column="50">wLangID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="420" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetLocale(This,wLangID) )</cpp:value></cpp:define> 

<cpp:define pos:line="422" pos:column="1">#<cpp:directive pos:line="422" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="422" pos:column="9">IDebugExpressionEvaluator_SetRegistryRoot</name><parameter_list pos:line="422" pos:column="50">(<param><type><name pos:line="422" pos:column="51">This</name></type></param>,<param><type><name pos:line="422" pos:column="56">ustrRegistryRoot</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="423" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetRegistryRoot(This,ustrRegistryRoot) )</cpp:value></cpp:define> 

<cpp:endif pos:line="425" pos:column="1">#<cpp:directive pos:line="425" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="425" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="428" pos:column="1">#<cpp:directive pos:line="428" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="428" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="433" pos:column="1">#<cpp:directive pos:line="433" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="433" pos:column="9">/* __IDebugExpressionEvaluator_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="436" pos:column="1">#<cpp:directive pos:line="436" pos:column="2">ifndef</cpp:directive> <name pos:line="436" pos:column="9">__IDebugExpressionEvaluator2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="437" pos:column="1">#<cpp:directive pos:line="437" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="437" pos:column="9">__IDebugExpressionEvaluator2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="439" pos:column="1">/* interface IDebugExpressionEvaluator2 */</comment>
<comment type="block" pos:line="440" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="443" pos:column="1">EXTERN_C</name> <specifier pos:line="443" pos:column="10">const</specifier> <name pos:line="443" pos:column="16">IID</name></type> <name pos:line="443" pos:column="20">IID_IDebugExpressionEvaluator2</name></decl>;</decl_stmt>

<cpp:if pos:line="445" pos:column="1">#<cpp:directive pos:line="445" pos:column="2">if</cpp:directive> <expr><call><name pos:line="445" pos:column="5">defined</name><argument_list pos:line="445" pos:column="12">(<argument><expr><name pos:line="445" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="445" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="445" pos:column="29">!</op:operator><call><name pos:line="445" pos:column="30">defined</name><argument_list pos:line="445" pos:column="37">(<argument><expr><name pos:line="445" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="447" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="447" pos:column="19">(<argument pos:line="447" pos:column="20">"2DE1D5E0-CA57-456f-815C-5902825A2795"</argument>)</argument_list></macro>
    <label><name pos:line="448" pos:column="5">IDebugExpressionEvaluator2</name> :</label> <expr_stmt><expr pos:line="448" pos:column="34">public <name pos:line="448" pos:column="41">IDebugExpressionEvaluator</name>
    <block pos:line="449" pos:column="5">{
    <expr pos:line="450" pos:column="5">public<op:operator pos:line="450" pos:column="11">:</op:operator>
        virtual <name pos:line="451" pos:column="17">HRESULT</name> <name pos:line="451" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="451" pos:column="43">SetCorPath</name><argument_list pos:line="451" pos:column="53">( 
            <comment type="block" pos:line="452" pos:column="13">/* [in] */</comment> <argument pos:line="452" pos:column="24">__RPC__in LPCOLESTR pcstrCorPath</argument>)</argument_list></macro> <op:operator pos:line="452" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="452" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="454" pos:column="9">virtual <name pos:line="454" pos:column="17">HRESULT</name> <name pos:line="454" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="454" pos:column="43">Terminate</name><argument_list pos:line="454" pos:column="52">( <argument><expr><name pos:line="454" pos:column="54">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="454" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="454" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="456" pos:column="9">virtual <name pos:line="456" pos:column="17">HRESULT</name> <name pos:line="456" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="456" pos:column="43">SetCallback</name><argument_list pos:line="456" pos:column="54">( 
            <comment type="block" pos:line="457" pos:column="13">/* [in] */</comment> <argument pos:line="457" pos:column="24">__RPC__in_opt IDebugSettingsCallback2 *pCallback</argument>)</argument_list></macro> <op:operator pos:line="457" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="457" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="459" pos:column="9">virtual <name pos:line="459" pos:column="17">HRESULT</name> <name pos:line="459" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="459" pos:column="43">PreloadModules</name><argument_list pos:line="459" pos:column="57">( 
            <comment type="block" pos:line="460" pos:column="13">/* [in] */</comment> <argument pos:line="460" pos:column="24">__RPC__in_opt IDebugSymbolProvider *pSym</argument>)</argument_list></macro> <op:operator pos:line="460" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="460" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="462" pos:column="9">virtual <name pos:line="462" pos:column="17">HRESULT</name> <name pos:line="462" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="462" pos:column="43">GetService</name><argument_list pos:line="462" pos:column="53">( 
            <comment type="block" pos:line="463" pos:column="13">/* [in] */</comment> <argument pos:line="463" pos:column="24">GUID uid</argument>,
            <comment type="block" pos:line="464" pos:column="13">/* [out] */</comment> <argument pos:line="464" pos:column="25">__RPC__deref_out_opt IUnknown **ppService</argument>)</argument_list></macro> <op:operator pos:line="464" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="464" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="466" pos:column="9">virtual <name pos:line="466" pos:column="17">HRESULT</name> <name pos:line="466" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="466" pos:column="43">SetIDebugIDECallback</name><argument_list pos:line="466" pos:column="63">( 
            <comment type="block" pos:line="467" pos:column="13">/* [in] */</comment> <argument pos:line="467" pos:column="24">__RPC__in_opt IDebugIDECallback *pCallback</argument>)</argument_list></macro> <op:operator pos:line="467" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="467" pos:column="70">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="471" pos:column="1">#<cpp:directive pos:line="471" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="471" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="473" pos:column="5">typedef <type><struct pos:line="473" pos:column="13">struct <name pos:line="473" pos:column="20">IDebugExpressionEvaluator2Vtbl</name>
    <block pos:line="474" pos:column="5">{<public type="default" pos:line="474" pos:column="6">
        <function_decl><type><name pos:line="475" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="477" pos:column="9">HRESULT</name></type> ( <name pos:line="477" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="477" pos:column="37">*</type:modifier><name pos:line="477" pos:column="38">QueryInterface</name> )<parameter_list pos:line="477" pos:column="54">( 
            <param><decl><type><name pos:line="478" pos:column="13">IDebugExpressionEvaluator2</name> <type:modifier pos:line="478" pos:column="40">*</type:modifier></type> <name pos:line="478" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="479" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="479" pos:column="24">__RPC__in</name> <name pos:line="479" pos:column="34">REFIID</name></type> <name pos:line="479" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="480" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="481" pos:column="13">__RPC__deref_out</name>  <name pos:line="481" pos:column="31">void</name> <type:modifier pos:line="481" pos:column="36">*</type:modifier><type:modifier pos:line="481" pos:column="37">*</type:modifier></type><name pos:line="481" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="483" pos:column="9">ULONG</name></type> ( <name pos:line="483" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="483" pos:column="35">*</type:modifier><name pos:line="483" pos:column="36">AddRef</name> )<parameter_list pos:line="483" pos:column="44">( 
            <param><decl><type><name pos:line="484" pos:column="13">IDebugExpressionEvaluator2</name> <type:modifier pos:line="484" pos:column="40">*</type:modifier></type> <name pos:line="484" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="486" pos:column="9">ULONG</name></type> ( <name pos:line="486" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="486" pos:column="35">*</type:modifier><name pos:line="486" pos:column="36">Release</name> )<parameter_list pos:line="486" pos:column="45">( 
            <param><decl><type><name pos:line="487" pos:column="13">IDebugExpressionEvaluator2</name> <type:modifier pos:line="487" pos:column="40">*</type:modifier></type> <name pos:line="487" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="489" pos:column="9">HRESULT</name></type> ( <name pos:line="489" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="489" pos:column="37">*</type:modifier><name pos:line="489" pos:column="38">Parse</name> )<parameter_list pos:line="489" pos:column="45">( 
            <param><decl><type><name pos:line="490" pos:column="13">IDebugExpressionEvaluator2</name> <type:modifier pos:line="490" pos:column="40">*</type:modifier></type> <name pos:line="490" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="491" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="491" pos:column="24">__RPC__in</name> <name pos:line="491" pos:column="34">LPCOLESTR</name></type> <name pos:line="491" pos:column="44">upstrExpression</name></decl></param>,
            <comment type="block" pos:line="492" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="492" pos:column="24">PARSEFLAGS</name></type> <name pos:line="492" pos:column="35">dwFlags</name></decl></param>,
            <comment type="block" pos:line="493" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="493" pos:column="24">UINT</name></type> <name pos:line="493" pos:column="29">nRadix</name></decl></param>,
            <comment type="block" pos:line="494" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="494" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="494" pos:column="46">BSTR</name> <type:modifier pos:line="494" pos:column="51">*</type:modifier></type><name pos:line="494" pos:column="52">pbstrError</name></decl></param>,
            <comment type="block" pos:line="495" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="495" pos:column="25">__RPC__out</name> <name pos:line="495" pos:column="36">UINT</name> <type:modifier pos:line="495" pos:column="41">*</type:modifier></type><name pos:line="495" pos:column="42">pichError</name></decl></param>,
            <comment type="block" pos:line="496" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="496" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="496" pos:column="46">IDebugParsedExpression</name> <type:modifier pos:line="496" pos:column="69">*</type:modifier><type:modifier pos:line="496" pos:column="70">*</type:modifier></type><name pos:line="496" pos:column="71">ppParsedExpression</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="498" pos:column="9">HRESULT</name></type> ( <name pos:line="498" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="498" pos:column="37">*</type:modifier><name pos:line="498" pos:column="38">GetMethodProperty</name> )<parameter_list pos:line="498" pos:column="57">( 
            <param><decl><type><name pos:line="499" pos:column="13">IDebugExpressionEvaluator2</name> <type:modifier pos:line="499" pos:column="40">*</type:modifier></type> <name pos:line="499" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="500" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="500" pos:column="24">__RPC__in_opt</name> <name pos:line="500" pos:column="38">IDebugSymbolProvider</name> <type:modifier pos:line="500" pos:column="59">*</type:modifier></type><name pos:line="500" pos:column="60">pSymbolProvider</name></decl></param>,
            <comment type="block" pos:line="501" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="501" pos:column="24">__RPC__in_opt</name> <name pos:line="501" pos:column="38">IDebugAddress</name> <type:modifier pos:line="501" pos:column="52">*</type:modifier></type><name pos:line="501" pos:column="53">pAddress</name></decl></param>,
            <comment type="block" pos:line="502" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="502" pos:column="24">__RPC__in_opt</name> <name pos:line="502" pos:column="38">IDebugBinder</name> <type:modifier pos:line="502" pos:column="51">*</type:modifier></type><name pos:line="502" pos:column="52">pBinder</name></decl></param>,
            <comment type="block" pos:line="503" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="503" pos:column="24">BOOL</name></type> <name pos:line="503" pos:column="29">fIncludeHiddenLocals</name></decl></param>,
            <comment type="block" pos:line="504" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="504" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="504" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="504" pos:column="62">*</type:modifier><type:modifier pos:line="504" pos:column="63">*</type:modifier></type><name pos:line="504" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="506" pos:column="9">HRESULT</name></type> ( <name pos:line="506" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="506" pos:column="37">*</type:modifier><name pos:line="506" pos:column="38">GetMethodLocationProperty</name> )<parameter_list pos:line="506" pos:column="65">( 
            <param><decl><type><name pos:line="507" pos:column="13">IDebugExpressionEvaluator2</name> <type:modifier pos:line="507" pos:column="40">*</type:modifier></type> <name pos:line="507" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="508" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="508" pos:column="24">__RPC__in</name> <name pos:line="508" pos:column="34">LPCOLESTR</name></type> <name pos:line="508" pos:column="44">upstrFullyQualifiedMethodPlusOffset</name></decl></param>,
            <comment type="block" pos:line="509" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="509" pos:column="24">__RPC__in_opt</name> <name pos:line="509" pos:column="38">IDebugSymbolProvider</name> <type:modifier pos:line="509" pos:column="59">*</type:modifier></type><name pos:line="509" pos:column="60">pSymbolProvider</name></decl></param>,
            <comment type="block" pos:line="510" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="510" pos:column="24">__RPC__in_opt</name> <name pos:line="510" pos:column="38">IDebugAddress</name> <type:modifier pos:line="510" pos:column="52">*</type:modifier></type><name pos:line="510" pos:column="53">pAddress</name></decl></param>,
            <comment type="block" pos:line="511" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="511" pos:column="24">__RPC__in_opt</name> <name pos:line="511" pos:column="38">IDebugBinder</name> <type:modifier pos:line="511" pos:column="51">*</type:modifier></type><name pos:line="511" pos:column="52">pBinder</name></decl></param>,
            <comment type="block" pos:line="512" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="512" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="512" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="512" pos:column="62">*</type:modifier><type:modifier pos:line="512" pos:column="63">*</type:modifier></type><name pos:line="512" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="514" pos:column="9">HRESULT</name></type> ( <name pos:line="514" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="514" pos:column="37">*</type:modifier><name pos:line="514" pos:column="38">SetLocale</name> )<parameter_list pos:line="514" pos:column="49">( 
            <param><decl><type><name pos:line="515" pos:column="13">IDebugExpressionEvaluator2</name> <type:modifier pos:line="515" pos:column="40">*</type:modifier></type> <name pos:line="515" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="516" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="516" pos:column="24">WORD</name></type> <name pos:line="516" pos:column="29">wLangID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="518" pos:column="9">HRESULT</name></type> ( <name pos:line="518" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="518" pos:column="37">*</type:modifier><name pos:line="518" pos:column="38">SetRegistryRoot</name> )<parameter_list pos:line="518" pos:column="55">( 
            <param><decl><type><name pos:line="519" pos:column="13">IDebugExpressionEvaluator2</name> <type:modifier pos:line="519" pos:column="40">*</type:modifier></type> <name pos:line="519" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="520" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="520" pos:column="24">__RPC__in</name> <name pos:line="520" pos:column="34">LPCOLESTR</name></type> <name pos:line="520" pos:column="44">ustrRegistryRoot</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="522" pos:column="9">HRESULT</name></type> ( <name pos:line="522" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="522" pos:column="37">*</type:modifier><name pos:line="522" pos:column="38">SetCorPath</name> )<parameter_list pos:line="522" pos:column="50">( 
            <param><decl><type><name pos:line="523" pos:column="13">IDebugExpressionEvaluator2</name> <type:modifier pos:line="523" pos:column="40">*</type:modifier></type> <name pos:line="523" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="524" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="524" pos:column="24">__RPC__in</name> <name pos:line="524" pos:column="34">LPCOLESTR</name></type> <name pos:line="524" pos:column="44">pcstrCorPath</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="526" pos:column="9">HRESULT</name></type> ( <name pos:line="526" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="526" pos:column="37">*</type:modifier><name pos:line="526" pos:column="38">Terminate</name> )<parameter_list pos:line="526" pos:column="49">( 
            <param><decl><type><name pos:line="527" pos:column="13">IDebugExpressionEvaluator2</name> <type:modifier pos:line="527" pos:column="40">*</type:modifier></type> <name pos:line="527" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="529" pos:column="9">HRESULT</name></type> ( <name pos:line="529" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="529" pos:column="37">*</type:modifier><name pos:line="529" pos:column="38">SetCallback</name> )<parameter_list pos:line="529" pos:column="51">( 
            <param><decl><type><name pos:line="530" pos:column="13">IDebugExpressionEvaluator2</name> <type:modifier pos:line="530" pos:column="40">*</type:modifier></type> <name pos:line="530" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="531" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="531" pos:column="24">__RPC__in_opt</name> <name pos:line="531" pos:column="38">IDebugSettingsCallback2</name> <type:modifier pos:line="531" pos:column="62">*</type:modifier></type><name pos:line="531" pos:column="63">pCallback</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="533" pos:column="9">HRESULT</name></type> ( <name pos:line="533" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="533" pos:column="37">*</type:modifier><name pos:line="533" pos:column="38">PreloadModules</name> )<parameter_list pos:line="533" pos:column="54">( 
            <param><decl><type><name pos:line="534" pos:column="13">IDebugExpressionEvaluator2</name> <type:modifier pos:line="534" pos:column="40">*</type:modifier></type> <name pos:line="534" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="535" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="535" pos:column="24">__RPC__in_opt</name> <name pos:line="535" pos:column="38">IDebugSymbolProvider</name> <type:modifier pos:line="535" pos:column="59">*</type:modifier></type><name pos:line="535" pos:column="60">pSym</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="537" pos:column="9">HRESULT</name></type> ( <name pos:line="537" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="537" pos:column="37">*</type:modifier><name pos:line="537" pos:column="38">GetService</name> )<parameter_list pos:line="537" pos:column="50">( 
            <param><decl><type><name pos:line="538" pos:column="13">IDebugExpressionEvaluator2</name> <type:modifier pos:line="538" pos:column="40">*</type:modifier></type> <name pos:line="538" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="539" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="539" pos:column="24">GUID</name></type> <name pos:line="539" pos:column="29">uid</name></decl></param>,
            <comment type="block" pos:line="540" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="540" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="540" pos:column="46">IUnknown</name> <type:modifier pos:line="540" pos:column="55">*</type:modifier><type:modifier pos:line="540" pos:column="56">*</type:modifier></type><name pos:line="540" pos:column="57">ppService</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="542" pos:column="9">HRESULT</name></type> ( <name pos:line="542" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="542" pos:column="37">*</type:modifier><name pos:line="542" pos:column="38">SetIDebugIDECallback</name> )<parameter_list pos:line="542" pos:column="60">( 
            <param><decl><type><name pos:line="543" pos:column="13">IDebugExpressionEvaluator2</name> <type:modifier pos:line="543" pos:column="40">*</type:modifier></type> <name pos:line="543" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="544" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="544" pos:column="24">__RPC__in_opt</name> <name pos:line="544" pos:column="38">IDebugIDECallback</name> <type:modifier pos:line="544" pos:column="56">*</type:modifier></type><name pos:line="544" pos:column="57">pCallback</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="546" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="547" pos:column="7">IDebugExpressionEvaluator2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="549" pos:column="5">interface</name></type> <name pos:line="549" pos:column="15">IDebugExpressionEvaluator2</name>
    <argument_list pos:line="550" pos:column="5">{
        <argument><expr><name pos:line="551" pos:column="9">CONST_VTBL</name> struct <name pos:line="551" pos:column="27">IDebugExpressionEvaluator2Vtbl</name> <op:operator pos:line="551" pos:column="58">*</op:operator><name pos:line="551" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="556" pos:column="1">#<cpp:directive pos:line="556" pos:column="2">ifdef</cpp:directive> <name pos:line="556" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="559" pos:column="1">#<cpp:directive pos:line="559" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="559" pos:column="9">IDebugExpressionEvaluator2_QueryInterface</name><parameter_list pos:line="559" pos:column="50">(<param><type><name pos:line="559" pos:column="51">This</name></type></param>,<param><type><name pos:line="559" pos:column="56">riid</name></type></param>,<param><type><name pos:line="559" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="560" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="562" pos:column="1">#<cpp:directive pos:line="562" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="562" pos:column="9">IDebugExpressionEvaluator2_AddRef</name><parameter_list pos:line="562" pos:column="42">(<param><type><name pos:line="562" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="563" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="565" pos:column="1">#<cpp:directive pos:line="565" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="565" pos:column="9">IDebugExpressionEvaluator2_Release</name><parameter_list pos:line="565" pos:column="43">(<param><type><name pos:line="565" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="566" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="569" pos:column="1">#<cpp:directive pos:line="569" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="569" pos:column="9">IDebugExpressionEvaluator2_Parse</name><parameter_list pos:line="569" pos:column="41">(<param><type><name pos:line="569" pos:column="42">This</name></type></param>,<param><type><name pos:line="569" pos:column="47">upstrExpression</name></type></param>,<param><type><name pos:line="569" pos:column="63">dwFlags</name></type></param>,<param><type><name pos:line="569" pos:column="71">nRadix</name></type></param>,<param><type><name pos:line="569" pos:column="78">pbstrError</name></type></param>,<param><type><name pos:line="569" pos:column="89">pichError</name></type></param>,<param><type><name pos:line="569" pos:column="99">ppParsedExpression</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="570" pos:column="5">( (This)-&gt;lpVtbl -&gt; Parse(This,upstrExpression,dwFlags,nRadix,pbstrError,pichError,ppParsedExpression) )</cpp:value></cpp:define> 

<cpp:define pos:line="572" pos:column="1">#<cpp:directive pos:line="572" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="572" pos:column="9">IDebugExpressionEvaluator2_GetMethodProperty</name><parameter_list pos:line="572" pos:column="53">(<param><type><name pos:line="572" pos:column="54">This</name></type></param>,<param><type><name pos:line="572" pos:column="59">pSymbolProvider</name></type></param>,<param><type><name pos:line="572" pos:column="75">pAddress</name></type></param>,<param><type><name pos:line="572" pos:column="84">pBinder</name></type></param>,<param><type><name pos:line="572" pos:column="92">fIncludeHiddenLocals</name></type></param>,<param><type><name pos:line="572" pos:column="113">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="573" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMethodProperty(This,pSymbolProvider,pAddress,pBinder,fIncludeHiddenLocals,ppProperty) )</cpp:value></cpp:define> 

<cpp:define pos:line="575" pos:column="1">#<cpp:directive pos:line="575" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="575" pos:column="9">IDebugExpressionEvaluator2_GetMethodLocationProperty</name><parameter_list pos:line="575" pos:column="61">(<param><type><name pos:line="575" pos:column="62">This</name></type></param>,<param><type><name pos:line="575" pos:column="67">upstrFullyQualifiedMethodPlusOffset</name></type></param>,<param><type><name pos:line="575" pos:column="103">pSymbolProvider</name></type></param>,<param><type><name pos:line="575" pos:column="119">pAddress</name></type></param>,<param><type><name pos:line="575" pos:column="128">pBinder</name></type></param>,<param><type><name pos:line="575" pos:column="136">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="576" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMethodLocationProperty(This,upstrFullyQualifiedMethodPlusOffset,pSymbolProvider,pAddress,pBinder,ppProperty) )</cpp:value></cpp:define> 

<cpp:define pos:line="578" pos:column="1">#<cpp:directive pos:line="578" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="578" pos:column="9">IDebugExpressionEvaluator2_SetLocale</name><parameter_list pos:line="578" pos:column="45">(<param><type><name pos:line="578" pos:column="46">This</name></type></param>,<param><type><name pos:line="578" pos:column="51">wLangID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="579" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetLocale(This,wLangID) )</cpp:value></cpp:define> 

<cpp:define pos:line="581" pos:column="1">#<cpp:directive pos:line="581" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="581" pos:column="9">IDebugExpressionEvaluator2_SetRegistryRoot</name><parameter_list pos:line="581" pos:column="51">(<param><type><name pos:line="581" pos:column="52">This</name></type></param>,<param><type><name pos:line="581" pos:column="57">ustrRegistryRoot</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="582" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetRegistryRoot(This,ustrRegistryRoot) )</cpp:value></cpp:define> 


<cpp:define pos:line="585" pos:column="1">#<cpp:directive pos:line="585" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="585" pos:column="9">IDebugExpressionEvaluator2_SetCorPath</name><parameter_list pos:line="585" pos:column="46">(<param><type><name pos:line="585" pos:column="47">This</name></type></param>,<param><type><name pos:line="585" pos:column="52">pcstrCorPath</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="586" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetCorPath(This,pcstrCorPath) )</cpp:value></cpp:define> 

<cpp:define pos:line="588" pos:column="1">#<cpp:directive pos:line="588" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="588" pos:column="9">IDebugExpressionEvaluator2_Terminate</name><parameter_list pos:line="588" pos:column="45">(<param><type><name pos:line="588" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="589" pos:column="5">( (This)-&gt;lpVtbl -&gt; Terminate(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="591" pos:column="1">#<cpp:directive pos:line="591" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="591" pos:column="9">IDebugExpressionEvaluator2_SetCallback</name><parameter_list pos:line="591" pos:column="47">(<param><type><name pos:line="591" pos:column="48">This</name></type></param>,<param><type><name pos:line="591" pos:column="53">pCallback</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="592" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetCallback(This,pCallback) )</cpp:value></cpp:define> 

<cpp:define pos:line="594" pos:column="1">#<cpp:directive pos:line="594" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="594" pos:column="9">IDebugExpressionEvaluator2_PreloadModules</name><parameter_list pos:line="594" pos:column="50">(<param><type><name pos:line="594" pos:column="51">This</name></type></param>,<param><type><name pos:line="594" pos:column="56">pSym</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="595" pos:column="5">( (This)-&gt;lpVtbl -&gt; PreloadModules(This,pSym) )</cpp:value></cpp:define> 

<cpp:define pos:line="597" pos:column="1">#<cpp:directive pos:line="597" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="597" pos:column="9">IDebugExpressionEvaluator2_GetService</name><parameter_list pos:line="597" pos:column="46">(<param><type><name pos:line="597" pos:column="47">This</name></type></param>,<param><type><name pos:line="597" pos:column="52">uid</name></type></param>,<param><type><name pos:line="597" pos:column="56">ppService</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="598" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetService(This,uid,ppService) )</cpp:value></cpp:define> 

<cpp:define pos:line="600" pos:column="1">#<cpp:directive pos:line="600" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="600" pos:column="9">IDebugExpressionEvaluator2_SetIDebugIDECallback</name><parameter_list pos:line="600" pos:column="56">(<param><type><name pos:line="600" pos:column="57">This</name></type></param>,<param><type><name pos:line="600" pos:column="62">pCallback</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="601" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetIDebugIDECallback(This,pCallback) )</cpp:value></cpp:define> 

<cpp:endif pos:line="603" pos:column="1">#<cpp:directive pos:line="603" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="603" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="606" pos:column="1">#<cpp:directive pos:line="606" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="606" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="611" pos:column="1">#<cpp:directive pos:line="611" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="611" pos:column="9">/* __IDebugExpressionEvaluator2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="614" pos:column="1">#<cpp:directive pos:line="614" pos:column="2">ifndef</cpp:directive> <name pos:line="614" pos:column="9">__IDebugExpressionEvaluator3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="615" pos:column="1">#<cpp:directive pos:line="615" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="615" pos:column="9">__IDebugExpressionEvaluator3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="617" pos:column="1">/* interface IDebugExpressionEvaluator3 */</comment>
<comment type="block" pos:line="618" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="621" pos:column="1">EXTERN_C</name> <specifier pos:line="621" pos:column="10">const</specifier> <name pos:line="621" pos:column="16">IID</name></type> <name pos:line="621" pos:column="20">IID_IDebugExpressionEvaluator3</name></decl>;</decl_stmt>

<cpp:if pos:line="623" pos:column="1">#<cpp:directive pos:line="623" pos:column="2">if</cpp:directive> <expr><call><name pos:line="623" pos:column="5">defined</name><argument_list pos:line="623" pos:column="12">(<argument><expr><name pos:line="623" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="623" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="623" pos:column="29">!</op:operator><call><name pos:line="623" pos:column="30">defined</name><argument_list pos:line="623" pos:column="37">(<argument><expr><name pos:line="623" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="625" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="625" pos:column="19">(<argument pos:line="625" pos:column="20">"4C7EC6F5-BB6C-43a2-853C-80FF48B7A8A6"</argument>)</argument_list></macro>
    <label><name pos:line="626" pos:column="5">IDebugExpressionEvaluator3</name> :</label> <expr_stmt><expr pos:line="626" pos:column="34">public <name pos:line="626" pos:column="41">IDebugExpressionEvaluator2</name>
    <block pos:line="627" pos:column="5">{
    <expr pos:line="628" pos:column="5">public<op:operator pos:line="628" pos:column="11">:</op:operator>
        virtual <name pos:line="629" pos:column="17">HRESULT</name> <name pos:line="629" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="629" pos:column="43">Parse2</name><argument_list pos:line="629" pos:column="49">( 
            <comment type="block" pos:line="630" pos:column="13">/* [in] */</comment> <argument pos:line="630" pos:column="24">__RPC__in LPCOLESTR upstrExpression</argument>,
            <comment type="block" pos:line="631" pos:column="13">/* [in] */</comment> <argument pos:line="631" pos:column="24">PARSEFLAGS dwFlags</argument>,
            <comment type="block" pos:line="632" pos:column="13">/* [in] */</comment> <argument pos:line="632" pos:column="24">UINT nRadix</argument>,
            <comment type="block" pos:line="633" pos:column="13">/* [in] */</comment> <argument pos:line="633" pos:column="24">__RPC__in_opt IDebugSymbolProvider *pSymbolProvider</argument>,
            <comment type="block" pos:line="634" pos:column="13">/* [in] */</comment> <argument pos:line="634" pos:column="24">__RPC__in_opt IDebugAddress *pAddress</argument>,
            <comment type="block" pos:line="635" pos:column="13">/* [out] */</comment> <argument pos:line="635" pos:column="25">__RPC__deref_out_opt BSTR *pbstrError</argument>,
            <comment type="block" pos:line="636" pos:column="13">/* [out] */</comment> <argument pos:line="636" pos:column="25">__RPC__out UINT *pichError</argument>,
            <comment type="block" pos:line="637" pos:column="13">/* [out] */</comment> <argument pos:line="637" pos:column="25">__RPC__deref_out_opt IDebugParsedExpression **ppParsedExpression</argument>)</argument_list></macro> <op:operator pos:line="637" pos:column="91">=</op:operator> <lit:literal type="number" pos:line="637" pos:column="93">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="641" pos:column="1">#<cpp:directive pos:line="641" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="641" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="643" pos:column="5">typedef <type><struct pos:line="643" pos:column="13">struct <name pos:line="643" pos:column="20">IDebugExpressionEvaluator3Vtbl</name>
    <block pos:line="644" pos:column="5">{<public type="default" pos:line="644" pos:column="6">
        <function_decl><type><name pos:line="645" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="647" pos:column="9">HRESULT</name></type> ( <name pos:line="647" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="647" pos:column="37">*</type:modifier><name pos:line="647" pos:column="38">QueryInterface</name> )<parameter_list pos:line="647" pos:column="54">( 
            <param><decl><type><name pos:line="648" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="648" pos:column="40">*</type:modifier></type> <name pos:line="648" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="649" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="649" pos:column="24">__RPC__in</name> <name pos:line="649" pos:column="34">REFIID</name></type> <name pos:line="649" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="650" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="651" pos:column="13">__RPC__deref_out</name>  <name pos:line="651" pos:column="31">void</name> <type:modifier pos:line="651" pos:column="36">*</type:modifier><type:modifier pos:line="651" pos:column="37">*</type:modifier></type><name pos:line="651" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="653" pos:column="9">ULONG</name></type> ( <name pos:line="653" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="653" pos:column="35">*</type:modifier><name pos:line="653" pos:column="36">AddRef</name> )<parameter_list pos:line="653" pos:column="44">( 
            <param><decl><type><name pos:line="654" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="654" pos:column="40">*</type:modifier></type> <name pos:line="654" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="656" pos:column="9">ULONG</name></type> ( <name pos:line="656" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="656" pos:column="35">*</type:modifier><name pos:line="656" pos:column="36">Release</name> )<parameter_list pos:line="656" pos:column="45">( 
            <param><decl><type><name pos:line="657" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="657" pos:column="40">*</type:modifier></type> <name pos:line="657" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="659" pos:column="9">HRESULT</name></type> ( <name pos:line="659" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="659" pos:column="37">*</type:modifier><name pos:line="659" pos:column="38">Parse</name> )<parameter_list pos:line="659" pos:column="45">( 
            <param><decl><type><name pos:line="660" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="660" pos:column="40">*</type:modifier></type> <name pos:line="660" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="661" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="661" pos:column="24">__RPC__in</name> <name pos:line="661" pos:column="34">LPCOLESTR</name></type> <name pos:line="661" pos:column="44">upstrExpression</name></decl></param>,
            <comment type="block" pos:line="662" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="662" pos:column="24">PARSEFLAGS</name></type> <name pos:line="662" pos:column="35">dwFlags</name></decl></param>,
            <comment type="block" pos:line="663" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="663" pos:column="24">UINT</name></type> <name pos:line="663" pos:column="29">nRadix</name></decl></param>,
            <comment type="block" pos:line="664" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="664" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="664" pos:column="46">BSTR</name> <type:modifier pos:line="664" pos:column="51">*</type:modifier></type><name pos:line="664" pos:column="52">pbstrError</name></decl></param>,
            <comment type="block" pos:line="665" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="665" pos:column="25">__RPC__out</name> <name pos:line="665" pos:column="36">UINT</name> <type:modifier pos:line="665" pos:column="41">*</type:modifier></type><name pos:line="665" pos:column="42">pichError</name></decl></param>,
            <comment type="block" pos:line="666" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="666" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="666" pos:column="46">IDebugParsedExpression</name> <type:modifier pos:line="666" pos:column="69">*</type:modifier><type:modifier pos:line="666" pos:column="70">*</type:modifier></type><name pos:line="666" pos:column="71">ppParsedExpression</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="668" pos:column="9">HRESULT</name></type> ( <name pos:line="668" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="668" pos:column="37">*</type:modifier><name pos:line="668" pos:column="38">GetMethodProperty</name> )<parameter_list pos:line="668" pos:column="57">( 
            <param><decl><type><name pos:line="669" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="669" pos:column="40">*</type:modifier></type> <name pos:line="669" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="670" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="670" pos:column="24">__RPC__in_opt</name> <name pos:line="670" pos:column="38">IDebugSymbolProvider</name> <type:modifier pos:line="670" pos:column="59">*</type:modifier></type><name pos:line="670" pos:column="60">pSymbolProvider</name></decl></param>,
            <comment type="block" pos:line="671" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="671" pos:column="24">__RPC__in_opt</name> <name pos:line="671" pos:column="38">IDebugAddress</name> <type:modifier pos:line="671" pos:column="52">*</type:modifier></type><name pos:line="671" pos:column="53">pAddress</name></decl></param>,
            <comment type="block" pos:line="672" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="672" pos:column="24">__RPC__in_opt</name> <name pos:line="672" pos:column="38">IDebugBinder</name> <type:modifier pos:line="672" pos:column="51">*</type:modifier></type><name pos:line="672" pos:column="52">pBinder</name></decl></param>,
            <comment type="block" pos:line="673" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="673" pos:column="24">BOOL</name></type> <name pos:line="673" pos:column="29">fIncludeHiddenLocals</name></decl></param>,
            <comment type="block" pos:line="674" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="674" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="674" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="674" pos:column="62">*</type:modifier><type:modifier pos:line="674" pos:column="63">*</type:modifier></type><name pos:line="674" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="676" pos:column="9">HRESULT</name></type> ( <name pos:line="676" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="676" pos:column="37">*</type:modifier><name pos:line="676" pos:column="38">GetMethodLocationProperty</name> )<parameter_list pos:line="676" pos:column="65">( 
            <param><decl><type><name pos:line="677" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="677" pos:column="40">*</type:modifier></type> <name pos:line="677" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="678" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="678" pos:column="24">__RPC__in</name> <name pos:line="678" pos:column="34">LPCOLESTR</name></type> <name pos:line="678" pos:column="44">upstrFullyQualifiedMethodPlusOffset</name></decl></param>,
            <comment type="block" pos:line="679" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="679" pos:column="24">__RPC__in_opt</name> <name pos:line="679" pos:column="38">IDebugSymbolProvider</name> <type:modifier pos:line="679" pos:column="59">*</type:modifier></type><name pos:line="679" pos:column="60">pSymbolProvider</name></decl></param>,
            <comment type="block" pos:line="680" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="680" pos:column="24">__RPC__in_opt</name> <name pos:line="680" pos:column="38">IDebugAddress</name> <type:modifier pos:line="680" pos:column="52">*</type:modifier></type><name pos:line="680" pos:column="53">pAddress</name></decl></param>,
            <comment type="block" pos:line="681" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="681" pos:column="24">__RPC__in_opt</name> <name pos:line="681" pos:column="38">IDebugBinder</name> <type:modifier pos:line="681" pos:column="51">*</type:modifier></type><name pos:line="681" pos:column="52">pBinder</name></decl></param>,
            <comment type="block" pos:line="682" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="682" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="682" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="682" pos:column="62">*</type:modifier><type:modifier pos:line="682" pos:column="63">*</type:modifier></type><name pos:line="682" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="684" pos:column="9">HRESULT</name></type> ( <name pos:line="684" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="684" pos:column="37">*</type:modifier><name pos:line="684" pos:column="38">SetLocale</name> )<parameter_list pos:line="684" pos:column="49">( 
            <param><decl><type><name pos:line="685" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="685" pos:column="40">*</type:modifier></type> <name pos:line="685" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="686" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="686" pos:column="24">WORD</name></type> <name pos:line="686" pos:column="29">wLangID</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="688" pos:column="9">HRESULT</name></type> ( <name pos:line="688" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="688" pos:column="37">*</type:modifier><name pos:line="688" pos:column="38">SetRegistryRoot</name> )<parameter_list pos:line="688" pos:column="55">( 
            <param><decl><type><name pos:line="689" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="689" pos:column="40">*</type:modifier></type> <name pos:line="689" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="690" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="690" pos:column="24">__RPC__in</name> <name pos:line="690" pos:column="34">LPCOLESTR</name></type> <name pos:line="690" pos:column="44">ustrRegistryRoot</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="692" pos:column="9">HRESULT</name></type> ( <name pos:line="692" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="692" pos:column="37">*</type:modifier><name pos:line="692" pos:column="38">SetCorPath</name> )<parameter_list pos:line="692" pos:column="50">( 
            <param><decl><type><name pos:line="693" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="693" pos:column="40">*</type:modifier></type> <name pos:line="693" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="694" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="694" pos:column="24">__RPC__in</name> <name pos:line="694" pos:column="34">LPCOLESTR</name></type> <name pos:line="694" pos:column="44">pcstrCorPath</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="696" pos:column="9">HRESULT</name></type> ( <name pos:line="696" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="696" pos:column="37">*</type:modifier><name pos:line="696" pos:column="38">Terminate</name> )<parameter_list pos:line="696" pos:column="49">( 
            <param><decl><type><name pos:line="697" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="697" pos:column="40">*</type:modifier></type> <name pos:line="697" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="699" pos:column="9">HRESULT</name></type> ( <name pos:line="699" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="699" pos:column="37">*</type:modifier><name pos:line="699" pos:column="38">SetCallback</name> )<parameter_list pos:line="699" pos:column="51">( 
            <param><decl><type><name pos:line="700" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="700" pos:column="40">*</type:modifier></type> <name pos:line="700" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="701" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="701" pos:column="24">__RPC__in_opt</name> <name pos:line="701" pos:column="38">IDebugSettingsCallback2</name> <type:modifier pos:line="701" pos:column="62">*</type:modifier></type><name pos:line="701" pos:column="63">pCallback</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="703" pos:column="9">HRESULT</name></type> ( <name pos:line="703" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="703" pos:column="37">*</type:modifier><name pos:line="703" pos:column="38">PreloadModules</name> )<parameter_list pos:line="703" pos:column="54">( 
            <param><decl><type><name pos:line="704" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="704" pos:column="40">*</type:modifier></type> <name pos:line="704" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="705" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="705" pos:column="24">__RPC__in_opt</name> <name pos:line="705" pos:column="38">IDebugSymbolProvider</name> <type:modifier pos:line="705" pos:column="59">*</type:modifier></type><name pos:line="705" pos:column="60">pSym</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="707" pos:column="9">HRESULT</name></type> ( <name pos:line="707" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="707" pos:column="37">*</type:modifier><name pos:line="707" pos:column="38">GetService</name> )<parameter_list pos:line="707" pos:column="50">( 
            <param><decl><type><name pos:line="708" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="708" pos:column="40">*</type:modifier></type> <name pos:line="708" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="709" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="709" pos:column="24">GUID</name></type> <name pos:line="709" pos:column="29">uid</name></decl></param>,
            <comment type="block" pos:line="710" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="710" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="710" pos:column="46">IUnknown</name> <type:modifier pos:line="710" pos:column="55">*</type:modifier><type:modifier pos:line="710" pos:column="56">*</type:modifier></type><name pos:line="710" pos:column="57">ppService</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="712" pos:column="9">HRESULT</name></type> ( <name pos:line="712" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="712" pos:column="37">*</type:modifier><name pos:line="712" pos:column="38">SetIDebugIDECallback</name> )<parameter_list pos:line="712" pos:column="60">( 
            <param><decl><type><name pos:line="713" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="713" pos:column="40">*</type:modifier></type> <name pos:line="713" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="714" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="714" pos:column="24">__RPC__in_opt</name> <name pos:line="714" pos:column="38">IDebugIDECallback</name> <type:modifier pos:line="714" pos:column="56">*</type:modifier></type><name pos:line="714" pos:column="57">pCallback</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="716" pos:column="9">HRESULT</name></type> ( <name pos:line="716" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="716" pos:column="37">*</type:modifier><name pos:line="716" pos:column="38">Parse2</name> )<parameter_list pos:line="716" pos:column="46">( 
            <param><decl><type><name pos:line="717" pos:column="13">IDebugExpressionEvaluator3</name> <type:modifier pos:line="717" pos:column="40">*</type:modifier></type> <name pos:line="717" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="718" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="718" pos:column="24">__RPC__in</name> <name pos:line="718" pos:column="34">LPCOLESTR</name></type> <name pos:line="718" pos:column="44">upstrExpression</name></decl></param>,
            <comment type="block" pos:line="719" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="719" pos:column="24">PARSEFLAGS</name></type> <name pos:line="719" pos:column="35">dwFlags</name></decl></param>,
            <comment type="block" pos:line="720" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="720" pos:column="24">UINT</name></type> <name pos:line="720" pos:column="29">nRadix</name></decl></param>,
            <comment type="block" pos:line="721" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="721" pos:column="24">__RPC__in_opt</name> <name pos:line="721" pos:column="38">IDebugSymbolProvider</name> <type:modifier pos:line="721" pos:column="59">*</type:modifier></type><name pos:line="721" pos:column="60">pSymbolProvider</name></decl></param>,
            <comment type="block" pos:line="722" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="722" pos:column="24">__RPC__in_opt</name> <name pos:line="722" pos:column="38">IDebugAddress</name> <type:modifier pos:line="722" pos:column="52">*</type:modifier></type><name pos:line="722" pos:column="53">pAddress</name></decl></param>,
            <comment type="block" pos:line="723" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="723" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="723" pos:column="46">BSTR</name> <type:modifier pos:line="723" pos:column="51">*</type:modifier></type><name pos:line="723" pos:column="52">pbstrError</name></decl></param>,
            <comment type="block" pos:line="724" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="724" pos:column="25">__RPC__out</name> <name pos:line="724" pos:column="36">UINT</name> <type:modifier pos:line="724" pos:column="41">*</type:modifier></type><name pos:line="724" pos:column="42">pichError</name></decl></param>,
            <comment type="block" pos:line="725" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="725" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="725" pos:column="46">IDebugParsedExpression</name> <type:modifier pos:line="725" pos:column="69">*</type:modifier><type:modifier pos:line="725" pos:column="70">*</type:modifier></type><name pos:line="725" pos:column="71">ppParsedExpression</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="727" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="728" pos:column="7">IDebugExpressionEvaluator3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="730" pos:column="5">interface</name></type> <name pos:line="730" pos:column="15">IDebugExpressionEvaluator3</name>
    <argument_list pos:line="731" pos:column="5">{
        <argument><expr><name pos:line="732" pos:column="9">CONST_VTBL</name> struct <name pos:line="732" pos:column="27">IDebugExpressionEvaluator3Vtbl</name> <op:operator pos:line="732" pos:column="58">*</op:operator><name pos:line="732" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="737" pos:column="1">#<cpp:directive pos:line="737" pos:column="2">ifdef</cpp:directive> <name pos:line="737" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="740" pos:column="1">#<cpp:directive pos:line="740" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="740" pos:column="9">IDebugExpressionEvaluator3_QueryInterface</name><parameter_list pos:line="740" pos:column="50">(<param><type><name pos:line="740" pos:column="51">This</name></type></param>,<param><type><name pos:line="740" pos:column="56">riid</name></type></param>,<param><type><name pos:line="740" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="741" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="743" pos:column="1">#<cpp:directive pos:line="743" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="743" pos:column="9">IDebugExpressionEvaluator3_AddRef</name><parameter_list pos:line="743" pos:column="42">(<param><type><name pos:line="743" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="744" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="746" pos:column="1">#<cpp:directive pos:line="746" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="746" pos:column="9">IDebugExpressionEvaluator3_Release</name><parameter_list pos:line="746" pos:column="43">(<param><type><name pos:line="746" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="747" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="750" pos:column="1">#<cpp:directive pos:line="750" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="750" pos:column="9">IDebugExpressionEvaluator3_Parse</name><parameter_list pos:line="750" pos:column="41">(<param><type><name pos:line="750" pos:column="42">This</name></type></param>,<param><type><name pos:line="750" pos:column="47">upstrExpression</name></type></param>,<param><type><name pos:line="750" pos:column="63">dwFlags</name></type></param>,<param><type><name pos:line="750" pos:column="71">nRadix</name></type></param>,<param><type><name pos:line="750" pos:column="78">pbstrError</name></type></param>,<param><type><name pos:line="750" pos:column="89">pichError</name></type></param>,<param><type><name pos:line="750" pos:column="99">ppParsedExpression</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="751" pos:column="5">( (This)-&gt;lpVtbl -&gt; Parse(This,upstrExpression,dwFlags,nRadix,pbstrError,pichError,ppParsedExpression) )</cpp:value></cpp:define> 

<cpp:define pos:line="753" pos:column="1">#<cpp:directive pos:line="753" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="753" pos:column="9">IDebugExpressionEvaluator3_GetMethodProperty</name><parameter_list pos:line="753" pos:column="53">(<param><type><name pos:line="753" pos:column="54">This</name></type></param>,<param><type><name pos:line="753" pos:column="59">pSymbolProvider</name></type></param>,<param><type><name pos:line="753" pos:column="75">pAddress</name></type></param>,<param><type><name pos:line="753" pos:column="84">pBinder</name></type></param>,<param><type><name pos:line="753" pos:column="92">fIncludeHiddenLocals</name></type></param>,<param><type><name pos:line="753" pos:column="113">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="754" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMethodProperty(This,pSymbolProvider,pAddress,pBinder,fIncludeHiddenLocals,ppProperty) )</cpp:value></cpp:define> 

<cpp:define pos:line="756" pos:column="1">#<cpp:directive pos:line="756" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="756" pos:column="9">IDebugExpressionEvaluator3_GetMethodLocationProperty</name><parameter_list pos:line="756" pos:column="61">(<param><type><name pos:line="756" pos:column="62">This</name></type></param>,<param><type><name pos:line="756" pos:column="67">upstrFullyQualifiedMethodPlusOffset</name></type></param>,<param><type><name pos:line="756" pos:column="103">pSymbolProvider</name></type></param>,<param><type><name pos:line="756" pos:column="119">pAddress</name></type></param>,<param><type><name pos:line="756" pos:column="128">pBinder</name></type></param>,<param><type><name pos:line="756" pos:column="136">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="757" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMethodLocationProperty(This,upstrFullyQualifiedMethodPlusOffset,pSymbolProvider,pAddress,pBinder,ppProperty) )</cpp:value></cpp:define> 

<cpp:define pos:line="759" pos:column="1">#<cpp:directive pos:line="759" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="759" pos:column="9">IDebugExpressionEvaluator3_SetLocale</name><parameter_list pos:line="759" pos:column="45">(<param><type><name pos:line="759" pos:column="46">This</name></type></param>,<param><type><name pos:line="759" pos:column="51">wLangID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="760" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetLocale(This,wLangID) )</cpp:value></cpp:define> 

<cpp:define pos:line="762" pos:column="1">#<cpp:directive pos:line="762" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="762" pos:column="9">IDebugExpressionEvaluator3_SetRegistryRoot</name><parameter_list pos:line="762" pos:column="51">(<param><type><name pos:line="762" pos:column="52">This</name></type></param>,<param><type><name pos:line="762" pos:column="57">ustrRegistryRoot</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="763" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetRegistryRoot(This,ustrRegistryRoot) )</cpp:value></cpp:define> 


<cpp:define pos:line="766" pos:column="1">#<cpp:directive pos:line="766" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="766" pos:column="9">IDebugExpressionEvaluator3_SetCorPath</name><parameter_list pos:line="766" pos:column="46">(<param><type><name pos:line="766" pos:column="47">This</name></type></param>,<param><type><name pos:line="766" pos:column="52">pcstrCorPath</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="767" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetCorPath(This,pcstrCorPath) )</cpp:value></cpp:define> 

<cpp:define pos:line="769" pos:column="1">#<cpp:directive pos:line="769" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="769" pos:column="9">IDebugExpressionEvaluator3_Terminate</name><parameter_list pos:line="769" pos:column="45">(<param><type><name pos:line="769" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="770" pos:column="5">( (This)-&gt;lpVtbl -&gt; Terminate(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="772" pos:column="1">#<cpp:directive pos:line="772" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="772" pos:column="9">IDebugExpressionEvaluator3_SetCallback</name><parameter_list pos:line="772" pos:column="47">(<param><type><name pos:line="772" pos:column="48">This</name></type></param>,<param><type><name pos:line="772" pos:column="53">pCallback</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="773" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetCallback(This,pCallback) )</cpp:value></cpp:define> 

<cpp:define pos:line="775" pos:column="1">#<cpp:directive pos:line="775" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="775" pos:column="9">IDebugExpressionEvaluator3_PreloadModules</name><parameter_list pos:line="775" pos:column="50">(<param><type><name pos:line="775" pos:column="51">This</name></type></param>,<param><type><name pos:line="775" pos:column="56">pSym</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="776" pos:column="5">( (This)-&gt;lpVtbl -&gt; PreloadModules(This,pSym) )</cpp:value></cpp:define> 

<cpp:define pos:line="778" pos:column="1">#<cpp:directive pos:line="778" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="778" pos:column="9">IDebugExpressionEvaluator3_GetService</name><parameter_list pos:line="778" pos:column="46">(<param><type><name pos:line="778" pos:column="47">This</name></type></param>,<param><type><name pos:line="778" pos:column="52">uid</name></type></param>,<param><type><name pos:line="778" pos:column="56">ppService</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="779" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetService(This,uid,ppService) )</cpp:value></cpp:define> 

<cpp:define pos:line="781" pos:column="1">#<cpp:directive pos:line="781" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="781" pos:column="9">IDebugExpressionEvaluator3_SetIDebugIDECallback</name><parameter_list pos:line="781" pos:column="56">(<param><type><name pos:line="781" pos:column="57">This</name></type></param>,<param><type><name pos:line="781" pos:column="62">pCallback</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="782" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetIDebugIDECallback(This,pCallback) )</cpp:value></cpp:define> 


<cpp:define pos:line="785" pos:column="1">#<cpp:directive pos:line="785" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="785" pos:column="9">IDebugExpressionEvaluator3_Parse2</name><parameter_list pos:line="785" pos:column="42">(<param><type><name pos:line="785" pos:column="43">This</name></type></param>,<param><type><name pos:line="785" pos:column="48">upstrExpression</name></type></param>,<param><type><name pos:line="785" pos:column="64">dwFlags</name></type></param>,<param><type><name pos:line="785" pos:column="72">nRadix</name></type></param>,<param><type><name pos:line="785" pos:column="79">pSymbolProvider</name></type></param>,<param><type><name pos:line="785" pos:column="95">pAddress</name></type></param>,<param><type><name pos:line="785" pos:column="104">pbstrError</name></type></param>,<param><type><name pos:line="785" pos:column="115">pichError</name></type></param>,<param><type><name pos:line="785" pos:column="125">ppParsedExpression</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="786" pos:column="5">( (This)-&gt;lpVtbl -&gt; Parse2(This,upstrExpression,dwFlags,nRadix,pSymbolProvider,pAddress,pbstrError,pichError,ppParsedExpression) )</cpp:value></cpp:define> 

<cpp:endif pos:line="788" pos:column="1">#<cpp:directive pos:line="788" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="788" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="791" pos:column="1">#<cpp:directive pos:line="791" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="791" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="796" pos:column="1">#<cpp:directive pos:line="796" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="796" pos:column="9">/* __IDebugExpressionEvaluator3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="799" pos:column="1">#<cpp:directive pos:line="799" pos:column="2">ifndef</cpp:directive> <name pos:line="799" pos:column="9">__IDebugIDECallback_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="800" pos:column="1">#<cpp:directive pos:line="800" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="800" pos:column="9">__IDebugIDECallback_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="802" pos:column="1">/* interface IDebugIDECallback */</comment>
<comment type="block" pos:line="803" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="806" pos:column="1">EXTERN_C</name> <specifier pos:line="806" pos:column="10">const</specifier> <name pos:line="806" pos:column="16">IID</name></type> <name pos:line="806" pos:column="20">IID_IDebugIDECallback</name></decl>;</decl_stmt>

<cpp:if pos:line="808" pos:column="1">#<cpp:directive pos:line="808" pos:column="2">if</cpp:directive> <expr><call><name pos:line="808" pos:column="5">defined</name><argument_list pos:line="808" pos:column="12">(<argument><expr><name pos:line="808" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="808" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="808" pos:column="29">!</op:operator><call><name pos:line="808" pos:column="30">defined</name><argument_list pos:line="808" pos:column="37">(<argument><expr><name pos:line="808" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="810" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="810" pos:column="19">(<argument pos:line="810" pos:column="20">"B78C9E91-DD39-4e5b-BB7B-30B88149B2FE"</argument>)</argument_list></macro>
    <label><name pos:line="811" pos:column="5">IDebugIDECallback</name> :</label> <expr_stmt><expr pos:line="811" pos:column="25">public <name pos:line="811" pos:column="32">IUnknown</name>
    <block pos:line="812" pos:column="5">{
    <expr pos:line="813" pos:column="5">public<op:operator pos:line="813" pos:column="11">:</op:operator>
        virtual <name pos:line="814" pos:column="17">HRESULT</name> <name pos:line="814" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="814" pos:column="43">DisplayMessage</name><argument_list pos:line="814" pos:column="57">( 
            <comment type="block" pos:line="815" pos:column="13">/* [in] */</comment> <argument pos:line="815" pos:column="24">__RPC__in LPCOLESTR szMessage</argument>)</argument_list></macro> <op:operator pos:line="815" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="815" pos:column="57">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="819" pos:column="1">#<cpp:directive pos:line="819" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="819" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="821" pos:column="5">typedef <type><struct pos:line="821" pos:column="13">struct <name pos:line="821" pos:column="20">IDebugIDECallbackVtbl</name>
    <block pos:line="822" pos:column="5">{<public type="default" pos:line="822" pos:column="6">
        <function_decl><type><name pos:line="823" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="825" pos:column="9">HRESULT</name></type> ( <name pos:line="825" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="825" pos:column="37">*</type:modifier><name pos:line="825" pos:column="38">QueryInterface</name> )<parameter_list pos:line="825" pos:column="54">( 
            <param><decl><type><name pos:line="826" pos:column="13">IDebugIDECallback</name> <type:modifier pos:line="826" pos:column="31">*</type:modifier></type> <name pos:line="826" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="827" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="827" pos:column="24">__RPC__in</name> <name pos:line="827" pos:column="34">REFIID</name></type> <name pos:line="827" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="828" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="829" pos:column="13">__RPC__deref_out</name>  <name pos:line="829" pos:column="31">void</name> <type:modifier pos:line="829" pos:column="36">*</type:modifier><type:modifier pos:line="829" pos:column="37">*</type:modifier></type><name pos:line="829" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="831" pos:column="9">ULONG</name></type> ( <name pos:line="831" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="831" pos:column="35">*</type:modifier><name pos:line="831" pos:column="36">AddRef</name> )<parameter_list pos:line="831" pos:column="44">( 
            <param><decl><type><name pos:line="832" pos:column="13">IDebugIDECallback</name> <type:modifier pos:line="832" pos:column="31">*</type:modifier></type> <name pos:line="832" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="834" pos:column="9">ULONG</name></type> ( <name pos:line="834" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="834" pos:column="35">*</type:modifier><name pos:line="834" pos:column="36">Release</name> )<parameter_list pos:line="834" pos:column="45">( 
            <param><decl><type><name pos:line="835" pos:column="13">IDebugIDECallback</name> <type:modifier pos:line="835" pos:column="31">*</type:modifier></type> <name pos:line="835" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="837" pos:column="9">HRESULT</name></type> ( <name pos:line="837" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="837" pos:column="37">*</type:modifier><name pos:line="837" pos:column="38">DisplayMessage</name> )<parameter_list pos:line="837" pos:column="54">( 
            <param><decl><type><name pos:line="838" pos:column="13">IDebugIDECallback</name> <type:modifier pos:line="838" pos:column="31">*</type:modifier></type> <name pos:line="838" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="839" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="839" pos:column="24">__RPC__in</name> <name pos:line="839" pos:column="34">LPCOLESTR</name></type> <name pos:line="839" pos:column="44">szMessage</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="841" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="842" pos:column="7">IDebugIDECallbackVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="844" pos:column="5">interface</name></type> <name pos:line="844" pos:column="15">IDebugIDECallback</name>
    <argument_list pos:line="845" pos:column="5">{
        <argument><expr><name pos:line="846" pos:column="9">CONST_VTBL</name> struct <name pos:line="846" pos:column="27">IDebugIDECallbackVtbl</name> <op:operator pos:line="846" pos:column="49">*</op:operator><name pos:line="846" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="851" pos:column="1">#<cpp:directive pos:line="851" pos:column="2">ifdef</cpp:directive> <name pos:line="851" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="854" pos:column="1">#<cpp:directive pos:line="854" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="854" pos:column="9">IDebugIDECallback_QueryInterface</name><parameter_list pos:line="854" pos:column="41">(<param><type><name pos:line="854" pos:column="42">This</name></type></param>,<param><type><name pos:line="854" pos:column="47">riid</name></type></param>,<param><type><name pos:line="854" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="855" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="857" pos:column="1">#<cpp:directive pos:line="857" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="857" pos:column="9">IDebugIDECallback_AddRef</name><parameter_list pos:line="857" pos:column="33">(<param><type><name pos:line="857" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="858" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="860" pos:column="1">#<cpp:directive pos:line="860" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="860" pos:column="9">IDebugIDECallback_Release</name><parameter_list pos:line="860" pos:column="34">(<param><type><name pos:line="860" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="861" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="864" pos:column="1">#<cpp:directive pos:line="864" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="864" pos:column="9">IDebugIDECallback_DisplayMessage</name><parameter_list pos:line="864" pos:column="41">(<param><type><name pos:line="864" pos:column="42">This</name></type></param>,<param><type><name pos:line="864" pos:column="47">szMessage</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="865" pos:column="5">( (This)-&gt;lpVtbl -&gt; DisplayMessage(This,szMessage) )</cpp:value></cpp:define> 

<cpp:endif pos:line="867" pos:column="1">#<cpp:directive pos:line="867" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="867" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="870" pos:column="1">#<cpp:directive pos:line="870" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="870" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="875" pos:column="1">#<cpp:directive pos:line="875" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="875" pos:column="9">/* __IDebugIDECallback_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="878" pos:column="1">#<cpp:directive pos:line="878" pos:column="2">ifndef</cpp:directive> <name pos:line="878" pos:column="9">__IDebugIteratorFrameProvider_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="879" pos:column="1">#<cpp:directive pos:line="879" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="879" pos:column="9">__IDebugIteratorFrameProvider_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="881" pos:column="1">/* interface IDebugIteratorFrameProvider */</comment>
<comment type="block" pos:line="882" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="885" pos:column="1">EXTERN_C</name> <specifier pos:line="885" pos:column="10">const</specifier> <name pos:line="885" pos:column="16">IID</name></type> <name pos:line="885" pos:column="20">IID_IDebugIteratorFrameProvider</name></decl>;</decl_stmt>

<cpp:if pos:line="887" pos:column="1">#<cpp:directive pos:line="887" pos:column="2">if</cpp:directive> <expr><call><name pos:line="887" pos:column="5">defined</name><argument_list pos:line="887" pos:column="12">(<argument><expr><name pos:line="887" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="887" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="887" pos:column="29">!</op:operator><call><name pos:line="887" pos:column="30">defined</name><argument_list pos:line="887" pos:column="37">(<argument><expr><name pos:line="887" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="889" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="889" pos:column="19">(<argument pos:line="889" pos:column="20">"A38EF241-AF3E-49a9-8533-0E35B6794D40"</argument>)</argument_list></macro>
    <label><name pos:line="890" pos:column="5">IDebugIteratorFrameProvider</name> :</label> <expr_stmt><expr pos:line="890" pos:column="35">public <name pos:line="890" pos:column="42">IUnknown</name>
    <block pos:line="891" pos:column="5">{
    <expr pos:line="892" pos:column="5">public<op:operator pos:line="892" pos:column="11">:</op:operator>
        virtual <name pos:line="893" pos:column="17">HRESULT</name> <name pos:line="893" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="893" pos:column="43">GetIteratorFrames</name><argument_list pos:line="893" pos:column="60">( 
            <comment type="block" pos:line="894" pos:column="13">/* [in] */</comment> <argument pos:line="894" pos:column="24">__RPC__in_opt IDebugAddress *pAddress</argument>,
            <comment type="block" pos:line="895" pos:column="13">/* [in] */</comment> <argument pos:line="895" pos:column="24">__RPC__in_opt IDebugBinderDirect *pBinder</argument>,
            <comment type="block" pos:line="896" pos:column="13">/* [in] */</comment> <argument pos:line="896" pos:column="24">__RPC__in_opt IDebugComPlusSymbolProvider *pSym</argument>,
            <comment type="block" pos:line="897" pos:column="13">/* [out] */</comment> <argument pos:line="897" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppProperty</argument>)</argument_list></macro> <op:operator pos:line="897" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="897" pos:column="78">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="901" pos:column="1">#<cpp:directive pos:line="901" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="901" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="903" pos:column="5">typedef <type><struct pos:line="903" pos:column="13">struct <name pos:line="903" pos:column="20">IDebugIteratorFrameProviderVtbl</name>
    <block pos:line="904" pos:column="5">{<public type="default" pos:line="904" pos:column="6">
        <function_decl><type><name pos:line="905" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="907" pos:column="9">HRESULT</name></type> ( <name pos:line="907" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="907" pos:column="37">*</type:modifier><name pos:line="907" pos:column="38">QueryInterface</name> )<parameter_list pos:line="907" pos:column="54">( 
            <param><decl><type><name pos:line="908" pos:column="13">IDebugIteratorFrameProvider</name> <type:modifier pos:line="908" pos:column="41">*</type:modifier></type> <name pos:line="908" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="909" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="909" pos:column="24">__RPC__in</name> <name pos:line="909" pos:column="34">REFIID</name></type> <name pos:line="909" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="910" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="911" pos:column="13">__RPC__deref_out</name>  <name pos:line="911" pos:column="31">void</name> <type:modifier pos:line="911" pos:column="36">*</type:modifier><type:modifier pos:line="911" pos:column="37">*</type:modifier></type><name pos:line="911" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="913" pos:column="9">ULONG</name></type> ( <name pos:line="913" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="913" pos:column="35">*</type:modifier><name pos:line="913" pos:column="36">AddRef</name> )<parameter_list pos:line="913" pos:column="44">( 
            <param><decl><type><name pos:line="914" pos:column="13">IDebugIteratorFrameProvider</name> <type:modifier pos:line="914" pos:column="41">*</type:modifier></type> <name pos:line="914" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="916" pos:column="9">ULONG</name></type> ( <name pos:line="916" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="916" pos:column="35">*</type:modifier><name pos:line="916" pos:column="36">Release</name> )<parameter_list pos:line="916" pos:column="45">( 
            <param><decl><type><name pos:line="917" pos:column="13">IDebugIteratorFrameProvider</name> <type:modifier pos:line="917" pos:column="41">*</type:modifier></type> <name pos:line="917" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="919" pos:column="9">HRESULT</name></type> ( <name pos:line="919" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="919" pos:column="37">*</type:modifier><name pos:line="919" pos:column="38">GetIteratorFrames</name> )<parameter_list pos:line="919" pos:column="57">( 
            <param><decl><type><name pos:line="920" pos:column="13">IDebugIteratorFrameProvider</name> <type:modifier pos:line="920" pos:column="41">*</type:modifier></type> <name pos:line="920" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="921" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="921" pos:column="24">__RPC__in_opt</name> <name pos:line="921" pos:column="38">IDebugAddress</name> <type:modifier pos:line="921" pos:column="52">*</type:modifier></type><name pos:line="921" pos:column="53">pAddress</name></decl></param>,
            <comment type="block" pos:line="922" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="922" pos:column="24">__RPC__in_opt</name> <name pos:line="922" pos:column="38">IDebugBinderDirect</name> <type:modifier pos:line="922" pos:column="57">*</type:modifier></type><name pos:line="922" pos:column="58">pBinder</name></decl></param>,
            <comment type="block" pos:line="923" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="923" pos:column="24">__RPC__in_opt</name> <name pos:line="923" pos:column="38">IDebugComPlusSymbolProvider</name> <type:modifier pos:line="923" pos:column="66">*</type:modifier></type><name pos:line="923" pos:column="67">pSym</name></decl></param>,
            <comment type="block" pos:line="924" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="924" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="924" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="924" pos:column="62">*</type:modifier><type:modifier pos:line="924" pos:column="63">*</type:modifier></type><name pos:line="924" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="926" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="927" pos:column="7">IDebugIteratorFrameProviderVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="929" pos:column="5">interface</name></type> <name pos:line="929" pos:column="15">IDebugIteratorFrameProvider</name>
    <argument_list pos:line="930" pos:column="5">{
        <argument><expr><name pos:line="931" pos:column="9">CONST_VTBL</name> struct <name pos:line="931" pos:column="27">IDebugIteratorFrameProviderVtbl</name> <op:operator pos:line="931" pos:column="59">*</op:operator><name pos:line="931" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="936" pos:column="1">#<cpp:directive pos:line="936" pos:column="2">ifdef</cpp:directive> <name pos:line="936" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="939" pos:column="1">#<cpp:directive pos:line="939" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="939" pos:column="9">IDebugIteratorFrameProvider_QueryInterface</name><parameter_list pos:line="939" pos:column="51">(<param><type><name pos:line="939" pos:column="52">This</name></type></param>,<param><type><name pos:line="939" pos:column="57">riid</name></type></param>,<param><type><name pos:line="939" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="940" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="942" pos:column="1">#<cpp:directive pos:line="942" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="942" pos:column="9">IDebugIteratorFrameProvider_AddRef</name><parameter_list pos:line="942" pos:column="43">(<param><type><name pos:line="942" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="943" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="945" pos:column="1">#<cpp:directive pos:line="945" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="945" pos:column="9">IDebugIteratorFrameProvider_Release</name><parameter_list pos:line="945" pos:column="44">(<param><type><name pos:line="945" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="946" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="949" pos:column="1">#<cpp:directive pos:line="949" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="949" pos:column="9">IDebugIteratorFrameProvider_GetIteratorFrames</name><parameter_list pos:line="949" pos:column="54">(<param><type><name pos:line="949" pos:column="55">This</name></type></param>,<param><type><name pos:line="949" pos:column="60">pAddress</name></type></param>,<param><type><name pos:line="949" pos:column="69">pBinder</name></type></param>,<param><type><name pos:line="949" pos:column="77">pSym</name></type></param>,<param><type><name pos:line="949" pos:column="82">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="950" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIteratorFrames(This,pAddress,pBinder,pSym,ppProperty) )</cpp:value></cpp:define> 

<cpp:endif pos:line="952" pos:column="1">#<cpp:directive pos:line="952" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="952" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="955" pos:column="1">#<cpp:directive pos:line="955" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="955" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="960" pos:column="1">#<cpp:directive pos:line="960" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="960" pos:column="9">/* __IDebugIteratorFrameProvider_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="963" pos:column="1">#<cpp:directive pos:line="963" pos:column="2">ifndef</cpp:directive> <name pos:line="963" pos:column="9">__IDebugObject_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="964" pos:column="1">#<cpp:directive pos:line="964" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="964" pos:column="9">__IDebugObject_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="966" pos:column="1">/* interface IDebugObject */</comment>
<comment type="block" pos:line="967" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="970" pos:column="1">EXTERN_C</name> <specifier pos:line="970" pos:column="10">const</specifier> <name pos:line="970" pos:column="16">IID</name></type> <name pos:line="970" pos:column="20">IID_IDebugObject</name></decl>;</decl_stmt>

<cpp:if pos:line="972" pos:column="1">#<cpp:directive pos:line="972" pos:column="2">if</cpp:directive> <expr><call><name pos:line="972" pos:column="5">defined</name><argument_list pos:line="972" pos:column="12">(<argument><expr><name pos:line="972" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="972" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="972" pos:column="29">!</op:operator><call><name pos:line="972" pos:column="30">defined</name><argument_list pos:line="972" pos:column="37">(<argument><expr><name pos:line="972" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="974" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="974" pos:column="19">(<argument pos:line="974" pos:column="20">"C077C823-476C-11d2-B73C-0000F87572EF"</argument>)</argument_list></macro>
    <label><name pos:line="975" pos:column="5">IDebugObject</name> :</label> <expr_stmt><expr pos:line="975" pos:column="20">public <name pos:line="975" pos:column="27">IUnknown</name>
    <block pos:line="976" pos:column="5">{
    <expr pos:line="977" pos:column="5">public<op:operator pos:line="977" pos:column="11">:</op:operator>
        virtual <name pos:line="978" pos:column="17">HRESULT</name> <name pos:line="978" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="978" pos:column="43">GetSize</name><argument_list pos:line="978" pos:column="50">( 
            <comment type="block" pos:line="979" pos:column="13">/* [out] */</comment> <argument pos:line="979" pos:column="25">__RPC__out UINT *pnSize</argument>)</argument_list></macro> <op:operator pos:line="979" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="979" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="981" pos:column="9">virtual <name pos:line="981" pos:column="17">HRESULT</name> <name pos:line="981" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="981" pos:column="43">GetValue</name><argument_list pos:line="981" pos:column="51">( 
            <comment type="block" pos:line="982" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="982" pos:column="45">__RPC__out_ecount_part(nSize, nSize) BYTE *pValue</argument>,
            <comment type="block" pos:line="983" pos:column="13">/* [in] */</comment> <argument pos:line="983" pos:column="24">UINT nSize</argument>)</argument_list></macro> <op:operator pos:line="983" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="983" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="985" pos:column="9">virtual <name pos:line="985" pos:column="17">HRESULT</name> <name pos:line="985" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="985" pos:column="43">SetValue</name><argument_list pos:line="985" pos:column="51">( 
            <comment type="block" pos:line="986" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="986" pos:column="33">__RPC__in_ecount_full(nSize) BYTE *pValue</argument>,
            <comment type="block" pos:line="987" pos:column="13">/* [in] */</comment> <argument pos:line="987" pos:column="24">UINT nSize</argument>)</argument_list></macro> <op:operator pos:line="987" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="987" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="989" pos:column="9">virtual <name pos:line="989" pos:column="17">HRESULT</name> <name pos:line="989" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="989" pos:column="43">SetReferenceValue</name><argument_list pos:line="989" pos:column="60">( 
            <comment type="block" pos:line="990" pos:column="13">/* [in] */</comment> <argument pos:line="990" pos:column="24">__RPC__in_opt IDebugObject *pObject</argument>)</argument_list></macro> <op:operator pos:line="990" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="990" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="992" pos:column="9">virtual <name pos:line="992" pos:column="17">HRESULT</name> <name pos:line="992" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="992" pos:column="43">GetMemoryContext</name><argument_list pos:line="992" pos:column="59">( 
            <argument pos:line="993" pos:column="13">__RPC__deref_in_opt IDebugMemoryContext2 **pContext</argument>)</argument_list></macro> <op:operator pos:line="993" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="993" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="995" pos:column="9">virtual <name pos:line="995" pos:column="17">HRESULT</name> <name pos:line="995" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="995" pos:column="43">GetManagedDebugObject</name><argument_list pos:line="995" pos:column="64">( 
            <comment type="block" pos:line="996" pos:column="13">/* [out] */</comment> <argument pos:line="996" pos:column="25">__RPC__deref_out_opt IDebugManagedObject **ppObject</argument>)</argument_list></macro> <op:operator pos:line="996" pos:column="78">=</op:operator> <lit:literal type="number" pos:line="996" pos:column="80">0</lit:literal></expr>;
        
        <expr pos:line="998" pos:column="9">virtual <name pos:line="998" pos:column="17">HRESULT</name> <name pos:line="998" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="998" pos:column="43">IsNullReference</name><argument_list pos:line="998" pos:column="58">( 
            <comment type="block" pos:line="999" pos:column="13">/* [out] */</comment> <argument pos:line="999" pos:column="25">__RPC__out BOOL *pfIsNull</argument>)</argument_list></macro> <op:operator pos:line="999" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="999" pos:column="54">0</lit:literal></expr>;
        
        <expr pos:line="1001" pos:column="9">virtual <name pos:line="1001" pos:column="17">HRESULT</name> <name pos:line="1001" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1001" pos:column="43">IsEqual</name><argument_list pos:line="1001" pos:column="50">( 
            <comment type="block" pos:line="1002" pos:column="13">/* [in] */</comment> <argument pos:line="1002" pos:column="24">__RPC__in_opt IDebugObject *pObject</argument>,
            <comment type="block" pos:line="1003" pos:column="13">/* [out] */</comment> <argument pos:line="1003" pos:column="25">__RPC__out BOOL *pfIsEqual</argument>)</argument_list></macro> <op:operator pos:line="1003" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="1003" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="1005" pos:column="9">virtual <name pos:line="1005" pos:column="17">HRESULT</name> <name pos:line="1005" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1005" pos:column="43">IsReadOnly</name><argument_list pos:line="1005" pos:column="53">( 
            <comment type="block" pos:line="1006" pos:column="13">/* [out] */</comment> <argument pos:line="1006" pos:column="25">__RPC__out BOOL *pfIsReadOnly</argument>)</argument_list></macro> <op:operator pos:line="1006" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="1006" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="1008" pos:column="9">virtual <name pos:line="1008" pos:column="17">HRESULT</name> <name pos:line="1008" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1008" pos:column="43">IsProxy</name><argument_list pos:line="1008" pos:column="50">( 
            <comment type="block" pos:line="1009" pos:column="13">/* [out] */</comment> <argument pos:line="1009" pos:column="25">__RPC__out BOOL *pfIsProxy</argument>)</argument_list></macro> <op:operator pos:line="1009" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="1009" pos:column="55">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1013" pos:column="1">#<cpp:directive pos:line="1013" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1013" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1015" pos:column="5">typedef <type><struct pos:line="1015" pos:column="13">struct <name pos:line="1015" pos:column="20">IDebugObjectVtbl</name>
    <block pos:line="1016" pos:column="5">{<public type="default" pos:line="1016" pos:column="6">
        <function_decl><type><name pos:line="1017" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1019" pos:column="9">HRESULT</name></type> ( <name pos:line="1019" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1019" pos:column="37">*</type:modifier><name pos:line="1019" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1019" pos:column="54">( 
            <param><decl><type><name pos:line="1020" pos:column="13">IDebugObject</name> <type:modifier pos:line="1020" pos:column="26">*</type:modifier></type> <name pos:line="1020" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="1021" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1021" pos:column="24">__RPC__in</name> <name pos:line="1021" pos:column="34">REFIID</name></type> <name pos:line="1021" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1022" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1023" pos:column="13">__RPC__deref_out</name>  <name pos:line="1023" pos:column="31">void</name> <type:modifier pos:line="1023" pos:column="36">*</type:modifier><type:modifier pos:line="1023" pos:column="37">*</type:modifier></type><name pos:line="1023" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1025" pos:column="9">ULONG</name></type> ( <name pos:line="1025" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1025" pos:column="35">*</type:modifier><name pos:line="1025" pos:column="36">AddRef</name> )<parameter_list pos:line="1025" pos:column="44">( 
            <param><decl><type><name pos:line="1026" pos:column="13">IDebugObject</name> <type:modifier pos:line="1026" pos:column="26">*</type:modifier></type> <name pos:line="1026" pos:column="28">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1028" pos:column="9">ULONG</name></type> ( <name pos:line="1028" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1028" pos:column="35">*</type:modifier><name pos:line="1028" pos:column="36">Release</name> )<parameter_list pos:line="1028" pos:column="45">( 
            <param><decl><type><name pos:line="1029" pos:column="13">IDebugObject</name> <type:modifier pos:line="1029" pos:column="26">*</type:modifier></type> <name pos:line="1029" pos:column="28">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1031" pos:column="9">HRESULT</name></type> ( <name pos:line="1031" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1031" pos:column="37">*</type:modifier><name pos:line="1031" pos:column="38">GetSize</name> )<parameter_list pos:line="1031" pos:column="47">( 
            <param><decl><type><name pos:line="1032" pos:column="13">IDebugObject</name> <type:modifier pos:line="1032" pos:column="26">*</type:modifier></type> <name pos:line="1032" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="1033" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1033" pos:column="25">__RPC__out</name> <name pos:line="1033" pos:column="36">UINT</name> <type:modifier pos:line="1033" pos:column="41">*</type:modifier></type><name pos:line="1033" pos:column="42">pnSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1035" pos:column="9">HRESULT</name> <argument_list pos:line="1035" pos:column="17">( <argument pos:line="1035" pos:column="19">STDMETHODCALLTYPE *GetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1035" pos:column="48">(</op:operator> 
            <name pos:line="1036" pos:column="13">IDebugObject</name> <op:operator pos:line="1036" pos:column="26">*</op:operator> <name pos:line="1036" pos:column="28">This</name><op:operator pos:line="1036" pos:column="32">,</op:operator>
            <comment type="block" pos:line="1037" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="1037" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="1037" pos:column="67">(<argument pos:line="1037" pos:column="68">nSize</argument>, <argument pos:line="1037" pos:column="75">nSize</argument>)</argument_list></macro> <name pos:line="1037" pos:column="82">BYTE</name> <op:operator pos:line="1037" pos:column="87">*</op:operator><name pos:line="1037" pos:column="88">pValue</name><op:operator pos:line="1037" pos:column="94">,</op:operator>
            <comment type="block" pos:line="1038" pos:column="13">/* [in] */</comment> <name pos:line="1038" pos:column="24">UINT</name> <name pos:line="1038" pos:column="29">nSize</name><op:operator pos:line="1038" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="1040" pos:column="9">HRESULT</name> <argument_list pos:line="1040" pos:column="17">( <argument pos:line="1040" pos:column="19">STDMETHODCALLTYPE *SetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1040" pos:column="48">(</op:operator> 
            <name pos:line="1041" pos:column="13">IDebugObject</name> <op:operator pos:line="1041" pos:column="26">*</op:operator> <name pos:line="1041" pos:column="28">This</name><op:operator pos:line="1041" pos:column="32">,</op:operator>
            <comment type="block" pos:line="1042" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1042" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1042" pos:column="54">(<argument pos:line="1042" pos:column="55">nSize</argument>)</argument_list></macro> <name pos:line="1042" pos:column="62">BYTE</name> <op:operator pos:line="1042" pos:column="67">*</op:operator><name pos:line="1042" pos:column="68">pValue</name><op:operator pos:line="1042" pos:column="74">,</op:operator>
            <comment type="block" pos:line="1043" pos:column="13">/* [in] */</comment> <name pos:line="1043" pos:column="24">UINT</name> <name pos:line="1043" pos:column="29">nSize</name><op:operator pos:line="1043" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="1045" pos:column="9">HRESULT</name></type> ( <name pos:line="1045" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1045" pos:column="37">*</type:modifier><name pos:line="1045" pos:column="38">SetReferenceValue</name> )<parameter_list pos:line="1045" pos:column="57">( 
            <param><decl><type><name pos:line="1046" pos:column="13">IDebugObject</name> <type:modifier pos:line="1046" pos:column="26">*</type:modifier></type> <name pos:line="1046" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="1047" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1047" pos:column="24">__RPC__in_opt</name> <name pos:line="1047" pos:column="38">IDebugObject</name> <type:modifier pos:line="1047" pos:column="51">*</type:modifier></type><name pos:line="1047" pos:column="52">pObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1049" pos:column="9">HRESULT</name></type> ( <name pos:line="1049" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1049" pos:column="37">*</type:modifier><name pos:line="1049" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="1049" pos:column="56">( 
            <param><decl><type><name pos:line="1050" pos:column="13">IDebugObject</name> <type:modifier pos:line="1050" pos:column="26">*</type:modifier></type> <name pos:line="1050" pos:column="28">This</name></decl></param>,
            <param><decl><type><name pos:line="1051" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="1051" pos:column="33">IDebugMemoryContext2</name> <type:modifier pos:line="1051" pos:column="54">*</type:modifier><type:modifier pos:line="1051" pos:column="55">*</type:modifier></type><name pos:line="1051" pos:column="56">pContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1053" pos:column="9">HRESULT</name></type> ( <name pos:line="1053" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1053" pos:column="37">*</type:modifier><name pos:line="1053" pos:column="38">GetManagedDebugObject</name> )<parameter_list pos:line="1053" pos:column="61">( 
            <param><decl><type><name pos:line="1054" pos:column="13">IDebugObject</name> <type:modifier pos:line="1054" pos:column="26">*</type:modifier></type> <name pos:line="1054" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="1055" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1055" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1055" pos:column="46">IDebugManagedObject</name> <type:modifier pos:line="1055" pos:column="66">*</type:modifier><type:modifier pos:line="1055" pos:column="67">*</type:modifier></type><name pos:line="1055" pos:column="68">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1057" pos:column="9">HRESULT</name></type> ( <name pos:line="1057" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1057" pos:column="37">*</type:modifier><name pos:line="1057" pos:column="38">IsNullReference</name> )<parameter_list pos:line="1057" pos:column="55">( 
            <param><decl><type><name pos:line="1058" pos:column="13">IDebugObject</name> <type:modifier pos:line="1058" pos:column="26">*</type:modifier></type> <name pos:line="1058" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="1059" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1059" pos:column="25">__RPC__out</name> <name pos:line="1059" pos:column="36">BOOL</name> <type:modifier pos:line="1059" pos:column="41">*</type:modifier></type><name pos:line="1059" pos:column="42">pfIsNull</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1061" pos:column="9">HRESULT</name></type> ( <name pos:line="1061" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1061" pos:column="37">*</type:modifier><name pos:line="1061" pos:column="38">IsEqual</name> )<parameter_list pos:line="1061" pos:column="47">( 
            <param><decl><type><name pos:line="1062" pos:column="13">IDebugObject</name> <type:modifier pos:line="1062" pos:column="26">*</type:modifier></type> <name pos:line="1062" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="1063" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1063" pos:column="24">__RPC__in_opt</name> <name pos:line="1063" pos:column="38">IDebugObject</name> <type:modifier pos:line="1063" pos:column="51">*</type:modifier></type><name pos:line="1063" pos:column="52">pObject</name></decl></param>,
            <comment type="block" pos:line="1064" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1064" pos:column="25">__RPC__out</name> <name pos:line="1064" pos:column="36">BOOL</name> <type:modifier pos:line="1064" pos:column="41">*</type:modifier></type><name pos:line="1064" pos:column="42">pfIsEqual</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1066" pos:column="9">HRESULT</name></type> ( <name pos:line="1066" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1066" pos:column="37">*</type:modifier><name pos:line="1066" pos:column="38">IsReadOnly</name> )<parameter_list pos:line="1066" pos:column="50">( 
            <param><decl><type><name pos:line="1067" pos:column="13">IDebugObject</name> <type:modifier pos:line="1067" pos:column="26">*</type:modifier></type> <name pos:line="1067" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="1068" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1068" pos:column="25">__RPC__out</name> <name pos:line="1068" pos:column="36">BOOL</name> <type:modifier pos:line="1068" pos:column="41">*</type:modifier></type><name pos:line="1068" pos:column="42">pfIsReadOnly</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1070" pos:column="9">HRESULT</name></type> ( <name pos:line="1070" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1070" pos:column="37">*</type:modifier><name pos:line="1070" pos:column="38">IsProxy</name> )<parameter_list pos:line="1070" pos:column="47">( 
            <param><decl><type><name pos:line="1071" pos:column="13">IDebugObject</name> <type:modifier pos:line="1071" pos:column="26">*</type:modifier></type> <name pos:line="1071" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="1072" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1072" pos:column="25">__RPC__out</name> <name pos:line="1072" pos:column="36">BOOL</name> <type:modifier pos:line="1072" pos:column="41">*</type:modifier></type><name pos:line="1072" pos:column="42">pfIsProxy</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1074" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1075" pos:column="7">IDebugObjectVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1077" pos:column="5">interface</name></type> <name pos:line="1077" pos:column="15">IDebugObject</name>
    <argument_list pos:line="1078" pos:column="5">{
        <argument><expr><name pos:line="1079" pos:column="9">CONST_VTBL</name> struct <name pos:line="1079" pos:column="27">IDebugObjectVtbl</name> <op:operator pos:line="1079" pos:column="44">*</op:operator><name pos:line="1079" pos:column="45">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1084" pos:column="1">#<cpp:directive pos:line="1084" pos:column="2">ifdef</cpp:directive> <name pos:line="1084" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1087" pos:column="1">#<cpp:directive pos:line="1087" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1087" pos:column="9">IDebugObject_QueryInterface</name><parameter_list pos:line="1087" pos:column="36">(<param><type><name pos:line="1087" pos:column="37">This</name></type></param>,<param><type><name pos:line="1087" pos:column="42">riid</name></type></param>,<param><type><name pos:line="1087" pos:column="47">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1088" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1090" pos:column="1">#<cpp:directive pos:line="1090" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1090" pos:column="9">IDebugObject_AddRef</name><parameter_list pos:line="1090" pos:column="28">(<param><type><name pos:line="1090" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1091" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1093" pos:column="1">#<cpp:directive pos:line="1093" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1093" pos:column="9">IDebugObject_Release</name><parameter_list pos:line="1093" pos:column="29">(<param><type><name pos:line="1093" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1094" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1097" pos:column="1">#<cpp:directive pos:line="1097" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1097" pos:column="9">IDebugObject_GetSize</name><parameter_list pos:line="1097" pos:column="29">(<param><type><name pos:line="1097" pos:column="30">This</name></type></param>,<param><type><name pos:line="1097" pos:column="35">pnSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1098" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pnSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1100" pos:column="1">#<cpp:directive pos:line="1100" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1100" pos:column="9">IDebugObject_GetValue</name><parameter_list pos:line="1100" pos:column="30">(<param><type><name pos:line="1100" pos:column="31">This</name></type></param>,<param><type><name pos:line="1100" pos:column="36">pValue</name></type></param>,<param><type><name pos:line="1100" pos:column="43">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1101" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1103" pos:column="1">#<cpp:directive pos:line="1103" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1103" pos:column="9">IDebugObject_SetValue</name><parameter_list pos:line="1103" pos:column="30">(<param><type><name pos:line="1103" pos:column="31">This</name></type></param>,<param><type><name pos:line="1103" pos:column="36">pValue</name></type></param>,<param><type><name pos:line="1103" pos:column="43">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1104" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1106" pos:column="1">#<cpp:directive pos:line="1106" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1106" pos:column="9">IDebugObject_SetReferenceValue</name><parameter_list pos:line="1106" pos:column="39">(<param><type><name pos:line="1106" pos:column="40">This</name></type></param>,<param><type><name pos:line="1106" pos:column="45">pObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1107" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetReferenceValue(This,pObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1109" pos:column="1">#<cpp:directive pos:line="1109" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1109" pos:column="9">IDebugObject_GetMemoryContext</name><parameter_list pos:line="1109" pos:column="38">(<param><type><name pos:line="1109" pos:column="39">This</name></type></param>,<param><type><name pos:line="1109" pos:column="44">pContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1110" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,pContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="1112" pos:column="1">#<cpp:directive pos:line="1112" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1112" pos:column="9">IDebugObject_GetManagedDebugObject</name><parameter_list pos:line="1112" pos:column="43">(<param><type><name pos:line="1112" pos:column="44">This</name></type></param>,<param><type><name pos:line="1112" pos:column="49">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1113" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetManagedDebugObject(This,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1115" pos:column="1">#<cpp:directive pos:line="1115" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1115" pos:column="9">IDebugObject_IsNullReference</name><parameter_list pos:line="1115" pos:column="37">(<param><type><name pos:line="1115" pos:column="38">This</name></type></param>,<param><type><name pos:line="1115" pos:column="43">pfIsNull</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1116" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsNullReference(This,pfIsNull) )</cpp:value></cpp:define> 

<cpp:define pos:line="1118" pos:column="1">#<cpp:directive pos:line="1118" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1118" pos:column="9">IDebugObject_IsEqual</name><parameter_list pos:line="1118" pos:column="29">(<param><type><name pos:line="1118" pos:column="30">This</name></type></param>,<param><type><name pos:line="1118" pos:column="35">pObject</name></type></param>,<param><type><name pos:line="1118" pos:column="43">pfIsEqual</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1119" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsEqual(This,pObject,pfIsEqual) )</cpp:value></cpp:define> 

<cpp:define pos:line="1121" pos:column="1">#<cpp:directive pos:line="1121" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1121" pos:column="9">IDebugObject_IsReadOnly</name><parameter_list pos:line="1121" pos:column="32">(<param><type><name pos:line="1121" pos:column="33">This</name></type></param>,<param><type><name pos:line="1121" pos:column="38">pfIsReadOnly</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1122" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly(This,pfIsReadOnly) )</cpp:value></cpp:define> 

<cpp:define pos:line="1124" pos:column="1">#<cpp:directive pos:line="1124" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1124" pos:column="9">IDebugObject_IsProxy</name><parameter_list pos:line="1124" pos:column="29">(<param><type><name pos:line="1124" pos:column="30">This</name></type></param>,<param><type><name pos:line="1124" pos:column="35">pfIsProxy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1125" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsProxy(This,pfIsProxy) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1127" pos:column="1">#<cpp:directive pos:line="1127" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1127" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1130" pos:column="1">#<cpp:directive pos:line="1130" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1130" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1135" pos:column="1">#<cpp:directive pos:line="1135" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1135" pos:column="9">/* __IDebugObject_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1138" pos:column="1">#<cpp:directive pos:line="1138" pos:column="2">ifndef</cpp:directive> <name pos:line="1138" pos:column="9">__IDebugObject2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1139" pos:column="1">#<cpp:directive pos:line="1139" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1139" pos:column="9">__IDebugObject2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1141" pos:column="1">/* interface IDebugObject2 */</comment>
<comment type="block" pos:line="1142" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1145" pos:column="1">EXTERN_C</name> <specifier pos:line="1145" pos:column="10">const</specifier> <name pos:line="1145" pos:column="16">IID</name></type> <name pos:line="1145" pos:column="20">IID_IDebugObject2</name></decl>;</decl_stmt>

<cpp:if pos:line="1147" pos:column="1">#<cpp:directive pos:line="1147" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1147" pos:column="5">defined</name><argument_list pos:line="1147" pos:column="12">(<argument><expr><name pos:line="1147" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1147" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1147" pos:column="29">!</op:operator><call><name pos:line="1147" pos:column="30">defined</name><argument_list pos:line="1147" pos:column="37">(<argument><expr><name pos:line="1147" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1149" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1149" pos:column="19">(<argument pos:line="1149" pos:column="20">"3FF130FC-B14F-4bae-AE44-46B1CD3928CC"</argument>)</argument_list></macro>
    <label><name pos:line="1150" pos:column="5">IDebugObject2</name> :</label> <expr_stmt><expr pos:line="1150" pos:column="21">public <name pos:line="1150" pos:column="28">IDebugObject</name>
    <block pos:line="1151" pos:column="5">{
    <expr pos:line="1152" pos:column="5">public<op:operator pos:line="1152" pos:column="11">:</op:operator>
        virtual <name pos:line="1153" pos:column="17">HRESULT</name> <name pos:line="1153" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1153" pos:column="43">GetBackingFieldForProperty</name><argument_list pos:line="1153" pos:column="69">( 
            <comment type="block" pos:line="1154" pos:column="13">/* [out] */</comment> <argument pos:line="1154" pos:column="25">__RPC__deref_out_opt IDebugObject2 **ppObject</argument>)</argument_list></macro> <op:operator pos:line="1154" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="1154" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="1156" pos:column="9">virtual <name pos:line="1156" pos:column="17">HRESULT</name> <name pos:line="1156" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1156" pos:column="43">GetICorDebugValue</name><argument_list pos:line="1156" pos:column="60">( 
            <comment type="block" pos:line="1157" pos:column="13">/* [out] */</comment> <argument pos:line="1157" pos:column="25">__RPC__deref_out_opt IUnknown **ppUnk</argument>)</argument_list></macro> <op:operator pos:line="1157" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="1157" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="1159" pos:column="9">virtual <name pos:line="1159" pos:column="17">HRESULT</name> <name pos:line="1159" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1159" pos:column="43">CreateAlias</name><argument_list pos:line="1159" pos:column="54">( 
            <comment type="block" pos:line="1160" pos:column="13">/* [out] */</comment> <argument pos:line="1160" pos:column="25">__RPC__deref_out_opt IDebugAlias **ppAlias</argument>)</argument_list></macro> <op:operator pos:line="1160" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="1160" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="1162" pos:column="9">virtual <name pos:line="1162" pos:column="17">HRESULT</name> <name pos:line="1162" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1162" pos:column="43">GetAlias</name><argument_list pos:line="1162" pos:column="51">( 
            <comment type="block" pos:line="1163" pos:column="13">/* [out] */</comment> <argument pos:line="1163" pos:column="25">__RPC__deref_out_opt IDebugAlias **ppAlias</argument>)</argument_list></macro> <op:operator pos:line="1163" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="1163" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="1165" pos:column="9">virtual <name pos:line="1165" pos:column="17">HRESULT</name> <name pos:line="1165" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1165" pos:column="43">GetField</name><argument_list pos:line="1165" pos:column="51">( 
            <comment type="block" pos:line="1166" pos:column="13">/* [out] */</comment> <argument pos:line="1166" pos:column="25">__RPC__deref_out_opt IDebugField **ppField</argument>)</argument_list></macro> <op:operator pos:line="1166" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="1166" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="1168" pos:column="9">virtual <name pos:line="1168" pos:column="17">HRESULT</name> <name pos:line="1168" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1168" pos:column="43">IsUserData</name><argument_list pos:line="1168" pos:column="53">( 
            <comment type="block" pos:line="1169" pos:column="13">/* [out] */</comment> <argument pos:line="1169" pos:column="25">__RPC__out BOOL *pfUser</argument>)</argument_list></macro> <op:operator pos:line="1169" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="1169" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="1171" pos:column="9">virtual <name pos:line="1171" pos:column="17">HRESULT</name> <name pos:line="1171" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1171" pos:column="43">IsEncOutdated</name><argument_list pos:line="1171" pos:column="56">( 
            <comment type="block" pos:line="1172" pos:column="13">/* [out] */</comment> <argument pos:line="1172" pos:column="25">__RPC__out BOOL *pfEncOutdated</argument>)</argument_list></macro> <op:operator pos:line="1172" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="1172" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1176" pos:column="1">#<cpp:directive pos:line="1176" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1176" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1178" pos:column="5">typedef <type><struct pos:line="1178" pos:column="13">struct <name pos:line="1178" pos:column="20">IDebugObject2Vtbl</name>
    <block pos:line="1179" pos:column="5">{<public type="default" pos:line="1179" pos:column="6">
        <function_decl><type><name pos:line="1180" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1182" pos:column="9">HRESULT</name></type> ( <name pos:line="1182" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1182" pos:column="37">*</type:modifier><name pos:line="1182" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1182" pos:column="54">( 
            <param><decl><type><name pos:line="1183" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1183" pos:column="27">*</type:modifier></type> <name pos:line="1183" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1184" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1184" pos:column="24">__RPC__in</name> <name pos:line="1184" pos:column="34">REFIID</name></type> <name pos:line="1184" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1185" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1186" pos:column="13">__RPC__deref_out</name>  <name pos:line="1186" pos:column="31">void</name> <type:modifier pos:line="1186" pos:column="36">*</type:modifier><type:modifier pos:line="1186" pos:column="37">*</type:modifier></type><name pos:line="1186" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1188" pos:column="9">ULONG</name></type> ( <name pos:line="1188" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1188" pos:column="35">*</type:modifier><name pos:line="1188" pos:column="36">AddRef</name> )<parameter_list pos:line="1188" pos:column="44">( 
            <param><decl><type><name pos:line="1189" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1189" pos:column="27">*</type:modifier></type> <name pos:line="1189" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1191" pos:column="9">ULONG</name></type> ( <name pos:line="1191" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1191" pos:column="35">*</type:modifier><name pos:line="1191" pos:column="36">Release</name> )<parameter_list pos:line="1191" pos:column="45">( 
            <param><decl><type><name pos:line="1192" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1192" pos:column="27">*</type:modifier></type> <name pos:line="1192" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1194" pos:column="9">HRESULT</name></type> ( <name pos:line="1194" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1194" pos:column="37">*</type:modifier><name pos:line="1194" pos:column="38">GetSize</name> )<parameter_list pos:line="1194" pos:column="47">( 
            <param><decl><type><name pos:line="1195" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1195" pos:column="27">*</type:modifier></type> <name pos:line="1195" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1196" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1196" pos:column="25">__RPC__out</name> <name pos:line="1196" pos:column="36">UINT</name> <type:modifier pos:line="1196" pos:column="41">*</type:modifier></type><name pos:line="1196" pos:column="42">pnSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1198" pos:column="9">HRESULT</name> <argument_list pos:line="1198" pos:column="17">( <argument pos:line="1198" pos:column="19">STDMETHODCALLTYPE *GetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1198" pos:column="48">(</op:operator> 
            <name pos:line="1199" pos:column="13">IDebugObject2</name> <op:operator pos:line="1199" pos:column="27">*</op:operator> <name pos:line="1199" pos:column="29">This</name><op:operator pos:line="1199" pos:column="33">,</op:operator>
            <comment type="block" pos:line="1200" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="1200" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="1200" pos:column="67">(<argument pos:line="1200" pos:column="68">nSize</argument>, <argument pos:line="1200" pos:column="75">nSize</argument>)</argument_list></macro> <name pos:line="1200" pos:column="82">BYTE</name> <op:operator pos:line="1200" pos:column="87">*</op:operator><name pos:line="1200" pos:column="88">pValue</name><op:operator pos:line="1200" pos:column="94">,</op:operator>
            <comment type="block" pos:line="1201" pos:column="13">/* [in] */</comment> <name pos:line="1201" pos:column="24">UINT</name> <name pos:line="1201" pos:column="29">nSize</name><op:operator pos:line="1201" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="1203" pos:column="9">HRESULT</name> <argument_list pos:line="1203" pos:column="17">( <argument pos:line="1203" pos:column="19">STDMETHODCALLTYPE *SetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1203" pos:column="48">(</op:operator> 
            <name pos:line="1204" pos:column="13">IDebugObject2</name> <op:operator pos:line="1204" pos:column="27">*</op:operator> <name pos:line="1204" pos:column="29">This</name><op:operator pos:line="1204" pos:column="33">,</op:operator>
            <comment type="block" pos:line="1205" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1205" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1205" pos:column="54">(<argument pos:line="1205" pos:column="55">nSize</argument>)</argument_list></macro> <name pos:line="1205" pos:column="62">BYTE</name> <op:operator pos:line="1205" pos:column="67">*</op:operator><name pos:line="1205" pos:column="68">pValue</name><op:operator pos:line="1205" pos:column="74">,</op:operator>
            <comment type="block" pos:line="1206" pos:column="13">/* [in] */</comment> <name pos:line="1206" pos:column="24">UINT</name> <name pos:line="1206" pos:column="29">nSize</name><op:operator pos:line="1206" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="1208" pos:column="9">HRESULT</name></type> ( <name pos:line="1208" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1208" pos:column="37">*</type:modifier><name pos:line="1208" pos:column="38">SetReferenceValue</name> )<parameter_list pos:line="1208" pos:column="57">( 
            <param><decl><type><name pos:line="1209" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1209" pos:column="27">*</type:modifier></type> <name pos:line="1209" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1210" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1210" pos:column="24">__RPC__in_opt</name> <name pos:line="1210" pos:column="38">IDebugObject</name> <type:modifier pos:line="1210" pos:column="51">*</type:modifier></type><name pos:line="1210" pos:column="52">pObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1212" pos:column="9">HRESULT</name></type> ( <name pos:line="1212" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1212" pos:column="37">*</type:modifier><name pos:line="1212" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="1212" pos:column="56">( 
            <param><decl><type><name pos:line="1213" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1213" pos:column="27">*</type:modifier></type> <name pos:line="1213" pos:column="29">This</name></decl></param>,
            <param><decl><type><name pos:line="1214" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="1214" pos:column="33">IDebugMemoryContext2</name> <type:modifier pos:line="1214" pos:column="54">*</type:modifier><type:modifier pos:line="1214" pos:column="55">*</type:modifier></type><name pos:line="1214" pos:column="56">pContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1216" pos:column="9">HRESULT</name></type> ( <name pos:line="1216" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1216" pos:column="37">*</type:modifier><name pos:line="1216" pos:column="38">GetManagedDebugObject</name> )<parameter_list pos:line="1216" pos:column="61">( 
            <param><decl><type><name pos:line="1217" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1217" pos:column="27">*</type:modifier></type> <name pos:line="1217" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1218" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1218" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1218" pos:column="46">IDebugManagedObject</name> <type:modifier pos:line="1218" pos:column="66">*</type:modifier><type:modifier pos:line="1218" pos:column="67">*</type:modifier></type><name pos:line="1218" pos:column="68">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1220" pos:column="9">HRESULT</name></type> ( <name pos:line="1220" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1220" pos:column="37">*</type:modifier><name pos:line="1220" pos:column="38">IsNullReference</name> )<parameter_list pos:line="1220" pos:column="55">( 
            <param><decl><type><name pos:line="1221" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1221" pos:column="27">*</type:modifier></type> <name pos:line="1221" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1222" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1222" pos:column="25">__RPC__out</name> <name pos:line="1222" pos:column="36">BOOL</name> <type:modifier pos:line="1222" pos:column="41">*</type:modifier></type><name pos:line="1222" pos:column="42">pfIsNull</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1224" pos:column="9">HRESULT</name></type> ( <name pos:line="1224" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1224" pos:column="37">*</type:modifier><name pos:line="1224" pos:column="38">IsEqual</name> )<parameter_list pos:line="1224" pos:column="47">( 
            <param><decl><type><name pos:line="1225" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1225" pos:column="27">*</type:modifier></type> <name pos:line="1225" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1226" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1226" pos:column="24">__RPC__in_opt</name> <name pos:line="1226" pos:column="38">IDebugObject</name> <type:modifier pos:line="1226" pos:column="51">*</type:modifier></type><name pos:line="1226" pos:column="52">pObject</name></decl></param>,
            <comment type="block" pos:line="1227" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1227" pos:column="25">__RPC__out</name> <name pos:line="1227" pos:column="36">BOOL</name> <type:modifier pos:line="1227" pos:column="41">*</type:modifier></type><name pos:line="1227" pos:column="42">pfIsEqual</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1229" pos:column="9">HRESULT</name></type> ( <name pos:line="1229" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1229" pos:column="37">*</type:modifier><name pos:line="1229" pos:column="38">IsReadOnly</name> )<parameter_list pos:line="1229" pos:column="50">( 
            <param><decl><type><name pos:line="1230" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1230" pos:column="27">*</type:modifier></type> <name pos:line="1230" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1231" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1231" pos:column="25">__RPC__out</name> <name pos:line="1231" pos:column="36">BOOL</name> <type:modifier pos:line="1231" pos:column="41">*</type:modifier></type><name pos:line="1231" pos:column="42">pfIsReadOnly</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1233" pos:column="9">HRESULT</name></type> ( <name pos:line="1233" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1233" pos:column="37">*</type:modifier><name pos:line="1233" pos:column="38">IsProxy</name> )<parameter_list pos:line="1233" pos:column="47">( 
            <param><decl><type><name pos:line="1234" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1234" pos:column="27">*</type:modifier></type> <name pos:line="1234" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1235" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1235" pos:column="25">__RPC__out</name> <name pos:line="1235" pos:column="36">BOOL</name> <type:modifier pos:line="1235" pos:column="41">*</type:modifier></type><name pos:line="1235" pos:column="42">pfIsProxy</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1237" pos:column="9">HRESULT</name></type> ( <name pos:line="1237" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1237" pos:column="37">*</type:modifier><name pos:line="1237" pos:column="38">GetBackingFieldForProperty</name> )<parameter_list pos:line="1237" pos:column="66">( 
            <param><decl><type><name pos:line="1238" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1238" pos:column="27">*</type:modifier></type> <name pos:line="1238" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1239" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1239" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1239" pos:column="46">IDebugObject2</name> <type:modifier pos:line="1239" pos:column="60">*</type:modifier><type:modifier pos:line="1239" pos:column="61">*</type:modifier></type><name pos:line="1239" pos:column="62">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1241" pos:column="9">HRESULT</name></type> ( <name pos:line="1241" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1241" pos:column="37">*</type:modifier><name pos:line="1241" pos:column="38">GetICorDebugValue</name> )<parameter_list pos:line="1241" pos:column="57">( 
            <param><decl><type><name pos:line="1242" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1242" pos:column="27">*</type:modifier></type> <name pos:line="1242" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1243" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1243" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1243" pos:column="46">IUnknown</name> <type:modifier pos:line="1243" pos:column="55">*</type:modifier><type:modifier pos:line="1243" pos:column="56">*</type:modifier></type><name pos:line="1243" pos:column="57">ppUnk</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1245" pos:column="9">HRESULT</name></type> ( <name pos:line="1245" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1245" pos:column="37">*</type:modifier><name pos:line="1245" pos:column="38">CreateAlias</name> )<parameter_list pos:line="1245" pos:column="51">( 
            <param><decl><type><name pos:line="1246" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1246" pos:column="27">*</type:modifier></type> <name pos:line="1246" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1247" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1247" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1247" pos:column="46">IDebugAlias</name> <type:modifier pos:line="1247" pos:column="58">*</type:modifier><type:modifier pos:line="1247" pos:column="59">*</type:modifier></type><name pos:line="1247" pos:column="60">ppAlias</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1249" pos:column="9">HRESULT</name></type> ( <name pos:line="1249" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1249" pos:column="37">*</type:modifier><name pos:line="1249" pos:column="38">GetAlias</name> )<parameter_list pos:line="1249" pos:column="48">( 
            <param><decl><type><name pos:line="1250" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1250" pos:column="27">*</type:modifier></type> <name pos:line="1250" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1251" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1251" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1251" pos:column="46">IDebugAlias</name> <type:modifier pos:line="1251" pos:column="58">*</type:modifier><type:modifier pos:line="1251" pos:column="59">*</type:modifier></type><name pos:line="1251" pos:column="60">ppAlias</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1253" pos:column="9">HRESULT</name></type> ( <name pos:line="1253" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1253" pos:column="37">*</type:modifier><name pos:line="1253" pos:column="38">GetField</name> )<parameter_list pos:line="1253" pos:column="48">( 
            <param><decl><type><name pos:line="1254" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1254" pos:column="27">*</type:modifier></type> <name pos:line="1254" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1255" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1255" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1255" pos:column="46">IDebugField</name> <type:modifier pos:line="1255" pos:column="58">*</type:modifier><type:modifier pos:line="1255" pos:column="59">*</type:modifier></type><name pos:line="1255" pos:column="60">ppField</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1257" pos:column="9">HRESULT</name></type> ( <name pos:line="1257" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1257" pos:column="37">*</type:modifier><name pos:line="1257" pos:column="38">IsUserData</name> )<parameter_list pos:line="1257" pos:column="50">( 
            <param><decl><type><name pos:line="1258" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1258" pos:column="27">*</type:modifier></type> <name pos:line="1258" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1259" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1259" pos:column="25">__RPC__out</name> <name pos:line="1259" pos:column="36">BOOL</name> <type:modifier pos:line="1259" pos:column="41">*</type:modifier></type><name pos:line="1259" pos:column="42">pfUser</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1261" pos:column="9">HRESULT</name></type> ( <name pos:line="1261" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1261" pos:column="37">*</type:modifier><name pos:line="1261" pos:column="38">IsEncOutdated</name> )<parameter_list pos:line="1261" pos:column="53">( 
            <param><decl><type><name pos:line="1262" pos:column="13">IDebugObject2</name> <type:modifier pos:line="1262" pos:column="27">*</type:modifier></type> <name pos:line="1262" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="1263" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1263" pos:column="25">__RPC__out</name> <name pos:line="1263" pos:column="36">BOOL</name> <type:modifier pos:line="1263" pos:column="41">*</type:modifier></type><name pos:line="1263" pos:column="42">pfEncOutdated</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1265" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1266" pos:column="7">IDebugObject2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1268" pos:column="5">interface</name></type> <name pos:line="1268" pos:column="15">IDebugObject2</name>
    <argument_list pos:line="1269" pos:column="5">{
        <argument><expr><name pos:line="1270" pos:column="9">CONST_VTBL</name> struct <name pos:line="1270" pos:column="27">IDebugObject2Vtbl</name> <op:operator pos:line="1270" pos:column="45">*</op:operator><name pos:line="1270" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1275" pos:column="1">#<cpp:directive pos:line="1275" pos:column="2">ifdef</cpp:directive> <name pos:line="1275" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1278" pos:column="1">#<cpp:directive pos:line="1278" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1278" pos:column="9">IDebugObject2_QueryInterface</name><parameter_list pos:line="1278" pos:column="37">(<param><type><name pos:line="1278" pos:column="38">This</name></type></param>,<param><type><name pos:line="1278" pos:column="43">riid</name></type></param>,<param><type><name pos:line="1278" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1279" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1281" pos:column="1">#<cpp:directive pos:line="1281" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1281" pos:column="9">IDebugObject2_AddRef</name><parameter_list pos:line="1281" pos:column="29">(<param><type><name pos:line="1281" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1282" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1284" pos:column="1">#<cpp:directive pos:line="1284" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1284" pos:column="9">IDebugObject2_Release</name><parameter_list pos:line="1284" pos:column="30">(<param><type><name pos:line="1284" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1285" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1288" pos:column="1">#<cpp:directive pos:line="1288" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1288" pos:column="9">IDebugObject2_GetSize</name><parameter_list pos:line="1288" pos:column="30">(<param><type><name pos:line="1288" pos:column="31">This</name></type></param>,<param><type><name pos:line="1288" pos:column="36">pnSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1289" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pnSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1291" pos:column="1">#<cpp:directive pos:line="1291" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1291" pos:column="9">IDebugObject2_GetValue</name><parameter_list pos:line="1291" pos:column="31">(<param><type><name pos:line="1291" pos:column="32">This</name></type></param>,<param><type><name pos:line="1291" pos:column="37">pValue</name></type></param>,<param><type><name pos:line="1291" pos:column="44">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1292" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1294" pos:column="1">#<cpp:directive pos:line="1294" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1294" pos:column="9">IDebugObject2_SetValue</name><parameter_list pos:line="1294" pos:column="31">(<param><type><name pos:line="1294" pos:column="32">This</name></type></param>,<param><type><name pos:line="1294" pos:column="37">pValue</name></type></param>,<param><type><name pos:line="1294" pos:column="44">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1295" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1297" pos:column="1">#<cpp:directive pos:line="1297" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1297" pos:column="9">IDebugObject2_SetReferenceValue</name><parameter_list pos:line="1297" pos:column="40">(<param><type><name pos:line="1297" pos:column="41">This</name></type></param>,<param><type><name pos:line="1297" pos:column="46">pObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1298" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetReferenceValue(This,pObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1300" pos:column="1">#<cpp:directive pos:line="1300" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1300" pos:column="9">IDebugObject2_GetMemoryContext</name><parameter_list pos:line="1300" pos:column="39">(<param><type><name pos:line="1300" pos:column="40">This</name></type></param>,<param><type><name pos:line="1300" pos:column="45">pContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1301" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,pContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="1303" pos:column="1">#<cpp:directive pos:line="1303" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1303" pos:column="9">IDebugObject2_GetManagedDebugObject</name><parameter_list pos:line="1303" pos:column="44">(<param><type><name pos:line="1303" pos:column="45">This</name></type></param>,<param><type><name pos:line="1303" pos:column="50">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1304" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetManagedDebugObject(This,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1306" pos:column="1">#<cpp:directive pos:line="1306" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1306" pos:column="9">IDebugObject2_IsNullReference</name><parameter_list pos:line="1306" pos:column="38">(<param><type><name pos:line="1306" pos:column="39">This</name></type></param>,<param><type><name pos:line="1306" pos:column="44">pfIsNull</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1307" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsNullReference(This,pfIsNull) )</cpp:value></cpp:define> 

<cpp:define pos:line="1309" pos:column="1">#<cpp:directive pos:line="1309" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1309" pos:column="9">IDebugObject2_IsEqual</name><parameter_list pos:line="1309" pos:column="30">(<param><type><name pos:line="1309" pos:column="31">This</name></type></param>,<param><type><name pos:line="1309" pos:column="36">pObject</name></type></param>,<param><type><name pos:line="1309" pos:column="44">pfIsEqual</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1310" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsEqual(This,pObject,pfIsEqual) )</cpp:value></cpp:define> 

<cpp:define pos:line="1312" pos:column="1">#<cpp:directive pos:line="1312" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1312" pos:column="9">IDebugObject2_IsReadOnly</name><parameter_list pos:line="1312" pos:column="33">(<param><type><name pos:line="1312" pos:column="34">This</name></type></param>,<param><type><name pos:line="1312" pos:column="39">pfIsReadOnly</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1313" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly(This,pfIsReadOnly) )</cpp:value></cpp:define> 

<cpp:define pos:line="1315" pos:column="1">#<cpp:directive pos:line="1315" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1315" pos:column="9">IDebugObject2_IsProxy</name><parameter_list pos:line="1315" pos:column="30">(<param><type><name pos:line="1315" pos:column="31">This</name></type></param>,<param><type><name pos:line="1315" pos:column="36">pfIsProxy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1316" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsProxy(This,pfIsProxy) )</cpp:value></cpp:define> 


<cpp:define pos:line="1319" pos:column="1">#<cpp:directive pos:line="1319" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1319" pos:column="9">IDebugObject2_GetBackingFieldForProperty</name><parameter_list pos:line="1319" pos:column="49">(<param><type><name pos:line="1319" pos:column="50">This</name></type></param>,<param><type><name pos:line="1319" pos:column="55">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1320" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBackingFieldForProperty(This,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1322" pos:column="1">#<cpp:directive pos:line="1322" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1322" pos:column="9">IDebugObject2_GetICorDebugValue</name><parameter_list pos:line="1322" pos:column="40">(<param><type><name pos:line="1322" pos:column="41">This</name></type></param>,<param><type><name pos:line="1322" pos:column="46">ppUnk</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1323" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetICorDebugValue(This,ppUnk) )</cpp:value></cpp:define> 

<cpp:define pos:line="1325" pos:column="1">#<cpp:directive pos:line="1325" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1325" pos:column="9">IDebugObject2_CreateAlias</name><parameter_list pos:line="1325" pos:column="34">(<param><type><name pos:line="1325" pos:column="35">This</name></type></param>,<param><type><name pos:line="1325" pos:column="40">ppAlias</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1326" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateAlias(This,ppAlias) )</cpp:value></cpp:define> 

<cpp:define pos:line="1328" pos:column="1">#<cpp:directive pos:line="1328" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1328" pos:column="9">IDebugObject2_GetAlias</name><parameter_list pos:line="1328" pos:column="31">(<param><type><name pos:line="1328" pos:column="32">This</name></type></param>,<param><type><name pos:line="1328" pos:column="37">ppAlias</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1329" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAlias(This,ppAlias) )</cpp:value></cpp:define> 

<cpp:define pos:line="1331" pos:column="1">#<cpp:directive pos:line="1331" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1331" pos:column="9">IDebugObject2_GetField</name><parameter_list pos:line="1331" pos:column="31">(<param><type><name pos:line="1331" pos:column="32">This</name></type></param>,<param><type><name pos:line="1331" pos:column="37">ppField</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1332" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetField(This,ppField) )</cpp:value></cpp:define> 

<cpp:define pos:line="1334" pos:column="1">#<cpp:directive pos:line="1334" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1334" pos:column="9">IDebugObject2_IsUserData</name><parameter_list pos:line="1334" pos:column="33">(<param><type><name pos:line="1334" pos:column="34">This</name></type></param>,<param><type><name pos:line="1334" pos:column="39">pfUser</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1335" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsUserData(This,pfUser) )</cpp:value></cpp:define> 

<cpp:define pos:line="1337" pos:column="1">#<cpp:directive pos:line="1337" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1337" pos:column="9">IDebugObject2_IsEncOutdated</name><parameter_list pos:line="1337" pos:column="36">(<param><type><name pos:line="1337" pos:column="37">This</name></type></param>,<param><type><name pos:line="1337" pos:column="42">pfEncOutdated</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1338" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsEncOutdated(This,pfEncOutdated) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1340" pos:column="1">#<cpp:directive pos:line="1340" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1340" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1343" pos:column="1">#<cpp:directive pos:line="1343" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1343" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1348" pos:column="1">#<cpp:directive pos:line="1348" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1348" pos:column="9">/* __IDebugObject2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1351" pos:column="1">#<cpp:directive pos:line="1351" pos:column="2">ifndef</cpp:directive> <name pos:line="1351" pos:column="9">__IDebugArrayObject_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1352" pos:column="1">#<cpp:directive pos:line="1352" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1352" pos:column="9">__IDebugArrayObject_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1354" pos:column="1">/* interface IDebugArrayObject */</comment>
<comment type="block" pos:line="1355" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1358" pos:column="1">EXTERN_C</name> <specifier pos:line="1358" pos:column="10">const</specifier> <name pos:line="1358" pos:column="16">IID</name></type> <name pos:line="1358" pos:column="20">IID_IDebugArrayObject</name></decl>;</decl_stmt>

<cpp:if pos:line="1360" pos:column="1">#<cpp:directive pos:line="1360" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1360" pos:column="5">defined</name><argument_list pos:line="1360" pos:column="12">(<argument><expr><name pos:line="1360" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1360" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1360" pos:column="29">!</op:operator><call><name pos:line="1360" pos:column="30">defined</name><argument_list pos:line="1360" pos:column="37">(<argument><expr><name pos:line="1360" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1362" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1362" pos:column="19">(<argument pos:line="1362" pos:column="20">"29ECD774-75AE-11d2-B74E-0000F87572EF"</argument>)</argument_list></macro>
    <label><name pos:line="1363" pos:column="5">IDebugArrayObject</name> :</label> <expr_stmt><expr pos:line="1363" pos:column="25">public <name pos:line="1363" pos:column="32">IDebugObject</name>
    <block pos:line="1364" pos:column="5">{
    <expr pos:line="1365" pos:column="5">public<op:operator pos:line="1365" pos:column="11">:</op:operator>
        virtual <name pos:line="1366" pos:column="17">HRESULT</name> <name pos:line="1366" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1366" pos:column="43">GetCount</name><argument_list pos:line="1366" pos:column="51">( 
            <comment type="block" pos:line="1367" pos:column="13">/* [out] */</comment> <argument pos:line="1367" pos:column="25">__RPC__out DWORD *pdwElements</argument>)</argument_list></macro> <op:operator pos:line="1367" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="1367" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="1369" pos:column="9">virtual <name pos:line="1369" pos:column="17">HRESULT</name> <name pos:line="1369" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1369" pos:column="43">GetElement</name><argument_list pos:line="1369" pos:column="53">( 
            <comment type="block" pos:line="1370" pos:column="13">/* [in] */</comment> <argument pos:line="1370" pos:column="24">DWORD dwIndex</argument>,
            <comment type="block" pos:line="1371" pos:column="13">/* [out] */</comment> <argument pos:line="1371" pos:column="25">__RPC__deref_out_opt IDebugObject **ppElement</argument>)</argument_list></macro> <op:operator pos:line="1371" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="1371" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="1373" pos:column="9">virtual <name pos:line="1373" pos:column="17">HRESULT</name> <name pos:line="1373" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1373" pos:column="43">GetElements</name><argument_list pos:line="1373" pos:column="54">( 
            <comment type="block" pos:line="1374" pos:column="13">/* [out] */</comment> <argument pos:line="1374" pos:column="25">__RPC__deref_out_opt IEnumDebugObjects **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="1374" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="1374" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="1376" pos:column="9">virtual <name pos:line="1376" pos:column="17">HRESULT</name> <name pos:line="1376" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1376" pos:column="43">GetRank</name><argument_list pos:line="1376" pos:column="50">( 
            <comment type="block" pos:line="1377" pos:column="13">/* [out] */</comment> <argument pos:line="1377" pos:column="25">__RPC__out DWORD *pdwRank</argument>)</argument_list></macro> <op:operator pos:line="1377" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="1377" pos:column="54">0</lit:literal></expr>;
        
        <expr pos:line="1379" pos:column="9">virtual <name pos:line="1379" pos:column="17">HRESULT</name> <name pos:line="1379" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1379" pos:column="43">GetDimensions</name><argument_list pos:line="1379" pos:column="56">( 
            <comment type="block" pos:line="1380" pos:column="13">/* [in] */</comment> <argument pos:line="1380" pos:column="24">DWORD dwCount</argument>,
            <comment type="block" pos:line="1381" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="1381" pos:column="45">__RPC__out_ecount_part(dwCount, dwCount) DWORD *dwDimensions</argument>)</argument_list></macro> <op:operator pos:line="1381" pos:column="107">=</op:operator> <lit:literal type="number" pos:line="1381" pos:column="109">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1385" pos:column="1">#<cpp:directive pos:line="1385" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1385" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1387" pos:column="5">typedef <type><struct pos:line="1387" pos:column="13">struct <name pos:line="1387" pos:column="20">IDebugArrayObjectVtbl</name>
    <block pos:line="1388" pos:column="5">{<public type="default" pos:line="1388" pos:column="6">
        <function_decl><type><name pos:line="1389" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1391" pos:column="9">HRESULT</name></type> ( <name pos:line="1391" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1391" pos:column="37">*</type:modifier><name pos:line="1391" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1391" pos:column="54">( 
            <param><decl><type><name pos:line="1392" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1392" pos:column="31">*</type:modifier></type> <name pos:line="1392" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1393" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1393" pos:column="24">__RPC__in</name> <name pos:line="1393" pos:column="34">REFIID</name></type> <name pos:line="1393" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1394" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1395" pos:column="13">__RPC__deref_out</name>  <name pos:line="1395" pos:column="31">void</name> <type:modifier pos:line="1395" pos:column="36">*</type:modifier><type:modifier pos:line="1395" pos:column="37">*</type:modifier></type><name pos:line="1395" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1397" pos:column="9">ULONG</name></type> ( <name pos:line="1397" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1397" pos:column="35">*</type:modifier><name pos:line="1397" pos:column="36">AddRef</name> )<parameter_list pos:line="1397" pos:column="44">( 
            <param><decl><type><name pos:line="1398" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1398" pos:column="31">*</type:modifier></type> <name pos:line="1398" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1400" pos:column="9">ULONG</name></type> ( <name pos:line="1400" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1400" pos:column="35">*</type:modifier><name pos:line="1400" pos:column="36">Release</name> )<parameter_list pos:line="1400" pos:column="45">( 
            <param><decl><type><name pos:line="1401" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1401" pos:column="31">*</type:modifier></type> <name pos:line="1401" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1403" pos:column="9">HRESULT</name></type> ( <name pos:line="1403" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1403" pos:column="37">*</type:modifier><name pos:line="1403" pos:column="38">GetSize</name> )<parameter_list pos:line="1403" pos:column="47">( 
            <param><decl><type><name pos:line="1404" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1404" pos:column="31">*</type:modifier></type> <name pos:line="1404" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1405" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1405" pos:column="25">__RPC__out</name> <name pos:line="1405" pos:column="36">UINT</name> <type:modifier pos:line="1405" pos:column="41">*</type:modifier></type><name pos:line="1405" pos:column="42">pnSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1407" pos:column="9">HRESULT</name> <argument_list pos:line="1407" pos:column="17">( <argument pos:line="1407" pos:column="19">STDMETHODCALLTYPE *GetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1407" pos:column="48">(</op:operator> 
            <name pos:line="1408" pos:column="13">IDebugArrayObject</name> <op:operator pos:line="1408" pos:column="31">*</op:operator> <name pos:line="1408" pos:column="33">This</name><op:operator pos:line="1408" pos:column="37">,</op:operator>
            <comment type="block" pos:line="1409" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="1409" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="1409" pos:column="67">(<argument pos:line="1409" pos:column="68">nSize</argument>, <argument pos:line="1409" pos:column="75">nSize</argument>)</argument_list></macro> <name pos:line="1409" pos:column="82">BYTE</name> <op:operator pos:line="1409" pos:column="87">*</op:operator><name pos:line="1409" pos:column="88">pValue</name><op:operator pos:line="1409" pos:column="94">,</op:operator>
            <comment type="block" pos:line="1410" pos:column="13">/* [in] */</comment> <name pos:line="1410" pos:column="24">UINT</name> <name pos:line="1410" pos:column="29">nSize</name><op:operator pos:line="1410" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="1412" pos:column="9">HRESULT</name> <argument_list pos:line="1412" pos:column="17">( <argument pos:line="1412" pos:column="19">STDMETHODCALLTYPE *SetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1412" pos:column="48">(</op:operator> 
            <name pos:line="1413" pos:column="13">IDebugArrayObject</name> <op:operator pos:line="1413" pos:column="31">*</op:operator> <name pos:line="1413" pos:column="33">This</name><op:operator pos:line="1413" pos:column="37">,</op:operator>
            <comment type="block" pos:line="1414" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1414" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1414" pos:column="54">(<argument pos:line="1414" pos:column="55">nSize</argument>)</argument_list></macro> <name pos:line="1414" pos:column="62">BYTE</name> <op:operator pos:line="1414" pos:column="67">*</op:operator><name pos:line="1414" pos:column="68">pValue</name><op:operator pos:line="1414" pos:column="74">,</op:operator>
            <comment type="block" pos:line="1415" pos:column="13">/* [in] */</comment> <name pos:line="1415" pos:column="24">UINT</name> <name pos:line="1415" pos:column="29">nSize</name><op:operator pos:line="1415" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="1417" pos:column="9">HRESULT</name></type> ( <name pos:line="1417" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1417" pos:column="37">*</type:modifier><name pos:line="1417" pos:column="38">SetReferenceValue</name> )<parameter_list pos:line="1417" pos:column="57">( 
            <param><decl><type><name pos:line="1418" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1418" pos:column="31">*</type:modifier></type> <name pos:line="1418" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1419" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1419" pos:column="24">__RPC__in_opt</name> <name pos:line="1419" pos:column="38">IDebugObject</name> <type:modifier pos:line="1419" pos:column="51">*</type:modifier></type><name pos:line="1419" pos:column="52">pObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1421" pos:column="9">HRESULT</name></type> ( <name pos:line="1421" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1421" pos:column="37">*</type:modifier><name pos:line="1421" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="1421" pos:column="56">( 
            <param><decl><type><name pos:line="1422" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1422" pos:column="31">*</type:modifier></type> <name pos:line="1422" pos:column="33">This</name></decl></param>,
            <param><decl><type><name pos:line="1423" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="1423" pos:column="33">IDebugMemoryContext2</name> <type:modifier pos:line="1423" pos:column="54">*</type:modifier><type:modifier pos:line="1423" pos:column="55">*</type:modifier></type><name pos:line="1423" pos:column="56">pContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1425" pos:column="9">HRESULT</name></type> ( <name pos:line="1425" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1425" pos:column="37">*</type:modifier><name pos:line="1425" pos:column="38">GetManagedDebugObject</name> )<parameter_list pos:line="1425" pos:column="61">( 
            <param><decl><type><name pos:line="1426" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1426" pos:column="31">*</type:modifier></type> <name pos:line="1426" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1427" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1427" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1427" pos:column="46">IDebugManagedObject</name> <type:modifier pos:line="1427" pos:column="66">*</type:modifier><type:modifier pos:line="1427" pos:column="67">*</type:modifier></type><name pos:line="1427" pos:column="68">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1429" pos:column="9">HRESULT</name></type> ( <name pos:line="1429" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1429" pos:column="37">*</type:modifier><name pos:line="1429" pos:column="38">IsNullReference</name> )<parameter_list pos:line="1429" pos:column="55">( 
            <param><decl><type><name pos:line="1430" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1430" pos:column="31">*</type:modifier></type> <name pos:line="1430" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1431" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1431" pos:column="25">__RPC__out</name> <name pos:line="1431" pos:column="36">BOOL</name> <type:modifier pos:line="1431" pos:column="41">*</type:modifier></type><name pos:line="1431" pos:column="42">pfIsNull</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1433" pos:column="9">HRESULT</name></type> ( <name pos:line="1433" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1433" pos:column="37">*</type:modifier><name pos:line="1433" pos:column="38">IsEqual</name> )<parameter_list pos:line="1433" pos:column="47">( 
            <param><decl><type><name pos:line="1434" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1434" pos:column="31">*</type:modifier></type> <name pos:line="1434" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1435" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1435" pos:column="24">__RPC__in_opt</name> <name pos:line="1435" pos:column="38">IDebugObject</name> <type:modifier pos:line="1435" pos:column="51">*</type:modifier></type><name pos:line="1435" pos:column="52">pObject</name></decl></param>,
            <comment type="block" pos:line="1436" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1436" pos:column="25">__RPC__out</name> <name pos:line="1436" pos:column="36">BOOL</name> <type:modifier pos:line="1436" pos:column="41">*</type:modifier></type><name pos:line="1436" pos:column="42">pfIsEqual</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1438" pos:column="9">HRESULT</name></type> ( <name pos:line="1438" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1438" pos:column="37">*</type:modifier><name pos:line="1438" pos:column="38">IsReadOnly</name> )<parameter_list pos:line="1438" pos:column="50">( 
            <param><decl><type><name pos:line="1439" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1439" pos:column="31">*</type:modifier></type> <name pos:line="1439" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1440" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1440" pos:column="25">__RPC__out</name> <name pos:line="1440" pos:column="36">BOOL</name> <type:modifier pos:line="1440" pos:column="41">*</type:modifier></type><name pos:line="1440" pos:column="42">pfIsReadOnly</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1442" pos:column="9">HRESULT</name></type> ( <name pos:line="1442" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1442" pos:column="37">*</type:modifier><name pos:line="1442" pos:column="38">IsProxy</name> )<parameter_list pos:line="1442" pos:column="47">( 
            <param><decl><type><name pos:line="1443" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1443" pos:column="31">*</type:modifier></type> <name pos:line="1443" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1444" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1444" pos:column="25">__RPC__out</name> <name pos:line="1444" pos:column="36">BOOL</name> <type:modifier pos:line="1444" pos:column="41">*</type:modifier></type><name pos:line="1444" pos:column="42">pfIsProxy</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1446" pos:column="9">HRESULT</name></type> ( <name pos:line="1446" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1446" pos:column="37">*</type:modifier><name pos:line="1446" pos:column="38">GetCount</name> )<parameter_list pos:line="1446" pos:column="48">( 
            <param><decl><type><name pos:line="1447" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1447" pos:column="31">*</type:modifier></type> <name pos:line="1447" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1448" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1448" pos:column="25">__RPC__out</name> <name pos:line="1448" pos:column="36">DWORD</name> <type:modifier pos:line="1448" pos:column="42">*</type:modifier></type><name pos:line="1448" pos:column="43">pdwElements</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1450" pos:column="9">HRESULT</name></type> ( <name pos:line="1450" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1450" pos:column="37">*</type:modifier><name pos:line="1450" pos:column="38">GetElement</name> )<parameter_list pos:line="1450" pos:column="50">( 
            <param><decl><type><name pos:line="1451" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1451" pos:column="31">*</type:modifier></type> <name pos:line="1451" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1452" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1452" pos:column="24">DWORD</name></type> <name pos:line="1452" pos:column="30">dwIndex</name></decl></param>,
            <comment type="block" pos:line="1453" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1453" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1453" pos:column="46">IDebugObject</name> <type:modifier pos:line="1453" pos:column="59">*</type:modifier><type:modifier pos:line="1453" pos:column="60">*</type:modifier></type><name pos:line="1453" pos:column="61">ppElement</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1455" pos:column="9">HRESULT</name></type> ( <name pos:line="1455" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1455" pos:column="37">*</type:modifier><name pos:line="1455" pos:column="38">GetElements</name> )<parameter_list pos:line="1455" pos:column="51">( 
            <param><decl><type><name pos:line="1456" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1456" pos:column="31">*</type:modifier></type> <name pos:line="1456" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1457" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1457" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1457" pos:column="46">IEnumDebugObjects</name> <type:modifier pos:line="1457" pos:column="64">*</type:modifier><type:modifier pos:line="1457" pos:column="65">*</type:modifier></type><name pos:line="1457" pos:column="66">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1459" pos:column="9">HRESULT</name></type> ( <name pos:line="1459" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1459" pos:column="37">*</type:modifier><name pos:line="1459" pos:column="38">GetRank</name> )<parameter_list pos:line="1459" pos:column="47">( 
            <param><decl><type><name pos:line="1460" pos:column="13">IDebugArrayObject</name> <type:modifier pos:line="1460" pos:column="31">*</type:modifier></type> <name pos:line="1460" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="1461" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1461" pos:column="25">__RPC__out</name> <name pos:line="1461" pos:column="36">DWORD</name> <type:modifier pos:line="1461" pos:column="42">*</type:modifier></type><name pos:line="1461" pos:column="43">pdwRank</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1463" pos:column="9">HRESULT</name> <argument_list pos:line="1463" pos:column="17">( <argument pos:line="1463" pos:column="19">STDMETHODCALLTYPE *GetDimensions</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1463" pos:column="53">(</op:operator> 
            <name pos:line="1464" pos:column="13">IDebugArrayObject</name> <op:operator pos:line="1464" pos:column="31">*</op:operator> <name pos:line="1464" pos:column="33">This</name><op:operator pos:line="1464" pos:column="37">,</op:operator>
            <comment type="block" pos:line="1465" pos:column="13">/* [in] */</comment> <name pos:line="1465" pos:column="24">DWORD</name> <name pos:line="1465" pos:column="30">dwCount</name><op:operator pos:line="1465" pos:column="37">,</op:operator>
            <comment type="block" pos:line="1466" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="1466" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="1466" pos:column="67">(<argument pos:line="1466" pos:column="68">dwCount</argument>, <argument pos:line="1466" pos:column="77">dwCount</argument>)</argument_list></macro> <name pos:line="1466" pos:column="86">DWORD</name> <op:operator pos:line="1466" pos:column="92">*</op:operator><name pos:line="1466" pos:column="93">dwDimensions</name><op:operator pos:line="1466" pos:column="105">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="1468" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1469" pos:column="7">IDebugArrayObjectVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1471" pos:column="5">interface</name></type> <name pos:line="1471" pos:column="15">IDebugArrayObject</name>
    <argument_list pos:line="1472" pos:column="5">{
        <argument><expr><name pos:line="1473" pos:column="9">CONST_VTBL</name> struct <name pos:line="1473" pos:column="27">IDebugArrayObjectVtbl</name> <op:operator pos:line="1473" pos:column="49">*</op:operator><name pos:line="1473" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1478" pos:column="1">#<cpp:directive pos:line="1478" pos:column="2">ifdef</cpp:directive> <name pos:line="1478" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1481" pos:column="1">#<cpp:directive pos:line="1481" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1481" pos:column="9">IDebugArrayObject_QueryInterface</name><parameter_list pos:line="1481" pos:column="41">(<param><type><name pos:line="1481" pos:column="42">This</name></type></param>,<param><type><name pos:line="1481" pos:column="47">riid</name></type></param>,<param><type><name pos:line="1481" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1482" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1484" pos:column="1">#<cpp:directive pos:line="1484" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1484" pos:column="9">IDebugArrayObject_AddRef</name><parameter_list pos:line="1484" pos:column="33">(<param><type><name pos:line="1484" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1485" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1487" pos:column="1">#<cpp:directive pos:line="1487" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1487" pos:column="9">IDebugArrayObject_Release</name><parameter_list pos:line="1487" pos:column="34">(<param><type><name pos:line="1487" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1488" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1491" pos:column="1">#<cpp:directive pos:line="1491" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1491" pos:column="9">IDebugArrayObject_GetSize</name><parameter_list pos:line="1491" pos:column="34">(<param><type><name pos:line="1491" pos:column="35">This</name></type></param>,<param><type><name pos:line="1491" pos:column="40">pnSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1492" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pnSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1494" pos:column="1">#<cpp:directive pos:line="1494" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1494" pos:column="9">IDebugArrayObject_GetValue</name><parameter_list pos:line="1494" pos:column="35">(<param><type><name pos:line="1494" pos:column="36">This</name></type></param>,<param><type><name pos:line="1494" pos:column="41">pValue</name></type></param>,<param><type><name pos:line="1494" pos:column="48">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1495" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1497" pos:column="1">#<cpp:directive pos:line="1497" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1497" pos:column="9">IDebugArrayObject_SetValue</name><parameter_list pos:line="1497" pos:column="35">(<param><type><name pos:line="1497" pos:column="36">This</name></type></param>,<param><type><name pos:line="1497" pos:column="41">pValue</name></type></param>,<param><type><name pos:line="1497" pos:column="48">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1498" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1500" pos:column="1">#<cpp:directive pos:line="1500" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1500" pos:column="9">IDebugArrayObject_SetReferenceValue</name><parameter_list pos:line="1500" pos:column="44">(<param><type><name pos:line="1500" pos:column="45">This</name></type></param>,<param><type><name pos:line="1500" pos:column="50">pObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1501" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetReferenceValue(This,pObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1503" pos:column="1">#<cpp:directive pos:line="1503" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1503" pos:column="9">IDebugArrayObject_GetMemoryContext</name><parameter_list pos:line="1503" pos:column="43">(<param><type><name pos:line="1503" pos:column="44">This</name></type></param>,<param><type><name pos:line="1503" pos:column="49">pContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1504" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,pContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="1506" pos:column="1">#<cpp:directive pos:line="1506" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1506" pos:column="9">IDebugArrayObject_GetManagedDebugObject</name><parameter_list pos:line="1506" pos:column="48">(<param><type><name pos:line="1506" pos:column="49">This</name></type></param>,<param><type><name pos:line="1506" pos:column="54">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1507" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetManagedDebugObject(This,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1509" pos:column="1">#<cpp:directive pos:line="1509" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1509" pos:column="9">IDebugArrayObject_IsNullReference</name><parameter_list pos:line="1509" pos:column="42">(<param><type><name pos:line="1509" pos:column="43">This</name></type></param>,<param><type><name pos:line="1509" pos:column="48">pfIsNull</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1510" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsNullReference(This,pfIsNull) )</cpp:value></cpp:define> 

<cpp:define pos:line="1512" pos:column="1">#<cpp:directive pos:line="1512" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1512" pos:column="9">IDebugArrayObject_IsEqual</name><parameter_list pos:line="1512" pos:column="34">(<param><type><name pos:line="1512" pos:column="35">This</name></type></param>,<param><type><name pos:line="1512" pos:column="40">pObject</name></type></param>,<param><type><name pos:line="1512" pos:column="48">pfIsEqual</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1513" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsEqual(This,pObject,pfIsEqual) )</cpp:value></cpp:define> 

<cpp:define pos:line="1515" pos:column="1">#<cpp:directive pos:line="1515" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1515" pos:column="9">IDebugArrayObject_IsReadOnly</name><parameter_list pos:line="1515" pos:column="37">(<param><type><name pos:line="1515" pos:column="38">This</name></type></param>,<param><type><name pos:line="1515" pos:column="43">pfIsReadOnly</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1516" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly(This,pfIsReadOnly) )</cpp:value></cpp:define> 

<cpp:define pos:line="1518" pos:column="1">#<cpp:directive pos:line="1518" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1518" pos:column="9">IDebugArrayObject_IsProxy</name><parameter_list pos:line="1518" pos:column="34">(<param><type><name pos:line="1518" pos:column="35">This</name></type></param>,<param><type><name pos:line="1518" pos:column="40">pfIsProxy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1519" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsProxy(This,pfIsProxy) )</cpp:value></cpp:define> 


<cpp:define pos:line="1522" pos:column="1">#<cpp:directive pos:line="1522" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1522" pos:column="9">IDebugArrayObject_GetCount</name><parameter_list pos:line="1522" pos:column="35">(<param><type><name pos:line="1522" pos:column="36">This</name></type></param>,<param><type><name pos:line="1522" pos:column="41">pdwElements</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1523" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pdwElements) )</cpp:value></cpp:define> 

<cpp:define pos:line="1525" pos:column="1">#<cpp:directive pos:line="1525" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1525" pos:column="9">IDebugArrayObject_GetElement</name><parameter_list pos:line="1525" pos:column="37">(<param><type><name pos:line="1525" pos:column="38">This</name></type></param>,<param><type><name pos:line="1525" pos:column="43">dwIndex</name></type></param>,<param><type><name pos:line="1525" pos:column="51">ppElement</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1526" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElement(This,dwIndex,ppElement) )</cpp:value></cpp:define> 

<cpp:define pos:line="1528" pos:column="1">#<cpp:directive pos:line="1528" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1528" pos:column="9">IDebugArrayObject_GetElements</name><parameter_list pos:line="1528" pos:column="38">(<param><type><name pos:line="1528" pos:column="39">This</name></type></param>,<param><type><name pos:line="1528" pos:column="44">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1529" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElements(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="1531" pos:column="1">#<cpp:directive pos:line="1531" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1531" pos:column="9">IDebugArrayObject_GetRank</name><parameter_list pos:line="1531" pos:column="34">(<param><type><name pos:line="1531" pos:column="35">This</name></type></param>,<param><type><name pos:line="1531" pos:column="40">pdwRank</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1532" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRank(This,pdwRank) )</cpp:value></cpp:define> 

<cpp:define pos:line="1534" pos:column="1">#<cpp:directive pos:line="1534" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1534" pos:column="9">IDebugArrayObject_GetDimensions</name><parameter_list pos:line="1534" pos:column="40">(<param><type><name pos:line="1534" pos:column="41">This</name></type></param>,<param><type><name pos:line="1534" pos:column="46">dwCount</name></type></param>,<param><type><name pos:line="1534" pos:column="54">dwDimensions</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1535" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDimensions(This,dwCount,dwDimensions) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1537" pos:column="1">#<cpp:directive pos:line="1537" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1537" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1540" pos:column="1">#<cpp:directive pos:line="1540" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1540" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1545" pos:column="1">#<cpp:directive pos:line="1545" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1545" pos:column="9">/* __IDebugArrayObject_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1548" pos:column="1">#<cpp:directive pos:line="1548" pos:column="2">ifndef</cpp:directive> <name pos:line="1548" pos:column="9">__IDebugArrayObject2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1549" pos:column="1">#<cpp:directive pos:line="1549" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1549" pos:column="9">__IDebugArrayObject2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1551" pos:column="1">/* interface IDebugArrayObject2 */</comment>
<comment type="block" pos:line="1552" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1555" pos:column="1">EXTERN_C</name> <specifier pos:line="1555" pos:column="10">const</specifier> <name pos:line="1555" pos:column="16">IID</name></type> <name pos:line="1555" pos:column="20">IID_IDebugArrayObject2</name></decl>;</decl_stmt>

<cpp:if pos:line="1557" pos:column="1">#<cpp:directive pos:line="1557" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1557" pos:column="5">defined</name><argument_list pos:line="1557" pos:column="12">(<argument><expr><name pos:line="1557" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1557" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1557" pos:column="29">!</op:operator><call><name pos:line="1557" pos:column="30">defined</name><argument_list pos:line="1557" pos:column="37">(<argument><expr><name pos:line="1557" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1559" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1559" pos:column="19">(<argument pos:line="1559" pos:column="20">"41487E33-9A10-42fe-BA3B-15FDE59D09D5"</argument>)</argument_list></macro>
    <label><name pos:line="1560" pos:column="5">IDebugArrayObject2</name> :</label> <expr_stmt><expr pos:line="1560" pos:column="26">public <name pos:line="1560" pos:column="33">IDebugArrayObject</name>
    <block pos:line="1561" pos:column="5">{
    <expr pos:line="1562" pos:column="5">public<op:operator pos:line="1562" pos:column="11">:</op:operator>
        virtual <name pos:line="1563" pos:column="17">HRESULT</name> <name pos:line="1563" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1563" pos:column="43">HasBaseIndices</name><argument_list pos:line="1563" pos:column="57">( 
            <comment type="block" pos:line="1564" pos:column="13">/* [out] */</comment> <argument pos:line="1564" pos:column="25">__RPC__out BOOL *pfHasBaseIndices</argument>)</argument_list></macro> <op:operator pos:line="1564" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="1564" pos:column="62">0</lit:literal></expr>;
        
        <expr pos:line="1566" pos:column="9">virtual <name pos:line="1566" pos:column="17">HRESULT</name> <name pos:line="1566" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1566" pos:column="43">GetBaseIndices</name><argument_list pos:line="1566" pos:column="57">( 
            <comment type="block" pos:line="1567" pos:column="13">/* [in] */</comment> <argument pos:line="1567" pos:column="24">DWORD dwRank</argument>,
            <comment type="block" pos:line="1568" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="1568" pos:column="45">__RPC__out_ecount_part(dwRank, dwRank) DWORD *dwIndices</argument>)</argument_list></macro> <op:operator pos:line="1568" pos:column="102">=</op:operator> <lit:literal type="number" pos:line="1568" pos:column="104">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1572" pos:column="1">#<cpp:directive pos:line="1572" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1572" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1574" pos:column="5">typedef <type><struct pos:line="1574" pos:column="13">struct <name pos:line="1574" pos:column="20">IDebugArrayObject2Vtbl</name>
    <block pos:line="1575" pos:column="5">{<public type="default" pos:line="1575" pos:column="6">
        <function_decl><type><name pos:line="1576" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1578" pos:column="9">HRESULT</name></type> ( <name pos:line="1578" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1578" pos:column="37">*</type:modifier><name pos:line="1578" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1578" pos:column="54">( 
            <param><decl><type><name pos:line="1579" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1579" pos:column="32">*</type:modifier></type> <name pos:line="1579" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1580" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1580" pos:column="24">__RPC__in</name> <name pos:line="1580" pos:column="34">REFIID</name></type> <name pos:line="1580" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1581" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1582" pos:column="13">__RPC__deref_out</name>  <name pos:line="1582" pos:column="31">void</name> <type:modifier pos:line="1582" pos:column="36">*</type:modifier><type:modifier pos:line="1582" pos:column="37">*</type:modifier></type><name pos:line="1582" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1584" pos:column="9">ULONG</name></type> ( <name pos:line="1584" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1584" pos:column="35">*</type:modifier><name pos:line="1584" pos:column="36">AddRef</name> )<parameter_list pos:line="1584" pos:column="44">( 
            <param><decl><type><name pos:line="1585" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1585" pos:column="32">*</type:modifier></type> <name pos:line="1585" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1587" pos:column="9">ULONG</name></type> ( <name pos:line="1587" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1587" pos:column="35">*</type:modifier><name pos:line="1587" pos:column="36">Release</name> )<parameter_list pos:line="1587" pos:column="45">( 
            <param><decl><type><name pos:line="1588" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1588" pos:column="32">*</type:modifier></type> <name pos:line="1588" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1590" pos:column="9">HRESULT</name></type> ( <name pos:line="1590" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1590" pos:column="37">*</type:modifier><name pos:line="1590" pos:column="38">GetSize</name> )<parameter_list pos:line="1590" pos:column="47">( 
            <param><decl><type><name pos:line="1591" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1591" pos:column="32">*</type:modifier></type> <name pos:line="1591" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1592" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1592" pos:column="25">__RPC__out</name> <name pos:line="1592" pos:column="36">UINT</name> <type:modifier pos:line="1592" pos:column="41">*</type:modifier></type><name pos:line="1592" pos:column="42">pnSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1594" pos:column="9">HRESULT</name> <argument_list pos:line="1594" pos:column="17">( <argument pos:line="1594" pos:column="19">STDMETHODCALLTYPE *GetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1594" pos:column="48">(</op:operator> 
            <name pos:line="1595" pos:column="13">IDebugArrayObject2</name> <op:operator pos:line="1595" pos:column="32">*</op:operator> <name pos:line="1595" pos:column="34">This</name><op:operator pos:line="1595" pos:column="38">,</op:operator>
            <comment type="block" pos:line="1596" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="1596" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="1596" pos:column="67">(<argument pos:line="1596" pos:column="68">nSize</argument>, <argument pos:line="1596" pos:column="75">nSize</argument>)</argument_list></macro> <name pos:line="1596" pos:column="82">BYTE</name> <op:operator pos:line="1596" pos:column="87">*</op:operator><name pos:line="1596" pos:column="88">pValue</name><op:operator pos:line="1596" pos:column="94">,</op:operator>
            <comment type="block" pos:line="1597" pos:column="13">/* [in] */</comment> <name pos:line="1597" pos:column="24">UINT</name> <name pos:line="1597" pos:column="29">nSize</name><op:operator pos:line="1597" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="1599" pos:column="9">HRESULT</name> <argument_list pos:line="1599" pos:column="17">( <argument pos:line="1599" pos:column="19">STDMETHODCALLTYPE *SetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1599" pos:column="48">(</op:operator> 
            <name pos:line="1600" pos:column="13">IDebugArrayObject2</name> <op:operator pos:line="1600" pos:column="32">*</op:operator> <name pos:line="1600" pos:column="34">This</name><op:operator pos:line="1600" pos:column="38">,</op:operator>
            <comment type="block" pos:line="1601" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1601" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1601" pos:column="54">(<argument pos:line="1601" pos:column="55">nSize</argument>)</argument_list></macro> <name pos:line="1601" pos:column="62">BYTE</name> <op:operator pos:line="1601" pos:column="67">*</op:operator><name pos:line="1601" pos:column="68">pValue</name><op:operator pos:line="1601" pos:column="74">,</op:operator>
            <comment type="block" pos:line="1602" pos:column="13">/* [in] */</comment> <name pos:line="1602" pos:column="24">UINT</name> <name pos:line="1602" pos:column="29">nSize</name><op:operator pos:line="1602" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="1604" pos:column="9">HRESULT</name></type> ( <name pos:line="1604" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1604" pos:column="37">*</type:modifier><name pos:line="1604" pos:column="38">SetReferenceValue</name> )<parameter_list pos:line="1604" pos:column="57">( 
            <param><decl><type><name pos:line="1605" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1605" pos:column="32">*</type:modifier></type> <name pos:line="1605" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1606" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1606" pos:column="24">__RPC__in_opt</name> <name pos:line="1606" pos:column="38">IDebugObject</name> <type:modifier pos:line="1606" pos:column="51">*</type:modifier></type><name pos:line="1606" pos:column="52">pObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1608" pos:column="9">HRESULT</name></type> ( <name pos:line="1608" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1608" pos:column="37">*</type:modifier><name pos:line="1608" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="1608" pos:column="56">( 
            <param><decl><type><name pos:line="1609" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1609" pos:column="32">*</type:modifier></type> <name pos:line="1609" pos:column="34">This</name></decl></param>,
            <param><decl><type><name pos:line="1610" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="1610" pos:column="33">IDebugMemoryContext2</name> <type:modifier pos:line="1610" pos:column="54">*</type:modifier><type:modifier pos:line="1610" pos:column="55">*</type:modifier></type><name pos:line="1610" pos:column="56">pContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1612" pos:column="9">HRESULT</name></type> ( <name pos:line="1612" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1612" pos:column="37">*</type:modifier><name pos:line="1612" pos:column="38">GetManagedDebugObject</name> )<parameter_list pos:line="1612" pos:column="61">( 
            <param><decl><type><name pos:line="1613" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1613" pos:column="32">*</type:modifier></type> <name pos:line="1613" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1614" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1614" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1614" pos:column="46">IDebugManagedObject</name> <type:modifier pos:line="1614" pos:column="66">*</type:modifier><type:modifier pos:line="1614" pos:column="67">*</type:modifier></type><name pos:line="1614" pos:column="68">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1616" pos:column="9">HRESULT</name></type> ( <name pos:line="1616" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1616" pos:column="37">*</type:modifier><name pos:line="1616" pos:column="38">IsNullReference</name> )<parameter_list pos:line="1616" pos:column="55">( 
            <param><decl><type><name pos:line="1617" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1617" pos:column="32">*</type:modifier></type> <name pos:line="1617" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1618" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1618" pos:column="25">__RPC__out</name> <name pos:line="1618" pos:column="36">BOOL</name> <type:modifier pos:line="1618" pos:column="41">*</type:modifier></type><name pos:line="1618" pos:column="42">pfIsNull</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1620" pos:column="9">HRESULT</name></type> ( <name pos:line="1620" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1620" pos:column="37">*</type:modifier><name pos:line="1620" pos:column="38">IsEqual</name> )<parameter_list pos:line="1620" pos:column="47">( 
            <param><decl><type><name pos:line="1621" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1621" pos:column="32">*</type:modifier></type> <name pos:line="1621" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1622" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1622" pos:column="24">__RPC__in_opt</name> <name pos:line="1622" pos:column="38">IDebugObject</name> <type:modifier pos:line="1622" pos:column="51">*</type:modifier></type><name pos:line="1622" pos:column="52">pObject</name></decl></param>,
            <comment type="block" pos:line="1623" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1623" pos:column="25">__RPC__out</name> <name pos:line="1623" pos:column="36">BOOL</name> <type:modifier pos:line="1623" pos:column="41">*</type:modifier></type><name pos:line="1623" pos:column="42">pfIsEqual</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1625" pos:column="9">HRESULT</name></type> ( <name pos:line="1625" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1625" pos:column="37">*</type:modifier><name pos:line="1625" pos:column="38">IsReadOnly</name> )<parameter_list pos:line="1625" pos:column="50">( 
            <param><decl><type><name pos:line="1626" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1626" pos:column="32">*</type:modifier></type> <name pos:line="1626" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1627" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1627" pos:column="25">__RPC__out</name> <name pos:line="1627" pos:column="36">BOOL</name> <type:modifier pos:line="1627" pos:column="41">*</type:modifier></type><name pos:line="1627" pos:column="42">pfIsReadOnly</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1629" pos:column="9">HRESULT</name></type> ( <name pos:line="1629" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1629" pos:column="37">*</type:modifier><name pos:line="1629" pos:column="38">IsProxy</name> )<parameter_list pos:line="1629" pos:column="47">( 
            <param><decl><type><name pos:line="1630" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1630" pos:column="32">*</type:modifier></type> <name pos:line="1630" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1631" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1631" pos:column="25">__RPC__out</name> <name pos:line="1631" pos:column="36">BOOL</name> <type:modifier pos:line="1631" pos:column="41">*</type:modifier></type><name pos:line="1631" pos:column="42">pfIsProxy</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1633" pos:column="9">HRESULT</name></type> ( <name pos:line="1633" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1633" pos:column="37">*</type:modifier><name pos:line="1633" pos:column="38">GetCount</name> )<parameter_list pos:line="1633" pos:column="48">( 
            <param><decl><type><name pos:line="1634" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1634" pos:column="32">*</type:modifier></type> <name pos:line="1634" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1635" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1635" pos:column="25">__RPC__out</name> <name pos:line="1635" pos:column="36">DWORD</name> <type:modifier pos:line="1635" pos:column="42">*</type:modifier></type><name pos:line="1635" pos:column="43">pdwElements</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1637" pos:column="9">HRESULT</name></type> ( <name pos:line="1637" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1637" pos:column="37">*</type:modifier><name pos:line="1637" pos:column="38">GetElement</name> )<parameter_list pos:line="1637" pos:column="50">( 
            <param><decl><type><name pos:line="1638" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1638" pos:column="32">*</type:modifier></type> <name pos:line="1638" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1639" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1639" pos:column="24">DWORD</name></type> <name pos:line="1639" pos:column="30">dwIndex</name></decl></param>,
            <comment type="block" pos:line="1640" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1640" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1640" pos:column="46">IDebugObject</name> <type:modifier pos:line="1640" pos:column="59">*</type:modifier><type:modifier pos:line="1640" pos:column="60">*</type:modifier></type><name pos:line="1640" pos:column="61">ppElement</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1642" pos:column="9">HRESULT</name></type> ( <name pos:line="1642" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1642" pos:column="37">*</type:modifier><name pos:line="1642" pos:column="38">GetElements</name> )<parameter_list pos:line="1642" pos:column="51">( 
            <param><decl><type><name pos:line="1643" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1643" pos:column="32">*</type:modifier></type> <name pos:line="1643" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1644" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1644" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1644" pos:column="46">IEnumDebugObjects</name> <type:modifier pos:line="1644" pos:column="64">*</type:modifier><type:modifier pos:line="1644" pos:column="65">*</type:modifier></type><name pos:line="1644" pos:column="66">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1646" pos:column="9">HRESULT</name></type> ( <name pos:line="1646" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1646" pos:column="37">*</type:modifier><name pos:line="1646" pos:column="38">GetRank</name> )<parameter_list pos:line="1646" pos:column="47">( 
            <param><decl><type><name pos:line="1647" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1647" pos:column="32">*</type:modifier></type> <name pos:line="1647" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1648" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1648" pos:column="25">__RPC__out</name> <name pos:line="1648" pos:column="36">DWORD</name> <type:modifier pos:line="1648" pos:column="42">*</type:modifier></type><name pos:line="1648" pos:column="43">pdwRank</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1650" pos:column="9">HRESULT</name> <argument_list pos:line="1650" pos:column="17">( <argument pos:line="1650" pos:column="19">STDMETHODCALLTYPE *GetDimensions</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1650" pos:column="53">(</op:operator> 
            <name pos:line="1651" pos:column="13">IDebugArrayObject2</name> <op:operator pos:line="1651" pos:column="32">*</op:operator> <name pos:line="1651" pos:column="34">This</name><op:operator pos:line="1651" pos:column="38">,</op:operator>
            <comment type="block" pos:line="1652" pos:column="13">/* [in] */</comment> <name pos:line="1652" pos:column="24">DWORD</name> <name pos:line="1652" pos:column="30">dwCount</name><op:operator pos:line="1652" pos:column="37">,</op:operator>
            <comment type="block" pos:line="1653" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="1653" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="1653" pos:column="67">(<argument pos:line="1653" pos:column="68">dwCount</argument>, <argument pos:line="1653" pos:column="77">dwCount</argument>)</argument_list></macro> <name pos:line="1653" pos:column="86">DWORD</name> <op:operator pos:line="1653" pos:column="92">*</op:operator><name pos:line="1653" pos:column="93">dwDimensions</name><op:operator pos:line="1653" pos:column="105">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="1655" pos:column="9">HRESULT</name></type> ( <name pos:line="1655" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1655" pos:column="37">*</type:modifier><name pos:line="1655" pos:column="38">HasBaseIndices</name> )<parameter_list pos:line="1655" pos:column="54">( 
            <param><decl><type><name pos:line="1656" pos:column="13">IDebugArrayObject2</name> <type:modifier pos:line="1656" pos:column="32">*</type:modifier></type> <name pos:line="1656" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="1657" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1657" pos:column="25">__RPC__out</name> <name pos:line="1657" pos:column="36">BOOL</name> <type:modifier pos:line="1657" pos:column="41">*</type:modifier></type><name pos:line="1657" pos:column="42">pfHasBaseIndices</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1659" pos:column="9">HRESULT</name> <argument_list pos:line="1659" pos:column="17">( <argument pos:line="1659" pos:column="19">STDMETHODCALLTYPE *GetBaseIndices</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1659" pos:column="54">(</op:operator> 
            <name pos:line="1660" pos:column="13">IDebugArrayObject2</name> <op:operator pos:line="1660" pos:column="32">*</op:operator> <name pos:line="1660" pos:column="34">This</name><op:operator pos:line="1660" pos:column="38">,</op:operator>
            <comment type="block" pos:line="1661" pos:column="13">/* [in] */</comment> <name pos:line="1661" pos:column="24">DWORD</name> <name pos:line="1661" pos:column="30">dwRank</name><op:operator pos:line="1661" pos:column="36">,</op:operator>
            <comment type="block" pos:line="1662" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="1662" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="1662" pos:column="67">(<argument pos:line="1662" pos:column="68">dwRank</argument>, <argument pos:line="1662" pos:column="76">dwRank</argument>)</argument_list></macro> <name pos:line="1662" pos:column="84">DWORD</name> <op:operator pos:line="1662" pos:column="90">*</op:operator><name pos:line="1662" pos:column="91">dwIndices</name><op:operator pos:line="1662" pos:column="100">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="1664" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1665" pos:column="7">IDebugArrayObject2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1667" pos:column="5">interface</name></type> <name pos:line="1667" pos:column="15">IDebugArrayObject2</name>
    <argument_list pos:line="1668" pos:column="5">{
        <argument><expr><name pos:line="1669" pos:column="9">CONST_VTBL</name> struct <name pos:line="1669" pos:column="27">IDebugArrayObject2Vtbl</name> <op:operator pos:line="1669" pos:column="50">*</op:operator><name pos:line="1669" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1674" pos:column="1">#<cpp:directive pos:line="1674" pos:column="2">ifdef</cpp:directive> <name pos:line="1674" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1677" pos:column="1">#<cpp:directive pos:line="1677" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1677" pos:column="9">IDebugArrayObject2_QueryInterface</name><parameter_list pos:line="1677" pos:column="42">(<param><type><name pos:line="1677" pos:column="43">This</name></type></param>,<param><type><name pos:line="1677" pos:column="48">riid</name></type></param>,<param><type><name pos:line="1677" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1678" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1680" pos:column="1">#<cpp:directive pos:line="1680" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1680" pos:column="9">IDebugArrayObject2_AddRef</name><parameter_list pos:line="1680" pos:column="34">(<param><type><name pos:line="1680" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1681" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1683" pos:column="1">#<cpp:directive pos:line="1683" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1683" pos:column="9">IDebugArrayObject2_Release</name><parameter_list pos:line="1683" pos:column="35">(<param><type><name pos:line="1683" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1684" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1687" pos:column="1">#<cpp:directive pos:line="1687" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1687" pos:column="9">IDebugArrayObject2_GetSize</name><parameter_list pos:line="1687" pos:column="35">(<param><type><name pos:line="1687" pos:column="36">This</name></type></param>,<param><type><name pos:line="1687" pos:column="41">pnSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1688" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pnSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1690" pos:column="1">#<cpp:directive pos:line="1690" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1690" pos:column="9">IDebugArrayObject2_GetValue</name><parameter_list pos:line="1690" pos:column="36">(<param><type><name pos:line="1690" pos:column="37">This</name></type></param>,<param><type><name pos:line="1690" pos:column="42">pValue</name></type></param>,<param><type><name pos:line="1690" pos:column="49">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1691" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1693" pos:column="1">#<cpp:directive pos:line="1693" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1693" pos:column="9">IDebugArrayObject2_SetValue</name><parameter_list pos:line="1693" pos:column="36">(<param><type><name pos:line="1693" pos:column="37">This</name></type></param>,<param><type><name pos:line="1693" pos:column="42">pValue</name></type></param>,<param><type><name pos:line="1693" pos:column="49">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1694" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1696" pos:column="1">#<cpp:directive pos:line="1696" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1696" pos:column="9">IDebugArrayObject2_SetReferenceValue</name><parameter_list pos:line="1696" pos:column="45">(<param><type><name pos:line="1696" pos:column="46">This</name></type></param>,<param><type><name pos:line="1696" pos:column="51">pObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1697" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetReferenceValue(This,pObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1699" pos:column="1">#<cpp:directive pos:line="1699" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1699" pos:column="9">IDebugArrayObject2_GetMemoryContext</name><parameter_list pos:line="1699" pos:column="44">(<param><type><name pos:line="1699" pos:column="45">This</name></type></param>,<param><type><name pos:line="1699" pos:column="50">pContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1700" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,pContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="1702" pos:column="1">#<cpp:directive pos:line="1702" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1702" pos:column="9">IDebugArrayObject2_GetManagedDebugObject</name><parameter_list pos:line="1702" pos:column="49">(<param><type><name pos:line="1702" pos:column="50">This</name></type></param>,<param><type><name pos:line="1702" pos:column="55">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1703" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetManagedDebugObject(This,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1705" pos:column="1">#<cpp:directive pos:line="1705" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1705" pos:column="9">IDebugArrayObject2_IsNullReference</name><parameter_list pos:line="1705" pos:column="43">(<param><type><name pos:line="1705" pos:column="44">This</name></type></param>,<param><type><name pos:line="1705" pos:column="49">pfIsNull</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1706" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsNullReference(This,pfIsNull) )</cpp:value></cpp:define> 

<cpp:define pos:line="1708" pos:column="1">#<cpp:directive pos:line="1708" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1708" pos:column="9">IDebugArrayObject2_IsEqual</name><parameter_list pos:line="1708" pos:column="35">(<param><type><name pos:line="1708" pos:column="36">This</name></type></param>,<param><type><name pos:line="1708" pos:column="41">pObject</name></type></param>,<param><type><name pos:line="1708" pos:column="49">pfIsEqual</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1709" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsEqual(This,pObject,pfIsEqual) )</cpp:value></cpp:define> 

<cpp:define pos:line="1711" pos:column="1">#<cpp:directive pos:line="1711" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1711" pos:column="9">IDebugArrayObject2_IsReadOnly</name><parameter_list pos:line="1711" pos:column="38">(<param><type><name pos:line="1711" pos:column="39">This</name></type></param>,<param><type><name pos:line="1711" pos:column="44">pfIsReadOnly</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1712" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly(This,pfIsReadOnly) )</cpp:value></cpp:define> 

<cpp:define pos:line="1714" pos:column="1">#<cpp:directive pos:line="1714" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1714" pos:column="9">IDebugArrayObject2_IsProxy</name><parameter_list pos:line="1714" pos:column="35">(<param><type><name pos:line="1714" pos:column="36">This</name></type></param>,<param><type><name pos:line="1714" pos:column="41">pfIsProxy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1715" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsProxy(This,pfIsProxy) )</cpp:value></cpp:define> 


<cpp:define pos:line="1718" pos:column="1">#<cpp:directive pos:line="1718" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1718" pos:column="9">IDebugArrayObject2_GetCount</name><parameter_list pos:line="1718" pos:column="36">(<param><type><name pos:line="1718" pos:column="37">This</name></type></param>,<param><type><name pos:line="1718" pos:column="42">pdwElements</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1719" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pdwElements) )</cpp:value></cpp:define> 

<cpp:define pos:line="1721" pos:column="1">#<cpp:directive pos:line="1721" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1721" pos:column="9">IDebugArrayObject2_GetElement</name><parameter_list pos:line="1721" pos:column="38">(<param><type><name pos:line="1721" pos:column="39">This</name></type></param>,<param><type><name pos:line="1721" pos:column="44">dwIndex</name></type></param>,<param><type><name pos:line="1721" pos:column="52">ppElement</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1722" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElement(This,dwIndex,ppElement) )</cpp:value></cpp:define> 

<cpp:define pos:line="1724" pos:column="1">#<cpp:directive pos:line="1724" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1724" pos:column="9">IDebugArrayObject2_GetElements</name><parameter_list pos:line="1724" pos:column="39">(<param><type><name pos:line="1724" pos:column="40">This</name></type></param>,<param><type><name pos:line="1724" pos:column="45">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1725" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetElements(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="1727" pos:column="1">#<cpp:directive pos:line="1727" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1727" pos:column="9">IDebugArrayObject2_GetRank</name><parameter_list pos:line="1727" pos:column="35">(<param><type><name pos:line="1727" pos:column="36">This</name></type></param>,<param><type><name pos:line="1727" pos:column="41">pdwRank</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1728" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRank(This,pdwRank) )</cpp:value></cpp:define> 

<cpp:define pos:line="1730" pos:column="1">#<cpp:directive pos:line="1730" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1730" pos:column="9">IDebugArrayObject2_GetDimensions</name><parameter_list pos:line="1730" pos:column="41">(<param><type><name pos:line="1730" pos:column="42">This</name></type></param>,<param><type><name pos:line="1730" pos:column="47">dwCount</name></type></param>,<param><type><name pos:line="1730" pos:column="55">dwDimensions</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1731" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDimensions(This,dwCount,dwDimensions) )</cpp:value></cpp:define> 


<cpp:define pos:line="1734" pos:column="1">#<cpp:directive pos:line="1734" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1734" pos:column="9">IDebugArrayObject2_HasBaseIndices</name><parameter_list pos:line="1734" pos:column="42">(<param><type><name pos:line="1734" pos:column="43">This</name></type></param>,<param><type><name pos:line="1734" pos:column="48">pfHasBaseIndices</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1735" pos:column="5">( (This)-&gt;lpVtbl -&gt; HasBaseIndices(This,pfHasBaseIndices) )</cpp:value></cpp:define> 

<cpp:define pos:line="1737" pos:column="1">#<cpp:directive pos:line="1737" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1737" pos:column="9">IDebugArrayObject2_GetBaseIndices</name><parameter_list pos:line="1737" pos:column="42">(<param><type><name pos:line="1737" pos:column="43">This</name></type></param>,<param><type><name pos:line="1737" pos:column="48">dwRank</name></type></param>,<param><type><name pos:line="1737" pos:column="55">dwIndices</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1738" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBaseIndices(This,dwRank,dwIndices) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1740" pos:column="1">#<cpp:directive pos:line="1740" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1740" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1743" pos:column="1">#<cpp:directive pos:line="1743" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1743" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1748" pos:column="1">#<cpp:directive pos:line="1748" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1748" pos:column="9">/* __IDebugArrayObject2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1751" pos:column="1">#<cpp:directive pos:line="1751" pos:column="2">ifndef</cpp:directive> <name pos:line="1751" pos:column="9">__IDebugFunctionObject_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1752" pos:column="1">#<cpp:directive pos:line="1752" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1752" pos:column="9">__IDebugFunctionObject_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1754" pos:column="1">/* interface IDebugFunctionObject */</comment>
<comment type="block" pos:line="1755" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="1758" pos:column="1">enum <name pos:line="1758" pos:column="6">enum_OBJECT_TYPE</name>
    <block pos:line="1759" pos:column="5">{	<decl><name pos:line="1759" pos:column="9">OBJECT_TYPE_BOOLEAN</name>	<init pos:line="1759" pos:column="33">= <expr><lit:literal type="number" pos:line="1759" pos:column="35">0</lit:literal></expr></init></decl><op:operator pos:line="1759" pos:column="36">,</op:operator>
	<decl><name pos:line="1760" pos:column="9">OBJECT_TYPE_CHAR</name>	<init pos:line="1760" pos:column="33">= <expr><lit:literal type="number" pos:line="1760" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="1760" pos:column="38">,</op:operator>
	<decl><name pos:line="1761" pos:column="9">OBJECT_TYPE_I1</name>	<init pos:line="1761" pos:column="25">= <expr><lit:literal type="number" pos:line="1761" pos:column="27">0x2</lit:literal></expr></init></decl><op:operator pos:line="1761" pos:column="30">,</op:operator>
	<decl><name pos:line="1762" pos:column="9">OBJECT_TYPE_U1</name>	<init pos:line="1762" pos:column="25">= <expr><lit:literal type="number" pos:line="1762" pos:column="27">0x3</lit:literal></expr></init></decl><op:operator pos:line="1762" pos:column="30">,</op:operator>
	<decl><name pos:line="1763" pos:column="9">OBJECT_TYPE_I2</name>	<init pos:line="1763" pos:column="25">= <expr><lit:literal type="number" pos:line="1763" pos:column="27">0x4</lit:literal></expr></init></decl><op:operator pos:line="1763" pos:column="30">,</op:operator>
	<decl><name pos:line="1764" pos:column="9">OBJECT_TYPE_U2</name>	<init pos:line="1764" pos:column="25">= <expr><lit:literal type="number" pos:line="1764" pos:column="27">0x5</lit:literal></expr></init></decl><op:operator pos:line="1764" pos:column="30">,</op:operator>
	<decl><name pos:line="1765" pos:column="9">OBJECT_TYPE_I4</name>	<init pos:line="1765" pos:column="25">= <expr><lit:literal type="number" pos:line="1765" pos:column="27">0x6</lit:literal></expr></init></decl><op:operator pos:line="1765" pos:column="30">,</op:operator>
	<decl><name pos:line="1766" pos:column="9">OBJECT_TYPE_U4</name>	<init pos:line="1766" pos:column="25">= <expr><lit:literal type="number" pos:line="1766" pos:column="27">0x7</lit:literal></expr></init></decl><op:operator pos:line="1766" pos:column="30">,</op:operator>
	<decl><name pos:line="1767" pos:column="9">OBJECT_TYPE_I8</name>	<init pos:line="1767" pos:column="25">= <expr><lit:literal type="number" pos:line="1767" pos:column="27">0x8</lit:literal></expr></init></decl><op:operator pos:line="1767" pos:column="30">,</op:operator>
	<decl><name pos:line="1768" pos:column="9">OBJECT_TYPE_U8</name>	<init pos:line="1768" pos:column="25">= <expr><lit:literal type="number" pos:line="1768" pos:column="27">0x9</lit:literal></expr></init></decl><op:operator pos:line="1768" pos:column="30">,</op:operator>
	<decl><name pos:line="1769" pos:column="9">OBJECT_TYPE_R4</name>	<init pos:line="1769" pos:column="25">= <expr><lit:literal type="number" pos:line="1769" pos:column="27">0xa</lit:literal></expr></init></decl><op:operator pos:line="1769" pos:column="30">,</op:operator>
	<decl><name pos:line="1770" pos:column="9">OBJECT_TYPE_R8</name>	<init pos:line="1770" pos:column="25">= <expr><lit:literal type="number" pos:line="1770" pos:column="27">0xb</lit:literal></expr></init></decl><op:operator pos:line="1770" pos:column="30">,</op:operator>
	<decl><name pos:line="1771" pos:column="9">OBJECT_TYPE_OBJECT</name>	<init pos:line="1771" pos:column="33">= <expr><lit:literal type="number" pos:line="1771" pos:column="35">0xc</lit:literal></expr></init></decl><op:operator pos:line="1771" pos:column="38">,</op:operator>
	<decl><name pos:line="1772" pos:column="9">OBJECT_TYPE_NULL</name>	<init pos:line="1772" pos:column="33">= <expr><lit:literal type="number" pos:line="1772" pos:column="35">0xd</lit:literal></expr></init></decl><op:operator pos:line="1772" pos:column="38">,</op:operator>
	<decl><name pos:line="1773" pos:column="9">OBJECT_TYPE_CLASS</name>	<init pos:line="1773" pos:column="33">= <expr><lit:literal type="number" pos:line="1773" pos:column="35">0xe</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="1775" pos:column="1">typedef <type><name pos:line="1775" pos:column="9">DWORD</name></type> <name pos:line="1775" pos:column="15">OBJECT_TYPE</name>;</typedef>


<decl_stmt><decl><type><name pos:line="1778" pos:column="1">EXTERN_C</name> <specifier pos:line="1778" pos:column="10">const</specifier> <name pos:line="1778" pos:column="16">IID</name></type> <name pos:line="1778" pos:column="20">IID_IDebugFunctionObject</name></decl>;</decl_stmt>

<cpp:if pos:line="1780" pos:column="1">#<cpp:directive pos:line="1780" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1780" pos:column="5">defined</name><argument_list pos:line="1780" pos:column="12">(<argument><expr><name pos:line="1780" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1780" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1780" pos:column="29">!</op:operator><call><name pos:line="1780" pos:column="30">defined</name><argument_list pos:line="1780" pos:column="37">(<argument><expr><name pos:line="1780" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1782" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1782" pos:column="19">(<argument pos:line="1782" pos:column="20">"F71D9EA0-4269-48dc-9E8D-F86DEFA042B3"</argument>)</argument_list></macro>
    <label><name pos:line="1783" pos:column="5">IDebugFunctionObject</name> :</label> <expr_stmt><expr pos:line="1783" pos:column="28">public <name pos:line="1783" pos:column="35">IDebugObject</name>
    <block pos:line="1784" pos:column="5">{
    <expr pos:line="1785" pos:column="5">public<op:operator pos:line="1785" pos:column="11">:</op:operator>
        virtual <name pos:line="1786" pos:column="17">HRESULT</name> <name pos:line="1786" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1786" pos:column="43">CreatePrimitiveObject</name><argument_list pos:line="1786" pos:column="64">( 
            <comment type="block" pos:line="1787" pos:column="13">/* [in] */</comment> <argument pos:line="1787" pos:column="24">OBJECT_TYPE ot</argument>,
            <comment type="block" pos:line="1788" pos:column="13">/* [out] */</comment> <argument pos:line="1788" pos:column="25">__RPC__deref_out_opt IDebugObject **ppObject</argument>)</argument_list></macro> <op:operator pos:line="1788" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="1788" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="1790" pos:column="9">virtual <name pos:line="1790" pos:column="17">HRESULT</name> <name pos:line="1790" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1790" pos:column="43">CreateObject</name><argument_list pos:line="1790" pos:column="55">( 
            <comment type="block" pos:line="1791" pos:column="13">/* [in] */</comment> <argument pos:line="1791" pos:column="24">__RPC__in_opt IDebugFunctionObject *pConstructor</argument>,
            <comment type="block" pos:line="1792" pos:column="13">/* [in] */</comment> <argument pos:line="1792" pos:column="24">DWORD dwArgs</argument>,
            <comment type="block" pos:line="1793" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="1793" pos:column="33">__RPC__in_ecount_full(dwArgs) IDebugObject *pArgs[  ]</argument>,
            <comment type="block" pos:line="1794" pos:column="13">/* [out] */</comment> <argument pos:line="1794" pos:column="25">__RPC__deref_out_opt IDebugObject **ppObject</argument>)</argument_list></macro> <op:operator pos:line="1794" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="1794" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="1796" pos:column="9">virtual <name pos:line="1796" pos:column="17">HRESULT</name> <name pos:line="1796" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1796" pos:column="43">CreateObjectNoConstructor</name><argument_list pos:line="1796" pos:column="68">( 
            <comment type="block" pos:line="1797" pos:column="13">/* [in] */</comment> <argument pos:line="1797" pos:column="24">__RPC__in_opt IDebugField *pClassField</argument>,
            <comment type="block" pos:line="1798" pos:column="13">/* [out] */</comment> <argument pos:line="1798" pos:column="25">__RPC__deref_out_opt IDebugObject **ppObject</argument>)</argument_list></macro> <op:operator pos:line="1798" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="1798" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="1800" pos:column="9">virtual <name pos:line="1800" pos:column="17">HRESULT</name> <name pos:line="1800" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1800" pos:column="43">CreateArrayObject</name><argument_list pos:line="1800" pos:column="60">( 
            <comment type="block" pos:line="1801" pos:column="13">/* [in] */</comment> <argument pos:line="1801" pos:column="24">OBJECT_TYPE ot</argument>,
            <comment type="block" pos:line="1802" pos:column="13">/* [in] */</comment> <argument pos:line="1802" pos:column="24">__RPC__in_opt IDebugField *pClassField</argument>,
            <comment type="block" pos:line="1803" pos:column="13">/* [in] */</comment> <argument pos:line="1803" pos:column="24">DWORD dwRank</argument>,
            <comment type="block" pos:line="1804" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="1804" pos:column="33">__RPC__in_ecount_full(dwRank) DWORD dwDims[  ]</argument>,
            <comment type="block" pos:line="1805" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="1805" pos:column="33">__RPC__in_ecount_full(dwRank) DWORD dwLowBounds[  ]</argument>,
            <comment type="block" pos:line="1806" pos:column="13">/* [out] */</comment> <argument pos:line="1806" pos:column="25">__RPC__deref_out_opt IDebugObject **ppObject</argument>)</argument_list></macro> <op:operator pos:line="1806" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="1806" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="1808" pos:column="9">virtual <name pos:line="1808" pos:column="17">HRESULT</name> <name pos:line="1808" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1808" pos:column="43">CreateStringObject</name><argument_list pos:line="1808" pos:column="61">( 
            <comment type="block" pos:line="1809" pos:column="13">/* [in] */</comment> <argument pos:line="1809" pos:column="24">__RPC__in LPCOLESTR pcstrString</argument>,
            <comment type="block" pos:line="1810" pos:column="13">/* [out] */</comment> <argument pos:line="1810" pos:column="25">__RPC__deref_out_opt IDebugObject **ppOjbect</argument>)</argument_list></macro> <op:operator pos:line="1810" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="1810" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="1812" pos:column="9">virtual <name pos:line="1812" pos:column="17">HRESULT</name> <name pos:line="1812" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1812" pos:column="43">Evaluate</name><argument_list pos:line="1812" pos:column="51">( 
            <comment type="block" pos:line="1813" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="1813" pos:column="33">__RPC__in_ecount_full(dwParams) IDebugObject **ppParams</argument>,
            <comment type="block" pos:line="1814" pos:column="13">/* [in] */</comment> <argument pos:line="1814" pos:column="24">DWORD dwParams</argument>,
            <comment type="block" pos:line="1815" pos:column="13">/* [in] */</comment> <argument pos:line="1815" pos:column="24">DWORD dwTimeout</argument>,
            <comment type="block" pos:line="1816" pos:column="13">/* [out] */</comment> <argument pos:line="1816" pos:column="25">__RPC__deref_out_opt IDebugObject **ppResult</argument>)</argument_list></macro> <op:operator pos:line="1816" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="1816" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1820" pos:column="1">#<cpp:directive pos:line="1820" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1820" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1822" pos:column="5">typedef <type><struct pos:line="1822" pos:column="13">struct <name pos:line="1822" pos:column="20">IDebugFunctionObjectVtbl</name>
    <block pos:line="1823" pos:column="5">{<public type="default" pos:line="1823" pos:column="6">
        <function_decl><type><name pos:line="1824" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1826" pos:column="9">HRESULT</name></type> ( <name pos:line="1826" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1826" pos:column="37">*</type:modifier><name pos:line="1826" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1826" pos:column="54">( 
            <param><decl><type><name pos:line="1827" pos:column="13">IDebugFunctionObject</name> <type:modifier pos:line="1827" pos:column="34">*</type:modifier></type> <name pos:line="1827" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1828" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1828" pos:column="24">__RPC__in</name> <name pos:line="1828" pos:column="34">REFIID</name></type> <name pos:line="1828" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1829" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1830" pos:column="13">__RPC__deref_out</name>  <name pos:line="1830" pos:column="31">void</name> <type:modifier pos:line="1830" pos:column="36">*</type:modifier><type:modifier pos:line="1830" pos:column="37">*</type:modifier></type><name pos:line="1830" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1832" pos:column="9">ULONG</name></type> ( <name pos:line="1832" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1832" pos:column="35">*</type:modifier><name pos:line="1832" pos:column="36">AddRef</name> )<parameter_list pos:line="1832" pos:column="44">( 
            <param><decl><type><name pos:line="1833" pos:column="13">IDebugFunctionObject</name> <type:modifier pos:line="1833" pos:column="34">*</type:modifier></type> <name pos:line="1833" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1835" pos:column="9">ULONG</name></type> ( <name pos:line="1835" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1835" pos:column="35">*</type:modifier><name pos:line="1835" pos:column="36">Release</name> )<parameter_list pos:line="1835" pos:column="45">( 
            <param><decl><type><name pos:line="1836" pos:column="13">IDebugFunctionObject</name> <type:modifier pos:line="1836" pos:column="34">*</type:modifier></type> <name pos:line="1836" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1838" pos:column="9">HRESULT</name></type> ( <name pos:line="1838" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1838" pos:column="37">*</type:modifier><name pos:line="1838" pos:column="38">GetSize</name> )<parameter_list pos:line="1838" pos:column="47">( 
            <param><decl><type><name pos:line="1839" pos:column="13">IDebugFunctionObject</name> <type:modifier pos:line="1839" pos:column="34">*</type:modifier></type> <name pos:line="1839" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1840" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1840" pos:column="25">__RPC__out</name> <name pos:line="1840" pos:column="36">UINT</name> <type:modifier pos:line="1840" pos:column="41">*</type:modifier></type><name pos:line="1840" pos:column="42">pnSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1842" pos:column="9">HRESULT</name> <argument_list pos:line="1842" pos:column="17">( <argument pos:line="1842" pos:column="19">STDMETHODCALLTYPE *GetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1842" pos:column="48">(</op:operator> 
            <name pos:line="1843" pos:column="13">IDebugFunctionObject</name> <op:operator pos:line="1843" pos:column="34">*</op:operator> <name pos:line="1843" pos:column="36">This</name><op:operator pos:line="1843" pos:column="40">,</op:operator>
            <comment type="block" pos:line="1844" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="1844" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="1844" pos:column="67">(<argument pos:line="1844" pos:column="68">nSize</argument>, <argument pos:line="1844" pos:column="75">nSize</argument>)</argument_list></macro> <name pos:line="1844" pos:column="82">BYTE</name> <op:operator pos:line="1844" pos:column="87">*</op:operator><name pos:line="1844" pos:column="88">pValue</name><op:operator pos:line="1844" pos:column="94">,</op:operator>
            <comment type="block" pos:line="1845" pos:column="13">/* [in] */</comment> <name pos:line="1845" pos:column="24">UINT</name> <name pos:line="1845" pos:column="29">nSize</name><op:operator pos:line="1845" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="1847" pos:column="9">HRESULT</name> <argument_list pos:line="1847" pos:column="17">( <argument pos:line="1847" pos:column="19">STDMETHODCALLTYPE *SetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1847" pos:column="48">(</op:operator> 
            <name pos:line="1848" pos:column="13">IDebugFunctionObject</name> <op:operator pos:line="1848" pos:column="34">*</op:operator> <name pos:line="1848" pos:column="36">This</name><op:operator pos:line="1848" pos:column="40">,</op:operator>
            <comment type="block" pos:line="1849" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1849" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1849" pos:column="54">(<argument pos:line="1849" pos:column="55">nSize</argument>)</argument_list></macro> <name pos:line="1849" pos:column="62">BYTE</name> <op:operator pos:line="1849" pos:column="67">*</op:operator><name pos:line="1849" pos:column="68">pValue</name><op:operator pos:line="1849" pos:column="74">,</op:operator>
            <comment type="block" pos:line="1850" pos:column="13">/* [in] */</comment> <name pos:line="1850" pos:column="24">UINT</name> <name pos:line="1850" pos:column="29">nSize</name><op:operator pos:line="1850" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="1852" pos:column="9">HRESULT</name></type> ( <name pos:line="1852" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1852" pos:column="37">*</type:modifier><name pos:line="1852" pos:column="38">SetReferenceValue</name> )<parameter_list pos:line="1852" pos:column="57">( 
            <param><decl><type><name pos:line="1853" pos:column="13">IDebugFunctionObject</name> <type:modifier pos:line="1853" pos:column="34">*</type:modifier></type> <name pos:line="1853" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1854" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1854" pos:column="24">__RPC__in_opt</name> <name pos:line="1854" pos:column="38">IDebugObject</name> <type:modifier pos:line="1854" pos:column="51">*</type:modifier></type><name pos:line="1854" pos:column="52">pObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1856" pos:column="9">HRESULT</name></type> ( <name pos:line="1856" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1856" pos:column="37">*</type:modifier><name pos:line="1856" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="1856" pos:column="56">( 
            <param><decl><type><name pos:line="1857" pos:column="13">IDebugFunctionObject</name> <type:modifier pos:line="1857" pos:column="34">*</type:modifier></type> <name pos:line="1857" pos:column="36">This</name></decl></param>,
            <param><decl><type><name pos:line="1858" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="1858" pos:column="33">IDebugMemoryContext2</name> <type:modifier pos:line="1858" pos:column="54">*</type:modifier><type:modifier pos:line="1858" pos:column="55">*</type:modifier></type><name pos:line="1858" pos:column="56">pContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1860" pos:column="9">HRESULT</name></type> ( <name pos:line="1860" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1860" pos:column="37">*</type:modifier><name pos:line="1860" pos:column="38">GetManagedDebugObject</name> )<parameter_list pos:line="1860" pos:column="61">( 
            <param><decl><type><name pos:line="1861" pos:column="13">IDebugFunctionObject</name> <type:modifier pos:line="1861" pos:column="34">*</type:modifier></type> <name pos:line="1861" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1862" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1862" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1862" pos:column="46">IDebugManagedObject</name> <type:modifier pos:line="1862" pos:column="66">*</type:modifier><type:modifier pos:line="1862" pos:column="67">*</type:modifier></type><name pos:line="1862" pos:column="68">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1864" pos:column="9">HRESULT</name></type> ( <name pos:line="1864" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1864" pos:column="37">*</type:modifier><name pos:line="1864" pos:column="38">IsNullReference</name> )<parameter_list pos:line="1864" pos:column="55">( 
            <param><decl><type><name pos:line="1865" pos:column="13">IDebugFunctionObject</name> <type:modifier pos:line="1865" pos:column="34">*</type:modifier></type> <name pos:line="1865" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1866" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1866" pos:column="25">__RPC__out</name> <name pos:line="1866" pos:column="36">BOOL</name> <type:modifier pos:line="1866" pos:column="41">*</type:modifier></type><name pos:line="1866" pos:column="42">pfIsNull</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1868" pos:column="9">HRESULT</name></type> ( <name pos:line="1868" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1868" pos:column="37">*</type:modifier><name pos:line="1868" pos:column="38">IsEqual</name> )<parameter_list pos:line="1868" pos:column="47">( 
            <param><decl><type><name pos:line="1869" pos:column="13">IDebugFunctionObject</name> <type:modifier pos:line="1869" pos:column="34">*</type:modifier></type> <name pos:line="1869" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1870" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1870" pos:column="24">__RPC__in_opt</name> <name pos:line="1870" pos:column="38">IDebugObject</name> <type:modifier pos:line="1870" pos:column="51">*</type:modifier></type><name pos:line="1870" pos:column="52">pObject</name></decl></param>,
            <comment type="block" pos:line="1871" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1871" pos:column="25">__RPC__out</name> <name pos:line="1871" pos:column="36">BOOL</name> <type:modifier pos:line="1871" pos:column="41">*</type:modifier></type><name pos:line="1871" pos:column="42">pfIsEqual</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1873" pos:column="9">HRESULT</name></type> ( <name pos:line="1873" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1873" pos:column="37">*</type:modifier><name pos:line="1873" pos:column="38">IsReadOnly</name> )<parameter_list pos:line="1873" pos:column="50">( 
            <param><decl><type><name pos:line="1874" pos:column="13">IDebugFunctionObject</name> <type:modifier pos:line="1874" pos:column="34">*</type:modifier></type> <name pos:line="1874" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1875" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1875" pos:column="25">__RPC__out</name> <name pos:line="1875" pos:column="36">BOOL</name> <type:modifier pos:line="1875" pos:column="41">*</type:modifier></type><name pos:line="1875" pos:column="42">pfIsReadOnly</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1877" pos:column="9">HRESULT</name></type> ( <name pos:line="1877" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1877" pos:column="37">*</type:modifier><name pos:line="1877" pos:column="38">IsProxy</name> )<parameter_list pos:line="1877" pos:column="47">( 
            <param><decl><type><name pos:line="1878" pos:column="13">IDebugFunctionObject</name> <type:modifier pos:line="1878" pos:column="34">*</type:modifier></type> <name pos:line="1878" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1879" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1879" pos:column="25">__RPC__out</name> <name pos:line="1879" pos:column="36">BOOL</name> <type:modifier pos:line="1879" pos:column="41">*</type:modifier></type><name pos:line="1879" pos:column="42">pfIsProxy</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1881" pos:column="9">HRESULT</name></type> ( <name pos:line="1881" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1881" pos:column="37">*</type:modifier><name pos:line="1881" pos:column="38">CreatePrimitiveObject</name> )<parameter_list pos:line="1881" pos:column="61">( 
            <param><decl><type><name pos:line="1882" pos:column="13">IDebugFunctionObject</name> <type:modifier pos:line="1882" pos:column="34">*</type:modifier></type> <name pos:line="1882" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1883" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1883" pos:column="24">OBJECT_TYPE</name></type> <name pos:line="1883" pos:column="36">ot</name></decl></param>,
            <comment type="block" pos:line="1884" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1884" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1884" pos:column="46">IDebugObject</name> <type:modifier pos:line="1884" pos:column="59">*</type:modifier><type:modifier pos:line="1884" pos:column="60">*</type:modifier></type><name pos:line="1884" pos:column="61">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1886" pos:column="9">HRESULT</name> <argument_list pos:line="1886" pos:column="17">( <argument pos:line="1886" pos:column="19">STDMETHODCALLTYPE *CreateObject</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1886" pos:column="52">(</op:operator> 
            <name pos:line="1887" pos:column="13">IDebugFunctionObject</name> <op:operator pos:line="1887" pos:column="34">*</op:operator> <name pos:line="1887" pos:column="36">This</name><op:operator pos:line="1887" pos:column="40">,</op:operator>
            <comment type="block" pos:line="1888" pos:column="13">/* [in] */</comment> <name pos:line="1888" pos:column="24">__RPC__in_opt</name> <name pos:line="1888" pos:column="38">IDebugFunctionObject</name> <op:operator pos:line="1888" pos:column="59">*</op:operator><name pos:line="1888" pos:column="60">pConstructor</name><op:operator pos:line="1888" pos:column="72">,</op:operator>
            <comment type="block" pos:line="1889" pos:column="13">/* [in] */</comment> <name pos:line="1889" pos:column="24">DWORD</name> <name pos:line="1889" pos:column="30">dwArgs</name><op:operator pos:line="1889" pos:column="36">,</op:operator>
            <comment type="block" pos:line="1890" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1890" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1890" pos:column="54">(<argument pos:line="1890" pos:column="55">dwArgs</argument>)</argument_list></macro> <name pos:line="1890" pos:column="63">IDebugObject</name> <op:operator pos:line="1890" pos:column="76">*</op:operator><name><name pos:line="1890" pos:column="77">pArgs</name><index pos:line="1890" pos:column="82">[  ]</index></name><op:operator pos:line="1890" pos:column="86">,</op:operator>
            <comment type="block" pos:line="1891" pos:column="13">/* [out] */</comment> <name pos:line="1891" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1891" pos:column="46">IDebugObject</name> <op:operator pos:line="1891" pos:column="59">*</op:operator><op:operator pos:line="1891" pos:column="60">*</op:operator><name pos:line="1891" pos:column="61">ppObject</name><op:operator pos:line="1891" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="1893" pos:column="9">HRESULT</name></type> ( <name pos:line="1893" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1893" pos:column="37">*</type:modifier><name pos:line="1893" pos:column="38">CreateObjectNoConstructor</name> )<parameter_list pos:line="1893" pos:column="65">( 
            <param><decl><type><name pos:line="1894" pos:column="13">IDebugFunctionObject</name> <type:modifier pos:line="1894" pos:column="34">*</type:modifier></type> <name pos:line="1894" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1895" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1895" pos:column="24">__RPC__in_opt</name> <name pos:line="1895" pos:column="38">IDebugField</name> <type:modifier pos:line="1895" pos:column="50">*</type:modifier></type><name pos:line="1895" pos:column="51">pClassField</name></decl></param>,
            <comment type="block" pos:line="1896" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1896" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1896" pos:column="46">IDebugObject</name> <type:modifier pos:line="1896" pos:column="59">*</type:modifier><type:modifier pos:line="1896" pos:column="60">*</type:modifier></type><name pos:line="1896" pos:column="61">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1898" pos:column="9">HRESULT</name> <argument_list pos:line="1898" pos:column="17">( <argument pos:line="1898" pos:column="19">STDMETHODCALLTYPE *CreateArrayObject</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1898" pos:column="57">(</op:operator> 
            <name pos:line="1899" pos:column="13">IDebugFunctionObject</name> <op:operator pos:line="1899" pos:column="34">*</op:operator> <name pos:line="1899" pos:column="36">This</name><op:operator pos:line="1899" pos:column="40">,</op:operator>
            <comment type="block" pos:line="1900" pos:column="13">/* [in] */</comment> <name pos:line="1900" pos:column="24">OBJECT_TYPE</name> <name pos:line="1900" pos:column="36">ot</name><op:operator pos:line="1900" pos:column="38">,</op:operator>
            <comment type="block" pos:line="1901" pos:column="13">/* [in] */</comment> <name pos:line="1901" pos:column="24">__RPC__in_opt</name> <name pos:line="1901" pos:column="38">IDebugField</name> <op:operator pos:line="1901" pos:column="50">*</op:operator><name pos:line="1901" pos:column="51">pClassField</name><op:operator pos:line="1901" pos:column="62">,</op:operator>
            <comment type="block" pos:line="1902" pos:column="13">/* [in] */</comment> <name pos:line="1902" pos:column="24">DWORD</name> <name pos:line="1902" pos:column="30">dwRank</name><op:operator pos:line="1902" pos:column="36">,</op:operator>
            <comment type="block" pos:line="1903" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1903" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1903" pos:column="54">(<argument pos:line="1903" pos:column="55">dwRank</argument>)</argument_list></macro> <name pos:line="1903" pos:column="63">DWORD</name> <name><name pos:line="1903" pos:column="69">dwDims</name><index pos:line="1903" pos:column="75">[  ]</index></name><op:operator pos:line="1903" pos:column="79">,</op:operator>
            <comment type="block" pos:line="1904" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1904" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1904" pos:column="54">(<argument pos:line="1904" pos:column="55">dwRank</argument>)</argument_list></macro> <name pos:line="1904" pos:column="63">DWORD</name> <name><name pos:line="1904" pos:column="69">dwLowBounds</name><index pos:line="1904" pos:column="80">[  ]</index></name><op:operator pos:line="1904" pos:column="84">,</op:operator>
            <comment type="block" pos:line="1905" pos:column="13">/* [out] */</comment> <name pos:line="1905" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1905" pos:column="46">IDebugObject</name> <op:operator pos:line="1905" pos:column="59">*</op:operator><op:operator pos:line="1905" pos:column="60">*</op:operator><name pos:line="1905" pos:column="61">ppObject</name><op:operator pos:line="1905" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="1907" pos:column="9">HRESULT</name></type> ( <name pos:line="1907" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1907" pos:column="37">*</type:modifier><name pos:line="1907" pos:column="38">CreateStringObject</name> )<parameter_list pos:line="1907" pos:column="58">( 
            <param><decl><type><name pos:line="1908" pos:column="13">IDebugFunctionObject</name> <type:modifier pos:line="1908" pos:column="34">*</type:modifier></type> <name pos:line="1908" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="1909" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1909" pos:column="24">__RPC__in</name> <name pos:line="1909" pos:column="34">LPCOLESTR</name></type> <name pos:line="1909" pos:column="44">pcstrString</name></decl></param>,
            <comment type="block" pos:line="1910" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1910" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1910" pos:column="46">IDebugObject</name> <type:modifier pos:line="1910" pos:column="59">*</type:modifier><type:modifier pos:line="1910" pos:column="60">*</type:modifier></type><name pos:line="1910" pos:column="61">ppOjbect</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1912" pos:column="9">HRESULT</name> <argument_list pos:line="1912" pos:column="17">( <argument pos:line="1912" pos:column="19">STDMETHODCALLTYPE *Evaluate</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1912" pos:column="48">(</op:operator> 
            <name pos:line="1913" pos:column="13">IDebugFunctionObject</name> <op:operator pos:line="1913" pos:column="34">*</op:operator> <name pos:line="1913" pos:column="36">This</name><op:operator pos:line="1913" pos:column="40">,</op:operator>
            <comment type="block" pos:line="1914" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1914" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1914" pos:column="54">(<argument pos:line="1914" pos:column="55">dwParams</argument>)</argument_list></macro> <name pos:line="1914" pos:column="65">IDebugObject</name> <op:operator pos:line="1914" pos:column="78">*</op:operator><op:operator pos:line="1914" pos:column="79">*</op:operator><name pos:line="1914" pos:column="80">ppParams</name><op:operator pos:line="1914" pos:column="88">,</op:operator>
            <comment type="block" pos:line="1915" pos:column="13">/* [in] */</comment> <name pos:line="1915" pos:column="24">DWORD</name> <name pos:line="1915" pos:column="30">dwParams</name><op:operator pos:line="1915" pos:column="38">,</op:operator>
            <comment type="block" pos:line="1916" pos:column="13">/* [in] */</comment> <name pos:line="1916" pos:column="24">DWORD</name> <name pos:line="1916" pos:column="30">dwTimeout</name><op:operator pos:line="1916" pos:column="39">,</op:operator>
            <comment type="block" pos:line="1917" pos:column="13">/* [out] */</comment> <name pos:line="1917" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1917" pos:column="46">IDebugObject</name> <op:operator pos:line="1917" pos:column="59">*</op:operator><op:operator pos:line="1917" pos:column="60">*</op:operator><name pos:line="1917" pos:column="61">ppResult</name><op:operator pos:line="1917" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="1919" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1920" pos:column="7">IDebugFunctionObjectVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1922" pos:column="5">interface</name></type> <name pos:line="1922" pos:column="15">IDebugFunctionObject</name>
    <argument_list pos:line="1923" pos:column="5">{
        <argument><expr><name pos:line="1924" pos:column="9">CONST_VTBL</name> struct <name pos:line="1924" pos:column="27">IDebugFunctionObjectVtbl</name> <op:operator pos:line="1924" pos:column="52">*</op:operator><name pos:line="1924" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1929" pos:column="1">#<cpp:directive pos:line="1929" pos:column="2">ifdef</cpp:directive> <name pos:line="1929" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1932" pos:column="1">#<cpp:directive pos:line="1932" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1932" pos:column="9">IDebugFunctionObject_QueryInterface</name><parameter_list pos:line="1932" pos:column="44">(<param><type><name pos:line="1932" pos:column="45">This</name></type></param>,<param><type><name pos:line="1932" pos:column="50">riid</name></type></param>,<param><type><name pos:line="1932" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1933" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1935" pos:column="1">#<cpp:directive pos:line="1935" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1935" pos:column="9">IDebugFunctionObject_AddRef</name><parameter_list pos:line="1935" pos:column="36">(<param><type><name pos:line="1935" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1936" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1938" pos:column="1">#<cpp:directive pos:line="1938" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1938" pos:column="9">IDebugFunctionObject_Release</name><parameter_list pos:line="1938" pos:column="37">(<param><type><name pos:line="1938" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1939" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1942" pos:column="1">#<cpp:directive pos:line="1942" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1942" pos:column="9">IDebugFunctionObject_GetSize</name><parameter_list pos:line="1942" pos:column="37">(<param><type><name pos:line="1942" pos:column="38">This</name></type></param>,<param><type><name pos:line="1942" pos:column="43">pnSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1943" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pnSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1945" pos:column="1">#<cpp:directive pos:line="1945" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1945" pos:column="9">IDebugFunctionObject_GetValue</name><parameter_list pos:line="1945" pos:column="38">(<param><type><name pos:line="1945" pos:column="39">This</name></type></param>,<param><type><name pos:line="1945" pos:column="44">pValue</name></type></param>,<param><type><name pos:line="1945" pos:column="51">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1946" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1948" pos:column="1">#<cpp:directive pos:line="1948" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1948" pos:column="9">IDebugFunctionObject_SetValue</name><parameter_list pos:line="1948" pos:column="38">(<param><type><name pos:line="1948" pos:column="39">This</name></type></param>,<param><type><name pos:line="1948" pos:column="44">pValue</name></type></param>,<param><type><name pos:line="1948" pos:column="51">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1949" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="1951" pos:column="1">#<cpp:directive pos:line="1951" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1951" pos:column="9">IDebugFunctionObject_SetReferenceValue</name><parameter_list pos:line="1951" pos:column="47">(<param><type><name pos:line="1951" pos:column="48">This</name></type></param>,<param><type><name pos:line="1951" pos:column="53">pObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1952" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetReferenceValue(This,pObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1954" pos:column="1">#<cpp:directive pos:line="1954" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1954" pos:column="9">IDebugFunctionObject_GetMemoryContext</name><parameter_list pos:line="1954" pos:column="46">(<param><type><name pos:line="1954" pos:column="47">This</name></type></param>,<param><type><name pos:line="1954" pos:column="52">pContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1955" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,pContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="1957" pos:column="1">#<cpp:directive pos:line="1957" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1957" pos:column="9">IDebugFunctionObject_GetManagedDebugObject</name><parameter_list pos:line="1957" pos:column="51">(<param><type><name pos:line="1957" pos:column="52">This</name></type></param>,<param><type><name pos:line="1957" pos:column="57">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1958" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetManagedDebugObject(This,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1960" pos:column="1">#<cpp:directive pos:line="1960" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1960" pos:column="9">IDebugFunctionObject_IsNullReference</name><parameter_list pos:line="1960" pos:column="45">(<param><type><name pos:line="1960" pos:column="46">This</name></type></param>,<param><type><name pos:line="1960" pos:column="51">pfIsNull</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1961" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsNullReference(This,pfIsNull) )</cpp:value></cpp:define> 

<cpp:define pos:line="1963" pos:column="1">#<cpp:directive pos:line="1963" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1963" pos:column="9">IDebugFunctionObject_IsEqual</name><parameter_list pos:line="1963" pos:column="37">(<param><type><name pos:line="1963" pos:column="38">This</name></type></param>,<param><type><name pos:line="1963" pos:column="43">pObject</name></type></param>,<param><type><name pos:line="1963" pos:column="51">pfIsEqual</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1964" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsEqual(This,pObject,pfIsEqual) )</cpp:value></cpp:define> 

<cpp:define pos:line="1966" pos:column="1">#<cpp:directive pos:line="1966" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1966" pos:column="9">IDebugFunctionObject_IsReadOnly</name><parameter_list pos:line="1966" pos:column="40">(<param><type><name pos:line="1966" pos:column="41">This</name></type></param>,<param><type><name pos:line="1966" pos:column="46">pfIsReadOnly</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1967" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly(This,pfIsReadOnly) )</cpp:value></cpp:define> 

<cpp:define pos:line="1969" pos:column="1">#<cpp:directive pos:line="1969" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1969" pos:column="9">IDebugFunctionObject_IsProxy</name><parameter_list pos:line="1969" pos:column="37">(<param><type><name pos:line="1969" pos:column="38">This</name></type></param>,<param><type><name pos:line="1969" pos:column="43">pfIsProxy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1970" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsProxy(This,pfIsProxy) )</cpp:value></cpp:define> 


<cpp:define pos:line="1973" pos:column="1">#<cpp:directive pos:line="1973" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1973" pos:column="9">IDebugFunctionObject_CreatePrimitiveObject</name><parameter_list pos:line="1973" pos:column="51">(<param><type><name pos:line="1973" pos:column="52">This</name></type></param>,<param><type><name pos:line="1973" pos:column="57">ot</name></type></param>,<param><type><name pos:line="1973" pos:column="60">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1974" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreatePrimitiveObject(This,ot,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1976" pos:column="1">#<cpp:directive pos:line="1976" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1976" pos:column="9">IDebugFunctionObject_CreateObject</name><parameter_list pos:line="1976" pos:column="42">(<param><type><name pos:line="1976" pos:column="43">This</name></type></param>,<param><type><name pos:line="1976" pos:column="48">pConstructor</name></type></param>,<param><type><name pos:line="1976" pos:column="61">dwArgs</name></type></param>,<param><type><name pos:line="1976" pos:column="68">pArgs</name></type></param>,<param><type><name pos:line="1976" pos:column="74">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1977" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateObject(This,pConstructor,dwArgs,pArgs,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1979" pos:column="1">#<cpp:directive pos:line="1979" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1979" pos:column="9">IDebugFunctionObject_CreateObjectNoConstructor</name><parameter_list pos:line="1979" pos:column="55">(<param><type><name pos:line="1979" pos:column="56">This</name></type></param>,<param><type><name pos:line="1979" pos:column="61">pClassField</name></type></param>,<param><type><name pos:line="1979" pos:column="73">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1980" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateObjectNoConstructor(This,pClassField,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1982" pos:column="1">#<cpp:directive pos:line="1982" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1982" pos:column="9">IDebugFunctionObject_CreateArrayObject</name><parameter_list pos:line="1982" pos:column="47">(<param><type><name pos:line="1982" pos:column="48">This</name></type></param>,<param><type><name pos:line="1982" pos:column="53">ot</name></type></param>,<param><type><name pos:line="1982" pos:column="56">pClassField</name></type></param>,<param><type><name pos:line="1982" pos:column="68">dwRank</name></type></param>,<param><type><name pos:line="1982" pos:column="75">dwDims</name></type></param>,<param><type><name pos:line="1982" pos:column="82">dwLowBounds</name></type></param>,<param><type><name pos:line="1982" pos:column="94">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1983" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateArrayObject(This,ot,pClassField,dwRank,dwDims,dwLowBounds,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1985" pos:column="1">#<cpp:directive pos:line="1985" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1985" pos:column="9">IDebugFunctionObject_CreateStringObject</name><parameter_list pos:line="1985" pos:column="48">(<param><type><name pos:line="1985" pos:column="49">This</name></type></param>,<param><type><name pos:line="1985" pos:column="54">pcstrString</name></type></param>,<param><type><name pos:line="1985" pos:column="66">ppOjbect</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1986" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateStringObject(This,pcstrString,ppOjbect) )</cpp:value></cpp:define> 

<cpp:define pos:line="1988" pos:column="1">#<cpp:directive pos:line="1988" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1988" pos:column="9">IDebugFunctionObject_Evaluate</name><parameter_list pos:line="1988" pos:column="38">(<param><type><name pos:line="1988" pos:column="39">This</name></type></param>,<param><type><name pos:line="1988" pos:column="44">ppParams</name></type></param>,<param><type><name pos:line="1988" pos:column="53">dwParams</name></type></param>,<param><type><name pos:line="1988" pos:column="62">dwTimeout</name></type></param>,<param><type><name pos:line="1988" pos:column="72">ppResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1989" pos:column="5">( (This)-&gt;lpVtbl -&gt; Evaluate(This,ppParams,dwParams,dwTimeout,ppResult) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1991" pos:column="1">#<cpp:directive pos:line="1991" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1991" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1994" pos:column="1">#<cpp:directive pos:line="1994" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1994" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1999" pos:column="1">#<cpp:directive pos:line="1999" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1999" pos:column="9">/* __IDebugFunctionObject_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2002" pos:column="1">#<cpp:directive pos:line="2002" pos:column="2">ifndef</cpp:directive> <name pos:line="2002" pos:column="9">__IDebugFunctionObject2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2003" pos:column="1">#<cpp:directive pos:line="2003" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2003" pos:column="9">__IDebugFunctionObject2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2005" pos:column="1">/* interface IDebugFunctionObject2 */</comment>
<comment type="block" pos:line="2006" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2009" pos:column="1">EXTERN_C</name> <specifier pos:line="2009" pos:column="10">const</specifier> <name pos:line="2009" pos:column="16">IID</name></type> <name pos:line="2009" pos:column="20">IID_IDebugFunctionObject2</name></decl>;</decl_stmt>

<cpp:if pos:line="2011" pos:column="1">#<cpp:directive pos:line="2011" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2011" pos:column="5">defined</name><argument_list pos:line="2011" pos:column="12">(<argument><expr><name pos:line="2011" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2011" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2011" pos:column="29">!</op:operator><call><name pos:line="2011" pos:column="30">defined</name><argument_list pos:line="2011" pos:column="37">(<argument><expr><name pos:line="2011" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2013" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2013" pos:column="19">(<argument pos:line="2013" pos:column="20">"8E861CC7-D21C-43e7-AB7B-947921689B88"</argument>)</argument_list></macro>
    <label><name pos:line="2014" pos:column="5">IDebugFunctionObject2</name> :</label> <expr_stmt><expr pos:line="2014" pos:column="29">public <name pos:line="2014" pos:column="36">IUnknown</name>
    <block pos:line="2015" pos:column="5">{
    <expr pos:line="2016" pos:column="5">public<op:operator pos:line="2016" pos:column="11">:</op:operator>
        virtual <name pos:line="2017" pos:column="17">HRESULT</name> <name pos:line="2017" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2017" pos:column="43">Evaluate</name><argument_list pos:line="2017" pos:column="51">( 
            <comment type="block" pos:line="2018" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="2018" pos:column="33">__RPC__in_ecount_full(dwParams) IDebugObject **ppParams</argument>,
            <comment type="block" pos:line="2019" pos:column="13">/* [in] */</comment> <argument pos:line="2019" pos:column="24">DWORD dwParams</argument>,
            <comment type="block" pos:line="2020" pos:column="13">/* [in] */</comment> <argument pos:line="2020" pos:column="24">DWORD dwEvalFlags</argument>,
            <comment type="block" pos:line="2021" pos:column="13">/* [in] */</comment> <argument pos:line="2021" pos:column="24">DWORD dwTimeout</argument>,
            <comment type="block" pos:line="2022" pos:column="13">/* [out] */</comment> <argument pos:line="2022" pos:column="25">__RPC__deref_out_opt IDebugObject **ppResult</argument>)</argument_list></macro> <op:operator pos:line="2022" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2022" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="2024" pos:column="9">virtual <name pos:line="2024" pos:column="17">HRESULT</name> <name pos:line="2024" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2024" pos:column="43">CreateObject</name><argument_list pos:line="2024" pos:column="55">( 
            <comment type="block" pos:line="2025" pos:column="13">/* [in] */</comment> <argument pos:line="2025" pos:column="24">__RPC__in_opt IDebugFunctionObject *pConstructor</argument>,
            <comment type="block" pos:line="2026" pos:column="13">/* [in] */</comment> <argument pos:line="2026" pos:column="24">DWORD dwArgs</argument>,
            <comment type="block" pos:line="2027" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="2027" pos:column="33">__RPC__in_ecount_full(dwArgs) IDebugObject *pArgs[  ]</argument>,
            <comment type="block" pos:line="2028" pos:column="13">/* [in] */</comment> <argument pos:line="2028" pos:column="24">DWORD dwEvalFlags</argument>,
            <comment type="block" pos:line="2029" pos:column="13">/* [in] */</comment> <argument pos:line="2029" pos:column="24">DWORD dwTimeout</argument>,
            <comment type="block" pos:line="2030" pos:column="13">/* [out] */</comment> <argument pos:line="2030" pos:column="25">__RPC__deref_out_opt IDebugObject **ppObject</argument>)</argument_list></macro> <op:operator pos:line="2030" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2030" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="2032" pos:column="9">virtual <name pos:line="2032" pos:column="17">HRESULT</name> <name pos:line="2032" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2032" pos:column="43">CreateStringObjectWithLength</name><argument_list pos:line="2032" pos:column="71">( 
            <comment type="block" pos:line="2033" pos:column="13">/* [in] */</comment> <argument pos:line="2033" pos:column="24">__RPC__in LPCOLESTR pcstrString</argument>,
            <comment type="block" pos:line="2034" pos:column="13">/* [in] */</comment> <argument pos:line="2034" pos:column="24">UINT uiLength</argument>,
            <comment type="block" pos:line="2035" pos:column="13">/* [out] */</comment> <argument pos:line="2035" pos:column="25">__RPC__deref_out_opt IDebugObject **ppObject</argument>)</argument_list></macro> <op:operator pos:line="2035" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2035" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2039" pos:column="1">#<cpp:directive pos:line="2039" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2039" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2041" pos:column="5">typedef <type><struct pos:line="2041" pos:column="13">struct <name pos:line="2041" pos:column="20">IDebugFunctionObject2Vtbl</name>
    <block pos:line="2042" pos:column="5">{<public type="default" pos:line="2042" pos:column="6">
        <function_decl><type><name pos:line="2043" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2045" pos:column="9">HRESULT</name></type> ( <name pos:line="2045" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2045" pos:column="37">*</type:modifier><name pos:line="2045" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2045" pos:column="54">( 
            <param><decl><type><name pos:line="2046" pos:column="13">IDebugFunctionObject2</name> <type:modifier pos:line="2046" pos:column="35">*</type:modifier></type> <name pos:line="2046" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="2047" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2047" pos:column="24">__RPC__in</name> <name pos:line="2047" pos:column="34">REFIID</name></type> <name pos:line="2047" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2048" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2049" pos:column="13">__RPC__deref_out</name>  <name pos:line="2049" pos:column="31">void</name> <type:modifier pos:line="2049" pos:column="36">*</type:modifier><type:modifier pos:line="2049" pos:column="37">*</type:modifier></type><name pos:line="2049" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2051" pos:column="9">ULONG</name></type> ( <name pos:line="2051" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2051" pos:column="35">*</type:modifier><name pos:line="2051" pos:column="36">AddRef</name> )<parameter_list pos:line="2051" pos:column="44">( 
            <param><decl><type><name pos:line="2052" pos:column="13">IDebugFunctionObject2</name> <type:modifier pos:line="2052" pos:column="35">*</type:modifier></type> <name pos:line="2052" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2054" pos:column="9">ULONG</name></type> ( <name pos:line="2054" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2054" pos:column="35">*</type:modifier><name pos:line="2054" pos:column="36">Release</name> )<parameter_list pos:line="2054" pos:column="45">( 
            <param><decl><type><name pos:line="2055" pos:column="13">IDebugFunctionObject2</name> <type:modifier pos:line="2055" pos:column="35">*</type:modifier></type> <name pos:line="2055" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2057" pos:column="9">HRESULT</name> <argument_list pos:line="2057" pos:column="17">( <argument pos:line="2057" pos:column="19">STDMETHODCALLTYPE *Evaluate</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2057" pos:column="48">(</op:operator> 
            <name pos:line="2058" pos:column="13">IDebugFunctionObject2</name> <op:operator pos:line="2058" pos:column="35">*</op:operator> <name pos:line="2058" pos:column="37">This</name><op:operator pos:line="2058" pos:column="41">,</op:operator>
            <comment type="block" pos:line="2059" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="2059" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="2059" pos:column="54">(<argument pos:line="2059" pos:column="55">dwParams</argument>)</argument_list></macro> <name pos:line="2059" pos:column="65">IDebugObject</name> <op:operator pos:line="2059" pos:column="78">*</op:operator><op:operator pos:line="2059" pos:column="79">*</op:operator><name pos:line="2059" pos:column="80">ppParams</name><op:operator pos:line="2059" pos:column="88">,</op:operator>
            <comment type="block" pos:line="2060" pos:column="13">/* [in] */</comment> <name pos:line="2060" pos:column="24">DWORD</name> <name pos:line="2060" pos:column="30">dwParams</name><op:operator pos:line="2060" pos:column="38">,</op:operator>
            <comment type="block" pos:line="2061" pos:column="13">/* [in] */</comment> <name pos:line="2061" pos:column="24">DWORD</name> <name pos:line="2061" pos:column="30">dwEvalFlags</name><op:operator pos:line="2061" pos:column="41">,</op:operator>
            <comment type="block" pos:line="2062" pos:column="13">/* [in] */</comment> <name pos:line="2062" pos:column="24">DWORD</name> <name pos:line="2062" pos:column="30">dwTimeout</name><op:operator pos:line="2062" pos:column="39">,</op:operator>
            <comment type="block" pos:line="2063" pos:column="13">/* [out] */</comment> <name pos:line="2063" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2063" pos:column="46">IDebugObject</name> <op:operator pos:line="2063" pos:column="59">*</op:operator><op:operator pos:line="2063" pos:column="60">*</op:operator><name pos:line="2063" pos:column="61">ppResult</name><op:operator pos:line="2063" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="2065" pos:column="9">HRESULT</name> <argument_list pos:line="2065" pos:column="17">( <argument pos:line="2065" pos:column="19">STDMETHODCALLTYPE *CreateObject</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2065" pos:column="52">(</op:operator> 
            <name pos:line="2066" pos:column="13">IDebugFunctionObject2</name> <op:operator pos:line="2066" pos:column="35">*</op:operator> <name pos:line="2066" pos:column="37">This</name><op:operator pos:line="2066" pos:column="41">,</op:operator>
            <comment type="block" pos:line="2067" pos:column="13">/* [in] */</comment> <name pos:line="2067" pos:column="24">__RPC__in_opt</name> <name pos:line="2067" pos:column="38">IDebugFunctionObject</name> <op:operator pos:line="2067" pos:column="59">*</op:operator><name pos:line="2067" pos:column="60">pConstructor</name><op:operator pos:line="2067" pos:column="72">,</op:operator>
            <comment type="block" pos:line="2068" pos:column="13">/* [in] */</comment> <name pos:line="2068" pos:column="24">DWORD</name> <name pos:line="2068" pos:column="30">dwArgs</name><op:operator pos:line="2068" pos:column="36">,</op:operator>
            <comment type="block" pos:line="2069" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="2069" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="2069" pos:column="54">(<argument pos:line="2069" pos:column="55">dwArgs</argument>)</argument_list></macro> <name pos:line="2069" pos:column="63">IDebugObject</name> <op:operator pos:line="2069" pos:column="76">*</op:operator><name><name pos:line="2069" pos:column="77">pArgs</name><index pos:line="2069" pos:column="82">[  ]</index></name><op:operator pos:line="2069" pos:column="86">,</op:operator>
            <comment type="block" pos:line="2070" pos:column="13">/* [in] */</comment> <name pos:line="2070" pos:column="24">DWORD</name> <name pos:line="2070" pos:column="30">dwEvalFlags</name><op:operator pos:line="2070" pos:column="41">,</op:operator>
            <comment type="block" pos:line="2071" pos:column="13">/* [in] */</comment> <name pos:line="2071" pos:column="24">DWORD</name> <name pos:line="2071" pos:column="30">dwTimeout</name><op:operator pos:line="2071" pos:column="39">,</op:operator>
            <comment type="block" pos:line="2072" pos:column="13">/* [out] */</comment> <name pos:line="2072" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2072" pos:column="46">IDebugObject</name> <op:operator pos:line="2072" pos:column="59">*</op:operator><op:operator pos:line="2072" pos:column="60">*</op:operator><name pos:line="2072" pos:column="61">ppObject</name><op:operator pos:line="2072" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="2074" pos:column="9">HRESULT</name></type> ( <name pos:line="2074" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2074" pos:column="37">*</type:modifier><name pos:line="2074" pos:column="38">CreateStringObjectWithLength</name> )<parameter_list pos:line="2074" pos:column="68">( 
            <param><decl><type><name pos:line="2075" pos:column="13">IDebugFunctionObject2</name> <type:modifier pos:line="2075" pos:column="35">*</type:modifier></type> <name pos:line="2075" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="2076" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2076" pos:column="24">__RPC__in</name> <name pos:line="2076" pos:column="34">LPCOLESTR</name></type> <name pos:line="2076" pos:column="44">pcstrString</name></decl></param>,
            <comment type="block" pos:line="2077" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2077" pos:column="24">UINT</name></type> <name pos:line="2077" pos:column="29">uiLength</name></decl></param>,
            <comment type="block" pos:line="2078" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2078" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2078" pos:column="46">IDebugObject</name> <type:modifier pos:line="2078" pos:column="59">*</type:modifier><type:modifier pos:line="2078" pos:column="60">*</type:modifier></type><name pos:line="2078" pos:column="61">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2080" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2081" pos:column="7">IDebugFunctionObject2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2083" pos:column="5">interface</name></type> <name pos:line="2083" pos:column="15">IDebugFunctionObject2</name>
    <argument_list pos:line="2084" pos:column="5">{
        <argument><expr><name pos:line="2085" pos:column="9">CONST_VTBL</name> struct <name pos:line="2085" pos:column="27">IDebugFunctionObject2Vtbl</name> <op:operator pos:line="2085" pos:column="53">*</op:operator><name pos:line="2085" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2090" pos:column="1">#<cpp:directive pos:line="2090" pos:column="2">ifdef</cpp:directive> <name pos:line="2090" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2093" pos:column="1">#<cpp:directive pos:line="2093" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2093" pos:column="9">IDebugFunctionObject2_QueryInterface</name><parameter_list pos:line="2093" pos:column="45">(<param><type><name pos:line="2093" pos:column="46">This</name></type></param>,<param><type><name pos:line="2093" pos:column="51">riid</name></type></param>,<param><type><name pos:line="2093" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2094" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2096" pos:column="1">#<cpp:directive pos:line="2096" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2096" pos:column="9">IDebugFunctionObject2_AddRef</name><parameter_list pos:line="2096" pos:column="37">(<param><type><name pos:line="2096" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2097" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2099" pos:column="1">#<cpp:directive pos:line="2099" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2099" pos:column="9">IDebugFunctionObject2_Release</name><parameter_list pos:line="2099" pos:column="38">(<param><type><name pos:line="2099" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2100" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2103" pos:column="1">#<cpp:directive pos:line="2103" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2103" pos:column="9">IDebugFunctionObject2_Evaluate</name><parameter_list pos:line="2103" pos:column="39">(<param><type><name pos:line="2103" pos:column="40">This</name></type></param>,<param><type><name pos:line="2103" pos:column="45">ppParams</name></type></param>,<param><type><name pos:line="2103" pos:column="54">dwParams</name></type></param>,<param><type><name pos:line="2103" pos:column="63">dwEvalFlags</name></type></param>,<param><type><name pos:line="2103" pos:column="75">dwTimeout</name></type></param>,<param><type><name pos:line="2103" pos:column="85">ppResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2104" pos:column="5">( (This)-&gt;lpVtbl -&gt; Evaluate(This,ppParams,dwParams,dwEvalFlags,dwTimeout,ppResult) )</cpp:value></cpp:define> 

<cpp:define pos:line="2106" pos:column="1">#<cpp:directive pos:line="2106" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2106" pos:column="9">IDebugFunctionObject2_CreateObject</name><parameter_list pos:line="2106" pos:column="43">(<param><type><name pos:line="2106" pos:column="44">This</name></type></param>,<param><type><name pos:line="2106" pos:column="49">pConstructor</name></type></param>,<param><type><name pos:line="2106" pos:column="62">dwArgs</name></type></param>,<param><type><name pos:line="2106" pos:column="69">pArgs</name></type></param>,<param><type><name pos:line="2106" pos:column="75">dwEvalFlags</name></type></param>,<param><type><name pos:line="2106" pos:column="87">dwTimeout</name></type></param>,<param><type><name pos:line="2106" pos:column="97">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2107" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateObject(This,pConstructor,dwArgs,pArgs,dwEvalFlags,dwTimeout,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2109" pos:column="1">#<cpp:directive pos:line="2109" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2109" pos:column="9">IDebugFunctionObject2_CreateStringObjectWithLength</name><parameter_list pos:line="2109" pos:column="59">(<param><type><name pos:line="2109" pos:column="60">This</name></type></param>,<param><type><name pos:line="2109" pos:column="65">pcstrString</name></type></param>,<param><type><name pos:line="2109" pos:column="77">uiLength</name></type></param>,<param><type><name pos:line="2109" pos:column="86">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2110" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateStringObjectWithLength(This,pcstrString,uiLength,ppObject) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2112" pos:column="1">#<cpp:directive pos:line="2112" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2112" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2115" pos:column="1">#<cpp:directive pos:line="2115" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2115" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2120" pos:column="1">#<cpp:directive pos:line="2120" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2120" pos:column="9">/* __IDebugFunctionObject2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2123" pos:column="1">#<cpp:directive pos:line="2123" pos:column="2">ifndef</cpp:directive> <name pos:line="2123" pos:column="9">__IDebugManagedObject_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2124" pos:column="1">#<cpp:directive pos:line="2124" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2124" pos:column="9">__IDebugManagedObject_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2126" pos:column="1">/* interface IDebugManagedObject */</comment>
<comment type="block" pos:line="2127" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2130" pos:column="1">EXTERN_C</name> <specifier pos:line="2130" pos:column="10">const</specifier> <name pos:line="2130" pos:column="16">IID</name></type> <name pos:line="2130" pos:column="20">IID_IDebugManagedObject</name></decl>;</decl_stmt>

<cpp:if pos:line="2132" pos:column="1">#<cpp:directive pos:line="2132" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2132" pos:column="5">defined</name><argument_list pos:line="2132" pos:column="12">(<argument><expr><name pos:line="2132" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2132" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2132" pos:column="29">!</op:operator><call><name pos:line="2132" pos:column="30">defined</name><argument_list pos:line="2132" pos:column="37">(<argument><expr><name pos:line="2132" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2134" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2134" pos:column="19">(<argument pos:line="2134" pos:column="20">"71AF87C9-66C5-49e4-A602-B9012115AFD5"</argument>)</argument_list></macro>
    <label><name pos:line="2135" pos:column="5">IDebugManagedObject</name> :</label> <expr_stmt><expr pos:line="2135" pos:column="27">public <name pos:line="2135" pos:column="34">IUnknown</name>
    <block pos:line="2136" pos:column="5">{
    <expr pos:line="2137" pos:column="5">public<op:operator pos:line="2137" pos:column="11">:</op:operator>
        virtual <name pos:line="2138" pos:column="17">HRESULT</name> <name pos:line="2138" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2138" pos:column="43">GetManagedObject</name><argument_list pos:line="2138" pos:column="59">( 
            <comment type="block" pos:line="2139" pos:column="13">/* [out] */</comment> <argument pos:line="2139" pos:column="25">__RPC__deref_out_opt IUnknown **ppManagedObject</argument>)</argument_list></macro> <op:operator pos:line="2139" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="2139" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="2141" pos:column="9">virtual <name pos:line="2141" pos:column="17">HRESULT</name> <name pos:line="2141" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2141" pos:column="43">SetFromManagedObject</name><argument_list pos:line="2141" pos:column="63">( 
            <comment type="block" pos:line="2142" pos:column="13">/* [in] */</comment> <argument pos:line="2142" pos:column="24">__RPC__in_opt IUnknown *pManagedObject</argument>)</argument_list></macro> <op:operator pos:line="2142" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="2142" pos:column="66">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2146" pos:column="1">#<cpp:directive pos:line="2146" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2146" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2148" pos:column="5">typedef <type><struct pos:line="2148" pos:column="13">struct <name pos:line="2148" pos:column="20">IDebugManagedObjectVtbl</name>
    <block pos:line="2149" pos:column="5">{<public type="default" pos:line="2149" pos:column="6">
        <function_decl><type><name pos:line="2150" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2152" pos:column="9">HRESULT</name></type> ( <name pos:line="2152" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2152" pos:column="37">*</type:modifier><name pos:line="2152" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2152" pos:column="54">( 
            <param><decl><type><name pos:line="2153" pos:column="13">IDebugManagedObject</name> <type:modifier pos:line="2153" pos:column="33">*</type:modifier></type> <name pos:line="2153" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2154" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2154" pos:column="24">__RPC__in</name> <name pos:line="2154" pos:column="34">REFIID</name></type> <name pos:line="2154" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2155" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2156" pos:column="13">__RPC__deref_out</name>  <name pos:line="2156" pos:column="31">void</name> <type:modifier pos:line="2156" pos:column="36">*</type:modifier><type:modifier pos:line="2156" pos:column="37">*</type:modifier></type><name pos:line="2156" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2158" pos:column="9">ULONG</name></type> ( <name pos:line="2158" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2158" pos:column="35">*</type:modifier><name pos:line="2158" pos:column="36">AddRef</name> )<parameter_list pos:line="2158" pos:column="44">( 
            <param><decl><type><name pos:line="2159" pos:column="13">IDebugManagedObject</name> <type:modifier pos:line="2159" pos:column="33">*</type:modifier></type> <name pos:line="2159" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2161" pos:column="9">ULONG</name></type> ( <name pos:line="2161" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2161" pos:column="35">*</type:modifier><name pos:line="2161" pos:column="36">Release</name> )<parameter_list pos:line="2161" pos:column="45">( 
            <param><decl><type><name pos:line="2162" pos:column="13">IDebugManagedObject</name> <type:modifier pos:line="2162" pos:column="33">*</type:modifier></type> <name pos:line="2162" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2164" pos:column="9">HRESULT</name></type> ( <name pos:line="2164" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2164" pos:column="37">*</type:modifier><name pos:line="2164" pos:column="38">GetManagedObject</name> )<parameter_list pos:line="2164" pos:column="56">( 
            <param><decl><type><name pos:line="2165" pos:column="13">IDebugManagedObject</name> <type:modifier pos:line="2165" pos:column="33">*</type:modifier></type> <name pos:line="2165" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2166" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2166" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2166" pos:column="46">IUnknown</name> <type:modifier pos:line="2166" pos:column="55">*</type:modifier><type:modifier pos:line="2166" pos:column="56">*</type:modifier></type><name pos:line="2166" pos:column="57">ppManagedObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2168" pos:column="9">HRESULT</name></type> ( <name pos:line="2168" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2168" pos:column="37">*</type:modifier><name pos:line="2168" pos:column="38">SetFromManagedObject</name> )<parameter_list pos:line="2168" pos:column="60">( 
            <param><decl><type><name pos:line="2169" pos:column="13">IDebugManagedObject</name> <type:modifier pos:line="2169" pos:column="33">*</type:modifier></type> <name pos:line="2169" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="2170" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2170" pos:column="24">__RPC__in_opt</name> <name pos:line="2170" pos:column="38">IUnknown</name> <type:modifier pos:line="2170" pos:column="47">*</type:modifier></type><name pos:line="2170" pos:column="48">pManagedObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2172" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2173" pos:column="7">IDebugManagedObjectVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2175" pos:column="5">interface</name></type> <name pos:line="2175" pos:column="15">IDebugManagedObject</name>
    <argument_list pos:line="2176" pos:column="5">{
        <argument><expr><name pos:line="2177" pos:column="9">CONST_VTBL</name> struct <name pos:line="2177" pos:column="27">IDebugManagedObjectVtbl</name> <op:operator pos:line="2177" pos:column="51">*</op:operator><name pos:line="2177" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2182" pos:column="1">#<cpp:directive pos:line="2182" pos:column="2">ifdef</cpp:directive> <name pos:line="2182" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2185" pos:column="1">#<cpp:directive pos:line="2185" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2185" pos:column="9">IDebugManagedObject_QueryInterface</name><parameter_list pos:line="2185" pos:column="43">(<param><type><name pos:line="2185" pos:column="44">This</name></type></param>,<param><type><name pos:line="2185" pos:column="49">riid</name></type></param>,<param><type><name pos:line="2185" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2186" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2188" pos:column="1">#<cpp:directive pos:line="2188" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2188" pos:column="9">IDebugManagedObject_AddRef</name><parameter_list pos:line="2188" pos:column="35">(<param><type><name pos:line="2188" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2189" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2191" pos:column="1">#<cpp:directive pos:line="2191" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2191" pos:column="9">IDebugManagedObject_Release</name><parameter_list pos:line="2191" pos:column="36">(<param><type><name pos:line="2191" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2192" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2195" pos:column="1">#<cpp:directive pos:line="2195" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2195" pos:column="9">IDebugManagedObject_GetManagedObject</name><parameter_list pos:line="2195" pos:column="45">(<param><type><name pos:line="2195" pos:column="46">This</name></type></param>,<param><type><name pos:line="2195" pos:column="51">ppManagedObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2196" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetManagedObject(This,ppManagedObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2198" pos:column="1">#<cpp:directive pos:line="2198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2198" pos:column="9">IDebugManagedObject_SetFromManagedObject</name><parameter_list pos:line="2198" pos:column="49">(<param><type><name pos:line="2198" pos:column="50">This</name></type></param>,<param><type><name pos:line="2198" pos:column="55">pManagedObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2199" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetFromManagedObject(This,pManagedObject) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2201" pos:column="1">#<cpp:directive pos:line="2201" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2201" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2204" pos:column="1">#<cpp:directive pos:line="2204" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2204" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2209" pos:column="1">#<cpp:directive pos:line="2209" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2209" pos:column="9">/* __IDebugManagedObject_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2212" pos:column="1">#<cpp:directive pos:line="2212" pos:column="2">ifndef</cpp:directive> <name pos:line="2212" pos:column="9">__IDebugBinder_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2213" pos:column="1">#<cpp:directive pos:line="2213" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2213" pos:column="9">__IDebugBinder_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2215" pos:column="1">/* interface IDebugBinder */</comment>
<comment type="block" pos:line="2216" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2219" pos:column="1">EXTERN_C</name> <specifier pos:line="2219" pos:column="10">const</specifier> <name pos:line="2219" pos:column="16">IID</name></type> <name pos:line="2219" pos:column="20">IID_IDebugBinder</name></decl>;</decl_stmt>

<cpp:if pos:line="2221" pos:column="1">#<cpp:directive pos:line="2221" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2221" pos:column="5">defined</name><argument_list pos:line="2221" pos:column="12">(<argument><expr><name pos:line="2221" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2221" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2221" pos:column="29">!</op:operator><call><name pos:line="2221" pos:column="30">defined</name><argument_list pos:line="2221" pos:column="37">(<argument><expr><name pos:line="2221" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2223" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2223" pos:column="19">(<argument pos:line="2223" pos:column="20">"C077C833-476C-11d2-B73C-0000F87572EF"</argument>)</argument_list></macro>
    <label><name pos:line="2224" pos:column="5">IDebugBinder</name> :</label> <expr_stmt><expr pos:line="2224" pos:column="20">public <name pos:line="2224" pos:column="27">IUnknown</name>
    <block pos:line="2225" pos:column="5">{
    <expr pos:line="2226" pos:column="5">public<op:operator pos:line="2226" pos:column="11">:</op:operator>
        virtual <name pos:line="2227" pos:column="17">HRESULT</name> <name pos:line="2227" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2227" pos:column="43">Bind</name><argument_list pos:line="2227" pos:column="47">( 
            <comment type="block" pos:line="2228" pos:column="13">/* [in] */</comment> <argument pos:line="2228" pos:column="24">__RPC__in_opt IDebugObject *pContainer</argument>,
            <comment type="block" pos:line="2229" pos:column="13">/* [in] */</comment> <argument pos:line="2229" pos:column="24">__RPC__in_opt IDebugField *pField</argument>,
            <comment type="block" pos:line="2230" pos:column="13">/* [out] */</comment> <argument pos:line="2230" pos:column="25">__RPC__deref_out_opt IDebugObject **ppObject</argument>)</argument_list></macro> <op:operator pos:line="2230" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2230" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="2232" pos:column="9">virtual <name pos:line="2232" pos:column="17">HRESULT</name> <name pos:line="2232" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2232" pos:column="43">ResolveDynamicType</name><argument_list pos:line="2232" pos:column="61">( 
            <comment type="block" pos:line="2233" pos:column="13">/* [in] */</comment> <argument pos:line="2233" pos:column="24">__RPC__in_opt IDebugDynamicField *pDynamic</argument>,
            <comment type="block" pos:line="2234" pos:column="13">/* [out] */</comment> <argument pos:line="2234" pos:column="25">__RPC__deref_out_opt IDebugField **ppResolved</argument>)</argument_list></macro> <op:operator pos:line="2234" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="2234" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="2236" pos:column="9">virtual <name pos:line="2236" pos:column="17">HRESULT</name> <name pos:line="2236" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2236" pos:column="43">ResolveRuntimeType</name><argument_list pos:line="2236" pos:column="61">( 
            <comment type="block" pos:line="2237" pos:column="13">/* [in] */</comment> <argument pos:line="2237" pos:column="24">__RPC__in_opt IDebugObject *pObject</argument>,
            <comment type="block" pos:line="2238" pos:column="13">/* [out] */</comment> <argument pos:line="2238" pos:column="25">__RPC__deref_out_opt IDebugField **ppResolved</argument>)</argument_list></macro> <op:operator pos:line="2238" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="2238" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="2240" pos:column="9">virtual <name pos:line="2240" pos:column="17">HRESULT</name> <name pos:line="2240" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2240" pos:column="43">GetMemoryContext</name><argument_list pos:line="2240" pos:column="59">( 
            <comment type="block" pos:line="2241" pos:column="13">/* [in] */</comment> <argument pos:line="2241" pos:column="24">__RPC__in_opt IDebugField *pField</argument>,
            <comment type="block" pos:line="2242" pos:column="13">/* [in] */</comment> <argument pos:line="2242" pos:column="24">DWORD dwConstant</argument>,
            <comment type="block" pos:line="2243" pos:column="13">/* [out] */</comment> <argument pos:line="2243" pos:column="25">__RPC__deref_out_opt IDebugMemoryContext2 **ppMemCxt</argument>)</argument_list></macro> <op:operator pos:line="2243" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="2243" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="2245" pos:column="9">virtual <name pos:line="2245" pos:column="17">HRESULT</name> <name pos:line="2245" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2245" pos:column="43">GetFunctionObject</name><argument_list pos:line="2245" pos:column="60">( 
            <comment type="block" pos:line="2246" pos:column="13">/* [out] */</comment> <argument pos:line="2246" pos:column="25">__RPC__deref_out_opt IDebugFunctionObject **ppFunction</argument>)</argument_list></macro> <op:operator pos:line="2246" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="2246" pos:column="83">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2250" pos:column="1">#<cpp:directive pos:line="2250" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2250" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2252" pos:column="5">typedef <type><struct pos:line="2252" pos:column="13">struct <name pos:line="2252" pos:column="20">IDebugBinderVtbl</name>
    <block pos:line="2253" pos:column="5">{<public type="default" pos:line="2253" pos:column="6">
        <function_decl><type><name pos:line="2254" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2256" pos:column="9">HRESULT</name></type> ( <name pos:line="2256" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2256" pos:column="37">*</type:modifier><name pos:line="2256" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2256" pos:column="54">( 
            <param><decl><type><name pos:line="2257" pos:column="13">IDebugBinder</name> <type:modifier pos:line="2257" pos:column="26">*</type:modifier></type> <name pos:line="2257" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2258" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2258" pos:column="24">__RPC__in</name> <name pos:line="2258" pos:column="34">REFIID</name></type> <name pos:line="2258" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2259" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2260" pos:column="13">__RPC__deref_out</name>  <name pos:line="2260" pos:column="31">void</name> <type:modifier pos:line="2260" pos:column="36">*</type:modifier><type:modifier pos:line="2260" pos:column="37">*</type:modifier></type><name pos:line="2260" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2262" pos:column="9">ULONG</name></type> ( <name pos:line="2262" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2262" pos:column="35">*</type:modifier><name pos:line="2262" pos:column="36">AddRef</name> )<parameter_list pos:line="2262" pos:column="44">( 
            <param><decl><type><name pos:line="2263" pos:column="13">IDebugBinder</name> <type:modifier pos:line="2263" pos:column="26">*</type:modifier></type> <name pos:line="2263" pos:column="28">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2265" pos:column="9">ULONG</name></type> ( <name pos:line="2265" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2265" pos:column="35">*</type:modifier><name pos:line="2265" pos:column="36">Release</name> )<parameter_list pos:line="2265" pos:column="45">( 
            <param><decl><type><name pos:line="2266" pos:column="13">IDebugBinder</name> <type:modifier pos:line="2266" pos:column="26">*</type:modifier></type> <name pos:line="2266" pos:column="28">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2268" pos:column="9">HRESULT</name></type> ( <name pos:line="2268" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2268" pos:column="37">*</type:modifier><name pos:line="2268" pos:column="38">Bind</name> )<parameter_list pos:line="2268" pos:column="44">( 
            <param><decl><type><name pos:line="2269" pos:column="13">IDebugBinder</name> <type:modifier pos:line="2269" pos:column="26">*</type:modifier></type> <name pos:line="2269" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2270" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2270" pos:column="24">__RPC__in_opt</name> <name pos:line="2270" pos:column="38">IDebugObject</name> <type:modifier pos:line="2270" pos:column="51">*</type:modifier></type><name pos:line="2270" pos:column="52">pContainer</name></decl></param>,
            <comment type="block" pos:line="2271" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2271" pos:column="24">__RPC__in_opt</name> <name pos:line="2271" pos:column="38">IDebugField</name> <type:modifier pos:line="2271" pos:column="50">*</type:modifier></type><name pos:line="2271" pos:column="51">pField</name></decl></param>,
            <comment type="block" pos:line="2272" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2272" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2272" pos:column="46">IDebugObject</name> <type:modifier pos:line="2272" pos:column="59">*</type:modifier><type:modifier pos:line="2272" pos:column="60">*</type:modifier></type><name pos:line="2272" pos:column="61">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2274" pos:column="9">HRESULT</name></type> ( <name pos:line="2274" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2274" pos:column="37">*</type:modifier><name pos:line="2274" pos:column="38">ResolveDynamicType</name> )<parameter_list pos:line="2274" pos:column="58">( 
            <param><decl><type><name pos:line="2275" pos:column="13">IDebugBinder</name> <type:modifier pos:line="2275" pos:column="26">*</type:modifier></type> <name pos:line="2275" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2276" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2276" pos:column="24">__RPC__in_opt</name> <name pos:line="2276" pos:column="38">IDebugDynamicField</name> <type:modifier pos:line="2276" pos:column="57">*</type:modifier></type><name pos:line="2276" pos:column="58">pDynamic</name></decl></param>,
            <comment type="block" pos:line="2277" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2277" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2277" pos:column="46">IDebugField</name> <type:modifier pos:line="2277" pos:column="58">*</type:modifier><type:modifier pos:line="2277" pos:column="59">*</type:modifier></type><name pos:line="2277" pos:column="60">ppResolved</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2279" pos:column="9">HRESULT</name></type> ( <name pos:line="2279" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2279" pos:column="37">*</type:modifier><name pos:line="2279" pos:column="38">ResolveRuntimeType</name> )<parameter_list pos:line="2279" pos:column="58">( 
            <param><decl><type><name pos:line="2280" pos:column="13">IDebugBinder</name> <type:modifier pos:line="2280" pos:column="26">*</type:modifier></type> <name pos:line="2280" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2281" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2281" pos:column="24">__RPC__in_opt</name> <name pos:line="2281" pos:column="38">IDebugObject</name> <type:modifier pos:line="2281" pos:column="51">*</type:modifier></type><name pos:line="2281" pos:column="52">pObject</name></decl></param>,
            <comment type="block" pos:line="2282" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2282" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2282" pos:column="46">IDebugField</name> <type:modifier pos:line="2282" pos:column="58">*</type:modifier><type:modifier pos:line="2282" pos:column="59">*</type:modifier></type><name pos:line="2282" pos:column="60">ppResolved</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2284" pos:column="9">HRESULT</name></type> ( <name pos:line="2284" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2284" pos:column="37">*</type:modifier><name pos:line="2284" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="2284" pos:column="56">( 
            <param><decl><type><name pos:line="2285" pos:column="13">IDebugBinder</name> <type:modifier pos:line="2285" pos:column="26">*</type:modifier></type> <name pos:line="2285" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2286" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2286" pos:column="24">__RPC__in_opt</name> <name pos:line="2286" pos:column="38">IDebugField</name> <type:modifier pos:line="2286" pos:column="50">*</type:modifier></type><name pos:line="2286" pos:column="51">pField</name></decl></param>,
            <comment type="block" pos:line="2287" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2287" pos:column="24">DWORD</name></type> <name pos:line="2287" pos:column="30">dwConstant</name></decl></param>,
            <comment type="block" pos:line="2288" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2288" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2288" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="2288" pos:column="67">*</type:modifier><type:modifier pos:line="2288" pos:column="68">*</type:modifier></type><name pos:line="2288" pos:column="69">ppMemCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2290" pos:column="9">HRESULT</name></type> ( <name pos:line="2290" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2290" pos:column="37">*</type:modifier><name pos:line="2290" pos:column="38">GetFunctionObject</name> )<parameter_list pos:line="2290" pos:column="57">( 
            <param><decl><type><name pos:line="2291" pos:column="13">IDebugBinder</name> <type:modifier pos:line="2291" pos:column="26">*</type:modifier></type> <name pos:line="2291" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2292" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2292" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2292" pos:column="46">IDebugFunctionObject</name> <type:modifier pos:line="2292" pos:column="67">*</type:modifier><type:modifier pos:line="2292" pos:column="68">*</type:modifier></type><name pos:line="2292" pos:column="69">ppFunction</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2294" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2295" pos:column="7">IDebugBinderVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2297" pos:column="5">interface</name></type> <name pos:line="2297" pos:column="15">IDebugBinder</name>
    <argument_list pos:line="2298" pos:column="5">{
        <argument><expr><name pos:line="2299" pos:column="9">CONST_VTBL</name> struct <name pos:line="2299" pos:column="27">IDebugBinderVtbl</name> <op:operator pos:line="2299" pos:column="44">*</op:operator><name pos:line="2299" pos:column="45">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2304" pos:column="1">#<cpp:directive pos:line="2304" pos:column="2">ifdef</cpp:directive> <name pos:line="2304" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2307" pos:column="1">#<cpp:directive pos:line="2307" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2307" pos:column="9">IDebugBinder_QueryInterface</name><parameter_list pos:line="2307" pos:column="36">(<param><type><name pos:line="2307" pos:column="37">This</name></type></param>,<param><type><name pos:line="2307" pos:column="42">riid</name></type></param>,<param><type><name pos:line="2307" pos:column="47">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2308" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2310" pos:column="1">#<cpp:directive pos:line="2310" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2310" pos:column="9">IDebugBinder_AddRef</name><parameter_list pos:line="2310" pos:column="28">(<param><type><name pos:line="2310" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2311" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2313" pos:column="1">#<cpp:directive pos:line="2313" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2313" pos:column="9">IDebugBinder_Release</name><parameter_list pos:line="2313" pos:column="29">(<param><type><name pos:line="2313" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2314" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2317" pos:column="1">#<cpp:directive pos:line="2317" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2317" pos:column="9">IDebugBinder_Bind</name><parameter_list pos:line="2317" pos:column="26">(<param><type><name pos:line="2317" pos:column="27">This</name></type></param>,<param><type><name pos:line="2317" pos:column="32">pContainer</name></type></param>,<param><type><name pos:line="2317" pos:column="43">pField</name></type></param>,<param><type><name pos:line="2317" pos:column="50">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2318" pos:column="5">( (This)-&gt;lpVtbl -&gt; Bind(This,pContainer,pField,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2320" pos:column="1">#<cpp:directive pos:line="2320" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2320" pos:column="9">IDebugBinder_ResolveDynamicType</name><parameter_list pos:line="2320" pos:column="40">(<param><type><name pos:line="2320" pos:column="41">This</name></type></param>,<param><type><name pos:line="2320" pos:column="46">pDynamic</name></type></param>,<param><type><name pos:line="2320" pos:column="55">ppResolved</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2321" pos:column="5">( (This)-&gt;lpVtbl -&gt; ResolveDynamicType(This,pDynamic,ppResolved) )</cpp:value></cpp:define> 

<cpp:define pos:line="2323" pos:column="1">#<cpp:directive pos:line="2323" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2323" pos:column="9">IDebugBinder_ResolveRuntimeType</name><parameter_list pos:line="2323" pos:column="40">(<param><type><name pos:line="2323" pos:column="41">This</name></type></param>,<param><type><name pos:line="2323" pos:column="46">pObject</name></type></param>,<param><type><name pos:line="2323" pos:column="54">ppResolved</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2324" pos:column="5">( (This)-&gt;lpVtbl -&gt; ResolveRuntimeType(This,pObject,ppResolved) )</cpp:value></cpp:define> 

<cpp:define pos:line="2326" pos:column="1">#<cpp:directive pos:line="2326" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2326" pos:column="9">IDebugBinder_GetMemoryContext</name><parameter_list pos:line="2326" pos:column="38">(<param><type><name pos:line="2326" pos:column="39">This</name></type></param>,<param><type><name pos:line="2326" pos:column="44">pField</name></type></param>,<param><type><name pos:line="2326" pos:column="51">dwConstant</name></type></param>,<param><type><name pos:line="2326" pos:column="62">ppMemCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2327" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,pField,dwConstant,ppMemCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="2329" pos:column="1">#<cpp:directive pos:line="2329" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2329" pos:column="9">IDebugBinder_GetFunctionObject</name><parameter_list pos:line="2329" pos:column="39">(<param><type><name pos:line="2329" pos:column="40">This</name></type></param>,<param><type><name pos:line="2329" pos:column="45">ppFunction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2330" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFunctionObject(This,ppFunction) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2332" pos:column="1">#<cpp:directive pos:line="2332" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2332" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2335" pos:column="1">#<cpp:directive pos:line="2335" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2335" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2340" pos:column="1">#<cpp:directive pos:line="2340" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2340" pos:column="9">/* __IDebugBinder_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2343" pos:column="1">#<cpp:directive pos:line="2343" pos:column="2">ifndef</cpp:directive> <name pos:line="2343" pos:column="9">__IDebugBinderDirect_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2344" pos:column="1">#<cpp:directive pos:line="2344" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2344" pos:column="9">__IDebugBinderDirect_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2346" pos:column="1">/* interface IDebugBinderDirect */</comment>
<comment type="block" pos:line="2347" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2350" pos:column="1">EXTERN_C</name> <specifier pos:line="2350" pos:column="10">const</specifier> <name pos:line="2350" pos:column="16">IID</name></type> <name pos:line="2350" pos:column="20">IID_IDebugBinderDirect</name></decl>;</decl_stmt>

<cpp:if pos:line="2352" pos:column="1">#<cpp:directive pos:line="2352" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2352" pos:column="5">defined</name><argument_list pos:line="2352" pos:column="12">(<argument><expr><name pos:line="2352" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2352" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2352" pos:column="29">!</op:operator><call><name pos:line="2352" pos:column="30">defined</name><argument_list pos:line="2352" pos:column="37">(<argument><expr><name pos:line="2352" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2354" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2354" pos:column="19">(<argument pos:line="2354" pos:column="20">"9DB3E3B8-84F5-488e-93EB-B3CE3E33EDAB"</argument>)</argument_list></macro>
    <label><name pos:line="2355" pos:column="5">IDebugBinderDirect</name> :</label> <expr_stmt><expr pos:line="2355" pos:column="26">public <name pos:line="2355" pos:column="33">IUnknown</name>
    <block pos:line="2356" pos:column="5">{
    <expr pos:line="2357" pos:column="5">public<op:operator pos:line="2357" pos:column="11">:</op:operator>
        virtual <name pos:line="2358" pos:column="17">HRESULT</name> <name pos:line="2358" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2358" pos:column="43">GetCORDBFrame</name><argument_list pos:line="2358" pos:column="56">( 
            <comment type="block" pos:line="2359" pos:column="13">/* [out] */</comment> <argument pos:line="2359" pos:column="25">__RPC__deref_out_opt IUnknown **ppFrame</argument>)</argument_list></macro> <op:operator pos:line="2359" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="2359" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="2361" pos:column="9">virtual <name pos:line="2361" pos:column="17">HRESULT</name> <name pos:line="2361" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2361" pos:column="43">GetCORDBModule</name><argument_list pos:line="2361" pos:column="57">( 
            <comment type="block" pos:line="2362" pos:column="13">/* [in] */</comment> <argument pos:line="2362" pos:column="24">GUID guid</argument>,
            <comment type="block" pos:line="2363" pos:column="13">/* [in] */</comment> <argument pos:line="2363" pos:column="24">ULONG32 appDomainID</argument>,
            <comment type="block" pos:line="2364" pos:column="13">/* [out] */</comment> <argument pos:line="2364" pos:column="25">__RPC__deref_out_opt IUnknown **ppModule</argument>)</argument_list></macro> <op:operator pos:line="2364" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="2364" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="2366" pos:column="9">virtual <name pos:line="2366" pos:column="17">HRESULT</name> <name pos:line="2366" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2366" pos:column="43">GetDebugProperty</name><argument_list pos:line="2366" pos:column="59">( 
            <comment type="block" pos:line="2367" pos:column="13">/* [out] */</comment> <argument pos:line="2367" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppProperty</argument>)</argument_list></macro> <op:operator pos:line="2367" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="2367" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="2369" pos:column="9">virtual <name pos:line="2369" pos:column="17">HRESULT</name> <name pos:line="2369" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2369" pos:column="43">GetMemoryContext</name><argument_list pos:line="2369" pos:column="59">( 
            <comment type="block" pos:line="2370" pos:column="13">/* [in] */</comment> <argument pos:line="2370" pos:column="24">__RPC__in DEBUG_ADDRESS *pda</argument>,
            <comment type="block" pos:line="2371" pos:column="13">/* [in] */</comment> <argument pos:line="2371" pos:column="24">UINT64 dwConstant</argument>,
            <comment type="block" pos:line="2372" pos:column="13">/* [out] */</comment> <argument pos:line="2372" pos:column="25">__RPC__deref_out_opt IDebugMemoryContext2 **ppMemCxt</argument>)</argument_list></macro> <op:operator pos:line="2372" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="2372" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="2374" pos:column="9">virtual <name pos:line="2374" pos:column="17">HRESULT</name> <name pos:line="2374" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2374" pos:column="43">GetAlias</name><argument_list pos:line="2374" pos:column="51">( 
            <comment type="block" pos:line="2375" pos:column="13">/* [in] */</comment> <argument pos:line="2375" pos:column="24">__RPC__in_opt IUnknown *pCorValue</argument>,
            <comment type="block" pos:line="2376" pos:column="13">/* [out] */</comment> <argument pos:line="2376" pos:column="25">__RPC__deref_out_opt IDebugAlias **ppAlias</argument>)</argument_list></macro> <op:operator pos:line="2376" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="2376" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="2378" pos:column="9">virtual <name pos:line="2378" pos:column="17">HRESULT</name> <name pos:line="2378" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2378" pos:column="43">IsUserData</name><argument_list pos:line="2378" pos:column="53">( 
            <comment type="block" pos:line="2379" pos:column="13">/* [in] */</comment> <argument pos:line="2379" pos:column="24">__RPC__in DEBUG_ADDRESS *pda</argument>,
            <comment type="block" pos:line="2380" pos:column="13">/* [out] */</comment> <argument pos:line="2380" pos:column="25">__RPC__out BOOL *pfUser</argument>)</argument_list></macro> <op:operator pos:line="2380" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="2380" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="2382" pos:column="9">virtual <name pos:line="2382" pos:column="17">HRESULT</name> <name pos:line="2382" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2382" pos:column="43">CanDoFuncEval</name><argument_list pos:line="2382" pos:column="56">( 
            <comment type="block" pos:line="2383" pos:column="13">/* [in] */</comment> <argument pos:line="2383" pos:column="24">__RPC__in DEBUG_ADDRESS *pda</argument>)</argument_list></macro> <op:operator pos:line="2383" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="2383" pos:column="56">0</lit:literal></expr>;
        
        <expr pos:line="2385" pos:column="9">virtual <name pos:line="2385" pos:column="17">HRESULT</name> <name pos:line="2385" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2385" pos:column="43">ContinueForFuncEval</name><argument_list pos:line="2385" pos:column="62">( 
            <comment type="block" pos:line="2386" pos:column="13">/* [in] */</comment> <argument pos:line="2386" pos:column="24">__RPC__in_opt IUnknown *pCorEval</argument>,
            <comment type="block" pos:line="2387" pos:column="13">/* [in] */</comment> <argument pos:line="2387" pos:column="24">DWORD dwEvalFlags</argument>,
            <comment type="block" pos:line="2388" pos:column="13">/* [in] */</comment> <argument pos:line="2388" pos:column="24">DWORD dwTimeout</argument>)</argument_list></macro> <op:operator pos:line="2388" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="2388" pos:column="43">0</lit:literal></expr>;
        
        <expr pos:line="2390" pos:column="9">virtual <name pos:line="2390" pos:column="17">HRESULT</name> <name pos:line="2390" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2390" pos:column="43">CreateIDebugObject</name><argument_list pos:line="2390" pos:column="61">( 
            <comment type="block" pos:line="2391" pos:column="13">/* [in] */</comment> <argument pos:line="2391" pos:column="24">__RPC__in_opt IUnknown *pCorDebugValue</argument>,
            <comment type="block" pos:line="2392" pos:column="13">/* [out] */</comment> <argument pos:line="2392" pos:column="25">__RPC__deref_out_opt IDebugObject **ppObject</argument>)</argument_list></macro> <op:operator pos:line="2392" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2392" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="2394" pos:column="9">virtual <name pos:line="2394" pos:column="17">HRESULT</name> <name pos:line="2394" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2394" pos:column="43">IsInSQLCLRMode</name><argument_list pos:line="2394" pos:column="57">( 
            <comment type="block" pos:line="2395" pos:column="13">/* [out] */</comment> <argument pos:line="2395" pos:column="25">__RPC__out BOOL *pfSQLCLRMode</argument>)</argument_list></macro> <op:operator pos:line="2395" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="2395" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="2397" pos:column="9">virtual <name pos:line="2397" pos:column="17">HRESULT</name> <name pos:line="2397" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2397" pos:column="43">IsInEmbeddedClrMode</name><argument_list pos:line="2397" pos:column="62">( 
            <comment type="block" pos:line="2398" pos:column="13">/* [out] */</comment> <argument pos:line="2398" pos:column="25">__RPC__out BOOL *pfEmbeddedClrMode</argument>)</argument_list></macro> <op:operator pos:line="2398" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="2398" pos:column="63">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2402" pos:column="1">#<cpp:directive pos:line="2402" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2402" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2404" pos:column="5">typedef <type><struct pos:line="2404" pos:column="13">struct <name pos:line="2404" pos:column="20">IDebugBinderDirectVtbl</name>
    <block pos:line="2405" pos:column="5">{<public type="default" pos:line="2405" pos:column="6">
        <function_decl><type><name pos:line="2406" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2408" pos:column="9">HRESULT</name></type> ( <name pos:line="2408" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2408" pos:column="37">*</type:modifier><name pos:line="2408" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2408" pos:column="54">( 
            <param><decl><type><name pos:line="2409" pos:column="13">IDebugBinderDirect</name> <type:modifier pos:line="2409" pos:column="32">*</type:modifier></type> <name pos:line="2409" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2410" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2410" pos:column="24">__RPC__in</name> <name pos:line="2410" pos:column="34">REFIID</name></type> <name pos:line="2410" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2411" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2412" pos:column="13">__RPC__deref_out</name>  <name pos:line="2412" pos:column="31">void</name> <type:modifier pos:line="2412" pos:column="36">*</type:modifier><type:modifier pos:line="2412" pos:column="37">*</type:modifier></type><name pos:line="2412" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2414" pos:column="9">ULONG</name></type> ( <name pos:line="2414" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2414" pos:column="35">*</type:modifier><name pos:line="2414" pos:column="36">AddRef</name> )<parameter_list pos:line="2414" pos:column="44">( 
            <param><decl><type><name pos:line="2415" pos:column="13">IDebugBinderDirect</name> <type:modifier pos:line="2415" pos:column="32">*</type:modifier></type> <name pos:line="2415" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2417" pos:column="9">ULONG</name></type> ( <name pos:line="2417" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2417" pos:column="35">*</type:modifier><name pos:line="2417" pos:column="36">Release</name> )<parameter_list pos:line="2417" pos:column="45">( 
            <param><decl><type><name pos:line="2418" pos:column="13">IDebugBinderDirect</name> <type:modifier pos:line="2418" pos:column="32">*</type:modifier></type> <name pos:line="2418" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2420" pos:column="9">HRESULT</name></type> ( <name pos:line="2420" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2420" pos:column="37">*</type:modifier><name pos:line="2420" pos:column="38">GetCORDBFrame</name> )<parameter_list pos:line="2420" pos:column="53">( 
            <param><decl><type><name pos:line="2421" pos:column="13">IDebugBinderDirect</name> <type:modifier pos:line="2421" pos:column="32">*</type:modifier></type> <name pos:line="2421" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2422" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2422" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2422" pos:column="46">IUnknown</name> <type:modifier pos:line="2422" pos:column="55">*</type:modifier><type:modifier pos:line="2422" pos:column="56">*</type:modifier></type><name pos:line="2422" pos:column="57">ppFrame</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2424" pos:column="9">HRESULT</name></type> ( <name pos:line="2424" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2424" pos:column="37">*</type:modifier><name pos:line="2424" pos:column="38">GetCORDBModule</name> )<parameter_list pos:line="2424" pos:column="54">( 
            <param><decl><type><name pos:line="2425" pos:column="13">IDebugBinderDirect</name> <type:modifier pos:line="2425" pos:column="32">*</type:modifier></type> <name pos:line="2425" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2426" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2426" pos:column="24">GUID</name></type> <name pos:line="2426" pos:column="29">guid</name></decl></param>,
            <comment type="block" pos:line="2427" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2427" pos:column="24">ULONG32</name></type> <name pos:line="2427" pos:column="32">appDomainID</name></decl></param>,
            <comment type="block" pos:line="2428" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2428" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2428" pos:column="46">IUnknown</name> <type:modifier pos:line="2428" pos:column="55">*</type:modifier><type:modifier pos:line="2428" pos:column="56">*</type:modifier></type><name pos:line="2428" pos:column="57">ppModule</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2430" pos:column="9">HRESULT</name></type> ( <name pos:line="2430" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2430" pos:column="37">*</type:modifier><name pos:line="2430" pos:column="38">GetDebugProperty</name> )<parameter_list pos:line="2430" pos:column="56">( 
            <param><decl><type><name pos:line="2431" pos:column="13">IDebugBinderDirect</name> <type:modifier pos:line="2431" pos:column="32">*</type:modifier></type> <name pos:line="2431" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2432" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2432" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2432" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="2432" pos:column="62">*</type:modifier><type:modifier pos:line="2432" pos:column="63">*</type:modifier></type><name pos:line="2432" pos:column="64">ppProperty</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2434" pos:column="9">HRESULT</name></type> ( <name pos:line="2434" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2434" pos:column="37">*</type:modifier><name pos:line="2434" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="2434" pos:column="56">( 
            <param><decl><type><name pos:line="2435" pos:column="13">IDebugBinderDirect</name> <type:modifier pos:line="2435" pos:column="32">*</type:modifier></type> <name pos:line="2435" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2436" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2436" pos:column="24">__RPC__in</name> <name pos:line="2436" pos:column="34">DEBUG_ADDRESS</name> <type:modifier pos:line="2436" pos:column="48">*</type:modifier></type><name pos:line="2436" pos:column="49">pda</name></decl></param>,
            <comment type="block" pos:line="2437" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2437" pos:column="24">UINT64</name></type> <name pos:line="2437" pos:column="31">dwConstant</name></decl></param>,
            <comment type="block" pos:line="2438" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2438" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2438" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="2438" pos:column="67">*</type:modifier><type:modifier pos:line="2438" pos:column="68">*</type:modifier></type><name pos:line="2438" pos:column="69">ppMemCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2440" pos:column="9">HRESULT</name></type> ( <name pos:line="2440" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2440" pos:column="37">*</type:modifier><name pos:line="2440" pos:column="38">GetAlias</name> )<parameter_list pos:line="2440" pos:column="48">( 
            <param><decl><type><name pos:line="2441" pos:column="13">IDebugBinderDirect</name> <type:modifier pos:line="2441" pos:column="32">*</type:modifier></type> <name pos:line="2441" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2442" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2442" pos:column="24">__RPC__in_opt</name> <name pos:line="2442" pos:column="38">IUnknown</name> <type:modifier pos:line="2442" pos:column="47">*</type:modifier></type><name pos:line="2442" pos:column="48">pCorValue</name></decl></param>,
            <comment type="block" pos:line="2443" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2443" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2443" pos:column="46">IDebugAlias</name> <type:modifier pos:line="2443" pos:column="58">*</type:modifier><type:modifier pos:line="2443" pos:column="59">*</type:modifier></type><name pos:line="2443" pos:column="60">ppAlias</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2445" pos:column="9">HRESULT</name></type> ( <name pos:line="2445" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2445" pos:column="37">*</type:modifier><name pos:line="2445" pos:column="38">IsUserData</name> )<parameter_list pos:line="2445" pos:column="50">( 
            <param><decl><type><name pos:line="2446" pos:column="13">IDebugBinderDirect</name> <type:modifier pos:line="2446" pos:column="32">*</type:modifier></type> <name pos:line="2446" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2447" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2447" pos:column="24">__RPC__in</name> <name pos:line="2447" pos:column="34">DEBUG_ADDRESS</name> <type:modifier pos:line="2447" pos:column="48">*</type:modifier></type><name pos:line="2447" pos:column="49">pda</name></decl></param>,
            <comment type="block" pos:line="2448" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2448" pos:column="25">__RPC__out</name> <name pos:line="2448" pos:column="36">BOOL</name> <type:modifier pos:line="2448" pos:column="41">*</type:modifier></type><name pos:line="2448" pos:column="42">pfUser</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2450" pos:column="9">HRESULT</name></type> ( <name pos:line="2450" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2450" pos:column="37">*</type:modifier><name pos:line="2450" pos:column="38">CanDoFuncEval</name> )<parameter_list pos:line="2450" pos:column="53">( 
            <param><decl><type><name pos:line="2451" pos:column="13">IDebugBinderDirect</name> <type:modifier pos:line="2451" pos:column="32">*</type:modifier></type> <name pos:line="2451" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2452" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2452" pos:column="24">__RPC__in</name> <name pos:line="2452" pos:column="34">DEBUG_ADDRESS</name> <type:modifier pos:line="2452" pos:column="48">*</type:modifier></type><name pos:line="2452" pos:column="49">pda</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2454" pos:column="9">HRESULT</name></type> ( <name pos:line="2454" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2454" pos:column="37">*</type:modifier><name pos:line="2454" pos:column="38">ContinueForFuncEval</name> )<parameter_list pos:line="2454" pos:column="59">( 
            <param><decl><type><name pos:line="2455" pos:column="13">IDebugBinderDirect</name> <type:modifier pos:line="2455" pos:column="32">*</type:modifier></type> <name pos:line="2455" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2456" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2456" pos:column="24">__RPC__in_opt</name> <name pos:line="2456" pos:column="38">IUnknown</name> <type:modifier pos:line="2456" pos:column="47">*</type:modifier></type><name pos:line="2456" pos:column="48">pCorEval</name></decl></param>,
            <comment type="block" pos:line="2457" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2457" pos:column="24">DWORD</name></type> <name pos:line="2457" pos:column="30">dwEvalFlags</name></decl></param>,
            <comment type="block" pos:line="2458" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2458" pos:column="24">DWORD</name></type> <name pos:line="2458" pos:column="30">dwTimeout</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2460" pos:column="9">HRESULT</name></type> ( <name pos:line="2460" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2460" pos:column="37">*</type:modifier><name pos:line="2460" pos:column="38">CreateIDebugObject</name> )<parameter_list pos:line="2460" pos:column="58">( 
            <param><decl><type><name pos:line="2461" pos:column="13">IDebugBinderDirect</name> <type:modifier pos:line="2461" pos:column="32">*</type:modifier></type> <name pos:line="2461" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2462" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2462" pos:column="24">__RPC__in_opt</name> <name pos:line="2462" pos:column="38">IUnknown</name> <type:modifier pos:line="2462" pos:column="47">*</type:modifier></type><name pos:line="2462" pos:column="48">pCorDebugValue</name></decl></param>,
            <comment type="block" pos:line="2463" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2463" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2463" pos:column="46">IDebugObject</name> <type:modifier pos:line="2463" pos:column="59">*</type:modifier><type:modifier pos:line="2463" pos:column="60">*</type:modifier></type><name pos:line="2463" pos:column="61">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2465" pos:column="9">HRESULT</name></type> ( <name pos:line="2465" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2465" pos:column="37">*</type:modifier><name pos:line="2465" pos:column="38">IsInSQLCLRMode</name> )<parameter_list pos:line="2465" pos:column="54">( 
            <param><decl><type><name pos:line="2466" pos:column="13">IDebugBinderDirect</name> <type:modifier pos:line="2466" pos:column="32">*</type:modifier></type> <name pos:line="2466" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2467" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2467" pos:column="25">__RPC__out</name> <name pos:line="2467" pos:column="36">BOOL</name> <type:modifier pos:line="2467" pos:column="41">*</type:modifier></type><name pos:line="2467" pos:column="42">pfSQLCLRMode</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2469" pos:column="9">HRESULT</name></type> ( <name pos:line="2469" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2469" pos:column="37">*</type:modifier><name pos:line="2469" pos:column="38">IsInEmbeddedClrMode</name> )<parameter_list pos:line="2469" pos:column="59">( 
            <param><decl><type><name pos:line="2470" pos:column="13">IDebugBinderDirect</name> <type:modifier pos:line="2470" pos:column="32">*</type:modifier></type> <name pos:line="2470" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="2471" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2471" pos:column="25">__RPC__out</name> <name pos:line="2471" pos:column="36">BOOL</name> <type:modifier pos:line="2471" pos:column="41">*</type:modifier></type><name pos:line="2471" pos:column="42">pfEmbeddedClrMode</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2473" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2474" pos:column="7">IDebugBinderDirectVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2476" pos:column="5">interface</name></type> <name pos:line="2476" pos:column="15">IDebugBinderDirect</name>
    <argument_list pos:line="2477" pos:column="5">{
        <argument><expr><name pos:line="2478" pos:column="9">CONST_VTBL</name> struct <name pos:line="2478" pos:column="27">IDebugBinderDirectVtbl</name> <op:operator pos:line="2478" pos:column="50">*</op:operator><name pos:line="2478" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2483" pos:column="1">#<cpp:directive pos:line="2483" pos:column="2">ifdef</cpp:directive> <name pos:line="2483" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2486" pos:column="1">#<cpp:directive pos:line="2486" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2486" pos:column="9">IDebugBinderDirect_QueryInterface</name><parameter_list pos:line="2486" pos:column="42">(<param><type><name pos:line="2486" pos:column="43">This</name></type></param>,<param><type><name pos:line="2486" pos:column="48">riid</name></type></param>,<param><type><name pos:line="2486" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2487" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2489" pos:column="1">#<cpp:directive pos:line="2489" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2489" pos:column="9">IDebugBinderDirect_AddRef</name><parameter_list pos:line="2489" pos:column="34">(<param><type><name pos:line="2489" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2490" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2492" pos:column="1">#<cpp:directive pos:line="2492" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2492" pos:column="9">IDebugBinderDirect_Release</name><parameter_list pos:line="2492" pos:column="35">(<param><type><name pos:line="2492" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2493" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2496" pos:column="1">#<cpp:directive pos:line="2496" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2496" pos:column="9">IDebugBinderDirect_GetCORDBFrame</name><parameter_list pos:line="2496" pos:column="41">(<param><type><name pos:line="2496" pos:column="42">This</name></type></param>,<param><type><name pos:line="2496" pos:column="47">ppFrame</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2497" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCORDBFrame(This,ppFrame) )</cpp:value></cpp:define> 

<cpp:define pos:line="2499" pos:column="1">#<cpp:directive pos:line="2499" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2499" pos:column="9">IDebugBinderDirect_GetCORDBModule</name><parameter_list pos:line="2499" pos:column="42">(<param><type><name pos:line="2499" pos:column="43">This</name></type></param>,<param><type><name pos:line="2499" pos:column="48">guid</name></type></param>,<param><type><name pos:line="2499" pos:column="53">appDomainID</name></type></param>,<param><type><name pos:line="2499" pos:column="65">ppModule</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2500" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCORDBModule(This,guid,appDomainID,ppModule) )</cpp:value></cpp:define> 

<cpp:define pos:line="2502" pos:column="1">#<cpp:directive pos:line="2502" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2502" pos:column="9">IDebugBinderDirect_GetDebugProperty</name><parameter_list pos:line="2502" pos:column="44">(<param><type><name pos:line="2502" pos:column="45">This</name></type></param>,<param><type><name pos:line="2502" pos:column="50">ppProperty</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2503" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDebugProperty(This,ppProperty) )</cpp:value></cpp:define> 

<cpp:define pos:line="2505" pos:column="1">#<cpp:directive pos:line="2505" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2505" pos:column="9">IDebugBinderDirect_GetMemoryContext</name><parameter_list pos:line="2505" pos:column="44">(<param><type><name pos:line="2505" pos:column="45">This</name></type></param>,<param><type><name pos:line="2505" pos:column="50">pda</name></type></param>,<param><type><name pos:line="2505" pos:column="54">dwConstant</name></type></param>,<param><type><name pos:line="2505" pos:column="65">ppMemCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2506" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,pda,dwConstant,ppMemCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="2508" pos:column="1">#<cpp:directive pos:line="2508" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2508" pos:column="9">IDebugBinderDirect_GetAlias</name><parameter_list pos:line="2508" pos:column="36">(<param><type><name pos:line="2508" pos:column="37">This</name></type></param>,<param><type><name pos:line="2508" pos:column="42">pCorValue</name></type></param>,<param><type><name pos:line="2508" pos:column="52">ppAlias</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2509" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAlias(This,pCorValue,ppAlias) )</cpp:value></cpp:define> 

<cpp:define pos:line="2511" pos:column="1">#<cpp:directive pos:line="2511" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2511" pos:column="9">IDebugBinderDirect_IsUserData</name><parameter_list pos:line="2511" pos:column="38">(<param><type><name pos:line="2511" pos:column="39">This</name></type></param>,<param><type><name pos:line="2511" pos:column="44">pda</name></type></param>,<param><type><name pos:line="2511" pos:column="48">pfUser</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2512" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsUserData(This,pda,pfUser) )</cpp:value></cpp:define> 

<cpp:define pos:line="2514" pos:column="1">#<cpp:directive pos:line="2514" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2514" pos:column="9">IDebugBinderDirect_CanDoFuncEval</name><parameter_list pos:line="2514" pos:column="41">(<param><type><name pos:line="2514" pos:column="42">This</name></type></param>,<param><type><name pos:line="2514" pos:column="47">pda</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2515" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanDoFuncEval(This,pda) )</cpp:value></cpp:define> 

<cpp:define pos:line="2517" pos:column="1">#<cpp:directive pos:line="2517" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2517" pos:column="9">IDebugBinderDirect_ContinueForFuncEval</name><parameter_list pos:line="2517" pos:column="47">(<param><type><name pos:line="2517" pos:column="48">This</name></type></param>,<param><type><name pos:line="2517" pos:column="53">pCorEval</name></type></param>,<param><type><name pos:line="2517" pos:column="62">dwEvalFlags</name></type></param>,<param><type><name pos:line="2517" pos:column="74">dwTimeout</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2518" pos:column="5">( (This)-&gt;lpVtbl -&gt; ContinueForFuncEval(This,pCorEval,dwEvalFlags,dwTimeout) )</cpp:value></cpp:define> 

<cpp:define pos:line="2520" pos:column="1">#<cpp:directive pos:line="2520" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2520" pos:column="9">IDebugBinderDirect_CreateIDebugObject</name><parameter_list pos:line="2520" pos:column="46">(<param><type><name pos:line="2520" pos:column="47">This</name></type></param>,<param><type><name pos:line="2520" pos:column="52">pCorDebugValue</name></type></param>,<param><type><name pos:line="2520" pos:column="67">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2521" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateIDebugObject(This,pCorDebugValue,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2523" pos:column="1">#<cpp:directive pos:line="2523" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2523" pos:column="9">IDebugBinderDirect_IsInSQLCLRMode</name><parameter_list pos:line="2523" pos:column="42">(<param><type><name pos:line="2523" pos:column="43">This</name></type></param>,<param><type><name pos:line="2523" pos:column="48">pfSQLCLRMode</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2524" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsInSQLCLRMode(This,pfSQLCLRMode) )</cpp:value></cpp:define> 

<cpp:define pos:line="2526" pos:column="1">#<cpp:directive pos:line="2526" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2526" pos:column="9">IDebugBinderDirect_IsInEmbeddedClrMode</name><parameter_list pos:line="2526" pos:column="47">(<param><type><name pos:line="2526" pos:column="48">This</name></type></param>,<param><type><name pos:line="2526" pos:column="53">pfEmbeddedClrMode</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2527" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsInEmbeddedClrMode(This,pfEmbeddedClrMode) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2529" pos:column="1">#<cpp:directive pos:line="2529" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2529" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2532" pos:column="1">#<cpp:directive pos:line="2532" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2532" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2537" pos:column="1">#<cpp:directive pos:line="2537" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2537" pos:column="9">/* __IDebugBinderDirect_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2540" pos:column="1">#<cpp:directive pos:line="2540" pos:column="2">ifndef</cpp:directive> <name pos:line="2540" pos:column="9">__IDebugBinder2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2541" pos:column="1">#<cpp:directive pos:line="2541" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2541" pos:column="9">__IDebugBinder2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2543" pos:column="1">/* interface IDebugBinder2 */</comment>
<comment type="block" pos:line="2544" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2547" pos:column="1">EXTERN_C</name> <specifier pos:line="2547" pos:column="10">const</specifier> <name pos:line="2547" pos:column="16">IID</name></type> <name pos:line="2547" pos:column="20">IID_IDebugBinder2</name></decl>;</decl_stmt>

<cpp:if pos:line="2549" pos:column="1">#<cpp:directive pos:line="2549" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2549" pos:column="5">defined</name><argument_list pos:line="2549" pos:column="12">(<argument><expr><name pos:line="2549" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2549" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2549" pos:column="29">!</op:operator><call><name pos:line="2549" pos:column="30">defined</name><argument_list pos:line="2549" pos:column="37">(<argument><expr><name pos:line="2549" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2551" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2551" pos:column="19">(<argument pos:line="2551" pos:column="20">"DCF3C6EE-7C7D-4e1f-AEEB-646902AF0723"</argument>)</argument_list></macro>
    <label><name pos:line="2552" pos:column="5">IDebugBinder2</name> :</label> <expr_stmt><expr pos:line="2552" pos:column="21">public <name pos:line="2552" pos:column="28">IUnknown</name>
    <block pos:line="2553" pos:column="5">{
    <expr pos:line="2554" pos:column="5">public<op:operator pos:line="2554" pos:column="11">:</op:operator>
        virtual <name pos:line="2555" pos:column="17">HRESULT</name> <name pos:line="2555" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2555" pos:column="43">GetMemoryObject</name><argument_list pos:line="2555" pos:column="58">( 
            <comment type="block" pos:line="2556" pos:column="13">/* [in] */</comment> <argument pos:line="2556" pos:column="24">__RPC__in_opt IDebugField *pField</argument>,
            <comment type="block" pos:line="2557" pos:column="13">/* [in] */</comment> <argument pos:line="2557" pos:column="24">DWORD dwConstant</argument>,
            <comment type="block" pos:line="2558" pos:column="13">/* [out] */</comment> <argument pos:line="2558" pos:column="25">__RPC__deref_out_opt IDebugObject **ppObject</argument>)</argument_list></macro> <op:operator pos:line="2558" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2558" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="2560" pos:column="9">virtual <name pos:line="2560" pos:column="17">HRESULT</name> <name pos:line="2560" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2560" pos:column="43">GetExceptionObjectAndType</name><argument_list pos:line="2560" pos:column="68">( 
            <comment type="block" pos:line="2561" pos:column="13">/* [out] */</comment> <argument pos:line="2561" pos:column="25">__RPC__deref_out_opt IDebugObject **ppException</argument>,
            <comment type="block" pos:line="2562" pos:column="13">/* [out] */</comment> <argument pos:line="2562" pos:column="25">__RPC__deref_out_opt IDebugField **ppField</argument>)</argument_list></macro> <op:operator pos:line="2562" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="2562" pos:column="71">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2566" pos:column="1">#<cpp:directive pos:line="2566" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2566" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2568" pos:column="5">typedef <type><struct pos:line="2568" pos:column="13">struct <name pos:line="2568" pos:column="20">IDebugBinder2Vtbl</name>
    <block pos:line="2569" pos:column="5">{<public type="default" pos:line="2569" pos:column="6">
        <function_decl><type><name pos:line="2570" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2572" pos:column="9">HRESULT</name></type> ( <name pos:line="2572" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2572" pos:column="37">*</type:modifier><name pos:line="2572" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2572" pos:column="54">( 
            <param><decl><type><name pos:line="2573" pos:column="13">IDebugBinder2</name> <type:modifier pos:line="2573" pos:column="27">*</type:modifier></type> <name pos:line="2573" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2574" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2574" pos:column="24">__RPC__in</name> <name pos:line="2574" pos:column="34">REFIID</name></type> <name pos:line="2574" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2575" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2576" pos:column="13">__RPC__deref_out</name>  <name pos:line="2576" pos:column="31">void</name> <type:modifier pos:line="2576" pos:column="36">*</type:modifier><type:modifier pos:line="2576" pos:column="37">*</type:modifier></type><name pos:line="2576" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2578" pos:column="9">ULONG</name></type> ( <name pos:line="2578" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2578" pos:column="35">*</type:modifier><name pos:line="2578" pos:column="36">AddRef</name> )<parameter_list pos:line="2578" pos:column="44">( 
            <param><decl><type><name pos:line="2579" pos:column="13">IDebugBinder2</name> <type:modifier pos:line="2579" pos:column="27">*</type:modifier></type> <name pos:line="2579" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2581" pos:column="9">ULONG</name></type> ( <name pos:line="2581" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2581" pos:column="35">*</type:modifier><name pos:line="2581" pos:column="36">Release</name> )<parameter_list pos:line="2581" pos:column="45">( 
            <param><decl><type><name pos:line="2582" pos:column="13">IDebugBinder2</name> <type:modifier pos:line="2582" pos:column="27">*</type:modifier></type> <name pos:line="2582" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2584" pos:column="9">HRESULT</name></type> ( <name pos:line="2584" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2584" pos:column="37">*</type:modifier><name pos:line="2584" pos:column="38">GetMemoryObject</name> )<parameter_list pos:line="2584" pos:column="55">( 
            <param><decl><type><name pos:line="2585" pos:column="13">IDebugBinder2</name> <type:modifier pos:line="2585" pos:column="27">*</type:modifier></type> <name pos:line="2585" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2586" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2586" pos:column="24">__RPC__in_opt</name> <name pos:line="2586" pos:column="38">IDebugField</name> <type:modifier pos:line="2586" pos:column="50">*</type:modifier></type><name pos:line="2586" pos:column="51">pField</name></decl></param>,
            <comment type="block" pos:line="2587" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2587" pos:column="24">DWORD</name></type> <name pos:line="2587" pos:column="30">dwConstant</name></decl></param>,
            <comment type="block" pos:line="2588" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2588" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2588" pos:column="46">IDebugObject</name> <type:modifier pos:line="2588" pos:column="59">*</type:modifier><type:modifier pos:line="2588" pos:column="60">*</type:modifier></type><name pos:line="2588" pos:column="61">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2590" pos:column="9">HRESULT</name></type> ( <name pos:line="2590" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2590" pos:column="37">*</type:modifier><name pos:line="2590" pos:column="38">GetExceptionObjectAndType</name> )<parameter_list pos:line="2590" pos:column="65">( 
            <param><decl><type><name pos:line="2591" pos:column="13">IDebugBinder2</name> <type:modifier pos:line="2591" pos:column="27">*</type:modifier></type> <name pos:line="2591" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2592" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2592" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2592" pos:column="46">IDebugObject</name> <type:modifier pos:line="2592" pos:column="59">*</type:modifier><type:modifier pos:line="2592" pos:column="60">*</type:modifier></type><name pos:line="2592" pos:column="61">ppException</name></decl></param>,
            <comment type="block" pos:line="2593" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2593" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2593" pos:column="46">IDebugField</name> <type:modifier pos:line="2593" pos:column="58">*</type:modifier><type:modifier pos:line="2593" pos:column="59">*</type:modifier></type><name pos:line="2593" pos:column="60">ppField</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2595" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2596" pos:column="7">IDebugBinder2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2598" pos:column="5">interface</name></type> <name pos:line="2598" pos:column="15">IDebugBinder2</name>
    <argument_list pos:line="2599" pos:column="5">{
        <argument><expr><name pos:line="2600" pos:column="9">CONST_VTBL</name> struct <name pos:line="2600" pos:column="27">IDebugBinder2Vtbl</name> <op:operator pos:line="2600" pos:column="45">*</op:operator><name pos:line="2600" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2605" pos:column="1">#<cpp:directive pos:line="2605" pos:column="2">ifdef</cpp:directive> <name pos:line="2605" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2608" pos:column="1">#<cpp:directive pos:line="2608" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2608" pos:column="9">IDebugBinder2_QueryInterface</name><parameter_list pos:line="2608" pos:column="37">(<param><type><name pos:line="2608" pos:column="38">This</name></type></param>,<param><type><name pos:line="2608" pos:column="43">riid</name></type></param>,<param><type><name pos:line="2608" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2609" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2611" pos:column="1">#<cpp:directive pos:line="2611" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2611" pos:column="9">IDebugBinder2_AddRef</name><parameter_list pos:line="2611" pos:column="29">(<param><type><name pos:line="2611" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2612" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2614" pos:column="1">#<cpp:directive pos:line="2614" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2614" pos:column="9">IDebugBinder2_Release</name><parameter_list pos:line="2614" pos:column="30">(<param><type><name pos:line="2614" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2615" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2618" pos:column="1">#<cpp:directive pos:line="2618" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2618" pos:column="9">IDebugBinder2_GetMemoryObject</name><parameter_list pos:line="2618" pos:column="38">(<param><type><name pos:line="2618" pos:column="39">This</name></type></param>,<param><type><name pos:line="2618" pos:column="44">pField</name></type></param>,<param><type><name pos:line="2618" pos:column="51">dwConstant</name></type></param>,<param><type><name pos:line="2618" pos:column="62">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2619" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryObject(This,pField,dwConstant,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2621" pos:column="1">#<cpp:directive pos:line="2621" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2621" pos:column="9">IDebugBinder2_GetExceptionObjectAndType</name><parameter_list pos:line="2621" pos:column="48">(<param><type><name pos:line="2621" pos:column="49">This</name></type></param>,<param><type><name pos:line="2621" pos:column="54">ppException</name></type></param>,<param><type><name pos:line="2621" pos:column="66">ppField</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2622" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExceptionObjectAndType(This,ppException,ppField) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2624" pos:column="1">#<cpp:directive pos:line="2624" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2624" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2627" pos:column="1">#<cpp:directive pos:line="2627" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2627" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2632" pos:column="1">#<cpp:directive pos:line="2632" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2632" pos:column="9">/* __IDebugBinder2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2635" pos:column="1">#<cpp:directive pos:line="2635" pos:column="2">ifndef</cpp:directive> <name pos:line="2635" pos:column="9">__IDebugBinder3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2636" pos:column="1">#<cpp:directive pos:line="2636" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2636" pos:column="9">__IDebugBinder3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2638" pos:column="1">/* interface IDebugBinder3 */</comment>
<comment type="block" pos:line="2639" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2642" pos:column="1">EXTERN_C</name> <specifier pos:line="2642" pos:column="10">const</specifier> <name pos:line="2642" pos:column="16">IID</name></type> <name pos:line="2642" pos:column="20">IID_IDebugBinder3</name></decl>;</decl_stmt>

<cpp:if pos:line="2644" pos:column="1">#<cpp:directive pos:line="2644" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2644" pos:column="5">defined</name><argument_list pos:line="2644" pos:column="12">(<argument><expr><name pos:line="2644" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2644" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2644" pos:column="29">!</op:operator><call><name pos:line="2644" pos:column="30">defined</name><argument_list pos:line="2644" pos:column="37">(<argument><expr><name pos:line="2644" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2646" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2646" pos:column="19">(<argument pos:line="2646" pos:column="20">"BBCD7263-B415-40f6-942A-4A9A8599B708"</argument>)</argument_list></macro>
    <label><name pos:line="2647" pos:column="5">IDebugBinder3</name> :</label> <expr_stmt><expr pos:line="2647" pos:column="21">public <name pos:line="2647" pos:column="28">IDebugBinder</name>
    <block pos:line="2648" pos:column="5">{
    <expr pos:line="2649" pos:column="5">public<op:operator pos:line="2649" pos:column="11">:</op:operator>
        virtual <name pos:line="2650" pos:column="17">HRESULT</name> <name pos:line="2650" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2650" pos:column="43">GetMemoryObject</name><argument_list pos:line="2650" pos:column="58">( 
            <comment type="block" pos:line="2651" pos:column="13">/* [in] */</comment> <argument pos:line="2651" pos:column="24">__RPC__in_opt IDebugField *pField</argument>,
            <comment type="block" pos:line="2652" pos:column="13">/* [in] */</comment> <argument pos:line="2652" pos:column="24">UINT64 uConstant</argument>,
            <comment type="block" pos:line="2653" pos:column="13">/* [out] */</comment> <argument pos:line="2653" pos:column="25">__RPC__deref_out_opt IDebugObject **ppObject</argument>)</argument_list></macro> <op:operator pos:line="2653" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2653" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="2655" pos:column="9">virtual <name pos:line="2655" pos:column="17">HRESULT</name> <name pos:line="2655" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2655" pos:column="43">GetExceptionObjectAndType</name><argument_list pos:line="2655" pos:column="68">( 
            <comment type="block" pos:line="2656" pos:column="13">/* [out] */</comment> <argument pos:line="2656" pos:column="25">__RPC__deref_out_opt IDebugObject **ppException</argument>,
            <comment type="block" pos:line="2657" pos:column="13">/* [out] */</comment> <argument pos:line="2657" pos:column="25">__RPC__deref_out_opt IDebugField **ppField</argument>)</argument_list></macro> <op:operator pos:line="2657" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="2657" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="2659" pos:column="9">virtual <name pos:line="2659" pos:column="17">HRESULT</name> <name pos:line="2659" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2659" pos:column="43">FindAlias</name><argument_list pos:line="2659" pos:column="52">( 
            <comment type="block" pos:line="2660" pos:column="13">/* [in] */</comment> <argument pos:line="2660" pos:column="24">__RPC__in LPCOLESTR pcstrName</argument>,
            <comment type="block" pos:line="2661" pos:column="13">/* [out] */</comment> <argument pos:line="2661" pos:column="25">__RPC__deref_out_opt IDebugAlias **ppAlias</argument>)</argument_list></macro> <op:operator pos:line="2661" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="2661" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="2663" pos:column="9">virtual <name pos:line="2663" pos:column="17">HRESULT</name> <name pos:line="2663" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2663" pos:column="43">GetAllAliases</name><argument_list pos:line="2663" pos:column="56">( 
            <comment type="block" pos:line="2664" pos:column="13">/* [in] */</comment> <argument pos:line="2664" pos:column="24">UINT uRequest</argument>,
            <comment type="block" pos:line="2665" pos:column="13">/* [length_is][size_is][full][out][in] */</comment> <argument pos:line="2665" pos:column="55">__RPC__inout_ecount_part_opt(uRequest, *puFetched) IDebugAlias **ppAliases</argument>,
            <comment type="block" pos:line="2666" pos:column="13">/* [out] */</comment> <argument pos:line="2666" pos:column="25">__RPC__out UINT *puFetched</argument>)</argument_list></macro> <op:operator pos:line="2666" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="2666" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="2668" pos:column="9">virtual <name pos:line="2668" pos:column="17">HRESULT</name> <name pos:line="2668" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2668" pos:column="43">GetTypeArgumentCount</name><argument_list pos:line="2668" pos:column="63">( 
            <comment type="block" pos:line="2669" pos:column="13">/* [out] */</comment> <argument pos:line="2669" pos:column="25">__RPC__out UINT *uCount</argument>)</argument_list></macro> <op:operator pos:line="2669" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="2669" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="2671" pos:column="9">virtual <name pos:line="2671" pos:column="17">HRESULT</name> <name pos:line="2671" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2671" pos:column="43">GetTypeArguments</name><argument_list pos:line="2671" pos:column="59">( 
            <comment type="block" pos:line="2672" pos:column="13">/* [in] */</comment> <argument pos:line="2672" pos:column="24">UINT skip</argument>,
            <comment type="block" pos:line="2673" pos:column="13">/* [in] */</comment> <argument pos:line="2673" pos:column="24">UINT count</argument>,
            <comment type="block" pos:line="2674" pos:column="13">/* [length_is][size_is][full][out][in] */</comment> <argument pos:line="2674" pos:column="55">__RPC__inout_ecount_part_opt(count, *pFetched) IDebugField **ppFields</argument>,
            <comment type="block" pos:line="2675" pos:column="13">/* [out] */</comment> <argument pos:line="2675" pos:column="25">__RPC__out UINT *pFetched</argument>)</argument_list></macro> <op:operator pos:line="2675" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="2675" pos:column="54">0</lit:literal></expr>;
        
        <expr pos:line="2677" pos:column="9">virtual <name pos:line="2677" pos:column="17">HRESULT</name> <name pos:line="2677" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2677" pos:column="43">GetEEService</name><argument_list pos:line="2677" pos:column="55">( 
            <comment type="block" pos:line="2678" pos:column="13">/* [in] */</comment> <argument pos:line="2678" pos:column="24">GUID vendor</argument>,
            <comment type="block" pos:line="2679" pos:column="13">/* [in] */</comment> <argument pos:line="2679" pos:column="24">GUID language</argument>,
            <comment type="block" pos:line="2680" pos:column="13">/* [in] */</comment> <argument pos:line="2680" pos:column="24">GUID iid</argument>,
            <comment type="block" pos:line="2681" pos:column="13">/* [out] */</comment> <argument pos:line="2681" pos:column="25">__RPC__deref_out_opt IUnknown **ppService</argument>)</argument_list></macro> <op:operator pos:line="2681" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="2681" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="2683" pos:column="9">virtual <name pos:line="2683" pos:column="17">HRESULT</name> <name pos:line="2683" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2683" pos:column="43">GetMemoryContext64</name><argument_list pos:line="2683" pos:column="61">( 
            <comment type="block" pos:line="2684" pos:column="13">/* [in] */</comment> <argument pos:line="2684" pos:column="24">__RPC__in_opt IDebugField *pField</argument>,
            <comment type="block" pos:line="2685" pos:column="13">/* [in] */</comment> <argument pos:line="2685" pos:column="24">UINT64 uConstant</argument>,
            <comment type="block" pos:line="2686" pos:column="13">/* [out] */</comment> <argument pos:line="2686" pos:column="25">__RPC__deref_out_opt IDebugMemoryContext2 **ppMemCxt</argument>)</argument_list></macro> <op:operator pos:line="2686" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="2686" pos:column="81">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2690" pos:column="1">#<cpp:directive pos:line="2690" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2690" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2692" pos:column="5">typedef <type><struct pos:line="2692" pos:column="13">struct <name pos:line="2692" pos:column="20">IDebugBinder3Vtbl</name>
    <block pos:line="2693" pos:column="5">{<public type="default" pos:line="2693" pos:column="6">
        <function_decl><type><name pos:line="2694" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2696" pos:column="9">HRESULT</name></type> ( <name pos:line="2696" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2696" pos:column="37">*</type:modifier><name pos:line="2696" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2696" pos:column="54">( 
            <param><decl><type><name pos:line="2697" pos:column="13">IDebugBinder3</name> <type:modifier pos:line="2697" pos:column="27">*</type:modifier></type> <name pos:line="2697" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2698" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2698" pos:column="24">__RPC__in</name> <name pos:line="2698" pos:column="34">REFIID</name></type> <name pos:line="2698" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2699" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2700" pos:column="13">__RPC__deref_out</name>  <name pos:line="2700" pos:column="31">void</name> <type:modifier pos:line="2700" pos:column="36">*</type:modifier><type:modifier pos:line="2700" pos:column="37">*</type:modifier></type><name pos:line="2700" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2702" pos:column="9">ULONG</name></type> ( <name pos:line="2702" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2702" pos:column="35">*</type:modifier><name pos:line="2702" pos:column="36">AddRef</name> )<parameter_list pos:line="2702" pos:column="44">( 
            <param><decl><type><name pos:line="2703" pos:column="13">IDebugBinder3</name> <type:modifier pos:line="2703" pos:column="27">*</type:modifier></type> <name pos:line="2703" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2705" pos:column="9">ULONG</name></type> ( <name pos:line="2705" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2705" pos:column="35">*</type:modifier><name pos:line="2705" pos:column="36">Release</name> )<parameter_list pos:line="2705" pos:column="45">( 
            <param><decl><type><name pos:line="2706" pos:column="13">IDebugBinder3</name> <type:modifier pos:line="2706" pos:column="27">*</type:modifier></type> <name pos:line="2706" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2708" pos:column="9">HRESULT</name></type> ( <name pos:line="2708" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2708" pos:column="37">*</type:modifier><name pos:line="2708" pos:column="38">Bind</name> )<parameter_list pos:line="2708" pos:column="44">( 
            <param><decl><type><name pos:line="2709" pos:column="13">IDebugBinder3</name> <type:modifier pos:line="2709" pos:column="27">*</type:modifier></type> <name pos:line="2709" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2710" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2710" pos:column="24">__RPC__in_opt</name> <name pos:line="2710" pos:column="38">IDebugObject</name> <type:modifier pos:line="2710" pos:column="51">*</type:modifier></type><name pos:line="2710" pos:column="52">pContainer</name></decl></param>,
            <comment type="block" pos:line="2711" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2711" pos:column="24">__RPC__in_opt</name> <name pos:line="2711" pos:column="38">IDebugField</name> <type:modifier pos:line="2711" pos:column="50">*</type:modifier></type><name pos:line="2711" pos:column="51">pField</name></decl></param>,
            <comment type="block" pos:line="2712" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2712" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2712" pos:column="46">IDebugObject</name> <type:modifier pos:line="2712" pos:column="59">*</type:modifier><type:modifier pos:line="2712" pos:column="60">*</type:modifier></type><name pos:line="2712" pos:column="61">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2714" pos:column="9">HRESULT</name></type> ( <name pos:line="2714" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2714" pos:column="37">*</type:modifier><name pos:line="2714" pos:column="38">ResolveDynamicType</name> )<parameter_list pos:line="2714" pos:column="58">( 
            <param><decl><type><name pos:line="2715" pos:column="13">IDebugBinder3</name> <type:modifier pos:line="2715" pos:column="27">*</type:modifier></type> <name pos:line="2715" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2716" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2716" pos:column="24">__RPC__in_opt</name> <name pos:line="2716" pos:column="38">IDebugDynamicField</name> <type:modifier pos:line="2716" pos:column="57">*</type:modifier></type><name pos:line="2716" pos:column="58">pDynamic</name></decl></param>,
            <comment type="block" pos:line="2717" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2717" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2717" pos:column="46">IDebugField</name> <type:modifier pos:line="2717" pos:column="58">*</type:modifier><type:modifier pos:line="2717" pos:column="59">*</type:modifier></type><name pos:line="2717" pos:column="60">ppResolved</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2719" pos:column="9">HRESULT</name></type> ( <name pos:line="2719" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2719" pos:column="37">*</type:modifier><name pos:line="2719" pos:column="38">ResolveRuntimeType</name> )<parameter_list pos:line="2719" pos:column="58">( 
            <param><decl><type><name pos:line="2720" pos:column="13">IDebugBinder3</name> <type:modifier pos:line="2720" pos:column="27">*</type:modifier></type> <name pos:line="2720" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2721" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2721" pos:column="24">__RPC__in_opt</name> <name pos:line="2721" pos:column="38">IDebugObject</name> <type:modifier pos:line="2721" pos:column="51">*</type:modifier></type><name pos:line="2721" pos:column="52">pObject</name></decl></param>,
            <comment type="block" pos:line="2722" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2722" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2722" pos:column="46">IDebugField</name> <type:modifier pos:line="2722" pos:column="58">*</type:modifier><type:modifier pos:line="2722" pos:column="59">*</type:modifier></type><name pos:line="2722" pos:column="60">ppResolved</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2724" pos:column="9">HRESULT</name></type> ( <name pos:line="2724" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2724" pos:column="37">*</type:modifier><name pos:line="2724" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="2724" pos:column="56">( 
            <param><decl><type><name pos:line="2725" pos:column="13">IDebugBinder3</name> <type:modifier pos:line="2725" pos:column="27">*</type:modifier></type> <name pos:line="2725" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2726" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2726" pos:column="24">__RPC__in_opt</name> <name pos:line="2726" pos:column="38">IDebugField</name> <type:modifier pos:line="2726" pos:column="50">*</type:modifier></type><name pos:line="2726" pos:column="51">pField</name></decl></param>,
            <comment type="block" pos:line="2727" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2727" pos:column="24">DWORD</name></type> <name pos:line="2727" pos:column="30">dwConstant</name></decl></param>,
            <comment type="block" pos:line="2728" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2728" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2728" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="2728" pos:column="67">*</type:modifier><type:modifier pos:line="2728" pos:column="68">*</type:modifier></type><name pos:line="2728" pos:column="69">ppMemCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2730" pos:column="9">HRESULT</name></type> ( <name pos:line="2730" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2730" pos:column="37">*</type:modifier><name pos:line="2730" pos:column="38">GetFunctionObject</name> )<parameter_list pos:line="2730" pos:column="57">( 
            <param><decl><type><name pos:line="2731" pos:column="13">IDebugBinder3</name> <type:modifier pos:line="2731" pos:column="27">*</type:modifier></type> <name pos:line="2731" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2732" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2732" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2732" pos:column="46">IDebugFunctionObject</name> <type:modifier pos:line="2732" pos:column="67">*</type:modifier><type:modifier pos:line="2732" pos:column="68">*</type:modifier></type><name pos:line="2732" pos:column="69">ppFunction</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2734" pos:column="9">HRESULT</name></type> ( <name pos:line="2734" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2734" pos:column="37">*</type:modifier><name pos:line="2734" pos:column="38">GetMemoryObject</name> )<parameter_list pos:line="2734" pos:column="55">( 
            <param><decl><type><name pos:line="2735" pos:column="13">IDebugBinder3</name> <type:modifier pos:line="2735" pos:column="27">*</type:modifier></type> <name pos:line="2735" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2736" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2736" pos:column="24">__RPC__in_opt</name> <name pos:line="2736" pos:column="38">IDebugField</name> <type:modifier pos:line="2736" pos:column="50">*</type:modifier></type><name pos:line="2736" pos:column="51">pField</name></decl></param>,
            <comment type="block" pos:line="2737" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2737" pos:column="24">UINT64</name></type> <name pos:line="2737" pos:column="31">uConstant</name></decl></param>,
            <comment type="block" pos:line="2738" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2738" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2738" pos:column="46">IDebugObject</name> <type:modifier pos:line="2738" pos:column="59">*</type:modifier><type:modifier pos:line="2738" pos:column="60">*</type:modifier></type><name pos:line="2738" pos:column="61">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2740" pos:column="9">HRESULT</name></type> ( <name pos:line="2740" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2740" pos:column="37">*</type:modifier><name pos:line="2740" pos:column="38">GetExceptionObjectAndType</name> )<parameter_list pos:line="2740" pos:column="65">( 
            <param><decl><type><name pos:line="2741" pos:column="13">IDebugBinder3</name> <type:modifier pos:line="2741" pos:column="27">*</type:modifier></type> <name pos:line="2741" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2742" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2742" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2742" pos:column="46">IDebugObject</name> <type:modifier pos:line="2742" pos:column="59">*</type:modifier><type:modifier pos:line="2742" pos:column="60">*</type:modifier></type><name pos:line="2742" pos:column="61">ppException</name></decl></param>,
            <comment type="block" pos:line="2743" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2743" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2743" pos:column="46">IDebugField</name> <type:modifier pos:line="2743" pos:column="58">*</type:modifier><type:modifier pos:line="2743" pos:column="59">*</type:modifier></type><name pos:line="2743" pos:column="60">ppField</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2745" pos:column="9">HRESULT</name></type> ( <name pos:line="2745" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2745" pos:column="37">*</type:modifier><name pos:line="2745" pos:column="38">FindAlias</name> )<parameter_list pos:line="2745" pos:column="49">( 
            <param><decl><type><name pos:line="2746" pos:column="13">IDebugBinder3</name> <type:modifier pos:line="2746" pos:column="27">*</type:modifier></type> <name pos:line="2746" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2747" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2747" pos:column="24">__RPC__in</name> <name pos:line="2747" pos:column="34">LPCOLESTR</name></type> <name pos:line="2747" pos:column="44">pcstrName</name></decl></param>,
            <comment type="block" pos:line="2748" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2748" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2748" pos:column="46">IDebugAlias</name> <type:modifier pos:line="2748" pos:column="58">*</type:modifier><type:modifier pos:line="2748" pos:column="59">*</type:modifier></type><name pos:line="2748" pos:column="60">ppAlias</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2750" pos:column="9">HRESULT</name> <argument_list pos:line="2750" pos:column="17">( <argument pos:line="2750" pos:column="19">STDMETHODCALLTYPE *GetAllAliases</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2750" pos:column="53">(</op:operator> 
            <name pos:line="2751" pos:column="13">IDebugBinder3</name> <op:operator pos:line="2751" pos:column="27">*</op:operator> <name pos:line="2751" pos:column="29">This</name><op:operator pos:line="2751" pos:column="33">,</op:operator>
            <comment type="block" pos:line="2752" pos:column="13">/* [in] */</comment> <name pos:line="2752" pos:column="24">UINT</name> <name pos:line="2752" pos:column="29">uRequest</name><op:operator pos:line="2752" pos:column="37">,</op:operator>
            <comment type="block" pos:line="2753" pos:column="13">/* [length_is][size_is][full][out][in] */</comment> <macro><name pos:line="2753" pos:column="55">__RPC__inout_ecount_part_opt</name><argument_list pos:line="2753" pos:column="83">(<argument pos:line="2753" pos:column="84">uRequest</argument>, <argument pos:line="2753" pos:column="94">*puFetched</argument>)</argument_list></macro> <name pos:line="2753" pos:column="106">IDebugAlias</name> <op:operator pos:line="2753" pos:column="118">*</op:operator><op:operator pos:line="2753" pos:column="119">*</op:operator><name pos:line="2753" pos:column="120">ppAliases</name><op:operator pos:line="2753" pos:column="129">,</op:operator>
            <comment type="block" pos:line="2754" pos:column="13">/* [out] */</comment> <name pos:line="2754" pos:column="25">__RPC__out</name> <name pos:line="2754" pos:column="36">UINT</name> <op:operator pos:line="2754" pos:column="41">*</op:operator><name pos:line="2754" pos:column="42">puFetched</name><op:operator pos:line="2754" pos:column="51">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="2756" pos:column="9">HRESULT</name></type> ( <name pos:line="2756" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2756" pos:column="37">*</type:modifier><name pos:line="2756" pos:column="38">GetTypeArgumentCount</name> )<parameter_list pos:line="2756" pos:column="60">( 
            <param><decl><type><name pos:line="2757" pos:column="13">IDebugBinder3</name> <type:modifier pos:line="2757" pos:column="27">*</type:modifier></type> <name pos:line="2757" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2758" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2758" pos:column="25">__RPC__out</name> <name pos:line="2758" pos:column="36">UINT</name> <type:modifier pos:line="2758" pos:column="41">*</type:modifier></type><name pos:line="2758" pos:column="42">uCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2760" pos:column="9">HRESULT</name> <argument_list pos:line="2760" pos:column="17">( <argument pos:line="2760" pos:column="19">STDMETHODCALLTYPE *GetTypeArguments</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2760" pos:column="56">(</op:operator> 
            <name pos:line="2761" pos:column="13">IDebugBinder3</name> <op:operator pos:line="2761" pos:column="27">*</op:operator> <name pos:line="2761" pos:column="29">This</name><op:operator pos:line="2761" pos:column="33">,</op:operator>
            <comment type="block" pos:line="2762" pos:column="13">/* [in] */</comment> <name pos:line="2762" pos:column="24">UINT</name> <name pos:line="2762" pos:column="29">skip</name><op:operator pos:line="2762" pos:column="33">,</op:operator>
            <comment type="block" pos:line="2763" pos:column="13">/* [in] */</comment> <name pos:line="2763" pos:column="24">UINT</name> <name pos:line="2763" pos:column="29">count</name><op:operator pos:line="2763" pos:column="34">,</op:operator>
            <comment type="block" pos:line="2764" pos:column="13">/* [length_is][size_is][full][out][in] */</comment> <macro><name pos:line="2764" pos:column="55">__RPC__inout_ecount_part_opt</name><argument_list pos:line="2764" pos:column="83">(<argument pos:line="2764" pos:column="84">count</argument>, <argument pos:line="2764" pos:column="91">*pFetched</argument>)</argument_list></macro> <name pos:line="2764" pos:column="102">IDebugField</name> <op:operator pos:line="2764" pos:column="114">*</op:operator><op:operator pos:line="2764" pos:column="115">*</op:operator><name pos:line="2764" pos:column="116">ppFields</name><op:operator pos:line="2764" pos:column="124">,</op:operator>
            <comment type="block" pos:line="2765" pos:column="13">/* [out] */</comment> <name pos:line="2765" pos:column="25">__RPC__out</name> <name pos:line="2765" pos:column="36">UINT</name> <op:operator pos:line="2765" pos:column="41">*</op:operator><name pos:line="2765" pos:column="42">pFetched</name><op:operator pos:line="2765" pos:column="50">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="2767" pos:column="9">HRESULT</name></type> ( <name pos:line="2767" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2767" pos:column="37">*</type:modifier><name pos:line="2767" pos:column="38">GetEEService</name> )<parameter_list pos:line="2767" pos:column="52">( 
            <param><decl><type><name pos:line="2768" pos:column="13">IDebugBinder3</name> <type:modifier pos:line="2768" pos:column="27">*</type:modifier></type> <name pos:line="2768" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2769" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2769" pos:column="24">GUID</name></type> <name pos:line="2769" pos:column="29">vendor</name></decl></param>,
            <comment type="block" pos:line="2770" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2770" pos:column="24">GUID</name></type> <name pos:line="2770" pos:column="29">language</name></decl></param>,
            <comment type="block" pos:line="2771" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2771" pos:column="24">GUID</name></type> <name pos:line="2771" pos:column="29">iid</name></decl></param>,
            <comment type="block" pos:line="2772" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2772" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2772" pos:column="46">IUnknown</name> <type:modifier pos:line="2772" pos:column="55">*</type:modifier><type:modifier pos:line="2772" pos:column="56">*</type:modifier></type><name pos:line="2772" pos:column="57">ppService</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2774" pos:column="9">HRESULT</name></type> ( <name pos:line="2774" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2774" pos:column="37">*</type:modifier><name pos:line="2774" pos:column="38">GetMemoryContext64</name> )<parameter_list pos:line="2774" pos:column="58">( 
            <param><decl><type><name pos:line="2775" pos:column="13">IDebugBinder3</name> <type:modifier pos:line="2775" pos:column="27">*</type:modifier></type> <name pos:line="2775" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="2776" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2776" pos:column="24">__RPC__in_opt</name> <name pos:line="2776" pos:column="38">IDebugField</name> <type:modifier pos:line="2776" pos:column="50">*</type:modifier></type><name pos:line="2776" pos:column="51">pField</name></decl></param>,
            <comment type="block" pos:line="2777" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2777" pos:column="24">UINT64</name></type> <name pos:line="2777" pos:column="31">uConstant</name></decl></param>,
            <comment type="block" pos:line="2778" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2778" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2778" pos:column="46">IDebugMemoryContext2</name> <type:modifier pos:line="2778" pos:column="67">*</type:modifier><type:modifier pos:line="2778" pos:column="68">*</type:modifier></type><name pos:line="2778" pos:column="69">ppMemCxt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2780" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2781" pos:column="7">IDebugBinder3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2783" pos:column="5">interface</name></type> <name pos:line="2783" pos:column="15">IDebugBinder3</name>
    <argument_list pos:line="2784" pos:column="5">{
        <argument><expr><name pos:line="2785" pos:column="9">CONST_VTBL</name> struct <name pos:line="2785" pos:column="27">IDebugBinder3Vtbl</name> <op:operator pos:line="2785" pos:column="45">*</op:operator><name pos:line="2785" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2790" pos:column="1">#<cpp:directive pos:line="2790" pos:column="2">ifdef</cpp:directive> <name pos:line="2790" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2793" pos:column="1">#<cpp:directive pos:line="2793" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2793" pos:column="9">IDebugBinder3_QueryInterface</name><parameter_list pos:line="2793" pos:column="37">(<param><type><name pos:line="2793" pos:column="38">This</name></type></param>,<param><type><name pos:line="2793" pos:column="43">riid</name></type></param>,<param><type><name pos:line="2793" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2794" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2796" pos:column="1">#<cpp:directive pos:line="2796" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2796" pos:column="9">IDebugBinder3_AddRef</name><parameter_list pos:line="2796" pos:column="29">(<param><type><name pos:line="2796" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2797" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2799" pos:column="1">#<cpp:directive pos:line="2799" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2799" pos:column="9">IDebugBinder3_Release</name><parameter_list pos:line="2799" pos:column="30">(<param><type><name pos:line="2799" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2800" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2803" pos:column="1">#<cpp:directive pos:line="2803" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2803" pos:column="9">IDebugBinder3_Bind</name><parameter_list pos:line="2803" pos:column="27">(<param><type><name pos:line="2803" pos:column="28">This</name></type></param>,<param><type><name pos:line="2803" pos:column="33">pContainer</name></type></param>,<param><type><name pos:line="2803" pos:column="44">pField</name></type></param>,<param><type><name pos:line="2803" pos:column="51">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2804" pos:column="5">( (This)-&gt;lpVtbl -&gt; Bind(This,pContainer,pField,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2806" pos:column="1">#<cpp:directive pos:line="2806" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2806" pos:column="9">IDebugBinder3_ResolveDynamicType</name><parameter_list pos:line="2806" pos:column="41">(<param><type><name pos:line="2806" pos:column="42">This</name></type></param>,<param><type><name pos:line="2806" pos:column="47">pDynamic</name></type></param>,<param><type><name pos:line="2806" pos:column="56">ppResolved</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2807" pos:column="5">( (This)-&gt;lpVtbl -&gt; ResolveDynamicType(This,pDynamic,ppResolved) )</cpp:value></cpp:define> 

<cpp:define pos:line="2809" pos:column="1">#<cpp:directive pos:line="2809" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2809" pos:column="9">IDebugBinder3_ResolveRuntimeType</name><parameter_list pos:line="2809" pos:column="41">(<param><type><name pos:line="2809" pos:column="42">This</name></type></param>,<param><type><name pos:line="2809" pos:column="47">pObject</name></type></param>,<param><type><name pos:line="2809" pos:column="55">ppResolved</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2810" pos:column="5">( (This)-&gt;lpVtbl -&gt; ResolveRuntimeType(This,pObject,ppResolved) )</cpp:value></cpp:define> 

<cpp:define pos:line="2812" pos:column="1">#<cpp:directive pos:line="2812" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2812" pos:column="9">IDebugBinder3_GetMemoryContext</name><parameter_list pos:line="2812" pos:column="39">(<param><type><name pos:line="2812" pos:column="40">This</name></type></param>,<param><type><name pos:line="2812" pos:column="45">pField</name></type></param>,<param><type><name pos:line="2812" pos:column="52">dwConstant</name></type></param>,<param><type><name pos:line="2812" pos:column="63">ppMemCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2813" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,pField,dwConstant,ppMemCxt) )</cpp:value></cpp:define> 

<cpp:define pos:line="2815" pos:column="1">#<cpp:directive pos:line="2815" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2815" pos:column="9">IDebugBinder3_GetFunctionObject</name><parameter_list pos:line="2815" pos:column="40">(<param><type><name pos:line="2815" pos:column="41">This</name></type></param>,<param><type><name pos:line="2815" pos:column="46">ppFunction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2816" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetFunctionObject(This,ppFunction) )</cpp:value></cpp:define> 


<cpp:define pos:line="2819" pos:column="1">#<cpp:directive pos:line="2819" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2819" pos:column="9">IDebugBinder3_GetMemoryObject</name><parameter_list pos:line="2819" pos:column="38">(<param><type><name pos:line="2819" pos:column="39">This</name></type></param>,<param><type><name pos:line="2819" pos:column="44">pField</name></type></param>,<param><type><name pos:line="2819" pos:column="51">uConstant</name></type></param>,<param><type><name pos:line="2819" pos:column="61">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2820" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryObject(This,pField,uConstant,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2822" pos:column="1">#<cpp:directive pos:line="2822" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2822" pos:column="9">IDebugBinder3_GetExceptionObjectAndType</name><parameter_list pos:line="2822" pos:column="48">(<param><type><name pos:line="2822" pos:column="49">This</name></type></param>,<param><type><name pos:line="2822" pos:column="54">ppException</name></type></param>,<param><type><name pos:line="2822" pos:column="66">ppField</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2823" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExceptionObjectAndType(This,ppException,ppField) )</cpp:value></cpp:define> 

<cpp:define pos:line="2825" pos:column="1">#<cpp:directive pos:line="2825" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2825" pos:column="9">IDebugBinder3_FindAlias</name><parameter_list pos:line="2825" pos:column="32">(<param><type><name pos:line="2825" pos:column="33">This</name></type></param>,<param><type><name pos:line="2825" pos:column="38">pcstrName</name></type></param>,<param><type><name pos:line="2825" pos:column="48">ppAlias</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2826" pos:column="5">( (This)-&gt;lpVtbl -&gt; FindAlias(This,pcstrName,ppAlias) )</cpp:value></cpp:define> 

<cpp:define pos:line="2828" pos:column="1">#<cpp:directive pos:line="2828" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2828" pos:column="9">IDebugBinder3_GetAllAliases</name><parameter_list pos:line="2828" pos:column="36">(<param><type><name pos:line="2828" pos:column="37">This</name></type></param>,<param><type><name pos:line="2828" pos:column="42">uRequest</name></type></param>,<param><type><name pos:line="2828" pos:column="51">ppAliases</name></type></param>,<param><type><name pos:line="2828" pos:column="61">puFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2829" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetAllAliases(This,uRequest,ppAliases,puFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="2831" pos:column="1">#<cpp:directive pos:line="2831" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2831" pos:column="9">IDebugBinder3_GetTypeArgumentCount</name><parameter_list pos:line="2831" pos:column="43">(<param><type><name pos:line="2831" pos:column="44">This</name></type></param>,<param><type><name pos:line="2831" pos:column="49">uCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2832" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeArgumentCount(This,uCount) )</cpp:value></cpp:define> 

<cpp:define pos:line="2834" pos:column="1">#<cpp:directive pos:line="2834" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2834" pos:column="9">IDebugBinder3_GetTypeArguments</name><parameter_list pos:line="2834" pos:column="39">(<param><type><name pos:line="2834" pos:column="40">This</name></type></param>,<param><type><name pos:line="2834" pos:column="45">skip</name></type></param>,<param><type><name pos:line="2834" pos:column="50">count</name></type></param>,<param><type><name pos:line="2834" pos:column="56">ppFields</name></type></param>,<param><type><name pos:line="2834" pos:column="65">pFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2835" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeArguments(This,skip,count,ppFields,pFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="2837" pos:column="1">#<cpp:directive pos:line="2837" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2837" pos:column="9">IDebugBinder3_GetEEService</name><parameter_list pos:line="2837" pos:column="35">(<param><type><name pos:line="2837" pos:column="36">This</name></type></param>,<param><type><name pos:line="2837" pos:column="41">vendor</name></type></param>,<param><type><name pos:line="2837" pos:column="48">language</name></type></param>,<param><type><name pos:line="2837" pos:column="57">iid</name></type></param>,<param><type><name pos:line="2837" pos:column="61">ppService</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2838" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEEService(This,vendor,language,iid,ppService) )</cpp:value></cpp:define> 

<cpp:define pos:line="2840" pos:column="1">#<cpp:directive pos:line="2840" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2840" pos:column="9">IDebugBinder3_GetMemoryContext64</name><parameter_list pos:line="2840" pos:column="41">(<param><type><name pos:line="2840" pos:column="42">This</name></type></param>,<param><type><name pos:line="2840" pos:column="47">pField</name></type></param>,<param><type><name pos:line="2840" pos:column="54">uConstant</name></type></param>,<param><type><name pos:line="2840" pos:column="64">ppMemCxt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2841" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext64(This,pField,uConstant,ppMemCxt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2843" pos:column="1">#<cpp:directive pos:line="2843" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2843" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2846" pos:column="1">#<cpp:directive pos:line="2846" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2846" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2851" pos:column="1">#<cpp:directive pos:line="2851" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2851" pos:column="9">/* __IDebugBinder3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2854" pos:column="1">#<cpp:directive pos:line="2854" pos:column="2">ifndef</cpp:directive> <name pos:line="2854" pos:column="9">__IEEVisualizerDataProvider_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2855" pos:column="1">#<cpp:directive pos:line="2855" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2855" pos:column="9">__IEEVisualizerDataProvider_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2857" pos:column="1">/* interface IEEVisualizerDataProvider */</comment>
<comment type="block" pos:line="2858" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="2861" pos:column="1">EXTERN_C</name> <specifier pos:line="2861" pos:column="10">const</specifier> <name pos:line="2861" pos:column="16">IID</name></type> <name pos:line="2861" pos:column="20">IID_IEEVisualizerDataProvider</name></decl>;</decl_stmt>

<cpp:if pos:line="2863" pos:column="1">#<cpp:directive pos:line="2863" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2863" pos:column="5">defined</name><argument_list pos:line="2863" pos:column="12">(<argument><expr><name pos:line="2863" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2863" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2863" pos:column="29">!</op:operator><call><name pos:line="2863" pos:column="30">defined</name><argument_list pos:line="2863" pos:column="37">(<argument><expr><name pos:line="2863" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2865" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2865" pos:column="19">(<argument pos:line="2865" pos:column="20">"27ED701A-FA26-406e-AE71-00011B5AE396"</argument>)</argument_list></macro>
    <label><name pos:line="2866" pos:column="5">IEEVisualizerDataProvider</name> :</label> <expr_stmt><expr pos:line="2866" pos:column="33">public <name pos:line="2866" pos:column="40">IUnknown</name>
    <block pos:line="2867" pos:column="5">{
    <expr pos:line="2868" pos:column="5">public<op:operator pos:line="2868" pos:column="11">:</op:operator>
        virtual <name pos:line="2869" pos:column="17">HRESULT</name> <name pos:line="2869" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2869" pos:column="43">GetNewObjectForVisualizer</name><argument_list pos:line="2869" pos:column="68">( 
            <comment type="block" pos:line="2870" pos:column="13">/* [out] */</comment> <argument pos:line="2870" pos:column="25">__RPC__deref_out_opt IDebugObject **ppObject</argument>)</argument_list></macro> <op:operator pos:line="2870" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2870" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="2872" pos:column="9">virtual <name pos:line="2872" pos:column="17">HRESULT</name> <name pos:line="2872" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2872" pos:column="43">GetObjectForVisualizer</name><argument_list pos:line="2872" pos:column="65">( 
            <comment type="block" pos:line="2873" pos:column="13">/* [out] */</comment> <argument pos:line="2873" pos:column="25">__RPC__deref_out_opt IDebugObject **ppObject</argument>)</argument_list></macro> <op:operator pos:line="2873" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2873" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="2875" pos:column="9">virtual <name pos:line="2875" pos:column="17">HRESULT</name> <name pos:line="2875" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2875" pos:column="43">CanSetObjectForVisualizer</name><argument_list pos:line="2875" pos:column="68">( 
            <comment type="block" pos:line="2876" pos:column="13">/* [out] */</comment> <argument pos:line="2876" pos:column="25">__RPC__out BOOL *b</argument>)</argument_list></macro> <op:operator pos:line="2876" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="2876" pos:column="47">0</lit:literal></expr>;
        
        <expr pos:line="2878" pos:column="9">virtual <name pos:line="2878" pos:column="17">HRESULT</name> <name pos:line="2878" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2878" pos:column="43">SetObjectForVisualizer</name><argument_list pos:line="2878" pos:column="65">( 
            <comment type="block" pos:line="2879" pos:column="13">/* [in] */</comment> <argument pos:line="2879" pos:column="24">__RPC__in_opt IDebugObject *pNewObject</argument>,
            <comment type="block" pos:line="2880" pos:column="13">/* [out] */</comment> <argument pos:line="2880" pos:column="25">__RPC__deref_out_opt BSTR *error</argument>,
            <comment type="block" pos:line="2881" pos:column="13">/* [out] */</comment> <argument pos:line="2881" pos:column="25">__RPC__deref_out_opt IDebugObject **pException</argument>)</argument_list></macro> <op:operator pos:line="2881" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="2881" pos:column="75">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2885" pos:column="1">#<cpp:directive pos:line="2885" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2885" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2887" pos:column="5">typedef <type><struct pos:line="2887" pos:column="13">struct <name pos:line="2887" pos:column="20">IEEVisualizerDataProviderVtbl</name>
    <block pos:line="2888" pos:column="5">{<public type="default" pos:line="2888" pos:column="6">
        <function_decl><type><name pos:line="2889" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2891" pos:column="9">HRESULT</name></type> ( <name pos:line="2891" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2891" pos:column="37">*</type:modifier><name pos:line="2891" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2891" pos:column="54">( 
            <param><decl><type><name pos:line="2892" pos:column="13">IEEVisualizerDataProvider</name> <type:modifier pos:line="2892" pos:column="39">*</type:modifier></type> <name pos:line="2892" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="2893" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2893" pos:column="24">__RPC__in</name> <name pos:line="2893" pos:column="34">REFIID</name></type> <name pos:line="2893" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2894" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2895" pos:column="13">__RPC__deref_out</name>  <name pos:line="2895" pos:column="31">void</name> <type:modifier pos:line="2895" pos:column="36">*</type:modifier><type:modifier pos:line="2895" pos:column="37">*</type:modifier></type><name pos:line="2895" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2897" pos:column="9">ULONG</name></type> ( <name pos:line="2897" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2897" pos:column="35">*</type:modifier><name pos:line="2897" pos:column="36">AddRef</name> )<parameter_list pos:line="2897" pos:column="44">( 
            <param><decl><type><name pos:line="2898" pos:column="13">IEEVisualizerDataProvider</name> <type:modifier pos:line="2898" pos:column="39">*</type:modifier></type> <name pos:line="2898" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2900" pos:column="9">ULONG</name></type> ( <name pos:line="2900" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2900" pos:column="35">*</type:modifier><name pos:line="2900" pos:column="36">Release</name> )<parameter_list pos:line="2900" pos:column="45">( 
            <param><decl><type><name pos:line="2901" pos:column="13">IEEVisualizerDataProvider</name> <type:modifier pos:line="2901" pos:column="39">*</type:modifier></type> <name pos:line="2901" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2903" pos:column="9">HRESULT</name></type> ( <name pos:line="2903" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2903" pos:column="37">*</type:modifier><name pos:line="2903" pos:column="38">GetNewObjectForVisualizer</name> )<parameter_list pos:line="2903" pos:column="65">( 
            <param><decl><type><name pos:line="2904" pos:column="13">IEEVisualizerDataProvider</name> <type:modifier pos:line="2904" pos:column="39">*</type:modifier></type> <name pos:line="2904" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="2905" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2905" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2905" pos:column="46">IDebugObject</name> <type:modifier pos:line="2905" pos:column="59">*</type:modifier><type:modifier pos:line="2905" pos:column="60">*</type:modifier></type><name pos:line="2905" pos:column="61">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2907" pos:column="9">HRESULT</name></type> ( <name pos:line="2907" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2907" pos:column="37">*</type:modifier><name pos:line="2907" pos:column="38">GetObjectForVisualizer</name> )<parameter_list pos:line="2907" pos:column="62">( 
            <param><decl><type><name pos:line="2908" pos:column="13">IEEVisualizerDataProvider</name> <type:modifier pos:line="2908" pos:column="39">*</type:modifier></type> <name pos:line="2908" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="2909" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2909" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2909" pos:column="46">IDebugObject</name> <type:modifier pos:line="2909" pos:column="59">*</type:modifier><type:modifier pos:line="2909" pos:column="60">*</type:modifier></type><name pos:line="2909" pos:column="61">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2911" pos:column="9">HRESULT</name></type> ( <name pos:line="2911" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2911" pos:column="37">*</type:modifier><name pos:line="2911" pos:column="38">CanSetObjectForVisualizer</name> )<parameter_list pos:line="2911" pos:column="65">( 
            <param><decl><type><name pos:line="2912" pos:column="13">IEEVisualizerDataProvider</name> <type:modifier pos:line="2912" pos:column="39">*</type:modifier></type> <name pos:line="2912" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="2913" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2913" pos:column="25">__RPC__out</name> <name pos:line="2913" pos:column="36">BOOL</name> <type:modifier pos:line="2913" pos:column="41">*</type:modifier></type><name pos:line="2913" pos:column="42">b</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2915" pos:column="9">HRESULT</name></type> ( <name pos:line="2915" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2915" pos:column="37">*</type:modifier><name pos:line="2915" pos:column="38">SetObjectForVisualizer</name> )<parameter_list pos:line="2915" pos:column="62">( 
            <param><decl><type><name pos:line="2916" pos:column="13">IEEVisualizerDataProvider</name> <type:modifier pos:line="2916" pos:column="39">*</type:modifier></type> <name pos:line="2916" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="2917" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2917" pos:column="24">__RPC__in_opt</name> <name pos:line="2917" pos:column="38">IDebugObject</name> <type:modifier pos:line="2917" pos:column="51">*</type:modifier></type><name pos:line="2917" pos:column="52">pNewObject</name></decl></param>,
            <comment type="block" pos:line="2918" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2918" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2918" pos:column="46">BSTR</name> <type:modifier pos:line="2918" pos:column="51">*</type:modifier></type><name pos:line="2918" pos:column="52">error</name></decl></param>,
            <comment type="block" pos:line="2919" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2919" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2919" pos:column="46">IDebugObject</name> <type:modifier pos:line="2919" pos:column="59">*</type:modifier><type:modifier pos:line="2919" pos:column="60">*</type:modifier></type><name pos:line="2919" pos:column="61">pException</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2921" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2922" pos:column="7">IEEVisualizerDataProviderVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2924" pos:column="5">interface</name></type> <name pos:line="2924" pos:column="15">IEEVisualizerDataProvider</name>
    <argument_list pos:line="2925" pos:column="5">{
        <argument><expr><name pos:line="2926" pos:column="9">CONST_VTBL</name> struct <name pos:line="2926" pos:column="27">IEEVisualizerDataProviderVtbl</name> <op:operator pos:line="2926" pos:column="57">*</op:operator><name pos:line="2926" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2931" pos:column="1">#<cpp:directive pos:line="2931" pos:column="2">ifdef</cpp:directive> <name pos:line="2931" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2934" pos:column="1">#<cpp:directive pos:line="2934" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2934" pos:column="9">IEEVisualizerDataProvider_QueryInterface</name><parameter_list pos:line="2934" pos:column="49">(<param><type><name pos:line="2934" pos:column="50">This</name></type></param>,<param><type><name pos:line="2934" pos:column="55">riid</name></type></param>,<param><type><name pos:line="2934" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2935" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2937" pos:column="1">#<cpp:directive pos:line="2937" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2937" pos:column="9">IEEVisualizerDataProvider_AddRef</name><parameter_list pos:line="2937" pos:column="41">(<param><type><name pos:line="2937" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2938" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2940" pos:column="1">#<cpp:directive pos:line="2940" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2940" pos:column="9">IEEVisualizerDataProvider_Release</name><parameter_list pos:line="2940" pos:column="42">(<param><type><name pos:line="2940" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2941" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2944" pos:column="1">#<cpp:directive pos:line="2944" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2944" pos:column="9">IEEVisualizerDataProvider_GetNewObjectForVisualizer</name><parameter_list pos:line="2944" pos:column="60">(<param><type><name pos:line="2944" pos:column="61">This</name></type></param>,<param><type><name pos:line="2944" pos:column="66">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2945" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetNewObjectForVisualizer(This,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2947" pos:column="1">#<cpp:directive pos:line="2947" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2947" pos:column="9">IEEVisualizerDataProvider_GetObjectForVisualizer</name><parameter_list pos:line="2947" pos:column="57">(<param><type><name pos:line="2947" pos:column="58">This</name></type></param>,<param><type><name pos:line="2947" pos:column="63">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2948" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetObjectForVisualizer(This,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2950" pos:column="1">#<cpp:directive pos:line="2950" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2950" pos:column="9">IEEVisualizerDataProvider_CanSetObjectForVisualizer</name><parameter_list pos:line="2950" pos:column="60">(<param><type><name pos:line="2950" pos:column="61">This</name></type></param>,<param><type><name pos:line="2950" pos:column="66">b</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2951" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanSetObjectForVisualizer(This,b) )</cpp:value></cpp:define> 

<cpp:define pos:line="2953" pos:column="1">#<cpp:directive pos:line="2953" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2953" pos:column="9">IEEVisualizerDataProvider_SetObjectForVisualizer</name><parameter_list pos:line="2953" pos:column="57">(<param><type><name pos:line="2953" pos:column="58">This</name></type></param>,<param><type><name pos:line="2953" pos:column="63">pNewObject</name></type></param>,<param><type><name pos:line="2953" pos:column="74">error</name></type></param>,<param><type><name pos:line="2953" pos:column="80">pException</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2954" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetObjectForVisualizer(This,pNewObject,error,pException) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2956" pos:column="1">#<cpp:directive pos:line="2956" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2956" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2959" pos:column="1">#<cpp:directive pos:line="2959" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2959" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2964" pos:column="1">#<cpp:directive pos:line="2964" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2964" pos:column="9">/* __IEEVisualizerDataProvider_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2967" pos:column="1">#<cpp:directive pos:line="2967" pos:column="2">ifndef</cpp:directive> <name pos:line="2967" pos:column="9">__IEEVisualizerService_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2968" pos:column="1">#<cpp:directive pos:line="2968" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2968" pos:column="9">__IEEVisualizerService_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2970" pos:column="1">/* interface IEEVisualizerService */</comment>
<comment type="block" pos:line="2971" pos:column="1">/* [unique][uuid][object] */</comment> 


<enum pos:line="2974" pos:column="1">enum <name pos:line="2974" pos:column="6">enum_DisplayKind</name>
    <block pos:line="2975" pos:column="5">{	<decl><name pos:line="2975" pos:column="9">DisplayKind_Value</name>	<init pos:line="2975" pos:column="33">= <expr><lit:literal type="number" pos:line="2975" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="2975" pos:column="38">,</op:operator>
	<decl><name pos:line="2976" pos:column="9">DisplayKind_Name</name>	<init pos:line="2976" pos:column="33">= <expr><lit:literal type="number" pos:line="2976" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="2976" pos:column="38">,</op:operator>
	<decl><name pos:line="2977" pos:column="9">DisplayKind_Type</name>	<init pos:line="2977" pos:column="33">= <expr><lit:literal type="number" pos:line="2977" pos:column="35">0x3</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="2979" pos:column="1">typedef <type><name pos:line="2979" pos:column="9">DWORD</name></type> <name pos:line="2979" pos:column="15">DisplayKind</name>;</typedef>


<enum pos:line="2982" pos:column="1">enum <name pos:line="2982" pos:column="6">enum_BrowsableKind</name>
    <block pos:line="2983" pos:column="5">{	<decl><name pos:line="2983" pos:column="9">BrowsableKind_None</name>	<init pos:line="2983" pos:column="33">= <expr><lit:literal type="number" pos:line="2983" pos:column="35">0x1</lit:literal></expr></init></decl><op:operator pos:line="2983" pos:column="38">,</op:operator>
	<decl><name pos:line="2984" pos:column="9">BrowsableKind_Collapsed</name>	<init pos:line="2984" pos:column="33">= <expr><lit:literal type="number" pos:line="2984" pos:column="35">0x2</lit:literal></expr></init></decl><op:operator pos:line="2984" pos:column="38">,</op:operator>
	<decl><name pos:line="2985" pos:column="9">BrowsableKind_RootHidden</name>	<init pos:line="2985" pos:column="41">= <expr><lit:literal type="number" pos:line="2985" pos:column="43">0x3</lit:literal></expr></init></decl><op:operator pos:line="2985" pos:column="46">,</op:operator>
	<decl><name pos:line="2986" pos:column="9">BrowsableKind_Never</name>	<init pos:line="2986" pos:column="33">= <expr><lit:literal type="number" pos:line="2986" pos:column="35">0x4</lit:literal></expr></init></decl>
    }</block> ;</enum>
<typedef pos:line="2988" pos:column="1">typedef <type><name pos:line="2988" pos:column="9">DWORD</name></type> <name pos:line="2988" pos:column="15">BrowsableKind</name>;</typedef>


<decl_stmt><decl><type><name pos:line="2991" pos:column="1">EXTERN_C</name> <specifier pos:line="2991" pos:column="10">const</specifier> <name pos:line="2991" pos:column="16">IID</name></type> <name pos:line="2991" pos:column="20">IID_IEEVisualizerService</name></decl>;</decl_stmt>

<cpp:if pos:line="2993" pos:column="1">#<cpp:directive pos:line="2993" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2993" pos:column="5">defined</name><argument_list pos:line="2993" pos:column="12">(<argument><expr><name pos:line="2993" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2993" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2993" pos:column="29">!</op:operator><call><name pos:line="2993" pos:column="30">defined</name><argument_list pos:line="2993" pos:column="37">(<argument><expr><name pos:line="2993" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2995" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2995" pos:column="19">(<argument pos:line="2995" pos:column="20">"82545B58-F203-4835-ACD6-6D0997AA6F25"</argument>)</argument_list></macro>
    <label><name pos:line="2996" pos:column="5">IEEVisualizerService</name> :</label> <expr_stmt><expr pos:line="2996" pos:column="28">public <name pos:line="2996" pos:column="35">IUnknown</name>
    <block pos:line="2997" pos:column="5">{
    <expr pos:line="2998" pos:column="5">public<op:operator pos:line="2998" pos:column="11">:</op:operator>
        virtual <name pos:line="2999" pos:column="17">HRESULT</name> <name pos:line="2999" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="2999" pos:column="43">GetCustomViewerCount</name><argument_list pos:line="2999" pos:column="63">( 
            <comment type="block" pos:line="3000" pos:column="13">/* [out] */</comment> <argument pos:line="3000" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="3000" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="3000" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="3002" pos:column="9">virtual <name pos:line="3002" pos:column="17">HRESULT</name> <name pos:line="3002" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3002" pos:column="43">GetCustomViewerList</name><argument_list pos:line="3002" pos:column="62">( 
            <comment type="block" pos:line="3003" pos:column="13">/* [in] */</comment> <argument pos:line="3003" pos:column="24">ULONG celtSkip</argument>,
            <comment type="block" pos:line="3004" pos:column="13">/* [in] */</comment> <argument pos:line="3004" pos:column="24">ULONG celtRequested</argument>,
            <comment type="block" pos:line="3005" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="3005" pos:column="45">__RPC__out_ecount_part(celtRequested, *pceltFetched) DEBUG_CUSTOM_VIEWER *rgViewers</argument>,
            <comment type="block" pos:line="3006" pos:column="13">/* [out] */</comment> <argument pos:line="3006" pos:column="25">__RPC__out ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="3006" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="3006" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="3008" pos:column="9">virtual <name pos:line="3008" pos:column="17">HRESULT</name> <name pos:line="3008" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3008" pos:column="43">GetPropertyProxy</name><argument_list pos:line="3008" pos:column="59">( 
            <comment type="block" pos:line="3009" pos:column="13">/* [in] */</comment> <argument pos:line="3009" pos:column="24">DWORD dwID</argument>,
            <comment type="block" pos:line="3010" pos:column="13">/* [out] */</comment> <argument pos:line="3010" pos:column="25">__RPC__deref_out_opt IPropertyProxyEESide **proxy</argument>)</argument_list></macro> <op:operator pos:line="3010" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="3010" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="3012" pos:column="9">virtual <name pos:line="3012" pos:column="17">HRESULT</name> <name pos:line="3012" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3012" pos:column="43">GetValueDisplayStringCount</name><argument_list pos:line="3012" pos:column="69">( 
            <comment type="block" pos:line="3013" pos:column="13">/* [in] */</comment> <argument pos:line="3013" pos:column="24">DWORD displayKind</argument>,
            <comment type="block" pos:line="3014" pos:column="13">/* [in] */</comment> <argument pos:line="3014" pos:column="24">__RPC__in_opt IDebugField *propertyOrField</argument>,
            <comment type="block" pos:line="3015" pos:column="13">/* [out] */</comment> <argument pos:line="3015" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="3015" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="3015" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="3017" pos:column="9">virtual <name pos:line="3017" pos:column="17">HRESULT</name> <name pos:line="3017" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3017" pos:column="43">GetValueDisplayStrings</name><argument_list pos:line="3017" pos:column="65">( 
            <comment type="block" pos:line="3018" pos:column="13">/* [in] */</comment> <argument pos:line="3018" pos:column="24">DisplayKind displayKind</argument>,
            <comment type="block" pos:line="3019" pos:column="13">/* [in] */</comment> <argument pos:line="3019" pos:column="24">__RPC__in_opt IDebugField *propertyOrField</argument>,
            <comment type="block" pos:line="3020" pos:column="13">/* [in] */</comment> <argument pos:line="3020" pos:column="24">ULONG celtSkip</argument>,
            <comment type="block" pos:line="3021" pos:column="13">/* [in] */</comment> <argument pos:line="3021" pos:column="24">ULONG celtRequested</argument>,
            <comment type="block" pos:line="3022" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="3022" pos:column="45">__RPC__out_ecount_part(celtRequested, *pceltFetched) BSTR *rgStrings</argument>,
            <comment type="block" pos:line="3023" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="3023" pos:column="45">__RPC__out_ecount_part(celtRequested, *pceltFetched) BOOL *rgIsExpression</argument>,
            <comment type="block" pos:line="3024" pos:column="13">/* [out] */</comment> <argument pos:line="3024" pos:column="25">__RPC__out ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="3024" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="3024" pos:column="59">0</lit:literal></expr>;
        
        <expr pos:line="3026" pos:column="9">virtual <name pos:line="3026" pos:column="17">HRESULT</name> <name pos:line="3026" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3026" pos:column="43">GetBrowsableState</name><argument_list pos:line="3026" pos:column="60">( 
            <comment type="block" pos:line="3027" pos:column="13">/* [in] */</comment> <argument pos:line="3027" pos:column="24">__RPC__in_opt IDebugField *propertyOrField</argument>,
            <comment type="block" pos:line="3028" pos:column="13">/* [out] */</comment> <argument pos:line="3028" pos:column="25">__RPC__out BrowsableKind *browsableKind</argument>)</argument_list></macro> <op:operator pos:line="3028" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="3028" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="3030" pos:column="9">virtual <name pos:line="3030" pos:column="17">HRESULT</name> <name pos:line="3030" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3030" pos:column="43">PossiblyHasInlineProxy</name><argument_list pos:line="3030" pos:column="65">( 
            <comment type="block" pos:line="3031" pos:column="13">/* [out] */</comment> <argument pos:line="3031" pos:column="25">__RPC__out BOOL *mayHaveProxy</argument>)</argument_list></macro> <op:operator pos:line="3031" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="3031" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="3033" pos:column="9">virtual <name pos:line="3033" pos:column="17">HRESULT</name> <name pos:line="3033" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3033" pos:column="43">CreateInlineProxy</name><argument_list pos:line="3033" pos:column="60">( 
            <comment type="block" pos:line="3034" pos:column="13">/* [out] */</comment> <argument pos:line="3034" pos:column="25">__RPC__deref_out_opt IDebugObject **proxy</argument>,
            <comment type="block" pos:line="3035" pos:column="13">/* [out] */</comment> <argument pos:line="3035" pos:column="25">__RPC__out BOOL *IsExceptionNotProxy</argument>,
            <comment type="block" pos:line="3036" pos:column="13">/* [out] */</comment> <argument pos:line="3036" pos:column="25">__RPC__deref_out_opt BSTR *errorString</argument>)</argument_list></macro> <op:operator pos:line="3036" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="3036" pos:column="67">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3040" pos:column="1">#<cpp:directive pos:line="3040" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3040" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3042" pos:column="5">typedef <type><struct pos:line="3042" pos:column="13">struct <name pos:line="3042" pos:column="20">IEEVisualizerServiceVtbl</name>
    <block pos:line="3043" pos:column="5">{<public type="default" pos:line="3043" pos:column="6">
        <function_decl><type><name pos:line="3044" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3046" pos:column="9">HRESULT</name></type> ( <name pos:line="3046" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3046" pos:column="37">*</type:modifier><name pos:line="3046" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3046" pos:column="54">( 
            <param><decl><type><name pos:line="3047" pos:column="13">IEEVisualizerService</name> <type:modifier pos:line="3047" pos:column="34">*</type:modifier></type> <name pos:line="3047" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3048" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3048" pos:column="24">__RPC__in</name> <name pos:line="3048" pos:column="34">REFIID</name></type> <name pos:line="3048" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3049" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3050" pos:column="13">__RPC__deref_out</name>  <name pos:line="3050" pos:column="31">void</name> <type:modifier pos:line="3050" pos:column="36">*</type:modifier><type:modifier pos:line="3050" pos:column="37">*</type:modifier></type><name pos:line="3050" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3052" pos:column="9">ULONG</name></type> ( <name pos:line="3052" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3052" pos:column="35">*</type:modifier><name pos:line="3052" pos:column="36">AddRef</name> )<parameter_list pos:line="3052" pos:column="44">( 
            <param><decl><type><name pos:line="3053" pos:column="13">IEEVisualizerService</name> <type:modifier pos:line="3053" pos:column="34">*</type:modifier></type> <name pos:line="3053" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3055" pos:column="9">ULONG</name></type> ( <name pos:line="3055" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3055" pos:column="35">*</type:modifier><name pos:line="3055" pos:column="36">Release</name> )<parameter_list pos:line="3055" pos:column="45">( 
            <param><decl><type><name pos:line="3056" pos:column="13">IEEVisualizerService</name> <type:modifier pos:line="3056" pos:column="34">*</type:modifier></type> <name pos:line="3056" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3058" pos:column="9">HRESULT</name></type> ( <name pos:line="3058" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3058" pos:column="37">*</type:modifier><name pos:line="3058" pos:column="38">GetCustomViewerCount</name> )<parameter_list pos:line="3058" pos:column="60">( 
            <param><decl><type><name pos:line="3059" pos:column="13">IEEVisualizerService</name> <type:modifier pos:line="3059" pos:column="34">*</type:modifier></type> <name pos:line="3059" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3060" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3060" pos:column="25">__RPC__out</name> <name pos:line="3060" pos:column="36">ULONG</name> <type:modifier pos:line="3060" pos:column="42">*</type:modifier></type><name pos:line="3060" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3062" pos:column="9">HRESULT</name> <argument_list pos:line="3062" pos:column="17">( <argument pos:line="3062" pos:column="19">STDMETHODCALLTYPE *GetCustomViewerList</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3062" pos:column="59">(</op:operator> 
            <name pos:line="3063" pos:column="13">IEEVisualizerService</name> <op:operator pos:line="3063" pos:column="34">*</op:operator> <name pos:line="3063" pos:column="36">This</name><op:operator pos:line="3063" pos:column="40">,</op:operator>
            <comment type="block" pos:line="3064" pos:column="13">/* [in] */</comment> <name pos:line="3064" pos:column="24">ULONG</name> <name pos:line="3064" pos:column="30">celtSkip</name><op:operator pos:line="3064" pos:column="38">,</op:operator>
            <comment type="block" pos:line="3065" pos:column="13">/* [in] */</comment> <name pos:line="3065" pos:column="24">ULONG</name> <name pos:line="3065" pos:column="30">celtRequested</name><op:operator pos:line="3065" pos:column="43">,</op:operator>
            <comment type="block" pos:line="3066" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="3066" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="3066" pos:column="67">(<argument pos:line="3066" pos:column="68">celtRequested</argument>, <argument pos:line="3066" pos:column="83">*pceltFetched</argument>)</argument_list></macro> <name pos:line="3066" pos:column="98">DEBUG_CUSTOM_VIEWER</name> <op:operator pos:line="3066" pos:column="118">*</op:operator><name pos:line="3066" pos:column="119">rgViewers</name><op:operator pos:line="3066" pos:column="128">,</op:operator>
            <comment type="block" pos:line="3067" pos:column="13">/* [out] */</comment> <name pos:line="3067" pos:column="25">__RPC__out</name> <name pos:line="3067" pos:column="36">ULONG</name> <op:operator pos:line="3067" pos:column="42">*</op:operator><name pos:line="3067" pos:column="43">pceltFetched</name><op:operator pos:line="3067" pos:column="55">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3069" pos:column="9">HRESULT</name></type> ( <name pos:line="3069" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3069" pos:column="37">*</type:modifier><name pos:line="3069" pos:column="38">GetPropertyProxy</name> )<parameter_list pos:line="3069" pos:column="56">( 
            <param><decl><type><name pos:line="3070" pos:column="13">IEEVisualizerService</name> <type:modifier pos:line="3070" pos:column="34">*</type:modifier></type> <name pos:line="3070" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3071" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3071" pos:column="24">DWORD</name></type> <name pos:line="3071" pos:column="30">dwID</name></decl></param>,
            <comment type="block" pos:line="3072" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3072" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3072" pos:column="46">IPropertyProxyEESide</name> <type:modifier pos:line="3072" pos:column="67">*</type:modifier><type:modifier pos:line="3072" pos:column="68">*</type:modifier></type><name pos:line="3072" pos:column="69">proxy</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3074" pos:column="9">HRESULT</name></type> ( <name pos:line="3074" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3074" pos:column="37">*</type:modifier><name pos:line="3074" pos:column="38">GetValueDisplayStringCount</name> )<parameter_list pos:line="3074" pos:column="66">( 
            <param><decl><type><name pos:line="3075" pos:column="13">IEEVisualizerService</name> <type:modifier pos:line="3075" pos:column="34">*</type:modifier></type> <name pos:line="3075" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3076" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3076" pos:column="24">DWORD</name></type> <name pos:line="3076" pos:column="30">displayKind</name></decl></param>,
            <comment type="block" pos:line="3077" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3077" pos:column="24">__RPC__in_opt</name> <name pos:line="3077" pos:column="38">IDebugField</name> <type:modifier pos:line="3077" pos:column="50">*</type:modifier></type><name pos:line="3077" pos:column="51">propertyOrField</name></decl></param>,
            <comment type="block" pos:line="3078" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3078" pos:column="25">__RPC__out</name> <name pos:line="3078" pos:column="36">ULONG</name> <type:modifier pos:line="3078" pos:column="42">*</type:modifier></type><name pos:line="3078" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3080" pos:column="9">HRESULT</name> <argument_list pos:line="3080" pos:column="17">( <argument pos:line="3080" pos:column="19">STDMETHODCALLTYPE *GetValueDisplayStrings</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3080" pos:column="62">(</op:operator> 
            <name pos:line="3081" pos:column="13">IEEVisualizerService</name> <op:operator pos:line="3081" pos:column="34">*</op:operator> <name pos:line="3081" pos:column="36">This</name><op:operator pos:line="3081" pos:column="40">,</op:operator>
            <comment type="block" pos:line="3082" pos:column="13">/* [in] */</comment> <name pos:line="3082" pos:column="24">DisplayKind</name> <name pos:line="3082" pos:column="36">displayKind</name><op:operator pos:line="3082" pos:column="47">,</op:operator>
            <comment type="block" pos:line="3083" pos:column="13">/* [in] */</comment> <name pos:line="3083" pos:column="24">__RPC__in_opt</name> <name pos:line="3083" pos:column="38">IDebugField</name> <op:operator pos:line="3083" pos:column="50">*</op:operator><name pos:line="3083" pos:column="51">propertyOrField</name><op:operator pos:line="3083" pos:column="66">,</op:operator>
            <comment type="block" pos:line="3084" pos:column="13">/* [in] */</comment> <name pos:line="3084" pos:column="24">ULONG</name> <name pos:line="3084" pos:column="30">celtSkip</name><op:operator pos:line="3084" pos:column="38">,</op:operator>
            <comment type="block" pos:line="3085" pos:column="13">/* [in] */</comment> <name pos:line="3085" pos:column="24">ULONG</name> <name pos:line="3085" pos:column="30">celtRequested</name><op:operator pos:line="3085" pos:column="43">,</op:operator>
            <comment type="block" pos:line="3086" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="3086" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="3086" pos:column="67">(<argument pos:line="3086" pos:column="68">celtRequested</argument>, <argument pos:line="3086" pos:column="83">*pceltFetched</argument>)</argument_list></macro> <name pos:line="3086" pos:column="98">BSTR</name> <op:operator pos:line="3086" pos:column="103">*</op:operator><name pos:line="3086" pos:column="104">rgStrings</name><op:operator pos:line="3086" pos:column="113">,</op:operator>
            <comment type="block" pos:line="3087" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="3087" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="3087" pos:column="67">(<argument pos:line="3087" pos:column="68">celtRequested</argument>, <argument pos:line="3087" pos:column="83">*pceltFetched</argument>)</argument_list></macro> <name pos:line="3087" pos:column="98">BOOL</name> <op:operator pos:line="3087" pos:column="103">*</op:operator><name pos:line="3087" pos:column="104">rgIsExpression</name><op:operator pos:line="3087" pos:column="118">,</op:operator>
            <comment type="block" pos:line="3088" pos:column="13">/* [out] */</comment> <name pos:line="3088" pos:column="25">__RPC__out</name> <name pos:line="3088" pos:column="36">ULONG</name> <op:operator pos:line="3088" pos:column="42">*</op:operator><name pos:line="3088" pos:column="43">pceltFetched</name><op:operator pos:line="3088" pos:column="55">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3090" pos:column="9">HRESULT</name></type> ( <name pos:line="3090" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3090" pos:column="37">*</type:modifier><name pos:line="3090" pos:column="38">GetBrowsableState</name> )<parameter_list pos:line="3090" pos:column="57">( 
            <param><decl><type><name pos:line="3091" pos:column="13">IEEVisualizerService</name> <type:modifier pos:line="3091" pos:column="34">*</type:modifier></type> <name pos:line="3091" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3092" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3092" pos:column="24">__RPC__in_opt</name> <name pos:line="3092" pos:column="38">IDebugField</name> <type:modifier pos:line="3092" pos:column="50">*</type:modifier></type><name pos:line="3092" pos:column="51">propertyOrField</name></decl></param>,
            <comment type="block" pos:line="3093" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3093" pos:column="25">__RPC__out</name> <name pos:line="3093" pos:column="36">BrowsableKind</name> <type:modifier pos:line="3093" pos:column="50">*</type:modifier></type><name pos:line="3093" pos:column="51">browsableKind</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3095" pos:column="9">HRESULT</name></type> ( <name pos:line="3095" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3095" pos:column="37">*</type:modifier><name pos:line="3095" pos:column="38">PossiblyHasInlineProxy</name> )<parameter_list pos:line="3095" pos:column="62">( 
            <param><decl><type><name pos:line="3096" pos:column="13">IEEVisualizerService</name> <type:modifier pos:line="3096" pos:column="34">*</type:modifier></type> <name pos:line="3096" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3097" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3097" pos:column="25">__RPC__out</name> <name pos:line="3097" pos:column="36">BOOL</name> <type:modifier pos:line="3097" pos:column="41">*</type:modifier></type><name pos:line="3097" pos:column="42">mayHaveProxy</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3099" pos:column="9">HRESULT</name></type> ( <name pos:line="3099" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3099" pos:column="37">*</type:modifier><name pos:line="3099" pos:column="38">CreateInlineProxy</name> )<parameter_list pos:line="3099" pos:column="57">( 
            <param><decl><type><name pos:line="3100" pos:column="13">IEEVisualizerService</name> <type:modifier pos:line="3100" pos:column="34">*</type:modifier></type> <name pos:line="3100" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3101" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3101" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3101" pos:column="46">IDebugObject</name> <type:modifier pos:line="3101" pos:column="59">*</type:modifier><type:modifier pos:line="3101" pos:column="60">*</type:modifier></type><name pos:line="3101" pos:column="61">proxy</name></decl></param>,
            <comment type="block" pos:line="3102" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3102" pos:column="25">__RPC__out</name> <name pos:line="3102" pos:column="36">BOOL</name> <type:modifier pos:line="3102" pos:column="41">*</type:modifier></type><name pos:line="3102" pos:column="42">IsExceptionNotProxy</name></decl></param>,
            <comment type="block" pos:line="3103" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3103" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3103" pos:column="46">BSTR</name> <type:modifier pos:line="3103" pos:column="51">*</type:modifier></type><name pos:line="3103" pos:column="52">errorString</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3105" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3106" pos:column="7">IEEVisualizerServiceVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3108" pos:column="5">interface</name></type> <name pos:line="3108" pos:column="15">IEEVisualizerService</name>
    <argument_list pos:line="3109" pos:column="5">{
        <argument><expr><name pos:line="3110" pos:column="9">CONST_VTBL</name> struct <name pos:line="3110" pos:column="27">IEEVisualizerServiceVtbl</name> <op:operator pos:line="3110" pos:column="52">*</op:operator><name pos:line="3110" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3115" pos:column="1">#<cpp:directive pos:line="3115" pos:column="2">ifdef</cpp:directive> <name pos:line="3115" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3118" pos:column="1">#<cpp:directive pos:line="3118" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3118" pos:column="9">IEEVisualizerService_QueryInterface</name><parameter_list pos:line="3118" pos:column="44">(<param><type><name pos:line="3118" pos:column="45">This</name></type></param>,<param><type><name pos:line="3118" pos:column="50">riid</name></type></param>,<param><type><name pos:line="3118" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3119" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3121" pos:column="1">#<cpp:directive pos:line="3121" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3121" pos:column="9">IEEVisualizerService_AddRef</name><parameter_list pos:line="3121" pos:column="36">(<param><type><name pos:line="3121" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3122" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3124" pos:column="1">#<cpp:directive pos:line="3124" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3124" pos:column="9">IEEVisualizerService_Release</name><parameter_list pos:line="3124" pos:column="37">(<param><type><name pos:line="3124" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3125" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3128" pos:column="1">#<cpp:directive pos:line="3128" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3128" pos:column="9">IEEVisualizerService_GetCustomViewerCount</name><parameter_list pos:line="3128" pos:column="50">(<param><type><name pos:line="3128" pos:column="51">This</name></type></param>,<param><type><name pos:line="3128" pos:column="56">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3129" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCustomViewerCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:define pos:line="3131" pos:column="1">#<cpp:directive pos:line="3131" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3131" pos:column="9">IEEVisualizerService_GetCustomViewerList</name><parameter_list pos:line="3131" pos:column="49">(<param><type><name pos:line="3131" pos:column="50">This</name></type></param>,<param><type><name pos:line="3131" pos:column="55">celtSkip</name></type></param>,<param><type><name pos:line="3131" pos:column="64">celtRequested</name></type></param>,<param><type><name pos:line="3131" pos:column="78">rgViewers</name></type></param>,<param><type><name pos:line="3131" pos:column="88">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3132" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCustomViewerList(This,celtSkip,celtRequested,rgViewers,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="3134" pos:column="1">#<cpp:directive pos:line="3134" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3134" pos:column="9">IEEVisualizerService_GetPropertyProxy</name><parameter_list pos:line="3134" pos:column="46">(<param><type><name pos:line="3134" pos:column="47">This</name></type></param>,<param><type><name pos:line="3134" pos:column="52">dwID</name></type></param>,<param><type><name pos:line="3134" pos:column="57">proxy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3135" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPropertyProxy(This,dwID,proxy) )</cpp:value></cpp:define> 

<cpp:define pos:line="3137" pos:column="1">#<cpp:directive pos:line="3137" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3137" pos:column="9">IEEVisualizerService_GetValueDisplayStringCount</name><parameter_list pos:line="3137" pos:column="56">(<param><type><name pos:line="3137" pos:column="57">This</name></type></param>,<param><type><name pos:line="3137" pos:column="62">displayKind</name></type></param>,<param><type><name pos:line="3137" pos:column="74">propertyOrField</name></type></param>,<param><type><name pos:line="3137" pos:column="90">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3138" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetValueDisplayStringCount(This,displayKind,propertyOrField,pcelt) )</cpp:value></cpp:define> 

<cpp:define pos:line="3140" pos:column="1">#<cpp:directive pos:line="3140" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3140" pos:column="9">IEEVisualizerService_GetValueDisplayStrings</name><parameter_list pos:line="3140" pos:column="52">(<param><type><name pos:line="3140" pos:column="53">This</name></type></param>,<param><type><name pos:line="3140" pos:column="58">displayKind</name></type></param>,<param><type><name pos:line="3140" pos:column="70">propertyOrField</name></type></param>,<param><type><name pos:line="3140" pos:column="86">celtSkip</name></type></param>,<param><type><name pos:line="3140" pos:column="95">celtRequested</name></type></param>,<param><type><name pos:line="3140" pos:column="109">rgStrings</name></type></param>,<param><type><name pos:line="3140" pos:column="119">rgIsExpression</name></type></param>,<param><type><name pos:line="3140" pos:column="134">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3141" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetValueDisplayStrings(This,displayKind,propertyOrField,celtSkip,celtRequested,rgStrings,rgIsExpression,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="3143" pos:column="1">#<cpp:directive pos:line="3143" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3143" pos:column="9">IEEVisualizerService_GetBrowsableState</name><parameter_list pos:line="3143" pos:column="47">(<param><type><name pos:line="3143" pos:column="48">This</name></type></param>,<param><type><name pos:line="3143" pos:column="53">propertyOrField</name></type></param>,<param><type><name pos:line="3143" pos:column="69">browsableKind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3144" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBrowsableState(This,propertyOrField,browsableKind) )</cpp:value></cpp:define> 

<cpp:define pos:line="3146" pos:column="1">#<cpp:directive pos:line="3146" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3146" pos:column="9">IEEVisualizerService_PossiblyHasInlineProxy</name><parameter_list pos:line="3146" pos:column="52">(<param><type><name pos:line="3146" pos:column="53">This</name></type></param>,<param><type><name pos:line="3146" pos:column="58">mayHaveProxy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3147" pos:column="5">( (This)-&gt;lpVtbl -&gt; PossiblyHasInlineProxy(This,mayHaveProxy) )</cpp:value></cpp:define> 

<cpp:define pos:line="3149" pos:column="1">#<cpp:directive pos:line="3149" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3149" pos:column="9">IEEVisualizerService_CreateInlineProxy</name><parameter_list pos:line="3149" pos:column="47">(<param><type><name pos:line="3149" pos:column="48">This</name></type></param>,<param><type><name pos:line="3149" pos:column="53">proxy</name></type></param>,<param><type><name pos:line="3149" pos:column="59">IsExceptionNotProxy</name></type></param>,<param><type><name pos:line="3149" pos:column="79">errorString</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3150" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateInlineProxy(This,proxy,IsExceptionNotProxy,errorString) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3152" pos:column="1">#<cpp:directive pos:line="3152" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3152" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3155" pos:column="1">#<cpp:directive pos:line="3155" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3155" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3160" pos:column="1">#<cpp:directive pos:line="3160" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3160" pos:column="9">/* __IEEVisualizerService_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3163" pos:column="1">#<cpp:directive pos:line="3163" pos:column="2">ifndef</cpp:directive> <name pos:line="3163" pos:column="9">__IEEVisualizerServiceProvider_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3164" pos:column="1">#<cpp:directive pos:line="3164" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3164" pos:column="9">__IEEVisualizerServiceProvider_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3166" pos:column="1">/* interface IEEVisualizerServiceProvider */</comment>
<comment type="block" pos:line="3167" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3170" pos:column="1">EXTERN_C</name> <specifier pos:line="3170" pos:column="10">const</specifier> <name pos:line="3170" pos:column="16">IID</name></type> <name pos:line="3170" pos:column="20">IID_IEEVisualizerServiceProvider</name></decl>;</decl_stmt>

<cpp:if pos:line="3172" pos:column="1">#<cpp:directive pos:line="3172" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3172" pos:column="5">defined</name><argument_list pos:line="3172" pos:column="12">(<argument><expr><name pos:line="3172" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3172" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3172" pos:column="29">!</op:operator><call><name pos:line="3172" pos:column="30">defined</name><argument_list pos:line="3172" pos:column="37">(<argument><expr><name pos:line="3172" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3174" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3174" pos:column="19">(<argument pos:line="3174" pos:column="20">"A2F2C782-F929-4ffa-8699-88D4C4C07B17"</argument>)</argument_list></macro>
    <label><name pos:line="3175" pos:column="5">IEEVisualizerServiceProvider</name> :</label> <expr_stmt><expr pos:line="3175" pos:column="36">public <name pos:line="3175" pos:column="43">IUnknown</name>
    <block pos:line="3176" pos:column="5">{
    <expr pos:line="3177" pos:column="5">public<op:operator pos:line="3177" pos:column="11">:</op:operator>
        virtual <name pos:line="3178" pos:column="17">HRESULT</name> <name pos:line="3178" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3178" pos:column="43">CreateVisualizerService</name><argument_list pos:line="3178" pos:column="66">( 
            <comment type="block" pos:line="3179" pos:column="13">/* [in] */</comment> <argument pos:line="3179" pos:column="24">__RPC__in_opt IDebugBinder *binder</argument>,
            <comment type="block" pos:line="3180" pos:column="13">/* [in] */</comment> <argument pos:line="3180" pos:column="24">__RPC__in_opt IDebugSymbolProvider *pSymProv</argument>,
            <comment type="block" pos:line="3181" pos:column="13">/* [in] */</comment> <argument pos:line="3181" pos:column="24">__RPC__in_opt IDebugAddress *pAddress</argument>,
            <comment type="block" pos:line="3182" pos:column="13">/* [in] */</comment> <argument pos:line="3182" pos:column="24">__RPC__in_opt IEEVisualizerDataProvider *dataProvider</argument>,
            <comment type="block" pos:line="3183" pos:column="13">/* [out] */</comment> <argument pos:line="3183" pos:column="25">__RPC__deref_out_opt IEEVisualizerService **ppService</argument>)</argument_list></macro> <op:operator pos:line="3183" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="3183" pos:column="82">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3187" pos:column="1">#<cpp:directive pos:line="3187" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3187" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3189" pos:column="5">typedef <type><struct pos:line="3189" pos:column="13">struct <name pos:line="3189" pos:column="20">IEEVisualizerServiceProviderVtbl</name>
    <block pos:line="3190" pos:column="5">{<public type="default" pos:line="3190" pos:column="6">
        <function_decl><type><name pos:line="3191" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3193" pos:column="9">HRESULT</name></type> ( <name pos:line="3193" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3193" pos:column="37">*</type:modifier><name pos:line="3193" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3193" pos:column="54">( 
            <param><decl><type><name pos:line="3194" pos:column="13">IEEVisualizerServiceProvider</name> <type:modifier pos:line="3194" pos:column="42">*</type:modifier></type> <name pos:line="3194" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="3195" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3195" pos:column="24">__RPC__in</name> <name pos:line="3195" pos:column="34">REFIID</name></type> <name pos:line="3195" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3196" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3197" pos:column="13">__RPC__deref_out</name>  <name pos:line="3197" pos:column="31">void</name> <type:modifier pos:line="3197" pos:column="36">*</type:modifier><type:modifier pos:line="3197" pos:column="37">*</type:modifier></type><name pos:line="3197" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3199" pos:column="9">ULONG</name></type> ( <name pos:line="3199" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3199" pos:column="35">*</type:modifier><name pos:line="3199" pos:column="36">AddRef</name> )<parameter_list pos:line="3199" pos:column="44">( 
            <param><decl><type><name pos:line="3200" pos:column="13">IEEVisualizerServiceProvider</name> <type:modifier pos:line="3200" pos:column="42">*</type:modifier></type> <name pos:line="3200" pos:column="44">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3202" pos:column="9">ULONG</name></type> ( <name pos:line="3202" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3202" pos:column="35">*</type:modifier><name pos:line="3202" pos:column="36">Release</name> )<parameter_list pos:line="3202" pos:column="45">( 
            <param><decl><type><name pos:line="3203" pos:column="13">IEEVisualizerServiceProvider</name> <type:modifier pos:line="3203" pos:column="42">*</type:modifier></type> <name pos:line="3203" pos:column="44">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3205" pos:column="9">HRESULT</name></type> ( <name pos:line="3205" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3205" pos:column="37">*</type:modifier><name pos:line="3205" pos:column="38">CreateVisualizerService</name> )<parameter_list pos:line="3205" pos:column="63">( 
            <param><decl><type><name pos:line="3206" pos:column="13">IEEVisualizerServiceProvider</name> <type:modifier pos:line="3206" pos:column="42">*</type:modifier></type> <name pos:line="3206" pos:column="44">This</name></decl></param>,
            <comment type="block" pos:line="3207" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3207" pos:column="24">__RPC__in_opt</name> <name pos:line="3207" pos:column="38">IDebugBinder</name> <type:modifier pos:line="3207" pos:column="51">*</type:modifier></type><name pos:line="3207" pos:column="52">binder</name></decl></param>,
            <comment type="block" pos:line="3208" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3208" pos:column="24">__RPC__in_opt</name> <name pos:line="3208" pos:column="38">IDebugSymbolProvider</name> <type:modifier pos:line="3208" pos:column="59">*</type:modifier></type><name pos:line="3208" pos:column="60">pSymProv</name></decl></param>,
            <comment type="block" pos:line="3209" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3209" pos:column="24">__RPC__in_opt</name> <name pos:line="3209" pos:column="38">IDebugAddress</name> <type:modifier pos:line="3209" pos:column="52">*</type:modifier></type><name pos:line="3209" pos:column="53">pAddress</name></decl></param>,
            <comment type="block" pos:line="3210" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3210" pos:column="24">__RPC__in_opt</name> <name pos:line="3210" pos:column="38">IEEVisualizerDataProvider</name> <type:modifier pos:line="3210" pos:column="64">*</type:modifier></type><name pos:line="3210" pos:column="65">dataProvider</name></decl></param>,
            <comment type="block" pos:line="3211" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3211" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3211" pos:column="46">IEEVisualizerService</name> <type:modifier pos:line="3211" pos:column="67">*</type:modifier><type:modifier pos:line="3211" pos:column="68">*</type:modifier></type><name pos:line="3211" pos:column="69">ppService</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3213" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3214" pos:column="7">IEEVisualizerServiceProviderVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3216" pos:column="5">interface</name></type> <name pos:line="3216" pos:column="15">IEEVisualizerServiceProvider</name>
    <argument_list pos:line="3217" pos:column="5">{
        <argument><expr><name pos:line="3218" pos:column="9">CONST_VTBL</name> struct <name pos:line="3218" pos:column="27">IEEVisualizerServiceProviderVtbl</name> <op:operator pos:line="3218" pos:column="60">*</op:operator><name pos:line="3218" pos:column="61">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3223" pos:column="1">#<cpp:directive pos:line="3223" pos:column="2">ifdef</cpp:directive> <name pos:line="3223" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3226" pos:column="1">#<cpp:directive pos:line="3226" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3226" pos:column="9">IEEVisualizerServiceProvider_QueryInterface</name><parameter_list pos:line="3226" pos:column="52">(<param><type><name pos:line="3226" pos:column="53">This</name></type></param>,<param><type><name pos:line="3226" pos:column="58">riid</name></type></param>,<param><type><name pos:line="3226" pos:column="63">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3227" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3229" pos:column="1">#<cpp:directive pos:line="3229" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3229" pos:column="9">IEEVisualizerServiceProvider_AddRef</name><parameter_list pos:line="3229" pos:column="44">(<param><type><name pos:line="3229" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3230" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3232" pos:column="1">#<cpp:directive pos:line="3232" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3232" pos:column="9">IEEVisualizerServiceProvider_Release</name><parameter_list pos:line="3232" pos:column="45">(<param><type><name pos:line="3232" pos:column="46">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3233" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3236" pos:column="1">#<cpp:directive pos:line="3236" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3236" pos:column="9">IEEVisualizerServiceProvider_CreateVisualizerService</name><parameter_list pos:line="3236" pos:column="61">(<param><type><name pos:line="3236" pos:column="62">This</name></type></param>,<param><type><name pos:line="3236" pos:column="67">binder</name></type></param>,<param><type><name pos:line="3236" pos:column="74">pSymProv</name></type></param>,<param><type><name pos:line="3236" pos:column="83">pAddress</name></type></param>,<param><type><name pos:line="3236" pos:column="92">dataProvider</name></type></param>,<param><type><name pos:line="3236" pos:column="105">ppService</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3237" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateVisualizerService(This,binder,pSymProv,pAddress,dataProvider,ppService) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3239" pos:column="1">#<cpp:directive pos:line="3239" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3239" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3242" pos:column="1">#<cpp:directive pos:line="3242" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3242" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3247" pos:column="1">#<cpp:directive pos:line="3247" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3247" pos:column="9">/* __IEEVisualizerServiceProvider_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3250" pos:column="1">#<cpp:directive pos:line="3250" pos:column="2">ifndef</cpp:directive> <name pos:line="3250" pos:column="9">__IDebugPointerObject_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3251" pos:column="1">#<cpp:directive pos:line="3251" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3251" pos:column="9">__IDebugPointerObject_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3253" pos:column="1">/* interface IDebugPointerObject */</comment>
<comment type="block" pos:line="3254" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3257" pos:column="1">EXTERN_C</name> <specifier pos:line="3257" pos:column="10">const</specifier> <name pos:line="3257" pos:column="16">IID</name></type> <name pos:line="3257" pos:column="20">IID_IDebugPointerObject</name></decl>;</decl_stmt>

<cpp:if pos:line="3259" pos:column="1">#<cpp:directive pos:line="3259" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3259" pos:column="5">defined</name><argument_list pos:line="3259" pos:column="12">(<argument><expr><name pos:line="3259" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3259" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3259" pos:column="29">!</op:operator><call><name pos:line="3259" pos:column="30">defined</name><argument_list pos:line="3259" pos:column="37">(<argument><expr><name pos:line="3259" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3261" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3261" pos:column="19">(<argument pos:line="3261" pos:column="20">"112756A1-3F04-4ccd-BFD6-ACB4BCA614C9"</argument>)</argument_list></macro>
    <label><name pos:line="3262" pos:column="5">IDebugPointerObject</name> :</label> <expr_stmt><expr pos:line="3262" pos:column="27">public <name pos:line="3262" pos:column="34">IDebugObject</name>
    <block pos:line="3263" pos:column="5">{
    <expr pos:line="3264" pos:column="5">public<op:operator pos:line="3264" pos:column="11">:</op:operator>
        virtual <name pos:line="3265" pos:column="17">HRESULT</name> <name pos:line="3265" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3265" pos:column="43">Dereference</name><argument_list pos:line="3265" pos:column="54">( 
            <comment type="block" pos:line="3266" pos:column="13">/* [in] */</comment> <argument pos:line="3266" pos:column="24">DWORD dwIndex</argument>,
            <comment type="block" pos:line="3267" pos:column="13">/* [out] */</comment> <argument pos:line="3267" pos:column="25">__RPC__deref_out_opt IDebugObject **ppObject</argument>)</argument_list></macro> <op:operator pos:line="3267" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="3267" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="3269" pos:column="9">virtual <name pos:line="3269" pos:column="17">HRESULT</name> <name pos:line="3269" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3269" pos:column="43">GetBytes</name><argument_list pos:line="3269" pos:column="51">( 
            <comment type="block" pos:line="3270" pos:column="13">/* [in] */</comment> <argument pos:line="3270" pos:column="24">DWORD dwStart</argument>,
            <comment type="block" pos:line="3271" pos:column="13">/* [in] */</comment> <argument pos:line="3271" pos:column="24">DWORD dwCount</argument>,
            <comment type="block" pos:line="3272" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="3272" pos:column="45">__RPC__out_ecount_part(dwCount, dwCount) BYTE *pBytes</argument>,
            <comment type="block" pos:line="3273" pos:column="13">/* [out] */</comment> <argument pos:line="3273" pos:column="25">__RPC__out DWORD *pdwBytes</argument>)</argument_list></macro> <op:operator pos:line="3273" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="3273" pos:column="55">0</lit:literal></expr>;
        
        <expr pos:line="3275" pos:column="9">virtual <name pos:line="3275" pos:column="17">HRESULT</name> <name pos:line="3275" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3275" pos:column="43">SetBytes</name><argument_list pos:line="3275" pos:column="51">( 
            <comment type="block" pos:line="3276" pos:column="13">/* [in] */</comment> <argument pos:line="3276" pos:column="24">DWORD dwStart</argument>,
            <comment type="block" pos:line="3277" pos:column="13">/* [in] */</comment> <argument pos:line="3277" pos:column="24">DWORD dwCount</argument>,
            <comment type="block" pos:line="3278" pos:column="13">/* [length_is][size_is][in] */</comment> <argument pos:line="3278" pos:column="44">__RPC__in_ecount_part(dwCount, dwCount) BYTE *pBytes</argument>,
            <comment type="block" pos:line="3279" pos:column="13">/* [out] */</comment> <argument pos:line="3279" pos:column="25">__RPC__out DWORD *pdwBytes</argument>)</argument_list></macro> <op:operator pos:line="3279" pos:column="53">=</op:operator> <lit:literal type="number" pos:line="3279" pos:column="55">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3283" pos:column="1">#<cpp:directive pos:line="3283" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3283" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3285" pos:column="5">typedef <type><struct pos:line="3285" pos:column="13">struct <name pos:line="3285" pos:column="20">IDebugPointerObjectVtbl</name>
    <block pos:line="3286" pos:column="5">{<public type="default" pos:line="3286" pos:column="6">
        <function_decl><type><name pos:line="3287" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3289" pos:column="9">HRESULT</name></type> ( <name pos:line="3289" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3289" pos:column="37">*</type:modifier><name pos:line="3289" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3289" pos:column="54">( 
            <param><decl><type><name pos:line="3290" pos:column="13">IDebugPointerObject</name> <type:modifier pos:line="3290" pos:column="33">*</type:modifier></type> <name pos:line="3290" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3291" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3291" pos:column="24">__RPC__in</name> <name pos:line="3291" pos:column="34">REFIID</name></type> <name pos:line="3291" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3292" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3293" pos:column="13">__RPC__deref_out</name>  <name pos:line="3293" pos:column="31">void</name> <type:modifier pos:line="3293" pos:column="36">*</type:modifier><type:modifier pos:line="3293" pos:column="37">*</type:modifier></type><name pos:line="3293" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3295" pos:column="9">ULONG</name></type> ( <name pos:line="3295" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3295" pos:column="35">*</type:modifier><name pos:line="3295" pos:column="36">AddRef</name> )<parameter_list pos:line="3295" pos:column="44">( 
            <param><decl><type><name pos:line="3296" pos:column="13">IDebugPointerObject</name> <type:modifier pos:line="3296" pos:column="33">*</type:modifier></type> <name pos:line="3296" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3298" pos:column="9">ULONG</name></type> ( <name pos:line="3298" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3298" pos:column="35">*</type:modifier><name pos:line="3298" pos:column="36">Release</name> )<parameter_list pos:line="3298" pos:column="45">( 
            <param><decl><type><name pos:line="3299" pos:column="13">IDebugPointerObject</name> <type:modifier pos:line="3299" pos:column="33">*</type:modifier></type> <name pos:line="3299" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3301" pos:column="9">HRESULT</name></type> ( <name pos:line="3301" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3301" pos:column="37">*</type:modifier><name pos:line="3301" pos:column="38">GetSize</name> )<parameter_list pos:line="3301" pos:column="47">( 
            <param><decl><type><name pos:line="3302" pos:column="13">IDebugPointerObject</name> <type:modifier pos:line="3302" pos:column="33">*</type:modifier></type> <name pos:line="3302" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3303" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3303" pos:column="25">__RPC__out</name> <name pos:line="3303" pos:column="36">UINT</name> <type:modifier pos:line="3303" pos:column="41">*</type:modifier></type><name pos:line="3303" pos:column="42">pnSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3305" pos:column="9">HRESULT</name> <argument_list pos:line="3305" pos:column="17">( <argument pos:line="3305" pos:column="19">STDMETHODCALLTYPE *GetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3305" pos:column="48">(</op:operator> 
            <name pos:line="3306" pos:column="13">IDebugPointerObject</name> <op:operator pos:line="3306" pos:column="33">*</op:operator> <name pos:line="3306" pos:column="35">This</name><op:operator pos:line="3306" pos:column="39">,</op:operator>
            <comment type="block" pos:line="3307" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="3307" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="3307" pos:column="67">(<argument pos:line="3307" pos:column="68">nSize</argument>, <argument pos:line="3307" pos:column="75">nSize</argument>)</argument_list></macro> <name pos:line="3307" pos:column="82">BYTE</name> <op:operator pos:line="3307" pos:column="87">*</op:operator><name pos:line="3307" pos:column="88">pValue</name><op:operator pos:line="3307" pos:column="94">,</op:operator>
            <comment type="block" pos:line="3308" pos:column="13">/* [in] */</comment> <name pos:line="3308" pos:column="24">UINT</name> <name pos:line="3308" pos:column="29">nSize</name><op:operator pos:line="3308" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="3310" pos:column="9">HRESULT</name> <argument_list pos:line="3310" pos:column="17">( <argument pos:line="3310" pos:column="19">STDMETHODCALLTYPE *SetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3310" pos:column="48">(</op:operator> 
            <name pos:line="3311" pos:column="13">IDebugPointerObject</name> <op:operator pos:line="3311" pos:column="33">*</op:operator> <name pos:line="3311" pos:column="35">This</name><op:operator pos:line="3311" pos:column="39">,</op:operator>
            <comment type="block" pos:line="3312" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3312" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3312" pos:column="54">(<argument pos:line="3312" pos:column="55">nSize</argument>)</argument_list></macro> <name pos:line="3312" pos:column="62">BYTE</name> <op:operator pos:line="3312" pos:column="67">*</op:operator><name pos:line="3312" pos:column="68">pValue</name><op:operator pos:line="3312" pos:column="74">,</op:operator>
            <comment type="block" pos:line="3313" pos:column="13">/* [in] */</comment> <name pos:line="3313" pos:column="24">UINT</name> <name pos:line="3313" pos:column="29">nSize</name><op:operator pos:line="3313" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3315" pos:column="9">HRESULT</name></type> ( <name pos:line="3315" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3315" pos:column="37">*</type:modifier><name pos:line="3315" pos:column="38">SetReferenceValue</name> )<parameter_list pos:line="3315" pos:column="57">( 
            <param><decl><type><name pos:line="3316" pos:column="13">IDebugPointerObject</name> <type:modifier pos:line="3316" pos:column="33">*</type:modifier></type> <name pos:line="3316" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3317" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3317" pos:column="24">__RPC__in_opt</name> <name pos:line="3317" pos:column="38">IDebugObject</name> <type:modifier pos:line="3317" pos:column="51">*</type:modifier></type><name pos:line="3317" pos:column="52">pObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3319" pos:column="9">HRESULT</name></type> ( <name pos:line="3319" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3319" pos:column="37">*</type:modifier><name pos:line="3319" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="3319" pos:column="56">( 
            <param><decl><type><name pos:line="3320" pos:column="13">IDebugPointerObject</name> <type:modifier pos:line="3320" pos:column="33">*</type:modifier></type> <name pos:line="3320" pos:column="35">This</name></decl></param>,
            <param><decl><type><name pos:line="3321" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="3321" pos:column="33">IDebugMemoryContext2</name> <type:modifier pos:line="3321" pos:column="54">*</type:modifier><type:modifier pos:line="3321" pos:column="55">*</type:modifier></type><name pos:line="3321" pos:column="56">pContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3323" pos:column="9">HRESULT</name></type> ( <name pos:line="3323" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3323" pos:column="37">*</type:modifier><name pos:line="3323" pos:column="38">GetManagedDebugObject</name> )<parameter_list pos:line="3323" pos:column="61">( 
            <param><decl><type><name pos:line="3324" pos:column="13">IDebugPointerObject</name> <type:modifier pos:line="3324" pos:column="33">*</type:modifier></type> <name pos:line="3324" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3325" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3325" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3325" pos:column="46">IDebugManagedObject</name> <type:modifier pos:line="3325" pos:column="66">*</type:modifier><type:modifier pos:line="3325" pos:column="67">*</type:modifier></type><name pos:line="3325" pos:column="68">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3327" pos:column="9">HRESULT</name></type> ( <name pos:line="3327" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3327" pos:column="37">*</type:modifier><name pos:line="3327" pos:column="38">IsNullReference</name> )<parameter_list pos:line="3327" pos:column="55">( 
            <param><decl><type><name pos:line="3328" pos:column="13">IDebugPointerObject</name> <type:modifier pos:line="3328" pos:column="33">*</type:modifier></type> <name pos:line="3328" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3329" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3329" pos:column="25">__RPC__out</name> <name pos:line="3329" pos:column="36">BOOL</name> <type:modifier pos:line="3329" pos:column="41">*</type:modifier></type><name pos:line="3329" pos:column="42">pfIsNull</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3331" pos:column="9">HRESULT</name></type> ( <name pos:line="3331" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3331" pos:column="37">*</type:modifier><name pos:line="3331" pos:column="38">IsEqual</name> )<parameter_list pos:line="3331" pos:column="47">( 
            <param><decl><type><name pos:line="3332" pos:column="13">IDebugPointerObject</name> <type:modifier pos:line="3332" pos:column="33">*</type:modifier></type> <name pos:line="3332" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3333" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3333" pos:column="24">__RPC__in_opt</name> <name pos:line="3333" pos:column="38">IDebugObject</name> <type:modifier pos:line="3333" pos:column="51">*</type:modifier></type><name pos:line="3333" pos:column="52">pObject</name></decl></param>,
            <comment type="block" pos:line="3334" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3334" pos:column="25">__RPC__out</name> <name pos:line="3334" pos:column="36">BOOL</name> <type:modifier pos:line="3334" pos:column="41">*</type:modifier></type><name pos:line="3334" pos:column="42">pfIsEqual</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3336" pos:column="9">HRESULT</name></type> ( <name pos:line="3336" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3336" pos:column="37">*</type:modifier><name pos:line="3336" pos:column="38">IsReadOnly</name> )<parameter_list pos:line="3336" pos:column="50">( 
            <param><decl><type><name pos:line="3337" pos:column="13">IDebugPointerObject</name> <type:modifier pos:line="3337" pos:column="33">*</type:modifier></type> <name pos:line="3337" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3338" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3338" pos:column="25">__RPC__out</name> <name pos:line="3338" pos:column="36">BOOL</name> <type:modifier pos:line="3338" pos:column="41">*</type:modifier></type><name pos:line="3338" pos:column="42">pfIsReadOnly</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3340" pos:column="9">HRESULT</name></type> ( <name pos:line="3340" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3340" pos:column="37">*</type:modifier><name pos:line="3340" pos:column="38">IsProxy</name> )<parameter_list pos:line="3340" pos:column="47">( 
            <param><decl><type><name pos:line="3341" pos:column="13">IDebugPointerObject</name> <type:modifier pos:line="3341" pos:column="33">*</type:modifier></type> <name pos:line="3341" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3342" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3342" pos:column="25">__RPC__out</name> <name pos:line="3342" pos:column="36">BOOL</name> <type:modifier pos:line="3342" pos:column="41">*</type:modifier></type><name pos:line="3342" pos:column="42">pfIsProxy</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3344" pos:column="9">HRESULT</name></type> ( <name pos:line="3344" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3344" pos:column="37">*</type:modifier><name pos:line="3344" pos:column="38">Dereference</name> )<parameter_list pos:line="3344" pos:column="51">( 
            <param><decl><type><name pos:line="3345" pos:column="13">IDebugPointerObject</name> <type:modifier pos:line="3345" pos:column="33">*</type:modifier></type> <name pos:line="3345" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="3346" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3346" pos:column="24">DWORD</name></type> <name pos:line="3346" pos:column="30">dwIndex</name></decl></param>,
            <comment type="block" pos:line="3347" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3347" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3347" pos:column="46">IDebugObject</name> <type:modifier pos:line="3347" pos:column="59">*</type:modifier><type:modifier pos:line="3347" pos:column="60">*</type:modifier></type><name pos:line="3347" pos:column="61">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3349" pos:column="9">HRESULT</name> <argument_list pos:line="3349" pos:column="17">( <argument pos:line="3349" pos:column="19">STDMETHODCALLTYPE *GetBytes</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3349" pos:column="48">(</op:operator> 
            <name pos:line="3350" pos:column="13">IDebugPointerObject</name> <op:operator pos:line="3350" pos:column="33">*</op:operator> <name pos:line="3350" pos:column="35">This</name><op:operator pos:line="3350" pos:column="39">,</op:operator>
            <comment type="block" pos:line="3351" pos:column="13">/* [in] */</comment> <name pos:line="3351" pos:column="24">DWORD</name> <name pos:line="3351" pos:column="30">dwStart</name><op:operator pos:line="3351" pos:column="37">,</op:operator>
            <comment type="block" pos:line="3352" pos:column="13">/* [in] */</comment> <name pos:line="3352" pos:column="24">DWORD</name> <name pos:line="3352" pos:column="30">dwCount</name><op:operator pos:line="3352" pos:column="37">,</op:operator>
            <comment type="block" pos:line="3353" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="3353" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="3353" pos:column="67">(<argument pos:line="3353" pos:column="68">dwCount</argument>, <argument pos:line="3353" pos:column="77">dwCount</argument>)</argument_list></macro> <name pos:line="3353" pos:column="86">BYTE</name> <op:operator pos:line="3353" pos:column="91">*</op:operator><name pos:line="3353" pos:column="92">pBytes</name><op:operator pos:line="3353" pos:column="98">,</op:operator>
            <comment type="block" pos:line="3354" pos:column="13">/* [out] */</comment> <name pos:line="3354" pos:column="25">__RPC__out</name> <name pos:line="3354" pos:column="36">DWORD</name> <op:operator pos:line="3354" pos:column="42">*</op:operator><name pos:line="3354" pos:column="43">pdwBytes</name><op:operator pos:line="3354" pos:column="51">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="3356" pos:column="9">HRESULT</name> <argument_list pos:line="3356" pos:column="17">( <argument pos:line="3356" pos:column="19">STDMETHODCALLTYPE *SetBytes</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3356" pos:column="48">(</op:operator> 
            <name pos:line="3357" pos:column="13">IDebugPointerObject</name> <op:operator pos:line="3357" pos:column="33">*</op:operator> <name pos:line="3357" pos:column="35">This</name><op:operator pos:line="3357" pos:column="39">,</op:operator>
            <comment type="block" pos:line="3358" pos:column="13">/* [in] */</comment> <name pos:line="3358" pos:column="24">DWORD</name> <name pos:line="3358" pos:column="30">dwStart</name><op:operator pos:line="3358" pos:column="37">,</op:operator>
            <comment type="block" pos:line="3359" pos:column="13">/* [in] */</comment> <name pos:line="3359" pos:column="24">DWORD</name> <name pos:line="3359" pos:column="30">dwCount</name><op:operator pos:line="3359" pos:column="37">,</op:operator>
            <comment type="block" pos:line="3360" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="3360" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="3360" pos:column="65">(<argument pos:line="3360" pos:column="66">dwCount</argument>, <argument pos:line="3360" pos:column="75">dwCount</argument>)</argument_list></macro> <name pos:line="3360" pos:column="84">BYTE</name> <op:operator pos:line="3360" pos:column="89">*</op:operator><name pos:line="3360" pos:column="90">pBytes</name><op:operator pos:line="3360" pos:column="96">,</op:operator>
            <comment type="block" pos:line="3361" pos:column="13">/* [out] */</comment> <name pos:line="3361" pos:column="25">__RPC__out</name> <name pos:line="3361" pos:column="36">DWORD</name> <op:operator pos:line="3361" pos:column="42">*</op:operator><name pos:line="3361" pos:column="43">pdwBytes</name><op:operator pos:line="3361" pos:column="51">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="3363" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3364" pos:column="7">IDebugPointerObjectVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3366" pos:column="5">interface</name></type> <name pos:line="3366" pos:column="15">IDebugPointerObject</name>
    <argument_list pos:line="3367" pos:column="5">{
        <argument><expr><name pos:line="3368" pos:column="9">CONST_VTBL</name> struct <name pos:line="3368" pos:column="27">IDebugPointerObjectVtbl</name> <op:operator pos:line="3368" pos:column="51">*</op:operator><name pos:line="3368" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3373" pos:column="1">#<cpp:directive pos:line="3373" pos:column="2">ifdef</cpp:directive> <name pos:line="3373" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3376" pos:column="1">#<cpp:directive pos:line="3376" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3376" pos:column="9">IDebugPointerObject_QueryInterface</name><parameter_list pos:line="3376" pos:column="43">(<param><type><name pos:line="3376" pos:column="44">This</name></type></param>,<param><type><name pos:line="3376" pos:column="49">riid</name></type></param>,<param><type><name pos:line="3376" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3377" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3379" pos:column="1">#<cpp:directive pos:line="3379" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3379" pos:column="9">IDebugPointerObject_AddRef</name><parameter_list pos:line="3379" pos:column="35">(<param><type><name pos:line="3379" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3380" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3382" pos:column="1">#<cpp:directive pos:line="3382" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3382" pos:column="9">IDebugPointerObject_Release</name><parameter_list pos:line="3382" pos:column="36">(<param><type><name pos:line="3382" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3383" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3386" pos:column="1">#<cpp:directive pos:line="3386" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3386" pos:column="9">IDebugPointerObject_GetSize</name><parameter_list pos:line="3386" pos:column="36">(<param><type><name pos:line="3386" pos:column="37">This</name></type></param>,<param><type><name pos:line="3386" pos:column="42">pnSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3387" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pnSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="3389" pos:column="1">#<cpp:directive pos:line="3389" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3389" pos:column="9">IDebugPointerObject_GetValue</name><parameter_list pos:line="3389" pos:column="37">(<param><type><name pos:line="3389" pos:column="38">This</name></type></param>,<param><type><name pos:line="3389" pos:column="43">pValue</name></type></param>,<param><type><name pos:line="3389" pos:column="50">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3390" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="3392" pos:column="1">#<cpp:directive pos:line="3392" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3392" pos:column="9">IDebugPointerObject_SetValue</name><parameter_list pos:line="3392" pos:column="37">(<param><type><name pos:line="3392" pos:column="38">This</name></type></param>,<param><type><name pos:line="3392" pos:column="43">pValue</name></type></param>,<param><type><name pos:line="3392" pos:column="50">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3393" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="3395" pos:column="1">#<cpp:directive pos:line="3395" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3395" pos:column="9">IDebugPointerObject_SetReferenceValue</name><parameter_list pos:line="3395" pos:column="46">(<param><type><name pos:line="3395" pos:column="47">This</name></type></param>,<param><type><name pos:line="3395" pos:column="52">pObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3396" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetReferenceValue(This,pObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3398" pos:column="1">#<cpp:directive pos:line="3398" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3398" pos:column="9">IDebugPointerObject_GetMemoryContext</name><parameter_list pos:line="3398" pos:column="45">(<param><type><name pos:line="3398" pos:column="46">This</name></type></param>,<param><type><name pos:line="3398" pos:column="51">pContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3399" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,pContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="3401" pos:column="1">#<cpp:directive pos:line="3401" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3401" pos:column="9">IDebugPointerObject_GetManagedDebugObject</name><parameter_list pos:line="3401" pos:column="50">(<param><type><name pos:line="3401" pos:column="51">This</name></type></param>,<param><type><name pos:line="3401" pos:column="56">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3402" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetManagedDebugObject(This,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3404" pos:column="1">#<cpp:directive pos:line="3404" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3404" pos:column="9">IDebugPointerObject_IsNullReference</name><parameter_list pos:line="3404" pos:column="44">(<param><type><name pos:line="3404" pos:column="45">This</name></type></param>,<param><type><name pos:line="3404" pos:column="50">pfIsNull</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3405" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsNullReference(This,pfIsNull) )</cpp:value></cpp:define> 

<cpp:define pos:line="3407" pos:column="1">#<cpp:directive pos:line="3407" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3407" pos:column="9">IDebugPointerObject_IsEqual</name><parameter_list pos:line="3407" pos:column="36">(<param><type><name pos:line="3407" pos:column="37">This</name></type></param>,<param><type><name pos:line="3407" pos:column="42">pObject</name></type></param>,<param><type><name pos:line="3407" pos:column="50">pfIsEqual</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3408" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsEqual(This,pObject,pfIsEqual) )</cpp:value></cpp:define> 

<cpp:define pos:line="3410" pos:column="1">#<cpp:directive pos:line="3410" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3410" pos:column="9">IDebugPointerObject_IsReadOnly</name><parameter_list pos:line="3410" pos:column="39">(<param><type><name pos:line="3410" pos:column="40">This</name></type></param>,<param><type><name pos:line="3410" pos:column="45">pfIsReadOnly</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3411" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly(This,pfIsReadOnly) )</cpp:value></cpp:define> 

<cpp:define pos:line="3413" pos:column="1">#<cpp:directive pos:line="3413" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3413" pos:column="9">IDebugPointerObject_IsProxy</name><parameter_list pos:line="3413" pos:column="36">(<param><type><name pos:line="3413" pos:column="37">This</name></type></param>,<param><type><name pos:line="3413" pos:column="42">pfIsProxy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3414" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsProxy(This,pfIsProxy) )</cpp:value></cpp:define> 


<cpp:define pos:line="3417" pos:column="1">#<cpp:directive pos:line="3417" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3417" pos:column="9">IDebugPointerObject_Dereference</name><parameter_list pos:line="3417" pos:column="40">(<param><type><name pos:line="3417" pos:column="41">This</name></type></param>,<param><type><name pos:line="3417" pos:column="46">dwIndex</name></type></param>,<param><type><name pos:line="3417" pos:column="54">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3418" pos:column="5">( (This)-&gt;lpVtbl -&gt; Dereference(This,dwIndex,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3420" pos:column="1">#<cpp:directive pos:line="3420" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3420" pos:column="9">IDebugPointerObject_GetBytes</name><parameter_list pos:line="3420" pos:column="37">(<param><type><name pos:line="3420" pos:column="38">This</name></type></param>,<param><type><name pos:line="3420" pos:column="43">dwStart</name></type></param>,<param><type><name pos:line="3420" pos:column="51">dwCount</name></type></param>,<param><type><name pos:line="3420" pos:column="59">pBytes</name></type></param>,<param><type><name pos:line="3420" pos:column="66">pdwBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3421" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBytes(This,dwStart,dwCount,pBytes,pdwBytes) )</cpp:value></cpp:define> 

<cpp:define pos:line="3423" pos:column="1">#<cpp:directive pos:line="3423" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3423" pos:column="9">IDebugPointerObject_SetBytes</name><parameter_list pos:line="3423" pos:column="37">(<param><type><name pos:line="3423" pos:column="38">This</name></type></param>,<param><type><name pos:line="3423" pos:column="43">dwStart</name></type></param>,<param><type><name pos:line="3423" pos:column="51">dwCount</name></type></param>,<param><type><name pos:line="3423" pos:column="59">pBytes</name></type></param>,<param><type><name pos:line="3423" pos:column="66">pdwBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3424" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetBytes(This,dwStart,dwCount,pBytes,pdwBytes) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3426" pos:column="1">#<cpp:directive pos:line="3426" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3426" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3429" pos:column="1">#<cpp:directive pos:line="3429" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3429" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3434" pos:column="1">#<cpp:directive pos:line="3434" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3434" pos:column="9">/* __IDebugPointerObject_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3437" pos:column="1">#<cpp:directive pos:line="3437" pos:column="2">ifndef</cpp:directive> <name pos:line="3437" pos:column="9">__IDebugPointerObject2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3438" pos:column="1">#<cpp:directive pos:line="3438" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3438" pos:column="9">__IDebugPointerObject2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3440" pos:column="1">/* interface IDebugPointerObject2 */</comment>
<comment type="block" pos:line="3441" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3444" pos:column="1">EXTERN_C</name> <specifier pos:line="3444" pos:column="10">const</specifier> <name pos:line="3444" pos:column="16">IID</name></type> <name pos:line="3444" pos:column="20">IID_IDebugPointerObject2</name></decl>;</decl_stmt>

<cpp:if pos:line="3446" pos:column="1">#<cpp:directive pos:line="3446" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3446" pos:column="5">defined</name><argument_list pos:line="3446" pos:column="12">(<argument><expr><name pos:line="3446" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3446" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3446" pos:column="29">!</op:operator><call><name pos:line="3446" pos:column="30">defined</name><argument_list pos:line="3446" pos:column="37">(<argument><expr><name pos:line="3446" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3448" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3448" pos:column="19">(<argument pos:line="3448" pos:column="20">"BF032216-2C7F-4682-84C1-76EF432D840B"</argument>)</argument_list></macro>
    <label><name pos:line="3449" pos:column="5">IDebugPointerObject2</name> :</label> <expr_stmt><expr pos:line="3449" pos:column="28">public <name pos:line="3449" pos:column="35">IDebugObject</name>
    <block pos:line="3450" pos:column="5">{
    <expr pos:line="3451" pos:column="5">public<op:operator pos:line="3451" pos:column="11">:</op:operator>
        virtual <name pos:line="3452" pos:column="17">HRESULT</name> <name pos:line="3452" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3452" pos:column="43">ComputePointerAddress</name><argument_list pos:line="3452" pos:column="64">( 
            <comment type="block" pos:line="3453" pos:column="13">/* [out] */</comment> <argument pos:line="3453" pos:column="25">__RPC__out DWORD *pdwAddress</argument>)</argument_list></macro> <op:operator pos:line="3453" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="3453" pos:column="57">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3457" pos:column="1">#<cpp:directive pos:line="3457" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3457" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3459" pos:column="5">typedef <type><struct pos:line="3459" pos:column="13">struct <name pos:line="3459" pos:column="20">IDebugPointerObject2Vtbl</name>
    <block pos:line="3460" pos:column="5">{<public type="default" pos:line="3460" pos:column="6">
        <function_decl><type><name pos:line="3461" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3463" pos:column="9">HRESULT</name></type> ( <name pos:line="3463" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3463" pos:column="37">*</type:modifier><name pos:line="3463" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3463" pos:column="54">( 
            <param><decl><type><name pos:line="3464" pos:column="13">IDebugPointerObject2</name> <type:modifier pos:line="3464" pos:column="34">*</type:modifier></type> <name pos:line="3464" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3465" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3465" pos:column="24">__RPC__in</name> <name pos:line="3465" pos:column="34">REFIID</name></type> <name pos:line="3465" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3466" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3467" pos:column="13">__RPC__deref_out</name>  <name pos:line="3467" pos:column="31">void</name> <type:modifier pos:line="3467" pos:column="36">*</type:modifier><type:modifier pos:line="3467" pos:column="37">*</type:modifier></type><name pos:line="3467" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3469" pos:column="9">ULONG</name></type> ( <name pos:line="3469" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3469" pos:column="35">*</type:modifier><name pos:line="3469" pos:column="36">AddRef</name> )<parameter_list pos:line="3469" pos:column="44">( 
            <param><decl><type><name pos:line="3470" pos:column="13">IDebugPointerObject2</name> <type:modifier pos:line="3470" pos:column="34">*</type:modifier></type> <name pos:line="3470" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3472" pos:column="9">ULONG</name></type> ( <name pos:line="3472" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3472" pos:column="35">*</type:modifier><name pos:line="3472" pos:column="36">Release</name> )<parameter_list pos:line="3472" pos:column="45">( 
            <param><decl><type><name pos:line="3473" pos:column="13">IDebugPointerObject2</name> <type:modifier pos:line="3473" pos:column="34">*</type:modifier></type> <name pos:line="3473" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3475" pos:column="9">HRESULT</name></type> ( <name pos:line="3475" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3475" pos:column="37">*</type:modifier><name pos:line="3475" pos:column="38">GetSize</name> )<parameter_list pos:line="3475" pos:column="47">( 
            <param><decl><type><name pos:line="3476" pos:column="13">IDebugPointerObject2</name> <type:modifier pos:line="3476" pos:column="34">*</type:modifier></type> <name pos:line="3476" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3477" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3477" pos:column="25">__RPC__out</name> <name pos:line="3477" pos:column="36">UINT</name> <type:modifier pos:line="3477" pos:column="41">*</type:modifier></type><name pos:line="3477" pos:column="42">pnSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3479" pos:column="9">HRESULT</name> <argument_list pos:line="3479" pos:column="17">( <argument pos:line="3479" pos:column="19">STDMETHODCALLTYPE *GetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3479" pos:column="48">(</op:operator> 
            <name pos:line="3480" pos:column="13">IDebugPointerObject2</name> <op:operator pos:line="3480" pos:column="34">*</op:operator> <name pos:line="3480" pos:column="36">This</name><op:operator pos:line="3480" pos:column="40">,</op:operator>
            <comment type="block" pos:line="3481" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="3481" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="3481" pos:column="67">(<argument pos:line="3481" pos:column="68">nSize</argument>, <argument pos:line="3481" pos:column="75">nSize</argument>)</argument_list></macro> <name pos:line="3481" pos:column="82">BYTE</name> <op:operator pos:line="3481" pos:column="87">*</op:operator><name pos:line="3481" pos:column="88">pValue</name><op:operator pos:line="3481" pos:column="94">,</op:operator>
            <comment type="block" pos:line="3482" pos:column="13">/* [in] */</comment> <name pos:line="3482" pos:column="24">UINT</name> <name pos:line="3482" pos:column="29">nSize</name><op:operator pos:line="3482" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="3484" pos:column="9">HRESULT</name> <argument_list pos:line="3484" pos:column="17">( <argument pos:line="3484" pos:column="19">STDMETHODCALLTYPE *SetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3484" pos:column="48">(</op:operator> 
            <name pos:line="3485" pos:column="13">IDebugPointerObject2</name> <op:operator pos:line="3485" pos:column="34">*</op:operator> <name pos:line="3485" pos:column="36">This</name><op:operator pos:line="3485" pos:column="40">,</op:operator>
            <comment type="block" pos:line="3486" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3486" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3486" pos:column="54">(<argument pos:line="3486" pos:column="55">nSize</argument>)</argument_list></macro> <name pos:line="3486" pos:column="62">BYTE</name> <op:operator pos:line="3486" pos:column="67">*</op:operator><name pos:line="3486" pos:column="68">pValue</name><op:operator pos:line="3486" pos:column="74">,</op:operator>
            <comment type="block" pos:line="3487" pos:column="13">/* [in] */</comment> <name pos:line="3487" pos:column="24">UINT</name> <name pos:line="3487" pos:column="29">nSize</name><op:operator pos:line="3487" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3489" pos:column="9">HRESULT</name></type> ( <name pos:line="3489" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3489" pos:column="37">*</type:modifier><name pos:line="3489" pos:column="38">SetReferenceValue</name> )<parameter_list pos:line="3489" pos:column="57">( 
            <param><decl><type><name pos:line="3490" pos:column="13">IDebugPointerObject2</name> <type:modifier pos:line="3490" pos:column="34">*</type:modifier></type> <name pos:line="3490" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3491" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3491" pos:column="24">__RPC__in_opt</name> <name pos:line="3491" pos:column="38">IDebugObject</name> <type:modifier pos:line="3491" pos:column="51">*</type:modifier></type><name pos:line="3491" pos:column="52">pObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3493" pos:column="9">HRESULT</name></type> ( <name pos:line="3493" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3493" pos:column="37">*</type:modifier><name pos:line="3493" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="3493" pos:column="56">( 
            <param><decl><type><name pos:line="3494" pos:column="13">IDebugPointerObject2</name> <type:modifier pos:line="3494" pos:column="34">*</type:modifier></type> <name pos:line="3494" pos:column="36">This</name></decl></param>,
            <param><decl><type><name pos:line="3495" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="3495" pos:column="33">IDebugMemoryContext2</name> <type:modifier pos:line="3495" pos:column="54">*</type:modifier><type:modifier pos:line="3495" pos:column="55">*</type:modifier></type><name pos:line="3495" pos:column="56">pContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3497" pos:column="9">HRESULT</name></type> ( <name pos:line="3497" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3497" pos:column="37">*</type:modifier><name pos:line="3497" pos:column="38">GetManagedDebugObject</name> )<parameter_list pos:line="3497" pos:column="61">( 
            <param><decl><type><name pos:line="3498" pos:column="13">IDebugPointerObject2</name> <type:modifier pos:line="3498" pos:column="34">*</type:modifier></type> <name pos:line="3498" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3499" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3499" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3499" pos:column="46">IDebugManagedObject</name> <type:modifier pos:line="3499" pos:column="66">*</type:modifier><type:modifier pos:line="3499" pos:column="67">*</type:modifier></type><name pos:line="3499" pos:column="68">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3501" pos:column="9">HRESULT</name></type> ( <name pos:line="3501" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3501" pos:column="37">*</type:modifier><name pos:line="3501" pos:column="38">IsNullReference</name> )<parameter_list pos:line="3501" pos:column="55">( 
            <param><decl><type><name pos:line="3502" pos:column="13">IDebugPointerObject2</name> <type:modifier pos:line="3502" pos:column="34">*</type:modifier></type> <name pos:line="3502" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3503" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3503" pos:column="25">__RPC__out</name> <name pos:line="3503" pos:column="36">BOOL</name> <type:modifier pos:line="3503" pos:column="41">*</type:modifier></type><name pos:line="3503" pos:column="42">pfIsNull</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3505" pos:column="9">HRESULT</name></type> ( <name pos:line="3505" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3505" pos:column="37">*</type:modifier><name pos:line="3505" pos:column="38">IsEqual</name> )<parameter_list pos:line="3505" pos:column="47">( 
            <param><decl><type><name pos:line="3506" pos:column="13">IDebugPointerObject2</name> <type:modifier pos:line="3506" pos:column="34">*</type:modifier></type> <name pos:line="3506" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3507" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3507" pos:column="24">__RPC__in_opt</name> <name pos:line="3507" pos:column="38">IDebugObject</name> <type:modifier pos:line="3507" pos:column="51">*</type:modifier></type><name pos:line="3507" pos:column="52">pObject</name></decl></param>,
            <comment type="block" pos:line="3508" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3508" pos:column="25">__RPC__out</name> <name pos:line="3508" pos:column="36">BOOL</name> <type:modifier pos:line="3508" pos:column="41">*</type:modifier></type><name pos:line="3508" pos:column="42">pfIsEqual</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3510" pos:column="9">HRESULT</name></type> ( <name pos:line="3510" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3510" pos:column="37">*</type:modifier><name pos:line="3510" pos:column="38">IsReadOnly</name> )<parameter_list pos:line="3510" pos:column="50">( 
            <param><decl><type><name pos:line="3511" pos:column="13">IDebugPointerObject2</name> <type:modifier pos:line="3511" pos:column="34">*</type:modifier></type> <name pos:line="3511" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3512" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3512" pos:column="25">__RPC__out</name> <name pos:line="3512" pos:column="36">BOOL</name> <type:modifier pos:line="3512" pos:column="41">*</type:modifier></type><name pos:line="3512" pos:column="42">pfIsReadOnly</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3514" pos:column="9">HRESULT</name></type> ( <name pos:line="3514" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3514" pos:column="37">*</type:modifier><name pos:line="3514" pos:column="38">IsProxy</name> )<parameter_list pos:line="3514" pos:column="47">( 
            <param><decl><type><name pos:line="3515" pos:column="13">IDebugPointerObject2</name> <type:modifier pos:line="3515" pos:column="34">*</type:modifier></type> <name pos:line="3515" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3516" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3516" pos:column="25">__RPC__out</name> <name pos:line="3516" pos:column="36">BOOL</name> <type:modifier pos:line="3516" pos:column="41">*</type:modifier></type><name pos:line="3516" pos:column="42">pfIsProxy</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3518" pos:column="9">HRESULT</name></type> ( <name pos:line="3518" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3518" pos:column="37">*</type:modifier><name pos:line="3518" pos:column="38">ComputePointerAddress</name> )<parameter_list pos:line="3518" pos:column="61">( 
            <param><decl><type><name pos:line="3519" pos:column="13">IDebugPointerObject2</name> <type:modifier pos:line="3519" pos:column="34">*</type:modifier></type> <name pos:line="3519" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3520" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3520" pos:column="25">__RPC__out</name> <name pos:line="3520" pos:column="36">DWORD</name> <type:modifier pos:line="3520" pos:column="42">*</type:modifier></type><name pos:line="3520" pos:column="43">pdwAddress</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3522" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3523" pos:column="7">IDebugPointerObject2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3525" pos:column="5">interface</name></type> <name pos:line="3525" pos:column="15">IDebugPointerObject2</name>
    <argument_list pos:line="3526" pos:column="5">{
        <argument><expr><name pos:line="3527" pos:column="9">CONST_VTBL</name> struct <name pos:line="3527" pos:column="27">IDebugPointerObject2Vtbl</name> <op:operator pos:line="3527" pos:column="52">*</op:operator><name pos:line="3527" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3532" pos:column="1">#<cpp:directive pos:line="3532" pos:column="2">ifdef</cpp:directive> <name pos:line="3532" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3535" pos:column="1">#<cpp:directive pos:line="3535" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3535" pos:column="9">IDebugPointerObject2_QueryInterface</name><parameter_list pos:line="3535" pos:column="44">(<param><type><name pos:line="3535" pos:column="45">This</name></type></param>,<param><type><name pos:line="3535" pos:column="50">riid</name></type></param>,<param><type><name pos:line="3535" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3536" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3538" pos:column="1">#<cpp:directive pos:line="3538" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3538" pos:column="9">IDebugPointerObject2_AddRef</name><parameter_list pos:line="3538" pos:column="36">(<param><type><name pos:line="3538" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3539" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3541" pos:column="1">#<cpp:directive pos:line="3541" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3541" pos:column="9">IDebugPointerObject2_Release</name><parameter_list pos:line="3541" pos:column="37">(<param><type><name pos:line="3541" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3542" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3545" pos:column="1">#<cpp:directive pos:line="3545" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3545" pos:column="9">IDebugPointerObject2_GetSize</name><parameter_list pos:line="3545" pos:column="37">(<param><type><name pos:line="3545" pos:column="38">This</name></type></param>,<param><type><name pos:line="3545" pos:column="43">pnSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3546" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pnSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="3548" pos:column="1">#<cpp:directive pos:line="3548" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3548" pos:column="9">IDebugPointerObject2_GetValue</name><parameter_list pos:line="3548" pos:column="38">(<param><type><name pos:line="3548" pos:column="39">This</name></type></param>,<param><type><name pos:line="3548" pos:column="44">pValue</name></type></param>,<param><type><name pos:line="3548" pos:column="51">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3549" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="3551" pos:column="1">#<cpp:directive pos:line="3551" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3551" pos:column="9">IDebugPointerObject2_SetValue</name><parameter_list pos:line="3551" pos:column="38">(<param><type><name pos:line="3551" pos:column="39">This</name></type></param>,<param><type><name pos:line="3551" pos:column="44">pValue</name></type></param>,<param><type><name pos:line="3551" pos:column="51">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3552" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="3554" pos:column="1">#<cpp:directive pos:line="3554" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3554" pos:column="9">IDebugPointerObject2_SetReferenceValue</name><parameter_list pos:line="3554" pos:column="47">(<param><type><name pos:line="3554" pos:column="48">This</name></type></param>,<param><type><name pos:line="3554" pos:column="53">pObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3555" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetReferenceValue(This,pObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3557" pos:column="1">#<cpp:directive pos:line="3557" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3557" pos:column="9">IDebugPointerObject2_GetMemoryContext</name><parameter_list pos:line="3557" pos:column="46">(<param><type><name pos:line="3557" pos:column="47">This</name></type></param>,<param><type><name pos:line="3557" pos:column="52">pContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3558" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,pContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="3560" pos:column="1">#<cpp:directive pos:line="3560" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3560" pos:column="9">IDebugPointerObject2_GetManagedDebugObject</name><parameter_list pos:line="3560" pos:column="51">(<param><type><name pos:line="3560" pos:column="52">This</name></type></param>,<param><type><name pos:line="3560" pos:column="57">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3561" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetManagedDebugObject(This,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3563" pos:column="1">#<cpp:directive pos:line="3563" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3563" pos:column="9">IDebugPointerObject2_IsNullReference</name><parameter_list pos:line="3563" pos:column="45">(<param><type><name pos:line="3563" pos:column="46">This</name></type></param>,<param><type><name pos:line="3563" pos:column="51">pfIsNull</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3564" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsNullReference(This,pfIsNull) )</cpp:value></cpp:define> 

<cpp:define pos:line="3566" pos:column="1">#<cpp:directive pos:line="3566" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3566" pos:column="9">IDebugPointerObject2_IsEqual</name><parameter_list pos:line="3566" pos:column="37">(<param><type><name pos:line="3566" pos:column="38">This</name></type></param>,<param><type><name pos:line="3566" pos:column="43">pObject</name></type></param>,<param><type><name pos:line="3566" pos:column="51">pfIsEqual</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3567" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsEqual(This,pObject,pfIsEqual) )</cpp:value></cpp:define> 

<cpp:define pos:line="3569" pos:column="1">#<cpp:directive pos:line="3569" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3569" pos:column="9">IDebugPointerObject2_IsReadOnly</name><parameter_list pos:line="3569" pos:column="40">(<param><type><name pos:line="3569" pos:column="41">This</name></type></param>,<param><type><name pos:line="3569" pos:column="46">pfIsReadOnly</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3570" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly(This,pfIsReadOnly) )</cpp:value></cpp:define> 

<cpp:define pos:line="3572" pos:column="1">#<cpp:directive pos:line="3572" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3572" pos:column="9">IDebugPointerObject2_IsProxy</name><parameter_list pos:line="3572" pos:column="37">(<param><type><name pos:line="3572" pos:column="38">This</name></type></param>,<param><type><name pos:line="3572" pos:column="43">pfIsProxy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3573" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsProxy(This,pfIsProxy) )</cpp:value></cpp:define> 


<cpp:define pos:line="3576" pos:column="1">#<cpp:directive pos:line="3576" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3576" pos:column="9">IDebugPointerObject2_ComputePointerAddress</name><parameter_list pos:line="3576" pos:column="51">(<param><type><name pos:line="3576" pos:column="52">This</name></type></param>,<param><type><name pos:line="3576" pos:column="57">pdwAddress</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3577" pos:column="5">( (This)-&gt;lpVtbl -&gt; ComputePointerAddress(This,pdwAddress) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3579" pos:column="1">#<cpp:directive pos:line="3579" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3579" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3582" pos:column="1">#<cpp:directive pos:line="3582" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3582" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3587" pos:column="1">#<cpp:directive pos:line="3587" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3587" pos:column="9">/* __IDebugPointerObject2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3590" pos:column="1">#<cpp:directive pos:line="3590" pos:column="2">ifndef</cpp:directive> <name pos:line="3590" pos:column="9">__IDebugPointerObject3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3591" pos:column="1">#<cpp:directive pos:line="3591" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3591" pos:column="9">__IDebugPointerObject3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3593" pos:column="1">/* interface IDebugPointerObject3 */</comment>
<comment type="block" pos:line="3594" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3597" pos:column="1">EXTERN_C</name> <specifier pos:line="3597" pos:column="10">const</specifier> <name pos:line="3597" pos:column="16">IID</name></type> <name pos:line="3597" pos:column="20">IID_IDebugPointerObject3</name></decl>;</decl_stmt>

<cpp:if pos:line="3599" pos:column="1">#<cpp:directive pos:line="3599" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3599" pos:column="5">defined</name><argument_list pos:line="3599" pos:column="12">(<argument><expr><name pos:line="3599" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3599" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3599" pos:column="29">!</op:operator><call><name pos:line="3599" pos:column="30">defined</name><argument_list pos:line="3599" pos:column="37">(<argument><expr><name pos:line="3599" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3601" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3601" pos:column="19">(<argument pos:line="3601" pos:column="20">"B69D88F9-BC5A-4eb3-A43C-9AF3155F0632"</argument>)</argument_list></macro>
    <label><name pos:line="3602" pos:column="5">IDebugPointerObject3</name> :</label> <expr_stmt><expr pos:line="3602" pos:column="28">public <name pos:line="3602" pos:column="35">IDebugPointerObject</name>
    <block pos:line="3603" pos:column="5">{
    <expr pos:line="3604" pos:column="5">public<op:operator pos:line="3604" pos:column="11">:</op:operator>
        virtual <name pos:line="3605" pos:column="17">HRESULT</name> <name pos:line="3605" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3605" pos:column="43">GetPointerAddress</name><argument_list pos:line="3605" pos:column="60">( 
            <comment type="block" pos:line="3606" pos:column="13">/* [out] */</comment> <argument pos:line="3606" pos:column="25">__RPC__out UINT64 *puAddress</argument>)</argument_list></macro> <op:operator pos:line="3606" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="3606" pos:column="57">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3610" pos:column="1">#<cpp:directive pos:line="3610" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3610" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3612" pos:column="5">typedef <type><struct pos:line="3612" pos:column="13">struct <name pos:line="3612" pos:column="20">IDebugPointerObject3Vtbl</name>
    <block pos:line="3613" pos:column="5">{<public type="default" pos:line="3613" pos:column="6">
        <function_decl><type><name pos:line="3614" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3616" pos:column="9">HRESULT</name></type> ( <name pos:line="3616" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3616" pos:column="37">*</type:modifier><name pos:line="3616" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3616" pos:column="54">( 
            <param><decl><type><name pos:line="3617" pos:column="13">IDebugPointerObject3</name> <type:modifier pos:line="3617" pos:column="34">*</type:modifier></type> <name pos:line="3617" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3618" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3618" pos:column="24">__RPC__in</name> <name pos:line="3618" pos:column="34">REFIID</name></type> <name pos:line="3618" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3619" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3620" pos:column="13">__RPC__deref_out</name>  <name pos:line="3620" pos:column="31">void</name> <type:modifier pos:line="3620" pos:column="36">*</type:modifier><type:modifier pos:line="3620" pos:column="37">*</type:modifier></type><name pos:line="3620" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3622" pos:column="9">ULONG</name></type> ( <name pos:line="3622" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3622" pos:column="35">*</type:modifier><name pos:line="3622" pos:column="36">AddRef</name> )<parameter_list pos:line="3622" pos:column="44">( 
            <param><decl><type><name pos:line="3623" pos:column="13">IDebugPointerObject3</name> <type:modifier pos:line="3623" pos:column="34">*</type:modifier></type> <name pos:line="3623" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3625" pos:column="9">ULONG</name></type> ( <name pos:line="3625" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3625" pos:column="35">*</type:modifier><name pos:line="3625" pos:column="36">Release</name> )<parameter_list pos:line="3625" pos:column="45">( 
            <param><decl><type><name pos:line="3626" pos:column="13">IDebugPointerObject3</name> <type:modifier pos:line="3626" pos:column="34">*</type:modifier></type> <name pos:line="3626" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3628" pos:column="9">HRESULT</name></type> ( <name pos:line="3628" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3628" pos:column="37">*</type:modifier><name pos:line="3628" pos:column="38">GetSize</name> )<parameter_list pos:line="3628" pos:column="47">( 
            <param><decl><type><name pos:line="3629" pos:column="13">IDebugPointerObject3</name> <type:modifier pos:line="3629" pos:column="34">*</type:modifier></type> <name pos:line="3629" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3630" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3630" pos:column="25">__RPC__out</name> <name pos:line="3630" pos:column="36">UINT</name> <type:modifier pos:line="3630" pos:column="41">*</type:modifier></type><name pos:line="3630" pos:column="42">pnSize</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3632" pos:column="9">HRESULT</name> <argument_list pos:line="3632" pos:column="17">( <argument pos:line="3632" pos:column="19">STDMETHODCALLTYPE *GetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3632" pos:column="48">(</op:operator> 
            <name pos:line="3633" pos:column="13">IDebugPointerObject3</name> <op:operator pos:line="3633" pos:column="34">*</op:operator> <name pos:line="3633" pos:column="36">This</name><op:operator pos:line="3633" pos:column="40">,</op:operator>
            <comment type="block" pos:line="3634" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="3634" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="3634" pos:column="67">(<argument pos:line="3634" pos:column="68">nSize</argument>, <argument pos:line="3634" pos:column="75">nSize</argument>)</argument_list></macro> <name pos:line="3634" pos:column="82">BYTE</name> <op:operator pos:line="3634" pos:column="87">*</op:operator><name pos:line="3634" pos:column="88">pValue</name><op:operator pos:line="3634" pos:column="94">,</op:operator>
            <comment type="block" pos:line="3635" pos:column="13">/* [in] */</comment> <name pos:line="3635" pos:column="24">UINT</name> <name pos:line="3635" pos:column="29">nSize</name><op:operator pos:line="3635" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="3637" pos:column="9">HRESULT</name> <argument_list pos:line="3637" pos:column="17">( <argument pos:line="3637" pos:column="19">STDMETHODCALLTYPE *SetValue</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3637" pos:column="48">(</op:operator> 
            <name pos:line="3638" pos:column="13">IDebugPointerObject3</name> <op:operator pos:line="3638" pos:column="34">*</op:operator> <name pos:line="3638" pos:column="36">This</name><op:operator pos:line="3638" pos:column="40">,</op:operator>
            <comment type="block" pos:line="3639" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="3639" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="3639" pos:column="54">(<argument pos:line="3639" pos:column="55">nSize</argument>)</argument_list></macro> <name pos:line="3639" pos:column="62">BYTE</name> <op:operator pos:line="3639" pos:column="67">*</op:operator><name pos:line="3639" pos:column="68">pValue</name><op:operator pos:line="3639" pos:column="74">,</op:operator>
            <comment type="block" pos:line="3640" pos:column="13">/* [in] */</comment> <name pos:line="3640" pos:column="24">UINT</name> <name pos:line="3640" pos:column="29">nSize</name><op:operator pos:line="3640" pos:column="34">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3642" pos:column="9">HRESULT</name></type> ( <name pos:line="3642" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3642" pos:column="37">*</type:modifier><name pos:line="3642" pos:column="38">SetReferenceValue</name> )<parameter_list pos:line="3642" pos:column="57">( 
            <param><decl><type><name pos:line="3643" pos:column="13">IDebugPointerObject3</name> <type:modifier pos:line="3643" pos:column="34">*</type:modifier></type> <name pos:line="3643" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3644" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3644" pos:column="24">__RPC__in_opt</name> <name pos:line="3644" pos:column="38">IDebugObject</name> <type:modifier pos:line="3644" pos:column="51">*</type:modifier></type><name pos:line="3644" pos:column="52">pObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3646" pos:column="9">HRESULT</name></type> ( <name pos:line="3646" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3646" pos:column="37">*</type:modifier><name pos:line="3646" pos:column="38">GetMemoryContext</name> )<parameter_list pos:line="3646" pos:column="56">( 
            <param><decl><type><name pos:line="3647" pos:column="13">IDebugPointerObject3</name> <type:modifier pos:line="3647" pos:column="34">*</type:modifier></type> <name pos:line="3647" pos:column="36">This</name></decl></param>,
            <param><decl><type><name pos:line="3648" pos:column="13">__RPC__deref_in_opt</name> <name pos:line="3648" pos:column="33">IDebugMemoryContext2</name> <type:modifier pos:line="3648" pos:column="54">*</type:modifier><type:modifier pos:line="3648" pos:column="55">*</type:modifier></type><name pos:line="3648" pos:column="56">pContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3650" pos:column="9">HRESULT</name></type> ( <name pos:line="3650" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3650" pos:column="37">*</type:modifier><name pos:line="3650" pos:column="38">GetManagedDebugObject</name> )<parameter_list pos:line="3650" pos:column="61">( 
            <param><decl><type><name pos:line="3651" pos:column="13">IDebugPointerObject3</name> <type:modifier pos:line="3651" pos:column="34">*</type:modifier></type> <name pos:line="3651" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3652" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3652" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3652" pos:column="46">IDebugManagedObject</name> <type:modifier pos:line="3652" pos:column="66">*</type:modifier><type:modifier pos:line="3652" pos:column="67">*</type:modifier></type><name pos:line="3652" pos:column="68">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3654" pos:column="9">HRESULT</name></type> ( <name pos:line="3654" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3654" pos:column="37">*</type:modifier><name pos:line="3654" pos:column="38">IsNullReference</name> )<parameter_list pos:line="3654" pos:column="55">( 
            <param><decl><type><name pos:line="3655" pos:column="13">IDebugPointerObject3</name> <type:modifier pos:line="3655" pos:column="34">*</type:modifier></type> <name pos:line="3655" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3656" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3656" pos:column="25">__RPC__out</name> <name pos:line="3656" pos:column="36">BOOL</name> <type:modifier pos:line="3656" pos:column="41">*</type:modifier></type><name pos:line="3656" pos:column="42">pfIsNull</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3658" pos:column="9">HRESULT</name></type> ( <name pos:line="3658" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3658" pos:column="37">*</type:modifier><name pos:line="3658" pos:column="38">IsEqual</name> )<parameter_list pos:line="3658" pos:column="47">( 
            <param><decl><type><name pos:line="3659" pos:column="13">IDebugPointerObject3</name> <type:modifier pos:line="3659" pos:column="34">*</type:modifier></type> <name pos:line="3659" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3660" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3660" pos:column="24">__RPC__in_opt</name> <name pos:line="3660" pos:column="38">IDebugObject</name> <type:modifier pos:line="3660" pos:column="51">*</type:modifier></type><name pos:line="3660" pos:column="52">pObject</name></decl></param>,
            <comment type="block" pos:line="3661" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3661" pos:column="25">__RPC__out</name> <name pos:line="3661" pos:column="36">BOOL</name> <type:modifier pos:line="3661" pos:column="41">*</type:modifier></type><name pos:line="3661" pos:column="42">pfIsEqual</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3663" pos:column="9">HRESULT</name></type> ( <name pos:line="3663" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3663" pos:column="37">*</type:modifier><name pos:line="3663" pos:column="38">IsReadOnly</name> )<parameter_list pos:line="3663" pos:column="50">( 
            <param><decl><type><name pos:line="3664" pos:column="13">IDebugPointerObject3</name> <type:modifier pos:line="3664" pos:column="34">*</type:modifier></type> <name pos:line="3664" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3665" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3665" pos:column="25">__RPC__out</name> <name pos:line="3665" pos:column="36">BOOL</name> <type:modifier pos:line="3665" pos:column="41">*</type:modifier></type><name pos:line="3665" pos:column="42">pfIsReadOnly</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3667" pos:column="9">HRESULT</name></type> ( <name pos:line="3667" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3667" pos:column="37">*</type:modifier><name pos:line="3667" pos:column="38">IsProxy</name> )<parameter_list pos:line="3667" pos:column="47">( 
            <param><decl><type><name pos:line="3668" pos:column="13">IDebugPointerObject3</name> <type:modifier pos:line="3668" pos:column="34">*</type:modifier></type> <name pos:line="3668" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3669" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3669" pos:column="25">__RPC__out</name> <name pos:line="3669" pos:column="36">BOOL</name> <type:modifier pos:line="3669" pos:column="41">*</type:modifier></type><name pos:line="3669" pos:column="42">pfIsProxy</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3671" pos:column="9">HRESULT</name></type> ( <name pos:line="3671" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3671" pos:column="37">*</type:modifier><name pos:line="3671" pos:column="38">Dereference</name> )<parameter_list pos:line="3671" pos:column="51">( 
            <param><decl><type><name pos:line="3672" pos:column="13">IDebugPointerObject3</name> <type:modifier pos:line="3672" pos:column="34">*</type:modifier></type> <name pos:line="3672" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3673" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3673" pos:column="24">DWORD</name></type> <name pos:line="3673" pos:column="30">dwIndex</name></decl></param>,
            <comment type="block" pos:line="3674" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3674" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3674" pos:column="46">IDebugObject</name> <type:modifier pos:line="3674" pos:column="59">*</type:modifier><type:modifier pos:line="3674" pos:column="60">*</type:modifier></type><name pos:line="3674" pos:column="61">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3676" pos:column="9">HRESULT</name> <argument_list pos:line="3676" pos:column="17">( <argument pos:line="3676" pos:column="19">STDMETHODCALLTYPE *GetBytes</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3676" pos:column="48">(</op:operator> 
            <name pos:line="3677" pos:column="13">IDebugPointerObject3</name> <op:operator pos:line="3677" pos:column="34">*</op:operator> <name pos:line="3677" pos:column="36">This</name><op:operator pos:line="3677" pos:column="40">,</op:operator>
            <comment type="block" pos:line="3678" pos:column="13">/* [in] */</comment> <name pos:line="3678" pos:column="24">DWORD</name> <name pos:line="3678" pos:column="30">dwStart</name><op:operator pos:line="3678" pos:column="37">,</op:operator>
            <comment type="block" pos:line="3679" pos:column="13">/* [in] */</comment> <name pos:line="3679" pos:column="24">DWORD</name> <name pos:line="3679" pos:column="30">dwCount</name><op:operator pos:line="3679" pos:column="37">,</op:operator>
            <comment type="block" pos:line="3680" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="3680" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="3680" pos:column="67">(<argument pos:line="3680" pos:column="68">dwCount</argument>, <argument pos:line="3680" pos:column="77">dwCount</argument>)</argument_list></macro> <name pos:line="3680" pos:column="86">BYTE</name> <op:operator pos:line="3680" pos:column="91">*</op:operator><name pos:line="3680" pos:column="92">pBytes</name><op:operator pos:line="3680" pos:column="98">,</op:operator>
            <comment type="block" pos:line="3681" pos:column="13">/* [out] */</comment> <name pos:line="3681" pos:column="25">__RPC__out</name> <name pos:line="3681" pos:column="36">DWORD</name> <op:operator pos:line="3681" pos:column="42">*</op:operator><name pos:line="3681" pos:column="43">pdwBytes</name><op:operator pos:line="3681" pos:column="51">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="3683" pos:column="9">HRESULT</name> <argument_list pos:line="3683" pos:column="17">( <argument pos:line="3683" pos:column="19">STDMETHODCALLTYPE *SetBytes</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3683" pos:column="48">(</op:operator> 
            <name pos:line="3684" pos:column="13">IDebugPointerObject3</name> <op:operator pos:line="3684" pos:column="34">*</op:operator> <name pos:line="3684" pos:column="36">This</name><op:operator pos:line="3684" pos:column="40">,</op:operator>
            <comment type="block" pos:line="3685" pos:column="13">/* [in] */</comment> <name pos:line="3685" pos:column="24">DWORD</name> <name pos:line="3685" pos:column="30">dwStart</name><op:operator pos:line="3685" pos:column="37">,</op:operator>
            <comment type="block" pos:line="3686" pos:column="13">/* [in] */</comment> <name pos:line="3686" pos:column="24">DWORD</name> <name pos:line="3686" pos:column="30">dwCount</name><op:operator pos:line="3686" pos:column="37">,</op:operator>
            <comment type="block" pos:line="3687" pos:column="13">/* [length_is][size_is][in] */</comment> <macro><name pos:line="3687" pos:column="44">__RPC__in_ecount_part</name><argument_list pos:line="3687" pos:column="65">(<argument pos:line="3687" pos:column="66">dwCount</argument>, <argument pos:line="3687" pos:column="75">dwCount</argument>)</argument_list></macro> <name pos:line="3687" pos:column="84">BYTE</name> <op:operator pos:line="3687" pos:column="89">*</op:operator><name pos:line="3687" pos:column="90">pBytes</name><op:operator pos:line="3687" pos:column="96">,</op:operator>
            <comment type="block" pos:line="3688" pos:column="13">/* [out] */</comment> <name pos:line="3688" pos:column="25">__RPC__out</name> <name pos:line="3688" pos:column="36">DWORD</name> <op:operator pos:line="3688" pos:column="42">*</op:operator><name pos:line="3688" pos:column="43">pdwBytes</name><op:operator pos:line="3688" pos:column="51">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3690" pos:column="9">HRESULT</name></type> ( <name pos:line="3690" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3690" pos:column="37">*</type:modifier><name pos:line="3690" pos:column="38">GetPointerAddress</name> )<parameter_list pos:line="3690" pos:column="57">( 
            <param><decl><type><name pos:line="3691" pos:column="13">IDebugPointerObject3</name> <type:modifier pos:line="3691" pos:column="34">*</type:modifier></type> <name pos:line="3691" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="3692" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3692" pos:column="25">__RPC__out</name> <name pos:line="3692" pos:column="36">UINT64</name> <type:modifier pos:line="3692" pos:column="43">*</type:modifier></type><name pos:line="3692" pos:column="44">puAddress</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3694" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3695" pos:column="7">IDebugPointerObject3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3697" pos:column="5">interface</name></type> <name pos:line="3697" pos:column="15">IDebugPointerObject3</name>
    <argument_list pos:line="3698" pos:column="5">{
        <argument><expr><name pos:line="3699" pos:column="9">CONST_VTBL</name> struct <name pos:line="3699" pos:column="27">IDebugPointerObject3Vtbl</name> <op:operator pos:line="3699" pos:column="52">*</op:operator><name pos:line="3699" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3704" pos:column="1">#<cpp:directive pos:line="3704" pos:column="2">ifdef</cpp:directive> <name pos:line="3704" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3707" pos:column="1">#<cpp:directive pos:line="3707" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3707" pos:column="9">IDebugPointerObject3_QueryInterface</name><parameter_list pos:line="3707" pos:column="44">(<param><type><name pos:line="3707" pos:column="45">This</name></type></param>,<param><type><name pos:line="3707" pos:column="50">riid</name></type></param>,<param><type><name pos:line="3707" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3708" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3710" pos:column="1">#<cpp:directive pos:line="3710" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3710" pos:column="9">IDebugPointerObject3_AddRef</name><parameter_list pos:line="3710" pos:column="36">(<param><type><name pos:line="3710" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3711" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3713" pos:column="1">#<cpp:directive pos:line="3713" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3713" pos:column="9">IDebugPointerObject3_Release</name><parameter_list pos:line="3713" pos:column="37">(<param><type><name pos:line="3713" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3714" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3717" pos:column="1">#<cpp:directive pos:line="3717" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3717" pos:column="9">IDebugPointerObject3_GetSize</name><parameter_list pos:line="3717" pos:column="37">(<param><type><name pos:line="3717" pos:column="38">This</name></type></param>,<param><type><name pos:line="3717" pos:column="43">pnSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3718" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSize(This,pnSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="3720" pos:column="1">#<cpp:directive pos:line="3720" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3720" pos:column="9">IDebugPointerObject3_GetValue</name><parameter_list pos:line="3720" pos:column="38">(<param><type><name pos:line="3720" pos:column="39">This</name></type></param>,<param><type><name pos:line="3720" pos:column="44">pValue</name></type></param>,<param><type><name pos:line="3720" pos:column="51">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3721" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="3723" pos:column="1">#<cpp:directive pos:line="3723" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3723" pos:column="9">IDebugPointerObject3_SetValue</name><parameter_list pos:line="3723" pos:column="38">(<param><type><name pos:line="3723" pos:column="39">This</name></type></param>,<param><type><name pos:line="3723" pos:column="44">pValue</name></type></param>,<param><type><name pos:line="3723" pos:column="51">nSize</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3724" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetValue(This,pValue,nSize) )</cpp:value></cpp:define> 

<cpp:define pos:line="3726" pos:column="1">#<cpp:directive pos:line="3726" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3726" pos:column="9">IDebugPointerObject3_SetReferenceValue</name><parameter_list pos:line="3726" pos:column="47">(<param><type><name pos:line="3726" pos:column="48">This</name></type></param>,<param><type><name pos:line="3726" pos:column="53">pObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3727" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetReferenceValue(This,pObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3729" pos:column="1">#<cpp:directive pos:line="3729" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3729" pos:column="9">IDebugPointerObject3_GetMemoryContext</name><parameter_list pos:line="3729" pos:column="46">(<param><type><name pos:line="3729" pos:column="47">This</name></type></param>,<param><type><name pos:line="3729" pos:column="52">pContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3730" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetMemoryContext(This,pContext) )</cpp:value></cpp:define> 

<cpp:define pos:line="3732" pos:column="1">#<cpp:directive pos:line="3732" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3732" pos:column="9">IDebugPointerObject3_GetManagedDebugObject</name><parameter_list pos:line="3732" pos:column="51">(<param><type><name pos:line="3732" pos:column="52">This</name></type></param>,<param><type><name pos:line="3732" pos:column="57">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3733" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetManagedDebugObject(This,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3735" pos:column="1">#<cpp:directive pos:line="3735" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3735" pos:column="9">IDebugPointerObject3_IsNullReference</name><parameter_list pos:line="3735" pos:column="45">(<param><type><name pos:line="3735" pos:column="46">This</name></type></param>,<param><type><name pos:line="3735" pos:column="51">pfIsNull</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3736" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsNullReference(This,pfIsNull) )</cpp:value></cpp:define> 

<cpp:define pos:line="3738" pos:column="1">#<cpp:directive pos:line="3738" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3738" pos:column="9">IDebugPointerObject3_IsEqual</name><parameter_list pos:line="3738" pos:column="37">(<param><type><name pos:line="3738" pos:column="38">This</name></type></param>,<param><type><name pos:line="3738" pos:column="43">pObject</name></type></param>,<param><type><name pos:line="3738" pos:column="51">pfIsEqual</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3739" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsEqual(This,pObject,pfIsEqual) )</cpp:value></cpp:define> 

<cpp:define pos:line="3741" pos:column="1">#<cpp:directive pos:line="3741" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3741" pos:column="9">IDebugPointerObject3_IsReadOnly</name><parameter_list pos:line="3741" pos:column="40">(<param><type><name pos:line="3741" pos:column="41">This</name></type></param>,<param><type><name pos:line="3741" pos:column="46">pfIsReadOnly</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3742" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsReadOnly(This,pfIsReadOnly) )</cpp:value></cpp:define> 

<cpp:define pos:line="3744" pos:column="1">#<cpp:directive pos:line="3744" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3744" pos:column="9">IDebugPointerObject3_IsProxy</name><parameter_list pos:line="3744" pos:column="37">(<param><type><name pos:line="3744" pos:column="38">This</name></type></param>,<param><type><name pos:line="3744" pos:column="43">pfIsProxy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3745" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsProxy(This,pfIsProxy) )</cpp:value></cpp:define> 


<cpp:define pos:line="3748" pos:column="1">#<cpp:directive pos:line="3748" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3748" pos:column="9">IDebugPointerObject3_Dereference</name><parameter_list pos:line="3748" pos:column="41">(<param><type><name pos:line="3748" pos:column="42">This</name></type></param>,<param><type><name pos:line="3748" pos:column="47">dwIndex</name></type></param>,<param><type><name pos:line="3748" pos:column="55">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3749" pos:column="5">( (This)-&gt;lpVtbl -&gt; Dereference(This,dwIndex,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3751" pos:column="1">#<cpp:directive pos:line="3751" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3751" pos:column="9">IDebugPointerObject3_GetBytes</name><parameter_list pos:line="3751" pos:column="38">(<param><type><name pos:line="3751" pos:column="39">This</name></type></param>,<param><type><name pos:line="3751" pos:column="44">dwStart</name></type></param>,<param><type><name pos:line="3751" pos:column="52">dwCount</name></type></param>,<param><type><name pos:line="3751" pos:column="60">pBytes</name></type></param>,<param><type><name pos:line="3751" pos:column="67">pdwBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3752" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBytes(This,dwStart,dwCount,pBytes,pdwBytes) )</cpp:value></cpp:define> 

<cpp:define pos:line="3754" pos:column="1">#<cpp:directive pos:line="3754" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3754" pos:column="9">IDebugPointerObject3_SetBytes</name><parameter_list pos:line="3754" pos:column="38">(<param><type><name pos:line="3754" pos:column="39">This</name></type></param>,<param><type><name pos:line="3754" pos:column="44">dwStart</name></type></param>,<param><type><name pos:line="3754" pos:column="52">dwCount</name></type></param>,<param><type><name pos:line="3754" pos:column="60">pBytes</name></type></param>,<param><type><name pos:line="3754" pos:column="67">pdwBytes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3755" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetBytes(This,dwStart,dwCount,pBytes,pdwBytes) )</cpp:value></cpp:define> 


<cpp:define pos:line="3758" pos:column="1">#<cpp:directive pos:line="3758" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3758" pos:column="9">IDebugPointerObject3_GetPointerAddress</name><parameter_list pos:line="3758" pos:column="47">(<param><type><name pos:line="3758" pos:column="48">This</name></type></param>,<param><type><name pos:line="3758" pos:column="53">puAddress</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3759" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetPointerAddress(This,puAddress) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3761" pos:column="1">#<cpp:directive pos:line="3761" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3761" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3764" pos:column="1">#<cpp:directive pos:line="3764" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3764" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3769" pos:column="1">#<cpp:directive pos:line="3769" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3769" pos:column="9">/* __IDebugPointerObject3_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3772" pos:column="1">#<cpp:directive pos:line="3772" pos:column="2">ifndef</cpp:directive> <name pos:line="3772" pos:column="9">__IDebugParsedExpression_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3773" pos:column="1">#<cpp:directive pos:line="3773" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3773" pos:column="9">__IDebugParsedExpression_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3775" pos:column="1">/* interface IDebugParsedExpression */</comment>
<comment type="block" pos:line="3776" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3779" pos:column="1">EXTERN_C</name> <specifier pos:line="3779" pos:column="10">const</specifier> <name pos:line="3779" pos:column="16">IID</name></type> <name pos:line="3779" pos:column="20">IID_IDebugParsedExpression</name></decl>;</decl_stmt>

<cpp:if pos:line="3781" pos:column="1">#<cpp:directive pos:line="3781" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3781" pos:column="5">defined</name><argument_list pos:line="3781" pos:column="12">(<argument><expr><name pos:line="3781" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3781" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3781" pos:column="29">!</op:operator><call><name pos:line="3781" pos:column="30">defined</name><argument_list pos:line="3781" pos:column="37">(<argument><expr><name pos:line="3781" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3783" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3783" pos:column="19">(<argument pos:line="3783" pos:column="20">"7895C94C-5A3F-11d2-B742-0000F87572EF"</argument>)</argument_list></macro>
    <label><name pos:line="3784" pos:column="5">IDebugParsedExpression</name> :</label> <expr_stmt><expr pos:line="3784" pos:column="30">public <name pos:line="3784" pos:column="37">IUnknown</name>
    <block pos:line="3785" pos:column="5">{
    <expr pos:line="3786" pos:column="5">public<op:operator pos:line="3786" pos:column="11">:</op:operator>
        virtual <name pos:line="3787" pos:column="17">HRESULT</name> <name pos:line="3787" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3787" pos:column="43">EvaluateSync</name><argument_list pos:line="3787" pos:column="55">( 
            <comment type="block" pos:line="3788" pos:column="13">/* [in] */</comment> <argument pos:line="3788" pos:column="24">DWORD dwEvalFlags</argument>,
            <comment type="block" pos:line="3789" pos:column="13">/* [in] */</comment> <argument pos:line="3789" pos:column="24">DWORD dwTimeout</argument>,
            <comment type="block" pos:line="3790" pos:column="13">/* [in] */</comment> <argument pos:line="3790" pos:column="24">__RPC__in_opt IDebugSymbolProvider *pSymbolProvider</argument>,
            <comment type="block" pos:line="3791" pos:column="13">/* [in] */</comment> <argument pos:line="3791" pos:column="24">__RPC__in_opt IDebugAddress *pAddress</argument>,
            <comment type="block" pos:line="3792" pos:column="13">/* [in] */</comment> <argument pos:line="3792" pos:column="24">__RPC__in_opt IDebugBinder *pBinder</argument>,
            <comment type="block" pos:line="3793" pos:column="13">/* [in] */</comment> <argument pos:line="3793" pos:column="24">__RPC__in BSTR bstrResultType</argument>,
            <comment type="block" pos:line="3794" pos:column="13">/* [out] */</comment> <argument pos:line="3794" pos:column="25">__RPC__deref_out_opt IDebugProperty2 **ppResult</argument>)</argument_list></macro> <op:operator pos:line="3794" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="3794" pos:column="76">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3798" pos:column="1">#<cpp:directive pos:line="3798" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3798" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3800" pos:column="5">typedef <type><struct pos:line="3800" pos:column="13">struct <name pos:line="3800" pos:column="20">IDebugParsedExpressionVtbl</name>
    <block pos:line="3801" pos:column="5">{<public type="default" pos:line="3801" pos:column="6">
        <function_decl><type><name pos:line="3802" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3804" pos:column="9">HRESULT</name></type> ( <name pos:line="3804" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3804" pos:column="37">*</type:modifier><name pos:line="3804" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3804" pos:column="54">( 
            <param><decl><type><name pos:line="3805" pos:column="13">IDebugParsedExpression</name> <type:modifier pos:line="3805" pos:column="36">*</type:modifier></type> <name pos:line="3805" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="3806" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3806" pos:column="24">__RPC__in</name> <name pos:line="3806" pos:column="34">REFIID</name></type> <name pos:line="3806" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3807" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3808" pos:column="13">__RPC__deref_out</name>  <name pos:line="3808" pos:column="31">void</name> <type:modifier pos:line="3808" pos:column="36">*</type:modifier><type:modifier pos:line="3808" pos:column="37">*</type:modifier></type><name pos:line="3808" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3810" pos:column="9">ULONG</name></type> ( <name pos:line="3810" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3810" pos:column="35">*</type:modifier><name pos:line="3810" pos:column="36">AddRef</name> )<parameter_list pos:line="3810" pos:column="44">( 
            <param><decl><type><name pos:line="3811" pos:column="13">IDebugParsedExpression</name> <type:modifier pos:line="3811" pos:column="36">*</type:modifier></type> <name pos:line="3811" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3813" pos:column="9">ULONG</name></type> ( <name pos:line="3813" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3813" pos:column="35">*</type:modifier><name pos:line="3813" pos:column="36">Release</name> )<parameter_list pos:line="3813" pos:column="45">( 
            <param><decl><type><name pos:line="3814" pos:column="13">IDebugParsedExpression</name> <type:modifier pos:line="3814" pos:column="36">*</type:modifier></type> <name pos:line="3814" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3816" pos:column="9">HRESULT</name></type> ( <name pos:line="3816" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3816" pos:column="37">*</type:modifier><name pos:line="3816" pos:column="38">EvaluateSync</name> )<parameter_list pos:line="3816" pos:column="52">( 
            <param><decl><type><name pos:line="3817" pos:column="13">IDebugParsedExpression</name> <type:modifier pos:line="3817" pos:column="36">*</type:modifier></type> <name pos:line="3817" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="3818" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3818" pos:column="24">DWORD</name></type> <name pos:line="3818" pos:column="30">dwEvalFlags</name></decl></param>,
            <comment type="block" pos:line="3819" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3819" pos:column="24">DWORD</name></type> <name pos:line="3819" pos:column="30">dwTimeout</name></decl></param>,
            <comment type="block" pos:line="3820" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3820" pos:column="24">__RPC__in_opt</name> <name pos:line="3820" pos:column="38">IDebugSymbolProvider</name> <type:modifier pos:line="3820" pos:column="59">*</type:modifier></type><name pos:line="3820" pos:column="60">pSymbolProvider</name></decl></param>,
            <comment type="block" pos:line="3821" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3821" pos:column="24">__RPC__in_opt</name> <name pos:line="3821" pos:column="38">IDebugAddress</name> <type:modifier pos:line="3821" pos:column="52">*</type:modifier></type><name pos:line="3821" pos:column="53">pAddress</name></decl></param>,
            <comment type="block" pos:line="3822" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3822" pos:column="24">__RPC__in_opt</name> <name pos:line="3822" pos:column="38">IDebugBinder</name> <type:modifier pos:line="3822" pos:column="51">*</type:modifier></type><name pos:line="3822" pos:column="52">pBinder</name></decl></param>,
            <comment type="block" pos:line="3823" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3823" pos:column="24">__RPC__in</name> <name pos:line="3823" pos:column="34">BSTR</name></type> <name pos:line="3823" pos:column="39">bstrResultType</name></decl></param>,
            <comment type="block" pos:line="3824" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3824" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3824" pos:column="46">IDebugProperty2</name> <type:modifier pos:line="3824" pos:column="62">*</type:modifier><type:modifier pos:line="3824" pos:column="63">*</type:modifier></type><name pos:line="3824" pos:column="64">ppResult</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3826" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3827" pos:column="7">IDebugParsedExpressionVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3829" pos:column="5">interface</name></type> <name pos:line="3829" pos:column="15">IDebugParsedExpression</name>
    <argument_list pos:line="3830" pos:column="5">{
        <argument><expr><name pos:line="3831" pos:column="9">CONST_VTBL</name> struct <name pos:line="3831" pos:column="27">IDebugParsedExpressionVtbl</name> <op:operator pos:line="3831" pos:column="54">*</op:operator><name pos:line="3831" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3836" pos:column="1">#<cpp:directive pos:line="3836" pos:column="2">ifdef</cpp:directive> <name pos:line="3836" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3839" pos:column="1">#<cpp:directive pos:line="3839" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3839" pos:column="9">IDebugParsedExpression_QueryInterface</name><parameter_list pos:line="3839" pos:column="46">(<param><type><name pos:line="3839" pos:column="47">This</name></type></param>,<param><type><name pos:line="3839" pos:column="52">riid</name></type></param>,<param><type><name pos:line="3839" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3840" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3842" pos:column="1">#<cpp:directive pos:line="3842" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3842" pos:column="9">IDebugParsedExpression_AddRef</name><parameter_list pos:line="3842" pos:column="38">(<param><type><name pos:line="3842" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3843" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3845" pos:column="1">#<cpp:directive pos:line="3845" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3845" pos:column="9">IDebugParsedExpression_Release</name><parameter_list pos:line="3845" pos:column="39">(<param><type><name pos:line="3845" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3846" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3849" pos:column="1">#<cpp:directive pos:line="3849" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3849" pos:column="9">IDebugParsedExpression_EvaluateSync</name><parameter_list pos:line="3849" pos:column="44">(<param><type><name pos:line="3849" pos:column="45">This</name></type></param>,<param><type><name pos:line="3849" pos:column="50">dwEvalFlags</name></type></param>,<param><type><name pos:line="3849" pos:column="62">dwTimeout</name></type></param>,<param><type><name pos:line="3849" pos:column="72">pSymbolProvider</name></type></param>,<param><type><name pos:line="3849" pos:column="88">pAddress</name></type></param>,<param><type><name pos:line="3849" pos:column="97">pBinder</name></type></param>,<param><type><name pos:line="3849" pos:column="105">bstrResultType</name></type></param>,<param><type><name pos:line="3849" pos:column="120">ppResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3850" pos:column="5">( (This)-&gt;lpVtbl -&gt; EvaluateSync(This,dwEvalFlags,dwTimeout,pSymbolProvider,pAddress,pBinder,bstrResultType,ppResult) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3852" pos:column="1">#<cpp:directive pos:line="3852" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3852" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3855" pos:column="1">#<cpp:directive pos:line="3855" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3855" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3860" pos:column="1">#<cpp:directive pos:line="3860" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3860" pos:column="9">/* __IDebugParsedExpression_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3863" pos:column="1">#<cpp:directive pos:line="3863" pos:column="2">ifndef</cpp:directive> <name pos:line="3863" pos:column="9">__IEnumDebugObjects_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3864" pos:column="1">#<cpp:directive pos:line="3864" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3864" pos:column="9">__IEnumDebugObjects_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3866" pos:column="1">/* interface IEnumDebugObjects */</comment>
<comment type="block" pos:line="3867" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3870" pos:column="1">EXTERN_C</name> <specifier pos:line="3870" pos:column="10">const</specifier> <name pos:line="3870" pos:column="16">IID</name></type> <name pos:line="3870" pos:column="20">IID_IEnumDebugObjects</name></decl>;</decl_stmt>

<cpp:if pos:line="3872" pos:column="1">#<cpp:directive pos:line="3872" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3872" pos:column="5">defined</name><argument_list pos:line="3872" pos:column="12">(<argument><expr><name pos:line="3872" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3872" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3872" pos:column="29">!</op:operator><call><name pos:line="3872" pos:column="30">defined</name><argument_list pos:line="3872" pos:column="37">(<argument><expr><name pos:line="3872" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3874" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3874" pos:column="19">(<argument pos:line="3874" pos:column="20">"0881751C-99F4-11d2-B767-0000F87572EF"</argument>)</argument_list></macro>
    <label><name pos:line="3875" pos:column="5">IEnumDebugObjects</name> :</label> <expr_stmt><expr pos:line="3875" pos:column="25">public <name pos:line="3875" pos:column="32">IUnknown</name>
    <block pos:line="3876" pos:column="5">{
    <expr pos:line="3877" pos:column="5">public<op:operator pos:line="3877" pos:column="11">:</op:operator>
        virtual <name pos:line="3878" pos:column="17">HRESULT</name> <name pos:line="3878" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3878" pos:column="43">Next</name><argument_list pos:line="3878" pos:column="47">( 
            <comment type="block" pos:line="3879" pos:column="13">/* [in] */</comment> <argument pos:line="3879" pos:column="24">ULONG celt</argument>,
            <comment type="block" pos:line="3880" pos:column="13">/* [length_is][size_is][out] */</comment> <argument pos:line="3880" pos:column="45">__RPC__out_ecount_part(celt, *pceltFetched) IDebugObject **rgelt</argument>,
            <comment type="block" pos:line="3881" pos:column="13">/* [out][in] */</comment> <argument pos:line="3881" pos:column="29">__RPC__inout ULONG *pceltFetched</argument>)</argument_list></macro> <op:operator pos:line="3881" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="3881" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="3883" pos:column="9">virtual <name pos:line="3883" pos:column="17">HRESULT</name> <name pos:line="3883" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3883" pos:column="43">Skip</name><argument_list pos:line="3883" pos:column="47">( 
            <comment type="block" pos:line="3884" pos:column="13">/* [in] */</comment> <argument pos:line="3884" pos:column="24">ULONG celt</argument>)</argument_list></macro> <op:operator pos:line="3884" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="3884" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="3886" pos:column="9">virtual <name pos:line="3886" pos:column="17">HRESULT</name> <name pos:line="3886" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="3886" pos:column="43">Reset</name><argument_list pos:line="3886" pos:column="48">( <argument><expr><name pos:line="3886" pos:column="50">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3886" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="3886" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="3888" pos:column="9">virtual <name pos:line="3888" pos:column="17">HRESULT</name> <name pos:line="3888" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3888" pos:column="43">Clone</name><argument_list pos:line="3888" pos:column="48">( 
            <comment type="block" pos:line="3889" pos:column="13">/* [out] */</comment> <argument pos:line="3889" pos:column="25">__RPC__deref_out_opt IEnumDebugObjects **ppEnum</argument>)</argument_list></macro> <op:operator pos:line="3889" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="3889" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="3891" pos:column="9">virtual <name pos:line="3891" pos:column="17">HRESULT</name> <name pos:line="3891" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3891" pos:column="43">GetCount</name><argument_list pos:line="3891" pos:column="51">( 
            <comment type="block" pos:line="3892" pos:column="13">/* [out] */</comment> <argument pos:line="3892" pos:column="25">__RPC__out ULONG *pcelt</argument>)</argument_list></macro> <op:operator pos:line="3892" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="3892" pos:column="52">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3896" pos:column="1">#<cpp:directive pos:line="3896" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3896" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3898" pos:column="5">typedef <type><struct pos:line="3898" pos:column="13">struct <name pos:line="3898" pos:column="20">IEnumDebugObjectsVtbl</name>
    <block pos:line="3899" pos:column="5">{<public type="default" pos:line="3899" pos:column="6">
        <function_decl><type><name pos:line="3900" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="3902" pos:column="9">HRESULT</name></type> ( <name pos:line="3902" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3902" pos:column="37">*</type:modifier><name pos:line="3902" pos:column="38">QueryInterface</name> )<parameter_list pos:line="3902" pos:column="54">( 
            <param><decl><type><name pos:line="3903" pos:column="13">IEnumDebugObjects</name> <type:modifier pos:line="3903" pos:column="31">*</type:modifier></type> <name pos:line="3903" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3904" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3904" pos:column="24">__RPC__in</name> <name pos:line="3904" pos:column="34">REFIID</name></type> <name pos:line="3904" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="3905" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="3906" pos:column="13">__RPC__deref_out</name>  <name pos:line="3906" pos:column="31">void</name> <type:modifier pos:line="3906" pos:column="36">*</type:modifier><type:modifier pos:line="3906" pos:column="37">*</type:modifier></type><name pos:line="3906" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3908" pos:column="9">ULONG</name></type> ( <name pos:line="3908" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3908" pos:column="35">*</type:modifier><name pos:line="3908" pos:column="36">AddRef</name> )<parameter_list pos:line="3908" pos:column="44">( 
            <param><decl><type><name pos:line="3909" pos:column="13">IEnumDebugObjects</name> <type:modifier pos:line="3909" pos:column="31">*</type:modifier></type> <name pos:line="3909" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3911" pos:column="9">ULONG</name></type> ( <name pos:line="3911" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="3911" pos:column="35">*</type:modifier><name pos:line="3911" pos:column="36">Release</name> )<parameter_list pos:line="3911" pos:column="45">( 
            <param><decl><type><name pos:line="3912" pos:column="13">IEnumDebugObjects</name> <type:modifier pos:line="3912" pos:column="31">*</type:modifier></type> <name pos:line="3912" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3914" pos:column="9">HRESULT</name> <argument_list pos:line="3914" pos:column="17">( <argument pos:line="3914" pos:column="19">STDMETHODCALLTYPE *Next</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3914" pos:column="44">(</op:operator> 
            <name pos:line="3915" pos:column="13">IEnumDebugObjects</name> <op:operator pos:line="3915" pos:column="31">*</op:operator> <name pos:line="3915" pos:column="33">This</name><op:operator pos:line="3915" pos:column="37">,</op:operator>
            <comment type="block" pos:line="3916" pos:column="13">/* [in] */</comment> <name pos:line="3916" pos:column="24">ULONG</name> <name pos:line="3916" pos:column="30">celt</name><op:operator pos:line="3916" pos:column="34">,</op:operator>
            <comment type="block" pos:line="3917" pos:column="13">/* [length_is][size_is][out] */</comment> <macro><name pos:line="3917" pos:column="45">__RPC__out_ecount_part</name><argument_list pos:line="3917" pos:column="67">(<argument pos:line="3917" pos:column="68">celt</argument>, <argument pos:line="3917" pos:column="74">*pceltFetched</argument>)</argument_list></macro> <name pos:line="3917" pos:column="89">IDebugObject</name> <op:operator pos:line="3917" pos:column="102">*</op:operator><op:operator pos:line="3917" pos:column="103">*</op:operator><name pos:line="3917" pos:column="104">rgelt</name><op:operator pos:line="3917" pos:column="109">,</op:operator>
            <comment type="block" pos:line="3918" pos:column="13">/* [out][in] */</comment> <name pos:line="3918" pos:column="29">__RPC__inout</name> <name pos:line="3918" pos:column="42">ULONG</name> <op:operator pos:line="3918" pos:column="48">*</op:operator><name pos:line="3918" pos:column="49">pceltFetched</name><op:operator pos:line="3918" pos:column="61">)</op:operator></expr>;</expr_stmt>
        
        <function_decl><type><name pos:line="3920" pos:column="9">HRESULT</name></type> ( <name pos:line="3920" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3920" pos:column="37">*</type:modifier><name pos:line="3920" pos:column="38">Skip</name> )<parameter_list pos:line="3920" pos:column="44">( 
            <param><decl><type><name pos:line="3921" pos:column="13">IEnumDebugObjects</name> <type:modifier pos:line="3921" pos:column="31">*</type:modifier></type> <name pos:line="3921" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3922" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="3922" pos:column="24">ULONG</name></type> <name pos:line="3922" pos:column="30">celt</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3924" pos:column="9">HRESULT</name></type> ( <name pos:line="3924" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3924" pos:column="37">*</type:modifier><name pos:line="3924" pos:column="38">Reset</name> )<parameter_list pos:line="3924" pos:column="45">( 
            <param><decl><type><name pos:line="3925" pos:column="13">IEnumDebugObjects</name> <type:modifier pos:line="3925" pos:column="31">*</type:modifier></type> <name pos:line="3925" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3927" pos:column="9">HRESULT</name></type> ( <name pos:line="3927" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3927" pos:column="37">*</type:modifier><name pos:line="3927" pos:column="38">Clone</name> )<parameter_list pos:line="3927" pos:column="45">( 
            <param><decl><type><name pos:line="3928" pos:column="13">IEnumDebugObjects</name> <type:modifier pos:line="3928" pos:column="31">*</type:modifier></type> <name pos:line="3928" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3929" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3929" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="3929" pos:column="46">IEnumDebugObjects</name> <type:modifier pos:line="3929" pos:column="64">*</type:modifier><type:modifier pos:line="3929" pos:column="65">*</type:modifier></type><name pos:line="3929" pos:column="66">ppEnum</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="3931" pos:column="9">HRESULT</name></type> ( <name pos:line="3931" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="3931" pos:column="37">*</type:modifier><name pos:line="3931" pos:column="38">GetCount</name> )<parameter_list pos:line="3931" pos:column="48">( 
            <param><decl><type><name pos:line="3932" pos:column="13">IEnumDebugObjects</name> <type:modifier pos:line="3932" pos:column="31">*</type:modifier></type> <name pos:line="3932" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="3933" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="3933" pos:column="25">__RPC__out</name> <name pos:line="3933" pos:column="36">ULONG</name> <type:modifier pos:line="3933" pos:column="42">*</type:modifier></type><name pos:line="3933" pos:column="43">pcelt</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3935" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3936" pos:column="7">IEnumDebugObjectsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3938" pos:column="5">interface</name></type> <name pos:line="3938" pos:column="15">IEnumDebugObjects</name>
    <argument_list pos:line="3939" pos:column="5">{
        <argument><expr><name pos:line="3940" pos:column="9">CONST_VTBL</name> struct <name pos:line="3940" pos:column="27">IEnumDebugObjectsVtbl</name> <op:operator pos:line="3940" pos:column="49">*</op:operator><name pos:line="3940" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3945" pos:column="1">#<cpp:directive pos:line="3945" pos:column="2">ifdef</cpp:directive> <name pos:line="3945" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3948" pos:column="1">#<cpp:directive pos:line="3948" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3948" pos:column="9">IEnumDebugObjects_QueryInterface</name><parameter_list pos:line="3948" pos:column="41">(<param><type><name pos:line="3948" pos:column="42">This</name></type></param>,<param><type><name pos:line="3948" pos:column="47">riid</name></type></param>,<param><type><name pos:line="3948" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3949" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="3951" pos:column="1">#<cpp:directive pos:line="3951" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3951" pos:column="9">IEnumDebugObjects_AddRef</name><parameter_list pos:line="3951" pos:column="33">(<param><type><name pos:line="3951" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3952" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3954" pos:column="1">#<cpp:directive pos:line="3954" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3954" pos:column="9">IEnumDebugObjects_Release</name><parameter_list pos:line="3954" pos:column="34">(<param><type><name pos:line="3954" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3955" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="3958" pos:column="1">#<cpp:directive pos:line="3958" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3958" pos:column="9">IEnumDebugObjects_Next</name><parameter_list pos:line="3958" pos:column="31">(<param><type><name pos:line="3958" pos:column="32">This</name></type></param>,<param><type><name pos:line="3958" pos:column="37">celt</name></type></param>,<param><type><name pos:line="3958" pos:column="42">rgelt</name></type></param>,<param><type><name pos:line="3958" pos:column="48">pceltFetched</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3959" pos:column="5">( (This)-&gt;lpVtbl -&gt; Next(This,celt,rgelt,pceltFetched) )</cpp:value></cpp:define> 

<cpp:define pos:line="3961" pos:column="1">#<cpp:directive pos:line="3961" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3961" pos:column="9">IEnumDebugObjects_Skip</name><parameter_list pos:line="3961" pos:column="31">(<param><type><name pos:line="3961" pos:column="32">This</name></type></param>,<param><type><name pos:line="3961" pos:column="37">celt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3962" pos:column="5">( (This)-&gt;lpVtbl -&gt; Skip(This,celt) )</cpp:value></cpp:define> 

<cpp:define pos:line="3964" pos:column="1">#<cpp:directive pos:line="3964" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3964" pos:column="9">IEnumDebugObjects_Reset</name><parameter_list pos:line="3964" pos:column="32">(<param><type><name pos:line="3964" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3965" pos:column="5">( (This)-&gt;lpVtbl -&gt; Reset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3967" pos:column="1">#<cpp:directive pos:line="3967" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3967" pos:column="9">IEnumDebugObjects_Clone</name><parameter_list pos:line="3967" pos:column="32">(<param><type><name pos:line="3967" pos:column="33">This</name></type></param>,<param><type><name pos:line="3967" pos:column="38">ppEnum</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3968" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clone(This,ppEnum) )</cpp:value></cpp:define> 

<cpp:define pos:line="3970" pos:column="1">#<cpp:directive pos:line="3970" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3970" pos:column="9">IEnumDebugObjects_GetCount</name><parameter_list pos:line="3970" pos:column="35">(<param><type><name pos:line="3970" pos:column="36">This</name></type></param>,<param><type><name pos:line="3970" pos:column="41">pcelt</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3971" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCount(This,pcelt) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3973" pos:column="1">#<cpp:directive pos:line="3973" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3973" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3976" pos:column="1">#<cpp:directive pos:line="3976" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3976" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3981" pos:column="1">#<cpp:directive pos:line="3981" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3981" pos:column="9">/* __IEnumDebugObjects_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3984" pos:column="1">#<cpp:directive pos:line="3984" pos:column="2">ifndef</cpp:directive> <name pos:line="3984" pos:column="9">__IDebugAlias_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3985" pos:column="1">#<cpp:directive pos:line="3985" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3985" pos:column="9">__IDebugAlias_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3987" pos:column="1">/* interface IDebugAlias */</comment>
<comment type="block" pos:line="3988" pos:column="1">/* [unique][uuid][object] */</comment> 


<decl_stmt><decl><type><name pos:line="3991" pos:column="1">EXTERN_C</name> <specifier pos:line="3991" pos:column="10">const</specifier> <name pos:line="3991" pos:column="16">IID</name></type> <name pos:line="3991" pos:column="20">IID_IDebugAlias</name></decl>;</decl_stmt>

<cpp:if pos:line="3993" pos:column="1">#<cpp:directive pos:line="3993" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3993" pos:column="5">defined</name><argument_list pos:line="3993" pos:column="12">(<argument><expr><name pos:line="3993" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3993" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3993" pos:column="29">!</op:operator><call><name pos:line="3993" pos:column="30">defined</name><argument_list pos:line="3993" pos:column="37">(<argument><expr><name pos:line="3993" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3995" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3995" pos:column="19">(<argument pos:line="3995" pos:column="20">"DE7CCB92-94AC-4841-B354-5827B68217E7"</argument>)</argument_list></macro>
    <label><name pos:line="3996" pos:column="5">IDebugAlias</name> :</label> <expr_stmt><expr pos:line="3996" pos:column="19">public <name pos:line="3996" pos:column="26">IUnknown</name>
    <block pos:line="3997" pos:column="5">{
    <expr pos:line="3998" pos:column="5">public<op:operator pos:line="3998" pos:column="11">:</op:operator>
        virtual <name pos:line="3999" pos:column="17">HRESULT</name> <name pos:line="3999" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="3999" pos:column="43">GetObject</name><argument_list pos:line="3999" pos:column="52">( 
            <comment type="block" pos:line="4000" pos:column="13">/* [out] */</comment> <argument pos:line="4000" pos:column="25">__RPC__deref_out_opt IDebugObject2 **ppObject</argument>)</argument_list></macro> <op:operator pos:line="4000" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="4000" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="4002" pos:column="9">virtual <name pos:line="4002" pos:column="17">HRESULT</name> <name pos:line="4002" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4002" pos:column="43">GetName</name><argument_list pos:line="4002" pos:column="50">( 
            <comment type="block" pos:line="4003" pos:column="13">/* [out] */</comment> <argument pos:line="4003" pos:column="25">__RPC__deref_out_opt BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="4003" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="4003" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="4005" pos:column="9">virtual <name pos:line="4005" pos:column="17">HRESULT</name> <name pos:line="4005" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="4005" pos:column="43">GetICorDebugValue</name><argument_list pos:line="4005" pos:column="60">( 
            <comment type="block" pos:line="4006" pos:column="13">/* [out] */</comment> <argument pos:line="4006" pos:column="25">__RPC__deref_out_opt IUnknown **ppUnk</argument>)</argument_list></macro> <op:operator pos:line="4006" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="4006" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="4008" pos:column="9">virtual <name pos:line="4008" pos:column="17">HRESULT</name> <name pos:line="4008" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="4008" pos:column="43">Dispose</name><argument_list pos:line="4008" pos:column="50">( <argument><expr><name pos:line="4008" pos:column="52">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="4008" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="4008" pos:column="60">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4012" pos:column="1">#<cpp:directive pos:line="4012" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4012" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4014" pos:column="5">typedef <type><struct pos:line="4014" pos:column="13">struct <name pos:line="4014" pos:column="20">IDebugAliasVtbl</name>
    <block pos:line="4015" pos:column="5">{<public type="default" pos:line="4015" pos:column="6">
        <function_decl><type><name pos:line="4016" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="4018" pos:column="9">HRESULT</name></type> ( <name pos:line="4018" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4018" pos:column="37">*</type:modifier><name pos:line="4018" pos:column="38">QueryInterface</name> )<parameter_list pos:line="4018" pos:column="54">( 
            <param><decl><type><name pos:line="4019" pos:column="13">IDebugAlias</name> <type:modifier pos:line="4019" pos:column="25">*</type:modifier></type> <name pos:line="4019" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="4020" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="4020" pos:column="24">__RPC__in</name> <name pos:line="4020" pos:column="34">REFIID</name></type> <name pos:line="4020" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="4021" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="4022" pos:column="13">__RPC__deref_out</name>  <name pos:line="4022" pos:column="31">void</name> <type:modifier pos:line="4022" pos:column="36">*</type:modifier><type:modifier pos:line="4022" pos:column="37">*</type:modifier></type><name pos:line="4022" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4024" pos:column="9">ULONG</name></type> ( <name pos:line="4024" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4024" pos:column="35">*</type:modifier><name pos:line="4024" pos:column="36">AddRef</name> )<parameter_list pos:line="4024" pos:column="44">( 
            <param><decl><type><name pos:line="4025" pos:column="13">IDebugAlias</name> <type:modifier pos:line="4025" pos:column="25">*</type:modifier></type> <name pos:line="4025" pos:column="27">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4027" pos:column="9">ULONG</name></type> ( <name pos:line="4027" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="4027" pos:column="35">*</type:modifier><name pos:line="4027" pos:column="36">Release</name> )<parameter_list pos:line="4027" pos:column="45">( 
            <param><decl><type><name pos:line="4028" pos:column="13">IDebugAlias</name> <type:modifier pos:line="4028" pos:column="25">*</type:modifier></type> <name pos:line="4028" pos:column="27">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4030" pos:column="9">HRESULT</name></type> ( <name pos:line="4030" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4030" pos:column="37">*</type:modifier><name pos:line="4030" pos:column="38">GetObject</name> )<parameter_list pos:line="4030" pos:column="49">( 
            <param><decl><type><name pos:line="4031" pos:column="13">IDebugAlias</name> <type:modifier pos:line="4031" pos:column="25">*</type:modifier></type> <name pos:line="4031" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="4032" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4032" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4032" pos:column="46">IDebugObject2</name> <type:modifier pos:line="4032" pos:column="60">*</type:modifier><type:modifier pos:line="4032" pos:column="61">*</type:modifier></type><name pos:line="4032" pos:column="62">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4034" pos:column="9">HRESULT</name></type> ( <name pos:line="4034" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4034" pos:column="37">*</type:modifier><name pos:line="4034" pos:column="38">GetName</name> )<parameter_list pos:line="4034" pos:column="47">( 
            <param><decl><type><name pos:line="4035" pos:column="13">IDebugAlias</name> <type:modifier pos:line="4035" pos:column="25">*</type:modifier></type> <name pos:line="4035" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="4036" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4036" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4036" pos:column="46">BSTR</name> <type:modifier pos:line="4036" pos:column="51">*</type:modifier></type><name pos:line="4036" pos:column="52">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4038" pos:column="9">HRESULT</name></type> ( <name pos:line="4038" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4038" pos:column="37">*</type:modifier><name pos:line="4038" pos:column="38">GetICorDebugValue</name> )<parameter_list pos:line="4038" pos:column="57">( 
            <param><decl><type><name pos:line="4039" pos:column="13">IDebugAlias</name> <type:modifier pos:line="4039" pos:column="25">*</type:modifier></type> <name pos:line="4039" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="4040" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="4040" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="4040" pos:column="46">IUnknown</name> <type:modifier pos:line="4040" pos:column="55">*</type:modifier><type:modifier pos:line="4040" pos:column="56">*</type:modifier></type><name pos:line="4040" pos:column="57">ppUnk</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="4042" pos:column="9">HRESULT</name></type> ( <name pos:line="4042" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="4042" pos:column="37">*</type:modifier><name pos:line="4042" pos:column="38">Dispose</name> )<parameter_list pos:line="4042" pos:column="47">( 
            <param><decl><type><name pos:line="4043" pos:column="13">IDebugAlias</name> <type:modifier pos:line="4043" pos:column="25">*</type:modifier></type> <name pos:line="4043" pos:column="27">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4045" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4046" pos:column="7">IDebugAliasVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4048" pos:column="5">interface</name></type> <name pos:line="4048" pos:column="15">IDebugAlias</name>
    <argument_list pos:line="4049" pos:column="5">{
        <argument><expr><name pos:line="4050" pos:column="9">CONST_VTBL</name> struct <name pos:line="4050" pos:column="27">IDebugAliasVtbl</name> <op:operator pos:line="4050" pos:column="43">*</op:operator><name pos:line="4050" pos:column="44">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4055" pos:column="1">#<cpp:directive pos:line="4055" pos:column="2">ifdef</cpp:directive> <name pos:line="4055" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4058" pos:column="1">#<cpp:directive pos:line="4058" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4058" pos:column="9">IDebugAlias_QueryInterface</name><parameter_list pos:line="4058" pos:column="35">(<param><type><name pos:line="4058" pos:column="36">This</name></type></param>,<param><type><name pos:line="4058" pos:column="41">riid</name></type></param>,<param><type><name pos:line="4058" pos:column="46">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4059" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4061" pos:column="1">#<cpp:directive pos:line="4061" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4061" pos:column="9">IDebugAlias_AddRef</name><parameter_list pos:line="4061" pos:column="27">(<param><type><name pos:line="4061" pos:column="28">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4062" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="4064" pos:column="1">#<cpp:directive pos:line="4064" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4064" pos:column="9">IDebugAlias_Release</name><parameter_list pos:line="4064" pos:column="28">(<param><type><name pos:line="4064" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4065" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="4068" pos:column="1">#<cpp:directive pos:line="4068" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4068" pos:column="9">IDebugAlias_GetObject</name><parameter_list pos:line="4068" pos:column="30">(<param><type><name pos:line="4068" pos:column="31">This</name></type></param>,<param><type><name pos:line="4068" pos:column="36">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4069" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetObject(This,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="4071" pos:column="1">#<cpp:directive pos:line="4071" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4071" pos:column="9">IDebugAlias_GetName</name><parameter_list pos:line="4071" pos:column="28">(<param><type><name pos:line="4071" pos:column="29">This</name></type></param>,<param><type><name pos:line="4071" pos:column="34">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4072" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetName(This,pbstrName) )</cpp:value></cpp:define> 

<cpp:define pos:line="4074" pos:column="1">#<cpp:directive pos:line="4074" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4074" pos:column="9">IDebugAlias_GetICorDebugValue</name><parameter_list pos:line="4074" pos:column="38">(<param><type><name pos:line="4074" pos:column="39">This</name></type></param>,<param><type><name pos:line="4074" pos:column="44">ppUnk</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4075" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetICorDebugValue(This,ppUnk) )</cpp:value></cpp:define> 

<cpp:define pos:line="4077" pos:column="1">#<cpp:directive pos:line="4077" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4077" pos:column="9">IDebugAlias_Dispose</name><parameter_list pos:line="4077" pos:column="28">(<param><type><name pos:line="4077" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4078" pos:column="5">( (This)-&gt;lpVtbl -&gt; Dispose(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4080" pos:column="1">#<cpp:directive pos:line="4080" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4080" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4083" pos:column="1">#<cpp:directive pos:line="4083" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4083" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4088" pos:column="1">#<cpp:directive pos:line="4088" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4088" pos:column="9">/* __IDebugAlias_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="4091" pos:column="1">/* interface __MIDL_itf_ee_0000_0025 */</comment>
<comment type="block" pos:line="4092" pos:column="1">/* [local] */</comment> 

<cpp:define pos:line="4094" pos:column="1">#<cpp:directive pos:line="4094" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4094" pos:column="9">VB_EE_DLL</name></cpp:macro> <cpp:value pos:line="4094" pos:column="19">L"vbdebug.dll"</cpp:value></cpp:define>
<cpp:define pos:line="4095" pos:column="1">#<cpp:directive pos:line="4095" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4095" pos:column="9">MC_EE_DLL</name></cpp:macro> <cpp:value pos:line="4095" pos:column="19">L"mcee.dll"</cpp:value></cpp:define>
<cpp:define pos:line="4096" pos:column="1">#<cpp:directive pos:line="4096" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4096" pos:column="9">CS_EE_DLL</name></cpp:macro> <cpp:value pos:line="4096" pos:column="19">L"cscompee.dll"</cpp:value></cpp:define>
<cpp:define pos:line="4097" pos:column="1">#<cpp:directive pos:line="4097" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4097" pos:column="9">VJS_EE_DLL</name></cpp:macro> <cpp:value pos:line="4097" pos:column="20">L"vjscompee.dll"</cpp:value></cpp:define>


<decl_stmt><decl><type><specifier pos:line="4100" pos:column="1">extern</specifier> <name pos:line="4100" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="4100" pos:column="22">__MIDL_itf_ee_0000_0025_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="4101" pos:column="1">extern</specifier> <name pos:line="4101" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="4101" pos:column="22">__MIDL_itf_ee_0000_0025_v0_0_s_ifspec</name></decl>;</decl_stmt>


<cpp:ifndef pos:line="4104" pos:column="1">#<cpp:directive pos:line="4104" pos:column="2">ifndef</cpp:directive> <name pos:line="4104" pos:column="9">__MicrosoftEELib_LIBRARY_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4105" pos:column="1">#<cpp:directive pos:line="4105" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4105" pos:column="9">__MicrosoftEELib_LIBRARY_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4107" pos:column="1">/* library MicrosoftEELib */</comment>
<comment type="block" pos:line="4108" pos:column="1">/* [uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="4111" pos:column="1">EXTERN_C</name> <specifier pos:line="4111" pos:column="10">const</specifier> <name pos:line="4111" pos:column="16">IID</name></type> <name pos:line="4111" pos:column="20">LIBID_MicrosoftEELib</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name pos:line="4113" pos:column="1">EXTERN_C</name> <specifier pos:line="4113" pos:column="10">const</specifier> <name pos:line="4113" pos:column="16">CLSID</name></type> <name pos:line="4113" pos:column="22">CLSID_ManagedCppExpressionEvaluator</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="4115" pos:column="1">#<cpp:directive pos:line="4115" pos:column="2">ifdef</cpp:directive> <name pos:line="4115" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="4117" pos:column="1">class</type> <name pos:line="4117" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="4117" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="4117" pos:column="21">"FDDC0D64-0720-11D3-BDA3-00C04FA302E2"</lit:literal></expr></argument>)</argument_list>
<name pos:line="4118" pos:column="1">ManagedCppExpressionEvaluator</name></decl>;</decl_stmt>
<cpp:endif pos:line="4119" pos:column="1">#<cpp:directive pos:line="4119" pos:column="2">endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name pos:line="4121" pos:column="1">EXTERN_C</name> <specifier pos:line="4121" pos:column="10">const</specifier> <name pos:line="4121" pos:column="16">CLSID</name></type> <name pos:line="4121" pos:column="22">CLSID_CSharpExpressionEvaluator</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="4123" pos:column="1">#<cpp:directive pos:line="4123" pos:column="2">ifdef</cpp:directive> <name pos:line="4123" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="4125" pos:column="1">class</type> <name pos:line="4125" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="4125" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="4125" pos:column="21">"60F5556F-7EBC-4992-8E83-E9B49187FDE3"</lit:literal></expr></argument>)</argument_list>
<name pos:line="4126" pos:column="1">CSharpExpressionEvaluator</name></decl>;</decl_stmt>
<cpp:endif pos:line="4127" pos:column="1">#<cpp:directive pos:line="4127" pos:column="2">endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name pos:line="4129" pos:column="1">EXTERN_C</name> <specifier pos:line="4129" pos:column="10">const</specifier> <name pos:line="4129" pos:column="16">CLSID</name></type> <name pos:line="4129" pos:column="22">CLSID_JSharpExpressionEvaluator</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="4131" pos:column="1">#<cpp:directive pos:line="4131" pos:column="2">ifdef</cpp:directive> <name pos:line="4131" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="4133" pos:column="1">class</type> <name pos:line="4133" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="4133" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="4133" pos:column="21">"AFFFF3AF-61DC-4859-9799-1E404EF507D4"</lit:literal></expr></argument>)</argument_list>
<name pos:line="4134" pos:column="1">JSharpExpressionEvaluator</name></decl>;</decl_stmt>
<cpp:endif pos:line="4135" pos:column="1">#<cpp:directive pos:line="4135" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:endif pos:line="4136" pos:column="1">#<cpp:directive pos:line="4136" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4136" pos:column="8">/* __MicrosoftEELib_LIBRARY_DEFINED__ */</comment>

<comment type="block" pos:line="4138" pos:column="1">/* Additional Prototypes for ALL interfaces */</comment>

<function_decl><type><name pos:line="4140" pos:column="1">unsigned</name> <name pos:line="4140" pos:column="10">long</name>             <name pos:line="4140" pos:column="27">__RPC_USER</name></type>  <name pos:line="4140" pos:column="39">BSTR_UserSize</name><parameter_list pos:line="4140" pos:column="52">(     <param><decl><type><name pos:line="4140" pos:column="58">unsigned</name></type> <name pos:line="4140" pos:column="67">long</name> <type:modifier pos:line="4140" pos:column="72">*</type:modifier></decl></param>, <param><decl><type><name pos:line="4140" pos:column="75">unsigned</name></type> <name pos:line="4140" pos:column="84">long</name></decl></param>            , <param><decl><type><name pos:line="4140" pos:column="102">BSTR</name> <type:modifier pos:line="4140" pos:column="107">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="4141" pos:column="1">unsigned</name> <name pos:line="4141" pos:column="10">char</name> <type:modifier pos:line="4141" pos:column="15">*</type:modifier> <name pos:line="4141" pos:column="17">__RPC_USER</name></type>  <name pos:line="4141" pos:column="29">BSTR_UserMarshal</name><parameter_list pos:line="4141" pos:column="45">(  <param><decl><type><name pos:line="4141" pos:column="48">unsigned</name></type> <name pos:line="4141" pos:column="57">long</name> <type:modifier pos:line="4141" pos:column="62">*</type:modifier></decl></param>, <param><decl><type><name pos:line="4141" pos:column="65">unsigned</name></type> <name pos:line="4141" pos:column="74">char</name> <type:modifier pos:line="4141" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="4141" pos:column="82">BSTR</name> <type:modifier pos:line="4141" pos:column="87">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="4142" pos:column="1">unsigned</name> <name pos:line="4142" pos:column="10">char</name> <type:modifier pos:line="4142" pos:column="15">*</type:modifier> <name pos:line="4142" pos:column="17">__RPC_USER</name></type>  <name pos:line="4142" pos:column="29">BSTR_UserUnmarshal</name><parameter_list pos:line="4142" pos:column="47">(<param><decl><type><name pos:line="4142" pos:column="48">unsigned</name></type> <name pos:line="4142" pos:column="57">long</name> <type:modifier pos:line="4142" pos:column="62">*</type:modifier></decl></param>, <param><decl><type><name pos:line="4142" pos:column="65">unsigned</name></type> <name pos:line="4142" pos:column="74">char</name> <type:modifier pos:line="4142" pos:column="79">*</type:modifier></decl></param>, <param><decl><type><name pos:line="4142" pos:column="82">BSTR</name> <type:modifier pos:line="4142" pos:column="87">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 
<function_decl><type><name pos:line="4143" pos:column="1">void</name>                      <name pos:line="4143" pos:column="27">__RPC_USER</name></type>  <name pos:line="4143" pos:column="39">BSTR_UserFree</name><parameter_list pos:line="4143" pos:column="52">(     <param><decl><type><name pos:line="4143" pos:column="58">unsigned</name></type> <name pos:line="4143" pos:column="67">long</name> <type:modifier pos:line="4143" pos:column="72">*</type:modifier></decl></param>, <param><decl><type><name pos:line="4143" pos:column="75">BSTR</name> <type:modifier pos:line="4143" pos:column="80">*</type:modifier></type></decl></param> )</parameter_list>;</function_decl> 

<comment type="block" pos:line="4145" pos:column="1">/* end of Additional Prototypes */</comment>

<cpp:ifdef pos:line="4147" pos:column="1">#<cpp:directive pos:line="4147" pos:column="2">ifdef</cpp:directive> <name pos:line="4147" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif pos:line="4149" pos:column="1">#<cpp:directive pos:line="4149" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="4151" pos:column="1">#<cpp:directive pos:line="4151" pos:column="2">endif</cpp:directive></cpp:endif>


</unit>
