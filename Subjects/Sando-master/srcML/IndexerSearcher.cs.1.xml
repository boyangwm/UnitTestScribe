<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\Indexer\Indexer\Searching\IndexerSearcher.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Lucene</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Net</name><op:operator pos:line="2" pos:column="17">.</op:operator><name pos:line="2" pos:column="18">Search</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Sando</name><op:operator pos:line="3" pos:column="12">.</op:operator><name pos:line="3" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Sando</name><op:operator pos:line="4" pos:column="12">.</op:operator><name pos:line="4" pos:column="13">ExtensionContracts</name><op:operator pos:line="4" pos:column="31">.</op:operator><name pos:line="4" pos:column="32">ResultsReordererContracts</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Sando</name><op:operator pos:line="5" pos:column="12">.</op:operator><name pos:line="5" pos:column="13">Indexer</name><op:operator pos:line="5" pos:column="20">.</op:operator><name pos:line="5" pos:column="21">Searching</name><op:operator pos:line="5" pos:column="30">.</op:operator><name pos:line="5" pos:column="31">Criteria</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Linq</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Sando</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">Indexer</name><op:operator pos:line="7" pos:column="20">.</op:operator><name pos:line="7" pos:column="21">Documents</name><op:operator pos:line="7" pos:column="30">.</op:operator><name pos:line="7" pos:column="31">Converters</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Sando</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">Indexer</name><op:operator pos:line="8" pos:column="20">.</op:operator><name pos:line="8" pos:column="21">Documents</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Sando</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">ExtensionContracts</name><op:operator pos:line="9" pos:column="31">.</op:operator><name pos:line="9" pos:column="32">ProgramElementContracts</name></name>;</using>

<namespace pos:line="11" pos:column="1">namespace <name><name pos:line="11" pos:column="11">Sando</name><op:operator pos:line="11" pos:column="16">.</op:operator><name pos:line="11" pos:column="17">Indexer</name><op:operator pos:line="11" pos:column="24">.</op:operator><name pos:line="11" pos:column="25">Searching</name></name>
<block pos:line="12" pos:column="1">{
	<class><specifier pos:line="13" pos:column="9">public</specifier> class <name pos:line="13" pos:column="22">IndexerSearcher</name> <super pos:line="13" pos:column="38">: <name pos:line="13" pos:column="40">IIndexerSearcher</name></super>
	<block pos:line="14" pos:column="9">{
		<constructor><specifier pos:line="15" pos:column="17">public</specifier> <name pos:line="15" pos:column="24">IndexerSearcher</name><parameter_list pos:line="15" pos:column="39">()</parameter_list>
		<block pos:line="16" pos:column="17">{
			<expr_stmt><expr><name pos:line="17" pos:column="25">_documentIndexer</name> <op:operator pos:line="17" pos:column="42">=</op:operator> <call><name><name pos:line="17" pos:column="44">ServiceLocator</name><op:operator pos:line="17" pos:column="58">.</op:operator><name><name pos:line="17" pos:column="59">Resolve</name><argument_list pos:line="17" pos:column="66">&lt;<argument><name pos:line="17" pos:column="67">DocumentIndexer</name></argument>&gt;</argument_list></name></name><argument_list pos:line="17" pos:column="83">()</argument_list></call></expr>;</expr_stmt>
		}</block></constructor>

		<function><type><specifier pos:line="20" pos:column="17">public</specifier> <name><name pos:line="20" pos:column="24">IEnumerable</name><argument_list pos:line="20" pos:column="35">&lt;<argument><name pos:line="20" pos:column="36">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="20" pos:column="54">Search</name><parameter_list pos:line="20" pos:column="60">(<param><decl><type><name pos:line="20" pos:column="61">SearchCriteria</name></type> <name pos:line="20" pos:column="76">searchCriteria</name></decl></param>)</parameter_list>
		<block pos:line="21" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="22" pos:column="25">var</name></type> <name pos:line="22" pos:column="29">penalizeClasses</name> <init pos:line="22" pos:column="45">= <expr><lit:literal type="boolean" pos:line="22" pos:column="47">false</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="23" pos:column="25">var</name></type> <name pos:line="23" pos:column="29">searchQueryString</name> <init pos:line="23" pos:column="47">= <expr><call><name><name pos:line="23" pos:column="49">searchCriteria</name><op:operator pos:line="23" pos:column="63">.</op:operator><name pos:line="23" pos:column="64">ToQueryString</name></name><argument_list pos:line="23" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="24" pos:column="25">if<condition pos:line="24" pos:column="27">(<expr><name pos:line="24" pos:column="28">searchCriteria</name> <op:operator pos:line="24" pos:column="43">as</op:operator> <name pos:line="24" pos:column="46">SimpleSearchCriteria</name> <op:operator pos:line="24" pos:column="67">!=</op:operator> <name pos:line="24" pos:column="70">null</name> <op:operator pos:line="24" pos:column="75">&amp;&amp;</op:operator> <op:operator pos:line="24" pos:column="78">(</op:operator><name pos:line="24" pos:column="79">searchCriteria</name> <op:operator pos:line="24" pos:column="94">as</op:operator> <name pos:line="24" pos:column="97">SimpleSearchCriteria</name><op:operator pos:line="24" pos:column="117">)</op:operator><op:operator pos:line="24" pos:column="118">.</op:operator><call><name pos:line="24" pos:column="119">IsLiteralSearch</name><argument_list pos:line="24" pos:column="134">()</argument_list></call></expr>)</condition><then pos:line="24" pos:column="137">
			<block pos:line="25" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="26" pos:column="33">_documentIndexer</name><op:operator pos:line="26" pos:column="49">.</op:operator><name pos:line="26" pos:column="50">QueryParser</name><op:operator pos:line="26" pos:column="61">.</op:operator><name pos:line="26" pos:column="62">SetAllowLeadingWildcard</name></name><argument_list pos:line="26" pos:column="85">(<argument><expr><lit:literal type="boolean" pos:line="26" pos:column="86">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="27" pos:column="33">_documentIndexer</name><op:operator pos:line="27" pos:column="49">.</op:operator><name pos:line="27" pos:column="50">QueryParser</name><op:operator pos:line="27" pos:column="61">.</op:operator><name pos:line="27" pos:column="62">SetLowercaseExpandedTerms</name></name><argument_list pos:line="27" pos:column="87">(<argument><expr><lit:literal type="boolean" pos:line="27" pos:column="88">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="28" pos:column="33">penalizeClasses</name> <op:operator pos:line="28" pos:column="49">=</op:operator> <lit:literal type="boolean" pos:line="28" pos:column="51">true</lit:literal></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="30" pos:column="25">else
			<block pos:line="31" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="32" pos:column="33">_documentIndexer</name><op:operator pos:line="32" pos:column="49">.</op:operator><name pos:line="32" pos:column="50">QueryParser</name><op:operator pos:line="32" pos:column="61">.</op:operator><name pos:line="32" pos:column="62">SetAllowLeadingWildcard</name></name><argument_list pos:line="32" pos:column="85">(<argument><expr><lit:literal type="boolean" pos:line="32" pos:column="86">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="33" pos:column="33">_documentIndexer</name><op:operator pos:line="33" pos:column="49">.</op:operator><name pos:line="33" pos:column="50">QueryParser</name><op:operator pos:line="33" pos:column="61">.</op:operator><name pos:line="33" pos:column="62">SetLowercaseExpandedTerms</name></name><argument_list pos:line="33" pos:column="87">(<argument><expr><lit:literal type="boolean" pos:line="33" pos:column="88">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>

			<decl_stmt><decl><type><name pos:line="36" pos:column="25">var</name></type> <name pos:line="36" pos:column="29">query</name> <init pos:line="36" pos:column="35">= <expr><call><name><name pos:line="36" pos:column="37">_documentIndexer</name><op:operator pos:line="36" pos:column="53">.</op:operator><name pos:line="36" pos:column="54">QueryParser</name><op:operator pos:line="36" pos:column="65">.</op:operator><name pos:line="36" pos:column="66">Parse</name></name><argument_list pos:line="36" pos:column="71">(<argument><expr><name pos:line="36" pos:column="72">searchQueryString</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="37" pos:column="25">var</name></type> <name pos:line="37" pos:column="29">hitsPerPage</name> <init pos:line="37" pos:column="41">= <expr><name><name pos:line="37" pos:column="43">searchCriteria</name><op:operator pos:line="37" pos:column="57">.</op:operator><name pos:line="37" pos:column="58">NumberOfSearchResultsReturned</name></name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="38" pos:column="25">var</name></type> <name pos:line="38" pos:column="29">collector</name> <init pos:line="38" pos:column="39">= <expr><call><name><name pos:line="38" pos:column="41">TopScoreDocCollector</name><op:operator pos:line="38" pos:column="61">.</op:operator><name pos:line="38" pos:column="62">create</name></name><argument_list pos:line="38" pos:column="68">(<argument><expr><name pos:line="38" pos:column="69">hitsPerPage</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="38" pos:column="82">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="39" pos:column="25">var</name></type> <name pos:line="39" pos:column="29">documentTuples</name> <init pos:line="39" pos:column="44">= <expr><call><name><name pos:line="39" pos:column="46">_documentIndexer</name><op:operator pos:line="39" pos:column="62">.</op:operator><name pos:line="39" pos:column="63">Search</name></name><argument_list pos:line="39" pos:column="69">(<argument><expr><name pos:line="39" pos:column="70">query</name></expr></argument>, <argument><expr><name pos:line="39" pos:column="77">collector</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="40" pos:column="25">var</name></type> <name pos:line="40" pos:column="29">searchResults</name> <init pos:line="40" pos:column="43">= <expr><call><name><name pos:line="40" pos:column="45">documentTuples</name><op:operator pos:line="40" pos:column="59">.</op:operator><name pos:line="40" pos:column="60">Select</name></name><argument_list pos:line="40" pos:column="66">(<argument><expr><lambda><name pos:line="40" pos:column="67">d</name> <op:operator pos:line="40" pos:column="69">=&gt;</op:operator> <op:operator pos:line="40" pos:column="72">new</op:operator> <call><name pos:line="40" pos:column="76">CodeSearchResult</name><argument_list pos:line="40" pos:column="92">(<argument><expr><call><name><name pos:line="40" pos:column="93">ConverterFromHitToProgramElement</name><op:operator pos:line="40" pos:column="125">.</op:operator><name pos:line="40" pos:column="126">Create</name></name><argument_list pos:line="40" pos:column="132">(<argument><expr><name><name pos:line="40" pos:column="133">d</name><op:operator pos:line="40" pos:column="134">.</op:operator><name pos:line="40" pos:column="135">Item1</name></name></expr></argument>)</argument_list></call><op:operator pos:line="40" pos:column="141">.</op:operator><call><name pos:line="40" pos:column="142">Convert</name><argument_list pos:line="40" pos:column="149">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="153">penalizeClasses</name> <op:operator pos:line="40" pos:column="169">&amp;&amp;</op:operator> <call><name><name pos:line="40" pos:column="172">d</name><op:operator pos:line="40" pos:column="173">.</op:operator><name pos:line="40" pos:column="174">Item1</name><op:operator pos:line="40" pos:column="179">.</op:operator><name pos:line="40" pos:column="180">GetField</name></name><argument_list pos:line="40" pos:column="188">(<argument><expr><call><name><name pos:line="40" pos:column="189">SandoField</name><op:operator pos:line="40" pos:column="199">.</op:operator><name pos:line="40" pos:column="200">ProgramElementType</name><op:operator pos:line="40" pos:column="218">.</op:operator><name pos:line="40" pos:column="219">ToString</name></name><argument_list pos:line="40" pos:column="227">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="40" pos:column="230">.</op:operator><call><name pos:line="40" pos:column="231">StringValue</name><argument_list pos:line="40" pos:column="242">()</argument_list></call><op:operator pos:line="40" pos:column="244">.</op:operator><call><name pos:line="40" pos:column="245">Equals</name><argument_list pos:line="40" pos:column="251">(<argument><expr><call><name><name pos:line="40" pos:column="252">ProgramElementType</name><op:operator pos:line="40" pos:column="270">.</op:operator><name pos:line="40" pos:column="271">Class</name><op:operator pos:line="40" pos:column="276">.</op:operator><name pos:line="40" pos:column="277">ToString</name></name><argument_list pos:line="40" pos:column="285">()</argument_list></call><op:operator pos:line="40" pos:column="287">.</op:operator><call><name pos:line="40" pos:column="288">ToLower</name><argument_list pos:line="40" pos:column="295">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="40" pos:column="299">?</op:operator> <name><name pos:line="40" pos:column="301">d</name><op:operator pos:line="40" pos:column="302">.</op:operator><name pos:line="40" pos:column="303">Item2</name></name> <op:operator pos:line="40" pos:column="309">/</op:operator> <lit:literal type="number" pos:line="40" pos:column="311">10</lit:literal> <op:operator pos:line="40" pos:column="314">:</op:operator> <name><name pos:line="40" pos:column="316">d</name><op:operator pos:line="40" pos:column="317">.</op:operator><name pos:line="40" pos:column="318">Item2</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<return pos:line="42" pos:column="25">return <expr><name pos:line="42" pos:column="32">searchResults</name></expr>;</return>
		}</block></function>

		<decl_stmt><decl><type><specifier pos:line="45" pos:column="17">private</specifier> <specifier pos:line="45" pos:column="25">readonly</specifier> <name pos:line="45" pos:column="34">DocumentIndexer</name></type> <name pos:line="45" pos:column="50">_documentIndexer</name></decl>;</decl_stmt>
	}</block></class>
}</block></namespace>
</unit>
