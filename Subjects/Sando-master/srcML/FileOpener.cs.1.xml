<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\UI\UI\Actions\FileOpener.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name pos:line="2" pos:column="7">EnvDTE</name>;</using>
<using pos:line="3" pos:column="1">using <name pos:line="3" pos:column="7">EnvDTE80</name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Sando</name><op:operator pos:line="4" pos:column="12">.</op:operator><name pos:line="4" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Sando</name><op:operator pos:line="5" pos:column="12">.</op:operator><name pos:line="5" pos:column="13">ExtensionContracts</name><op:operator pos:line="5" pos:column="31">.</op:operator><name pos:line="5" pos:column="32">ResultsReordererContracts</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Sando</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">Core</name><op:operator pos:line="6" pos:column="17">.</op:operator><name pos:line="6" pos:column="18">Logging</name><op:operator pos:line="6" pos:column="25">.</op:operator><name pos:line="6" pos:column="26">Events</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Sando</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">Core</name><op:operator pos:line="7" pos:column="17">.</op:operator><name pos:line="7" pos:column="18">Tools</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">System</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">Collections</name><op:operator pos:line="8" pos:column="25">.</op:operator><name pos:line="8" pos:column="26">Generic</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Sando</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">Indexer</name><op:operator pos:line="9" pos:column="20">.</op:operator><name pos:line="9" pos:column="21">Searching</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Microsoft</name><op:operator pos:line="10" pos:column="16">.</op:operator><name pos:line="10" pos:column="17">VisualStudio</name><op:operator pos:line="10" pos:column="29">.</op:operator><name pos:line="10" pos:column="30">Shell</name></name>;</using>

<namespace pos:line="12" pos:column="1">namespace <name><name pos:line="12" pos:column="11">Sando</name><op:operator pos:line="12" pos:column="16">.</op:operator><name pos:line="12" pos:column="17">UI</name><op:operator pos:line="12" pos:column="19">.</op:operator><name pos:line="12" pos:column="20">Actions</name></name>
<block pos:line="13" pos:column="1">{
    <class><specifier pos:line="14" pos:column="5">public</specifier> <specifier pos:line="14" pos:column="12">static</specifier> class <name pos:line="14" pos:column="25">FileOpener</name>
    <block pos:line="15" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">private</specifier> <specifier pos:line="16" pos:column="17">static</specifier> <name pos:line="16" pos:column="24">DTE2</name></type> <name pos:line="16" pos:column="29">_dte</name></decl>;</decl_stmt>

        <function><type><specifier pos:line="18" pos:column="9">public</specifier> <specifier pos:line="18" pos:column="16">static</specifier> <name pos:line="18" pos:column="23">void</name></type> <name pos:line="18" pos:column="28">OpenItem</name><parameter_list pos:line="18" pos:column="36">(<param><decl><type><name pos:line="18" pos:column="37">CodeSearchResult</name></type> <name pos:line="18" pos:column="54">result</name></decl></param>)</parameter_list>
        <block pos:line="19" pos:column="9">{
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><name pos:line="20" pos:column="17">result</name> <op:operator pos:line="20" pos:column="24">!=</op:operator> <name pos:line="20" pos:column="27">null</name> <op:operator pos:line="20" pos:column="32">&amp;&amp;</op:operator> <name><name pos:line="20" pos:column="35">result</name><op:operator pos:line="20" pos:column="41">.</op:operator><name pos:line="20" pos:column="42">ProgramElement</name></name><op:operator pos:line="20" pos:column="56">!=</op:operator><name pos:line="20" pos:column="58">null</name></expr>)</condition><then pos:line="20" pos:column="63">
            <block pos:line="21" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="22" pos:column="17">OpenFile</name><argument_list pos:line="22" pos:column="25">(<argument><expr><name><name pos:line="22" pos:column="26">result</name><op:operator pos:line="22" pos:column="32">.</op:operator><name pos:line="22" pos:column="33">ProgramElement</name><op:operator pos:line="22" pos:column="47">.</op:operator><name pos:line="22" pos:column="48">FullFilePath</name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="62">result</name><op:operator pos:line="22" pos:column="68">.</op:operator><name pos:line="22" pos:column="69">ProgramElement</name><op:operator pos:line="22" pos:column="83">.</op:operator><name pos:line="22" pos:column="84">DefinitionLineNumber</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="26" pos:column="9">public</specifier> <specifier pos:line="26" pos:column="16">static</specifier> <name pos:line="26" pos:column="23">void</name></type> <name pos:line="26" pos:column="28">OpenFile</name><parameter_list pos:line="26" pos:column="36">(<param><decl><type><name pos:line="26" pos:column="37">string</name></type> <name pos:line="26" pos:column="44">filePath</name></decl></param>, <param><decl><type><name pos:line="26" pos:column="54">int</name></type> <name pos:line="26" pos:column="58">lineNumber</name></decl></param>)</parameter_list>
        <block pos:line="27" pos:column="9">{
            <try pos:line="28" pos:column="13">try
            <block pos:line="29" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="30" pos:column="17">InitDte2</name><argument_list pos:line="30" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="31" pos:column="17">Window</name></type> <name pos:line="31" pos:column="24">window</name> <init pos:line="31" pos:column="31">= <expr><call><name><name pos:line="31" pos:column="33">_dte</name><op:operator pos:line="31" pos:column="37">.</op:operator><name pos:line="31" pos:column="38">ItemOperations</name><op:operator pos:line="31" pos:column="52">.</op:operator><name pos:line="31" pos:column="53">OpenFile</name></name><argument_list pos:line="31" pos:column="61">(<argument><expr><name pos:line="31" pos:column="62">filePath</name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="72">Constants</name><op:operator pos:line="31" pos:column="81">.</op:operator><name pos:line="31" pos:column="82">vsViewKindTextView</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="32" pos:column="17">var</name></type> <name pos:line="32" pos:column="21">selection</name> <init pos:line="32" pos:column="31">= <expr><op:operator pos:line="32" pos:column="33">(</op:operator><name pos:line="32" pos:column="34">TextSelection</name><op:operator pos:line="32" pos:column="47">)</op:operator><name><name pos:line="32" pos:column="48">_dte</name><op:operator pos:line="32" pos:column="52">.</op:operator><name pos:line="32" pos:column="53">ActiveDocument</name><op:operator pos:line="32" pos:column="67">.</op:operator><name pos:line="32" pos:column="68">Selection</name></name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="33" pos:column="17">selection</name><op:operator pos:line="33" pos:column="26">.</op:operator><name pos:line="33" pos:column="27">GotoLine</name></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">lineNumber</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="35" pos:column="13">catch <parameter_list pos:line="35" pos:column="19">(<param><decl><type><name pos:line="35" pos:column="20">Exception</name></type> <name pos:line="35" pos:column="30">e</name></decl></param>)</parameter_list>
            <block pos:line="36" pos:column="13">{
                    <expr_stmt><expr><call><name><name pos:line="37" pos:column="21">LogEvents</name><op:operator pos:line="37" pos:column="30">.</op:operator><name pos:line="37" pos:column="31">UIOpenFileError</name></name><argument_list pos:line="37" pos:column="46">(<argument><expr><call><name><name pos:line="37" pos:column="47">System</name><op:operator pos:line="37" pos:column="53">.</op:operator><name pos:line="37" pos:column="54">Reflection</name><op:operator pos:line="37" pos:column="64">.</op:operator><name pos:line="37" pos:column="65">MethodBase</name><op:operator pos:line="37" pos:column="75">.</op:operator><name pos:line="37" pos:column="76">GetCurrentMethod</name></name><argument_list pos:line="37" pos:column="92">()</argument_list></call><op:operator pos:line="37" pos:column="94">.</op:operator><name pos:line="37" pos:column="95">DeclaringType</name></expr></argument>, <argument><expr><name pos:line="37" pos:column="110">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="38" pos:column="17">//ignore, we don't want this feature ever causing a crash</comment>
            }</block></catch></try>
        }</block></function>


        <function><type><specifier pos:line="43" pos:column="9">public</specifier> <specifier pos:line="43" pos:column="16">static</specifier> <name pos:line="43" pos:column="23">bool</name></type> <name pos:line="43" pos:column="28">Is2012OrLater</name><parameter_list pos:line="43" pos:column="41">()</parameter_list>
        <block pos:line="44" pos:column="9">{
            <decl_stmt><decl><type><name><name pos:line="45" pos:column="13">EnvDTE</name><op:operator pos:line="45" pos:column="19">.</op:operator><name pos:line="45" pos:column="20">DTE</name></name></type> <name pos:line="45" pos:column="24">dte</name> <init pos:line="45" pos:column="28">= <expr><op:operator pos:line="45" pos:column="30">(</op:operator><name><name pos:line="45" pos:column="31">EnvDTE</name><op:operator pos:line="45" pos:column="37">.</op:operator><name pos:line="45" pos:column="38">DTE</name></name><op:operator pos:line="45" pos:column="41">)</op:operator><call><name><name pos:line="45" pos:column="42">Package</name><op:operator pos:line="45" pos:column="49">.</op:operator><name pos:line="45" pos:column="50">GetGlobalService</name></name><argument_list pos:line="45" pos:column="66">(<argument><expr><call><name pos:line="45" pos:column="67">typeof</name><argument_list pos:line="45" pos:column="73">(<argument><expr><name><name pos:line="45" pos:column="74">EnvDTE</name><op:operator pos:line="45" pos:column="80">.</op:operator><name pos:line="45" pos:column="81">DTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><call><name><name pos:line="46" pos:column="17">dte</name><op:operator pos:line="46" pos:column="20">.</op:operator><name pos:line="46" pos:column="21">Version</name><op:operator pos:line="46" pos:column="28">.</op:operator><name pos:line="46" pos:column="29">Contains</name></name><argument_list pos:line="46" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="38">"11.0"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="46" pos:column="46">||</op:operator> <call><name><name pos:line="46" pos:column="49">dte</name><op:operator pos:line="46" pos:column="52">.</op:operator><name pos:line="46" pos:column="53">Version</name><op:operator pos:line="46" pos:column="60">.</op:operator><name pos:line="46" pos:column="61">Contains</name></name><argument_list pos:line="46" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="70">"12.0"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="46" pos:column="78">||</op:operator> <call><name><name pos:line="46" pos:column="81">dte</name><op:operator pos:line="46" pos:column="84">.</op:operator><name pos:line="46" pos:column="85">Version</name><op:operator pos:line="46" pos:column="92">.</op:operator><name pos:line="46" pos:column="93">Contains</name></name><argument_list pos:line="46" pos:column="101">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="102">"13.0"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="46" pos:column="110">
                <return pos:line="47" pos:column="17">return <expr><lit:literal type="boolean" pos:line="47" pos:column="24">true</lit:literal></expr>;</return></then></if>
            <return pos:line="48" pos:column="13">return <expr><lit:literal type="boolean" pos:line="48" pos:column="20">false</lit:literal></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="51" pos:column="9">private</specifier> <specifier pos:line="51" pos:column="17">static</specifier> <name pos:line="51" pos:column="24">void</name></type> <name pos:line="51" pos:column="29">InitDte2</name><parameter_list pos:line="51" pos:column="37">()</parameter_list>
        <block pos:line="52" pos:column="9">{
            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><name pos:line="53" pos:column="17">_dte</name> <op:operator pos:line="53" pos:column="22">==</op:operator> <name pos:line="53" pos:column="25">null</name></expr>)</condition><then pos:line="53" pos:column="30">
            <block pos:line="54" pos:column="13">{
                <expr_stmt><expr><name pos:line="55" pos:column="17">_dte</name> <op:operator pos:line="55" pos:column="22">=</op:operator> <call><name><name pos:line="55" pos:column="24">ServiceLocator</name><op:operator pos:line="55" pos:column="38">.</op:operator><name><name pos:line="55" pos:column="39">Resolve</name><argument_list pos:line="55" pos:column="46">&lt;<argument><name pos:line="55" pos:column="47">DTE2</name></argument>&gt;</argument_list></name></name><argument_list pos:line="55" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
        
    }</block></class>

}</block></namespace>
</unit>
