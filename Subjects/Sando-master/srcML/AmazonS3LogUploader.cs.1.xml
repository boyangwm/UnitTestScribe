<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\Core\Core\Logging\UPLOAD\AmazonS3LogUploader.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Amazon</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">S3</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Amazon</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">S3</name><op:operator pos:line="6" pos:column="16">.</op:operator><name pos:line="6" pos:column="17">Model</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Sando</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">Core</name><op:operator pos:line="7" pos:column="17">.</op:operator><name pos:line="7" pos:column="18">Logging</name><op:operator pos:line="7" pos:column="25">.</op:operator><name pos:line="7" pos:column="26">Events</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Sando</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">Core</name><op:operator pos:line="8" pos:column="17">.</op:operator><name pos:line="8" pos:column="18">Logging</name><op:operator pos:line="8" pos:column="25">.</op:operator><name pos:line="8" pos:column="26">Persistence</name></name>;</using>

<namespace pos:line="10" pos:column="1">namespace <name><name pos:line="10" pos:column="11">Sando</name><op:operator pos:line="10" pos:column="16">.</op:operator><name pos:line="10" pos:column="17">Core</name><op:operator pos:line="10" pos:column="21">.</op:operator><name pos:line="10" pos:column="22">Logging</name><op:operator pos:line="10" pos:column="29">.</op:operator><name pos:line="10" pos:column="30">Upload</name></name>
<block pos:line="11" pos:column="1">{
	<class><specifier pos:line="12" pos:column="9">public</specifier> class <name pos:line="12" pos:column="22">AmazonS3LogUploader</name>
	<block pos:line="13" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="14" pos:column="17">private</specifier> <specifier pos:line="14" pos:column="25">static</specifier> <name pos:line="14" pos:column="32">string</name></type> <name pos:line="14" pos:column="39">_accessKeyId</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="15" pos:column="17">private</specifier> <specifier pos:line="15" pos:column="25">static</specifier> <name pos:line="15" pos:column="32">string</name></type> <name pos:line="15" pos:column="39">_secretAccessKey</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="16" pos:column="17">private</specifier> <specifier pos:line="16" pos:column="25">static</specifier> <name pos:line="16" pos:column="32">string</name></type> <name pos:line="16" pos:column="39">_bucketName</name></decl>;</decl_stmt>

		<function><type><specifier pos:line="18" pos:column="17">public</specifier> <specifier pos:line="18" pos:column="24">static</specifier> <name pos:line="18" pos:column="31">bool</name></type> <name pos:line="18" pos:column="36">WriteLogFile</name><parameter_list pos:line="18" pos:column="48">(<param><decl><type><name pos:line="18" pos:column="49">string</name></type> <name pos:line="18" pos:column="56">uploadFilePath</name></decl></param>, <param><decl><type><name pos:line="18" pos:column="72">string</name></type> <name pos:line="18" pos:column="79">credentialFilePath</name></decl></param>)</parameter_list>
		<block pos:line="19" pos:column="17">{
            <decl_stmt><decl><type><name pos:line="20" pos:column="13">Type</name></type> <name pos:line="20" pos:column="18">t</name> <init pos:line="20" pos:column="20">= <expr><call><name><name pos:line="20" pos:column="22">System</name><op:operator pos:line="20" pos:column="28">.</op:operator><name pos:line="20" pos:column="29">Reflection</name><op:operator pos:line="20" pos:column="39">.</op:operator><name pos:line="20" pos:column="40">MethodBase</name><op:operator pos:line="20" pos:column="50">.</op:operator><name pos:line="20" pos:column="51">GetCurrentMethod</name></name><argument_list pos:line="20" pos:column="67">()</argument_list></call><op:operator pos:line="20" pos:column="69">.</op:operator><name pos:line="20" pos:column="70">DeclaringType</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="21" pos:column="25">LogEvents</name><op:operator pos:line="21" pos:column="34">.</op:operator><name pos:line="21" pos:column="35">S3UploadStarted</name></name><argument_list pos:line="21" pos:column="50">(<argument><expr><name pos:line="21" pos:column="51">t</name></expr></argument>, <argument><expr><name pos:line="21" pos:column="54">uploadFilePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<try pos:line="22" pos:column="25">try
			<block pos:line="23" pos:column="25">{
				<if pos:line="24" pos:column="33">if<condition pos:line="24" pos:column="35">(<expr><call><name pos:line="24" pos:column="36">ReadS3Credentials</name><argument_list pos:line="24" pos:column="53">(<argument><expr><name pos:line="24" pos:column="54">credentialFilePath</name></expr></argument>)</argument_list></call> <op:operator pos:line="24" pos:column="74">==</op:operator> <lit:literal type="boolean" pos:line="24" pos:column="77">false</lit:literal></expr>)</condition><then pos:line="24" pos:column="83">
				<block pos:line="25" pos:column="33">{
                    <expr_stmt><expr><call><name><name pos:line="26" pos:column="21">LogEvents</name><op:operator pos:line="26" pos:column="30">.</op:operator><name pos:line="26" pos:column="31">S3NoCredentials</name></name><argument_list pos:line="26" pos:column="46">(<argument><expr><name pos:line="26" pos:column="47">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="27" pos:column="41">return <expr><lit:literal type="boolean" pos:line="27" pos:column="48">false</lit:literal></expr>;</return>
				}</block></then></if>
				<decl_stmt><decl><type><name pos:line="29" pos:column="33">AmazonS3</name></type> <name pos:line="29" pos:column="42">client</name> <init pos:line="29" pos:column="49">= <expr><call><name><name pos:line="29" pos:column="51">Amazon</name><op:operator pos:line="29" pos:column="57">.</op:operator><name pos:line="29" pos:column="58">AWSClientFactory</name><op:operator pos:line="29" pos:column="74">.</op:operator><name pos:line="29" pos:column="75">CreateAmazonS3Client</name></name><argument_list pos:line="29" pos:column="95">(<argument><expr><name pos:line="29" pos:column="96">_accessKeyId</name></expr></argument>, <argument><expr><name pos:line="29" pos:column="110">_secretAccessKey</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="30" pos:column="33">PutObjectRequest</name></type> <name pos:line="30" pos:column="50">request</name> <init pos:line="30" pos:column="58">= <expr><op:operator pos:line="30" pos:column="60">new</op:operator> <call><name pos:line="30" pos:column="64">PutObjectRequest</name><argument_list pos:line="30" pos:column="80">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="31" pos:column="33">string</name></type> <name pos:line="31" pos:column="40">fileName</name> <init pos:line="31" pos:column="49">= <expr><call><name><name pos:line="31" pos:column="51">System</name><op:operator pos:line="31" pos:column="57">.</op:operator><name pos:line="31" pos:column="58">IO</name><op:operator pos:line="31" pos:column="60">.</op:operator><name pos:line="31" pos:column="61">Path</name><op:operator pos:line="31" pos:column="65">.</op:operator><name pos:line="31" pos:column="66">GetFileName</name></name><argument_list pos:line="31" pos:column="77">(<argument><expr><name pos:line="31" pos:column="78">uploadFilePath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="32" pos:column="33">request</name><op:operator pos:line="32" pos:column="40">.</op:operator><name pos:line="32" pos:column="41">WithFilePath</name></name><argument_list pos:line="32" pos:column="53">(<argument><expr><name pos:line="32" pos:column="54">uploadFilePath</name></expr></argument>)</argument_list></call><op:operator pos:line="32" pos:column="69">.</op:operator><call><name pos:line="32" pos:column="70">WithBucketName</name><argument_list pos:line="32" pos:column="84">(<argument><expr><name pos:line="32" pos:column="85">_bucketName</name></expr></argument>)</argument_list></call><op:operator pos:line="32" pos:column="97">.</op:operator><call><name pos:line="32" pos:column="98">WithKey</name><argument_list pos:line="32" pos:column="105">(<argument><expr><name pos:line="32" pos:column="106">fileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="33" pos:column="33">S3Response</name></type> <name pos:line="33" pos:column="44">responseWithMetadata</name> <init pos:line="33" pos:column="65">= <expr><call><name><name pos:line="33" pos:column="67">client</name><op:operator pos:line="33" pos:column="73">.</op:operator><name pos:line="33" pos:column="74">PutObject</name></name><argument_list pos:line="33" pos:column="83">(<argument><expr><name pos:line="33" pos:column="84">request</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<return pos:line="34" pos:column="33">return <expr><lit:literal type="boolean" pos:line="34" pos:column="40">true</lit:literal></expr>;</return>
			}</block>
			<catch pos:line="36" pos:column="25">catch <parameter_list pos:line="36" pos:column="31">(<param><decl><type><name pos:line="36" pos:column="32">AmazonS3Exception</name></type> <name pos:line="36" pos:column="50">amazonS3Exception</name></decl></param>)</parameter_list>
			<block pos:line="37" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="38" pos:column="33">LogEvents</name><op:operator pos:line="38" pos:column="42">.</op:operator><name pos:line="38" pos:column="43">S3Error</name></name><argument_list pos:line="38" pos:column="50">(<argument><expr><name pos:line="38" pos:column="51">t</name></expr></argument>, <argument><expr><name pos:line="38" pos:column="54">amazonS3Exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>				
				<return pos:line="39" pos:column="33">return <expr><lit:literal type="boolean" pos:line="39" pos:column="40">false</lit:literal></expr>;</return>
			}</block></catch></try>
		}</block></function>

        <function><type><specifier pos:line="43" pos:column="9">public</specifier> <specifier pos:line="43" pos:column="16">static</specifier> <name pos:line="43" pos:column="23">bool</name></type> <name pos:line="43" pos:column="28">ReadLogFile</name><parameter_list pos:line="43" pos:column="39">(<param><decl><type><name pos:line="43" pos:column="40">string</name></type> <name pos:line="43" pos:column="47">s3FileName</name></decl></param>, <param><decl><type><name pos:line="43" pos:column="59">string</name></type> <name pos:line="43" pos:column="66">credentialFilePath</name></decl></param>)</parameter_list>
        <block pos:line="44" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="45" pos:column="13">Type</name></type> <name pos:line="45" pos:column="18">t</name> <init pos:line="45" pos:column="20">= <expr><call><name><name pos:line="45" pos:column="22">System</name><op:operator pos:line="45" pos:column="28">.</op:operator><name pos:line="45" pos:column="29">Reflection</name><op:operator pos:line="45" pos:column="39">.</op:operator><name pos:line="45" pos:column="40">MethodBase</name><op:operator pos:line="45" pos:column="50">.</op:operator><name pos:line="45" pos:column="51">GetCurrentMethod</name></name><argument_list pos:line="45" pos:column="67">()</argument_list></call><op:operator pos:line="45" pos:column="69">.</op:operator><name pos:line="45" pos:column="70">DeclaringType</name></expr></init></decl>;</decl_stmt>
            <try pos:line="46" pos:column="13">try
            <block pos:line="47" pos:column="13">{
                <if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><call><name pos:line="48" pos:column="21">ReadS3Credentials</name><argument_list pos:line="48" pos:column="38">(<argument><expr><name pos:line="48" pos:column="39">credentialFilePath</name></expr></argument>)</argument_list></call> <op:operator pos:line="48" pos:column="59">==</op:operator> <lit:literal type="boolean" pos:line="48" pos:column="62">false</lit:literal></expr>)</condition><then pos:line="48" pos:column="68">
                <block pos:line="49" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="50" pos:column="21">LogEvents</name><op:operator pos:line="50" pos:column="30">.</op:operator><name pos:line="50" pos:column="31">S3NoCredentials</name></name><argument_list pos:line="50" pos:column="46">(<argument><expr><name pos:line="50" pos:column="47">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return pos:line="51" pos:column="21">return <expr><lit:literal type="boolean" pos:line="51" pos:column="28">false</lit:literal></expr>;</return>
                }</block></then></if>
                <decl_stmt><decl><type><name pos:line="53" pos:column="17">AmazonS3</name></type> <name pos:line="53" pos:column="26">client</name> <init pos:line="53" pos:column="33">= <expr><call><name><name pos:line="53" pos:column="35">Amazon</name><op:operator pos:line="53" pos:column="41">.</op:operator><name pos:line="53" pos:column="42">AWSClientFactory</name><op:operator pos:line="53" pos:column="58">.</op:operator><name pos:line="53" pos:column="59">CreateAmazonS3Client</name></name><argument_list pos:line="53" pos:column="79">(<argument><expr><name pos:line="53" pos:column="80">_accessKeyId</name></expr></argument>, <argument><expr><name pos:line="53" pos:column="94">_secretAccessKey</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="54" pos:column="17">GetObjectRequest</name></type> <name pos:line="54" pos:column="34">request</name> <init pos:line="54" pos:column="42">= <expr><op:operator pos:line="54" pos:column="44">new</op:operator> <call><name pos:line="54" pos:column="48">GetObjectRequest</name><argument_list pos:line="54" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="55" pos:column="17">request</name><op:operator pos:line="55" pos:column="24">.</op:operator><name pos:line="55" pos:column="25">WithBucketName</name></name><argument_list pos:line="55" pos:column="39">(<argument><expr><name pos:line="55" pos:column="40">_bucketName</name></expr></argument>)</argument_list></call><op:operator pos:line="55" pos:column="52">.</op:operator><call><name pos:line="55" pos:column="53">WithKey</name><argument_list pos:line="55" pos:column="60">(<argument><expr><name pos:line="55" pos:column="61">s3FileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="56" pos:column="17">S3Response</name></type> <name pos:line="56" pos:column="28">responseWithMetadata</name> <init pos:line="56" pos:column="49">= <expr><call><name><name pos:line="56" pos:column="51">client</name><op:operator pos:line="56" pos:column="57">.</op:operator><name pos:line="56" pos:column="58">GetObject</name></name><argument_list pos:line="56" pos:column="67">(<argument><expr><name pos:line="56" pos:column="68">request</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <return pos:line="57" pos:column="17">return <expr><lit:literal type="boolean" pos:line="57" pos:column="24">true</lit:literal></expr>;</return>
            }</block>
            <catch pos:line="59" pos:column="13">catch <parameter_list pos:line="59" pos:column="19">(<param><decl><type><name pos:line="59" pos:column="20">AmazonS3Exception</name></type> <name pos:line="59" pos:column="38">amazonS3Exception</name></decl></param>)</parameter_list>
            <block pos:line="60" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="61" pos:column="17">LogEvents</name><op:operator pos:line="61" pos:column="26">.</op:operator><name pos:line="61" pos:column="27">S3Error</name></name><argument_list pos:line="61" pos:column="34">(<argument><expr><name pos:line="61" pos:column="35">t</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="38">amazonS3Exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="62" pos:column="17">return <expr><lit:literal type="boolean" pos:line="62" pos:column="24">false</lit:literal></expr>;</return>
            }</block></catch></try>
        }</block></function>

		<function><type><specifier pos:line="66" pos:column="17">private</specifier> <specifier pos:line="66" pos:column="25">static</specifier> <name pos:line="66" pos:column="32">bool</name></type> <name pos:line="66" pos:column="37">ReadS3Credentials</name><parameter_list pos:line="66" pos:column="54">(<param><decl><type><name pos:line="66" pos:column="55">string</name></type> <name pos:line="66" pos:column="62">s3CredentialFile</name></decl></param>)</parameter_list>
		<block pos:line="67" pos:column="17">{
			<if pos:line="68" pos:column="25">if <condition pos:line="68" pos:column="28">(<expr><op:operator pos:line="68" pos:column="29">!</op:operator> <call><name><name pos:line="68" pos:column="31">System</name><op:operator pos:line="68" pos:column="37">.</op:operator><name pos:line="68" pos:column="38">IO</name><op:operator pos:line="68" pos:column="40">.</op:operator><name pos:line="68" pos:column="41">File</name><op:operator pos:line="68" pos:column="45">.</op:operator><name pos:line="68" pos:column="46">Exists</name></name><argument_list pos:line="68" pos:column="52">(<argument><expr><name pos:line="68" pos:column="53">s3CredentialFile</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="68" pos:column="71">
			<block pos:line="69" pos:column="25">{
				<return pos:line="70" pos:column="33">return <expr><lit:literal type="boolean" pos:line="70" pos:column="40">false</lit:literal></expr>;</return>				
			}</block></then></if>
			<decl_stmt><decl><type><name pos:line="72" pos:column="25">string</name><index pos:line="72" pos:column="31">[]</index></type> <name pos:line="72" pos:column="34">lines</name> <init pos:line="72" pos:column="40">= <expr><call><name><name pos:line="72" pos:column="42">System</name><op:operator pos:line="72" pos:column="48">.</op:operator><name pos:line="72" pos:column="49">IO</name><op:operator pos:line="72" pos:column="51">.</op:operator><name pos:line="72" pos:column="52">File</name><op:operator pos:line="72" pos:column="56">.</op:operator><name pos:line="72" pos:column="57">ReadAllLines</name></name><argument_list pos:line="72" pos:column="69">(<argument><expr><name pos:line="72" pos:column="70">s3CredentialFile</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="73" pos:column="25">if <condition pos:line="73" pos:column="28">(<expr><name><name pos:line="73" pos:column="29">lines</name><op:operator pos:line="73" pos:column="34">.</op:operator><name pos:line="73" pos:column="35">Length</name></name> <op:operator pos:line="73" pos:column="42">&lt;</op:operator> <lit:literal type="number" pos:line="73" pos:column="44">3</lit:literal></expr>)</condition><then pos:line="73" pos:column="46">
			<block pos:line="74" pos:column="25">{
				<return pos:line="75" pos:column="33">return <expr><lit:literal type="boolean" pos:line="75" pos:column="40">false</lit:literal></expr>;</return>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="77" pos:column="25">_accessKeyId</name> <op:operator pos:line="77" pos:column="38">=</op:operator> <name><name pos:line="77" pos:column="40">lines</name><index pos:line="77" pos:column="45">[<expr><lit:literal type="number" pos:line="77" pos:column="46">0</lit:literal></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="78" pos:column="25">_secretAccessKey</name> <op:operator pos:line="78" pos:column="42">=</op:operator> <name><name pos:line="78" pos:column="44">lines</name><index pos:line="78" pos:column="49">[<expr><lit:literal type="number" pos:line="78" pos:column="50">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="79" pos:column="25">_bucketName</name> <op:operator pos:line="79" pos:column="37">=</op:operator> <name><name pos:line="79" pos:column="39">lines</name><index pos:line="79" pos:column="44">[<expr><lit:literal type="number" pos:line="79" pos:column="45">2</lit:literal></expr>]</index></name></expr>;</expr_stmt>
			<return pos:line="80" pos:column="25">return <expr><lit:literal type="boolean" pos:line="80" pos:column="32">true</lit:literal></expr>;</return>
		}</block></function>
	}</block></class>
	
}</block></namespace>

</unit>
