<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\objext.h" pos:tabs="8" pos:line="1" pos:column="1">

<comment type="block" pos:line="3" pos:column="1">/* this ALWAYS GENERATED file contains the definitions for the interfaces */</comment>


 <comment type="block" pos:line="6" pos:column="2">/* File created by MIDL compiler version 7.00.0499 */</comment>
<comment type="block" pos:line="7" pos:column="1">/* Compiler settings for objext.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/</comment>
<comment type="line" pos:line="15" pos:column="1">//@@MIDL_FILE_HEADING(  )</comment>

<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma</cpp:directive> warning( disable: 4049 )</cpp:pragma>  <comment type="block" pos:line="17" pos:column="35">/* more than 64k source lines */</comment>


<comment type="block" pos:line="20" pos:column="1">/* verify that the &lt;rpcndr.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef</cpp:directive> <name pos:line="21" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:macro> <cpp:value pos:line="22" pos:column="39">475</cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="25" pos:column="1">/* verify that the &lt;rpcsal.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifndef</cpp:directive> <name pos:line="26" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="27" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:macro> <cpp:value pos:line="27" pos:column="39">100</cpp:value></cpp:define>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"rpc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"rpcndr.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">__RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:error pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">error</cpp:directive> this stub requires an updated version of &lt;rpcndr.h&gt;</cpp:error>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">// __RPCNDR_H_VERSION__</comment>

<cpp:ifndef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifndef</cpp:directive> <name pos:line="37" pos:column="9">COM_NO_WINDOWS_H</name></cpp:ifndef>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="38" pos:column="10">"windows.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="39" pos:column="10">"ole2.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="40" pos:column="8">/*COM_NO_WINDOWS_H*/</comment>

<cpp:ifndef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifndef</cpp:directive> <name pos:line="42" pos:column="9">__objext_h__</name></cpp:ifndef>
<cpp:define pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="43" pos:column="9">__objext_h__</name></cpp:macro></cpp:define>

<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if</cpp:directive> <expr><call><name pos:line="45" pos:column="5">defined</name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">_MSC_VER</name></expr></argument>)</argument_list></call> <op:operator pos:line="45" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="45" pos:column="26">(</op:operator><name pos:line="45" pos:column="27">_MSC_VER</name> <op:operator pos:line="45" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="45" pos:column="39">1020</lit:literal><op:operator pos:line="45" pos:column="43">)</op:operator></expr></cpp:if>
<cpp:pragma pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="49" pos:column="1">/* Forward Declarations */</comment> 

<cpp:ifndef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifndef</cpp:directive> <name pos:line="51" pos:column="9">__IDocumentSite_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="52" pos:column="9">__IDocumentSite_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="53" pos:column="1">typedef <type><name pos:line="53" pos:column="9">interface</name> <name pos:line="53" pos:column="19">IDocumentSite</name></type> <name pos:line="53" pos:column="33">IDocumentSite</name>;</typedef>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="54" pos:column="9">/* __IDocumentSite_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifndef</cpp:directive> <name pos:line="57" pos:column="9">__IDocumentSite2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="58" pos:column="9">__IDocumentSite2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="59" pos:column="1">typedef <type><name pos:line="59" pos:column="9">interface</name> <name pos:line="59" pos:column="19">IDocumentSite2</name></type> <name pos:line="59" pos:column="34">IDocumentSite2</name>;</typedef>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="60" pos:column="9">/* __IDocumentSite2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">ifndef</cpp:directive> <name pos:line="63" pos:column="9">__IRequireClasses_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="64" pos:column="9">__IRequireClasses_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="65" pos:column="1">typedef <type><name pos:line="65" pos:column="9">interface</name> <name pos:line="65" pos:column="19">IRequireClasses</name></type> <name pos:line="65" pos:column="35">IRequireClasses</name>;</typedef>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="66" pos:column="9">/* __IRequireClasses_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">ifndef</cpp:directive> <name pos:line="69" pos:column="9">__ILicensedClassManager_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="70" pos:column="9">__ILicensedClassManager_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="71" pos:column="1">typedef <type><name pos:line="71" pos:column="9">interface</name> <name pos:line="71" pos:column="19">ILicensedClassManager</name></type> <name pos:line="71" pos:column="41">ILicensedClassManager</name>;</typedef>
<cpp:endif pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="72" pos:column="9">/* __ILicensedClassManager_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">ifndef</cpp:directive> <name pos:line="75" pos:column="9">__IExtendedTypeLib_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="76" pos:column="9">__IExtendedTypeLib_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="77" pos:column="1">typedef <type><name pos:line="77" pos:column="9">interface</name> <name pos:line="77" pos:column="19">IExtendedTypeLib</name></type> <name pos:line="77" pos:column="36">IExtendedTypeLib</name>;</typedef>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="78" pos:column="9">/* __IExtendedTypeLib_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">ifndef</cpp:directive> <name pos:line="81" pos:column="9">__ILocalRegistry_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="82" pos:column="9">__ILocalRegistry_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="83" pos:column="1">typedef <type><name pos:line="83" pos:column="9">interface</name> <name pos:line="83" pos:column="19">ILocalRegistry</name></type> <name pos:line="83" pos:column="34">ILocalRegistry</name>;</typedef>
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="84" pos:column="9">/* __ILocalRegistry_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">ifndef</cpp:directive> <name pos:line="87" pos:column="9">__ILocalRegistry2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="88" pos:column="9">__ILocalRegistry2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="89" pos:column="1">typedef <type><name pos:line="89" pos:column="9">interface</name> <name pos:line="89" pos:column="19">ILocalRegistry2</name></type> <name pos:line="89" pos:column="35">ILocalRegistry2</name>;</typedef>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="90" pos:column="9">/* __ILocalRegistry2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">ifndef</cpp:directive> <name pos:line="93" pos:column="9">__ILocalRegistry3_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="94" pos:column="9">__ILocalRegistry3_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="95" pos:column="1">typedef <type><name pos:line="95" pos:column="9">interface</name> <name pos:line="95" pos:column="19">ILocalRegistry3</name></type> <name pos:line="95" pos:column="35">ILocalRegistry3</name>;</typedef>
<cpp:endif pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="96" pos:column="9">/* __ILocalRegistry3_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">ifndef</cpp:directive> <name pos:line="99" pos:column="9">__IUIElement_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="100" pos:column="9">__IUIElement_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="101" pos:column="1">typedef <type><name pos:line="101" pos:column="9">interface</name> <name pos:line="101" pos:column="19">IUIElement</name></type> <name pos:line="101" pos:column="30">IUIElement</name>;</typedef>
<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="102" pos:column="9">/* __IUIElement_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">ifndef</cpp:directive> <name pos:line="105" pos:column="9">__ICategorizeProperties_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="106" pos:column="9">__ICategorizeProperties_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="107" pos:column="1">typedef <type><name pos:line="107" pos:column="9">interface</name> <name pos:line="107" pos:column="19">ICategorizeProperties</name></type> <name pos:line="107" pos:column="41">ICategorizeProperties</name>;</typedef>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="108" pos:column="9">/* __ICategorizeProperties_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">ifndef</cpp:directive> <name pos:line="111" pos:column="9">__IHelp_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="112" pos:column="9">__IHelp_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="113" pos:column="1">typedef <type><name pos:line="113" pos:column="9">interface</name> <name pos:line="113" pos:column="19">IHelp</name></type> <name pos:line="113" pos:column="25">IHelp</name>;</typedef>
<cpp:endif pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="114" pos:column="9">/* __IHelp_FWD_DEFINED__ */</comment>


<comment type="block" pos:line="117" pos:column="1">/* header files for imported files */</comment>
<cpp:include pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="118" pos:column="10">"designer.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">ifdef</cpp:directive> <name pos:line="120" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="121" pos:column="1">extern <lit:literal type="string" pos:line="121" pos:column="8">"C"</lit:literal><block pos:line="121" pos:column="11">{
<cpp:endif pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">endif</cpp:directive></cpp:endif> 


<comment type="block" pos:line="125" pos:column="1">/* interface __MIDL_itf_objext_0000_0000 */</comment>
<comment type="block" pos:line="126" pos:column="1">/* [local] */</comment> 

<comment type="line" pos:line="128" pos:column="1">//+-------------------------------------------------------------------------</comment>
<comment type="line" pos:line="129" pos:column="1">//</comment>
<comment type="line" pos:line="130" pos:column="1">//  Microsoft Windows</comment>
<comment type="line" pos:line="131" pos:column="1">//  Copyright 1995 - 1997 Microsoft Corporation. All Rights Reserved.</comment>
<comment type="line" pos:line="132" pos:column="1">//</comment>
<comment type="line" pos:line="133" pos:column="1">//  File: objext.h</comment>
<comment type="line" pos:line="134" pos:column="1">//</comment>
<comment type="line" pos:line="135" pos:column="1">//--------------------------------------------------------------------------</comment>
<cpp:ifndef pos:line="136" pos:column="1">#<cpp:directive pos:line="136" pos:column="2">ifndef</cpp:directive> <name pos:line="136" pos:column="9">_OBJEXT_H_</name></cpp:ifndef>
<cpp:define pos:line="137" pos:column="1">#<cpp:directive pos:line="137" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="137" pos:column="9">_OBJEXT_H_</name></cpp:macro></cpp:define>
<cpp:include pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="138" pos:column="10">"proffserv.h"</lit:literal></cpp:file></cpp:include>
<typedef pos:line="139" pos:column="1">typedef <type><name pos:line="139" pos:column="9">DWORD</name></type> <name pos:line="139" pos:column="15">ACTFLAG</name>;</typedef>

<cpp:define pos:line="141" pos:column="1">#<cpp:directive pos:line="141" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="141" pos:column="9">ACT_DEFAULT</name></cpp:macro> <cpp:value pos:line="141" pos:column="21">0x00000000</cpp:value></cpp:define>
<cpp:define pos:line="142" pos:column="1">#<cpp:directive pos:line="142" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="142" pos:column="9">ACT_SHOW</name></cpp:macro>    <cpp:value pos:line="142" pos:column="21">0x00000001</cpp:value></cpp:define>


<decl_stmt><decl><type><specifier pos:line="145" pos:column="1">extern</specifier> <name pos:line="145" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="145" pos:column="22">__MIDL_itf_objext_0000_0000_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="146" pos:column="1">extern</specifier> <name pos:line="146" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="146" pos:column="22">__MIDL_itf_objext_0000_0000_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">ifndef</cpp:directive> <name pos:line="148" pos:column="9">__IDocumentSite_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="149" pos:column="1">#<cpp:directive pos:line="149" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="149" pos:column="9">__IDocumentSite_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="151" pos:column="1">/* interface IDocumentSite */</comment>
<comment type="block" pos:line="152" pos:column="1">/* [unique][uuid][local][object] */</comment> 


<decl_stmt><decl><type><name pos:line="155" pos:column="1">EXTERN_C</name> <specifier pos:line="155" pos:column="10">const</specifier> <name pos:line="155" pos:column="16">IID</name></type> <name pos:line="155" pos:column="20">IID_IDocumentSite</name></decl>;</decl_stmt>

<cpp:if pos:line="157" pos:column="1">#<cpp:directive pos:line="157" pos:column="2">if</cpp:directive> <expr><call><name pos:line="157" pos:column="5">defined</name><argument_list pos:line="157" pos:column="12">(<argument><expr><name pos:line="157" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="157" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="157" pos:column="29">!</op:operator><call><name pos:line="157" pos:column="30">defined</name><argument_list pos:line="157" pos:column="37">(<argument><expr><name pos:line="157" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="159" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="159" pos:column="19">(<argument pos:line="159" pos:column="20">"94A0F6F1-10BC-11d0-8D09-00A0C90F2732"</argument>)</argument_list></macro>
    <label><name pos:line="160" pos:column="5">IDocumentSite</name> :</label> <expr_stmt><expr pos:line="160" pos:column="21">public <name pos:line="160" pos:column="28">IUnknown</name>
    <block pos:line="161" pos:column="5">{
    <expr pos:line="162" pos:column="5">public<op:operator pos:line="162" pos:column="11">:</op:operator>
        virtual <name pos:line="163" pos:column="17">HRESULT</name> <name pos:line="163" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="163" pos:column="43">SetSite</name><argument_list pos:line="163" pos:column="50">( 
            <comment type="block" pos:line="164" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="164" pos:column="24">IServiceProvider</name> <op:operator pos:line="164" pos:column="41">*</op:operator><name pos:line="164" pos:column="42">pSite</name></expr></argument>)</argument_list></call> <op:operator pos:line="164" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="164" pos:column="51">0</lit:literal></expr>;
        
        <expr pos:line="166" pos:column="9">virtual <name pos:line="166" pos:column="17">HRESULT</name> <name pos:line="166" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="166" pos:column="43">GetSite</name><argument_list pos:line="166" pos:column="50">( 
            <comment type="block" pos:line="167" pos:column="13">/* [out] */</comment> <argument><expr><name pos:line="167" pos:column="25">IServiceProvider</name> <op:operator pos:line="167" pos:column="42">*</op:operator><op:operator pos:line="167" pos:column="43">*</op:operator><name pos:line="167" pos:column="44">ppSite</name></expr></argument>)</argument_list></call> <op:operator pos:line="167" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="167" pos:column="54">0</lit:literal></expr>;
        
        <expr pos:line="169" pos:column="9">virtual <name pos:line="169" pos:column="17">HRESULT</name> <name pos:line="169" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="169" pos:column="43">GetCompiler</name><argument_list pos:line="169" pos:column="54">( 
            <comment type="block" pos:line="170" pos:column="13">/* [in] */</comment> <argument pos:line="170" pos:column="24">REFIID iid</argument>,
            <comment type="block" pos:line="171" pos:column="13">/* [out] */</comment> <argument pos:line="171" pos:column="25">void **ppvObj</argument>)</argument_list></macro> <op:operator pos:line="171" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="171" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="173" pos:column="9">virtual <name pos:line="173" pos:column="17">HRESULT</name> <name pos:line="173" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="173" pos:column="43">ActivateObject</name><argument_list pos:line="173" pos:column="57">( 
            <argument pos:line="174" pos:column="13">ACTFLAG dwFlags</argument>)</argument_list></macro> <op:operator pos:line="174" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="174" pos:column="32">0</lit:literal></expr>;
        
        <expr pos:line="176" pos:column="9">virtual <name pos:line="176" pos:column="17">HRESULT</name> <name pos:line="176" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="176" pos:column="43">IsObjectShowable</name><argument_list pos:line="176" pos:column="59">( <argument><expr><name pos:line="176" pos:column="61">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="176" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="176" pos:column="69">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="180" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="182" pos:column="5">typedef <type><struct pos:line="182" pos:column="13">struct <name pos:line="182" pos:column="20">IDocumentSiteVtbl</name>
    <block pos:line="183" pos:column="5">{<public type="default" pos:line="183" pos:column="6">
        <function_decl><type><name pos:line="184" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="186" pos:column="9">HRESULT</name></type> ( <name pos:line="186" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="186" pos:column="37">*</type:modifier><name pos:line="186" pos:column="38">QueryInterface</name> )<parameter_list pos:line="186" pos:column="54">( 
            <param><decl><type><name pos:line="187" pos:column="13">IDocumentSite</name> <type:modifier pos:line="187" pos:column="27">*</type:modifier></type> <name pos:line="187" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="188" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="188" pos:column="24">REFIID</name></type> <name pos:line="188" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="189" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="190" pos:column="13">__RPC__deref_out</name>  <name pos:line="190" pos:column="31">void</name> <type:modifier pos:line="190" pos:column="36">*</type:modifier><type:modifier pos:line="190" pos:column="37">*</type:modifier></type><name pos:line="190" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="192" pos:column="9">ULONG</name></type> ( <name pos:line="192" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="192" pos:column="35">*</type:modifier><name pos:line="192" pos:column="36">AddRef</name> )<parameter_list pos:line="192" pos:column="44">( 
            <param><decl><type><name pos:line="193" pos:column="13">IDocumentSite</name> <type:modifier pos:line="193" pos:column="27">*</type:modifier></type> <name pos:line="193" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="195" pos:column="9">ULONG</name></type> ( <name pos:line="195" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="195" pos:column="35">*</type:modifier><name pos:line="195" pos:column="36">Release</name> )<parameter_list pos:line="195" pos:column="45">( 
            <param><decl><type><name pos:line="196" pos:column="13">IDocumentSite</name> <type:modifier pos:line="196" pos:column="27">*</type:modifier></type> <name pos:line="196" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="198" pos:column="9">HRESULT</name></type> ( <name pos:line="198" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="198" pos:column="37">*</type:modifier><name pos:line="198" pos:column="38">SetSite</name> )<parameter_list pos:line="198" pos:column="47">( 
            <param><decl><type><name pos:line="199" pos:column="13">IDocumentSite</name> <type:modifier pos:line="199" pos:column="27">*</type:modifier></type> <name pos:line="199" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="200" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="200" pos:column="24">IServiceProvider</name> <type:modifier pos:line="200" pos:column="41">*</type:modifier></type><name pos:line="200" pos:column="42">pSite</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="202" pos:column="9">HRESULT</name></type> ( <name pos:line="202" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="202" pos:column="37">*</type:modifier><name pos:line="202" pos:column="38">GetSite</name> )<parameter_list pos:line="202" pos:column="47">( 
            <param><decl><type><name pos:line="203" pos:column="13">IDocumentSite</name> <type:modifier pos:line="203" pos:column="27">*</type:modifier></type> <name pos:line="203" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="204" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="204" pos:column="25">IServiceProvider</name> <type:modifier pos:line="204" pos:column="42">*</type:modifier><type:modifier pos:line="204" pos:column="43">*</type:modifier></type><name pos:line="204" pos:column="44">ppSite</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="206" pos:column="9">HRESULT</name></type> ( <name pos:line="206" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="206" pos:column="37">*</type:modifier><name pos:line="206" pos:column="38">GetCompiler</name> )<parameter_list pos:line="206" pos:column="51">( 
            <param><decl><type><name pos:line="207" pos:column="13">IDocumentSite</name> <type:modifier pos:line="207" pos:column="27">*</type:modifier></type> <name pos:line="207" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="208" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="208" pos:column="24">REFIID</name></type> <name pos:line="208" pos:column="31">iid</name></decl></param>,
            <comment type="block" pos:line="209" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="209" pos:column="25">void</name> <type:modifier pos:line="209" pos:column="30">*</type:modifier><type:modifier pos:line="209" pos:column="31">*</type:modifier></type><name pos:line="209" pos:column="32">ppvObj</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="211" pos:column="9">HRESULT</name></type> ( <name pos:line="211" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="211" pos:column="37">*</type:modifier><name pos:line="211" pos:column="38">ActivateObject</name> )<parameter_list pos:line="211" pos:column="54">( 
            <param><decl><type><name pos:line="212" pos:column="13">IDocumentSite</name> <type:modifier pos:line="212" pos:column="27">*</type:modifier></type> <name pos:line="212" pos:column="29">This</name></decl></param>,
            <param><decl><type><name pos:line="213" pos:column="13">ACTFLAG</name></type> <name pos:line="213" pos:column="21">dwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="215" pos:column="9">HRESULT</name></type> ( <name pos:line="215" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="215" pos:column="37">*</type:modifier><name pos:line="215" pos:column="38">IsObjectShowable</name> )<parameter_list pos:line="215" pos:column="56">( 
            <param><decl><type><name pos:line="216" pos:column="13">IDocumentSite</name> <type:modifier pos:line="216" pos:column="27">*</type:modifier></type> <name pos:line="216" pos:column="29">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="218" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="219" pos:column="7">IDocumentSiteVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="221" pos:column="5">interface</name></type> <name pos:line="221" pos:column="15">IDocumentSite</name>
    <argument_list pos:line="222" pos:column="5">{
        <argument><expr><name pos:line="223" pos:column="9">CONST_VTBL</name> struct <name pos:line="223" pos:column="27">IDocumentSiteVtbl</name> <op:operator pos:line="223" pos:column="45">*</op:operator><name pos:line="223" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="228" pos:column="1">#<cpp:directive pos:line="228" pos:column="2">ifdef</cpp:directive> <name pos:line="228" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="231" pos:column="1">#<cpp:directive pos:line="231" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="231" pos:column="9">IDocumentSite_QueryInterface</name><parameter_list pos:line="231" pos:column="37">(<param><type><name pos:line="231" pos:column="38">This</name></type></param>,<param><type><name pos:line="231" pos:column="43">riid</name></type></param>,<param><type><name pos:line="231" pos:column="48">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="232" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="234" pos:column="1">#<cpp:directive pos:line="234" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="234" pos:column="9">IDocumentSite_AddRef</name><parameter_list pos:line="234" pos:column="29">(<param><type><name pos:line="234" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="235" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="237" pos:column="1">#<cpp:directive pos:line="237" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="237" pos:column="9">IDocumentSite_Release</name><parameter_list pos:line="237" pos:column="30">(<param><type><name pos:line="237" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="238" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="241" pos:column="1">#<cpp:directive pos:line="241" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="241" pos:column="9">IDocumentSite_SetSite</name><parameter_list pos:line="241" pos:column="30">(<param><type><name pos:line="241" pos:column="31">This</name></type></param>,<param><type><name pos:line="241" pos:column="36">pSite</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="242" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSite(This,pSite) )</cpp:value></cpp:define> 

<cpp:define pos:line="244" pos:column="1">#<cpp:directive pos:line="244" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="244" pos:column="9">IDocumentSite_GetSite</name><parameter_list pos:line="244" pos:column="30">(<param><type><name pos:line="244" pos:column="31">This</name></type></param>,<param><type><name pos:line="244" pos:column="36">ppSite</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="245" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSite(This,ppSite) )</cpp:value></cpp:define> 

<cpp:define pos:line="247" pos:column="1">#<cpp:directive pos:line="247" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="247" pos:column="9">IDocumentSite_GetCompiler</name><parameter_list pos:line="247" pos:column="34">(<param><type><name pos:line="247" pos:column="35">This</name></type></param>,<param><type><name pos:line="247" pos:column="40">iid</name></type></param>,<param><type><name pos:line="247" pos:column="44">ppvObj</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="248" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCompiler(This,iid,ppvObj) )</cpp:value></cpp:define> 

<cpp:define pos:line="250" pos:column="1">#<cpp:directive pos:line="250" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="250" pos:column="9">IDocumentSite_ActivateObject</name><parameter_list pos:line="250" pos:column="37">(<param><type><name pos:line="250" pos:column="38">This</name></type></param>,<param><type><name pos:line="250" pos:column="43">dwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="251" pos:column="5">( (This)-&gt;lpVtbl -&gt; ActivateObject(This,dwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="253" pos:column="1">#<cpp:directive pos:line="253" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="253" pos:column="9">IDocumentSite_IsObjectShowable</name><parameter_list pos:line="253" pos:column="39">(<param><type><name pos:line="253" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="254" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsObjectShowable(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="256" pos:column="1">#<cpp:directive pos:line="256" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="256" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="259" pos:column="1">#<cpp:directive pos:line="259" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="259" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="264" pos:column="1">#<cpp:directive pos:line="264" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="264" pos:column="9">/* __IDocumentSite_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="267" pos:column="1">/* interface __MIDL_itf_objext_0000_0001 */</comment>
<comment type="block" pos:line="268" pos:column="1">/* [local] */</comment> 

<cpp:define pos:line="270" pos:column="1">#<cpp:directive pos:line="270" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="270" pos:column="9">IClassDesigner</name></cpp:macro> <cpp:value pos:line="270" pos:column="24">IDocumentSite</cpp:value></cpp:define>
<cpp:define pos:line="271" pos:column="1">#<cpp:directive pos:line="271" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="271" pos:column="9">IID_IClassDesigner</name></cpp:macro> <cpp:value pos:line="271" pos:column="28">IID_IDocumentSite</cpp:value></cpp:define>


<decl_stmt><decl><type><specifier pos:line="274" pos:column="1">extern</specifier> <name pos:line="274" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="274" pos:column="22">__MIDL_itf_objext_0000_0001_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="275" pos:column="1">extern</specifier> <name pos:line="275" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="275" pos:column="22">__MIDL_itf_objext_0000_0001_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="277" pos:column="1">#<cpp:directive pos:line="277" pos:column="2">ifndef</cpp:directive> <name pos:line="277" pos:column="9">__IDocumentSite2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="278" pos:column="1">#<cpp:directive pos:line="278" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="278" pos:column="9">__IDocumentSite2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="280" pos:column="1">/* interface IDocumentSite2 */</comment>
<comment type="block" pos:line="281" pos:column="1">/* [unique][uuid][local][object] */</comment> 


<decl_stmt><decl><type><name pos:line="284" pos:column="1">EXTERN_C</name> <specifier pos:line="284" pos:column="10">const</specifier> <name pos:line="284" pos:column="16">IID</name></type> <name pos:line="284" pos:column="20">IID_IDocumentSite2</name></decl>;</decl_stmt>

<cpp:if pos:line="286" pos:column="1">#<cpp:directive pos:line="286" pos:column="2">if</cpp:directive> <expr><call><name pos:line="286" pos:column="5">defined</name><argument_list pos:line="286" pos:column="12">(<argument><expr><name pos:line="286" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="286" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="286" pos:column="29">!</op:operator><call><name pos:line="286" pos:column="30">defined</name><argument_list pos:line="286" pos:column="37">(<argument><expr><name pos:line="286" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="288" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="288" pos:column="19">(<argument pos:line="288" pos:column="20">"61D4A8A1-2C90-11d2-ADE4-00C04F98F417"</argument>)</argument_list></macro>
    <label><name pos:line="289" pos:column="5">IDocumentSite2</name> :</label> <expr_stmt><expr pos:line="289" pos:column="22">public <name pos:line="289" pos:column="29">IDocumentSite</name>
    <block pos:line="290" pos:column="5">{
    <expr pos:line="291" pos:column="5">public<op:operator pos:line="291" pos:column="11">:</op:operator>
        virtual <name pos:line="292" pos:column="17">HRESULT</name> <name pos:line="292" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="292" pos:column="43">GetObject</name><argument_list pos:line="292" pos:column="52">( 
            <comment type="block" pos:line="293" pos:column="13">/* [out] */</comment> <argument><expr><name pos:line="293" pos:column="25">IDispatch</name> <op:operator pos:line="293" pos:column="35">*</op:operator><op:operator pos:line="293" pos:column="36">*</op:operator><name pos:line="293" pos:column="37">ppDisp</name></expr></argument>)</argument_list></call> <op:operator pos:line="293" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="293" pos:column="47">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="297" pos:column="1">#<cpp:directive pos:line="297" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="297" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="299" pos:column="5">typedef <type><struct pos:line="299" pos:column="13">struct <name pos:line="299" pos:column="20">IDocumentSite2Vtbl</name>
    <block pos:line="300" pos:column="5">{<public type="default" pos:line="300" pos:column="6">
        <function_decl><type><name pos:line="301" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="303" pos:column="9">HRESULT</name></type> ( <name pos:line="303" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="303" pos:column="37">*</type:modifier><name pos:line="303" pos:column="38">QueryInterface</name> )<parameter_list pos:line="303" pos:column="54">( 
            <param><decl><type><name pos:line="304" pos:column="13">IDocumentSite2</name> <type:modifier pos:line="304" pos:column="28">*</type:modifier></type> <name pos:line="304" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="305" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="305" pos:column="24">REFIID</name></type> <name pos:line="305" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="306" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="307" pos:column="13">__RPC__deref_out</name>  <name pos:line="307" pos:column="31">void</name> <type:modifier pos:line="307" pos:column="36">*</type:modifier><type:modifier pos:line="307" pos:column="37">*</type:modifier></type><name pos:line="307" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="309" pos:column="9">ULONG</name></type> ( <name pos:line="309" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="309" pos:column="35">*</type:modifier><name pos:line="309" pos:column="36">AddRef</name> )<parameter_list pos:line="309" pos:column="44">( 
            <param><decl><type><name pos:line="310" pos:column="13">IDocumentSite2</name> <type:modifier pos:line="310" pos:column="28">*</type:modifier></type> <name pos:line="310" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="312" pos:column="9">ULONG</name></type> ( <name pos:line="312" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="312" pos:column="35">*</type:modifier><name pos:line="312" pos:column="36">Release</name> )<parameter_list pos:line="312" pos:column="45">( 
            <param><decl><type><name pos:line="313" pos:column="13">IDocumentSite2</name> <type:modifier pos:line="313" pos:column="28">*</type:modifier></type> <name pos:line="313" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="315" pos:column="9">HRESULT</name></type> ( <name pos:line="315" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="315" pos:column="37">*</type:modifier><name pos:line="315" pos:column="38">SetSite</name> )<parameter_list pos:line="315" pos:column="47">( 
            <param><decl><type><name pos:line="316" pos:column="13">IDocumentSite2</name> <type:modifier pos:line="316" pos:column="28">*</type:modifier></type> <name pos:line="316" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="317" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="317" pos:column="24">IServiceProvider</name> <type:modifier pos:line="317" pos:column="41">*</type:modifier></type><name pos:line="317" pos:column="42">pSite</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="319" pos:column="9">HRESULT</name></type> ( <name pos:line="319" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="319" pos:column="37">*</type:modifier><name pos:line="319" pos:column="38">GetSite</name> )<parameter_list pos:line="319" pos:column="47">( 
            <param><decl><type><name pos:line="320" pos:column="13">IDocumentSite2</name> <type:modifier pos:line="320" pos:column="28">*</type:modifier></type> <name pos:line="320" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="321" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="321" pos:column="25">IServiceProvider</name> <type:modifier pos:line="321" pos:column="42">*</type:modifier><type:modifier pos:line="321" pos:column="43">*</type:modifier></type><name pos:line="321" pos:column="44">ppSite</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="323" pos:column="9">HRESULT</name></type> ( <name pos:line="323" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="323" pos:column="37">*</type:modifier><name pos:line="323" pos:column="38">GetCompiler</name> )<parameter_list pos:line="323" pos:column="51">( 
            <param><decl><type><name pos:line="324" pos:column="13">IDocumentSite2</name> <type:modifier pos:line="324" pos:column="28">*</type:modifier></type> <name pos:line="324" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="325" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="325" pos:column="24">REFIID</name></type> <name pos:line="325" pos:column="31">iid</name></decl></param>,
            <comment type="block" pos:line="326" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="326" pos:column="25">void</name> <type:modifier pos:line="326" pos:column="30">*</type:modifier><type:modifier pos:line="326" pos:column="31">*</type:modifier></type><name pos:line="326" pos:column="32">ppvObj</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="328" pos:column="9">HRESULT</name></type> ( <name pos:line="328" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="328" pos:column="37">*</type:modifier><name pos:line="328" pos:column="38">ActivateObject</name> )<parameter_list pos:line="328" pos:column="54">( 
            <param><decl><type><name pos:line="329" pos:column="13">IDocumentSite2</name> <type:modifier pos:line="329" pos:column="28">*</type:modifier></type> <name pos:line="329" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="330" pos:column="13">ACTFLAG</name></type> <name pos:line="330" pos:column="21">dwFlags</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="332" pos:column="9">HRESULT</name></type> ( <name pos:line="332" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="332" pos:column="37">*</type:modifier><name pos:line="332" pos:column="38">IsObjectShowable</name> )<parameter_list pos:line="332" pos:column="56">( 
            <param><decl><type><name pos:line="333" pos:column="13">IDocumentSite2</name> <type:modifier pos:line="333" pos:column="28">*</type:modifier></type> <name pos:line="333" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="335" pos:column="9">HRESULT</name></type> ( <name pos:line="335" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="335" pos:column="37">*</type:modifier><name pos:line="335" pos:column="38">GetObject</name> )<parameter_list pos:line="335" pos:column="49">( 
            <param><decl><type><name pos:line="336" pos:column="13">IDocumentSite2</name> <type:modifier pos:line="336" pos:column="28">*</type:modifier></type> <name pos:line="336" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="337" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="337" pos:column="25">IDispatch</name> <type:modifier pos:line="337" pos:column="35">*</type:modifier><type:modifier pos:line="337" pos:column="36">*</type:modifier></type><name pos:line="337" pos:column="37">ppDisp</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="339" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="340" pos:column="7">IDocumentSite2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="342" pos:column="5">interface</name></type> <name pos:line="342" pos:column="15">IDocumentSite2</name>
    <argument_list pos:line="343" pos:column="5">{
        <argument><expr><name pos:line="344" pos:column="9">CONST_VTBL</name> struct <name pos:line="344" pos:column="27">IDocumentSite2Vtbl</name> <op:operator pos:line="344" pos:column="46">*</op:operator><name pos:line="344" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="349" pos:column="1">#<cpp:directive pos:line="349" pos:column="2">ifdef</cpp:directive> <name pos:line="349" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="352" pos:column="1">#<cpp:directive pos:line="352" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="352" pos:column="9">IDocumentSite2_QueryInterface</name><parameter_list pos:line="352" pos:column="38">(<param><type><name pos:line="352" pos:column="39">This</name></type></param>,<param><type><name pos:line="352" pos:column="44">riid</name></type></param>,<param><type><name pos:line="352" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="353" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="355" pos:column="1">#<cpp:directive pos:line="355" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="355" pos:column="9">IDocumentSite2_AddRef</name><parameter_list pos:line="355" pos:column="30">(<param><type><name pos:line="355" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="356" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="358" pos:column="1">#<cpp:directive pos:line="358" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="358" pos:column="9">IDocumentSite2_Release</name><parameter_list pos:line="358" pos:column="31">(<param><type><name pos:line="358" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="359" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="362" pos:column="1">#<cpp:directive pos:line="362" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="362" pos:column="9">IDocumentSite2_SetSite</name><parameter_list pos:line="362" pos:column="31">(<param><type><name pos:line="362" pos:column="32">This</name></type></param>,<param><type><name pos:line="362" pos:column="37">pSite</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="363" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSite(This,pSite) )</cpp:value></cpp:define> 

<cpp:define pos:line="365" pos:column="1">#<cpp:directive pos:line="365" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="365" pos:column="9">IDocumentSite2_GetSite</name><parameter_list pos:line="365" pos:column="31">(<param><type><name pos:line="365" pos:column="32">This</name></type></param>,<param><type><name pos:line="365" pos:column="37">ppSite</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="366" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSite(This,ppSite) )</cpp:value></cpp:define> 

<cpp:define pos:line="368" pos:column="1">#<cpp:directive pos:line="368" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="368" pos:column="9">IDocumentSite2_GetCompiler</name><parameter_list pos:line="368" pos:column="35">(<param><type><name pos:line="368" pos:column="36">This</name></type></param>,<param><type><name pos:line="368" pos:column="41">iid</name></type></param>,<param><type><name pos:line="368" pos:column="45">ppvObj</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="369" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCompiler(This,iid,ppvObj) )</cpp:value></cpp:define> 

<cpp:define pos:line="371" pos:column="1">#<cpp:directive pos:line="371" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="371" pos:column="9">IDocumentSite2_ActivateObject</name><parameter_list pos:line="371" pos:column="38">(<param><type><name pos:line="371" pos:column="39">This</name></type></param>,<param><type><name pos:line="371" pos:column="44">dwFlags</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="372" pos:column="5">( (This)-&gt;lpVtbl -&gt; ActivateObject(This,dwFlags) )</cpp:value></cpp:define> 

<cpp:define pos:line="374" pos:column="1">#<cpp:directive pos:line="374" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="374" pos:column="9">IDocumentSite2_IsObjectShowable</name><parameter_list pos:line="374" pos:column="40">(<param><type><name pos:line="374" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="375" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsObjectShowable(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="378" pos:column="1">#<cpp:directive pos:line="378" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="378" pos:column="9">IDocumentSite2_GetObject</name><parameter_list pos:line="378" pos:column="33">(<param><type><name pos:line="378" pos:column="34">This</name></type></param>,<param><type><name pos:line="378" pos:column="39">ppDisp</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="379" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetObject(This,ppDisp) )</cpp:value></cpp:define> 

<cpp:endif pos:line="381" pos:column="1">#<cpp:directive pos:line="381" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="381" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="384" pos:column="1">#<cpp:directive pos:line="384" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="384" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="389" pos:column="1">#<cpp:directive pos:line="389" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="389" pos:column="9">/* __IDocumentSite2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="392" pos:column="1">#<cpp:directive pos:line="392" pos:column="2">ifndef</cpp:directive> <name pos:line="392" pos:column="9">__IRequireClasses_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="393" pos:column="1">#<cpp:directive pos:line="393" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="393" pos:column="9">__IRequireClasses_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="395" pos:column="1">/* interface IRequireClasses */</comment>
<comment type="block" pos:line="396" pos:column="1">/* [unique][uuid][local][object] */</comment> 


<decl_stmt><decl><type><name pos:line="399" pos:column="1">EXTERN_C</name> <specifier pos:line="399" pos:column="10">const</specifier> <name pos:line="399" pos:column="16">IID</name></type> <name pos:line="399" pos:column="20">IID_IRequireClasses</name></decl>;</decl_stmt>

<cpp:if pos:line="401" pos:column="1">#<cpp:directive pos:line="401" pos:column="2">if</cpp:directive> <expr><call><name pos:line="401" pos:column="5">defined</name><argument_list pos:line="401" pos:column="12">(<argument><expr><name pos:line="401" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="401" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="401" pos:column="29">!</op:operator><call><name pos:line="401" pos:column="30">defined</name><argument_list pos:line="401" pos:column="37">(<argument><expr><name pos:line="401" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="403" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="403" pos:column="19">(<argument pos:line="403" pos:column="20">"6d5140d0-7436-11ce-8034-00aa006009fa"</argument>)</argument_list></macro>
    <label><name pos:line="404" pos:column="5">IRequireClasses</name> :</label> <expr_stmt><expr pos:line="404" pos:column="23">public <name pos:line="404" pos:column="30">IUnknown</name>
    <block pos:line="405" pos:column="5">{
    <expr pos:line="406" pos:column="5">public<op:operator pos:line="406" pos:column="11">:</op:operator>
        virtual <name pos:line="407" pos:column="17">HRESULT</name> <name pos:line="407" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="407" pos:column="43">CountRequiredClasses</name><argument_list pos:line="407" pos:column="63">( 
            <comment type="block" pos:line="408" pos:column="13">/* [out] */</comment> <argument><expr><name pos:line="408" pos:column="25">ULONG</name> <op:operator pos:line="408" pos:column="31">*</op:operator><name pos:line="408" pos:column="32">pCount</name></expr></argument>)</argument_list></call> <op:operator pos:line="408" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="408" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="410" pos:column="9">virtual <name pos:line="410" pos:column="17">HRESULT</name> <name pos:line="410" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="410" pos:column="43">GetRequiredClasses</name><argument_list pos:line="410" pos:column="61">( 
            <comment type="block" pos:line="411" pos:column="13">/* [in] */</comment> <argument pos:line="411" pos:column="24">ULONG index</argument>,
            <argument pos:line="412" pos:column="13">CLSID *pclsid</argument>)</argument_list></macro> <op:operator pos:line="412" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="412" pos:column="30">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="416" pos:column="1">#<cpp:directive pos:line="416" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="416" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="418" pos:column="5">typedef <type><struct pos:line="418" pos:column="13">struct <name pos:line="418" pos:column="20">IRequireClassesVtbl</name>
    <block pos:line="419" pos:column="5">{<public type="default" pos:line="419" pos:column="6">
        <function_decl><type><name pos:line="420" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="422" pos:column="9">HRESULT</name></type> ( <name pos:line="422" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="422" pos:column="37">*</type:modifier><name pos:line="422" pos:column="38">QueryInterface</name> )<parameter_list pos:line="422" pos:column="54">( 
            <param><decl><type><name pos:line="423" pos:column="13">IRequireClasses</name> <type:modifier pos:line="423" pos:column="29">*</type:modifier></type> <name pos:line="423" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="424" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="424" pos:column="24">REFIID</name></type> <name pos:line="424" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="425" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="426" pos:column="13">__RPC__deref_out</name>  <name pos:line="426" pos:column="31">void</name> <type:modifier pos:line="426" pos:column="36">*</type:modifier><type:modifier pos:line="426" pos:column="37">*</type:modifier></type><name pos:line="426" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="428" pos:column="9">ULONG</name></type> ( <name pos:line="428" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="428" pos:column="35">*</type:modifier><name pos:line="428" pos:column="36">AddRef</name> )<parameter_list pos:line="428" pos:column="44">( 
            <param><decl><type><name pos:line="429" pos:column="13">IRequireClasses</name> <type:modifier pos:line="429" pos:column="29">*</type:modifier></type> <name pos:line="429" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="431" pos:column="9">ULONG</name></type> ( <name pos:line="431" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="431" pos:column="35">*</type:modifier><name pos:line="431" pos:column="36">Release</name> )<parameter_list pos:line="431" pos:column="45">( 
            <param><decl><type><name pos:line="432" pos:column="13">IRequireClasses</name> <type:modifier pos:line="432" pos:column="29">*</type:modifier></type> <name pos:line="432" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="434" pos:column="9">HRESULT</name></type> ( <name pos:line="434" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="434" pos:column="37">*</type:modifier><name pos:line="434" pos:column="38">CountRequiredClasses</name> )<parameter_list pos:line="434" pos:column="60">( 
            <param><decl><type><name pos:line="435" pos:column="13">IRequireClasses</name> <type:modifier pos:line="435" pos:column="29">*</type:modifier></type> <name pos:line="435" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="436" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="436" pos:column="25">ULONG</name> <type:modifier pos:line="436" pos:column="31">*</type:modifier></type><name pos:line="436" pos:column="32">pCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="438" pos:column="9">HRESULT</name></type> ( <name pos:line="438" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="438" pos:column="37">*</type:modifier><name pos:line="438" pos:column="38">GetRequiredClasses</name> )<parameter_list pos:line="438" pos:column="58">( 
            <param><decl><type><name pos:line="439" pos:column="13">IRequireClasses</name> <type:modifier pos:line="439" pos:column="29">*</type:modifier></type> <name pos:line="439" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="440" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="440" pos:column="24">ULONG</name></type> <name pos:line="440" pos:column="30">index</name></decl></param>,
            <param><decl><type><name pos:line="441" pos:column="13">CLSID</name> <type:modifier pos:line="441" pos:column="19">*</type:modifier></type><name pos:line="441" pos:column="20">pclsid</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="443" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="444" pos:column="7">IRequireClassesVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="446" pos:column="5">interface</name></type> <name pos:line="446" pos:column="15">IRequireClasses</name>
    <argument_list pos:line="447" pos:column="5">{
        <argument><expr><name pos:line="448" pos:column="9">CONST_VTBL</name> struct <name pos:line="448" pos:column="27">IRequireClassesVtbl</name> <op:operator pos:line="448" pos:column="47">*</op:operator><name pos:line="448" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="453" pos:column="1">#<cpp:directive pos:line="453" pos:column="2">ifdef</cpp:directive> <name pos:line="453" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="456" pos:column="1">#<cpp:directive pos:line="456" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="456" pos:column="9">IRequireClasses_QueryInterface</name><parameter_list pos:line="456" pos:column="39">(<param><type><name pos:line="456" pos:column="40">This</name></type></param>,<param><type><name pos:line="456" pos:column="45">riid</name></type></param>,<param><type><name pos:line="456" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="457" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="459" pos:column="1">#<cpp:directive pos:line="459" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="459" pos:column="9">IRequireClasses_AddRef</name><parameter_list pos:line="459" pos:column="31">(<param><type><name pos:line="459" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="460" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="462" pos:column="1">#<cpp:directive pos:line="462" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="462" pos:column="9">IRequireClasses_Release</name><parameter_list pos:line="462" pos:column="32">(<param><type><name pos:line="462" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="463" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="466" pos:column="1">#<cpp:directive pos:line="466" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="466" pos:column="9">IRequireClasses_CountRequiredClasses</name><parameter_list pos:line="466" pos:column="45">(<param><type><name pos:line="466" pos:column="46">This</name></type></param>,<param><type><name pos:line="466" pos:column="51">pCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="467" pos:column="5">( (This)-&gt;lpVtbl -&gt; CountRequiredClasses(This,pCount) )</cpp:value></cpp:define> 

<cpp:define pos:line="469" pos:column="1">#<cpp:directive pos:line="469" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="469" pos:column="9">IRequireClasses_GetRequiredClasses</name><parameter_list pos:line="469" pos:column="43">(<param><type><name pos:line="469" pos:column="44">This</name></type></param>,<param><type><name pos:line="469" pos:column="49">index</name></type></param>,<param><type><name pos:line="469" pos:column="55">pclsid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="470" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetRequiredClasses(This,index,pclsid) )</cpp:value></cpp:define> 

<cpp:endif pos:line="472" pos:column="1">#<cpp:directive pos:line="472" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="472" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="475" pos:column="1">#<cpp:directive pos:line="475" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="475" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="480" pos:column="1">#<cpp:directive pos:line="480" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="480" pos:column="9">/* __IRequireClasses_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="483" pos:column="1">#<cpp:directive pos:line="483" pos:column="2">ifndef</cpp:directive> <name pos:line="483" pos:column="9">__ILicensedClassManager_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="484" pos:column="1">#<cpp:directive pos:line="484" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="484" pos:column="9">__ILicensedClassManager_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="486" pos:column="1">/* interface ILicensedClassManager */</comment>
<comment type="block" pos:line="487" pos:column="1">/* [unique][uuid][local][object] */</comment> 


<decl_stmt><decl><type><name pos:line="490" pos:column="1">EXTERN_C</name> <specifier pos:line="490" pos:column="10">const</specifier> <name pos:line="490" pos:column="16">IID</name></type> <name pos:line="490" pos:column="20">IID_ILicensedClassManager</name></decl>;</decl_stmt>

<cpp:if pos:line="492" pos:column="1">#<cpp:directive pos:line="492" pos:column="2">if</cpp:directive> <expr><call><name pos:line="492" pos:column="5">defined</name><argument_list pos:line="492" pos:column="12">(<argument><expr><name pos:line="492" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="492" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="492" pos:column="29">!</op:operator><call><name pos:line="492" pos:column="30">defined</name><argument_list pos:line="492" pos:column="37">(<argument><expr><name pos:line="492" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="494" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="494" pos:column="19">(<argument pos:line="494" pos:column="20">"6d5140d4-7436-11ce-8034-00aa006009fa"</argument>)</argument_list></macro>
    <label><name pos:line="495" pos:column="5">ILicensedClassManager</name> :</label> <expr_stmt><expr pos:line="495" pos:column="29">public <name pos:line="495" pos:column="36">IUnknown</name>
    <block pos:line="496" pos:column="5">{
    <expr pos:line="497" pos:column="5">public<op:operator pos:line="497" pos:column="11">:</op:operator>
        virtual <name pos:line="498" pos:column="17">HRESULT</name> <name pos:line="498" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="498" pos:column="43">OnChangeInRequiredClasses</name><argument_list pos:line="498" pos:column="68">( 
            <comment type="block" pos:line="499" pos:column="13">/* [in] */</comment> <argument><expr><name pos:line="499" pos:column="24">IRequireClasses</name> <op:operator pos:line="499" pos:column="40">*</op:operator><name pos:line="499" pos:column="41">pirc</name></expr></argument>)</argument_list></call> <op:operator pos:line="499" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="499" pos:column="49">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="503" pos:column="1">#<cpp:directive pos:line="503" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="503" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="505" pos:column="5">typedef <type><struct pos:line="505" pos:column="13">struct <name pos:line="505" pos:column="20">ILicensedClassManagerVtbl</name>
    <block pos:line="506" pos:column="5">{<public type="default" pos:line="506" pos:column="6">
        <function_decl><type><name pos:line="507" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="509" pos:column="9">HRESULT</name></type> ( <name pos:line="509" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="509" pos:column="37">*</type:modifier><name pos:line="509" pos:column="38">QueryInterface</name> )<parameter_list pos:line="509" pos:column="54">( 
            <param><decl><type><name pos:line="510" pos:column="13">ILicensedClassManager</name> <type:modifier pos:line="510" pos:column="35">*</type:modifier></type> <name pos:line="510" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="511" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="511" pos:column="24">REFIID</name></type> <name pos:line="511" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="512" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="513" pos:column="13">__RPC__deref_out</name>  <name pos:line="513" pos:column="31">void</name> <type:modifier pos:line="513" pos:column="36">*</type:modifier><type:modifier pos:line="513" pos:column="37">*</type:modifier></type><name pos:line="513" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="515" pos:column="9">ULONG</name></type> ( <name pos:line="515" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="515" pos:column="35">*</type:modifier><name pos:line="515" pos:column="36">AddRef</name> )<parameter_list pos:line="515" pos:column="44">( 
            <param><decl><type><name pos:line="516" pos:column="13">ILicensedClassManager</name> <type:modifier pos:line="516" pos:column="35">*</type:modifier></type> <name pos:line="516" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="518" pos:column="9">ULONG</name></type> ( <name pos:line="518" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="518" pos:column="35">*</type:modifier><name pos:line="518" pos:column="36">Release</name> )<parameter_list pos:line="518" pos:column="45">( 
            <param><decl><type><name pos:line="519" pos:column="13">ILicensedClassManager</name> <type:modifier pos:line="519" pos:column="35">*</type:modifier></type> <name pos:line="519" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="521" pos:column="9">HRESULT</name></type> ( <name pos:line="521" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="521" pos:column="37">*</type:modifier><name pos:line="521" pos:column="38">OnChangeInRequiredClasses</name> )<parameter_list pos:line="521" pos:column="65">( 
            <param><decl><type><name pos:line="522" pos:column="13">ILicensedClassManager</name> <type:modifier pos:line="522" pos:column="35">*</type:modifier></type> <name pos:line="522" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="523" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="523" pos:column="24">IRequireClasses</name> <type:modifier pos:line="523" pos:column="40">*</type:modifier></type><name pos:line="523" pos:column="41">pirc</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="525" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="526" pos:column="7">ILicensedClassManagerVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="528" pos:column="5">interface</name></type> <name pos:line="528" pos:column="15">ILicensedClassManager</name>
    <argument_list pos:line="529" pos:column="5">{
        <argument><expr><name pos:line="530" pos:column="9">CONST_VTBL</name> struct <name pos:line="530" pos:column="27">ILicensedClassManagerVtbl</name> <op:operator pos:line="530" pos:column="53">*</op:operator><name pos:line="530" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="535" pos:column="1">#<cpp:directive pos:line="535" pos:column="2">ifdef</cpp:directive> <name pos:line="535" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="538" pos:column="1">#<cpp:directive pos:line="538" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="538" pos:column="9">ILicensedClassManager_QueryInterface</name><parameter_list pos:line="538" pos:column="45">(<param><type><name pos:line="538" pos:column="46">This</name></type></param>,<param><type><name pos:line="538" pos:column="51">riid</name></type></param>,<param><type><name pos:line="538" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="539" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="541" pos:column="1">#<cpp:directive pos:line="541" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="541" pos:column="9">ILicensedClassManager_AddRef</name><parameter_list pos:line="541" pos:column="37">(<param><type><name pos:line="541" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="542" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="544" pos:column="1">#<cpp:directive pos:line="544" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="544" pos:column="9">ILicensedClassManager_Release</name><parameter_list pos:line="544" pos:column="38">(<param><type><name pos:line="544" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="545" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="548" pos:column="1">#<cpp:directive pos:line="548" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="548" pos:column="9">ILicensedClassManager_OnChangeInRequiredClasses</name><parameter_list pos:line="548" pos:column="56">(<param><type><name pos:line="548" pos:column="57">This</name></type></param>,<param><type><name pos:line="548" pos:column="62">pirc</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="549" pos:column="5">( (This)-&gt;lpVtbl -&gt; OnChangeInRequiredClasses(This,pirc) )</cpp:value></cpp:define> 

<cpp:endif pos:line="551" pos:column="1">#<cpp:directive pos:line="551" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="551" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="554" pos:column="1">#<cpp:directive pos:line="554" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="554" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="559" pos:column="1">#<cpp:directive pos:line="559" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="559" pos:column="9">/* __ILicensedClassManager_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="562" pos:column="1">/* interface __MIDL_itf_objext_0000_0004 */</comment>
<comment type="block" pos:line="563" pos:column="1">/* [local] */</comment> 

<cpp:define pos:line="565" pos:column="1">#<cpp:directive pos:line="565" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="565" pos:column="9">SID_SLicensedClassManager</name></cpp:macro> <cpp:value pos:line="565" pos:column="35">IID_ILicensedClassManager</cpp:value></cpp:define>


<decl_stmt><decl><type><specifier pos:line="568" pos:column="1">extern</specifier> <name pos:line="568" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="568" pos:column="22">__MIDL_itf_objext_0000_0004_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="569" pos:column="1">extern</specifier> <name pos:line="569" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="569" pos:column="22">__MIDL_itf_objext_0000_0004_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="571" pos:column="1">#<cpp:directive pos:line="571" pos:column="2">ifndef</cpp:directive> <name pos:line="571" pos:column="9">__IExtendedTypeLib_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="572" pos:column="1">#<cpp:directive pos:line="572" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="572" pos:column="9">__IExtendedTypeLib_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="574" pos:column="1">/* interface IExtendedTypeLib */</comment>
<comment type="block" pos:line="575" pos:column="1">/* [unique][uuid][local][object] */</comment> 


<decl_stmt><decl><type><name pos:line="578" pos:column="1">EXTERN_C</name> <specifier pos:line="578" pos:column="10">const</specifier> <name pos:line="578" pos:column="16">IID</name></type> <name pos:line="578" pos:column="20">IID_IExtendedTypeLib</name></decl>;</decl_stmt>

<cpp:if pos:line="580" pos:column="1">#<cpp:directive pos:line="580" pos:column="2">if</cpp:directive> <expr><call><name pos:line="580" pos:column="5">defined</name><argument_list pos:line="580" pos:column="12">(<argument><expr><name pos:line="580" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="580" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="580" pos:column="29">!</op:operator><call><name pos:line="580" pos:column="30">defined</name><argument_list pos:line="580" pos:column="37">(<argument><expr><name pos:line="580" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="582" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="582" pos:column="19">(<argument pos:line="582" pos:column="20">"6d5140d6-7436-11ce-8034-00aa006009fa"</argument>)</argument_list></macro>
    <label><name pos:line="583" pos:column="5">IExtendedTypeLib</name> :</label> <expr_stmt><expr pos:line="583" pos:column="24">public <name pos:line="583" pos:column="31">IUnknown</name>
    <block pos:line="584" pos:column="5">{
    <expr pos:line="585" pos:column="5">public<op:operator pos:line="585" pos:column="11">:</op:operator>
        virtual <name pos:line="586" pos:column="17">HRESULT</name> <name pos:line="586" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="586" pos:column="43">CreateExtendedTypeLib</name><argument_list pos:line="586" pos:column="64">( 
            <comment type="block" pos:line="587" pos:column="13">/* [in] */</comment> <argument pos:line="587" pos:column="24">LPCOLESTR lpstrCtrlLibFileName</argument>,
            <comment type="block" pos:line="588" pos:column="13">/* [in] */</comment> <argument pos:line="588" pos:column="24">LPCOLESTR lpstrLibNamePrepend</argument>,
            <comment type="block" pos:line="589" pos:column="13">/* [in] */</comment> <argument pos:line="589" pos:column="24">ITypeInfo *ptinfoExtender</argument>,
            <comment type="block" pos:line="590" pos:column="13">/* [in] */</comment> <argument pos:line="590" pos:column="24">DWORD dwReserved</argument>,
            <comment type="block" pos:line="591" pos:column="13">/* [in] */</comment> <argument pos:line="591" pos:column="24">DWORD dwFlags</argument>,
            <comment type="block" pos:line="592" pos:column="13">/* [in] */</comment> <argument pos:line="592" pos:column="24">LPCOLESTR lpstrDirectoryName</argument>,
            <comment type="block" pos:line="593" pos:column="13">/* [out] */</comment> <argument pos:line="593" pos:column="25">ITypeLib **pptLib</argument>)</argument_list></macro> <op:operator pos:line="593" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="593" pos:column="46">0</lit:literal></expr>;
        
        <expr pos:line="595" pos:column="9">virtual <name pos:line="595" pos:column="17">HRESULT</name> <name pos:line="595" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="595" pos:column="43">AddRefExtendedTypeLib</name><argument_list pos:line="595" pos:column="64">( 
            <comment type="block" pos:line="596" pos:column="13">/* [in] */</comment> <argument pos:line="596" pos:column="24">LPCOLESTR lpstrCtrlLibFileName</argument>,
            <comment type="block" pos:line="597" pos:column="13">/* [in] */</comment> <argument pos:line="597" pos:column="24">LPCOLESTR lpstrLibNamePrepend</argument>,
            <comment type="block" pos:line="598" pos:column="13">/* [in] */</comment> <argument pos:line="598" pos:column="24">ITypeInfo *ptinfoExtender</argument>,
            <comment type="block" pos:line="599" pos:column="13">/* [in] */</comment> <argument pos:line="599" pos:column="24">DWORD dwReserved</argument>,
            <comment type="block" pos:line="600" pos:column="13">/* [in] */</comment> <argument pos:line="600" pos:column="24">DWORD dwFlags</argument>,
            <comment type="block" pos:line="601" pos:column="13">/* [in] */</comment> <argument pos:line="601" pos:column="24">LPCOLESTR lpstrDirectoryName</argument>,
            <comment type="block" pos:line="602" pos:column="13">/* [out] */</comment> <argument pos:line="602" pos:column="25">ITypeLib **pptLib</argument>)</argument_list></macro> <op:operator pos:line="602" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="602" pos:column="46">0</lit:literal></expr>;
        
        <expr pos:line="604" pos:column="9">virtual <name pos:line="604" pos:column="17">HRESULT</name> <name pos:line="604" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="604" pos:column="43">AddRefExtendedTypeLibOfClsid</name><argument_list pos:line="604" pos:column="71">( 
            <comment type="block" pos:line="605" pos:column="13">/* [in] */</comment> <argument pos:line="605" pos:column="24">REFCLSID rclsidControl</argument>,
            <comment type="block" pos:line="606" pos:column="13">/* [in] */</comment> <argument pos:line="606" pos:column="24">LPCOLESTR lpstrLibNamePrepend</argument>,
            <comment type="block" pos:line="607" pos:column="13">/* [in] */</comment> <argument pos:line="607" pos:column="24">ITypeInfo *ptinfoExtender</argument>,
            <comment type="block" pos:line="608" pos:column="13">/* [in] */</comment> <argument pos:line="608" pos:column="24">DWORD dwReserved</argument>,
            <comment type="block" pos:line="609" pos:column="13">/* [in] */</comment> <argument pos:line="609" pos:column="24">DWORD dwFlags</argument>,
            <comment type="block" pos:line="610" pos:column="13">/* [in] */</comment> <argument pos:line="610" pos:column="24">LPCOLESTR lpstrDirectoryName</argument>,
            <comment type="block" pos:line="611" pos:column="13">/* [out] */</comment> <argument pos:line="611" pos:column="25">ITypeInfo **pptinfo</argument>)</argument_list></macro> <op:operator pos:line="611" pos:column="46">=</op:operator> <lit:literal type="number" pos:line="611" pos:column="48">0</lit:literal></expr>;
        
        <expr pos:line="613" pos:column="9">virtual <name pos:line="613" pos:column="17">HRESULT</name> <name pos:line="613" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="613" pos:column="43">SetExtenderInfo</name><argument_list pos:line="613" pos:column="58">( 
            <comment type="block" pos:line="614" pos:column="13">/* [in] */</comment> <argument pos:line="614" pos:column="24">LPCOLESTR lpstrDirectoryName</argument>,
            <comment type="block" pos:line="615" pos:column="13">/* [in] */</comment> <argument pos:line="615" pos:column="24">ITypeInfo *ptinfoExtender</argument>,
            <comment type="block" pos:line="616" pos:column="13">/* [in] */</comment> <argument pos:line="616" pos:column="24">DWORD dwReserved</argument>)</argument_list></macro> <op:operator pos:line="616" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="616" pos:column="44">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="620" pos:column="1">#<cpp:directive pos:line="620" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="620" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="622" pos:column="5">typedef <type><struct pos:line="622" pos:column="13">struct <name pos:line="622" pos:column="20">IExtendedTypeLibVtbl</name>
    <block pos:line="623" pos:column="5">{<public type="default" pos:line="623" pos:column="6">
        <function_decl><type><name pos:line="624" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="626" pos:column="9">HRESULT</name></type> ( <name pos:line="626" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="626" pos:column="37">*</type:modifier><name pos:line="626" pos:column="38">QueryInterface</name> )<parameter_list pos:line="626" pos:column="54">( 
            <param><decl><type><name pos:line="627" pos:column="13">IExtendedTypeLib</name> <type:modifier pos:line="627" pos:column="30">*</type:modifier></type> <name pos:line="627" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="628" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="628" pos:column="24">REFIID</name></type> <name pos:line="628" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="629" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="630" pos:column="13">__RPC__deref_out</name>  <name pos:line="630" pos:column="31">void</name> <type:modifier pos:line="630" pos:column="36">*</type:modifier><type:modifier pos:line="630" pos:column="37">*</type:modifier></type><name pos:line="630" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="632" pos:column="9">ULONG</name></type> ( <name pos:line="632" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="632" pos:column="35">*</type:modifier><name pos:line="632" pos:column="36">AddRef</name> )<parameter_list pos:line="632" pos:column="44">( 
            <param><decl><type><name pos:line="633" pos:column="13">IExtendedTypeLib</name> <type:modifier pos:line="633" pos:column="30">*</type:modifier></type> <name pos:line="633" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="635" pos:column="9">ULONG</name></type> ( <name pos:line="635" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="635" pos:column="35">*</type:modifier><name pos:line="635" pos:column="36">Release</name> )<parameter_list pos:line="635" pos:column="45">( 
            <param><decl><type><name pos:line="636" pos:column="13">IExtendedTypeLib</name> <type:modifier pos:line="636" pos:column="30">*</type:modifier></type> <name pos:line="636" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="638" pos:column="9">HRESULT</name></type> ( <name pos:line="638" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="638" pos:column="37">*</type:modifier><name pos:line="638" pos:column="38">CreateExtendedTypeLib</name> )<parameter_list pos:line="638" pos:column="61">( 
            <param><decl><type><name pos:line="639" pos:column="13">IExtendedTypeLib</name> <type:modifier pos:line="639" pos:column="30">*</type:modifier></type> <name pos:line="639" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="640" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="640" pos:column="24">LPCOLESTR</name></type> <name pos:line="640" pos:column="34">lpstrCtrlLibFileName</name></decl></param>,
            <comment type="block" pos:line="641" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="641" pos:column="24">LPCOLESTR</name></type> <name pos:line="641" pos:column="34">lpstrLibNamePrepend</name></decl></param>,
            <comment type="block" pos:line="642" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="642" pos:column="24">ITypeInfo</name> <type:modifier pos:line="642" pos:column="34">*</type:modifier></type><name pos:line="642" pos:column="35">ptinfoExtender</name></decl></param>,
            <comment type="block" pos:line="643" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="643" pos:column="24">DWORD</name></type> <name pos:line="643" pos:column="30">dwReserved</name></decl></param>,
            <comment type="block" pos:line="644" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="644" pos:column="24">DWORD</name></type> <name pos:line="644" pos:column="30">dwFlags</name></decl></param>,
            <comment type="block" pos:line="645" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="645" pos:column="24">LPCOLESTR</name></type> <name pos:line="645" pos:column="34">lpstrDirectoryName</name></decl></param>,
            <comment type="block" pos:line="646" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="646" pos:column="25">ITypeLib</name> <type:modifier pos:line="646" pos:column="34">*</type:modifier><type:modifier pos:line="646" pos:column="35">*</type:modifier></type><name pos:line="646" pos:column="36">pptLib</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="648" pos:column="9">HRESULT</name></type> ( <name pos:line="648" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="648" pos:column="37">*</type:modifier><name pos:line="648" pos:column="38">AddRefExtendedTypeLib</name> )<parameter_list pos:line="648" pos:column="61">( 
            <param><decl><type><name pos:line="649" pos:column="13">IExtendedTypeLib</name> <type:modifier pos:line="649" pos:column="30">*</type:modifier></type> <name pos:line="649" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="650" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="650" pos:column="24">LPCOLESTR</name></type> <name pos:line="650" pos:column="34">lpstrCtrlLibFileName</name></decl></param>,
            <comment type="block" pos:line="651" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="651" pos:column="24">LPCOLESTR</name></type> <name pos:line="651" pos:column="34">lpstrLibNamePrepend</name></decl></param>,
            <comment type="block" pos:line="652" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="652" pos:column="24">ITypeInfo</name> <type:modifier pos:line="652" pos:column="34">*</type:modifier></type><name pos:line="652" pos:column="35">ptinfoExtender</name></decl></param>,
            <comment type="block" pos:line="653" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="653" pos:column="24">DWORD</name></type> <name pos:line="653" pos:column="30">dwReserved</name></decl></param>,
            <comment type="block" pos:line="654" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="654" pos:column="24">DWORD</name></type> <name pos:line="654" pos:column="30">dwFlags</name></decl></param>,
            <comment type="block" pos:line="655" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="655" pos:column="24">LPCOLESTR</name></type> <name pos:line="655" pos:column="34">lpstrDirectoryName</name></decl></param>,
            <comment type="block" pos:line="656" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="656" pos:column="25">ITypeLib</name> <type:modifier pos:line="656" pos:column="34">*</type:modifier><type:modifier pos:line="656" pos:column="35">*</type:modifier></type><name pos:line="656" pos:column="36">pptLib</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="658" pos:column="9">HRESULT</name></type> ( <name pos:line="658" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="658" pos:column="37">*</type:modifier><name pos:line="658" pos:column="38">AddRefExtendedTypeLibOfClsid</name> )<parameter_list pos:line="658" pos:column="68">( 
            <param><decl><type><name pos:line="659" pos:column="13">IExtendedTypeLib</name> <type:modifier pos:line="659" pos:column="30">*</type:modifier></type> <name pos:line="659" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="660" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="660" pos:column="24">REFCLSID</name></type> <name pos:line="660" pos:column="33">rclsidControl</name></decl></param>,
            <comment type="block" pos:line="661" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="661" pos:column="24">LPCOLESTR</name></type> <name pos:line="661" pos:column="34">lpstrLibNamePrepend</name></decl></param>,
            <comment type="block" pos:line="662" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="662" pos:column="24">ITypeInfo</name> <type:modifier pos:line="662" pos:column="34">*</type:modifier></type><name pos:line="662" pos:column="35">ptinfoExtender</name></decl></param>,
            <comment type="block" pos:line="663" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="663" pos:column="24">DWORD</name></type> <name pos:line="663" pos:column="30">dwReserved</name></decl></param>,
            <comment type="block" pos:line="664" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="664" pos:column="24">DWORD</name></type> <name pos:line="664" pos:column="30">dwFlags</name></decl></param>,
            <comment type="block" pos:line="665" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="665" pos:column="24">LPCOLESTR</name></type> <name pos:line="665" pos:column="34">lpstrDirectoryName</name></decl></param>,
            <comment type="block" pos:line="666" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="666" pos:column="25">ITypeInfo</name> <type:modifier pos:line="666" pos:column="35">*</type:modifier><type:modifier pos:line="666" pos:column="36">*</type:modifier></type><name pos:line="666" pos:column="37">pptinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="668" pos:column="9">HRESULT</name></type> ( <name pos:line="668" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="668" pos:column="37">*</type:modifier><name pos:line="668" pos:column="38">SetExtenderInfo</name> )<parameter_list pos:line="668" pos:column="55">( 
            <param><decl><type><name pos:line="669" pos:column="13">IExtendedTypeLib</name> <type:modifier pos:line="669" pos:column="30">*</type:modifier></type> <name pos:line="669" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="670" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="670" pos:column="24">LPCOLESTR</name></type> <name pos:line="670" pos:column="34">lpstrDirectoryName</name></decl></param>,
            <comment type="block" pos:line="671" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="671" pos:column="24">ITypeInfo</name> <type:modifier pos:line="671" pos:column="34">*</type:modifier></type><name pos:line="671" pos:column="35">ptinfoExtender</name></decl></param>,
            <comment type="block" pos:line="672" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="672" pos:column="24">DWORD</name></type> <name pos:line="672" pos:column="30">dwReserved</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="674" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="675" pos:column="7">IExtendedTypeLibVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="677" pos:column="5">interface</name></type> <name pos:line="677" pos:column="15">IExtendedTypeLib</name>
    <argument_list pos:line="678" pos:column="5">{
        <argument><expr><name pos:line="679" pos:column="9">CONST_VTBL</name> struct <name pos:line="679" pos:column="27">IExtendedTypeLibVtbl</name> <op:operator pos:line="679" pos:column="48">*</op:operator><name pos:line="679" pos:column="49">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="684" pos:column="1">#<cpp:directive pos:line="684" pos:column="2">ifdef</cpp:directive> <name pos:line="684" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="687" pos:column="1">#<cpp:directive pos:line="687" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="687" pos:column="9">IExtendedTypeLib_QueryInterface</name><parameter_list pos:line="687" pos:column="40">(<param><type><name pos:line="687" pos:column="41">This</name></type></param>,<param><type><name pos:line="687" pos:column="46">riid</name></type></param>,<param><type><name pos:line="687" pos:column="51">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="688" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="690" pos:column="1">#<cpp:directive pos:line="690" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="690" pos:column="9">IExtendedTypeLib_AddRef</name><parameter_list pos:line="690" pos:column="32">(<param><type><name pos:line="690" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="691" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="693" pos:column="1">#<cpp:directive pos:line="693" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="693" pos:column="9">IExtendedTypeLib_Release</name><parameter_list pos:line="693" pos:column="33">(<param><type><name pos:line="693" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="694" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="697" pos:column="1">#<cpp:directive pos:line="697" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="697" pos:column="9">IExtendedTypeLib_CreateExtendedTypeLib</name><parameter_list pos:line="697" pos:column="47">(<param><type><name pos:line="697" pos:column="48">This</name></type></param>,<param><type><name pos:line="697" pos:column="53">lpstrCtrlLibFileName</name></type></param>,<param><type><name pos:line="697" pos:column="74">lpstrLibNamePrepend</name></type></param>,<param><type><name pos:line="697" pos:column="94">ptinfoExtender</name></type></param>,<param><type><name pos:line="697" pos:column="109">dwReserved</name></type></param>,<param><type><name pos:line="697" pos:column="120">dwFlags</name></type></param>,<param><type><name pos:line="697" pos:column="128">lpstrDirectoryName</name></type></param>,<param><type><name pos:line="697" pos:column="147">pptLib</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="698" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateExtendedTypeLib(This,lpstrCtrlLibFileName,lpstrLibNamePrepend,ptinfoExtender,dwReserved,dwFlags,lpstrDirectoryName,pptLib) )</cpp:value></cpp:define> 

<cpp:define pos:line="700" pos:column="1">#<cpp:directive pos:line="700" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="700" pos:column="9">IExtendedTypeLib_AddRefExtendedTypeLib</name><parameter_list pos:line="700" pos:column="47">(<param><type><name pos:line="700" pos:column="48">This</name></type></param>,<param><type><name pos:line="700" pos:column="53">lpstrCtrlLibFileName</name></type></param>,<param><type><name pos:line="700" pos:column="74">lpstrLibNamePrepend</name></type></param>,<param><type><name pos:line="700" pos:column="94">ptinfoExtender</name></type></param>,<param><type><name pos:line="700" pos:column="109">dwReserved</name></type></param>,<param><type><name pos:line="700" pos:column="120">dwFlags</name></type></param>,<param><type><name pos:line="700" pos:column="128">lpstrDirectoryName</name></type></param>,<param><type><name pos:line="700" pos:column="147">pptLib</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="701" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRefExtendedTypeLib(This,lpstrCtrlLibFileName,lpstrLibNamePrepend,ptinfoExtender,dwReserved,dwFlags,lpstrDirectoryName,pptLib) )</cpp:value></cpp:define> 

<cpp:define pos:line="703" pos:column="1">#<cpp:directive pos:line="703" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="703" pos:column="9">IExtendedTypeLib_AddRefExtendedTypeLibOfClsid</name><parameter_list pos:line="703" pos:column="54">(<param><type><name pos:line="703" pos:column="55">This</name></type></param>,<param><type><name pos:line="703" pos:column="60">rclsidControl</name></type></param>,<param><type><name pos:line="703" pos:column="74">lpstrLibNamePrepend</name></type></param>,<param><type><name pos:line="703" pos:column="94">ptinfoExtender</name></type></param>,<param><type><name pos:line="703" pos:column="109">dwReserved</name></type></param>,<param><type><name pos:line="703" pos:column="120">dwFlags</name></type></param>,<param><type><name pos:line="703" pos:column="128">lpstrDirectoryName</name></type></param>,<param><type><name pos:line="703" pos:column="147">pptinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="704" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRefExtendedTypeLibOfClsid(This,rclsidControl,lpstrLibNamePrepend,ptinfoExtender,dwReserved,dwFlags,lpstrDirectoryName,pptinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="706" pos:column="1">#<cpp:directive pos:line="706" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="706" pos:column="9">IExtendedTypeLib_SetExtenderInfo</name><parameter_list pos:line="706" pos:column="41">(<param><type><name pos:line="706" pos:column="42">This</name></type></param>,<param><type><name pos:line="706" pos:column="47">lpstrDirectoryName</name></type></param>,<param><type><name pos:line="706" pos:column="66">ptinfoExtender</name></type></param>,<param><type><name pos:line="706" pos:column="81">dwReserved</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="707" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetExtenderInfo(This,lpstrDirectoryName,ptinfoExtender,dwReserved) )</cpp:value></cpp:define> 

<cpp:endif pos:line="709" pos:column="1">#<cpp:directive pos:line="709" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="709" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="712" pos:column="1">#<cpp:directive pos:line="712" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="712" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="717" pos:column="1">#<cpp:directive pos:line="717" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="717" pos:column="9">/* __IExtendedTypeLib_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="720" pos:column="1">/* interface __MIDL_itf_objext_0000_0005 */</comment>
<comment type="block" pos:line="721" pos:column="1">/* [local] */</comment> 

<cpp:define pos:line="723" pos:column="1">#<cpp:directive pos:line="723" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="723" pos:column="9">SID_SExtendedTypeLib</name></cpp:macro> <cpp:value pos:line="723" pos:column="30">IID_IExtendedTypeLib</cpp:value></cpp:define>


<decl_stmt><decl><type><specifier pos:line="726" pos:column="1">extern</specifier> <name pos:line="726" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="726" pos:column="22">__MIDL_itf_objext_0000_0005_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="727" pos:column="1">extern</specifier> <name pos:line="727" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="727" pos:column="22">__MIDL_itf_objext_0000_0005_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="729" pos:column="1">#<cpp:directive pos:line="729" pos:column="2">ifndef</cpp:directive> <name pos:line="729" pos:column="9">__ILocalRegistry_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="730" pos:column="1">#<cpp:directive pos:line="730" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="730" pos:column="9">__ILocalRegistry_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="732" pos:column="1">/* interface ILocalRegistry */</comment>
<comment type="block" pos:line="733" pos:column="1">/* [unique][uuid][local][object] */</comment> 


<decl_stmt><decl><type><name pos:line="736" pos:column="1">EXTERN_C</name> <specifier pos:line="736" pos:column="10">const</specifier> <name pos:line="736" pos:column="16">IID</name></type> <name pos:line="736" pos:column="20">IID_ILocalRegistry</name></decl>;</decl_stmt>

<cpp:if pos:line="738" pos:column="1">#<cpp:directive pos:line="738" pos:column="2">if</cpp:directive> <expr><call><name pos:line="738" pos:column="5">defined</name><argument_list pos:line="738" pos:column="12">(<argument><expr><name pos:line="738" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="738" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="738" pos:column="29">!</op:operator><call><name pos:line="738" pos:column="30">defined</name><argument_list pos:line="738" pos:column="37">(<argument><expr><name pos:line="738" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="740" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="740" pos:column="19">(<argument pos:line="740" pos:column="20">"6d5140d3-7436-11ce-8034-00aa006009fa"</argument>)</argument_list></macro>
    <label><name pos:line="741" pos:column="5">ILocalRegistry</name> :</label> <expr_stmt><expr pos:line="741" pos:column="22">public <name pos:line="741" pos:column="29">IUnknown</name>
    <block pos:line="742" pos:column="5">{
    <expr pos:line="743" pos:column="5">public<op:operator pos:line="743" pos:column="11">:</op:operator>
        virtual <name pos:line="744" pos:column="17">HRESULT</name> <name pos:line="744" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="744" pos:column="43">CreateInstance</name><argument_list pos:line="744" pos:column="57">( 
            <comment type="block" pos:line="745" pos:column="13">/* [in] */</comment> <argument pos:line="745" pos:column="24">CLSID clsid</argument>,
            <comment type="block" pos:line="746" pos:column="13">/* [in] */</comment> <argument pos:line="746" pos:column="24">IUnknown *punkOuter</argument>,
            <comment type="block" pos:line="747" pos:column="13">/* [in] */</comment> <argument pos:line="747" pos:column="24">REFIID riid</argument>,
            <comment type="block" pos:line="748" pos:column="13">/* [in] */</comment> <argument pos:line="748" pos:column="24">DWORD dwFlags</argument>,
            <comment type="block" pos:line="749" pos:column="13">/* [out] */</comment> <argument pos:line="749" pos:column="25">void **ppvObj</argument>)</argument_list></macro> <op:operator pos:line="749" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="749" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="751" pos:column="9">virtual <name pos:line="751" pos:column="17">HRESULT</name> <name pos:line="751" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="751" pos:column="43">GetTypeLibOfClsid</name><argument_list pos:line="751" pos:column="60">( 
            <comment type="block" pos:line="752" pos:column="13">/* [in] */</comment> <argument pos:line="752" pos:column="24">CLSID clsid</argument>,
            <comment type="block" pos:line="753" pos:column="13">/* [out] */</comment> <argument pos:line="753" pos:column="25">ITypeLib **pptlib</argument>)</argument_list></macro> <op:operator pos:line="753" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="753" pos:column="46">0</lit:literal></expr>;
        
        <expr pos:line="755" pos:column="9">virtual <name pos:line="755" pos:column="17">HRESULT</name> <name pos:line="755" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="755" pos:column="43">GetClassObjectOfClsid</name><argument_list pos:line="755" pos:column="64">( 
            <comment type="block" pos:line="756" pos:column="13">/* [in] */</comment> <argument pos:line="756" pos:column="24">REFCLSID clsid</argument>,
            <comment type="block" pos:line="757" pos:column="13">/* [in] */</comment> <argument pos:line="757" pos:column="24">DWORD dwFlags</argument>,
            <comment type="block" pos:line="758" pos:column="13">/* [in] */</comment> <argument pos:line="758" pos:column="24">LPVOID lpReserved</argument>,
            <comment type="block" pos:line="759" pos:column="13">/* [in] */</comment> <argument pos:line="759" pos:column="24">REFIID riid</argument>,
            <comment type="block" pos:line="760" pos:column="13">/* [in] */</comment> <argument pos:line="760" pos:column="24">void **ppvClassObject</argument>)</argument_list></macro> <op:operator pos:line="760" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="760" pos:column="49">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="764" pos:column="1">#<cpp:directive pos:line="764" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="764" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="766" pos:column="5">typedef <type><struct pos:line="766" pos:column="13">struct <name pos:line="766" pos:column="20">ILocalRegistryVtbl</name>
    <block pos:line="767" pos:column="5">{<public type="default" pos:line="767" pos:column="6">
        <function_decl><type><name pos:line="768" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="770" pos:column="9">HRESULT</name></type> ( <name pos:line="770" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="770" pos:column="37">*</type:modifier><name pos:line="770" pos:column="38">QueryInterface</name> )<parameter_list pos:line="770" pos:column="54">( 
            <param><decl><type><name pos:line="771" pos:column="13">ILocalRegistry</name> <type:modifier pos:line="771" pos:column="28">*</type:modifier></type> <name pos:line="771" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="772" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="772" pos:column="24">REFIID</name></type> <name pos:line="772" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="773" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="774" pos:column="13">__RPC__deref_out</name>  <name pos:line="774" pos:column="31">void</name> <type:modifier pos:line="774" pos:column="36">*</type:modifier><type:modifier pos:line="774" pos:column="37">*</type:modifier></type><name pos:line="774" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="776" pos:column="9">ULONG</name></type> ( <name pos:line="776" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="776" pos:column="35">*</type:modifier><name pos:line="776" pos:column="36">AddRef</name> )<parameter_list pos:line="776" pos:column="44">( 
            <param><decl><type><name pos:line="777" pos:column="13">ILocalRegistry</name> <type:modifier pos:line="777" pos:column="28">*</type:modifier></type> <name pos:line="777" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="779" pos:column="9">ULONG</name></type> ( <name pos:line="779" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="779" pos:column="35">*</type:modifier><name pos:line="779" pos:column="36">Release</name> )<parameter_list pos:line="779" pos:column="45">( 
            <param><decl><type><name pos:line="780" pos:column="13">ILocalRegistry</name> <type:modifier pos:line="780" pos:column="28">*</type:modifier></type> <name pos:line="780" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="782" pos:column="9">HRESULT</name></type> ( <name pos:line="782" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="782" pos:column="37">*</type:modifier><name pos:line="782" pos:column="38">CreateInstance</name> )<parameter_list pos:line="782" pos:column="54">( 
            <param><decl><type><name pos:line="783" pos:column="13">ILocalRegistry</name> <type:modifier pos:line="783" pos:column="28">*</type:modifier></type> <name pos:line="783" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="784" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="784" pos:column="24">CLSID</name></type> <name pos:line="784" pos:column="30">clsid</name></decl></param>,
            <comment type="block" pos:line="785" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="785" pos:column="24">IUnknown</name> <type:modifier pos:line="785" pos:column="33">*</type:modifier></type><name pos:line="785" pos:column="34">punkOuter</name></decl></param>,
            <comment type="block" pos:line="786" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="786" pos:column="24">REFIID</name></type> <name pos:line="786" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="787" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="787" pos:column="24">DWORD</name></type> <name pos:line="787" pos:column="30">dwFlags</name></decl></param>,
            <comment type="block" pos:line="788" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="788" pos:column="25">void</name> <type:modifier pos:line="788" pos:column="30">*</type:modifier><type:modifier pos:line="788" pos:column="31">*</type:modifier></type><name pos:line="788" pos:column="32">ppvObj</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="790" pos:column="9">HRESULT</name></type> ( <name pos:line="790" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="790" pos:column="37">*</type:modifier><name pos:line="790" pos:column="38">GetTypeLibOfClsid</name> )<parameter_list pos:line="790" pos:column="57">( 
            <param><decl><type><name pos:line="791" pos:column="13">ILocalRegistry</name> <type:modifier pos:line="791" pos:column="28">*</type:modifier></type> <name pos:line="791" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="792" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="792" pos:column="24">CLSID</name></type> <name pos:line="792" pos:column="30">clsid</name></decl></param>,
            <comment type="block" pos:line="793" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="793" pos:column="25">ITypeLib</name> <type:modifier pos:line="793" pos:column="34">*</type:modifier><type:modifier pos:line="793" pos:column="35">*</type:modifier></type><name pos:line="793" pos:column="36">pptlib</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="795" pos:column="9">HRESULT</name></type> ( <name pos:line="795" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="795" pos:column="37">*</type:modifier><name pos:line="795" pos:column="38">GetClassObjectOfClsid</name> )<parameter_list pos:line="795" pos:column="61">( 
            <param><decl><type><name pos:line="796" pos:column="13">ILocalRegistry</name> <type:modifier pos:line="796" pos:column="28">*</type:modifier></type> <name pos:line="796" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="797" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="797" pos:column="24">REFCLSID</name></type> <name pos:line="797" pos:column="33">clsid</name></decl></param>,
            <comment type="block" pos:line="798" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="798" pos:column="24">DWORD</name></type> <name pos:line="798" pos:column="30">dwFlags</name></decl></param>,
            <comment type="block" pos:line="799" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="799" pos:column="24">LPVOID</name></type> <name pos:line="799" pos:column="31">lpReserved</name></decl></param>,
            <comment type="block" pos:line="800" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="800" pos:column="24">REFIID</name></type> <name pos:line="800" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="801" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="801" pos:column="24">void</name> <type:modifier pos:line="801" pos:column="29">*</type:modifier><type:modifier pos:line="801" pos:column="30">*</type:modifier></type><name pos:line="801" pos:column="31">ppvClassObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="803" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="804" pos:column="7">ILocalRegistryVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="806" pos:column="5">interface</name></type> <name pos:line="806" pos:column="15">ILocalRegistry</name>
    <argument_list pos:line="807" pos:column="5">{
        <argument><expr><name pos:line="808" pos:column="9">CONST_VTBL</name> struct <name pos:line="808" pos:column="27">ILocalRegistryVtbl</name> <op:operator pos:line="808" pos:column="46">*</op:operator><name pos:line="808" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="813" pos:column="1">#<cpp:directive pos:line="813" pos:column="2">ifdef</cpp:directive> <name pos:line="813" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="816" pos:column="1">#<cpp:directive pos:line="816" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="816" pos:column="9">ILocalRegistry_QueryInterface</name><parameter_list pos:line="816" pos:column="38">(<param><type><name pos:line="816" pos:column="39">This</name></type></param>,<param><type><name pos:line="816" pos:column="44">riid</name></type></param>,<param><type><name pos:line="816" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="817" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="819" pos:column="1">#<cpp:directive pos:line="819" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="819" pos:column="9">ILocalRegistry_AddRef</name><parameter_list pos:line="819" pos:column="30">(<param><type><name pos:line="819" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="820" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="822" pos:column="1">#<cpp:directive pos:line="822" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="822" pos:column="9">ILocalRegistry_Release</name><parameter_list pos:line="822" pos:column="31">(<param><type><name pos:line="822" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="823" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="826" pos:column="1">#<cpp:directive pos:line="826" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="826" pos:column="9">ILocalRegistry_CreateInstance</name><parameter_list pos:line="826" pos:column="38">(<param><type><name pos:line="826" pos:column="39">This</name></type></param>,<param><type><name pos:line="826" pos:column="44">clsid</name></type></param>,<param><type><name pos:line="826" pos:column="50">punkOuter</name></type></param>,<param><type><name pos:line="826" pos:column="60">riid</name></type></param>,<param><type><name pos:line="826" pos:column="65">dwFlags</name></type></param>,<param><type><name pos:line="826" pos:column="73">ppvObj</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="827" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateInstance(This,clsid,punkOuter,riid,dwFlags,ppvObj) )</cpp:value></cpp:define> 

<cpp:define pos:line="829" pos:column="1">#<cpp:directive pos:line="829" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="829" pos:column="9">ILocalRegistry_GetTypeLibOfClsid</name><parameter_list pos:line="829" pos:column="41">(<param><type><name pos:line="829" pos:column="42">This</name></type></param>,<param><type><name pos:line="829" pos:column="47">clsid</name></type></param>,<param><type><name pos:line="829" pos:column="53">pptlib</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="830" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeLibOfClsid(This,clsid,pptlib) )</cpp:value></cpp:define> 

<cpp:define pos:line="832" pos:column="1">#<cpp:directive pos:line="832" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="832" pos:column="9">ILocalRegistry_GetClassObjectOfClsid</name><parameter_list pos:line="832" pos:column="45">(<param><type><name pos:line="832" pos:column="46">This</name></type></param>,<param><type><name pos:line="832" pos:column="51">clsid</name></type></param>,<param><type><name pos:line="832" pos:column="57">dwFlags</name></type></param>,<param><type><name pos:line="832" pos:column="65">lpReserved</name></type></param>,<param><type><name pos:line="832" pos:column="76">riid</name></type></param>,<param><type><name pos:line="832" pos:column="81">ppvClassObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="833" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetClassObjectOfClsid(This,clsid,dwFlags,lpReserved,riid,ppvClassObject) )</cpp:value></cpp:define> 

<cpp:endif pos:line="835" pos:column="1">#<cpp:directive pos:line="835" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="835" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="838" pos:column="1">#<cpp:directive pos:line="838" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="838" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="843" pos:column="1">#<cpp:directive pos:line="843" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="843" pos:column="9">/* __ILocalRegistry_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="846" pos:column="1">#<cpp:directive pos:line="846" pos:column="2">ifndef</cpp:directive> <name pos:line="846" pos:column="9">__ILocalRegistry2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="847" pos:column="1">#<cpp:directive pos:line="847" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="847" pos:column="9">__ILocalRegistry2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="849" pos:column="1">/* interface ILocalRegistry2 */</comment>
<comment type="block" pos:line="850" pos:column="1">/* [unique][uuid][local][object] */</comment> 


<decl_stmt><decl><type><name pos:line="853" pos:column="1">EXTERN_C</name> <specifier pos:line="853" pos:column="10">const</specifier> <name pos:line="853" pos:column="16">IID</name></type> <name pos:line="853" pos:column="20">IID_ILocalRegistry2</name></decl>;</decl_stmt>

<cpp:if pos:line="855" pos:column="1">#<cpp:directive pos:line="855" pos:column="2">if</cpp:directive> <expr><call><name pos:line="855" pos:column="5">defined</name><argument_list pos:line="855" pos:column="12">(<argument><expr><name pos:line="855" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="855" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="855" pos:column="29">!</op:operator><call><name pos:line="855" pos:column="30">defined</name><argument_list pos:line="855" pos:column="37">(<argument><expr><name pos:line="855" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="857" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="857" pos:column="19">(<argument pos:line="857" pos:column="20">"77BB19B0-0462-11d1-AAF6-00A0C9055A90"</argument>)</argument_list></macro>
    <label><name pos:line="858" pos:column="5">ILocalRegistry2</name> :</label> <expr_stmt><expr pos:line="858" pos:column="23">public <name pos:line="858" pos:column="30">ILocalRegistry</name>
    <block pos:line="859" pos:column="5">{
    <expr pos:line="860" pos:column="5">public<op:operator pos:line="860" pos:column="11">:</op:operator>
        virtual <name pos:line="861" pos:column="17">HRESULT</name> <name pos:line="861" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="861" pos:column="43">GetLocalRegistryRoot</name><argument_list pos:line="861" pos:column="63">( 
            <comment type="block" pos:line="862" pos:column="13">/* [out] */</comment> <argument><expr><name pos:line="862" pos:column="25">BSTR</name> <op:operator pos:line="862" pos:column="30">*</op:operator><name pos:line="862" pos:column="31">pbstrRoot</name></expr></argument>)</argument_list></call> <op:operator pos:line="862" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="862" pos:column="44">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="866" pos:column="1">#<cpp:directive pos:line="866" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="866" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="868" pos:column="5">typedef <type><struct pos:line="868" pos:column="13">struct <name pos:line="868" pos:column="20">ILocalRegistry2Vtbl</name>
    <block pos:line="869" pos:column="5">{<public type="default" pos:line="869" pos:column="6">
        <function_decl><type><name pos:line="870" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="872" pos:column="9">HRESULT</name></type> ( <name pos:line="872" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="872" pos:column="37">*</type:modifier><name pos:line="872" pos:column="38">QueryInterface</name> )<parameter_list pos:line="872" pos:column="54">( 
            <param><decl><type><name pos:line="873" pos:column="13">ILocalRegistry2</name> <type:modifier pos:line="873" pos:column="29">*</type:modifier></type> <name pos:line="873" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="874" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="874" pos:column="24">REFIID</name></type> <name pos:line="874" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="875" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="876" pos:column="13">__RPC__deref_out</name>  <name pos:line="876" pos:column="31">void</name> <type:modifier pos:line="876" pos:column="36">*</type:modifier><type:modifier pos:line="876" pos:column="37">*</type:modifier></type><name pos:line="876" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="878" pos:column="9">ULONG</name></type> ( <name pos:line="878" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="878" pos:column="35">*</type:modifier><name pos:line="878" pos:column="36">AddRef</name> )<parameter_list pos:line="878" pos:column="44">( 
            <param><decl><type><name pos:line="879" pos:column="13">ILocalRegistry2</name> <type:modifier pos:line="879" pos:column="29">*</type:modifier></type> <name pos:line="879" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="881" pos:column="9">ULONG</name></type> ( <name pos:line="881" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="881" pos:column="35">*</type:modifier><name pos:line="881" pos:column="36">Release</name> )<parameter_list pos:line="881" pos:column="45">( 
            <param><decl><type><name pos:line="882" pos:column="13">ILocalRegistry2</name> <type:modifier pos:line="882" pos:column="29">*</type:modifier></type> <name pos:line="882" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="884" pos:column="9">HRESULT</name></type> ( <name pos:line="884" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="884" pos:column="37">*</type:modifier><name pos:line="884" pos:column="38">CreateInstance</name> )<parameter_list pos:line="884" pos:column="54">( 
            <param><decl><type><name pos:line="885" pos:column="13">ILocalRegistry2</name> <type:modifier pos:line="885" pos:column="29">*</type:modifier></type> <name pos:line="885" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="886" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="886" pos:column="24">CLSID</name></type> <name pos:line="886" pos:column="30">clsid</name></decl></param>,
            <comment type="block" pos:line="887" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="887" pos:column="24">IUnknown</name> <type:modifier pos:line="887" pos:column="33">*</type:modifier></type><name pos:line="887" pos:column="34">punkOuter</name></decl></param>,
            <comment type="block" pos:line="888" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="888" pos:column="24">REFIID</name></type> <name pos:line="888" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="889" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="889" pos:column="24">DWORD</name></type> <name pos:line="889" pos:column="30">dwFlags</name></decl></param>,
            <comment type="block" pos:line="890" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="890" pos:column="25">void</name> <type:modifier pos:line="890" pos:column="30">*</type:modifier><type:modifier pos:line="890" pos:column="31">*</type:modifier></type><name pos:line="890" pos:column="32">ppvObj</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="892" pos:column="9">HRESULT</name></type> ( <name pos:line="892" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="892" pos:column="37">*</type:modifier><name pos:line="892" pos:column="38">GetTypeLibOfClsid</name> )<parameter_list pos:line="892" pos:column="57">( 
            <param><decl><type><name pos:line="893" pos:column="13">ILocalRegistry2</name> <type:modifier pos:line="893" pos:column="29">*</type:modifier></type> <name pos:line="893" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="894" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="894" pos:column="24">CLSID</name></type> <name pos:line="894" pos:column="30">clsid</name></decl></param>,
            <comment type="block" pos:line="895" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="895" pos:column="25">ITypeLib</name> <type:modifier pos:line="895" pos:column="34">*</type:modifier><type:modifier pos:line="895" pos:column="35">*</type:modifier></type><name pos:line="895" pos:column="36">pptlib</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="897" pos:column="9">HRESULT</name></type> ( <name pos:line="897" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="897" pos:column="37">*</type:modifier><name pos:line="897" pos:column="38">GetClassObjectOfClsid</name> )<parameter_list pos:line="897" pos:column="61">( 
            <param><decl><type><name pos:line="898" pos:column="13">ILocalRegistry2</name> <type:modifier pos:line="898" pos:column="29">*</type:modifier></type> <name pos:line="898" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="899" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="899" pos:column="24">REFCLSID</name></type> <name pos:line="899" pos:column="33">clsid</name></decl></param>,
            <comment type="block" pos:line="900" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="900" pos:column="24">DWORD</name></type> <name pos:line="900" pos:column="30">dwFlags</name></decl></param>,
            <comment type="block" pos:line="901" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="901" pos:column="24">LPVOID</name></type> <name pos:line="901" pos:column="31">lpReserved</name></decl></param>,
            <comment type="block" pos:line="902" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="902" pos:column="24">REFIID</name></type> <name pos:line="902" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="903" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="903" pos:column="24">void</name> <type:modifier pos:line="903" pos:column="29">*</type:modifier><type:modifier pos:line="903" pos:column="30">*</type:modifier></type><name pos:line="903" pos:column="31">ppvClassObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="905" pos:column="9">HRESULT</name></type> ( <name pos:line="905" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="905" pos:column="37">*</type:modifier><name pos:line="905" pos:column="38">GetLocalRegistryRoot</name> )<parameter_list pos:line="905" pos:column="60">( 
            <param><decl><type><name pos:line="906" pos:column="13">ILocalRegistry2</name> <type:modifier pos:line="906" pos:column="29">*</type:modifier></type> <name pos:line="906" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="907" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="907" pos:column="25">BSTR</name> <type:modifier pos:line="907" pos:column="30">*</type:modifier></type><name pos:line="907" pos:column="31">pbstrRoot</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="909" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="910" pos:column="7">ILocalRegistry2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="912" pos:column="5">interface</name></type> <name pos:line="912" pos:column="15">ILocalRegistry2</name>
    <argument_list pos:line="913" pos:column="5">{
        <argument><expr><name pos:line="914" pos:column="9">CONST_VTBL</name> struct <name pos:line="914" pos:column="27">ILocalRegistry2Vtbl</name> <op:operator pos:line="914" pos:column="47">*</op:operator><name pos:line="914" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="919" pos:column="1">#<cpp:directive pos:line="919" pos:column="2">ifdef</cpp:directive> <name pos:line="919" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="922" pos:column="1">#<cpp:directive pos:line="922" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="922" pos:column="9">ILocalRegistry2_QueryInterface</name><parameter_list pos:line="922" pos:column="39">(<param><type><name pos:line="922" pos:column="40">This</name></type></param>,<param><type><name pos:line="922" pos:column="45">riid</name></type></param>,<param><type><name pos:line="922" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="923" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="925" pos:column="1">#<cpp:directive pos:line="925" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="925" pos:column="9">ILocalRegistry2_AddRef</name><parameter_list pos:line="925" pos:column="31">(<param><type><name pos:line="925" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="926" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="928" pos:column="1">#<cpp:directive pos:line="928" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="928" pos:column="9">ILocalRegistry2_Release</name><parameter_list pos:line="928" pos:column="32">(<param><type><name pos:line="928" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="929" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="932" pos:column="1">#<cpp:directive pos:line="932" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="932" pos:column="9">ILocalRegistry2_CreateInstance</name><parameter_list pos:line="932" pos:column="39">(<param><type><name pos:line="932" pos:column="40">This</name></type></param>,<param><type><name pos:line="932" pos:column="45">clsid</name></type></param>,<param><type><name pos:line="932" pos:column="51">punkOuter</name></type></param>,<param><type><name pos:line="932" pos:column="61">riid</name></type></param>,<param><type><name pos:line="932" pos:column="66">dwFlags</name></type></param>,<param><type><name pos:line="932" pos:column="74">ppvObj</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="933" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateInstance(This,clsid,punkOuter,riid,dwFlags,ppvObj) )</cpp:value></cpp:define> 

<cpp:define pos:line="935" pos:column="1">#<cpp:directive pos:line="935" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="935" pos:column="9">ILocalRegistry2_GetTypeLibOfClsid</name><parameter_list pos:line="935" pos:column="42">(<param><type><name pos:line="935" pos:column="43">This</name></type></param>,<param><type><name pos:line="935" pos:column="48">clsid</name></type></param>,<param><type><name pos:line="935" pos:column="54">pptlib</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="936" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeLibOfClsid(This,clsid,pptlib) )</cpp:value></cpp:define> 

<cpp:define pos:line="938" pos:column="1">#<cpp:directive pos:line="938" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="938" pos:column="9">ILocalRegistry2_GetClassObjectOfClsid</name><parameter_list pos:line="938" pos:column="46">(<param><type><name pos:line="938" pos:column="47">This</name></type></param>,<param><type><name pos:line="938" pos:column="52">clsid</name></type></param>,<param><type><name pos:line="938" pos:column="58">dwFlags</name></type></param>,<param><type><name pos:line="938" pos:column="66">lpReserved</name></type></param>,<param><type><name pos:line="938" pos:column="77">riid</name></type></param>,<param><type><name pos:line="938" pos:column="82">ppvClassObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="939" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetClassObjectOfClsid(This,clsid,dwFlags,lpReserved,riid,ppvClassObject) )</cpp:value></cpp:define> 


<cpp:define pos:line="942" pos:column="1">#<cpp:directive pos:line="942" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="942" pos:column="9">ILocalRegistry2_GetLocalRegistryRoot</name><parameter_list pos:line="942" pos:column="45">(<param><type><name pos:line="942" pos:column="46">This</name></type></param>,<param><type><name pos:line="942" pos:column="51">pbstrRoot</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="943" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLocalRegistryRoot(This,pbstrRoot) )</cpp:value></cpp:define> 

<cpp:endif pos:line="945" pos:column="1">#<cpp:directive pos:line="945" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="945" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="948" pos:column="1">#<cpp:directive pos:line="948" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="948" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="953" pos:column="1">#<cpp:directive pos:line="953" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="953" pos:column="9">/* __ILocalRegistry2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="956" pos:column="1">#<cpp:directive pos:line="956" pos:column="2">ifndef</cpp:directive> <name pos:line="956" pos:column="9">__ILocalRegistry3_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="957" pos:column="1">#<cpp:directive pos:line="957" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="957" pos:column="9">__ILocalRegistry3_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="959" pos:column="1">/* interface ILocalRegistry3 */</comment>
<comment type="block" pos:line="960" pos:column="1">/* [unique][uuid][local][object] */</comment> 


<decl_stmt><decl><type><name pos:line="963" pos:column="1">EXTERN_C</name> <specifier pos:line="963" pos:column="10">const</specifier> <name pos:line="963" pos:column="16">IID</name></type> <name pos:line="963" pos:column="20">IID_ILocalRegistry3</name></decl>;</decl_stmt>

<cpp:if pos:line="965" pos:column="1">#<cpp:directive pos:line="965" pos:column="2">if</cpp:directive> <expr><call><name pos:line="965" pos:column="5">defined</name><argument_list pos:line="965" pos:column="12">(<argument><expr><name pos:line="965" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="965" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="965" pos:column="29">!</op:operator><call><name pos:line="965" pos:column="30">defined</name><argument_list pos:line="965" pos:column="37">(<argument><expr><name pos:line="965" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="967" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="967" pos:column="19">(<argument pos:line="967" pos:column="20">"1B01F13F-ABEE-4761-91AF-76CE6B4C9E7A"</argument>)</argument_list></macro>
    <label><name pos:line="968" pos:column="5">ILocalRegistry3</name> :</label> <expr_stmt><expr pos:line="968" pos:column="23">public <name pos:line="968" pos:column="30">ILocalRegistry2</name>
    <block pos:line="969" pos:column="5">{
    <expr pos:line="970" pos:column="5">public<op:operator pos:line="970" pos:column="11">:</op:operator>
        virtual <name pos:line="971" pos:column="17">HRESULT</name> <name pos:line="971" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="971" pos:column="43">CreateManagedInstance</name><argument_list pos:line="971" pos:column="64">( 
            <comment type="block" pos:line="972" pos:column="13">/* [in] */</comment> <argument pos:line="972" pos:column="24">LPCWSTR codeBase</argument>,
            <comment type="block" pos:line="973" pos:column="13">/* [in] */</comment> <argument pos:line="973" pos:column="24">LPCWSTR assemblyName</argument>,
            <comment type="block" pos:line="974" pos:column="13">/* [in] */</comment> <argument pos:line="974" pos:column="24">LPCWSTR typeName</argument>,
            <comment type="block" pos:line="975" pos:column="13">/* [in] */</comment> <argument pos:line="975" pos:column="24">REFIID riid</argument>,
            <comment type="block" pos:line="976" pos:column="13">/* [out] */</comment> <argument pos:line="976" pos:column="25">void **ppvObj</argument>)</argument_list></macro> <op:operator pos:line="976" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="976" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="978" pos:column="9">virtual <name pos:line="978" pos:column="17">HRESULT</name> <name pos:line="978" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="978" pos:column="43">GetClassObjectOfManagedClass</name><argument_list pos:line="978" pos:column="71">( 
            <comment type="block" pos:line="979" pos:column="13">/* [in] */</comment> <argument pos:line="979" pos:column="24">LPCWSTR codeBase</argument>,
            <comment type="block" pos:line="980" pos:column="13">/* [in] */</comment> <argument pos:line="980" pos:column="24">LPCWSTR assemblyName</argument>,
            <comment type="block" pos:line="981" pos:column="13">/* [in] */</comment> <argument pos:line="981" pos:column="24">LPCWSTR typeName</argument>,
            <comment type="block" pos:line="982" pos:column="13">/* [in] */</comment> <argument pos:line="982" pos:column="24">REFIID riid</argument>,
            <comment type="block" pos:line="983" pos:column="13">/* [out] */</comment> <argument pos:line="983" pos:column="25">void **ppvClassObject</argument>)</argument_list></macro> <op:operator pos:line="983" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="983" pos:column="50">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="987" pos:column="1">#<cpp:directive pos:line="987" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="987" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="989" pos:column="5">typedef <type><struct pos:line="989" pos:column="13">struct <name pos:line="989" pos:column="20">ILocalRegistry3Vtbl</name>
    <block pos:line="990" pos:column="5">{<public type="default" pos:line="990" pos:column="6">
        <function_decl><type><name pos:line="991" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="993" pos:column="9">HRESULT</name></type> ( <name pos:line="993" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="993" pos:column="37">*</type:modifier><name pos:line="993" pos:column="38">QueryInterface</name> )<parameter_list pos:line="993" pos:column="54">( 
            <param><decl><type><name pos:line="994" pos:column="13">ILocalRegistry3</name> <type:modifier pos:line="994" pos:column="29">*</type:modifier></type> <name pos:line="994" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="995" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="995" pos:column="24">REFIID</name></type> <name pos:line="995" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="996" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="997" pos:column="13">__RPC__deref_out</name>  <name pos:line="997" pos:column="31">void</name> <type:modifier pos:line="997" pos:column="36">*</type:modifier><type:modifier pos:line="997" pos:column="37">*</type:modifier></type><name pos:line="997" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="999" pos:column="9">ULONG</name></type> ( <name pos:line="999" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="999" pos:column="35">*</type:modifier><name pos:line="999" pos:column="36">AddRef</name> )<parameter_list pos:line="999" pos:column="44">( 
            <param><decl><type><name pos:line="1000" pos:column="13">ILocalRegistry3</name> <type:modifier pos:line="1000" pos:column="29">*</type:modifier></type> <name pos:line="1000" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1002" pos:column="9">ULONG</name></type> ( <name pos:line="1002" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1002" pos:column="35">*</type:modifier><name pos:line="1002" pos:column="36">Release</name> )<parameter_list pos:line="1002" pos:column="45">( 
            <param><decl><type><name pos:line="1003" pos:column="13">ILocalRegistry3</name> <type:modifier pos:line="1003" pos:column="29">*</type:modifier></type> <name pos:line="1003" pos:column="31">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1005" pos:column="9">HRESULT</name></type> ( <name pos:line="1005" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1005" pos:column="37">*</type:modifier><name pos:line="1005" pos:column="38">CreateInstance</name> )<parameter_list pos:line="1005" pos:column="54">( 
            <param><decl><type><name pos:line="1006" pos:column="13">ILocalRegistry3</name> <type:modifier pos:line="1006" pos:column="29">*</type:modifier></type> <name pos:line="1006" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="1007" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1007" pos:column="24">CLSID</name></type> <name pos:line="1007" pos:column="30">clsid</name></decl></param>,
            <comment type="block" pos:line="1008" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1008" pos:column="24">IUnknown</name> <type:modifier pos:line="1008" pos:column="33">*</type:modifier></type><name pos:line="1008" pos:column="34">punkOuter</name></decl></param>,
            <comment type="block" pos:line="1009" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1009" pos:column="24">REFIID</name></type> <name pos:line="1009" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1010" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1010" pos:column="24">DWORD</name></type> <name pos:line="1010" pos:column="30">dwFlags</name></decl></param>,
            <comment type="block" pos:line="1011" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1011" pos:column="25">void</name> <type:modifier pos:line="1011" pos:column="30">*</type:modifier><type:modifier pos:line="1011" pos:column="31">*</type:modifier></type><name pos:line="1011" pos:column="32">ppvObj</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1013" pos:column="9">HRESULT</name></type> ( <name pos:line="1013" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1013" pos:column="37">*</type:modifier><name pos:line="1013" pos:column="38">GetTypeLibOfClsid</name> )<parameter_list pos:line="1013" pos:column="57">( 
            <param><decl><type><name pos:line="1014" pos:column="13">ILocalRegistry3</name> <type:modifier pos:line="1014" pos:column="29">*</type:modifier></type> <name pos:line="1014" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="1015" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1015" pos:column="24">CLSID</name></type> <name pos:line="1015" pos:column="30">clsid</name></decl></param>,
            <comment type="block" pos:line="1016" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1016" pos:column="25">ITypeLib</name> <type:modifier pos:line="1016" pos:column="34">*</type:modifier><type:modifier pos:line="1016" pos:column="35">*</type:modifier></type><name pos:line="1016" pos:column="36">pptlib</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1018" pos:column="9">HRESULT</name></type> ( <name pos:line="1018" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1018" pos:column="37">*</type:modifier><name pos:line="1018" pos:column="38">GetClassObjectOfClsid</name> )<parameter_list pos:line="1018" pos:column="61">( 
            <param><decl><type><name pos:line="1019" pos:column="13">ILocalRegistry3</name> <type:modifier pos:line="1019" pos:column="29">*</type:modifier></type> <name pos:line="1019" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="1020" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1020" pos:column="24">REFCLSID</name></type> <name pos:line="1020" pos:column="33">clsid</name></decl></param>,
            <comment type="block" pos:line="1021" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1021" pos:column="24">DWORD</name></type> <name pos:line="1021" pos:column="30">dwFlags</name></decl></param>,
            <comment type="block" pos:line="1022" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1022" pos:column="24">LPVOID</name></type> <name pos:line="1022" pos:column="31">lpReserved</name></decl></param>,
            <comment type="block" pos:line="1023" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1023" pos:column="24">REFIID</name></type> <name pos:line="1023" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1024" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1024" pos:column="24">void</name> <type:modifier pos:line="1024" pos:column="29">*</type:modifier><type:modifier pos:line="1024" pos:column="30">*</type:modifier></type><name pos:line="1024" pos:column="31">ppvClassObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1026" pos:column="9">HRESULT</name></type> ( <name pos:line="1026" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1026" pos:column="37">*</type:modifier><name pos:line="1026" pos:column="38">GetLocalRegistryRoot</name> )<parameter_list pos:line="1026" pos:column="60">( 
            <param><decl><type><name pos:line="1027" pos:column="13">ILocalRegistry3</name> <type:modifier pos:line="1027" pos:column="29">*</type:modifier></type> <name pos:line="1027" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="1028" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1028" pos:column="25">BSTR</name> <type:modifier pos:line="1028" pos:column="30">*</type:modifier></type><name pos:line="1028" pos:column="31">pbstrRoot</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1030" pos:column="9">HRESULT</name></type> ( <name pos:line="1030" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1030" pos:column="37">*</type:modifier><name pos:line="1030" pos:column="38">CreateManagedInstance</name> )<parameter_list pos:line="1030" pos:column="61">( 
            <param><decl><type><name pos:line="1031" pos:column="13">ILocalRegistry3</name> <type:modifier pos:line="1031" pos:column="29">*</type:modifier></type> <name pos:line="1031" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="1032" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1032" pos:column="24">LPCWSTR</name></type> <name pos:line="1032" pos:column="32">codeBase</name></decl></param>,
            <comment type="block" pos:line="1033" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1033" pos:column="24">LPCWSTR</name></type> <name pos:line="1033" pos:column="32">assemblyName</name></decl></param>,
            <comment type="block" pos:line="1034" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1034" pos:column="24">LPCWSTR</name></type> <name pos:line="1034" pos:column="32">typeName</name></decl></param>,
            <comment type="block" pos:line="1035" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1035" pos:column="24">REFIID</name></type> <name pos:line="1035" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1036" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1036" pos:column="25">void</name> <type:modifier pos:line="1036" pos:column="30">*</type:modifier><type:modifier pos:line="1036" pos:column="31">*</type:modifier></type><name pos:line="1036" pos:column="32">ppvObj</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1038" pos:column="9">HRESULT</name></type> ( <name pos:line="1038" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1038" pos:column="37">*</type:modifier><name pos:line="1038" pos:column="38">GetClassObjectOfManagedClass</name> )<parameter_list pos:line="1038" pos:column="68">( 
            <param><decl><type><name pos:line="1039" pos:column="13">ILocalRegistry3</name> <type:modifier pos:line="1039" pos:column="29">*</type:modifier></type> <name pos:line="1039" pos:column="31">This</name></decl></param>,
            <comment type="block" pos:line="1040" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1040" pos:column="24">LPCWSTR</name></type> <name pos:line="1040" pos:column="32">codeBase</name></decl></param>,
            <comment type="block" pos:line="1041" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1041" pos:column="24">LPCWSTR</name></type> <name pos:line="1041" pos:column="32">assemblyName</name></decl></param>,
            <comment type="block" pos:line="1042" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1042" pos:column="24">LPCWSTR</name></type> <name pos:line="1042" pos:column="32">typeName</name></decl></param>,
            <comment type="block" pos:line="1043" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1043" pos:column="24">REFIID</name></type> <name pos:line="1043" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1044" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1044" pos:column="25">void</name> <type:modifier pos:line="1044" pos:column="30">*</type:modifier><type:modifier pos:line="1044" pos:column="31">*</type:modifier></type><name pos:line="1044" pos:column="32">ppvClassObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1046" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1047" pos:column="7">ILocalRegistry3Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1049" pos:column="5">interface</name></type> <name pos:line="1049" pos:column="15">ILocalRegistry3</name>
    <argument_list pos:line="1050" pos:column="5">{
        <argument><expr><name pos:line="1051" pos:column="9">CONST_VTBL</name> struct <name pos:line="1051" pos:column="27">ILocalRegistry3Vtbl</name> <op:operator pos:line="1051" pos:column="47">*</op:operator><name pos:line="1051" pos:column="48">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1056" pos:column="1">#<cpp:directive pos:line="1056" pos:column="2">ifdef</cpp:directive> <name pos:line="1056" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1059" pos:column="1">#<cpp:directive pos:line="1059" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1059" pos:column="9">ILocalRegistry3_QueryInterface</name><parameter_list pos:line="1059" pos:column="39">(<param><type><name pos:line="1059" pos:column="40">This</name></type></param>,<param><type><name pos:line="1059" pos:column="45">riid</name></type></param>,<param><type><name pos:line="1059" pos:column="50">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1060" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1062" pos:column="1">#<cpp:directive pos:line="1062" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1062" pos:column="9">ILocalRegistry3_AddRef</name><parameter_list pos:line="1062" pos:column="31">(<param><type><name pos:line="1062" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1063" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1065" pos:column="1">#<cpp:directive pos:line="1065" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1065" pos:column="9">ILocalRegistry3_Release</name><parameter_list pos:line="1065" pos:column="32">(<param><type><name pos:line="1065" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1066" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1069" pos:column="1">#<cpp:directive pos:line="1069" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1069" pos:column="9">ILocalRegistry3_CreateInstance</name><parameter_list pos:line="1069" pos:column="39">(<param><type><name pos:line="1069" pos:column="40">This</name></type></param>,<param><type><name pos:line="1069" pos:column="45">clsid</name></type></param>,<param><type><name pos:line="1069" pos:column="51">punkOuter</name></type></param>,<param><type><name pos:line="1069" pos:column="61">riid</name></type></param>,<param><type><name pos:line="1069" pos:column="66">dwFlags</name></type></param>,<param><type><name pos:line="1069" pos:column="74">ppvObj</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1070" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateInstance(This,clsid,punkOuter,riid,dwFlags,ppvObj) )</cpp:value></cpp:define> 

<cpp:define pos:line="1072" pos:column="1">#<cpp:directive pos:line="1072" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1072" pos:column="9">ILocalRegistry3_GetTypeLibOfClsid</name><parameter_list pos:line="1072" pos:column="42">(<param><type><name pos:line="1072" pos:column="43">This</name></type></param>,<param><type><name pos:line="1072" pos:column="48">clsid</name></type></param>,<param><type><name pos:line="1072" pos:column="54">pptlib</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1073" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeLibOfClsid(This,clsid,pptlib) )</cpp:value></cpp:define> 

<cpp:define pos:line="1075" pos:column="1">#<cpp:directive pos:line="1075" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1075" pos:column="9">ILocalRegistry3_GetClassObjectOfClsid</name><parameter_list pos:line="1075" pos:column="46">(<param><type><name pos:line="1075" pos:column="47">This</name></type></param>,<param><type><name pos:line="1075" pos:column="52">clsid</name></type></param>,<param><type><name pos:line="1075" pos:column="58">dwFlags</name></type></param>,<param><type><name pos:line="1075" pos:column="66">lpReserved</name></type></param>,<param><type><name pos:line="1075" pos:column="77">riid</name></type></param>,<param><type><name pos:line="1075" pos:column="82">ppvClassObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1076" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetClassObjectOfClsid(This,clsid,dwFlags,lpReserved,riid,ppvClassObject) )</cpp:value></cpp:define> 


<cpp:define pos:line="1079" pos:column="1">#<cpp:directive pos:line="1079" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1079" pos:column="9">ILocalRegistry3_GetLocalRegistryRoot</name><parameter_list pos:line="1079" pos:column="45">(<param><type><name pos:line="1079" pos:column="46">This</name></type></param>,<param><type><name pos:line="1079" pos:column="51">pbstrRoot</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1080" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLocalRegistryRoot(This,pbstrRoot) )</cpp:value></cpp:define> 


<cpp:define pos:line="1083" pos:column="1">#<cpp:directive pos:line="1083" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1083" pos:column="9">ILocalRegistry3_CreateManagedInstance</name><parameter_list pos:line="1083" pos:column="46">(<param><type><name pos:line="1083" pos:column="47">This</name></type></param>,<param><type><name pos:line="1083" pos:column="52">codeBase</name></type></param>,<param><type><name pos:line="1083" pos:column="61">assemblyName</name></type></param>,<param><type><name pos:line="1083" pos:column="74">typeName</name></type></param>,<param><type><name pos:line="1083" pos:column="83">riid</name></type></param>,<param><type><name pos:line="1083" pos:column="88">ppvObj</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1084" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateManagedInstance(This,codeBase,assemblyName,typeName,riid,ppvObj) )</cpp:value></cpp:define> 

<cpp:define pos:line="1086" pos:column="1">#<cpp:directive pos:line="1086" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1086" pos:column="9">ILocalRegistry3_GetClassObjectOfManagedClass</name><parameter_list pos:line="1086" pos:column="53">(<param><type><name pos:line="1086" pos:column="54">This</name></type></param>,<param><type><name pos:line="1086" pos:column="59">codeBase</name></type></param>,<param><type><name pos:line="1086" pos:column="68">assemblyName</name></type></param>,<param><type><name pos:line="1086" pos:column="81">typeName</name></type></param>,<param><type><name pos:line="1086" pos:column="90">riid</name></type></param>,<param><type><name pos:line="1086" pos:column="95">ppvClassObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1087" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetClassObjectOfManagedClass(This,codeBase,assemblyName,typeName,riid,ppvClassObject) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1089" pos:column="1">#<cpp:directive pos:line="1089" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1089" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1092" pos:column="1">#<cpp:directive pos:line="1092" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1092" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1097" pos:column="1">#<cpp:directive pos:line="1097" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1097" pos:column="9">/* __ILocalRegistry3_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="1100" pos:column="1">/* interface __MIDL_itf_objext_0000_0008 */</comment>
<comment type="block" pos:line="1101" pos:column="1">/* [local] */</comment> 

<cpp:define pos:line="1103" pos:column="1">#<cpp:directive pos:line="1103" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1103" pos:column="9">SID_SLocalRegistry</name></cpp:macro> <cpp:value pos:line="1103" pos:column="28">IID_ILocalRegistry</cpp:value></cpp:define>


<decl_stmt><decl><type><specifier pos:line="1106" pos:column="1">extern</specifier> <name pos:line="1106" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="1106" pos:column="22">__MIDL_itf_objext_0000_0008_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1107" pos:column="1">extern</specifier> <name pos:line="1107" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="1107" pos:column="22">__MIDL_itf_objext_0000_0008_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="1109" pos:column="1">#<cpp:directive pos:line="1109" pos:column="2">ifndef</cpp:directive> <name pos:line="1109" pos:column="9">__IUIElement_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1110" pos:column="1">#<cpp:directive pos:line="1110" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1110" pos:column="9">__IUIElement_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1112" pos:column="1">/* interface IUIElement */</comment>
<comment type="block" pos:line="1113" pos:column="1">/* [unique][uuid][local][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1116" pos:column="1">EXTERN_C</name> <specifier pos:line="1116" pos:column="10">const</specifier> <name pos:line="1116" pos:column="16">IID</name></type> <name pos:line="1116" pos:column="20">IID_IUIElement</name></decl>;</decl_stmt>

<cpp:if pos:line="1118" pos:column="1">#<cpp:directive pos:line="1118" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1118" pos:column="5">defined</name><argument_list pos:line="1118" pos:column="12">(<argument><expr><name pos:line="1118" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1118" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1118" pos:column="29">!</op:operator><call><name pos:line="1118" pos:column="30">defined</name><argument_list pos:line="1118" pos:column="37">(<argument><expr><name pos:line="1118" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1120" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1120" pos:column="19">(<argument pos:line="1120" pos:column="20">"759d0500-d979-11ce-84ec-00aa00614f3e"</argument>)</argument_list></macro>
    <label><name pos:line="1121" pos:column="5">IUIElement</name> :</label> <expr_stmt><expr pos:line="1121" pos:column="18">public <name pos:line="1121" pos:column="25">IUnknown</name>
    <block pos:line="1122" pos:column="5">{
    <expr pos:line="1123" pos:column="5">public<op:operator pos:line="1123" pos:column="11">:</op:operator>
        virtual <name pos:line="1124" pos:column="17">HRESULT</name> <name pos:line="1124" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1124" pos:column="43">Show</name><argument_list pos:line="1124" pos:column="47">( <argument><expr><name pos:line="1124" pos:column="49">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1124" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="1124" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="1126" pos:column="9">virtual <name pos:line="1126" pos:column="17">HRESULT</name> <name pos:line="1126" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1126" pos:column="43">Hide</name><argument_list pos:line="1126" pos:column="47">( <argument><expr><name pos:line="1126" pos:column="49">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1126" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="1126" pos:column="57">0</lit:literal></expr>;
        
        <expr pos:line="1128" pos:column="9">virtual <name pos:line="1128" pos:column="17">HRESULT</name> <name pos:line="1128" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1128" pos:column="43">IsVisible</name><argument_list pos:line="1128" pos:column="52">( <argument><expr><name pos:line="1128" pos:column="54">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1128" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="1128" pos:column="62">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1132" pos:column="1">#<cpp:directive pos:line="1132" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1132" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1134" pos:column="5">typedef <type><struct pos:line="1134" pos:column="13">struct <name pos:line="1134" pos:column="20">IUIElementVtbl</name>
    <block pos:line="1135" pos:column="5">{<public type="default" pos:line="1135" pos:column="6">
        <function_decl><type><name pos:line="1136" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1138" pos:column="9">HRESULT</name></type> ( <name pos:line="1138" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1138" pos:column="37">*</type:modifier><name pos:line="1138" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1138" pos:column="54">( 
            <param><decl><type><name pos:line="1139" pos:column="13">IUIElement</name> <type:modifier pos:line="1139" pos:column="24">*</type:modifier></type> <name pos:line="1139" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="1140" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1140" pos:column="24">REFIID</name></type> <name pos:line="1140" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1141" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1142" pos:column="13">__RPC__deref_out</name>  <name pos:line="1142" pos:column="31">void</name> <type:modifier pos:line="1142" pos:column="36">*</type:modifier><type:modifier pos:line="1142" pos:column="37">*</type:modifier></type><name pos:line="1142" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1144" pos:column="9">ULONG</name></type> ( <name pos:line="1144" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1144" pos:column="35">*</type:modifier><name pos:line="1144" pos:column="36">AddRef</name> )<parameter_list pos:line="1144" pos:column="44">( 
            <param><decl><type><name pos:line="1145" pos:column="13">IUIElement</name> <type:modifier pos:line="1145" pos:column="24">*</type:modifier></type> <name pos:line="1145" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1147" pos:column="9">ULONG</name></type> ( <name pos:line="1147" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1147" pos:column="35">*</type:modifier><name pos:line="1147" pos:column="36">Release</name> )<parameter_list pos:line="1147" pos:column="45">( 
            <param><decl><type><name pos:line="1148" pos:column="13">IUIElement</name> <type:modifier pos:line="1148" pos:column="24">*</type:modifier></type> <name pos:line="1148" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1150" pos:column="9">HRESULT</name></type> ( <name pos:line="1150" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1150" pos:column="37">*</type:modifier><name pos:line="1150" pos:column="38">Show</name> )<parameter_list pos:line="1150" pos:column="44">( 
            <param><decl><type><name pos:line="1151" pos:column="13">IUIElement</name> <type:modifier pos:line="1151" pos:column="24">*</type:modifier></type> <name pos:line="1151" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1153" pos:column="9">HRESULT</name></type> ( <name pos:line="1153" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1153" pos:column="37">*</type:modifier><name pos:line="1153" pos:column="38">Hide</name> )<parameter_list pos:line="1153" pos:column="44">( 
            <param><decl><type><name pos:line="1154" pos:column="13">IUIElement</name> <type:modifier pos:line="1154" pos:column="24">*</type:modifier></type> <name pos:line="1154" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1156" pos:column="9">HRESULT</name></type> ( <name pos:line="1156" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1156" pos:column="37">*</type:modifier><name pos:line="1156" pos:column="38">IsVisible</name> )<parameter_list pos:line="1156" pos:column="49">( 
            <param><decl><type><name pos:line="1157" pos:column="13">IUIElement</name> <type:modifier pos:line="1157" pos:column="24">*</type:modifier></type> <name pos:line="1157" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1159" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1160" pos:column="7">IUIElementVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1162" pos:column="5">interface</name></type> <name pos:line="1162" pos:column="15">IUIElement</name>
    <argument_list pos:line="1163" pos:column="5">{
        <argument><expr><name pos:line="1164" pos:column="9">CONST_VTBL</name> struct <name pos:line="1164" pos:column="27">IUIElementVtbl</name> <op:operator pos:line="1164" pos:column="42">*</op:operator><name pos:line="1164" pos:column="43">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1169" pos:column="1">#<cpp:directive pos:line="1169" pos:column="2">ifdef</cpp:directive> <name pos:line="1169" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1172" pos:column="1">#<cpp:directive pos:line="1172" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1172" pos:column="9">IUIElement_QueryInterface</name><parameter_list pos:line="1172" pos:column="34">(<param><type><name pos:line="1172" pos:column="35">This</name></type></param>,<param><type><name pos:line="1172" pos:column="40">riid</name></type></param>,<param><type><name pos:line="1172" pos:column="45">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1173" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1175" pos:column="1">#<cpp:directive pos:line="1175" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1175" pos:column="9">IUIElement_AddRef</name><parameter_list pos:line="1175" pos:column="26">(<param><type><name pos:line="1175" pos:column="27">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1176" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1178" pos:column="1">#<cpp:directive pos:line="1178" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1178" pos:column="9">IUIElement_Release</name><parameter_list pos:line="1178" pos:column="27">(<param><type><name pos:line="1178" pos:column="28">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1179" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1182" pos:column="1">#<cpp:directive pos:line="1182" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1182" pos:column="9">IUIElement_Show</name><parameter_list pos:line="1182" pos:column="24">(<param><type><name pos:line="1182" pos:column="25">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1183" pos:column="5">( (This)-&gt;lpVtbl -&gt; Show(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1185" pos:column="1">#<cpp:directive pos:line="1185" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1185" pos:column="9">IUIElement_Hide</name><parameter_list pos:line="1185" pos:column="24">(<param><type><name pos:line="1185" pos:column="25">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1186" pos:column="5">( (This)-&gt;lpVtbl -&gt; Hide(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1188" pos:column="1">#<cpp:directive pos:line="1188" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1188" pos:column="9">IUIElement_IsVisible</name><parameter_list pos:line="1188" pos:column="29">(<param><type><name pos:line="1188" pos:column="30">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1189" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsVisible(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1191" pos:column="1">#<cpp:directive pos:line="1191" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1191" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1194" pos:column="1">#<cpp:directive pos:line="1194" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1194" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1199" pos:column="1">#<cpp:directive pos:line="1199" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1199" pos:column="9">/* __IUIElement_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="1202" pos:column="1">/* interface __MIDL_itf_objext_0000_0009 */</comment>
<comment type="block" pos:line="1203" pos:column="1">/* [local] */</comment> 

<typedef pos:line="1205" pos:column="1">typedef <type><name pos:line="1205" pos:column="9">int</name></type> <name pos:line="1205" pos:column="13">PROPCAT</name>;</typedef>



<decl_stmt><decl><type><specifier pos:line="1209" pos:column="1">extern</specifier> <name pos:line="1209" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="1209" pos:column="22">__MIDL_itf_objext_0000_0009_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1210" pos:column="1">extern</specifier> <name pos:line="1210" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="1210" pos:column="22">__MIDL_itf_objext_0000_0009_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="1212" pos:column="1">#<cpp:directive pos:line="1212" pos:column="2">ifndef</cpp:directive> <name pos:line="1212" pos:column="9">__ICategorizeProperties_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1213" pos:column="1">#<cpp:directive pos:line="1213" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1213" pos:column="9">__ICategorizeProperties_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1215" pos:column="1">/* interface ICategorizeProperties */</comment>
<comment type="block" pos:line="1216" pos:column="1">/* [unique][uuid][local][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1219" pos:column="1">EXTERN_C</name> <specifier pos:line="1219" pos:column="10">const</specifier> <name pos:line="1219" pos:column="16">IID</name></type> <name pos:line="1219" pos:column="20">IID_ICategorizeProperties</name></decl>;</decl_stmt>

<cpp:if pos:line="1221" pos:column="1">#<cpp:directive pos:line="1221" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1221" pos:column="5">defined</name><argument_list pos:line="1221" pos:column="12">(<argument><expr><name pos:line="1221" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1221" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1221" pos:column="29">!</op:operator><call><name pos:line="1221" pos:column="30">defined</name><argument_list pos:line="1221" pos:column="37">(<argument><expr><name pos:line="1221" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1223" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1223" pos:column="19">(<argument pos:line="1223" pos:column="20">"4D07FC10-F931-11ce-B001-00AA006884E5"</argument>)</argument_list></macro>
    <label><name pos:line="1224" pos:column="5">ICategorizeProperties</name> :</label> <expr_stmt><expr pos:line="1224" pos:column="29">public <name pos:line="1224" pos:column="36">IUnknown</name>
    <block pos:line="1225" pos:column="5">{
    <expr pos:line="1226" pos:column="5">public<op:operator pos:line="1226" pos:column="11">:</op:operator>
        virtual <name pos:line="1227" pos:column="17">HRESULT</name> <name pos:line="1227" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1227" pos:column="43">MapPropertyToCategory</name><argument_list pos:line="1227" pos:column="64">( 
            <comment type="block" pos:line="1228" pos:column="13">/* [in] */</comment> <argument pos:line="1228" pos:column="24">DISPID dispid</argument>,
            <comment type="block" pos:line="1229" pos:column="13">/* [out] */</comment> <argument pos:line="1229" pos:column="25">PROPCAT *ppropcat</argument>)</argument_list></macro> <op:operator pos:line="1229" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="1229" pos:column="46">0</lit:literal></expr>;
        
        <expr pos:line="1231" pos:column="9">virtual <name pos:line="1231" pos:column="17">HRESULT</name> <name pos:line="1231" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1231" pos:column="43">GetCategoryName</name><argument_list pos:line="1231" pos:column="58">( 
            <comment type="block" pos:line="1232" pos:column="13">/* [in] */</comment> <argument pos:line="1232" pos:column="24">PROPCAT propcat</argument>,
            <comment type="block" pos:line="1233" pos:column="13">/* [in] */</comment> <argument pos:line="1233" pos:column="24">LCID lcid</argument>,
            <comment type="block" pos:line="1234" pos:column="13">/* [out] */</comment> <argument pos:line="1234" pos:column="25">BSTR *pbstrName</argument>)</argument_list></macro> <op:operator pos:line="1234" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="1234" pos:column="44">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1238" pos:column="1">#<cpp:directive pos:line="1238" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1238" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1240" pos:column="5">typedef <type><struct pos:line="1240" pos:column="13">struct <name pos:line="1240" pos:column="20">ICategorizePropertiesVtbl</name>
    <block pos:line="1241" pos:column="5">{<public type="default" pos:line="1241" pos:column="6">
        <function_decl><type><name pos:line="1242" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1244" pos:column="9">HRESULT</name></type> ( <name pos:line="1244" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1244" pos:column="37">*</type:modifier><name pos:line="1244" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1244" pos:column="54">( 
            <param><decl><type><name pos:line="1245" pos:column="13">ICategorizeProperties</name> <type:modifier pos:line="1245" pos:column="35">*</type:modifier></type> <name pos:line="1245" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1246" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1246" pos:column="24">REFIID</name></type> <name pos:line="1246" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1247" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1248" pos:column="13">__RPC__deref_out</name>  <name pos:line="1248" pos:column="31">void</name> <type:modifier pos:line="1248" pos:column="36">*</type:modifier><type:modifier pos:line="1248" pos:column="37">*</type:modifier></type><name pos:line="1248" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1250" pos:column="9">ULONG</name></type> ( <name pos:line="1250" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1250" pos:column="35">*</type:modifier><name pos:line="1250" pos:column="36">AddRef</name> )<parameter_list pos:line="1250" pos:column="44">( 
            <param><decl><type><name pos:line="1251" pos:column="13">ICategorizeProperties</name> <type:modifier pos:line="1251" pos:column="35">*</type:modifier></type> <name pos:line="1251" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1253" pos:column="9">ULONG</name></type> ( <name pos:line="1253" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1253" pos:column="35">*</type:modifier><name pos:line="1253" pos:column="36">Release</name> )<parameter_list pos:line="1253" pos:column="45">( 
            <param><decl><type><name pos:line="1254" pos:column="13">ICategorizeProperties</name> <type:modifier pos:line="1254" pos:column="35">*</type:modifier></type> <name pos:line="1254" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1256" pos:column="9">HRESULT</name></type> ( <name pos:line="1256" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1256" pos:column="37">*</type:modifier><name pos:line="1256" pos:column="38">MapPropertyToCategory</name> )<parameter_list pos:line="1256" pos:column="61">( 
            <param><decl><type><name pos:line="1257" pos:column="13">ICategorizeProperties</name> <type:modifier pos:line="1257" pos:column="35">*</type:modifier></type> <name pos:line="1257" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1258" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1258" pos:column="24">DISPID</name></type> <name pos:line="1258" pos:column="31">dispid</name></decl></param>,
            <comment type="block" pos:line="1259" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1259" pos:column="25">PROPCAT</name> <type:modifier pos:line="1259" pos:column="33">*</type:modifier></type><name pos:line="1259" pos:column="34">ppropcat</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1261" pos:column="9">HRESULT</name></type> ( <name pos:line="1261" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1261" pos:column="37">*</type:modifier><name pos:line="1261" pos:column="38">GetCategoryName</name> )<parameter_list pos:line="1261" pos:column="55">( 
            <param><decl><type><name pos:line="1262" pos:column="13">ICategorizeProperties</name> <type:modifier pos:line="1262" pos:column="35">*</type:modifier></type> <name pos:line="1262" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1263" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1263" pos:column="24">PROPCAT</name></type> <name pos:line="1263" pos:column="32">propcat</name></decl></param>,
            <comment type="block" pos:line="1264" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1264" pos:column="24">LCID</name></type> <name pos:line="1264" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="1265" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1265" pos:column="25">BSTR</name> <type:modifier pos:line="1265" pos:column="30">*</type:modifier></type><name pos:line="1265" pos:column="31">pbstrName</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1267" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1268" pos:column="7">ICategorizePropertiesVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1270" pos:column="5">interface</name></type> <name pos:line="1270" pos:column="15">ICategorizeProperties</name>
    <argument_list pos:line="1271" pos:column="5">{
        <argument><expr><name pos:line="1272" pos:column="9">CONST_VTBL</name> struct <name pos:line="1272" pos:column="27">ICategorizePropertiesVtbl</name> <op:operator pos:line="1272" pos:column="53">*</op:operator><name pos:line="1272" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1277" pos:column="1">#<cpp:directive pos:line="1277" pos:column="2">ifdef</cpp:directive> <name pos:line="1277" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1280" pos:column="1">#<cpp:directive pos:line="1280" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1280" pos:column="9">ICategorizeProperties_QueryInterface</name><parameter_list pos:line="1280" pos:column="45">(<param><type><name pos:line="1280" pos:column="46">This</name></type></param>,<param><type><name pos:line="1280" pos:column="51">riid</name></type></param>,<param><type><name pos:line="1280" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1281" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1283" pos:column="1">#<cpp:directive pos:line="1283" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1283" pos:column="9">ICategorizeProperties_AddRef</name><parameter_list pos:line="1283" pos:column="37">(<param><type><name pos:line="1283" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1284" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1286" pos:column="1">#<cpp:directive pos:line="1286" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1286" pos:column="9">ICategorizeProperties_Release</name><parameter_list pos:line="1286" pos:column="38">(<param><type><name pos:line="1286" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1287" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1290" pos:column="1">#<cpp:directive pos:line="1290" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1290" pos:column="9">ICategorizeProperties_MapPropertyToCategory</name><parameter_list pos:line="1290" pos:column="52">(<param><type><name pos:line="1290" pos:column="53">This</name></type></param>,<param><type><name pos:line="1290" pos:column="58">dispid</name></type></param>,<param><type><name pos:line="1290" pos:column="65">ppropcat</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1291" pos:column="5">( (This)-&gt;lpVtbl -&gt; MapPropertyToCategory(This,dispid,ppropcat) )</cpp:value></cpp:define> 

<cpp:define pos:line="1293" pos:column="1">#<cpp:directive pos:line="1293" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1293" pos:column="9">ICategorizeProperties_GetCategoryName</name><parameter_list pos:line="1293" pos:column="46">(<param><type><name pos:line="1293" pos:column="47">This</name></type></param>,<param><type><name pos:line="1293" pos:column="52">propcat</name></type></param>,<param><type><name pos:line="1293" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="1293" pos:column="65">pbstrName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1294" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetCategoryName(This,propcat,lcid,pbstrName) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1296" pos:column="1">#<cpp:directive pos:line="1296" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1296" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1299" pos:column="1">#<cpp:directive pos:line="1299" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1299" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1304" pos:column="1">#<cpp:directive pos:line="1304" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1304" pos:column="9">/* __ICategorizeProperties_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="1307" pos:column="1">/* interface __MIDL_itf_objext_0000_0010 */</comment>
<comment type="block" pos:line="1308" pos:column="1">/* [local] */</comment> 

<typedef pos:line="1310" pos:column="1">typedef <type><name pos:line="1310" pos:column="9">ICategorizeProperties</name> <type:modifier pos:line="1310" pos:column="31">*</type:modifier></type><name pos:line="1310" pos:column="32">LPCATEGORIZEPROPERTIES</name>;</typedef>

<cpp:define pos:line="1312" pos:column="1">#<cpp:directive pos:line="1312" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1312" pos:column="9">PROPCAT_Nil</name></cpp:macro> <cpp:value pos:line="1312" pos:column="21">-1</cpp:value></cpp:define>
<cpp:define pos:line="1313" pos:column="1">#<cpp:directive pos:line="1313" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1313" pos:column="9">PROPCAT_Misc</name></cpp:macro> <cpp:value pos:line="1313" pos:column="22">-2</cpp:value></cpp:define>
<cpp:define pos:line="1314" pos:column="1">#<cpp:directive pos:line="1314" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1314" pos:column="9">PROPCAT_Font</name></cpp:macro> <cpp:value pos:line="1314" pos:column="22">-3</cpp:value></cpp:define>
<cpp:define pos:line="1315" pos:column="1">#<cpp:directive pos:line="1315" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1315" pos:column="9">PROPCAT_Position</name></cpp:macro> <cpp:value pos:line="1315" pos:column="26">-4</cpp:value></cpp:define>
<cpp:define pos:line="1316" pos:column="1">#<cpp:directive pos:line="1316" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1316" pos:column="9">PROPCAT_Appearance</name></cpp:macro> <cpp:value pos:line="1316" pos:column="28">-5</cpp:value></cpp:define>
<cpp:define pos:line="1317" pos:column="1">#<cpp:directive pos:line="1317" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1317" pos:column="9">PROPCAT_Behavior</name></cpp:macro> <cpp:value pos:line="1317" pos:column="26">-6</cpp:value></cpp:define>
<cpp:define pos:line="1318" pos:column="1">#<cpp:directive pos:line="1318" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1318" pos:column="9">PROPCAT_Data</name></cpp:macro> <cpp:value pos:line="1318" pos:column="22">-7</cpp:value></cpp:define>
<cpp:define pos:line="1319" pos:column="1">#<cpp:directive pos:line="1319" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1319" pos:column="9">PROPCAT_List</name></cpp:macro> <cpp:value pos:line="1319" pos:column="22">-8</cpp:value></cpp:define>
<cpp:define pos:line="1320" pos:column="1">#<cpp:directive pos:line="1320" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1320" pos:column="9">PROPCAT_Text</name></cpp:macro> <cpp:value pos:line="1320" pos:column="22">-9</cpp:value></cpp:define>
<cpp:define pos:line="1321" pos:column="1">#<cpp:directive pos:line="1321" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1321" pos:column="9">PROPCAT_Scale</name></cpp:macro> <cpp:value pos:line="1321" pos:column="23">-10</cpp:value></cpp:define>
<cpp:define pos:line="1322" pos:column="1">#<cpp:directive pos:line="1322" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1322" pos:column="9">PROPCAT_DDE</name></cpp:macro> <cpp:value pos:line="1322" pos:column="21">-11</cpp:value></cpp:define>
<cpp:define pos:line="1323" pos:column="1">#<cpp:directive pos:line="1323" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1323" pos:column="9">HELPINFO_WHATS_THIS_MODE_ON</name></cpp:macro>     <cpp:value pos:line="1323" pos:column="41">1</cpp:value></cpp:define>


<decl_stmt><decl><type><specifier pos:line="1326" pos:column="1">extern</specifier> <name pos:line="1326" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="1326" pos:column="22">__MIDL_itf_objext_0000_0010_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1327" pos:column="1">extern</specifier> <name pos:line="1327" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="1327" pos:column="22">__MIDL_itf_objext_0000_0010_v0_0_s_ifspec</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="1329" pos:column="1">#<cpp:directive pos:line="1329" pos:column="2">ifndef</cpp:directive> <name pos:line="1329" pos:column="9">__IHelp_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1330" pos:column="1">#<cpp:directive pos:line="1330" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1330" pos:column="9">__IHelp_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1332" pos:column="1">/* interface IHelp */</comment>
<comment type="block" pos:line="1333" pos:column="1">/* [unique][uuid][local][object] */</comment> 


<decl_stmt><decl><type><name pos:line="1336" pos:column="1">EXTERN_C</name> <specifier pos:line="1336" pos:column="10">const</specifier> <name pos:line="1336" pos:column="16">IID</name></type> <name pos:line="1336" pos:column="20">IID_IHelp</name></decl>;</decl_stmt>

<cpp:if pos:line="1338" pos:column="1">#<cpp:directive pos:line="1338" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1338" pos:column="5">defined</name><argument_list pos:line="1338" pos:column="12">(<argument><expr><name pos:line="1338" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1338" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1338" pos:column="29">!</op:operator><call><name pos:line="1338" pos:column="30">defined</name><argument_list pos:line="1338" pos:column="37">(<argument><expr><name pos:line="1338" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1340" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1340" pos:column="19">(<argument pos:line="1340" pos:column="20">"6d5140c8-7436-11ce-8034-00aa006009fa"</argument>)</argument_list></macro>
    <label><name pos:line="1341" pos:column="5">IHelp</name> :</label> <expr_stmt><expr pos:line="1341" pos:column="13">public <name pos:line="1341" pos:column="20">IUnknown</name>
    <block pos:line="1342" pos:column="5">{
    <expr pos:line="1343" pos:column="5">public<op:operator pos:line="1343" pos:column="11">:</op:operator>
        virtual <name pos:line="1344" pos:column="17">HRESULT</name> <name pos:line="1344" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1344" pos:column="43">GetHelpFile</name><argument_list pos:line="1344" pos:column="54">( 
            <comment type="block" pos:line="1345" pos:column="13">/* [out] */</comment> <argument><expr><name pos:line="1345" pos:column="25">BSTR</name> <op:operator pos:line="1345" pos:column="30">*</op:operator><name pos:line="1345" pos:column="31">pbstr</name></expr></argument>)</argument_list></call> <op:operator pos:line="1345" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="1345" pos:column="40">0</lit:literal></expr>;
        
        <expr pos:line="1347" pos:column="9">virtual <name pos:line="1347" pos:column="17">HRESULT</name> <name pos:line="1347" pos:column="25">STDMETHODCALLTYPE</name> <call><name pos:line="1347" pos:column="43">GetHelpInfo</name><argument_list pos:line="1347" pos:column="54">( 
            <comment type="block" pos:line="1348" pos:column="13">/* [out] */</comment> <argument><expr><name pos:line="1348" pos:column="25">DWORD</name> <op:operator pos:line="1348" pos:column="31">*</op:operator><name pos:line="1348" pos:column="32">pdwHelpInfo</name></expr></argument>)</argument_list></call> <op:operator pos:line="1348" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="1348" pos:column="47">0</lit:literal></expr>;
        
        <expr pos:line="1350" pos:column="9">virtual <name pos:line="1350" pos:column="17">HRESULT</name> <name pos:line="1350" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="1350" pos:column="43">ShowHelp</name><argument_list pos:line="1350" pos:column="51">( 
            <comment type="block" pos:line="1351" pos:column="13">/* [in] */</comment> <argument pos:line="1351" pos:column="24">LPOLESTR szHelp</argument>,
            <comment type="block" pos:line="1352" pos:column="13">/* [in] */</comment> <argument pos:line="1352" pos:column="24">UINT fuCommand</argument>,
            <comment type="block" pos:line="1353" pos:column="13">/* [in] */</comment> <argument pos:line="1353" pos:column="24">DWORD dwHelpContext</argument>)</argument_list></macro> <op:operator pos:line="1353" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="1353" pos:column="47">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1357" pos:column="1">#<cpp:directive pos:line="1357" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1357" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1359" pos:column="5">typedef <type><struct pos:line="1359" pos:column="13">struct <name pos:line="1359" pos:column="20">IHelpVtbl</name>
    <block pos:line="1360" pos:column="5">{<public type="default" pos:line="1360" pos:column="6">
        <function_decl><type><name pos:line="1361" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1363" pos:column="9">HRESULT</name></type> ( <name pos:line="1363" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1363" pos:column="37">*</type:modifier><name pos:line="1363" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1363" pos:column="54">( 
            <param><decl><type><name pos:line="1364" pos:column="13">IHelp</name> <type:modifier pos:line="1364" pos:column="19">*</type:modifier></type> <name pos:line="1364" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="1365" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1365" pos:column="24">REFIID</name></type> <name pos:line="1365" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1366" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1367" pos:column="13">__RPC__deref_out</name>  <name pos:line="1367" pos:column="31">void</name> <type:modifier pos:line="1367" pos:column="36">*</type:modifier><type:modifier pos:line="1367" pos:column="37">*</type:modifier></type><name pos:line="1367" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1369" pos:column="9">ULONG</name></type> ( <name pos:line="1369" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1369" pos:column="35">*</type:modifier><name pos:line="1369" pos:column="36">AddRef</name> )<parameter_list pos:line="1369" pos:column="44">( 
            <param><decl><type><name pos:line="1370" pos:column="13">IHelp</name> <type:modifier pos:line="1370" pos:column="19">*</type:modifier></type> <name pos:line="1370" pos:column="21">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1372" pos:column="9">ULONG</name></type> ( <name pos:line="1372" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1372" pos:column="35">*</type:modifier><name pos:line="1372" pos:column="36">Release</name> )<parameter_list pos:line="1372" pos:column="45">( 
            <param><decl><type><name pos:line="1373" pos:column="13">IHelp</name> <type:modifier pos:line="1373" pos:column="19">*</type:modifier></type> <name pos:line="1373" pos:column="21">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1375" pos:column="9">HRESULT</name></type> ( <name pos:line="1375" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1375" pos:column="37">*</type:modifier><name pos:line="1375" pos:column="38">GetHelpFile</name> )<parameter_list pos:line="1375" pos:column="51">( 
            <param><decl><type><name pos:line="1376" pos:column="13">IHelp</name> <type:modifier pos:line="1376" pos:column="19">*</type:modifier></type> <name pos:line="1376" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="1377" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1377" pos:column="25">BSTR</name> <type:modifier pos:line="1377" pos:column="30">*</type:modifier></type><name pos:line="1377" pos:column="31">pbstr</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1379" pos:column="9">HRESULT</name></type> ( <name pos:line="1379" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1379" pos:column="37">*</type:modifier><name pos:line="1379" pos:column="38">GetHelpInfo</name> )<parameter_list pos:line="1379" pos:column="51">( 
            <param><decl><type><name pos:line="1380" pos:column="13">IHelp</name> <type:modifier pos:line="1380" pos:column="19">*</type:modifier></type> <name pos:line="1380" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="1381" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1381" pos:column="25">DWORD</name> <type:modifier pos:line="1381" pos:column="31">*</type:modifier></type><name pos:line="1381" pos:column="32">pdwHelpInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1383" pos:column="9">HRESULT</name></type> ( <name pos:line="1383" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1383" pos:column="37">*</type:modifier><name pos:line="1383" pos:column="38">ShowHelp</name> )<parameter_list pos:line="1383" pos:column="48">( 
            <param><decl><type><name pos:line="1384" pos:column="13">IHelp</name> <type:modifier pos:line="1384" pos:column="19">*</type:modifier></type> <name pos:line="1384" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="1385" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1385" pos:column="24">LPOLESTR</name></type> <name pos:line="1385" pos:column="33">szHelp</name></decl></param>,
            <comment type="block" pos:line="1386" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1386" pos:column="24">UINT</name></type> <name pos:line="1386" pos:column="29">fuCommand</name></decl></param>,
            <comment type="block" pos:line="1387" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1387" pos:column="24">DWORD</name></type> <name pos:line="1387" pos:column="30">dwHelpContext</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1389" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1390" pos:column="7">IHelpVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1392" pos:column="5">interface</name></type> <name pos:line="1392" pos:column="15">IHelp</name>
    <argument_list pos:line="1393" pos:column="5">{
        <argument><expr><name pos:line="1394" pos:column="9">CONST_VTBL</name> struct <name pos:line="1394" pos:column="27">IHelpVtbl</name> <op:operator pos:line="1394" pos:column="37">*</op:operator><name pos:line="1394" pos:column="38">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1399" pos:column="1">#<cpp:directive pos:line="1399" pos:column="2">ifdef</cpp:directive> <name pos:line="1399" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1402" pos:column="1">#<cpp:directive pos:line="1402" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1402" pos:column="9">IHelp_QueryInterface</name><parameter_list pos:line="1402" pos:column="29">(<param><type><name pos:line="1402" pos:column="30">This</name></type></param>,<param><type><name pos:line="1402" pos:column="35">riid</name></type></param>,<param><type><name pos:line="1402" pos:column="40">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1403" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1405" pos:column="1">#<cpp:directive pos:line="1405" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1405" pos:column="9">IHelp_AddRef</name><parameter_list pos:line="1405" pos:column="21">(<param><type><name pos:line="1405" pos:column="22">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1406" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1408" pos:column="1">#<cpp:directive pos:line="1408" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1408" pos:column="9">IHelp_Release</name><parameter_list pos:line="1408" pos:column="22">(<param><type><name pos:line="1408" pos:column="23">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1409" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1412" pos:column="1">#<cpp:directive pos:line="1412" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1412" pos:column="9">IHelp_GetHelpFile</name><parameter_list pos:line="1412" pos:column="26">(<param><type><name pos:line="1412" pos:column="27">This</name></type></param>,<param><type><name pos:line="1412" pos:column="32">pbstr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1413" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHelpFile(This,pbstr) )</cpp:value></cpp:define> 

<cpp:define pos:line="1415" pos:column="1">#<cpp:directive pos:line="1415" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1415" pos:column="9">IHelp_GetHelpInfo</name><parameter_list pos:line="1415" pos:column="26">(<param><type><name pos:line="1415" pos:column="27">This</name></type></param>,<param><type><name pos:line="1415" pos:column="32">pdwHelpInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1416" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetHelpInfo(This,pdwHelpInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="1418" pos:column="1">#<cpp:directive pos:line="1418" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1418" pos:column="9">IHelp_ShowHelp</name><parameter_list pos:line="1418" pos:column="23">(<param><type><name pos:line="1418" pos:column="24">This</name></type></param>,<param><type><name pos:line="1418" pos:column="29">szHelp</name></type></param>,<param><type><name pos:line="1418" pos:column="36">fuCommand</name></type></param>,<param><type><name pos:line="1418" pos:column="46">dwHelpContext</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1419" pos:column="5">( (This)-&gt;lpVtbl -&gt; ShowHelp(This,szHelp,fuCommand,dwHelpContext) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1421" pos:column="1">#<cpp:directive pos:line="1421" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1421" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1424" pos:column="1">#<cpp:directive pos:line="1424" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1424" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1429" pos:column="1">#<cpp:directive pos:line="1429" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1429" pos:column="9">/* __IHelp_INTERFACE_DEFINED__ */</comment>


<comment type="block" pos:line="1432" pos:column="1">/* interface __MIDL_itf_objext_0000_0011 */</comment>
<comment type="block" pos:line="1433" pos:column="1">/* [local] */</comment> 

<decl_stmt><decl><type><name pos:line="1435" pos:column="1">EXTERN_C</name> <specifier pos:line="1435" pos:column="10">const</specifier> <name pos:line="1435" pos:column="16">IID</name></type> <name pos:line="1435" pos:column="20">SID_SHelp</name></decl>;</decl_stmt>
<cpp:endif pos:line="1436" pos:column="1">#<cpp:directive pos:line="1436" pos:column="2">endif</cpp:directive></cpp:endif>


<decl_stmt><decl><type><specifier pos:line="1439" pos:column="1">extern</specifier> <name pos:line="1439" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="1439" pos:column="22">__MIDL_itf_objext_0000_0011_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="1440" pos:column="1">extern</specifier> <name pos:line="1440" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="1440" pos:column="22">__MIDL_itf_objext_0000_0011_v0_0_s_ifspec</name></decl>;</decl_stmt>

<comment type="block" pos:line="1442" pos:column="1">/* Additional Prototypes for ALL interfaces */</comment>

<comment type="block" pos:line="1444" pos:column="1">/* end of Additional Prototypes */</comment>

<cpp:ifdef pos:line="1446" pos:column="1">#<cpp:directive pos:line="1446" pos:column="2">ifdef</cpp:directive> <name pos:line="1446" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif pos:line="1448" pos:column="1">#<cpp:directive pos:line="1448" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="1450" pos:column="1">#<cpp:directive pos:line="1450" pos:column="2">endif</cpp:directive></cpp:endif>


</unit>
