<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\UI\UI\TextBlockEx.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Windows</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Windows</name><op:operator pos:line="6" pos:column="21">.</op:operator><name pos:line="6" pos:column="22">Controls</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Windows</name><op:operator pos:line="7" pos:column="21">.</op:operator><name pos:line="7" pos:column="22">Data</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">System</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">Windows</name><op:operator pos:line="8" pos:column="21">.</op:operator><name pos:line="8" pos:column="22">Documents</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">System</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">Windows</name><op:operator pos:line="9" pos:column="21">.</op:operator><name pos:line="9" pos:column="22">Input</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">System</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">Windows</name><op:operator pos:line="10" pos:column="21">.</op:operator><name pos:line="10" pos:column="22">Media</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">System</name><op:operator pos:line="11" pos:column="13">.</op:operator><name pos:line="11" pos:column="14">Windows</name><op:operator pos:line="11" pos:column="21">.</op:operator><name pos:line="11" pos:column="22">Media</name><op:operator pos:line="11" pos:column="27">.</op:operator><name pos:line="11" pos:column="28">Imaging</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">System</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">Windows</name><op:operator pos:line="12" pos:column="21">.</op:operator><name pos:line="12" pos:column="22">Navigation</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Windows</name><op:operator pos:line="13" pos:column="21">.</op:operator><name pos:line="13" pos:column="22">Shapes</name></name>;</using>

<namespace pos:line="15" pos:column="1">namespace <name><name pos:line="15" pos:column="11">Sando</name><op:operator pos:line="15" pos:column="16">.</op:operator><name pos:line="15" pos:column="17">UI</name></name> <block pos:line="15" pos:column="20">{
    <comment type="line" pos:line="16" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="17" pos:column="5">/// Follow steps 1a or 1b and then 2 to use this custom control in a XAML file.</comment>
    <comment type="line" pos:line="18" pos:column="5">///</comment>
    <comment type="line" pos:line="19" pos:column="5">/// Step 1a) Using this custom control in a XAML file that exists in the current project.</comment>
    <comment type="line" pos:line="20" pos:column="5">/// Add this XmlNamespace attribute to the root element of the markup file where it is </comment>
    <comment type="line" pos:line="21" pos:column="5">/// to be used:</comment>
    <comment type="line" pos:line="22" pos:column="5">///</comment>
    <comment type="line" pos:line="23" pos:column="5">///     xmlns:MyNamespace="clr-namespace:Sando.UI.View"</comment>
    <comment type="line" pos:line="24" pos:column="5">///</comment>
    <comment type="line" pos:line="25" pos:column="5">///</comment>
    <comment type="line" pos:line="26" pos:column="5">/// Step 1b) Using this custom control in a XAML file that exists in a different project.</comment>
    <comment type="line" pos:line="27" pos:column="5">/// Add this XmlNamespace attribute to the root element of the markup file where it is </comment>
    <comment type="line" pos:line="28" pos:column="5">/// to be used:</comment>
    <comment type="line" pos:line="29" pos:column="5">///</comment>
    <comment type="line" pos:line="30" pos:column="5">///     xmlns:MyNamespace="clr-namespace:Sando.UI.View;assembly=Sando.UI.View"</comment>
    <comment type="line" pos:line="31" pos:column="5">///</comment>
    <comment type="line" pos:line="32" pos:column="5">/// You will also need to add a project reference from the project where the XAML file lives</comment>
    <comment type="line" pos:line="33" pos:column="5">/// to this project and Rebuild to avoid compilation errors:</comment>
    <comment type="line" pos:line="34" pos:column="5">///</comment>
    <comment type="line" pos:line="35" pos:column="5">///     Right click on the target project in the Solution Explorer and</comment>
    <comment type="line" pos:line="36" pos:column="5">///     "Add Reference"-&gt;"Projects"-&gt;[Browse to and select this project]</comment>
    <comment type="line" pos:line="37" pos:column="5">///</comment>
    <comment type="line" pos:line="38" pos:column="5">///</comment>
    <comment type="line" pos:line="39" pos:column="5">/// Step 2)</comment>
    <comment type="line" pos:line="40" pos:column="5">/// Go ahead and use your control in the XAML file.</comment>
    <comment type="line" pos:line="41" pos:column="5">///</comment>
    <comment type="line" pos:line="42" pos:column="5">///     &lt;MyNamespace:CustomControl1/&gt;</comment>
    <comment type="line" pos:line="43" pos:column="5">///</comment>
    <comment type="line" pos:line="44" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="45" pos:column="5">public</specifier> class <name pos:line="45" pos:column="18">TextBlockEx</name> <super pos:line="45" pos:column="30">: <name pos:line="45" pos:column="32">TextBlock</name></super> <block pos:line="45" pos:column="42">{
        <constructor><specifier pos:line="46" pos:column="9">static</specifier> <name pos:line="46" pos:column="16">TextBlockEx</name><parameter_list pos:line="46" pos:column="27">()</parameter_list> <block pos:line="46" pos:column="30">{
            <expr_stmt><expr><call><name><name pos:line="47" pos:column="13">DefaultStyleKeyProperty</name><op:operator pos:line="47" pos:column="36">.</op:operator><name pos:line="47" pos:column="37">OverrideMetadata</name></name><argument_list pos:line="47" pos:column="53">(<argument><expr><call><name pos:line="47" pos:column="54">typeof</name><argument_list pos:line="47" pos:column="60">(<argument><expr><name pos:line="47" pos:column="61">TextBlockEx</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="47" pos:column="75">new</op:operator> <call><name pos:line="47" pos:column="79">FrameworkPropertyMetadata</name><argument_list pos:line="47" pos:column="104">(<argument><expr><call><name pos:line="47" pos:column="105">typeof</name><argument_list pos:line="47" pos:column="111">(<argument><expr><name pos:line="47" pos:column="112">TextBlockEx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="50" pos:column="9">public</specifier> <specifier pos:line="50" pos:column="16">static</specifier> <name pos:line="50" pos:column="23">Inline</name></type> <name pos:line="50" pos:column="30">GetFormattedText</name><parameter_list pos:line="50" pos:column="46">(<param><decl><type><name pos:line="50" pos:column="47">DependencyObject</name></type> <name pos:line="50" pos:column="64">obj</name></decl></param>)</parameter_list> <block pos:line="50" pos:column="69">{
            <return pos:line="51" pos:column="13">return <expr><op:operator pos:line="51" pos:column="20">(</op:operator><name pos:line="51" pos:column="21">Inline</name><op:operator pos:line="51" pos:column="27">)</op:operator><call><name><name pos:line="51" pos:column="28">obj</name><op:operator pos:line="51" pos:column="31">.</op:operator><name pos:line="51" pos:column="32">GetValue</name></name><argument_list pos:line="51" pos:column="40">(<argument><expr><name pos:line="51" pos:column="41">FormattedTextProperty</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="54" pos:column="9">public</specifier> <specifier pos:line="54" pos:column="16">static</specifier> <name pos:line="54" pos:column="23">void</name></type> <name pos:line="54" pos:column="28">SetFormattedText</name><parameter_list pos:line="54" pos:column="44">(<param><decl><type><name pos:line="54" pos:column="45">DependencyObject</name></type> <name pos:line="54" pos:column="62">obj</name></decl></param>, <param><decl><type><name pos:line="54" pos:column="67">Inline</name></type> <name pos:line="54" pos:column="74">value</name></decl></param>)</parameter_list> <block pos:line="54" pos:column="81">{
            <expr_stmt><expr><call><name><name pos:line="55" pos:column="13">obj</name><op:operator pos:line="55" pos:column="16">.</op:operator><name pos:line="55" pos:column="17">SetValue</name></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name pos:line="55" pos:column="26">FormattedTextProperty</name></expr></argument>, <argument><expr><name pos:line="55" pos:column="49">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="58" pos:column="9">public</specifier> <specifier pos:line="58" pos:column="16">static</specifier> <specifier pos:line="58" pos:column="23">readonly</specifier> <name pos:line="58" pos:column="32">DependencyProperty</name></type> <name pos:line="58" pos:column="51">FormattedTextProperty</name> <init pos:line="58" pos:column="73">=
            <expr><call><name><name pos:line="59" pos:column="13">DependencyProperty</name><op:operator pos:line="59" pos:column="31">.</op:operator><name pos:line="59" pos:column="32">RegisterAttached</name></name><argument_list pos:line="59" pos:column="48">(
                <argument><expr><lit:literal type="string" pos:line="60" pos:column="17">"FormattedText"</lit:literal></expr></argument>,
                <argument><expr><call><name pos:line="61" pos:column="17">typeof</name><argument_list pos:line="61" pos:column="23">(<argument><expr><name pos:line="61" pos:column="24">Inline</name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><call><name pos:line="62" pos:column="17">typeof</name><argument_list pos:line="62" pos:column="23">(<argument><expr><name pos:line="62" pos:column="24">TextBlockEx</name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><op:operator pos:line="63" pos:column="17">new</op:operator> <call><name pos:line="63" pos:column="21">PropertyMetadata</name><argument_list pos:line="63" pos:column="37">(<argument><expr><name pos:line="63" pos:column="38">null</name></expr></argument>, <argument><expr><name pos:line="63" pos:column="44">OnFormattedTextChanged</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="65" pos:column="9">private</specifier> <specifier pos:line="65" pos:column="17">static</specifier> <name pos:line="65" pos:column="24">void</name></type> <name pos:line="65" pos:column="29">OnFormattedTextChanged</name><parameter_list pos:line="65" pos:column="51">(
            <param><decl><type><name pos:line="66" pos:column="13">DependencyObject</name></type> <name pos:line="66" pos:column="30">o</name></decl></param>,
            <param><decl><type><name pos:line="67" pos:column="13">DependencyPropertyChangedEventArgs</name></type> <name pos:line="67" pos:column="48">e</name></decl></param>)</parameter_list> <block pos:line="67" pos:column="51">{
            <decl_stmt><decl><type><name pos:line="68" pos:column="13">var</name></type> <name pos:line="68" pos:column="17">textBlock</name> <init pos:line="68" pos:column="27">= <expr><name pos:line="68" pos:column="29">o</name> <op:operator pos:line="68" pos:column="31">as</op:operator> <name pos:line="68" pos:column="34">TextBlock</name></expr></init></decl>;</decl_stmt>
            <if pos:line="69" pos:column="13">if<condition pos:line="69" pos:column="15">(<expr><name pos:line="69" pos:column="16">textBlock</name> <op:operator pos:line="69" pos:column="26">==</op:operator> <name pos:line="69" pos:column="29">null</name></expr>)</condition><then pos:line="69" pos:column="34"> <return pos:line="69" pos:column="35">return;</return></then></if>

            <expr_stmt><expr><name pos:line="71" pos:column="13">var</name> inline <op:operator pos:line="71" pos:column="24">=</op:operator> <op:operator pos:line="71" pos:column="26">(</op:operator><name pos:line="71" pos:column="27">Inline</name><op:operator pos:line="71" pos:column="33">)</op:operator><name><name pos:line="71" pos:column="34">e</name><op:operator pos:line="71" pos:column="35">.</op:operator><name pos:line="71" pos:column="36">NewValue</name></name></expr>;</expr_stmt>
            <if pos:line="72" pos:column="13">if<condition pos:line="72" pos:column="15">(<expr pos:line="72" pos:column="16">inline <op:operator pos:line="72" pos:column="23">==</op:operator> <name pos:line="72" pos:column="26">null</name></expr>)</condition><then pos:line="72" pos:column="31"> <block pos:line="72" pos:column="32">{
                <expr_stmt><expr><call><name><name pos:line="73" pos:column="17">textBlock</name><op:operator pos:line="73" pos:column="26">.</op:operator><name pos:line="73" pos:column="27">Inlines</name><op:operator pos:line="73" pos:column="34">.</op:operator><name pos:line="73" pos:column="35">Clear</name></name><argument_list pos:line="73" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="74" pos:column="15">else <block pos:line="74" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="75" pos:column="17">textBlock</name><op:operator pos:line="75" pos:column="26">.</op:operator><name pos:line="75" pos:column="27">Inlines</name><op:operator pos:line="75" pos:column="34">.</op:operator><name pos:line="75" pos:column="35">Add</name></name><argument_list pos:line="75" pos:column="38">(<argument><expr pos:line="75" pos:column="39">inline</expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
