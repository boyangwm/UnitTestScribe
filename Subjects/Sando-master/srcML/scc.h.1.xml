<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\scc.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">//***************************************************************************</comment>
<comment type="line" pos:line="2" pos:column="1">// scc.h</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This module contains the prototypes and definitions for Microsoft's</comment>
<comment type="line" pos:line="5" pos:column="1">// Source Code Control API.  This file and the SCC API are covered by</comment>
<comment type="line" pos:line="6" pos:column="1">// VSIP and VSIP Extras license agreement and are not to be redistributed</comment>
<comment type="line" pos:line="7" pos:column="1">// without permission by Microsoft.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Terms used in this module:</comment>
<comment type="line" pos:line="10" pos:column="1">//  IDE = Visual Studio Integrated Development Environment</comment>
<comment type="line" pos:line="11" pos:column="1">//  dir = directory on local/client machine</comment>
<comment type="line" pos:line="12" pos:column="1">//</comment>
<comment type="line" pos:line="13" pos:column="1">// This module has been updated to include the following:</comment>
<comment type="line" pos:line="14" pos:column="1">//	May '96:	</comment>
<comment type="line" pos:line="15" pos:column="1">//	 * The SCC version number has been bumped to 1.1.</comment>
<comment type="line" pos:line="16" pos:column="1">//	 * 16-bit is no longer supported.</comment>
<comment type="line" pos:line="17" pos:column="1">//	 * A new capability bit, SCC_CAP_REENTRANT, has been added.  A provider</comment>
<comment type="line" pos:line="18" pos:column="1">//		which returns this bit can handle multiple SCC context values (eg:</comment>
<comment type="line" pos:line="19" pos:column="1">//		multiple simultaneous open projects), and reentrant calls for those</comment>
<comment type="line" pos:line="20" pos:column="1">//		contexts (ie: thread safe).</comment>
<comment type="line" pos:line="21" pos:column="1">//   * A new option, SCC_OPT_SCCCHECKOUTONLY has been added. This is used</comment>
<comment type="line" pos:line="22" pos:column="1">//      to disallow scc operations from outside of integration.  Integration</comment>
<comment type="line" pos:line="23" pos:column="1">//      hosts like MS Access use this to prevent files from being checked out</comment>
<comment type="line" pos:line="24" pos:column="1">//      without also being imported into scc.</comment>
<comment type="line" pos:line="25" pos:column="1">//  March '98:</comment>
<comment type="line" pos:line="26" pos:column="1">//   * The SetOption SCC_OPT_SHARESUBPROJ was added to allow destination dir </comment>
<comment type="line" pos:line="27" pos:column="1">//      for share. Setting this option changes the semantics of SccAddFromScc </comment>
<comment type="line" pos:line="28" pos:column="1">//      to accept the target as input.</comment>
<comment type="line" pos:line="29" pos:column="1">//  May '02:</comment>
<comment type="line" pos:line="30" pos:column="1">//   * The SCC version number has been bumped to 1.2.</comment>
<comment type="line" pos:line="31" pos:column="1">//   * The following new capability bits have been added:</comment>
<comment type="line" pos:line="32" pos:column="1">//      SCC_CAP_CREATESUBPROJECT,</comment>
<comment type="line" pos:line="33" pos:column="1">//      SCC_CAP_GETPARENTPROJECT,</comment>
<comment type="line" pos:line="34" pos:column="1">//      SCC_CAP_BATCH,</comment>
<comment type="line" pos:line="35" pos:column="1">//      SCC_CAP_DIRECTORYSTATUS,</comment>
<comment type="line" pos:line="36" pos:column="1">//      SCC_CAP_DIRECTORYDIFF,</comment>
<comment type="line" pos:line="37" pos:column="1">//      SCC_CAP_MULTICHECKOUT,</comment>
<comment type="line" pos:line="38" pos:column="1">//      SCC_CAP_SCCFILE</comment>
<comment type="line" pos:line="39" pos:column="1">//   * The following new functions corresponding to the new capability bits</comment>
<comment type="line" pos:line="40" pos:column="1">//     have been added:</comment>
<comment type="line" pos:line="41" pos:column="1">//      SccCreateSubProject</comment>
<comment type="line" pos:line="42" pos:column="1">//      SccGetParentProjectPath</comment>
<comment type="line" pos:line="43" pos:column="1">//      SccBeginBatch</comment>
<comment type="line" pos:line="44" pos:column="1">//      SccEndBatch</comment>
<comment type="line" pos:line="45" pos:column="1">//      SccDirQueryInfo</comment>
<comment type="line" pos:line="46" pos:column="1">//      SccDirDiff</comment>
<comment type="line" pos:line="47" pos:column="1">//      SccIsMultiCheckoutEnabled</comment>
<comment type="line" pos:line="48" pos:column="1">//      SccWillCreateSccFile</comment>
<comment type="line" pos:line="49" pos:column="1">//   * The new enum SccDirStatus has been added for use with SccDirQueryInfo</comment>
<comment type="line" pos:line="50" pos:column="1">//  April '03</comment>
<comment type="line" pos:line="51" pos:column="1">//   * The SCC version number has been bumped to 1.3</comment>
<comment type="line" pos:line="52" pos:column="1">//      SccGetExtendedCapabilities was added for extra capability bits</comment>
<comment type="line" pos:line="53" pos:column="1">//      SccEnumChangedFiles was added for retrieving the list of files who </comment>
<comment type="line" pos:line="54" pos:column="1">//              have newer versions in the database than on local disk.</comment>
<comment type="line" pos:line="55" pos:column="1">//      SccQueryChanges was added to discover namespace changes (renames/additions/deletions)( </comment>
<comment type="line" pos:line="56" pos:column="1">//      SccPopulateDirList was added for discovering folders in the store</comment>
<comment type="line" pos:line="57" pos:column="1">//      SccAddFilesFromScc</comment>
<comment type="line" pos:line="58" pos:column="1">//		SccBackgroundGet</comment>
<comment type="line" pos:line="59" pos:column="1">//      SccGetUserOption</comment>
<comment type="line" pos:line="60" pos:column="1">//    * File types and encodings have been superseded to support Unicode</comment>
<comment type="line" pos:line="61" pos:column="1">//    * All API functions were annotated with SAL macros.</comment>
<comment type="line" pos:line="62" pos:column="1">//      See specstrings.h from Windows SDK for more information about the macros. </comment>
<comment type="line" pos:line="63" pos:column="1">//</comment>
<comment type="line" pos:line="64" pos:column="1">// Copyright (c) Microsoft Corporation, All rights reserved.</comment>
<comment type="line" pos:line="65" pos:column="1">//***************************************************************************</comment>
<cpp:ifndef pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">ifndef</cpp:directive> <name pos:line="66" pos:column="9">_SCC_DEFS</name></cpp:ifndef>
<cpp:define pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="67" pos:column="9">_SCC_DEFS</name></cpp:macro></cpp:define>

<cpp:include pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">include</cpp:directive> <cpp:file pos:line="69" pos:column="10">&lt;stdlib.h&gt;</cpp:file></cpp:include>


<comment type="block" format="doxygen" pos:line="72" pos:column="1">/****************************************************************************
    Make it easy to export functions
****************************************************************************/</comment>
<cpp:if pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">if</cpp:directive> <expr><op:operator pos:line="75" pos:column="5">!</op:operator><call><name pos:line="75" pos:column="6">defined</name><argument_list pos:line="75" pos:column="13">( <argument><expr><name pos:line="75" pos:column="15">EXTFUN</name></expr></argument> )</argument_list></call></expr></cpp:if>
<cpp:if pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">if</cpp:directive> <expr><call><name pos:line="76" pos:column="5">defined</name><argument_list pos:line="76" pos:column="12">( <argument><expr><name pos:line="76" pos:column="14">WIN32</name></expr></argument> )</argument_list></call></expr></cpp:if>
<cpp:define pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="77" pos:column="9">EXTFUN</name></cpp:macro> <cpp:value pos:line="77" pos:column="16">__declspec(dllexport)</cpp:value></cpp:define>
<cpp:else pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">else</cpp:directive></cpp:else>
<cpp:define pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="79" pos:column="9">EXTFUN</name></cpp:macro> <cpp:value pos:line="79" pos:column="16">__export</cpp:value></cpp:define>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif</cpp:directive></cpp:endif>
<cpp:endif pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:if pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">if</cpp:directive> <expr><call><name pos:line="83" pos:column="5">defined</name><argument_list pos:line="83" pos:column="12">( <argument><expr><name pos:line="83" pos:column="14">__cplusplus</name></expr></argument> )</argument_list></call></expr></cpp:if>
<cpp:define pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="84" pos:column="9">SCCEXTERNC</name></cpp:macro> <cpp:value pos:line="84" pos:column="20">extern "C"</cpp:value></cpp:define>
<cpp:else pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">else</cpp:directive></cpp:else>
<cpp:define pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="86" pos:column="9">SCCEXTERNC</name></cpp:macro></cpp:define>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif</cpp:directive></cpp:endif>



<comment type="block" format="doxygen" pos:line="91" pos:column="1">/****************************************************************************
    Linkage for external functions will be C naming mode.
****************************************************************************/</comment>
<cpp:if pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">if</cpp:directive> <expr><call><name pos:line="94" pos:column="5">defined</name><argument_list pos:line="94" pos:column="12">( <argument><expr><name pos:line="94" pos:column="14">__cplusplus</name></expr></argument> )</argument_list></call></expr></cpp:if>
<extern pos:line="95" pos:column="1">extern <lit:literal type="string" pos:line="95" pos:column="8">"C"</lit:literal> <block pos:line="95" pos:column="12">{
<cpp:endif pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">endif</cpp:directive></cpp:endif>



<comment type="block" format="doxygen" pos:line="100" pos:column="1">/****************************************************************************
    Take care of type information based on platform and settings.
****************************************************************************/</comment>
<cpp:include pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">include</cpp:directive> <cpp:file pos:line="103" pos:column="10">&lt;winnls.h&gt;</cpp:file></cpp:include>

<cpp:if pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">if</cpp:directive> <expr><call><name pos:line="105" pos:column="5">defined</name><argument_list pos:line="105" pos:column="12">( <argument><expr><name pos:line="105" pos:column="14">WIN16</name></expr></argument> )</argument_list></call></expr></cpp:if>
<typedef pos:line="106" pos:column="1">typedef <type><name pos:line="106" pos:column="9">BOOL</name> <name pos:line="106" pos:column="14">far</name> <type:modifier pos:line="106" pos:column="18">*</type:modifier></type> <name pos:line="106" pos:column="20">LPBOOL</name>;</typedef>
<cpp:endif pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" format="doxygen" pos:line="109" pos:column="1">/****************************************************************************
    Version Flag.  Major is HIWORD, Minor is LOWORD
****************************************************************************/</comment>
<cpp:define pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="112" pos:column="9">SCC_MAJOR_VER_VAL</name></cpp:macro>   <cpp:value pos:line="112" pos:column="29">1</cpp:value></cpp:define>
<cpp:define pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="113" pos:column="9">SCC_MINOR_VER_VAL</name></cpp:macro>   <cpp:value pos:line="113" pos:column="29">3</cpp:value></cpp:define>
<cpp:define pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="114" pos:column="9">SCC_VER_NUM</name></cpp:macro>         <cpp:value pos:line="114" pos:column="29">MAKELONG(SCC_MINOR_VER_VAL, SCC_MAJOR_VER_VAL)</cpp:value></cpp:define>
<cpp:define pos:line="115" pos:column="1">#<cpp:directive pos:line="115" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="115" pos:column="9">SCC_GET_MAJOR_VER</name><parameter_list pos:line="115" pos:column="26">(<param><type><name pos:line="115" pos:column="27">ver</name></type></param>)</parameter_list></cpp:macro>  <cpp:value pos:line="115" pos:column="33">HIWORD(ver)</cpp:value></cpp:define>
<cpp:define pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="116" pos:column="9">SCC_GET_MINOR_VER</name><parameter_list pos:line="116" pos:column="26">(<param><type><name pos:line="116" pos:column="27">ver</name></type></param>)</parameter_list></cpp:macro>  <cpp:value pos:line="116" pos:column="33">LOWORD(ver)</cpp:value></cpp:define>



<comment type="block" format="doxygen" pos:line="120" pos:column="1">/****************************************************************************
    Following strings are the keys for accessing the registry to find
    the SCC provider.
****************************************************************************/</comment>
<cpp:if pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">if</cpp:directive> <expr><op:operator pos:line="124" pos:column="5">!</op:operator><call><name pos:line="124" pos:column="6">defined</name><argument_list pos:line="124" pos:column="13">( <argument><expr><name pos:line="124" pos:column="15">_SCC_REG_KEYS</name></expr></argument> )</argument_list></call></expr></cpp:if>
<cpp:define pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="125" pos:column="9">_SCC_REG_KEYS</name></cpp:macro></cpp:define>
<cpp:define pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="126" pos:column="9">STR_SCC_PROVIDER_REG_LOCATION</name></cpp:macro>   <cpp:value pos:line="126" pos:column="41">"Software\\SourceCodeControlProvider"</cpp:value></cpp:define>
<cpp:define pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="127" pos:column="9">STR_PROVIDERREGKEY</name></cpp:macro>              <cpp:value pos:line="127" pos:column="41">"ProviderRegKey"</cpp:value></cpp:define>
<cpp:define pos:line="128" pos:column="1">#<cpp:directive pos:line="128" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="128" pos:column="9">STR_SCCPROVIDERPATH</name></cpp:macro>             <cpp:value pos:line="128" pos:column="41">"SCCServerPath"</cpp:value></cpp:define>
<cpp:define pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="129" pos:column="9">STR_SCCPROVIDERNAME</name></cpp:macro>             <cpp:value pos:line="129" pos:column="41">"SCCServerName"</cpp:value></cpp:define>
<cpp:define pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="130" pos:column="9">STR_SCC_INI_SECTION</name></cpp:macro>             <cpp:value pos:line="130" pos:column="41">"Source Code Control"</cpp:value></cpp:define>
<cpp:define pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="131" pos:column="9">STR_SCC_INI_KEY</name></cpp:macro>                 <cpp:value pos:line="131" pos:column="41">"SourceCodeControlProvider"</cpp:value></cpp:define>
<cpp:define pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="132" pos:column="9">SCC_PROJECTNAME_KEY</name></cpp:macro>             <cpp:value pos:line="132" pos:column="41">"SCC_Project_Name"</cpp:value></cpp:define>
<cpp:define pos:line="133" pos:column="1">#<cpp:directive pos:line="133" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="133" pos:column="9">SCC_PROJECTAUX_KEY</name></cpp:macro>              <cpp:value pos:line="133" pos:column="41">"SCC_Aux_Path"</cpp:value></cpp:define>
<cpp:define pos:line="134" pos:column="1">#<cpp:directive pos:line="134" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="134" pos:column="9">SCC_STATUS_FILE</name></cpp:macro>                 <cpp:value pos:line="134" pos:column="41">"MSSCCPRJ.SCC"</cpp:value></cpp:define>
<cpp:define pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="135" pos:column="9">SCC_KEY</name></cpp:macro>                         <cpp:value pos:line="135" pos:column="41">"SCC"</cpp:value></cpp:define>
<cpp:define pos:line="136" pos:column="1">#<cpp:directive pos:line="136" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="136" pos:column="9">SCC_FILE_SIGNATURE</name></cpp:macro>              <cpp:value pos:line="136" pos:column="41">"This is a source code control file"</cpp:value></cpp:define>
<cpp:define pos:line="137" pos:column="1">#<cpp:directive pos:line="137" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="137" pos:column="9">SCC_NSE</name></cpp:macro>                         <cpp:value pos:line="137" pos:column="41">"Namespace Extension"</cpp:value></cpp:define>
<cpp:define pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="138" pos:column="9">SCC_NSE_DisableOpenSCC</name></cpp:macro>          <cpp:value pos:line="138" pos:column="41">"DisableOpenFromSourceControl"</cpp:value></cpp:define>
<cpp:define pos:line="139" pos:column="1">#<cpp:directive pos:line="139" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="139" pos:column="9">STR_SCCHELPCOLLECTION</name></cpp:macro>			<cpp:value pos:line="139" pos:column="49">"HelpCollection"</cpp:value></cpp:define>
<cpp:define pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="140" pos:column="9">STR_UI_LANGUAGE</name></cpp:macro>					<cpp:value pos:line="140" pos:column="57">"UILanguage"</cpp:value></cpp:define>
<cpp:define pos:line="141" pos:column="1">#<cpp:directive pos:line="141" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="141" pos:column="9">STR_SRCSAFE_ROOT_KEY</name></cpp:macro>			<cpp:value pos:line="141" pos:column="49">"Software\\Microsoft\\SourceSafe"</cpp:value></cpp:define>

<cpp:endif pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="143" pos:column="8">/* _SCC_REG_KEYS */</comment>



<comment type="block" format="doxygen" pos:line="147" pos:column="1">/****************************************************************************
    String lengths (each length does *not* include the terminating '\0')
****************************************************************************/</comment>
<cpp:define pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="150" pos:column="9">SCC_NAME_LEN</name></cpp:macro>            <cpp:value pos:line="150" pos:column="33">31</cpp:value></cpp:define>      <comment type="line" pos:line="150" pos:column="41">// lpSccName, SCCInitialize</comment>
<cpp:define pos:line="151" pos:column="1">#<cpp:directive pos:line="151" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="151" pos:column="9">SCC_AUXLABEL_LEN</name></cpp:macro>        <cpp:value pos:line="151" pos:column="33">31</cpp:value></cpp:define>      <comment type="line" pos:line="151" pos:column="41">// lpAuxPathLabel, SCCInitialize</comment>
<cpp:define pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="152" pos:column="9">SCC_USER_LEN</name></cpp:macro>            <cpp:value pos:line="152" pos:column="33">31</cpp:value></cpp:define>      <comment type="line" pos:line="152" pos:column="41">// lpUser, SCCOpenProject</comment>
<cpp:define pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="153" pos:column="9">SCC_PRJPATH_LEN</name></cpp:macro>         <cpp:value pos:line="153" pos:column="33">300</cpp:value></cpp:define>     <comment type="line" pos:line="153" pos:column="41">// lpAuxProjPath, SCCGetProjPath</comment>

<comment type="block" format="doxygen" pos:line="155" pos:column="1">/****************************************************************************
    String sizes (which are lengths + 1 for the terminating '\0')
****************************************************************************/</comment>
<cpp:define pos:line="158" pos:column="1">#<cpp:directive pos:line="158" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="158" pos:column="9">SCC_NAME_SIZE</name></cpp:macro>           <cpp:value pos:line="158" pos:column="33">(SCC_NAME_LEN + 1)</cpp:value></cpp:define>
<cpp:define pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="159" pos:column="9">SCC_AUXLABEL_SIZE</name></cpp:macro>       <cpp:value pos:line="159" pos:column="33">(SCC_AUXLABEL_LEN + 1)</cpp:value></cpp:define>
<cpp:define pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="160" pos:column="9">SCC_USER_SIZE</name></cpp:macro>           <cpp:value pos:line="160" pos:column="33">(SCC_USER_LEN + 1)</cpp:value></cpp:define>
<cpp:define pos:line="161" pos:column="1">#<cpp:directive pos:line="161" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="161" pos:column="9">SCC_PRJPATH_SIZE</name></cpp:macro>        <cpp:value pos:line="161" pos:column="33">(SCC_PRJPATH_LEN + 1)</cpp:value></cpp:define>

<comment type="block" format="doxygen" pos:line="163" pos:column="1">/****************************************************************************
    These are the error codes that may be returned from a function.
    All errors are &lt; 0, warnings are &gt; 0, and success is 0.  Use the
    macros provided for quick checking.  
****************************************************************************/</comment>
<typedef pos:line="168" pos:column="1">typedef <type><name pos:line="168" pos:column="9">long</name></type> <name pos:line="168" pos:column="14">SCCRTN</name>;</typedef>
<typedef pos:line="169" pos:column="1">typedef <type><name pos:line="169" pos:column="9">SCCRTN</name> <name pos:line="169" pos:column="16">FAR</name> <type:modifier pos:line="169" pos:column="20">*</type:modifier></type> <name pos:line="169" pos:column="22">LPSCCRTN</name>;</typedef>

<cpp:define pos:line="171" pos:column="1">#<cpp:directive pos:line="171" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="171" pos:column="9">IS_SCC_ERROR</name><parameter_list pos:line="171" pos:column="21">(<param><type><name pos:line="171" pos:column="22">rtn</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="171" pos:column="27">(((rtn) &lt; 0) ? TRUE : FALSE)</cpp:value></cpp:define>
<cpp:define pos:line="172" pos:column="1">#<cpp:directive pos:line="172" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="172" pos:column="9">IS_SCC_SUCCESS</name><parameter_list pos:line="172" pos:column="23">(<param><type><name pos:line="172" pos:column="24">rtn</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="172" pos:column="29">(((rtn) == SCC_OK) ? TRUE : FALSE)</cpp:value></cpp:define>
<cpp:define pos:line="173" pos:column="1">#<cpp:directive pos:line="173" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="173" pos:column="9">IS_SCC_WARNING</name><parameter_list pos:line="173" pos:column="23">(<param><type><name pos:line="173" pos:column="24">rtn</name></type></param>)</parameter_list></cpp:macro> <cpp:value pos:line="173" pos:column="29">(((rtn) &gt; 0) ? TRUE : FALSE)</cpp:value></cpp:define>


<cpp:define pos:line="176" pos:column="1">#<cpp:directive pos:line="176" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="176" pos:column="9">SCC_I_SHARESUBPROJOK</name></cpp:macro>				<cpp:value pos:line="176" pos:column="57">7</cpp:value></cpp:define>
<cpp:define pos:line="177" pos:column="1">#<cpp:directive pos:line="177" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="177" pos:column="9">SCC_I_FILEDIFFERS</name></cpp:macro>						<cpp:value pos:line="177" pos:column="73">6</cpp:value></cpp:define>
<cpp:define pos:line="178" pos:column="1">#<cpp:directive pos:line="178" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="178" pos:column="9">SCC_I_RELOADFILE</name></cpp:macro>						<cpp:value pos:line="178" pos:column="73">5</cpp:value></cpp:define>
<cpp:define pos:line="179" pos:column="1">#<cpp:directive pos:line="179" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="179" pos:column="9">SCC_I_FILENOTAFFECTED</name></cpp:macro>                   <cpp:value pos:line="179" pos:column="49">4</cpp:value></cpp:define>
<cpp:define pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="180" pos:column="9">SCC_I_PROJECTCREATED</name></cpp:macro>                    <cpp:value pos:line="180" pos:column="49">3</cpp:value></cpp:define>
<cpp:define pos:line="181" pos:column="1">#<cpp:directive pos:line="181" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="181" pos:column="9">SCC_I_OPERATIONCANCELED</name></cpp:macro>                 <cpp:value pos:line="181" pos:column="49">2</cpp:value></cpp:define>
<cpp:define pos:line="182" pos:column="1">#<cpp:directive pos:line="182" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="182" pos:column="9">SCC_I_ADV_SUPPORT</name></cpp:macro>                       <cpp:value pos:line="182" pos:column="49">1</cpp:value></cpp:define>

<cpp:define pos:line="184" pos:column="1">#<cpp:directive pos:line="184" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="184" pos:column="9">SCC_OK</name></cpp:macro>                                  <cpp:value pos:line="184" pos:column="49">0</cpp:value></cpp:define>

<cpp:define pos:line="186" pos:column="1">#<cpp:directive pos:line="186" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="186" pos:column="9">SCC_E_INITIALIZEFAILED</name></cpp:macro>                  <cpp:value pos:line="186" pos:column="49">-1</cpp:value></cpp:define>
<cpp:define pos:line="187" pos:column="1">#<cpp:directive pos:line="187" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="187" pos:column="9">SCC_E_UNKNOWNPROJECT</name></cpp:macro>                    <cpp:value pos:line="187" pos:column="49">-2</cpp:value></cpp:define>
<cpp:define pos:line="188" pos:column="1">#<cpp:directive pos:line="188" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="188" pos:column="9">SCC_E_COULDNOTCREATEPROJECT</name></cpp:macro>             <cpp:value pos:line="188" pos:column="49">-3</cpp:value></cpp:define>
<cpp:define pos:line="189" pos:column="1">#<cpp:directive pos:line="189" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="189" pos:column="9">SCC_E_NOTCHECKEDOUT</name></cpp:macro>                     <cpp:value pos:line="189" pos:column="49">-4</cpp:value></cpp:define>
<cpp:define pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="190" pos:column="9">SCC_E_ALREADYCHECKEDOUT</name></cpp:macro>                 <cpp:value pos:line="190" pos:column="49">-5</cpp:value></cpp:define>
<cpp:define pos:line="191" pos:column="1">#<cpp:directive pos:line="191" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="191" pos:column="9">SCC_E_FILEISLOCKED</name></cpp:macro>                      <cpp:value pos:line="191" pos:column="49">-6</cpp:value></cpp:define>
<cpp:define pos:line="192" pos:column="1">#<cpp:directive pos:line="192" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="192" pos:column="9">SCC_E_FILEOUTEXCLUSIVE</name></cpp:macro>                  <cpp:value pos:line="192" pos:column="49">-7</cpp:value></cpp:define>
<cpp:define pos:line="193" pos:column="1">#<cpp:directive pos:line="193" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="193" pos:column="9">SCC_E_ACCESSFAILURE</name></cpp:macro>                     <cpp:value pos:line="193" pos:column="49">-8</cpp:value></cpp:define>
<cpp:define pos:line="194" pos:column="1">#<cpp:directive pos:line="194" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="194" pos:column="9">SCC_E_CHECKINCONFLICT</name></cpp:macro>                   <cpp:value pos:line="194" pos:column="49">-9</cpp:value></cpp:define>
<cpp:define pos:line="195" pos:column="1">#<cpp:directive pos:line="195" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="195" pos:column="9">SCC_E_FILEALREADYEXISTS</name></cpp:macro>                 <cpp:value pos:line="195" pos:column="49">-10</cpp:value></cpp:define>
<cpp:define pos:line="196" pos:column="1">#<cpp:directive pos:line="196" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="196" pos:column="9">SCC_E_FILENOTCONTROLLED</name></cpp:macro>                 <cpp:value pos:line="196" pos:column="49">-11</cpp:value></cpp:define>
<cpp:define pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="197" pos:column="9">SCC_E_FILEISCHECKEDOUT</name></cpp:macro>                  <cpp:value pos:line="197" pos:column="49">-12</cpp:value></cpp:define>
<cpp:define pos:line="198" pos:column="1">#<cpp:directive pos:line="198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="198" pos:column="9">SCC_E_NOSPECIFIEDVERSION</name></cpp:macro>                <cpp:value pos:line="198" pos:column="49">-13</cpp:value></cpp:define>
<cpp:define pos:line="199" pos:column="1">#<cpp:directive pos:line="199" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="199" pos:column="9">SCC_E_OPNOTSUPPORTED</name></cpp:macro>                    <cpp:value pos:line="199" pos:column="49">-14</cpp:value></cpp:define>
<cpp:define pos:line="200" pos:column="1">#<cpp:directive pos:line="200" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="200" pos:column="9">SCC_E_NONSPECIFICERROR</name></cpp:macro>                  <cpp:value pos:line="200" pos:column="49">-15</cpp:value></cpp:define>
<cpp:define pos:line="201" pos:column="1">#<cpp:directive pos:line="201" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="201" pos:column="9">SCC_E_OPNOTPERFORMED</name></cpp:macro>                    <cpp:value pos:line="201" pos:column="49">-16</cpp:value></cpp:define>
<cpp:define pos:line="202" pos:column="1">#<cpp:directive pos:line="202" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="202" pos:column="9">SCC_E_TYPENOTSUPPORTED</name></cpp:macro>                  <cpp:value pos:line="202" pos:column="49">-17</cpp:value></cpp:define>
<cpp:define pos:line="203" pos:column="1">#<cpp:directive pos:line="203" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="203" pos:column="9">SCC_E_VERIFYMERGE</name></cpp:macro>                       <cpp:value pos:line="203" pos:column="49">-18</cpp:value></cpp:define>
<cpp:define pos:line="204" pos:column="1">#<cpp:directive pos:line="204" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="204" pos:column="9">SCC_E_FIXMERGE</name></cpp:macro>                          <cpp:value pos:line="204" pos:column="49">-19</cpp:value></cpp:define>
<cpp:define pos:line="205" pos:column="1">#<cpp:directive pos:line="205" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="205" pos:column="9">SCC_E_SHELLFAILURE</name></cpp:macro>                      <cpp:value pos:line="205" pos:column="49">-20</cpp:value></cpp:define>
<cpp:define pos:line="206" pos:column="1">#<cpp:directive pos:line="206" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="206" pos:column="9">SCC_E_INVALIDUSER</name></cpp:macro>                       <cpp:value pos:line="206" pos:column="49">-21</cpp:value></cpp:define>
<cpp:define pos:line="207" pos:column="1">#<cpp:directive pos:line="207" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="207" pos:column="9">SCC_E_PROJECTALREADYOPEN</name></cpp:macro>                <cpp:value pos:line="207" pos:column="49">-22</cpp:value></cpp:define>
<cpp:define pos:line="208" pos:column="1">#<cpp:directive pos:line="208" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="208" pos:column="9">SCC_E_PROJSYNTAXERR</name></cpp:macro>                     <cpp:value pos:line="208" pos:column="49">-23</cpp:value></cpp:define>
<cpp:define pos:line="209" pos:column="1">#<cpp:directive pos:line="209" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="209" pos:column="9">SCC_E_INVALIDFILEPATH</name></cpp:macro>                   <cpp:value pos:line="209" pos:column="49">-24</cpp:value></cpp:define>
<cpp:define pos:line="210" pos:column="1">#<cpp:directive pos:line="210" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="210" pos:column="9">SCC_E_PROJNOTOPEN</name></cpp:macro>                       <cpp:value pos:line="210" pos:column="49">-25</cpp:value></cpp:define>
<cpp:define pos:line="211" pos:column="1">#<cpp:directive pos:line="211" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="211" pos:column="9">SCC_E_NOTAUTHORIZED</name></cpp:macro>                     <cpp:value pos:line="211" pos:column="49">-26</cpp:value></cpp:define>
<cpp:define pos:line="212" pos:column="1">#<cpp:directive pos:line="212" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="212" pos:column="9">SCC_E_FILESYNTAXERR</name></cpp:macro>                     <cpp:value pos:line="212" pos:column="49">-27</cpp:value></cpp:define>
<cpp:define pos:line="213" pos:column="1">#<cpp:directive pos:line="213" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="213" pos:column="9">SCC_E_FILENOTEXIST</name></cpp:macro>                      <cpp:value pos:line="213" pos:column="49">-28</cpp:value></cpp:define>
<cpp:define pos:line="214" pos:column="1">#<cpp:directive pos:line="214" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="214" pos:column="9">SCC_E_CONNECTIONFAILURE</name></cpp:macro>                 <cpp:value pos:line="214" pos:column="49">-29</cpp:value></cpp:define>
<cpp:define pos:line="215" pos:column="1">#<cpp:directive pos:line="215" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="215" pos:column="9">SCC_E_UNKNOWNERROR</name></cpp:macro>                      <cpp:value pos:line="215" pos:column="49">-30</cpp:value></cpp:define>
<cpp:define pos:line="216" pos:column="1">#<cpp:directive pos:line="216" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="216" pos:column="9">SCC_E_BACKGROUNDGETINPROGRESS</name></cpp:macro>           <cpp:value pos:line="216" pos:column="49">-31</cpp:value></cpp:define>



<cpp:ifndef pos:line="220" pos:column="1">#<cpp:directive pos:line="220" pos:column="2">ifndef</cpp:directive> <name pos:line="220" pos:column="9">_SCC_STATUS_DEFINED</name></cpp:ifndef>
<cpp:define pos:line="221" pos:column="1">#<cpp:directive pos:line="221" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="221" pos:column="9">_SCC_STATUS_DEFINED</name></cpp:macro></cpp:define>
<comment type="block" format="doxygen" pos:line="222" pos:column="1">/****************************************************************************
    The SCC_STATUS_xxx macros define the state of a file
****************************************************************************/</comment>
<enum pos:line="225" pos:column="1">enum  <name pos:line="225" pos:column="7">SccStatus</name> 
<block pos:line="226" pos:column="1">{
    <decl><name pos:line="227" pos:column="5">SCC_STATUS_INVALID</name>          <init pos:line="227" pos:column="33">= <expr><op:operator pos:line="227" pos:column="35">-</op:operator><lit:literal type="number" pos:line="227" pos:column="36">1L</lit:literal></expr></init></decl><op:operator pos:line="227" pos:column="38">,</op:operator>			<comment type="line" pos:line="227" pos:column="57">// Status could not be obtained, don't rely on it</comment>
    <decl><name pos:line="228" pos:column="5">SCC_STATUS_NOTCONTROLLED</name>    <init pos:line="228" pos:column="33">= <expr><lit:literal type="number" pos:line="228" pos:column="35">0x00000000L</lit:literal></expr></init></decl><op:operator pos:line="228" pos:column="46">,</op:operator>	<comment type="line" pos:line="228" pos:column="49">// File is not under source control</comment>
    <decl><name pos:line="229" pos:column="5">SCC_STATUS_CONTROLLED</name>       <init pos:line="229" pos:column="33">= <expr><lit:literal type="number" pos:line="229" pos:column="35">0x00000001L</lit:literal></expr></init></decl><op:operator pos:line="229" pos:column="46">,</op:operator>	<comment type="line" pos:line="229" pos:column="49">// File is under source code control</comment>
    <decl><name pos:line="230" pos:column="5">SCC_STATUS_CHECKEDOUT</name>       <init pos:line="230" pos:column="33">= <expr><lit:literal type="number" pos:line="230" pos:column="35">0x00000002L</lit:literal></expr></init></decl><op:operator pos:line="230" pos:column="46">,</op:operator>	<comment type="line" pos:line="230" pos:column="49">// Checked out to current user at local path</comment>
    <decl><name pos:line="231" pos:column="5">SCC_STATUS_OUTOTHER</name>         <init pos:line="231" pos:column="33">= <expr><lit:literal type="number" pos:line="231" pos:column="35">0x00000004L</lit:literal></expr></init></decl><op:operator pos:line="231" pos:column="46">,</op:operator>	<comment type="line" pos:line="231" pos:column="49">// File is checked out to another user</comment>
    <decl><name pos:line="232" pos:column="5">SCC_STATUS_OUTEXCLUSIVE</name>     <init pos:line="232" pos:column="33">= <expr><lit:literal type="number" pos:line="232" pos:column="35">0x00000008L</lit:literal></expr></init></decl><op:operator pos:line="232" pos:column="46">,</op:operator>	<comment type="line" pos:line="232" pos:column="49">// File is exclusively check out</comment>
    <decl><name pos:line="233" pos:column="5">SCC_STATUS_OUTMULTIPLE</name>      <init pos:line="233" pos:column="33">= <expr><lit:literal type="number" pos:line="233" pos:column="35">0x00000010L</lit:literal></expr></init></decl><op:operator pos:line="233" pos:column="46">,</op:operator>	<comment type="line" pos:line="233" pos:column="49">// File is checked out to multiple people</comment>
    <decl><name pos:line="234" pos:column="5">SCC_STATUS_OUTOFDATE</name>        <init pos:line="234" pos:column="33">= <expr><lit:literal type="number" pos:line="234" pos:column="35">0x00000020L</lit:literal></expr></init></decl><op:operator pos:line="234" pos:column="46">,</op:operator>	<comment type="line" pos:line="234" pos:column="49">// The file is not the most recent</comment>
    <decl><name pos:line="235" pos:column="5">SCC_STATUS_DELETED</name>          <init pos:line="235" pos:column="33">= <expr><lit:literal type="number" pos:line="235" pos:column="35">0x00000040L</lit:literal></expr></init></decl><op:operator pos:line="235" pos:column="46">,</op:operator>	<comment type="line" pos:line="235" pos:column="49">// File has been deleted from the project</comment>
    <decl><name pos:line="236" pos:column="5">SCC_STATUS_LOCKED</name>           <init pos:line="236" pos:column="33">= <expr><lit:literal type="number" pos:line="236" pos:column="35">0x00000080L</lit:literal></expr></init></decl><op:operator pos:line="236" pos:column="46">,</op:operator>	<comment type="line" pos:line="236" pos:column="49">// No more versions allowed</comment>
    <decl><name pos:line="237" pos:column="5">SCC_STATUS_MERGED</name>           <init pos:line="237" pos:column="33">= <expr><lit:literal type="number" pos:line="237" pos:column="35">0x00000100L</lit:literal></expr></init></decl><op:operator pos:line="237" pos:column="46">,</op:operator>	<comment type="line" pos:line="237" pos:column="49">// File has been merged but not yet fixed/verified</comment>
    <decl><name pos:line="238" pos:column="5">SCC_STATUS_SHARED</name>           <init pos:line="238" pos:column="33">= <expr><lit:literal type="number" pos:line="238" pos:column="35">0x00000200L</lit:literal></expr></init></decl><op:operator pos:line="238" pos:column="46">,</op:operator>	<comment type="line" pos:line="238" pos:column="49">// File is shared between projects</comment>
    <decl><name pos:line="239" pos:column="5">SCC_STATUS_PINNED</name>           <init pos:line="239" pos:column="33">= <expr><lit:literal type="number" pos:line="239" pos:column="35">0x00000400L</lit:literal></expr></init></decl><op:operator pos:line="239" pos:column="46">,</op:operator>	<comment type="line" pos:line="239" pos:column="49">// File is shared to an explicit version</comment>
    <decl><name pos:line="240" pos:column="5">SCC_STATUS_MODIFIED</name>         <init pos:line="240" pos:column="33">= <expr><lit:literal type="number" pos:line="240" pos:column="35">0x00000800L</lit:literal></expr></init></decl><op:operator pos:line="240" pos:column="46">,</op:operator>	<comment type="line" pos:line="240" pos:column="49">// File has been modified/broken/violated</comment>
    <decl><name pos:line="241" pos:column="5">SCC_STATUS_OUTBYUSER</name>        <init pos:line="241" pos:column="33">= <expr><lit:literal type="number" pos:line="241" pos:column="35">0x00001000L</lit:literal></expr></init></decl><op:operator pos:line="241" pos:column="46">,</op:operator>	<comment type="line" pos:line="241" pos:column="49">// File is checked out by current user someplace</comment>
    <decl><name pos:line="242" pos:column="5">SCC_STATUS_NOMERGE</name>          <init pos:line="242" pos:column="33">= <expr><lit:literal type="number" pos:line="242" pos:column="35">0x00002000L</lit:literal></expr></init></decl><op:operator pos:line="242" pos:column="46">,</op:operator>	<comment type="line" pos:line="242" pos:column="49">// File is never mergeable and need not be saved before a GET</comment>
    <decl><name pos:line="243" pos:column="5">SCC_STATUS_RESERVED_1</name>       <init pos:line="243" pos:column="33">= <expr><lit:literal type="number" pos:line="243" pos:column="35">0x00004000L</lit:literal></expr></init></decl><op:operator pos:line="243" pos:column="46">,</op:operator>	<comment type="line" pos:line="243" pos:column="49">// Status bit reserved for internal use</comment>
    <decl><name pos:line="244" pos:column="5">SCC_STATUS_RESERVED_2</name>       <init pos:line="244" pos:column="33">= <expr><lit:literal type="number" pos:line="244" pos:column="35">0x00008000L</lit:literal></expr></init></decl><op:operator pos:line="244" pos:column="46">,</op:operator>	<comment type="line" pos:line="244" pos:column="49">// Status bit reserved for internal use</comment>
    <decl><name pos:line="245" pos:column="5">SCC_STATUS_RESERVED_3</name>       <init pos:line="245" pos:column="33">= <expr><lit:literal type="number" pos:line="245" pos:column="35">0x00010000L</lit:literal></expr></init></decl> 	<comment type="line" pos:line="245" pos:column="49">// Status bit reserved for internal use</comment>
}</block>;</enum>
<cpp:endif pos:line="247" pos:column="1">#<cpp:directive pos:line="247" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="247" pos:column="8">/* _SCC_STATUS_DEFINED */</comment>



<cpp:ifndef pos:line="251" pos:column="1">#<cpp:directive pos:line="251" pos:column="2">ifndef</cpp:directive> <name pos:line="251" pos:column="9">_SCC_DIRSTATUS_DEFINED</name></cpp:ifndef>
<cpp:define pos:line="252" pos:column="1">#<cpp:directive pos:line="252" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="252" pos:column="9">_SCC_DIRSTATUS_DEFINED</name></cpp:macro></cpp:define>
<comment type="block" format="doxygen" pos:line="253" pos:column="1">/****************************************************************************
    The SCC_DIRSTATUS_xxx macros define the state of a directory
****************************************************************************/</comment>
<enum pos:line="256" pos:column="1">enum  <name pos:line="256" pos:column="7">SccDirStatus</name> 
<block pos:line="257" pos:column="1">{
    <decl><name pos:line="258" pos:column="5">SCC_DIRSTATUS_INVALID</name>       <init pos:line="258" pos:column="33">= <expr><op:operator pos:line="258" pos:column="35">-</op:operator><lit:literal type="number" pos:line="258" pos:column="36">1L</lit:literal></expr></init></decl><op:operator pos:line="258" pos:column="38">,</op:operator>		<comment type="line" pos:line="258" pos:column="49">// Status could not be obtained, don't rely on it</comment>
    <decl><name pos:line="259" pos:column="5">SCC_DIRSTATUS_NOTCONTROLLED</name> <init pos:line="259" pos:column="33">= <expr><lit:literal type="number" pos:line="259" pos:column="35">0x0000L</lit:literal></expr></init></decl><op:operator pos:line="259" pos:column="42">,</op:operator>	<comment type="line" pos:line="259" pos:column="49">// Directory is not under source control</comment>
											<comment type="line" pos:line="260" pos:column="89">//   i.e. there is no project corresponding to the directory</comment>
    <decl><name pos:line="261" pos:column="5">SCC_DIRSTATUS_CONTROLLED</name>    <init pos:line="261" pos:column="33">= <expr><lit:literal type="number" pos:line="261" pos:column="35">0x0001L</lit:literal></expr></init></decl><op:operator pos:line="261" pos:column="42">,</op:operator>	<comment type="line" pos:line="261" pos:column="49">// Directory is under source code control</comment>
											<comment type="line" pos:line="262" pos:column="89">//   i.e. there exists a project corresponding to the directory</comment>
    <decl><name pos:line="263" pos:column="5">SCC_DIRSTATUS_EMPTYPROJ</name>     <init pos:line="263" pos:column="33">= <expr><lit:literal type="number" pos:line="263" pos:column="35">0x0002L</lit:literal></expr></init></decl>	<comment type="line" pos:line="263" pos:column="49">// Project corresponding to directory is empty</comment>
}</block>;</enum>
<cpp:endif pos:line="265" pos:column="1">#<cpp:directive pos:line="265" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="265" pos:column="8">/* _SCC_DIRSTATUS_DEFINED */</comment>



<comment type="block" format="doxygen" pos:line="269" pos:column="1">/****************************************************************************
    SccOpenProject flags
****************************************************************************/</comment>
<cpp:define pos:line="272" pos:column="1">#<cpp:directive pos:line="272" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="272" pos:column="9">SCC_OP_CREATEIFNEW</name></cpp:macro>      <cpp:value pos:line="272" pos:column="33">0x00000001L</cpp:value></cpp:define>
<cpp:define pos:line="273" pos:column="1">#<cpp:directive pos:line="273" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="273" pos:column="9">SCC_OP_SILENTOPEN</name></cpp:macro>       <cpp:value pos:line="273" pos:column="33">0x00000002L</cpp:value></cpp:define>


<comment type="block" format="doxygen" pos:line="276" pos:column="1">/****************************************************************************
    Keep checked out
****************************************************************************/</comment>
<cpp:define pos:line="279" pos:column="1">#<cpp:directive pos:line="279" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="279" pos:column="9">SCC_KEEP_CHECKEDOUT</name></cpp:macro>     <cpp:value pos:line="279" pos:column="33">0x1000</cpp:value></cpp:define>


<comment type="block" format="doxygen" pos:line="282" pos:column="1">/****************************************************************************
    Add flags
****************************************************************************/</comment>
<cpp:define pos:line="285" pos:column="1">#<cpp:directive pos:line="285" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="285" pos:column="9">SCC_ADD_STORELATEST</name></cpp:macro>     <cpp:value pos:line="285" pos:column="33">0x04</cpp:value></cpp:define>	<comment type="line" pos:line="285" pos:column="41">// Store only the latest version of the file(s).</comment>
<cpp:define pos:line="286" pos:column="1">#<cpp:directive pos:line="286" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="286" pos:column="9">SCC_FILETYPE_AUTO</name></cpp:macro>       <cpp:value pos:line="286" pos:column="33">0x00</cpp:value></cpp:define>	<comment type="line" pos:line="286" pos:column="41">// Auto-detect type of the file(s).</comment>

<comment type="line" pos:line="288" pos:column="1">// The following flags are mutually exculsive.</comment>
<cpp:define pos:line="289" pos:column="1">#<cpp:directive pos:line="289" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="289" pos:column="9">SCC_FILETYPE_TEXT</name></cpp:macro>       <cpp:value pos:line="289" pos:column="33">0x01</cpp:value></cpp:define>	<comment type="line" pos:line="289" pos:column="41">// Obsolete. Use SCC_FILETYPE_TEXT_ANSI instead.</comment>
<cpp:define pos:line="290" pos:column="1">#<cpp:directive pos:line="290" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="290" pos:column="9">SCC_FILETYPE_BINARY</name></cpp:macro>     <cpp:value pos:line="290" pos:column="33">0x02</cpp:value></cpp:define>	<comment type="line" pos:line="290" pos:column="41">// Treat the file(s) as binary.</comment>
<cpp:define pos:line="291" pos:column="1">#<cpp:directive pos:line="291" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="291" pos:column="9">SCC_FILETYPE_TEXT_ANSI</name></cpp:macro>  <cpp:value pos:line="291" pos:column="33">0x08</cpp:value></cpp:define>	<comment type="line" pos:line="291" pos:column="41">// Treat the file(s) as ANSI.</comment>
<cpp:define pos:line="292" pos:column="1">#<cpp:directive pos:line="292" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="292" pos:column="9">SCC_FILETYPE_UTF8</name></cpp:macro>       <cpp:value pos:line="292" pos:column="33">0x10</cpp:value></cpp:define>	<comment type="line" pos:line="292" pos:column="41">// Treat the file(s) as Unicode in UTF8 format.</comment>
<cpp:define pos:line="293" pos:column="1">#<cpp:directive pos:line="293" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="293" pos:column="9">SCC_FILETYPE_UTF16LE</name></cpp:macro>    <cpp:value pos:line="293" pos:column="33">0x20</cpp:value></cpp:define>	<comment type="line" pos:line="293" pos:column="41">// Treat the file(s) as Unicode in UTF16 Little Endian format.</comment>
<cpp:define pos:line="294" pos:column="1">#<cpp:directive pos:line="294" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="294" pos:column="9">SCC_FILETYPE_UTF16BE</name></cpp:macro>    <cpp:value pos:line="294" pos:column="33">0x40</cpp:value></cpp:define>	<comment type="line" pos:line="294" pos:column="41">// Treat the file(s) as Unicode in UTF16 Big Endian format.</comment>


<comment type="block" format="doxygen" pos:line="297" pos:column="1">/****************************************************************************
    Diff flags.  The SCC_DIFF_QD_xxx flags are mutually exclusive.  If any
	one of the three are specified, then no visual feed back is to be given.
	If one is specified but not supported, then the next best one is chosen.
****************************************************************************/</comment>
<cpp:define pos:line="302" pos:column="1">#<cpp:directive pos:line="302" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="302" pos:column="9">SCC_DIFF_IGNORECASE</name></cpp:macro>     <cpp:value pos:line="302" pos:column="33">0x0002</cpp:value></cpp:define>
<cpp:define pos:line="303" pos:column="1">#<cpp:directive pos:line="303" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="303" pos:column="9">SCC_DIFF_IGNORESPACE</name></cpp:macro>    <cpp:value pos:line="303" pos:column="33">0x0004</cpp:value></cpp:define>
<cpp:define pos:line="304" pos:column="1">#<cpp:directive pos:line="304" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="304" pos:column="9">SCC_DIFF_QD_CONTENTS</name></cpp:macro>	<cpp:value pos:line="304" pos:column="33">0x0010</cpp:value></cpp:define>
<cpp:define pos:line="305" pos:column="1">#<cpp:directive pos:line="305" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="305" pos:column="9">SCC_DIFF_QD_CHECKSUM</name></cpp:macro>	<cpp:value pos:line="305" pos:column="33">0x0020</cpp:value></cpp:define>
<cpp:define pos:line="306" pos:column="1">#<cpp:directive pos:line="306" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="306" pos:column="9">SCC_DIFF_QD_TIME</name></cpp:macro>		<cpp:value pos:line="306" pos:column="41">0x0040</cpp:value></cpp:define>
<cpp:define pos:line="307" pos:column="1">#<cpp:directive pos:line="307" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="307" pos:column="9">SCC_DIFF_QUICK_DIFF</name></cpp:macro>		<cpp:value pos:line="307" pos:column="41">0x0070</cpp:value></cpp:define>		<comment type="block" pos:line="307" pos:column="57">/* Any QD means no display     */</comment>


<comment type="block" format="doxygen" pos:line="310" pos:column="1">/****************************************************************************
    Get flags
****************************************************************************/</comment>
<cpp:define pos:line="313" pos:column="1">#<cpp:directive pos:line="313" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="313" pos:column="9">SCC_GET_ALL</name></cpp:macro>             <cpp:value pos:line="313" pos:column="33">0x00000001L</cpp:value></cpp:define>
<cpp:define pos:line="314" pos:column="1">#<cpp:directive pos:line="314" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="314" pos:column="9">SCC_GET_RECURSIVE</name></cpp:macro>       <cpp:value pos:line="314" pos:column="33">0x00000002L</cpp:value></cpp:define>
<cpp:define pos:line="315" pos:column="1">#<cpp:directive pos:line="315" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="315" pos:column="9">SCC_GET_OVERWRITE</name></cpp:macro>       <cpp:value pos:line="315" pos:column="33">0x00000004L</cpp:value></cpp:define>

<comment type="block" format="doxygen" pos:line="317" pos:column="1">/****************************************************************************
    PopulateList flags
****************************************************************************/</comment>
<cpp:define pos:line="320" pos:column="1">#<cpp:directive pos:line="320" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="320" pos:column="9">SCC_PL_DIR</name></cpp:macro>				<cpp:value pos:line="320" pos:column="49">0x00000001L</cpp:value></cpp:define>	<comment type="block" pos:line="320" pos:column="65">/* whether input items are directory names */</comment>

<comment type="block" format="doxygen" pos:line="322" pos:column="1">/****************************************************************************
    Checkout flags
****************************************************************************/</comment>
<cpp:define pos:line="325" pos:column="1">#<cpp:directive pos:line="325" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="325" pos:column="9">SCC_CHECKOUT_LOCALVER</name></cpp:macro>   <cpp:value pos:line="325" pos:column="33">0x00000002L</cpp:value></cpp:define>

<comment type="block" format="doxygen" pos:line="327" pos:column="1">/****************************************************************************
    Options for SccRemoveDir
****************************************************************************/</comment>
<cpp:define pos:line="330" pos:column="1">#<cpp:directive pos:line="330" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="330" pos:column="9">SCC_RD_DEFAULT</name></cpp:macro>			<cpp:value pos:line="330" pos:column="41">0x0000</cpp:value></cpp:define>		<comment type="block" pos:line="330" pos:column="57">/* remove the folder and files within */</comment>
<cpp:define pos:line="331" pos:column="1">#<cpp:directive pos:line="331" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="331" pos:column="9">SCC_RD_EMPTYTREE</name></cpp:macro>		<cpp:value pos:line="331" pos:column="41">0x0001</cpp:value></cpp:define>		<comment type="block" pos:line="331" pos:column="57">/* remove the folder if the hierarchy contains only empty folders */</comment>

<comment type="block" format="doxygen" pos:line="333" pos:column="1">/****************************************************************************
    Options for SccGetCommandOptions and SccPopulateList
****************************************************************************/</comment>
<typedef pos:line="336" pos:column="1">typedef <type><name pos:line="336" pos:column="9">LPVOID</name></type> <name pos:line="336" pos:column="16">LPCMDOPTS</name>;</typedef>
<cpp:ifndef pos:line="337" pos:column="1">#<cpp:directive pos:line="337" pos:column="2">ifndef</cpp:directive> <name pos:line="337" pos:column="9">SCCCOMMAND_DEFINED</name></cpp:ifndef>
<cpp:define pos:line="338" pos:column="1">#<cpp:directive pos:line="338" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="338" pos:column="9">SCCCOMMAND_DEFINED</name></cpp:macro></cpp:define>
<enum pos:line="339" pos:column="1">enum  <name pos:line="339" pos:column="7">SCCCOMMAND</name> 
<block pos:line="340" pos:column="1">{
	<decl><name pos:line="341" pos:column="9">SCC_COMMAND_GET</name></decl><op:operator pos:line="341" pos:column="24">,</op:operator>
	<decl><name pos:line="342" pos:column="9">SCC_COMMAND_CHECKOUT</name></decl><op:operator pos:line="342" pos:column="29">,</op:operator>
	<decl><name pos:line="343" pos:column="9">SCC_COMMAND_CHECKIN</name></decl><op:operator pos:line="343" pos:column="28">,</op:operator>
	<decl><name pos:line="344" pos:column="9">SCC_COMMAND_UNCHECKOUT</name></decl><op:operator pos:line="344" pos:column="31">,</op:operator>
  	<decl><name pos:line="345" pos:column="9">SCC_COMMAND_ADD</name></decl><op:operator pos:line="345" pos:column="24">,</op:operator>
	<decl><name pos:line="346" pos:column="9">SCC_COMMAND_REMOVE</name></decl><op:operator pos:line="346" pos:column="27">,</op:operator>
	<decl><name pos:line="347" pos:column="9">SCC_COMMAND_DIFF</name></decl><op:operator pos:line="347" pos:column="25">,</op:operator>
	<decl><name pos:line="348" pos:column="9">SCC_COMMAND_HISTORY</name></decl><op:operator pos:line="348" pos:column="28">,</op:operator>
	<decl><name pos:line="349" pos:column="9">SCC_COMMAND_RENAME</name></decl><op:operator pos:line="349" pos:column="27">,</op:operator>
	<decl><name pos:line="350" pos:column="9">SCC_COMMAND_PROPERTIES</name></decl><op:operator pos:line="350" pos:column="31">,</op:operator>
	<decl><name pos:line="351" pos:column="9">SCC_COMMAND_OPTIONS</name></decl>
}</block>;</enum>
<cpp:endif pos:line="353" pos:column="1">#<cpp:directive pos:line="353" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="353" pos:column="8">/* SCCCOMMAND_DEFINED */</comment>

<typedef pos:line="355" pos:column="1">typedef <function_decl><type><name pos:line="355" pos:column="9">BOOL</name></type> (<name pos:line="355" pos:column="15">__cdecl</name> <type:modifier pos:line="355" pos:column="23">*</type:modifier><name pos:line="355" pos:column="24">POPLISTFUNC</name>)  <parameter_list pos:line="355" pos:column="38">(<param><decl><type><name pos:line="355" pos:column="39">_Inout_opt_</name> <name pos:line="355" pos:column="51">LPVOID</name></type> <name pos:line="355" pos:column="58">pvCallerData</name></decl></param>, <param><decl><type><name pos:line="355" pos:column="72">_In_</name> <name pos:line="355" pos:column="77">BOOL</name></type> <name pos:line="355" pos:column="82">bAddKeep</name></decl></param>, <param><decl><type><name pos:line="355" pos:column="92">_In_</name> <name pos:line="355" pos:column="97">LONG</name></type> <name pos:line="355" pos:column="102">nStatus</name></decl></param>, <param><decl><type><name pos:line="355" pos:column="111">_In_z_</name> <name pos:line="355" pos:column="118">LPCSTR</name></type> <name pos:line="355" pos:column="125">lpFile</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef pos:line="356" pos:column="1">typedef <function_decl><type><name pos:line="356" pos:column="9">BOOL</name></type> (<name pos:line="356" pos:column="15">__cdecl</name> <type:modifier pos:line="356" pos:column="23">*</type:modifier><name pos:line="356" pos:column="24">POPLISTFUNCA</name>) <parameter_list pos:line="356" pos:column="38">(<param><decl><type><name pos:line="356" pos:column="39">_Inout_opt_</name> <name pos:line="356" pos:column="51">LPVOID</name></type> <name pos:line="356" pos:column="58">pvCallerData</name></decl></param>, <param><decl><type><name pos:line="356" pos:column="72">_In_</name> <name pos:line="356" pos:column="77">BOOL</name></type> <name pos:line="356" pos:column="82">bAddKeep</name></decl></param>, <param><decl><type><name pos:line="356" pos:column="92">_In_</name> <name pos:line="356" pos:column="97">LONG</name></type> <name pos:line="356" pos:column="102">nStatus</name></decl></param>, <param><decl><type><name pos:line="356" pos:column="111">_In_z_</name> <name pos:line="356" pos:column="118">LPCSTR</name></type> <name pos:line="356" pos:column="125">lpFile</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef pos:line="357" pos:column="1">typedef <function_decl><type><name pos:line="357" pos:column="9">BOOL</name></type> (<name pos:line="357" pos:column="15">__cdecl</name> <type:modifier pos:line="357" pos:column="23">*</type:modifier><name pos:line="357" pos:column="24">POPLISTFUNCW</name>) <parameter_list pos:line="357" pos:column="38">(<param><decl><type><name pos:line="357" pos:column="39">_Inout_opt_</name> <name pos:line="357" pos:column="51">LPVOID</name></type> <name pos:line="357" pos:column="58">pvCallerData</name></decl></param>, <param><decl><type><name pos:line="357" pos:column="72">_In_</name> <name pos:line="357" pos:column="77">BOOL</name></type> <name pos:line="357" pos:column="82">bAddKeep</name></decl></param>, <param><decl><type><name pos:line="357" pos:column="92">_In_</name> <name pos:line="357" pos:column="97">LONG</name></type> <name pos:line="357" pos:column="102">nStatus</name></decl></param>, <param><decl><type><name pos:line="357" pos:column="111">_In_z_</name> <name pos:line="357" pos:column="118">LPCWSTR</name></type> <name pos:line="357" pos:column="126">lpFile</name></decl></param>)</parameter_list>;</function_decl></typedef>
<cpp:ifdef pos:line="358" pos:column="1">#<cpp:directive pos:line="358" pos:column="2">ifdef</cpp:directive> <name pos:line="358" pos:column="8">UNICODE</name></cpp:ifdef>
<typedef pos:line="359" pos:column="1">typedef <type><name pos:line="359" pos:column="9">POPLISTFUNCW</name></type> <name pos:line="359" pos:column="22">POPLISTFUNCT</name>;</typedef>
<cpp:else pos:line="360" pos:column="1">#<cpp:directive pos:line="360" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="361" pos:column="1">typedef <type><name pos:line="361" pos:column="9">POPLISTFUNCA</name></type> <name pos:line="361" pos:column="22">POPLISTFUNCT</name>;</typedef>
<cpp:endif pos:line="362" pos:column="1">#<cpp:directive pos:line="362" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" format="doxygen" pos:line="364" pos:column="1">/****************************************************************************
    Options and callback function declarations for SccPopulateDirList
****************************************************************************/</comment>
<cpp:define pos:line="367" pos:column="1">#<cpp:directive pos:line="367" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="367" pos:column="9">SCC_PDL_ONELEVEL</name></cpp:macro>		<cpp:value pos:line="367" pos:column="41">0x0000</cpp:value></cpp:define>
<cpp:define pos:line="368" pos:column="1">#<cpp:directive pos:line="368" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="368" pos:column="9">SCC_PDL_RECURSIVE</name></cpp:macro>		<cpp:value pos:line="368" pos:column="41">0x0001</cpp:value></cpp:define>
<cpp:define pos:line="369" pos:column="1">#<cpp:directive pos:line="369" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="369" pos:column="9">SCC_PDL_INCLUDEFILES</name></cpp:macro>	<cpp:value pos:line="369" pos:column="33">0x0002</cpp:value></cpp:define>

<typedef pos:line="371" pos:column="1">typedef <function_decl><type><name pos:line="371" pos:column="9">BOOL</name></type> (<name pos:line="371" pos:column="15">__cdecl</name> <type:modifier pos:line="371" pos:column="23">*</type:modifier><name pos:line="371" pos:column="24">POPDIRLISTFUNC</name>) <parameter_list pos:line="371" pos:column="40">(<param><decl><type><name pos:line="371" pos:column="41">_Inout_opt_</name> <name pos:line="371" pos:column="53">LPVOID</name></type> <name pos:line="371" pos:column="60">pvCallerData</name></decl></param>, <param><decl><type><name pos:line="371" pos:column="74">_In_</name> <name pos:line="371" pos:column="79">BOOL</name></type> <name pos:line="371" pos:column="84">bFolder</name></decl></param>,  <param><decl><type><name pos:line="371" pos:column="94">_In_z_</name> <name pos:line="371" pos:column="101">LPCSTR</name></type> <name pos:line="371" pos:column="108">lpDirectoryOrFileName</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef pos:line="372" pos:column="1">typedef <function_decl><type><name pos:line="372" pos:column="9">BOOL</name></type> (<name pos:line="372" pos:column="15">__cdecl</name> <type:modifier pos:line="372" pos:column="23">*</type:modifier><name pos:line="372" pos:column="24">POPDIRLISTFUNCA</name>)<parameter_list pos:line="372" pos:column="40">(<param><decl><type><name pos:line="372" pos:column="41">_Inout_opt_</name> <name pos:line="372" pos:column="53">LPVOID</name></type> <name pos:line="372" pos:column="60">pvCallerData</name></decl></param>, <param><decl><type><name pos:line="372" pos:column="74">_In_</name> <name pos:line="372" pos:column="79">BOOL</name></type> <name pos:line="372" pos:column="84">bFolder</name></decl></param>, <param><decl><type><name pos:line="372" pos:column="93">_In_z_</name> <name pos:line="372" pos:column="100">LPCSTR</name></type> <name pos:line="372" pos:column="107">lpDirectoryOrFileName</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef pos:line="373" pos:column="1">typedef <function_decl><type><name pos:line="373" pos:column="9">BOOL</name></type> (<name pos:line="373" pos:column="15">__cdecl</name> <type:modifier pos:line="373" pos:column="23">*</type:modifier><name pos:line="373" pos:column="24">POPDIRLISTFUNCW</name>)<parameter_list pos:line="373" pos:column="40">(<param><decl><type><name pos:line="373" pos:column="41">_Inout_opt_</name> <name pos:line="373" pos:column="53">LPVOID</name></type> <name pos:line="373" pos:column="60">pvCallerData</name></decl></param>, <param><decl><type><name pos:line="373" pos:column="74">_In_</name> <name pos:line="373" pos:column="79">BOOL</name></type> <name pos:line="373" pos:column="84">bFolder</name></decl></param>, <param><decl><type><name pos:line="373" pos:column="93">_In_z_</name> <name pos:line="373" pos:column="100">LPCWSTR</name></type> <name pos:line="373" pos:column="108">lpDirectoryOrFileName</name></decl></param>)</parameter_list>;</function_decl></typedef>

<comment type="block" format="doxygen" pos:line="375" pos:column="1">/****************************************************************************
    Options and callback function declarations for SccQueryChanges
****************************************************************************/</comment>

<comment type="block" pos:line="379" pos:column="1">/* Structure used by the SccQueryChanges callback */</comment>
<struct pos:line="380" pos:column="1">struct <name pos:line="380" pos:column="8">QUERYCHANGESDATA_A</name>
<block pos:line="381" pos:column="1">{<public type="default" pos:line="381" pos:column="2">
       <decl_stmt><decl><type><name pos:line="382" pos:column="8">DWORD</name></type>  <name pos:line="382" pos:column="15">dwSize</name></decl>;</decl_stmt>
       <decl_stmt><decl><type><name pos:line="383" pos:column="8">LPCSTR</name></type> <name pos:line="383" pos:column="15">lpFileName</name></decl>;</decl_stmt>
       <decl_stmt><decl><type><name pos:line="384" pos:column="8">DWORD</name></type>  <name pos:line="384" pos:column="15">dwChangeType</name></decl>;</decl_stmt>
       <decl_stmt><decl><type><name pos:line="385" pos:column="8">LPCSTR</name></type> <name pos:line="385" pos:column="15">lpLatestName</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<typedef pos:line="388" pos:column="1">typedef <type pos:line="388" pos:column="9">struct <name pos:line="388" pos:column="16">QUERYCHANGESDATA_A</name></type> <name pos:line="388" pos:column="35">QUERYCHANGESDATA</name>;</typedef>

<struct pos:line="390" pos:column="1">struct <name pos:line="390" pos:column="8">QUERYCHANGESDATA_W</name>
<block pos:line="391" pos:column="1">{<public type="default" pos:line="391" pos:column="2">
       <decl_stmt><decl><type><name pos:line="392" pos:column="8">DWORD</name></type>   <name pos:line="392" pos:column="16">dwSize</name></decl>;</decl_stmt>
       <decl_stmt><decl><type><name pos:line="393" pos:column="8">LPCWSTR</name></type> <name pos:line="393" pos:column="16">lpFileName</name></decl>;</decl_stmt>
       <decl_stmt><decl><type><name pos:line="394" pos:column="8">DWORD</name></type>   <name pos:line="394" pos:column="16">dwChangeType</name></decl>;</decl_stmt>
       <decl_stmt><decl><type><name pos:line="395" pos:column="8">LPCWSTR</name></type> <name pos:line="395" pos:column="16">lpLatestName</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<comment type="block" pos:line="398" pos:column="1">/* Values for dwChangeType 

Note: When SCC_CHANGE_RENAMED_TO is returned, the lpLatestName should contain the new file name in local-path terms.
If the new filename cannot be relativized to the current connection opened, return SCC_CHANGE_DATABASE_DELETED instead.
*/</comment>
<cpp:define pos:line="403" pos:column="1">#<cpp:directive pos:line="403" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="403" pos:column="9">SCC_CHANGE_UNKNOWN</name></cpp:macro>			<cpp:value pos:line="403" pos:column="49">0</cpp:value></cpp:define> <comment type="block" pos:line="403" pos:column="51">/* cannot tell what has changed */</comment>
<cpp:define pos:line="404" pos:column="1">#<cpp:directive pos:line="404" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="404" pos:column="9">SCC_CHANGE_UNCHANGED</name></cpp:macro>		<cpp:value pos:line="404" pos:column="41">1</cpp:value></cpp:define> <comment type="block" pos:line="404" pos:column="43">/* no namespace change for this file */</comment>
<cpp:define pos:line="405" pos:column="1">#<cpp:directive pos:line="405" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="405" pos:column="9">SCC_CHANGE_DIFFERENT</name></cpp:macro>		<cpp:value pos:line="405" pos:column="41">2</cpp:value></cpp:define> <comment type="block" pos:line="405" pos:column="43">/* file with different identity exists in the database */</comment>
<cpp:define pos:line="406" pos:column="1">#<cpp:directive pos:line="406" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="406" pos:column="9">SCC_CHANGE_NONEXISTENT</name></cpp:macro>		<cpp:value pos:line="406" pos:column="41">3</cpp:value></cpp:define> <comment type="block" pos:line="406" pos:column="43">/* file does not exist neither in the database nor locally */</comment>
<cpp:define pos:line="407" pos:column="1">#<cpp:directive pos:line="407" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="407" pos:column="9">SCC_CHANGE_DATABASE_DELETED</name></cpp:macro>	<cpp:value pos:line="407" pos:column="41">4</cpp:value></cpp:define> <comment type="block" pos:line="407" pos:column="43">/* file deleted in the database */</comment>
<cpp:define pos:line="408" pos:column="1">#<cpp:directive pos:line="408" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="408" pos:column="9">SCC_CHANGE_LOCAL_DELETED</name></cpp:macro>	<cpp:value pos:line="408" pos:column="41">5</cpp:value></cpp:define> <comment type="block" pos:line="408" pos:column="43">/* file deleted locally but still exists in the database; if this cannot be determined, you can return SCC_CHANGE_DATABASE_ADDED instead */</comment>
<cpp:define pos:line="409" pos:column="1">#<cpp:directive pos:line="409" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="409" pos:column="9">SCC_CHANGE_DATABASE_ADDED</name></cpp:macro>	<cpp:value pos:line="409" pos:column="41">6</cpp:value></cpp:define> <comment type="block" pos:line="409" pos:column="43">/* file added in the database, does not exist locally */</comment>
<cpp:define pos:line="410" pos:column="1">#<cpp:directive pos:line="410" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="410" pos:column="9">SCC_CHANGE_LOCAL_ADDED</name></cpp:macro>		<cpp:value pos:line="410" pos:column="41">7</cpp:value></cpp:define> <comment type="block" pos:line="410" pos:column="43">/* file does not exist in database, and is a new local file */</comment>
<cpp:define pos:line="411" pos:column="1">#<cpp:directive pos:line="411" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="411" pos:column="9">SCC_CHANGE_RENAMED_TO</name></cpp:macro>		<cpp:value pos:line="411" pos:column="41">8</cpp:value></cpp:define> <comment type="block" pos:line="411" pos:column="43">/* file renamed or moved in the database into lpLatestName */</comment>
<cpp:define pos:line="412" pos:column="1">#<cpp:directive pos:line="412" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="412" pos:column="9">SCC_CHANGE_RENAMED_FROM</name></cpp:macro>		<cpp:value pos:line="412" pos:column="41">9</cpp:value></cpp:define> <comment type="block" pos:line="412" pos:column="43">/* file renamed or moved in the database from lpLatestName; if this is too expensive to track, you can return other flag, like SCC_CHANGE_DATABASE_ADDED */</comment>

<typedef pos:line="414" pos:column="1">typedef <function_decl><type><name pos:line="414" pos:column="9">BOOL</name></type> (<name pos:line="414" pos:column="15">__cdecl</name> <type:modifier pos:line="414" pos:column="23">*</type:modifier><name pos:line="414" pos:column="24">QUERYCHANGESFUNC</name>) <parameter_list pos:line="414" pos:column="42">(<param><decl><type><name pos:line="414" pos:column="43">_Inout_opt_</name> <name pos:line="414" pos:column="55">LPVOID</name></type> <name pos:line="414" pos:column="62">pvCallerData</name></decl></param>, <param><decl><type><name pos:line="414" pos:column="76">_In_</name> <name pos:line="414" pos:column="81">QUERYCHANGESDATA</name> <type:modifier pos:line="414" pos:column="98">*</type:modifier></type> <name pos:line="414" pos:column="100">pChangesData</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef pos:line="415" pos:column="1">typedef <function_decl><type><name pos:line="415" pos:column="9">BOOL</name></type> (<name pos:line="415" pos:column="15">__cdecl</name> <type:modifier pos:line="415" pos:column="23">*</type:modifier><name pos:line="415" pos:column="24">QUERYCHANGESFUNCA</name>)<parameter_list pos:line="415" pos:column="42">(<param><decl><type><name pos:line="415" pos:column="43">_Inout_opt_</name> <name pos:line="415" pos:column="55">LPVOID</name></type> <name pos:line="415" pos:column="62">pvCallerData</name></decl></param>, <param><decl><type><name pos:line="415" pos:column="76">_In_</name> <name pos:line="415" pos:column="81">QUERYCHANGESDATA_A</name> <type:modifier pos:line="415" pos:column="100">*</type:modifier></type> <name pos:line="415" pos:column="102">pChangesData</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef pos:line="416" pos:column="1">typedef <function_decl><type><name pos:line="416" pos:column="9">BOOL</name></type> (<name pos:line="416" pos:column="15">__cdecl</name> <type:modifier pos:line="416" pos:column="23">*</type:modifier><name pos:line="416" pos:column="24">QUERYCHANGESFUNCW</name>)<parameter_list pos:line="416" pos:column="42">(<param><decl><type><name pos:line="416" pos:column="43">_Inout_opt_</name> <name pos:line="416" pos:column="55">LPVOID</name></type> <name pos:line="416" pos:column="62">pvCallerData</name></decl></param>, <param><decl><type><name pos:line="416" pos:column="76">_In_</name> <name pos:line="416" pos:column="81">QUERYCHANGESDATA_W</name> <type:modifier pos:line="416" pos:column="100">*</type:modifier></type> <name pos:line="416" pos:column="102">pChangesData</name></decl></param>)</parameter_list>;</function_decl></typedef>

<comment type="block" format="doxygen" pos:line="418" pos:column="1">/****************************************************************************
    The SCC_CAP_xxx flags are used to determine what capabilites a provider
    has.
****************************************************************************/</comment>
<cpp:define pos:line="422" pos:column="1">#<cpp:directive pos:line="422" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="422" pos:column="9">SCC_CAP_REMOVE</name></cpp:macro>            <cpp:value pos:line="422" pos:column="35">0x00000001L</cpp:value></cpp:define>   <comment type="line" pos:line="422" pos:column="49">// Supports the SCC_Remove command</comment>
<cpp:define pos:line="423" pos:column="1">#<cpp:directive pos:line="423" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="423" pos:column="9">SCC_CAP_RENAME</name></cpp:macro>            <cpp:value pos:line="423" pos:column="35">0x00000002L</cpp:value></cpp:define>   <comment type="line" pos:line="423" pos:column="49">// Supports the SCC_Rename command</comment>
<cpp:define pos:line="424" pos:column="1">#<cpp:directive pos:line="424" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="424" pos:column="9">SCC_CAP_DIFF</name></cpp:macro>              <cpp:value pos:line="424" pos:column="35">0x00000004L</cpp:value></cpp:define>   <comment type="line" pos:line="424" pos:column="49">// Supports the SCC_Diff command</comment>
<cpp:define pos:line="425" pos:column="1">#<cpp:directive pos:line="425" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="425" pos:column="9">SCC_CAP_HISTORY</name></cpp:macro>           <cpp:value pos:line="425" pos:column="35">0x00000008L</cpp:value></cpp:define>   <comment type="line" pos:line="425" pos:column="49">// Supports the SCC_History command</comment>
<cpp:define pos:line="426" pos:column="1">#<cpp:directive pos:line="426" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="426" pos:column="9">SCC_CAP_PROPERTIES</name></cpp:macro>        <cpp:value pos:line="426" pos:column="35">0x00000010L</cpp:value></cpp:define>   <comment type="line" pos:line="426" pos:column="49">// Supports the SCC_Properties command</comment>
<cpp:define pos:line="427" pos:column="1">#<cpp:directive pos:line="427" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="427" pos:column="9">SCC_CAP_RUNSCC</name></cpp:macro>            <cpp:value pos:line="427" pos:column="35">0x00000020L</cpp:value></cpp:define>   <comment type="line" pos:line="427" pos:column="49">// Supports the SCC_RunScc command</comment>
<cpp:define pos:line="428" pos:column="1">#<cpp:directive pos:line="428" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="428" pos:column="9">SCC_CAP_GETCOMMANDOPTIONS</name></cpp:macro> <cpp:value pos:line="428" pos:column="35">0x00000040L</cpp:value></cpp:define>   <comment type="line" pos:line="428" pos:column="49">// Supports the SCC_GetCommandOptions command</comment>
<cpp:define pos:line="429" pos:column="1">#<cpp:directive pos:line="429" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="429" pos:column="9">SCC_CAP_QUERYINFO</name></cpp:macro>         <cpp:value pos:line="429" pos:column="35">0x00000080L</cpp:value></cpp:define>   <comment type="line" pos:line="429" pos:column="49">// Supports the SCC_QueryInfo command</comment>
<cpp:define pos:line="430" pos:column="1">#<cpp:directive pos:line="430" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="430" pos:column="9">SCC_CAP_GETEVENTS</name></cpp:macro>         <cpp:value pos:line="430" pos:column="35">0x00000100L</cpp:value></cpp:define>   <comment type="line" pos:line="430" pos:column="49">// Supports the SCC_GetEvents command</comment>
<cpp:define pos:line="431" pos:column="1">#<cpp:directive pos:line="431" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="431" pos:column="9">SCC_CAP_GETPROJPATH</name></cpp:macro>       <cpp:value pos:line="431" pos:column="35">0x00000200L</cpp:value></cpp:define>   <comment type="line" pos:line="431" pos:column="49">// Supports the SCC_GetProjPath command</comment>
<cpp:define pos:line="432" pos:column="1">#<cpp:directive pos:line="432" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="432" pos:column="9">SCC_CAP_ADDFROMSCC</name></cpp:macro>        <cpp:value pos:line="432" pos:column="35">0x00000400L</cpp:value></cpp:define>   <comment type="line" pos:line="432" pos:column="49">// Supports the SCC_AddFromScc command</comment>
<cpp:define pos:line="433" pos:column="1">#<cpp:directive pos:line="433" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="433" pos:column="9">SCC_CAP_COMMENTCHECKOUT</name></cpp:macro>   <cpp:value pos:line="433" pos:column="35">0x00000800L</cpp:value></cpp:define>   <comment type="line" pos:line="433" pos:column="49">// Supports a comment on Checkout</comment>
<cpp:define pos:line="434" pos:column="1">#<cpp:directive pos:line="434" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="434" pos:column="9">SCC_CAP_COMMENTCHECKIN</name></cpp:macro>    <cpp:value pos:line="434" pos:column="35">0x00001000L</cpp:value></cpp:define>   <comment type="line" pos:line="434" pos:column="49">// Supports a comment on Checkin</comment>
<cpp:define pos:line="435" pos:column="1">#<cpp:directive pos:line="435" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="435" pos:column="9">SCC_CAP_COMMENTADD</name></cpp:macro>        <cpp:value pos:line="435" pos:column="35">0x00002000L</cpp:value></cpp:define>   <comment type="line" pos:line="435" pos:column="49">// Supports a comment on Add</comment>
<cpp:define pos:line="436" pos:column="1">#<cpp:directive pos:line="436" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="436" pos:column="9">SCC_CAP_COMMENTREMOVE</name></cpp:macro>     <cpp:value pos:line="436" pos:column="35">0x00004000L</cpp:value></cpp:define>   <comment type="line" pos:line="436" pos:column="49">// Supports a comment on Remove</comment>
<cpp:define pos:line="437" pos:column="1">#<cpp:directive pos:line="437" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="437" pos:column="9">SCC_CAP_TEXTOUT</name></cpp:macro>           <cpp:value pos:line="437" pos:column="35">0x00008000L</cpp:value></cpp:define>   <comment type="line" pos:line="437" pos:column="49">// Writes text to an IDE-provided output function</comment>
<cpp:define pos:line="438" pos:column="1">#<cpp:directive pos:line="438" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="438" pos:column="9">SCC_CAP_CREATESUBPROJECT</name></cpp:macro>  <cpp:value pos:line="438" pos:column="35">0x00010000L</cpp:value></cpp:define>   <comment type="line" pos:line="438" pos:column="49">// Supports the SccCreateSubProject command</comment>
<cpp:define pos:line="439" pos:column="1">#<cpp:directive pos:line="439" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="439" pos:column="9">SCC_CAP_GETPARENTPROJECT</name></cpp:macro>  <cpp:value pos:line="439" pos:column="35">0x00020000L</cpp:value></cpp:define>   <comment type="line" pos:line="439" pos:column="49">// Supports the SccGetParentProjectPath command</comment>
<cpp:define pos:line="440" pos:column="1">#<cpp:directive pos:line="440" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="440" pos:column="9">SCC_CAP_BATCH</name></cpp:macro>             <cpp:value pos:line="440" pos:column="35">0x00040000L</cpp:value></cpp:define>   <comment type="line" pos:line="440" pos:column="49">// Supports the SccBeginBatch and SccEndBatch commands</comment>
<cpp:define pos:line="441" pos:column="1">#<cpp:directive pos:line="441" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="441" pos:column="9">SCC_CAP_DIRECTORYSTATUS</name></cpp:macro>   <cpp:value pos:line="441" pos:column="35">0x00080000L</cpp:value></cpp:define>   <comment type="line" pos:line="441" pos:column="49">// Supports the querying of directory status</comment>
<cpp:define pos:line="442" pos:column="1">#<cpp:directive pos:line="442" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="442" pos:column="9">SCC_CAP_DIRECTORYDIFF</name></cpp:macro>     <cpp:value pos:line="442" pos:column="35">0x00100000L</cpp:value></cpp:define>   <comment type="line" pos:line="442" pos:column="49">// Supports differencing on directories</comment>
<cpp:define pos:line="443" pos:column="1">#<cpp:directive pos:line="443" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="443" pos:column="9">SCC_CAP_ADD_STORELATEST</name></cpp:macro>   <cpp:value pos:line="443" pos:column="35">0x00200000L</cpp:value></cpp:define>   <comment type="line" pos:line="443" pos:column="49">// Supports storing files without deltas</comment>
<cpp:define pos:line="444" pos:column="1">#<cpp:directive pos:line="444" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="444" pos:column="9">SCC_CAP_HISTORY_MULTFILE</name></cpp:macro>  <cpp:value pos:line="444" pos:column="35">0x00400000L</cpp:value></cpp:define>   <comment type="line" pos:line="444" pos:column="49">// Multiple file history is supported</comment>
<cpp:define pos:line="445" pos:column="1">#<cpp:directive pos:line="445" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="445" pos:column="9">SCC_CAP_IGNORECASE</name></cpp:macro>        <cpp:value pos:line="445" pos:column="35">0x00800000L</cpp:value></cpp:define>   <comment type="line" pos:line="445" pos:column="49">// Supports case insensitive file comparison</comment>
<cpp:define pos:line="446" pos:column="1">#<cpp:directive pos:line="446" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="446" pos:column="9">SCC_CAP_IGNORESPACE</name></cpp:macro>       <cpp:value pos:line="446" pos:column="35">0x01000000L</cpp:value></cpp:define>   <comment type="line" pos:line="446" pos:column="49">// Supports file comparison that ignores white space</comment>
<cpp:define pos:line="447" pos:column="1">#<cpp:directive pos:line="447" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="447" pos:column="9">SCC_CAP_POPULATELIST</name></cpp:macro>      <cpp:value pos:line="447" pos:column="35">0x02000000L</cpp:value></cpp:define>   <comment type="line" pos:line="447" pos:column="49">// Supports finding extra files</comment>
<cpp:define pos:line="448" pos:column="1">#<cpp:directive pos:line="448" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="448" pos:column="9">SCC_CAP_COMMENTPROJECT</name></cpp:macro>    <cpp:value pos:line="448" pos:column="35">0x04000000L</cpp:value></cpp:define>   <comment type="line" pos:line="448" pos:column="49">// Supports comments on create project</comment>
<cpp:define pos:line="449" pos:column="1">#<cpp:directive pos:line="449" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="449" pos:column="9">SCC_CAP_MULTICHECKOUT</name></cpp:macro>     <cpp:value pos:line="449" pos:column="35">0x08000000L</cpp:value></cpp:define>   <comment type="line" pos:line="449" pos:column="49">// Supports multiple checkouts on a file</comment>
												<comment type="line" pos:line="450" pos:column="97">//   (subject to administrator override)</comment>
<cpp:define pos:line="451" pos:column="1">#<cpp:directive pos:line="451" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="451" pos:column="9">SCC_CAP_DIFFALWAYS</name></cpp:macro>        <cpp:value pos:line="451" pos:column="35">0x10000000L</cpp:value></cpp:define>   <comment type="line" pos:line="451" pos:column="49">// Supports diff in all states if under control</comment>
<cpp:define pos:line="452" pos:column="1">#<cpp:directive pos:line="452" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="452" pos:column="9">SCC_CAP_GET_NOUI</name></cpp:macro>          <cpp:value pos:line="452" pos:column="35">0x20000000L</cpp:value></cpp:define>	<comment type="line" pos:line="452" pos:column="49">// Provider doesn't support a UI for SccGet,</comment>
												<comment type="line" pos:line="453" pos:column="97">//   but IDE may still call SccGet function.</comment>
<cpp:define pos:line="454" pos:column="1">#<cpp:directive pos:line="454" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="454" pos:column="9">SCC_CAP_REENTRANT</name></cpp:macro>		  <cpp:value pos:line="454" pos:column="43">0x40000000L</cpp:value></cpp:define>	<comment type="line" pos:line="454" pos:column="57">// Provider is reentrant and thread safe.</comment>
<cpp:define pos:line="455" pos:column="1">#<cpp:directive pos:line="455" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="455" pos:column="9">SCC_CAP_SCCFILE</name></cpp:macro>           <cpp:value pos:line="455" pos:column="35">0x80000000L</cpp:value></cpp:define>   <comment type="line" pos:line="455" pos:column="49">// Supports the MSSCCPRJ.SCC file</comment>
												<comment type="line" pos:line="456" pos:column="97">//   (subject to user/administrator override)</comment>

<comment type="block" format="doxygen" pos:line="458" pos:column="1">/****************************************************************************
    The SCC_EXCAP_xxx values are used to determine what extra capabilites 
	a provider has.
****************************************************************************/</comment>
<cpp:define pos:line="462" pos:column="1">#<cpp:directive pos:line="462" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="462" pos:column="9">SCC_EXCAP_CHECKOUT_LOCALVER</name></cpp:macro>		<cpp:value pos:line="462" pos:column="49">1L</cpp:value></cpp:define>   <comment type="line" pos:line="462" pos:column="54">// Supports the Checkout local version</comment>
<cpp:define pos:line="463" pos:column="1">#<cpp:directive pos:line="463" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="463" pos:column="9">SCC_EXCAP_BACKGROUND_GET</name></cpp:macro>		<cpp:value pos:line="463" pos:column="49">2L</cpp:value></cpp:define>   <comment type="line" pos:line="463" pos:column="54">// Supports the SccBackgroundGet operation</comment>
<cpp:define pos:line="464" pos:column="1">#<cpp:directive pos:line="464" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="464" pos:column="9">SCC_EXCAP_ENUM_CHANGED_FILES</name></cpp:macro>	<cpp:value pos:line="464" pos:column="41">3L</cpp:value></cpp:define>   <comment type="line" pos:line="464" pos:column="46">// Supports the SccEnumChangedFiles operation</comment>
<cpp:define pos:line="465" pos:column="1">#<cpp:directive pos:line="465" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="465" pos:column="9">SCC_EXCAP_POPULATELIST_DIR</name></cpp:macro>		<cpp:value pos:line="465" pos:column="49">4L</cpp:value></cpp:define>   <comment type="line" pos:line="465" pos:column="54">// Supports finding extra directories</comment>
<cpp:define pos:line="466" pos:column="1">#<cpp:directive pos:line="466" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="466" pos:column="9">SCC_EXCAP_QUERYCHANGES</name></cpp:macro>			<cpp:value pos:line="466" pos:column="49">5L</cpp:value></cpp:define>   <comment type="line" pos:line="466" pos:column="54">// Supports enumerating file changes</comment>
<cpp:define pos:line="467" pos:column="1">#<cpp:directive pos:line="467" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="467" pos:column="9">SCC_EXCAP_ADD_FILES_FROM_SCC</name></cpp:macro>	<cpp:value pos:line="467" pos:column="41">6L</cpp:value></cpp:define>   <comment type="line" pos:line="467" pos:column="46">// Supports the SccAddFilesFromSCC operation</comment>
<cpp:define pos:line="468" pos:column="1">#<cpp:directive pos:line="468" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="468" pos:column="9">SCC_EXCAP_GET_USER_OPTIONS</name></cpp:macro>		<cpp:value pos:line="468" pos:column="49">7L</cpp:value></cpp:define>   <comment type="line" pos:line="468" pos:column="54">// Supports the SccGetUserOption function</comment>
<cpp:define pos:line="469" pos:column="1">#<cpp:directive pos:line="469" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="469" pos:column="9">SCC_EXCAP_THREADSAFE_QUERY_INFO</name></cpp:macro>	<cpp:value pos:line="469" pos:column="41">8L</cpp:value></cpp:define>   <comment type="line" pos:line="469" pos:column="46">// Supports calling SccQueryInfo on multiple threads</comment>
<cpp:define pos:line="470" pos:column="1">#<cpp:directive pos:line="470" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="470" pos:column="9">SCC_EXCAP_REMOVE_DIR</name></cpp:macro>			<cpp:value pos:line="470" pos:column="49">9L</cpp:value></cpp:define>   <comment type="line" pos:line="470" pos:column="54">// Supports the SccRemoveDir function</comment>
<cpp:define pos:line="471" pos:column="1">#<cpp:directive pos:line="471" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="471" pos:column="9">SCC_EXCAP_DELETE_CHECKEDOUT</name></cpp:macro>    <cpp:value pos:line="471" pos:column="40">10L</cpp:value></cpp:define>   <comment type="line" pos:line="471" pos:column="46">// Can delete checked out files</comment>
<cpp:define pos:line="472" pos:column="1">#<cpp:directive pos:line="472" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="472" pos:column="9">SCC_EXCAP_RENAME_CHECKEDOUT</name></cpp:macro>	   <cpp:value pos:line="472" pos:column="44">11L</cpp:value></cpp:define>   <comment type="line" pos:line="472" pos:column="50">// Can rename checked out files</comment>
<comment type="line" pos:line="473" pos:column="1">// Note: other capabilities may be added to this list in future releases</comment>
<comment type="line" pos:line="474" pos:column="1">// Providers should play safe and return NotSupported from a call to GetSccExtendedCapabilities</comment>
<comment type="line" pos:line="475" pos:column="1">// for all capabilities that are not supported or are not recognized by the provider.</comment>

<comment type="line" pos:line="477" pos:column="1">// Data structures for background processing messages</comment>
<typedef pos:line="478" pos:column="1">typedef <type><struct pos:line="478" pos:column="9">struct 
<block pos:line="479" pos:column="1">{<public type="default" pos:line="479" pos:column="2">
	<decl_stmt><decl><type><name pos:line="480" pos:column="9">DWORD</name></type> <name pos:line="480" pos:column="15">dwBackgroundOperationID</name></decl>;</decl_stmt>	<comment type="line" pos:line="480" pos:column="41">// ID of the background operation</comment>
</public>}</block></struct></type> <name pos:line="481" pos:column="3">SccMsgDataIsCancelled</name>;</typedef>

<typedef pos:line="483" pos:column="1">typedef <type><struct pos:line="483" pos:column="9">struct 
<block pos:line="484" pos:column="1">{<public type="default" pos:line="484" pos:column="2">
	<decl_stmt><decl><type><name pos:line="485" pos:column="9">DWORD</name></type> <name pos:line="485" pos:column="15">dwBackgroundOperationID</name></decl>;</decl_stmt>	<comment type="line" pos:line="485" pos:column="41">// ID of the background operation</comment>
	<decl_stmt><decl><type><name pos:line="486" pos:column="9">PCSTR</name></type> <name pos:line="486" pos:column="15">szFile</name></decl>;</decl_stmt>					<comment type="line" pos:line="486" pos:column="57">// File path</comment>
</public>}</block></struct></type> <name pos:line="487" pos:column="3">SccMsgDataOnBeforeGetFile</name>;</typedef>

<typedef pos:line="489" pos:column="1">typedef <type><struct pos:line="489" pos:column="9">struct 
<block pos:line="490" pos:column="1">{<public type="default" pos:line="490" pos:column="2">
	<decl_stmt><decl><type><name pos:line="491" pos:column="9">DWORD</name></type> <name pos:line="491" pos:column="15">dwBackgroundOperationID</name></decl>;</decl_stmt>	<comment type="line" pos:line="491" pos:column="41">// ID of the background operation</comment>
	<decl_stmt><decl><type><name pos:line="492" pos:column="9">PCSTR</name></type> <name pos:line="492" pos:column="15">szFile</name></decl>;</decl_stmt>					<comment type="line" pos:line="492" pos:column="57">// File path</comment>
	<decl_stmt><decl><type><name pos:line="493" pos:column="9">SCCRTN</name></type> <name pos:line="493" pos:column="16">sResult</name></decl>;</decl_stmt>					<comment type="line" pos:line="493" pos:column="57">// Result of retrieving of the file</comment>
</public>}</block></struct></type> <name pos:line="494" pos:column="3">SccMsgDataOnAfterGetFile</name>;</typedef>

<typedef pos:line="496" pos:column="1">typedef <type><struct pos:line="496" pos:column="9">struct 
<block pos:line="497" pos:column="1">{<public type="default" pos:line="497" pos:column="2">
	<decl_stmt><decl><type><name pos:line="498" pos:column="9">DWORD</name></type> <name pos:line="498" pos:column="15">dwBackgroundOperationID</name></decl>;</decl_stmt>	<comment type="line" pos:line="498" pos:column="41">// ID of the background operation</comment>
	<decl_stmt><decl><type><name pos:line="499" pos:column="9">PCSTR</name></type> <name pos:line="499" pos:column="15">szMessage</name></decl>;</decl_stmt>		<comment type="line" pos:line="499" pos:column="41">// The message text</comment>
	<decl_stmt><decl><type><name pos:line="500" pos:column="9">BOOL</name></type> <name pos:line="500" pos:column="14">bIsError</name></decl>;</decl_stmt>			<comment type="line" pos:line="500" pos:column="41">// TRUE for an error message; FALSE for a warning or for an informational message</comment>
</public>}</block></struct></type> <name pos:line="501" pos:column="3">SccMsgDataOnMessage</name>;</typedef>

<comment type="block" format="doxygen" pos:line="503" pos:column="1">/****************************************************************************
	The following flags are used for the print call-back that the IDE
	provides on SccInitialize.  
	
	If the IDE supports cancel, it may get one of the Cancel messages.
	In this case, the provider will inform the IDE to show the Cancel
	button with SCC_MSG_STARTCANCEL.  After this, any set of normal
	messages may be sent.  If any of these return SCC_MSG_RTN_CANCEL,
	then the provider will quit the operation and return.  The Provider
	will also poll periodically with SCC_MSG_DOCANCEL to see if the
	user has canceled the operation.  When all operations are done, or
	the user has canceled, SCC_MSG_STOPCANCEL will be sent through.

	The SCC_MSG_INFO, WARNING, and ERROR types are used for messages that
	get displayed in the scrolling list of messages.  SCC_MSG_STATUS is
	a special type that indicates that the text should show up in a 
	status bar or temporary display area.  This message type should not
	remain permanently in the list.

	All background operation has an ID associated with it. The first argument
	of all background processing messages must be casted to 
	the correspondent structure which contains the ID.

****************************************************************************/</comment>
<enum pos:line="527" pos:column="1">enum
<block pos:line="528" pos:column="1">{
	<comment type="line" pos:line="529" pos:column="9">// Return codes</comment>
	<decl><name pos:line="530" pos:column="9">SCC_MSG_RTN_CANCEL</name><init pos:line="530" pos:column="27">=<expr><op:operator pos:line="530" pos:column="28">-</op:operator><lit:literal type="number" pos:line="530" pos:column="29">1</lit:literal></expr></init></decl><op:operator pos:line="530" pos:column="30">,</op:operator>				<comment type="line" pos:line="530" pos:column="57">// Returned from call-back to indicate cancel</comment>
	<decl><name pos:line="531" pos:column="9">SCC_MSG_RTN_OK</name><init pos:line="531" pos:column="23">=<expr><lit:literal type="number" pos:line="531" pos:column="24">0</lit:literal></expr></init></decl><op:operator pos:line="531" pos:column="25">,</op:operator>					<comment type="line" pos:line="531" pos:column="65">// Returned from call-back to continue</comment>
	<comment type="line" pos:line="532" pos:column="9">// Message types</comment>
	<decl><name pos:line="533" pos:column="9">SCC_MSG_INFO</name><init pos:line="533" pos:column="21">=<expr><lit:literal type="number" pos:line="533" pos:column="22">1</lit:literal></expr></init></decl><op:operator pos:line="533" pos:column="23">,</op:operator>						<comment type="line" pos:line="533" pos:column="65">// Message is informational</comment>
	<decl><name pos:line="534" pos:column="9">SCC_MSG_WARNING</name></decl><op:operator pos:line="534" pos:column="24">,</op:operator>					<comment type="line" pos:line="534" pos:column="65">// Message is a warning</comment>
	<decl><name pos:line="535" pos:column="9">SCC_MSG_ERROR</name></decl><op:operator pos:line="535" pos:column="22">,</op:operator>						<comment type="line" pos:line="535" pos:column="65">// Message is an error</comment>
	<decl><name pos:line="536" pos:column="9">SCC_MSG_STATUS</name></decl><op:operator pos:line="536" pos:column="23">,</op:operator>						<comment type="line" pos:line="536" pos:column="65">// Message is meant for status bar</comment>
	<comment type="line" pos:line="537" pos:column="9">// IDE supports Cancel operation</comment>
	<decl><name pos:line="538" pos:column="9">SCC_MSG_DOCANCEL</name></decl><op:operator pos:line="538" pos:column="25">,</op:operator>					<comment type="line" pos:line="538" pos:column="65">// No text, IDE returns 0 or SCC_MSG_RTN_CANCEL</comment>
	<decl><name pos:line="539" pos:column="9">SCC_MSG_STARTCANCEL</name></decl><op:operator pos:line="539" pos:column="28">,</op:operator>				<comment type="line" pos:line="539" pos:column="57">// Start a cancel loop</comment>
	<decl><name pos:line="540" pos:column="9">SCC_MSG_STOPCANCEL</name></decl><op:operator pos:line="540" pos:column="27">,</op:operator>					<comment type="line" pos:line="540" pos:column="65">// Stop the cancel loop</comment>

	<comment type="line" pos:line="542" pos:column="9">// Background processing operations</comment>
	<decl><name pos:line="543" pos:column="9">SCC_MSG_BACKGROUND_IS_CANCELLED</name></decl><op:operator pos:line="543" pos:column="40">,</op:operator>		<comment type="line" pos:line="543" pos:column="57">// IDE returns 0 if the operation is not cancelled or SCC_MSG_RTN_CANCEL if it is.</comment>
											<comment type="line" pos:line="544" pos:column="89">// Cast first argument to SccMsgDataIsCancelled structure pointer. </comment>
	<decl><name pos:line="545" pos:column="9">SCC_MSG_BACKGROUND_ON_BEFORE_GET_FILE</name></decl><op:operator pos:line="545" pos:column="46">,</op:operator>	<comment type="line" pos:line="545" pos:column="49">// Called before file file is retrived. Cast first argument to SccMsgDataOnBeforeGetFile structure pointer. </comment>
	<decl><name pos:line="546" pos:column="9">SCC_MSG_BACKGROUND_ON_AFTER_GET_FILE</name></decl><op:operator pos:line="546" pos:column="45">,</op:operator>	<comment type="line" pos:line="546" pos:column="49">// Called after file was processed. Cast first argument to SccMsgDataOnAfterGetFile structure pointer.</comment>
	<decl><name pos:line="547" pos:column="9">SCC_MSG_BACKGROUND_ON_MESSAGE</name></decl>			<comment type="line" pos:line="547" pos:column="57">// Called to provide information about background processing. Cast first argument to SccMsgDataOnMessage structure pointer.</comment>
}</block>;</enum>

<cpp:define pos:line="550" pos:column="1">#<cpp:directive pos:line="550" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="550" pos:column="9">SCC_FIRST_BACKGROUND_MSG</name></cpp:macro> <cpp:value pos:line="550" pos:column="34">SCC_MSG_BACKGROUND_IS_CANCELLED</cpp:value></cpp:define>
<cpp:define pos:line="551" pos:column="1">#<cpp:directive pos:line="551" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="551" pos:column="9">SCC_LAST_BACKGROUND_MSG</name></cpp:macro> <cpp:value pos:line="551" pos:column="33">SCC_MSG_BACKGROUND_ON_MESSAGE</cpp:value></cpp:define>

<cpp:ifndef pos:line="553" pos:column="1">#<cpp:directive pos:line="553" pos:column="2">ifndef</cpp:directive> <name pos:line="553" pos:column="9">_LPTEXTOUTPROC_DEFINED</name></cpp:ifndef>
<cpp:define pos:line="554" pos:column="1">#<cpp:directive pos:line="554" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="554" pos:column="9">_LPTEXTOUTPROC_DEFINED</name></cpp:macro></cpp:define>
<typedef pos:line="555" pos:column="1">typedef <function_decl><type><name pos:line="555" pos:column="9">long</name></type> (<name pos:line="555" pos:column="15">__cdecl</name> <type:modifier pos:line="555" pos:column="23">*</type:modifier><name pos:line="555" pos:column="24">LPTEXTOUTPROC</name>) <parameter_list pos:line="555" pos:column="39">(<param><decl><type><name pos:line="555" pos:column="40">_In_opt_z_</name></type> <name pos:line="555" pos:column="51">LPCSTR</name></decl></param>, <param><decl><type><name pos:line="555" pos:column="59">_In_</name></type> <name pos:line="555" pos:column="64">DWORD</name></decl></param>)</parameter_list>;</function_decl></typedef>
<cpp:endif pos:line="556" pos:column="1">#<cpp:directive pos:line="556" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="556" pos:column="8">/* _LPTEXTOUTPROC_DEFINED */</comment>


<comment type="block" format="doxygen" pos:line="559" pos:column="1">/****************************************************************************
    nOption values for SccSetOption.
****************************************************************************/</comment>
<cpp:define pos:line="562" pos:column="1">#<cpp:directive pos:line="562" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="562" pos:column="9">SCC_OPT_EVENTQUEUE</name></cpp:macro>      <cpp:value pos:line="562" pos:column="33">0x00000001L</cpp:value></cpp:define>     <comment type="line" pos:line="562" pos:column="49">// Set status of the event queue</comment>
<cpp:define pos:line="563" pos:column="1">#<cpp:directive pos:line="563" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="563" pos:column="9">SCC_OPT_USERDATA</name></cpp:macro>        <cpp:value pos:line="563" pos:column="33">0x00000002L</cpp:value></cpp:define>     <comment type="line" pos:line="563" pos:column="49">// Specify user data for </comment>
                                                <comment type="line" pos:line="564" pos:column="49">// SCC_OPT_NAMECHANGEPFN</comment>
<cpp:define pos:line="565" pos:column="1">#<cpp:directive pos:line="565" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="565" pos:column="9">SCC_OPT_HASCANCELMODE</name></cpp:macro>	<cpp:value pos:line="565" pos:column="33">0x00000003L</cpp:value></cpp:define>     <comment type="line" pos:line="565" pos:column="49">// The IDE can handle Cancel </comment>
                                                <comment type="line" pos:line="566" pos:column="49">// of long running operations</comment>
<cpp:define pos:line="567" pos:column="1">#<cpp:directive pos:line="567" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="567" pos:column="9">SCC_OPT_NAMECHANGEPFN</name></cpp:macro>   <cpp:value pos:line="567" pos:column="33">0x00000004L</cpp:value></cpp:define>     <comment type="line" pos:line="567" pos:column="49">// Set a callback for name changes</comment>
<cpp:define pos:line="568" pos:column="1">#<cpp:directive pos:line="568" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="568" pos:column="9">SCC_OPT_SCCCHECKOUTONLY</name></cpp:macro> <cpp:value pos:line="568" pos:column="33">0x00000005L</cpp:value></cpp:define>     <comment type="line" pos:line="568" pos:column="49">// Disable SS explorer checkout, </comment>
                                                <comment type="line" pos:line="569" pos:column="49">// and don't set working dir</comment>
<cpp:define pos:line="570" pos:column="1">#<cpp:directive pos:line="570" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="570" pos:column="9">SCC_OPT_SHARESUBPROJ</name></cpp:macro>    <cpp:value pos:line="570" pos:column="33">0x00000006L</cpp:value></cpp:define>     <comment type="line" pos:line="570" pos:column="49">// if this is turned on, allow</comment>
                                                <comment type="line" pos:line="571" pos:column="49">// AddFromScc to specify a working</comment>
                                                <comment type="line" pos:line="572" pos:column="49">// dir, try to share into the assoc</comment>
                                                <comment type="line" pos:line="573" pos:column="49">// project if direct descendant.</comment>
<comment type="block" pos:line="574" pos:column="1">/* SCC_OPT_EVENTQUEUE values */</comment>
<cpp:define pos:line="575" pos:column="1">#<cpp:directive pos:line="575" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="575" pos:column="9">SCC_OPT_EQ_DISABLE</name></cpp:macro>      <cpp:value pos:line="575" pos:column="33">0x00L</cpp:value></cpp:define>           <comment type="line" pos:line="575" pos:column="49">// Suspend event queue activity</comment>
<cpp:define pos:line="576" pos:column="1">#<cpp:directive pos:line="576" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="576" pos:column="9">SCC_OPT_EQ_ENABLE</name></cpp:macro>       <cpp:value pos:line="576" pos:column="33">0x01L</cpp:value></cpp:define>           <comment type="line" pos:line="576" pos:column="49">// Enable event queue logging</comment>

<comment type="block" pos:line="578" pos:column="1">/* SCC_OPT_NAMECHANGEPFN callback typedef */</comment>
<typedef pos:line="579" pos:column="1">typedef <function_decl><type><name pos:line="579" pos:column="9">void</name></type> (<name pos:line="579" pos:column="15">__cdecl</name> <type:modifier pos:line="579" pos:column="23">*</type:modifier><name pos:line="579" pos:column="24">OPTNAMECHANGEPFN</name>)<parameter_list pos:line="579" pos:column="41">(<param><decl><type><name pos:line="579" pos:column="42">_Inout_opt_</name> <name pos:line="579" pos:column="54">LONG</name></type> <name pos:line="579" pos:column="59">pvCallerData</name></decl></param>, 
                    <param><decl><type><name pos:line="580" pos:column="21">_In_z_</name> <name pos:line="580" pos:column="28">LPCSTR</name></type> <name pos:line="580" pos:column="35">pszOldName</name></decl></param>, <param><decl><type><name pos:line="580" pos:column="47">_In_z_</name> <name pos:line="580" pos:column="54">LPCSTR</name></type> <name pos:line="580" pos:column="61">pszNewName</name></decl></param>)</parameter_list>;</function_decl></typedef>

<comment type="block" format="doxygen" pos:line="582" pos:column="1">/****************************************************************************
	Values for SCC_OPT_HASCANCELMODE.  By default, it is assumed that the IDE
	will not allow for canceling a long running operation.  The provider must
	handle this on their own in this case.  If the IDE, however, sets this
	option to SCC_OPT_HCM_YES, it means that it will handle canceling the
	operation.  In this case, use the SCC_MSG_xxx flags with the output
	call-back to tell the IDE what messages to display while the operation
	is running.
****************************************************************************/</comment>
<cpp:define pos:line="591" pos:column="1">#<cpp:directive pos:line="591" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="591" pos:column="9">SCC_OPT_HCM_NO</name></cpp:macro>			<cpp:value pos:line="591" pos:column="41">0L</cpp:value></cpp:define>				<comment type="line" pos:line="591" pos:column="73">// (Default) Has no cancel mode,</comment>
												<comment type="line" pos:line="592" pos:column="97">//	Provider must supply if desired</comment>
<cpp:define pos:line="593" pos:column="1">#<cpp:directive pos:line="593" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="593" pos:column="9">SCC_OPT_HCM_YES</name></cpp:macro>			<cpp:value pos:line="593" pos:column="41">1L</cpp:value></cpp:define>				<comment type="line" pos:line="593" pos:column="73">// IDE handles cancel</comment>

<comment type="block" format="doxygen" pos:line="595" pos:column="1">/****************************************************************************
	Values for SCC_OPT_SCCCHECKOUTONLY.  By default, it is assumed that 
	the user may use the gui to get and checkout files from this project,
	and that a working dir should be set,  If this option is explicitly turned on,
	then no working dir is set for the project, and the files may only be gotten
	or checked in or out from scc integration, never from the gui.
****************************************************************************/</comment>
<cpp:define pos:line="602" pos:column="1">#<cpp:directive pos:line="602" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="602" pos:column="9">SCC_OPT_SCO_NO</name></cpp:macro>			<cpp:value pos:line="602" pos:column="41">0L</cpp:value></cpp:define>				<comment type="line" pos:line="602" pos:column="73">// (Default) OK to checkout from GUI</comment>
												<comment type="line" pos:line="603" pos:column="97">//	Working dir is set.</comment>
<cpp:define pos:line="604" pos:column="1">#<cpp:directive pos:line="604" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="604" pos:column="9">SCC_OPT_SCO_YES</name></cpp:macro>			<cpp:value pos:line="604" pos:column="41">1L</cpp:value></cpp:define>				<comment type="line" pos:line="604" pos:column="73">// no GUI checkout, no working dir</comment>

<comment type="block" format="doxygen" pos:line="606" pos:column="1">/****************************************************************************
    nOption values for SccGetUserOption (not binary flags)
****************************************************************************/</comment>
<cpp:define pos:line="609" pos:column="1">#<cpp:directive pos:line="609" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="609" pos:column="9">SCC_USEROPT_CHECKOUT_LOCALVER</name></cpp:macro>   <cpp:value pos:line="609" pos:column="41">1L</cpp:value></cpp:define>     <comment type="line" pos:line="609" pos:column="48">// Whether the user wants to checkout local version of files</comment>

<comment type="block" format="doxygen" pos:line="611" pos:column="1">/****************************************************************************
	Values for SCC_USEROPT_CHECKOUT_LOCALVER.  
****************************************************************************/</comment>
<cpp:define pos:line="614" pos:column="1">#<cpp:directive pos:line="614" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="614" pos:column="9">SCC_USEROPT_COLV_NO</name></cpp:macro>  <cpp:value pos:line="614" pos:column="30">0L</cpp:value></cpp:define>					<comment type="line" pos:line="614" pos:column="65">// Checkout local version is supported and the user </comment>
												<comment type="line" pos:line="615" pos:column="97">// prefers to checkout the tip version of files</comment>
<cpp:define pos:line="616" pos:column="1">#<cpp:directive pos:line="616" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="616" pos:column="9">SCC_USEROPT_COLV_YES</name></cpp:macro> <cpp:value pos:line="616" pos:column="30">1L</cpp:value></cpp:define>					<comment type="line" pos:line="616" pos:column="65">// Checkout local version is supported and the user wants </comment>
												<comment type="line" pos:line="617" pos:column="97">// to checkout local version of files, if that can be detected</comment>
<cpp:define pos:line="618" pos:column="1">#<cpp:directive pos:line="618" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="618" pos:column="9">SCC_USEROPT_COLV_DISABLED</name></cpp:macro> <cpp:value pos:line="618" pos:column="35">2L</cpp:value></cpp:define>			<comment type="line" pos:line="618" pos:column="57">// Checkout local version is not supported. Might have been disabled</comment>
												<comment type="line" pos:line="619" pos:column="97">// by administrator.</comment>

<comment type="block" format="doxygen" pos:line="621" pos:column="1">/****************************************************************************
    Following are the ASCII definitions of the functions.
****************************************************************************/</comment>



<comment type="block" format="doxygen" pos:line="627" pos:column="1">/*******************************************************************************
	Returns a 4 byte version of the provider.  This can be used to check for 
	SCC spec conformance.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="631" pos:column="1">SCCEXTERNC</name> <name pos:line="631" pos:column="12">LONG</name> <name pos:line="631" pos:column="17">EXTFUN</name> <name pos:line="631" pos:column="24">__cdecl</name></type> <name pos:line="631" pos:column="32">SccGetVersion</name><parameter_list pos:line="631" pos:column="45">(<param><decl><type><name pos:line="631" pos:column="46">void</name></type></decl></param>)</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="633" pos:column="1">/*******************************************************************************
	Call this function once per instance of a provider.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="636" pos:column="1">SCCEXTERNC</name> <name pos:line="636" pos:column="12">SCCRTN</name> <name pos:line="636" pos:column="19">EXTFUN</name> <name pos:line="636" pos:column="26">__cdecl</name></type> <name pos:line="636" pos:column="34">SccInitialize</name><argument_list pos:line="636" pos:column="47">(
                        <argument><expr><name pos:line="637" pos:column="25">_Deref_out_</name> <name pos:line="637" pos:column="37">LPVOID</name> <op:operator pos:line="637" pos:column="44">*</op:operator> <name pos:line="637" pos:column="46">ppContext</name></expr></argument>, 
                        <argument><expr><name pos:line="638" pos:column="25">_In_</name> <name pos:line="638" pos:column="30">HWND</name> <name pos:line="638" pos:column="35">hWnd</name></expr></argument>, 
                        <argument><expr><name pos:line="639" pos:column="25">_In_z_</name> <name pos:line="639" pos:column="32">LPCSTR</name> <name pos:line="639" pos:column="39">lpCallerName</name></expr></argument>,
                        <argument><expr><macro><name pos:line="640" pos:column="25">_Out_z_cap_</name><argument_list pos:line="640" pos:column="36">(<argument pos:line="640" pos:column="37">SCC_NAME_SIZE</argument>)</argument_list></macro> <name pos:line="640" pos:column="52">LPSTR</name> <name pos:line="640" pos:column="58">lpSccName</name></expr></argument>, 
                        <argument><expr><name pos:line="641" pos:column="25">_Out_</name> <name pos:line="641" pos:column="31">LPLONG</name> <name pos:line="641" pos:column="38">lpSccCaps</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="642" pos:column="25">_Out_z_cap_</name><argument_list pos:line="642" pos:column="36">(<argument pos:line="642" pos:column="37">SCC_AUXLABEL_SIZE</argument>)</argument_list></macro> <name pos:line="642" pos:column="56">LPSTR</name> <name pos:line="642" pos:column="62">lpAuxPathLabel</name></expr></argument>, 
                        <argument><expr><name pos:line="643" pos:column="25">_Out_</name> <name pos:line="643" pos:column="31">LPLONG</name> <name pos:line="643" pos:column="38">pnCheckoutCommentLen</name></expr></argument>, 
                        <argument><expr><name pos:line="644" pos:column="25">_Out_</name> <name pos:line="644" pos:column="31">LPLONG</name> <name pos:line="644" pos:column="38">pnCommentLen</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="647" pos:column="1">/*******************************************************************************
	Call this function once for every instance of a provider, when it is going
	away.  You must call SccInitialize before calling this function, and should
	not call it with any open projects.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="652" pos:column="1">SCCEXTERNC</name> <name pos:line="652" pos:column="12">SCCRTN</name> <name pos:line="652" pos:column="19">EXTFUN</name> <name pos:line="652" pos:column="26">__cdecl</name></type> <name pos:line="652" pos:column="34">SccUninitialize</name><parameter_list pos:line="652" pos:column="49">(
                        <param><decl><type><name pos:line="653" pos:column="25">_Inout_</name> <name pos:line="653" pos:column="33">LPVOID</name></type> <name pos:line="653" pos:column="40">pContext</name></decl></param>
                        )</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="656" pos:column="1">/*******************************************************************************
	Opens a project.  This function should never be called with an already open
	project on pContext.  The lpUser, lpProjName, and lpAuxProjPath values
	may be modified by the provider.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="661" pos:column="1">SCCEXTERNC</name> <name pos:line="661" pos:column="12">SCCRTN</name> <name pos:line="661" pos:column="19">EXTFUN</name> <name pos:line="661" pos:column="26">__cdecl</name></type> <name pos:line="661" pos:column="34">SccOpenProject</name><parameter_list pos:line="661" pos:column="48">(
                        <param><decl><type><name pos:line="662" pos:column="25">_Inout_</name> <name pos:line="662" pos:column="33">LPVOID</name></type> <name pos:line="662" pos:column="40">pContext</name></decl></param>,
                        <param><decl><type><name pos:line="663" pos:column="25">_In_</name> <name pos:line="663" pos:column="30">HWND</name></type> <name pos:line="663" pos:column="35">hWnd</name></decl></param>, 
                        <param><function_decl><type><name pos:line="664" pos:column="25">_Inout_z_</name></type> <name pos:line="664" pos:column="35">_Inout_cap_</name><parameter_list pos:line="664" pos:column="46">(<param><decl><type><name pos:line="664" pos:column="47">SCC_USER_SIZE</name></type></decl></param>)</parameter_list> <param><decl><type><name pos:line="664" pos:column="62">LPSTR</name></type> <name pos:line="664" pos:column="68">lpUser</name></decl></param><op:operator pos:line="664" pos:column="74">,</op:operator>
                        <param><function_decl><type><name pos:line="665" pos:column="25">_Inout_z_</name></type> <name pos:line="665" pos:column="35">_Inout_cap_</name><parameter_list pos:line="665" pos:column="46">(<param><decl><type><name pos:line="665" pos:column="47">SCC_PRJPATH_SIZE</name></type></decl></param>)</parameter_list> <param><decl><type><name pos:line="665" pos:column="65">LPSTR</name></type> <name pos:line="665" pos:column="71">lpProjName</name></decl></param><op:operator pos:line="665" pos:column="81">,</op:operator>
                        <param><decl><type><name pos:line="666" pos:column="25">_In_z_</name> <name pos:line="666" pos:column="32">LPCSTR</name></type> <name pos:line="666" pos:column="39">lpLocalProjPath</name></decl></param><op:operator pos:line="666" pos:column="54">,</op:operator>
                        <param><function_decl><type><name pos:line="667" pos:column="25">_Inout_z_</name></type> <name pos:line="667" pos:column="35">_Inout_cap_</name><parameter_list pos:line="667" pos:column="46">(<param><decl><type><name pos:line="667" pos:column="47">SCC_PRJPATH_SIZE</name></type></decl></param>)</parameter_list> <param><decl><type><name pos:line="667" pos:column="65">LPSTR</name></type> <name pos:line="667" pos:column="71">lpAuxProjPath</name></decl></param><op:operator pos:line="667" pos:column="84">,</op:operator>
                        <param><decl><type><name pos:line="668" pos:column="25">_In_opt_z_</name> <name pos:line="668" pos:column="36">LPCSTR</name></type> <name pos:line="668" pos:column="43">lpComment</name></decl></param><op:operator pos:line="668" pos:column="52">,</op:operator>
                        <param><decl><type><name pos:line="669" pos:column="25">_In_opt_</name> <name pos:line="669" pos:column="34">LPTEXTOUTPROC</name></type> <name pos:line="669" pos:column="48">lpTextOutProc</name></decl></param><op:operator pos:line="669" pos:column="61">,</op:operator>
                        <param><decl><type><name pos:line="670" pos:column="25">_In_</name> <name pos:line="670" pos:column="30">LONG</name></type> <name pos:line="670" pos:column="35">dwFlags</name></decl></param></function_decl></param></function_decl></param></function_decl></param>
                        )</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="673" pos:column="1">/*******************************************************************************
	Called to close a project opened by SccOpenProject.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="676" pos:column="1">SCCEXTERNC</name> <name pos:line="676" pos:column="12">SCCRTN</name> <name pos:line="676" pos:column="19">EXTFUN</name> <name pos:line="676" pos:column="26">__cdecl</name></type> <name pos:line="676" pos:column="34">SccCloseProject</name><parameter_list pos:line="676" pos:column="49">(
                        <param><decl><type><name pos:line="677" pos:column="25">_Inout_</name> <name pos:line="677" pos:column="33">LPVOID</name></type> <name pos:line="677" pos:column="40">pContext</name></decl></param>
                        )</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="680" pos:column="1">/*******************************************************************************
	Prompts the user for provider project information.  This may include the
	path to a certain project.  The caller must be prepared to accept changes
	to lpUser, lpProjName, lpLocalPath, and lpAuxProjPath.  lpProjName and
	lpAuxProjPath are then used in a call to SccOpenProject.  They should not
	be modified by the caller upon return.  The caller should avoid displaying
	these two parameters upon return, as the provider might use a formatted
	string that is not ready for view.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="689" pos:column="1">SCCEXTERNC</name> <name pos:line="689" pos:column="12">SCCRTN</name> <name pos:line="689" pos:column="19">EXTFUN</name> <name pos:line="689" pos:column="26">__cdecl</name></type> <name pos:line="689" pos:column="34">SccGetProjPath</name><parameter_list pos:line="689" pos:column="48">(
                        <param><decl><type><name pos:line="690" pos:column="25">_Inout_</name> <name pos:line="690" pos:column="33">LPVOID</name></type> <name pos:line="690" pos:column="40">pContext</name></decl></param>, 
                        <param><decl><type><name pos:line="691" pos:column="25">_In_</name> <name pos:line="691" pos:column="30">HWND</name></type> <name pos:line="691" pos:column="35">hWnd</name></decl></param>, 
                        <param><function_decl><type><name pos:line="692" pos:column="25">_Inout_z_</name></type> <name pos:line="692" pos:column="35">_Inout_cap_</name><parameter_list pos:line="692" pos:column="46">(<param><decl><type><name pos:line="692" pos:column="47">SCC_USER_SIZE</name></type></decl></param>)</parameter_list> <param><decl><type><name pos:line="692" pos:column="62">LPSTR</name></type> <name pos:line="692" pos:column="68">lpUser</name></decl></param><op:operator pos:line="692" pos:column="74">,</op:operator>
                        <param><function_decl><type><name pos:line="693" pos:column="25">_Inout_z_</name></type> <name pos:line="693" pos:column="35">_Inout_cap_</name><parameter_list pos:line="693" pos:column="46">(<param><decl><type><name pos:line="693" pos:column="47">SCC_PRJPATH_SIZE</name></type></decl></param>)</parameter_list> <param><decl><type><name pos:line="693" pos:column="65">LPSTR</name></type> <name pos:line="693" pos:column="71">lpProjName</name></decl></param><op:operator pos:line="693" pos:column="81">,</op:operator> 
                        <param><function_decl><type><name pos:line="694" pos:column="25">_Inout_z_</name></type> <name pos:line="694" pos:column="35">_Inout_cap_</name><parameter_list pos:line="694" pos:column="46">(<param><decl><type><name pos:line="694" pos:column="47">_MAX_PATH</name></type></decl></param>)</parameter_list> <param><decl><type><name pos:line="694" pos:column="58">LPSTR</name></type> <name pos:line="694" pos:column="64">lpLocalPath</name></decl></param><op:operator pos:line="694" pos:column="75">,</op:operator>
                        <param><function_decl><type><name pos:line="695" pos:column="25">_Inout_z_</name></type> <name pos:line="695" pos:column="35">_Inout_cap_</name><parameter_list pos:line="695" pos:column="46">(<param><decl><type><name pos:line="695" pos:column="47">SCC_PRJPATH_SIZE</name></type></decl></param>)</parameter_list> <param><decl><type><name pos:line="695" pos:column="65">LPSTR</name></type> <name pos:line="695" pos:column="71">lpAuxProjPath</name></decl></param><op:operator pos:line="695" pos:column="84">,</op:operator>
                        <param><decl><type><name pos:line="696" pos:column="25">_In_</name> <name pos:line="696" pos:column="30">BOOL</name></type> <name pos:line="696" pos:column="35">bAllowChangePath</name></decl></param><op:operator pos:line="696" pos:column="51">,</op:operator>
                        <param><decl><type><name pos:line="697" pos:column="25">_Inout_</name> <name pos:line="697" pos:column="33">LPBOOL</name></type> <name pos:line="697" pos:column="40">pbNew</name></decl></param></function_decl></param></function_decl></param></function_decl></param></function_decl></param>
                        )</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="700" pos:column="1">/*******************************************************************************
	Retrieves a read only copy of a set of files.  The array is a set of files
	on the local disk.  The paths must be fully qualified.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="704" pos:column="1">SCCEXTERNC</name> <name pos:line="704" pos:column="12">SCCRTN</name> <name pos:line="704" pos:column="19">EXTFUN</name> <name pos:line="704" pos:column="26">__cdecl</name></type> <name pos:line="704" pos:column="34">SccGet</name><argument_list pos:line="704" pos:column="40">(
                        <argument><expr><name pos:line="705" pos:column="25">_Inout_</name> <name pos:line="705" pos:column="33">LPVOID</name> <name pos:line="705" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="706" pos:column="25">_In_</name> <name pos:line="706" pos:column="30">HWND</name> <name pos:line="706" pos:column="35">hWnd</name></expr></argument>, 
                        <argument><expr><name pos:line="707" pos:column="25">_In_</name> <name pos:line="707" pos:column="30">LONG</name> <name pos:line="707" pos:column="35">nFiles</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="708" pos:column="25">_In_count_</name><argument_list pos:line="708" pos:column="35">(<argument pos:line="708" pos:column="36">nFiles</argument>)</argument_list></macro> <name pos:line="708" pos:column="44">LPCSTR</name><op:operator pos:line="708" pos:column="50">*</op:operator> <name pos:line="708" pos:column="52">lpFileNames</name></expr></argument>, 
                        <argument><expr><name pos:line="709" pos:column="25">_In_</name> <name pos:line="709" pos:column="30">LONG</name> <name pos:line="709" pos:column="35">dwFlags</name></expr></argument>,
                        <argument><expr><name pos:line="710" pos:column="25">_In_opt_</name> <name pos:line="710" pos:column="34">LPCMDOPTS</name> <name pos:line="710" pos:column="44">pvOptions</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="713" pos:column="1">/*******************************************************************************
	Initiates UI-less background retrieval of a set of files.  
	The array is a set of files on the local disk.  The paths must be fully qualified.
	The function must be thread-safe. It is always called on the thread different
	from the one that loaded the provider.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="719" pos:column="1">SCCEXTERNC</name> <name pos:line="719" pos:column="12">SCCRTN</name> <name pos:line="719" pos:column="19">EXTFUN</name> <name pos:line="719" pos:column="26">__cdecl</name></type> <name pos:line="719" pos:column="34">SccBackgroundGet</name><argument_list pos:line="719" pos:column="50">(
                        <argument><expr><name pos:line="720" pos:column="25">_Inout_</name> <name pos:line="720" pos:column="33">LPVOID</name> <name pos:line="720" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="721" pos:column="25">_In_</name> <name pos:line="721" pos:column="30">LONG</name> <name pos:line="721" pos:column="35">nFiles</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="722" pos:column="25">_In_count_</name><argument_list pos:line="722" pos:column="35">(<argument pos:line="722" pos:column="36">nFiles</argument>)</argument_list></macro> <name pos:line="722" pos:column="44">LPCSTR</name><op:operator pos:line="722" pos:column="50">*</op:operator> <name pos:line="722" pos:column="52">lpFileNames</name></expr></argument>, 
                        <argument><expr><name pos:line="723" pos:column="25">_In_</name> <name pos:line="723" pos:column="30">LONG</name> <name pos:line="723" pos:column="35">dwFlags</name></expr></argument>,
                        <argument><expr><name pos:line="724" pos:column="25">_In_</name> <name pos:line="724" pos:column="30">LONG</name> <name pos:line="724" pos:column="35">dwBackgroundOperationID</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="727" pos:column="1">/*******************************************************************************
	Checks out the array of files.  The array is a set of fully qualified local
	path names.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="731" pos:column="1">SCCEXTERNC</name> <name pos:line="731" pos:column="12">SCCRTN</name> <name pos:line="731" pos:column="19">EXTFUN</name> <name pos:line="731" pos:column="26">__cdecl</name></type> <name pos:line="731" pos:column="34">SccCheckout</name><argument_list pos:line="731" pos:column="45">(
                        <argument><expr><name pos:line="732" pos:column="25">_Inout_</name> <name pos:line="732" pos:column="33">LPVOID</name> <name pos:line="732" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="733" pos:column="25">_In_</name> <name pos:line="733" pos:column="30">HWND</name> <name pos:line="733" pos:column="35">hWnd</name></expr></argument>, 
                        <argument><expr><name pos:line="734" pos:column="25">_In_</name> <name pos:line="734" pos:column="30">LONG</name> <name pos:line="734" pos:column="35">nFiles</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="735" pos:column="25">_In_count_</name><argument_list pos:line="735" pos:column="35">(<argument pos:line="735" pos:column="36">nFiles</argument>)</argument_list></macro> <name pos:line="735" pos:column="44">LPCSTR</name><op:operator pos:line="735" pos:column="50">*</op:operator> <name pos:line="735" pos:column="52">lpFileNames</name></expr></argument>, 
                        <argument><expr><name pos:line="736" pos:column="25">_In_opt_z_</name> <name pos:line="736" pos:column="36">LPCSTR</name> <name pos:line="736" pos:column="43">lpComment</name></expr></argument>, 
                        <argument><expr><name pos:line="737" pos:column="25">_In_</name> <name pos:line="737" pos:column="30">LONG</name> <name pos:line="737" pos:column="35">dwFlags</name></expr></argument>,
                        <argument><expr><name pos:line="738" pos:column="25">_In_opt_</name> <name pos:line="738" pos:column="34">LPCMDOPTS</name> <name pos:line="738" pos:column="44">pvOptions</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="741" pos:column="1">/*******************************************************************************
	Undo a checkout of an array of files.  The array is a set of fully qualified
	local path names.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="745" pos:column="1">SCCEXTERNC</name> <name pos:line="745" pos:column="12">SCCRTN</name> <name pos:line="745" pos:column="19">EXTFUN</name> <name pos:line="745" pos:column="26">__cdecl</name></type> <name pos:line="745" pos:column="34">SccUncheckout</name><argument_list pos:line="745" pos:column="47">(
                        <argument><expr><name pos:line="746" pos:column="25">_Inout_</name> <name pos:line="746" pos:column="33">LPVOID</name> <name pos:line="746" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="747" pos:column="25">_In_</name> <name pos:line="747" pos:column="30">HWND</name> <name pos:line="747" pos:column="35">hWnd</name></expr></argument>, 
                        <argument><expr><name pos:line="748" pos:column="25">_In_</name> <name pos:line="748" pos:column="30">LONG</name> <name pos:line="748" pos:column="35">nFiles</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="749" pos:column="25">_In_count_</name><argument_list pos:line="749" pos:column="35">(<argument pos:line="749" pos:column="36">nFiles</argument>)</argument_list></macro> <name pos:line="749" pos:column="44">LPCSTR</name><op:operator pos:line="749" pos:column="50">*</op:operator> <name pos:line="749" pos:column="52">lpFileNames</name></expr></argument>, 
                        <argument><expr><name pos:line="750" pos:column="25">_In_</name> <name pos:line="750" pos:column="30">LONG</name> <name pos:line="750" pos:column="35">dwFlags</name></expr></argument>,
                        <argument><expr><name pos:line="751" pos:column="25">_In_opt_</name> <name pos:line="751" pos:column="34">LPCMDOPTS</name> <name pos:line="751" pos:column="44">pvOptions</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="754" pos:column="1">/*******************************************************************************
	Make the modifications the user has made to an array of files permanent. The
	file names must be fully qualified local paths.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="758" pos:column="1">SCCEXTERNC</name> <name pos:line="758" pos:column="12">SCCRTN</name> <name pos:line="758" pos:column="19">EXTFUN</name> <name pos:line="758" pos:column="26">__cdecl</name></type> <name pos:line="758" pos:column="34">SccCheckin</name><argument_list pos:line="758" pos:column="44">(
                        <argument><expr><name pos:line="759" pos:column="25">_Inout_</name> <name pos:line="759" pos:column="33">LPVOID</name> <name pos:line="759" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="760" pos:column="25">_In_</name> <name pos:line="760" pos:column="30">HWND</name> <name pos:line="760" pos:column="35">hWnd</name></expr></argument>, 
                        <argument><expr><name pos:line="761" pos:column="25">_In_</name> <name pos:line="761" pos:column="30">LONG</name> <name pos:line="761" pos:column="35">nFiles</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="762" pos:column="25">_In_count_</name><argument_list pos:line="762" pos:column="35">(<argument pos:line="762" pos:column="36">nFiles</argument>)</argument_list></macro> <name pos:line="762" pos:column="44">LPCSTR</name><op:operator pos:line="762" pos:column="50">*</op:operator> <name pos:line="762" pos:column="52">lpFileNames</name></expr></argument>, 
                        <argument><expr><name pos:line="763" pos:column="25">_In_opt_z_</name> <name pos:line="763" pos:column="36">LPCSTR</name> <name pos:line="763" pos:column="43">lpComment</name></expr></argument>, 
                        <argument><expr><name pos:line="764" pos:column="25">_In_</name> <name pos:line="764" pos:column="30">LONG</name> <name pos:line="764" pos:column="35">dwFlags</name></expr></argument>,
                        <argument><expr><name pos:line="765" pos:column="25">_In_opt_</name> <name pos:line="765" pos:column="34">LPCMDOPTS</name> <name pos:line="765" pos:column="44">pvOptions</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="768" pos:column="1">/*******************************************************************************
	Add an array of fully qualified files to the source control system.  The 
	array of flags describe the type of file.  See the SCC_FILETYPE_xxxx flags.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="772" pos:column="1">SCCEXTERNC</name> <name pos:line="772" pos:column="12">SCCRTN</name> <name pos:line="772" pos:column="19">EXTFUN</name> <name pos:line="772" pos:column="26">__cdecl</name></type> <name pos:line="772" pos:column="34">SccAdd</name><argument_list pos:line="772" pos:column="40">(
                        <argument><expr><name pos:line="773" pos:column="25">_Inout_</name> <name pos:line="773" pos:column="33">LPVOID</name> <name pos:line="773" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="774" pos:column="25">_In_</name> <name pos:line="774" pos:column="30">HWND</name> <name pos:line="774" pos:column="35">hWnd</name></expr></argument>, 
                        <argument><expr><name pos:line="775" pos:column="25">_In_</name> <name pos:line="775" pos:column="30">LONG</name> <name pos:line="775" pos:column="35">nFiles</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="776" pos:column="25">_In_count_</name><argument_list pos:line="776" pos:column="35">(<argument pos:line="776" pos:column="36">nFiles</argument>)</argument_list></macro> <name pos:line="776" pos:column="44">LPCSTR</name><op:operator pos:line="776" pos:column="50">*</op:operator> <name pos:line="776" pos:column="52">lpFileNames</name></expr></argument>, 
                        <argument><expr><name pos:line="777" pos:column="25">_In_opt_z_</name> <name pos:line="777" pos:column="36">LPCSTR</name> <name pos:line="777" pos:column="43">lpComment</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="778" pos:column="25">_In_count_</name><argument_list pos:line="778" pos:column="35">(<argument pos:line="778" pos:column="36">nFiles</argument>)</argument_list></macro> <name pos:line="778" pos:column="44">LONG</name> <op:operator pos:line="778" pos:column="49">*</op:operator> <name pos:line="778" pos:column="51">pdwFlags</name></expr></argument>,
                        <argument><expr><name pos:line="779" pos:column="25">_In_opt_</name> <name pos:line="779" pos:column="34">LPCMDOPTS</name> <name pos:line="779" pos:column="44">pvOptions</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="782" pos:column="1">/*******************************************************************************
	Removes the array of fully qualified files from the source control system.
	The files are not removed from the user's disk, unless advanced options
	are set by the user.  Advaned options are defined by the provider.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="787" pos:column="1">SCCEXTERNC</name> <name pos:line="787" pos:column="12">SCCRTN</name> <name pos:line="787" pos:column="19">EXTFUN</name> <name pos:line="787" pos:column="26">__cdecl</name></type> <name pos:line="787" pos:column="34">SccRemove</name><argument_list pos:line="787" pos:column="43">(
                        <argument><expr><name pos:line="788" pos:column="25">_Inout_</name> <name pos:line="788" pos:column="33">LPVOID</name> <name pos:line="788" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="789" pos:column="25">_In_</name> <name pos:line="789" pos:column="30">HWND</name> <name pos:line="789" pos:column="35">hWnd</name></expr></argument>, 
                        <argument><expr><name pos:line="790" pos:column="25">_In_</name> <name pos:line="790" pos:column="30">LONG</name> <name pos:line="790" pos:column="35">nFiles</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="791" pos:column="25">_In_count_</name><argument_list pos:line="791" pos:column="35">(<argument pos:line="791" pos:column="36">nFiles</argument>)</argument_list></macro> <name pos:line="791" pos:column="44">LPCSTR</name><op:operator pos:line="791" pos:column="50">*</op:operator> <name pos:line="791" pos:column="52">lpFileNames</name></expr></argument>,
                        <argument><expr><name pos:line="792" pos:column="25">_In_opt_z_</name> <name pos:line="792" pos:column="36">LPCSTR</name> <name pos:line="792" pos:column="43">lpComment</name></expr></argument>,
                        <argument><expr><name pos:line="793" pos:column="25">_In_</name> <name pos:line="793" pos:column="30">LONG</name> <name pos:line="793" pos:column="35">dwFlags</name></expr></argument>,
                        <argument><expr><name pos:line="794" pos:column="25">_In_opt_</name> <name pos:line="794" pos:column="34">LPCMDOPTS</name> <name pos:line="794" pos:column="44">pvOptions</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="797" pos:column="1">/*******************************************************************************
	Enables us to avoid prompting for user input more than once during a
	"batched" operation. SccBeginBatch and SccEndBatch are used as a pair
	to indicate the beginning and end of an operation. They cannot be nested.
	SccBeginBatch sets flag indicating that a batch operation is in progress.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="803" pos:column="1">SCCEXTERNC</name> <name pos:line="803" pos:column="12">SCCRTN</name> <name pos:line="803" pos:column="19">EXTFUN</name> <name pos:line="803" pos:column="26">__cdecl</name></type> <name pos:line="803" pos:column="34">SccBeginBatch</name><parameter_list pos:line="803" pos:column="47">(<param><decl><type><name pos:line="803" pos:column="48">void</name></type></decl></param>)</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="805" pos:column="1">/*******************************************************************************
	Enables us to avoid prompting for user input more than once during a
	"batched" operation. SccBeginBatch and SccEndBatch are used as a pair
	to indicate the beginning and end of an operation. They cannot be nested.
	SccEndBatch clears the batch operation in progress flag.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="811" pos:column="1">SCCEXTERNC</name> <name pos:line="811" pos:column="12">SCCRTN</name> <name pos:line="811" pos:column="19">EXTFUN</name> <name pos:line="811" pos:column="26">__cdecl</name></type> <name pos:line="811" pos:column="34">SccEndBatch</name><parameter_list pos:line="811" pos:column="45">(<param><decl><type><name pos:line="811" pos:column="46">void</name></type></decl></param>)</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="813" pos:column="1">/*******************************************************************************
	Renames the given file to a new name in the source control system.  The
	provider should not attempt to access the file on disk.  It is the
	caller's responsibility to rename the file on disk.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="818" pos:column="1">SCCEXTERNC</name> <name pos:line="818" pos:column="12">SCCRTN</name> <name pos:line="818" pos:column="19">EXTFUN</name> <name pos:line="818" pos:column="26">__cdecl</name></type> <name pos:line="818" pos:column="34">SccRename</name><parameter_list pos:line="818" pos:column="43">(
                        <param><decl><type><name pos:line="819" pos:column="25">_Inout_</name> <name pos:line="819" pos:column="33">LPVOID</name></type> <name pos:line="819" pos:column="40">pContext</name></decl></param>, 
                        <param><decl><type><name pos:line="820" pos:column="25">_In_</name> <name pos:line="820" pos:column="30">HWND</name></type> <name pos:line="820" pos:column="35">hWnd</name></decl></param>, 
                        <param><decl><type><name pos:line="821" pos:column="25">_In_z_</name> <name pos:line="821" pos:column="32">LPCSTR</name></type> <name pos:line="821" pos:column="39">lpFileName</name></decl></param>,
                        <param><decl><type><name pos:line="822" pos:column="25">_In_z_</name> <name pos:line="822" pos:column="32">LPCSTR</name></type> <name pos:line="822" pos:column="39">lpNewName</name></decl></param>
                        )</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="825" pos:column="1">/*******************************************************************************
	Show the differences between the local users fully qualified file and the
	version under source control.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="829" pos:column="1">SCCEXTERNC</name> <name pos:line="829" pos:column="12">SCCRTN</name> <name pos:line="829" pos:column="19">EXTFUN</name> <name pos:line="829" pos:column="26">__cdecl</name></type> <name pos:line="829" pos:column="34">SccDiff</name><parameter_list pos:line="829" pos:column="41">(
                        <param><decl><type><name pos:line="830" pos:column="25">_Inout_</name> <name pos:line="830" pos:column="33">LPVOID</name></type> <name pos:line="830" pos:column="40">pContext</name></decl></param>, 
                        <param><decl><type><name pos:line="831" pos:column="25">_In_</name> <name pos:line="831" pos:column="30">HWND</name></type> <name pos:line="831" pos:column="35">hWnd</name></decl></param>, 
                        <param><decl><type><name pos:line="832" pos:column="25">_In_z_</name> <name pos:line="832" pos:column="32">LPCSTR</name></type> <name pos:line="832" pos:column="39">lpFileName</name></decl></param>, 
                        <param><decl><type><name pos:line="833" pos:column="25">_In_</name> <name pos:line="833" pos:column="30">LONG</name></type> <name pos:line="833" pos:column="35">dwFlags</name></decl></param>,
                        <param><decl><type><name pos:line="834" pos:column="25">_In_opt_</name> <name pos:line="834" pos:column="34">LPCMDOPTS</name></type> <name pos:line="834" pos:column="44">pvOptions</name></decl></param>
                        )</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="837" pos:column="1">/*******************************************************************************
	Show the differences between the local user's fully qualified directory and
	the project under source control.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="841" pos:column="1">SCCEXTERNC</name> <name pos:line="841" pos:column="12">SCCRTN</name> <name pos:line="841" pos:column="19">EXTFUN</name> <name pos:line="841" pos:column="26">__cdecl</name></type> <name pos:line="841" pos:column="34">SccDirDiff</name><parameter_list pos:line="841" pos:column="44">(
                        <param><decl><type><name pos:line="842" pos:column="25">_Inout_</name> <name pos:line="842" pos:column="33">LPVOID</name></type> <name pos:line="842" pos:column="40">pContext</name></decl></param>, 
                        <param><decl><type><name pos:line="843" pos:column="25">_In_</name> <name pos:line="843" pos:column="30">HWND</name></type> <name pos:line="843" pos:column="35">hWnd</name></decl></param>, 
                        <param><decl><type><name pos:line="844" pos:column="25">_In_z_</name> <name pos:line="844" pos:column="32">LPCSTR</name></type> <name pos:line="844" pos:column="39">lpDirName</name></decl></param>, 
                        <param><decl><type><name pos:line="845" pos:column="25">_In_</name> <name pos:line="845" pos:column="30">LONG</name></type> <name pos:line="845" pos:column="35">dwFlags</name></decl></param>,
                        <param><decl><type><name pos:line="846" pos:column="25">_In_opt_</name> <name pos:line="846" pos:column="34">LPCMDOPTS</name></type> <name pos:line="846" pos:column="44">pvOptions</name></decl></param>
                        )</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="849" pos:column="1">/*******************************************************************************
	Show the history for an array of fully qualified local file names.  The
	provider may not always support an array of files, in which case only the
	first files history will be shown.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="854" pos:column="1">SCCEXTERNC</name> <name pos:line="854" pos:column="12">SCCRTN</name> <name pos:line="854" pos:column="19">EXTFUN</name> <name pos:line="854" pos:column="26">__cdecl</name></type> <name pos:line="854" pos:column="34">SccHistory</name><argument_list pos:line="854" pos:column="44">(
                        <argument><expr><name pos:line="855" pos:column="25">_Inout_</name> <name pos:line="855" pos:column="33">LPVOID</name> <name pos:line="855" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="856" pos:column="25">_In_</name> <name pos:line="856" pos:column="30">HWND</name> <name pos:line="856" pos:column="35">hWnd</name></expr></argument>, 
                        <argument><expr><name pos:line="857" pos:column="25">_In_</name> <name pos:line="857" pos:column="30">LONG</name> <name pos:line="857" pos:column="35">nFiles</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="858" pos:column="25">_In_count_</name><argument_list pos:line="858" pos:column="35">(<argument pos:line="858" pos:column="36">nFiles</argument>)</argument_list></macro> <name pos:line="858" pos:column="44">LPCSTR</name><op:operator pos:line="858" pos:column="50">*</op:operator> <name pos:line="858" pos:column="52">lpFileNames</name></expr></argument>, 
                        <argument><expr><name pos:line="859" pos:column="25">_In_</name> <name pos:line="859" pos:column="30">LONG</name> <name pos:line="859" pos:column="35">dwFlags</name></expr></argument>,
                        <argument><expr><name pos:line="860" pos:column="25">_In_opt_</name> <name pos:line="860" pos:column="34">LPCMDOPTS</name> <name pos:line="860" pos:column="44">pvOptions</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="863" pos:column="1">/*******************************************************************************
	Show the properties of a fully qualified file.  The properties are defined
	by the provider and may be different for each one.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="867" pos:column="1">SCCEXTERNC</name> <name pos:line="867" pos:column="12">SCCRTN</name> <name pos:line="867" pos:column="19">EXTFUN</name> <name pos:line="867" pos:column="26">__cdecl</name></type> <name pos:line="867" pos:column="34">SccProperties</name><parameter_list pos:line="867" pos:column="47">(
                        <param><decl><type><name pos:line="868" pos:column="25">_Inout_</name> <name pos:line="868" pos:column="33">LPVOID</name></type> <name pos:line="868" pos:column="40">pContext</name></decl></param>, 
                        <param><decl><type><name pos:line="869" pos:column="25">_In_</name> <name pos:line="869" pos:column="30">HWND</name></type> <name pos:line="869" pos:column="35">hWnd</name></decl></param>, 
                        <param><decl><type><name pos:line="870" pos:column="25">_In_z_</name> <name pos:line="870" pos:column="32">LPCSTR</name></type> <name pos:line="870" pos:column="39">lpFileName</name></decl></param>
                        )</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="873" pos:column="1">/*******************************************************************************
	Examine a list of fully qualified files for their current status.  The
	return array will be a bitmask of SCC_STATUS_xxxx bits.  A provider may
	not support all of the bit types.  For example, SCC_STATUS_OUTOFDATE may
	be expensive for some provider to provide.  In this case the bit is simply
	not set.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="880" pos:column="1">SCCEXTERNC</name> <name pos:line="880" pos:column="12">SCCRTN</name> <name pos:line="880" pos:column="19">EXTFUN</name> <name pos:line="880" pos:column="26">__cdecl</name></type> <name pos:line="880" pos:column="34">SccQueryInfo</name><argument_list pos:line="880" pos:column="46">(
                        <argument><expr><name pos:line="881" pos:column="25">_Inout_</name> <name pos:line="881" pos:column="33">LPVOID</name> <name pos:line="881" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="882" pos:column="25">_In_</name> <name pos:line="882" pos:column="30">LONG</name> <name pos:line="882" pos:column="35">nFiles</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="883" pos:column="25">_In_count_</name><argument_list pos:line="883" pos:column="35">(<argument pos:line="883" pos:column="36">nFiles</argument>)</argument_list></macro> <name pos:line="883" pos:column="44">LPCSTR</name><op:operator pos:line="883" pos:column="50">*</op:operator> <name pos:line="883" pos:column="52">lpFileNames</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="884" pos:column="25">_Out_cap_</name><argument_list pos:line="884" pos:column="34">(<argument pos:line="884" pos:column="35">nFiles</argument>)</argument_list></macro> <name pos:line="884" pos:column="43">LPLONG</name> <name pos:line="884" pos:column="50">lpStatus</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="887" pos:column="1">/*******************************************************************************
	Examine a list of fully qualified dirs for their current status.  The
	return array will be a bitmask of SCC_DIRSTATUS_xxxx bits.  A provider may
	not support all of the bit types.  For example, SCC_DIRSTATUS_EMPTYPROJ may
	be expensive for some provider to provide.  In this case the bit is simply
	not set.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="894" pos:column="1">SCCEXTERNC</name> <name pos:line="894" pos:column="12">SCCRTN</name> <name pos:line="894" pos:column="19">EXTFUN</name> <name pos:line="894" pos:column="26">__cdecl</name></type> <name pos:line="894" pos:column="34">SccDirQueryInfo</name><argument_list pos:line="894" pos:column="49">(
                        <argument><expr><name pos:line="895" pos:column="25">_Inout_</name> <name pos:line="895" pos:column="33">LPVOID</name> <name pos:line="895" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="896" pos:column="25">_In_</name> <name pos:line="896" pos:column="30">LONG</name> <name pos:line="896" pos:column="35">nDirs</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="897" pos:column="25">_In_count_</name><argument_list pos:line="897" pos:column="35">(<argument pos:line="897" pos:column="36">nDirs</argument>)</argument_list></macro> <name pos:line="897" pos:column="43">LPCSTR</name><op:operator pos:line="897" pos:column="49">*</op:operator> <name pos:line="897" pos:column="51">lpDirNames</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="898" pos:column="25">_Out_cap_</name><argument_list pos:line="898" pos:column="34">(<argument pos:line="898" pos:column="35">nDirs</argument>)</argument_list></macro> <name pos:line="898" pos:column="42">LPLONG</name> <name pos:line="898" pos:column="49">lpStatus</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="901" pos:column="1">/*******************************************************************************
	Like SccQueryInfo, this function will examine the list of files for their
	current status.  In addition, it will use the pfnPopulate function to 
	notify the caller when a file does not match the critera for the nCommand.
	For example, if the command is SCC_COMMAND_CHECKIN, and a file in the list
	is not checked out, then the callback is used to tell the caller this.  
	Finally, the provider may find other files that could be part of the command
	and add them.  This allows a VB user to check out a .bmp file that is used
	by their VB project, but does not appear in the VB makefile.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="911" pos:column="1">SCCEXTERNC</name> <name pos:line="911" pos:column="12">SCCRTN</name> <name pos:line="911" pos:column="19">EXTFUN</name> <name pos:line="911" pos:column="26">__cdecl</name></type> <name pos:line="911" pos:column="34">SccPopulateList</name><argument_list pos:line="911" pos:column="49">(
                        <argument><expr><name pos:line="912" pos:column="25">_Inout_</name> <name pos:line="912" pos:column="33">LPVOID</name> <name pos:line="912" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="913" pos:column="25">_In_</name> enum <name pos:line="913" pos:column="35">SCCCOMMAND</name> <name pos:line="913" pos:column="46">nCommand</name></expr></argument>, 
                        <argument><expr><name pos:line="914" pos:column="25">_In_</name> <name pos:line="914" pos:column="30">LONG</name> <name pos:line="914" pos:column="35">nFiles</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="915" pos:column="25">_In_count_</name><argument_list pos:line="915" pos:column="35">(<argument pos:line="915" pos:column="36">nFiles</argument>)</argument_list></macro> <name pos:line="915" pos:column="44">LPCSTR</name><op:operator pos:line="915" pos:column="50">*</op:operator> <name pos:line="915" pos:column="52">lpFileNames</name></expr></argument>, 
                        <argument><expr><name pos:line="916" pos:column="25">_In_</name> <name pos:line="916" pos:column="30">POPLISTFUNC</name> <name pos:line="916" pos:column="42">pfnPopulate</name></expr></argument>, 
                        <argument><expr><name pos:line="917" pos:column="25">_Inout_opt_</name> <name pos:line="917" pos:column="37">LPVOID</name> <name pos:line="917" pos:column="44">pvCallerData</name></expr></argument>,
						<argument><expr><macro><name pos:line="918" pos:column="49">_Out_cap_</name><argument_list pos:line="918" pos:column="58">(<argument pos:line="918" pos:column="59">nFiles</argument>)</argument_list></macro> <name pos:line="918" pos:column="67">LPLONG</name> <name pos:line="918" pos:column="74">lpStatus</name></expr></argument>, 
						<argument><expr><name pos:line="919" pos:column="49">_In_</name> <name pos:line="919" pos:column="54">LONG</name> <name pos:line="919" pos:column="59">dwFlags</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="922" pos:column="1">/*******************************************************************************
	Like SccPopulateList, this function will examine the list of directories and 
	will use the pfnPopulate function to notify the caller when a source control 
	project does not match the client's local directories.
	This function can be used to enumerate the subprojects of one project, 
	or to enumerate local folders that don't have matching projects, etc.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="929" pos:column="1">SCCEXTERNC</name> <name pos:line="929" pos:column="12">SCCRTN</name> <name pos:line="929" pos:column="19">EXTFUN</name> <name pos:line="929" pos:column="26">__cdecl</name></type> <name pos:line="929" pos:column="34">SccPopulateDirList</name><argument_list pos:line="929" pos:column="52">(
                        <argument><expr><name pos:line="930" pos:column="25">_Inout_</name> <name pos:line="930" pos:column="33">LPVOID</name> <name pos:line="930" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="931" pos:column="25">_In_</name> <name pos:line="931" pos:column="30">LONG</name> <name pos:line="931" pos:column="35">nDirs</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="932" pos:column="25">_In_count_</name><argument_list pos:line="932" pos:column="35">(<argument pos:line="932" pos:column="36">nDirs</argument>)</argument_list></macro> <name pos:line="932" pos:column="43">LPCSTR</name><op:operator pos:line="932" pos:column="49">*</op:operator> <name pos:line="932" pos:column="51">lpDirPaths</name></expr></argument>, 
                        <argument><expr><name pos:line="933" pos:column="25">_In_</name> <name pos:line="933" pos:column="30">POPDIRLISTFUNC</name> <name pos:line="933" pos:column="45">pfnPopulate</name></expr></argument>, 
                        <argument><expr><name pos:line="934" pos:column="25">_Inout_opt_</name> <name pos:line="934" pos:column="37">LPVOID</name> <name pos:line="934" pos:column="44">pvCallerData</name></expr></argument>,
						<argument><expr><name pos:line="935" pos:column="49">_In_</name> <name pos:line="935" pos:column="54">LONG</name> <name pos:line="935" pos:column="59">fOptions</name></expr></argument> 
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="938" pos:column="1">/*******************************************************************************
	Like SccQueryInfo, this function will examine the list of files for their
	current status and history.  
	For each file the provider will call back the IDE giving more infomration 
	about the file (e.g. file was deleted, or file was renamed to XXXX, or
	another file with the same name was already added, etc)
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="945" pos:column="1">SCCEXTERNC</name> <name pos:line="945" pos:column="12">SCCRTN</name> <name pos:line="945" pos:column="19">EXTFUN</name> <name pos:line="945" pos:column="26">__cdecl</name></type> <name pos:line="945" pos:column="34">SccQueryChanges</name><argument_list pos:line="945" pos:column="49">(
						<argument><expr><name pos:line="946" pos:column="49">_Inout_</name> <name pos:line="946" pos:column="57">LPVOID</name> <name pos:line="946" pos:column="64">pContext</name></expr></argument>, 
						<argument><expr><name pos:line="947" pos:column="49">_In_</name> <name pos:line="947" pos:column="54">LONG</name> <name pos:line="947" pos:column="59">nFiles</name></expr></argument>, 
						<argument><expr><macro><name pos:line="948" pos:column="49">_In_count_</name><argument_list pos:line="948" pos:column="59">(<argument pos:line="948" pos:column="60">nFiles</argument>)</argument_list></macro> <name pos:line="948" pos:column="68">LPCSTR</name> <op:operator pos:line="948" pos:column="75">*</op:operator><name pos:line="948" pos:column="76">lpFileNames</name></expr></argument>, 
						<argument><expr><name pos:line="949" pos:column="49">_In_</name> <name pos:line="949" pos:column="54">QUERYCHANGESFUNC</name> <name pos:line="949" pos:column="71">pfnCallback</name></expr></argument>,
						<argument><expr><name pos:line="950" pos:column="49">_Inout_opt_</name> <name pos:line="950" pos:column="61">LPVOID</name> <name pos:line="950" pos:column="68">pvCallerData</name></expr></argument>
						)</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="953" pos:column="1">/*******************************************************************************
	SccGetEvents runs in the background checking the status of files that the
	caller has asked about (via SccQueryInfo).  When the status changes, it 
	builds a list of those changes that the caller may exhaust on idle.  This
	function must take virtually no time to run, or the performance of the 
	caller will start to degrade.  For this reason, some providers may choose
	not to implement this function.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="961" pos:column="1">SCCEXTERNC</name> <name pos:line="961" pos:column="12">SCCRTN</name> <name pos:line="961" pos:column="19">EXTFUN</name> <name pos:line="961" pos:column="26">__cdecl</name></type> <name pos:line="961" pos:column="34">SccGetEvents</name><argument_list pos:line="961" pos:column="46">(
                        <argument><expr><name pos:line="962" pos:column="25">_Inout_</name> <name pos:line="962" pos:column="33">LPVOID</name> <name pos:line="962" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="963" pos:column="25">_Out_z_cap_</name><argument_list pos:line="963" pos:column="36">(<argument pos:line="963" pos:column="37">MAX_PATH + 1</argument>)</argument_list></macro> <name pos:line="963" pos:column="51">LPSTR</name> <name pos:line="963" pos:column="57">lpFileName</name></expr></argument>,
                        <argument><expr><name pos:line="964" pos:column="25">_Out_</name> <name pos:line="964" pos:column="31">LPLONG</name> <name pos:line="964" pos:column="38">lpStatus</name></expr></argument>,
                        <argument><expr><name pos:line="965" pos:column="25">_Out_</name> <name pos:line="965" pos:column="31">LPLONG</name> <name pos:line="965" pos:column="38">pnEventsRemaining</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="968" pos:column="1">/*******************************************************************************
	This function allows a user to access the full range of features of the
	source control system.  This might involve launching the native front end
	to the product.  Optionally, a list of files are given for the call.  This
	allows the provider to immediately select or subset their list.  If the
	provider does not support this feature, it simply ignores the values.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="975" pos:column="1">SCCEXTERNC</name> <name pos:line="975" pos:column="12">SCCRTN</name> <name pos:line="975" pos:column="19">EXTFUN</name> <name pos:line="975" pos:column="26">__cdecl</name></type> <name pos:line="975" pos:column="34">SccRunScc</name><argument_list pos:line="975" pos:column="43">(
                        <argument><expr><name pos:line="976" pos:column="25">_Inout_</name> <name pos:line="976" pos:column="33">LPVOID</name> <name pos:line="976" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="977" pos:column="25">_In_</name> <name pos:line="977" pos:column="30">HWND</name> <name pos:line="977" pos:column="35">hWnd</name></expr></argument>, 
                        <argument><expr><name pos:line="978" pos:column="25">_In_</name> <name pos:line="978" pos:column="30">LONG</name> <name pos:line="978" pos:column="35">nFiles</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="979" pos:column="25">_In_count_</name><argument_list pos:line="979" pos:column="35">(<argument pos:line="979" pos:column="36">nFiles</argument>)</argument_list></macro> <name pos:line="979" pos:column="44">LPCSTR</name><op:operator pos:line="979" pos:column="50">*</op:operator> <name pos:line="979" pos:column="52">lpFileNames</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="982" pos:column="1">/*******************************************************************************
	This function will prompt the user for advaned options for the given
	command.  Call it once with ppvOptions==NULL to see if the provider
	actually supports the feature.  Call it again when the user wants to see
	the advaned options (usually implemented as an Advaned button on a dialog).
	If a valid *ppvOptions is returned from the second call, then this value
	becomes the pvOptions value for the SccGet, SccCheckout, SccCheckin, etc...
	functions.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="991" pos:column="1">SCCEXTERNC</name> <name pos:line="991" pos:column="12">SCCRTN</name> <name pos:line="991" pos:column="19">EXTFUN</name> <name pos:line="991" pos:column="26">__cdecl</name></type> <name pos:line="991" pos:column="34">SccGetCommandOptions</name><argument_list pos:line="991" pos:column="54">(
                        <argument><expr><name pos:line="992" pos:column="25">_Inout_</name> <name pos:line="992" pos:column="33">LPVOID</name> <name pos:line="992" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="993" pos:column="25">_In_</name> <name pos:line="993" pos:column="30">HWND</name> <name pos:line="993" pos:column="35">hWnd</name></expr></argument>, 
                        <argument><expr><name pos:line="994" pos:column="25">_In_</name> enum <name pos:line="994" pos:column="35">SCCCOMMAND</name> <name pos:line="994" pos:column="46">nCommand</name></expr></argument>,
                        <argument><expr><name pos:line="995" pos:column="25">_Deref_opt_out_opt_</name> <name pos:line="995" pos:column="45">LPCMDOPTS</name> <op:operator pos:line="995" pos:column="55">*</op:operator> <name pos:line="995" pos:column="57">ppvOptions</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="998" pos:column="1">/*******************************************************************************
	SccGetUserOption is a generic function used to retrieve a variety of 
	user-specific options. Each option starts with SCC_USEROPT_xxx and has its own 
	defined set of values.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="1003" pos:column="1">SCCEXTERNC</name> <name pos:line="1003" pos:column="12">SCCRTN</name> <name pos:line="1003" pos:column="19">EXTFUN</name> <name pos:line="1003" pos:column="26">__cdecl</name></type> <name pos:line="1003" pos:column="34">SccGetUserOption</name><parameter_list pos:line="1003" pos:column="50">(
                        <param><decl><type><name pos:line="1004" pos:column="25">_Inout_</name> <name pos:line="1004" pos:column="33">LPVOID</name></type> <name pos:line="1004" pos:column="40">pContext</name></decl></param>, 
                        <param><decl><type><name pos:line="1005" pos:column="25">_In_</name> <name pos:line="1005" pos:column="30">LONG</name></type> <name pos:line="1005" pos:column="35">nOption</name></decl></param>,
                        <param><decl><type><name pos:line="1006" pos:column="25">_Out_</name> <name pos:line="1006" pos:column="31">LPLONG</name></type> <name pos:line="1006" pos:column="38">lpVal</name></decl></param> 
						)</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="1009" pos:column="1">/*******************************************************************************
	This function allows the user to browse for files that are already in the
	source control system and then make those files part of the current project.
	This is handy, for example, to get a common header file into the current
	project without having to copy the file.  The return array of files
	(lplpFileNames) contains the list of files that the user wants added to
	the current makefile/project.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="1017" pos:column="1">SCCEXTERNC</name> <name pos:line="1017" pos:column="12">SCCRTN</name> <name pos:line="1017" pos:column="19">EXTFUN</name> <name pos:line="1017" pos:column="26">__cdecl</name></type> <name pos:line="1017" pos:column="34">SccAddFromScc</name><argument_list pos:line="1017" pos:column="47">(
                        <argument><expr><name pos:line="1018" pos:column="25">_Inout_</name> <name pos:line="1018" pos:column="33">LPVOID</name> <name pos:line="1018" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="1019" pos:column="25">_In_</name> <name pos:line="1019" pos:column="30">HWND</name> <name pos:line="1019" pos:column="35">hWnd</name></expr></argument>, 
                        <argument><expr><name pos:line="1020" pos:column="25">_Out_</name> <name pos:line="1020" pos:column="31">LPLONG</name> <name pos:line="1020" pos:column="38">pnFiles</name></expr></argument>,
                        <argument><expr><macro><name pos:line="1021" pos:column="25">_Out_cap_</name><argument_list pos:line="1021" pos:column="34">(<argument pos:line="1021" pos:column="35">*pnFiles</argument>)</argument_list></macro> <name pos:line="1021" pos:column="45">LPCSTR</name><op:operator pos:line="1021" pos:column="51">*</op:operator><op:operator pos:line="1021" pos:column="52">*</op:operator> <name pos:line="1021" pos:column="54">lplpFileNames</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="1024" pos:column="1">/*******************************************************************************
	SccSetOption is a generic function used to set a wide variety of options.
	Each option starts with SCC_OPT_xxx and has its own defined set of values.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="1028" pos:column="1">SCCEXTERNC</name> <name pos:line="1028" pos:column="12">SCCRTN</name> <name pos:line="1028" pos:column="19">EXTFUN</name> <name pos:line="1028" pos:column="26">__cdecl</name></type> <name pos:line="1028" pos:column="34">SccSetOption</name><parameter_list pos:line="1028" pos:column="46">(
                        <param><decl><type><name pos:line="1029" pos:column="25">_Inout_</name> <name pos:line="1029" pos:column="33">LPVOID</name></type> <name pos:line="1029" pos:column="40">pContext</name></decl></param>,
                        <param><decl><type><name pos:line="1030" pos:column="25">_In_</name> <name pos:line="1030" pos:column="30">LONG</name></type> <name pos:line="1030" pos:column="35">nOption</name></decl></param>,
                        <param><decl><type><name pos:line="1031" pos:column="25">_In_</name> <name pos:line="1031" pos:column="30">LONG</name></type> <name pos:line="1031" pos:column="35">dwVal</name></decl></param>
                        )</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="1034" pos:column="1">/*******************************************************************************
	Creates a subproject with the given name under the existing parent project. 
	If a subproject with the name already exists the function can change 
	the default name in order to create a unique one, for example by adding 
	"_&lt;number&gt;" to it. The caller must be prepared to accept changes
	to lpUser, lpSubProjPath, and lpAuxProjPath. lpSubProjPath and
	lpAuxProjPath are then used in a call to SccOpenProject.  They should not
	be modified by the caller upon return.  The caller should avoid displaying
	these two parameters upon return, as the provider might use a formatted
	string that is not ready for view.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="1045" pos:column="1">SCCEXTERNC</name> <name pos:line="1045" pos:column="12">SCCRTN</name> <name pos:line="1045" pos:column="19">EXTFUN</name> <name pos:line="1045" pos:column="26">__cdecl</name></type> <name pos:line="1045" pos:column="34">SccCreateSubProject</name><argument_list pos:line="1045" pos:column="53">(
                        <argument><expr><name pos:line="1046" pos:column="25">_Inout_</name> <name pos:line="1046" pos:column="33">LPVOID</name> <name pos:line="1046" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="1047" pos:column="25">_In_</name> <name pos:line="1047" pos:column="30">HWND</name> <name pos:line="1047" pos:column="35">hWnd</name></expr></argument>, 
                        <argument><expr><name pos:line="1048" pos:column="25">_Inout_z_</name> <macro><name pos:line="1048" pos:column="35">_Inout_cap_</name><argument_list pos:line="1048" pos:column="46">(<argument pos:line="1048" pos:column="47">SCC_USER_SIZE</argument>)</argument_list></macro> <name pos:line="1048" pos:column="62">LPSTR</name> <name pos:line="1048" pos:column="68">lpUser</name></expr></argument>,
                        <argument><expr><name pos:line="1049" pos:column="25">_In_z_</name> <macro><name pos:line="1049" pos:column="32">_In_count_</name><argument_list pos:line="1049" pos:column="42">(<argument pos:line="1049" pos:column="43">SCC_PRJPATH_SIZE</argument>)</argument_list></macro> <name pos:line="1049" pos:column="61">LPCSTR</name> <name pos:line="1049" pos:column="68">lpParentProjPath</name></expr></argument>, 
                        <argument><expr><name pos:line="1050" pos:column="25">_In_z_</name> <macro><name pos:line="1050" pos:column="32">_In_count_</name><argument_list pos:line="1050" pos:column="42">(<argument pos:line="1050" pos:column="43">SCC_PRJPATH_SIZE</argument>)</argument_list></macro> <name pos:line="1050" pos:column="61">LPCSTR</name> <name pos:line="1050" pos:column="68">lpSubProjName</name></expr></argument>,
                        <argument><expr><name pos:line="1051" pos:column="25">_Inout_z_</name> <macro><name pos:line="1051" pos:column="35">_Inout_cap_</name><argument_list pos:line="1051" pos:column="46">(<argument pos:line="1051" pos:column="47">SCC_PRJPATH_SIZE</argument>)</argument_list></macro> <name pos:line="1051" pos:column="65">LPSTR</name> <name pos:line="1051" pos:column="71">lpAuxProjPath</name></expr></argument>,
                        <argument><expr><macro><name pos:line="1052" pos:column="25">_Out_z_cap_</name><argument_list pos:line="1052" pos:column="36">(<argument pos:line="1052" pos:column="37">SCC_PRJPATH_SIZE</argument>)</argument_list></macro> <name pos:line="1052" pos:column="55">LPSTR</name> <name pos:line="1052" pos:column="61">lpSubProjPath</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="1055" pos:column="1">/*******************************************************************************
	Returns parent path of the given project (the project must exist). 
	For the store root folder, the function should return the given path 
	(i.e. the same root folder path). The caller must be prepared to accept changes 
	to lpUser, lpParentProjPath, and lpAuxProjPath. lpParentProjPath and lpAuxProjPath 
	are then used in a call to SccOpenProject.  They should not be modified 
	by the caller upon return. The caller should avoid displaying these two parameters 
	upon return, as the provider might use a formatted string that is not ready for view.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="1064" pos:column="1">SCCEXTERNC</name> <name pos:line="1064" pos:column="12">SCCRTN</name> <name pos:line="1064" pos:column="19">EXTFUN</name> <name pos:line="1064" pos:column="26">__cdecl</name></type> <name pos:line="1064" pos:column="34">SccGetParentProjectPath</name><argument_list pos:line="1064" pos:column="57">(
                        <argument><expr><name pos:line="1065" pos:column="25">_Inout_</name> <name pos:line="1065" pos:column="33">LPVOID</name> <name pos:line="1065" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="1066" pos:column="25">_In_</name> <name pos:line="1066" pos:column="30">HWND</name> <name pos:line="1066" pos:column="35">hWnd</name></expr></argument>, 
                        <argument><expr><name pos:line="1067" pos:column="25">_Inout_z_</name> <macro><name pos:line="1067" pos:column="35">_Inout_cap_</name><argument_list pos:line="1067" pos:column="46">(<argument pos:line="1067" pos:column="47">SCC_USER_SIZE</argument>)</argument_list></macro> <name pos:line="1067" pos:column="62">LPSTR</name> <name pos:line="1067" pos:column="68">lpUser</name></expr></argument>,
                        <argument><expr><name pos:line="1068" pos:column="25">_In_z_</name> <macro><name pos:line="1068" pos:column="32">_In_count_</name><argument_list pos:line="1068" pos:column="42">(<argument pos:line="1068" pos:column="43">SCC_PRJPATH_SIZE</argument>)</argument_list></macro> <name pos:line="1068" pos:column="61">LPCSTR</name> <name pos:line="1068" pos:column="68">lpProjPath</name></expr></argument>, 
                        <argument><expr><name pos:line="1069" pos:column="25">_Inout_z_</name> <macro><name pos:line="1069" pos:column="35">_Inout_cap_</name><argument_list pos:line="1069" pos:column="46">(<argument pos:line="1069" pos:column="47">SCC_PRJPATH_SIZE</argument>)</argument_list></macro> <name pos:line="1069" pos:column="65">LPSTR</name> <name pos:line="1069" pos:column="71">lpAuxProjPath</name></expr></argument>,
                        <argument><expr><macro><name pos:line="1070" pos:column="25">_Out_z_cap_</name><argument_list pos:line="1070" pos:column="36">(<argument pos:line="1070" pos:column="37">SCC_PRJPATH_SIZE</argument>)</argument_list></macro> <name pos:line="1070" pos:column="55">LPSTR</name> <name pos:line="1070" pos:column="61">lpParentProjPath</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="1073" pos:column="1">/*******************************************************************************
	Checks if multiple checkouts on a file are allowed.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="1076" pos:column="1">SCCEXTERNC</name> <name pos:line="1076" pos:column="12">SCCRTN</name> <name pos:line="1076" pos:column="19">EXTFUN</name> <name pos:line="1076" pos:column="26">__cdecl</name></type> <name pos:line="1076" pos:column="34">SccIsMultiCheckoutEnabled</name><parameter_list pos:line="1076" pos:column="59">(
                        <param><decl><type><name pos:line="1077" pos:column="25">_Inout_</name> <name pos:line="1077" pos:column="33">LPVOID</name></type> <name pos:line="1077" pos:column="40">pContext</name></decl></param>, 
			            <param><decl><type><name pos:line="1078" pos:column="37">_Out_</name> <name pos:line="1078" pos:column="43">LPBOOL</name></type> <name pos:line="1078" pos:column="50">pbMultiCheckout</name></decl></param>
                        )</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="1081" pos:column="1">/*******************************************************************************
	Checks if the provider will create MSSCCPRJ.SCC files in the same
	directories as the given files if the given files are placed under source
	control. The file paths must be fully qualified.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="1086" pos:column="1">SCCEXTERNC</name> <name pos:line="1086" pos:column="12">SCCRTN</name> <name pos:line="1086" pos:column="19">EXTFUN</name> <name pos:line="1086" pos:column="26">__cdecl</name></type> <name pos:line="1086" pos:column="34">SccWillCreateSccFile</name><argument_list pos:line="1086" pos:column="54">(
                        <argument><expr><name pos:line="1087" pos:column="25">_Inout_</name> <name pos:line="1087" pos:column="33">LPVOID</name> <name pos:line="1087" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="1088" pos:column="25">_In_</name> <name pos:line="1088" pos:column="30">LONG</name> <name pos:line="1088" pos:column="35">nFiles</name></expr></argument>,
                        <argument><expr><macro><name pos:line="1089" pos:column="25">_In_count_</name><argument_list pos:line="1089" pos:column="35">(<argument pos:line="1089" pos:column="36">nFiles</argument>)</argument_list></macro> <name pos:line="1089" pos:column="44">LPCSTR</name><op:operator pos:line="1089" pos:column="50">*</op:operator> <name pos:line="1089" pos:column="52">lpFileNames</name></expr></argument>,
						<argument><expr><macro><name pos:line="1090" pos:column="49">_Out_cap_</name><argument_list pos:line="1090" pos:column="58">(<argument pos:line="1090" pos:column="59">nFiles</argument>)</argument_list></macro> <name pos:line="1090" pos:column="67">LPBOOL</name> <name pos:line="1090" pos:column="74">pbSccFiles</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="1093" pos:column="1">/*******************************************************************************
	Returns extra capabilities for the provider.
*******************************************************************************/</comment>
<function_decl><type><name pos:line="1096" pos:column="1">SCCEXTERNC</name> <name pos:line="1096" pos:column="12">SCCRTN</name> <name pos:line="1096" pos:column="19">EXTFUN</name> <name pos:line="1096" pos:column="26">__cdecl</name></type> <name pos:line="1096" pos:column="34">SccGetExtendedCapabilities</name><parameter_list pos:line="1096" pos:column="60">(
                        <param><decl><type><name pos:line="1097" pos:column="25">_Inout_</name> <name pos:line="1097" pos:column="33">LPVOID</name></type> <name pos:line="1097" pos:column="40">pContext</name></decl></param>, 
                        <param><decl><type><name pos:line="1098" pos:column="25">_In_</name> <name pos:line="1098" pos:column="30">LONG</name></type>   <name pos:line="1098" pos:column="37">lSccExCap</name></decl></param>,
                        <param><decl><type><name pos:line="1099" pos:column="25">_Out_</name> <name pos:line="1099" pos:column="31">LPBOOL</name></type> <name pos:line="1099" pos:column="38">pbSupported</name></decl></param>
			)</parameter_list>;</function_decl>

<comment type="block" format="doxygen" pos:line="1102" pos:column="1">/*******************************************************************************
	Returns the list of files in the database different than local files.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="1105" pos:column="1">SCCEXTERNC</name> <name pos:line="1105" pos:column="12">SCCRTN</name> <name pos:line="1105" pos:column="19">EXTFUN</name> <name pos:line="1105" pos:column="26">__cdecl</name></type> <name pos:line="1105" pos:column="34">SccEnumChangedFiles</name><argument_list pos:line="1105" pos:column="53">(
			<argument><expr><name pos:line="1106" pos:column="25">_Inout_</name> <name pos:line="1106" pos:column="33">LPVOID</name> <name pos:line="1106" pos:column="40">pContext</name></expr></argument>,									  
			<argument><expr><name pos:line="1107" pos:column="25">_In_</name> <name pos:line="1107" pos:column="30">HWND</name> <name pos:line="1107" pos:column="35">hWnd</name></expr></argument>, 
			<argument><expr><name pos:line="1108" pos:column="25">_In_</name> <name pos:line="1108" pos:column="30">LONG</name> <name pos:line="1108" pos:column="35">cFiles</name></expr></argument>, 
			<argument><expr><macro><name pos:line="1109" pos:column="25">_In_count_</name><argument_list pos:line="1109" pos:column="35">(<argument pos:line="1109" pos:column="36">cFiles</argument>)</argument_list></macro> <name pos:line="1109" pos:column="44">LPCSTR</name><op:operator pos:line="1109" pos:column="50">*</op:operator> <name pos:line="1109" pos:column="52">lpFileNames</name></expr></argument>, 
			<argument><expr><macro><name pos:line="1110" pos:column="25">_Out_cap_</name><argument_list pos:line="1110" pos:column="34">(<argument pos:line="1110" pos:column="35">cFiles</argument>)</argument_list></macro> <name pos:line="1110" pos:column="43">LONG</name><op:operator pos:line="1110" pos:column="47">*</op:operator> <name pos:line="1110" pos:column="49">plIsFileDifferent</name></expr></argument>
			)</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="1113" pos:column="1">/*******************************************************************************
	Add the list of source controlled files to the currently open project.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="1116" pos:column="1">SCCEXTERNC</name> <name pos:line="1116" pos:column="12">SCCRTN</name> <name pos:line="1116" pos:column="19">EXTFUN</name> <name pos:line="1116" pos:column="26">__cdecl</name></type> <name pos:line="1116" pos:column="34">SccAddFilesFromSCC</name><argument_list pos:line="1116" pos:column="52">(
			<argument><expr><name pos:line="1117" pos:column="25">_Inout_</name> <name pos:line="1117" pos:column="33">LPVOID</name> <name pos:line="1117" pos:column="40">pContext</name></expr></argument>,									  
			<argument><expr><name pos:line="1118" pos:column="25">_In_</name> <name pos:line="1118" pos:column="30">HWND</name> <name pos:line="1118" pos:column="35">hWnd</name></expr></argument>, 
			<argument><expr><name pos:line="1119" pos:column="25">_Inout_z_</name> <macro><name pos:line="1119" pos:column="35">_Inout_cap_</name><argument_list pos:line="1119" pos:column="46">(<argument pos:line="1119" pos:column="47">SCC_USER_SIZE</argument>)</argument_list></macro> <name pos:line="1119" pos:column="62">LPSTR</name> <name pos:line="1119" pos:column="68">lpUser</name></expr></argument>,
			<argument><expr><name pos:line="1120" pos:column="25">_Inout_z_</name> <macro><name pos:line="1120" pos:column="35">_Inout_cap_</name><argument_list pos:line="1120" pos:column="46">(<argument pos:line="1120" pos:column="47">SCC_PRJPATH_SIZE</argument>)</argument_list></macro> <name pos:line="1120" pos:column="65">LPSTR</name> <name pos:line="1120" pos:column="71">lpAuxProjPath</name></expr></argument>,
			<argument><expr><name pos:line="1121" pos:column="25">_In_</name> <name pos:line="1121" pos:column="30">LONG</name> <name pos:line="1121" pos:column="35">cFiles</name></expr></argument>, 
			<argument><expr><macro><name pos:line="1122" pos:column="25">_In_count_</name><argument_list pos:line="1122" pos:column="35">(<argument pos:line="1122" pos:column="36">cFiles</argument>)</argument_list></macro> <name pos:line="1122" pos:column="44">LPCSTR</name><op:operator pos:line="1122" pos:column="50">*</op:operator> <name pos:line="1122" pos:column="52">lpFilePaths</name></expr></argument>,
			<argument><expr><name pos:line="1123" pos:column="25">_In_z_</name> <name pos:line="1123" pos:column="32">LPCSTR</name> <name pos:line="1123" pos:column="39">lpDestination</name></expr></argument>,
			<argument><expr><name pos:line="1124" pos:column="25">_In_opt_z_</name> <name pos:line="1124" pos:column="36">LPCSTR</name> <name pos:line="1124" pos:column="43">lpComment</name></expr></argument>,
			<argument><expr><macro><name pos:line="1125" pos:column="25">_Out_cap_</name><argument_list pos:line="1125" pos:column="34">(<argument pos:line="1125" pos:column="35">cFiles</argument>)</argument_list></macro> <name pos:line="1125" pos:column="43">LPBOOL</name> <name pos:line="1125" pos:column="50">pbResults</name></expr></argument>	 
			)</argument_list></decl>;</decl_stmt>

<comment type="block" format="doxygen" pos:line="1128" pos:column="1">/*******************************************************************************
	Removes the array of fully qualified files from the source control system.
	The files are not removed from the user's disk, unless advanced options
	are set by the user.  Advaned options are defined by the provider.
*******************************************************************************/</comment>
<decl_stmt><decl><type><name pos:line="1133" pos:column="1">SCCEXTERNC</name> <name pos:line="1133" pos:column="12">SCCRTN</name> <name pos:line="1133" pos:column="19">EXTFUN</name> <name pos:line="1133" pos:column="26">__cdecl</name></type> <name pos:line="1133" pos:column="34">SccRemoveDir</name><argument_list pos:line="1133" pos:column="46">(
                        <argument><expr><name pos:line="1134" pos:column="25">_Inout_</name> <name pos:line="1134" pos:column="33">LPVOID</name> <name pos:line="1134" pos:column="40">pContext</name></expr></argument>, 
                        <argument><expr><name pos:line="1135" pos:column="25">_In_</name> <name pos:line="1135" pos:column="30">HWND</name> <name pos:line="1135" pos:column="35">hWnd</name></expr></argument>, 
                        <argument><expr><name pos:line="1136" pos:column="25">_In_</name> <name pos:line="1136" pos:column="30">LONG</name> <name pos:line="1136" pos:column="35">nDirs</name></expr></argument>, 
                        <argument><expr><macro><name pos:line="1137" pos:column="25">_In_count_</name><argument_list pos:line="1137" pos:column="35">(<argument pos:line="1137" pos:column="36">nDirs</argument>)</argument_list></macro> <name pos:line="1137" pos:column="43">LPCSTR</name><op:operator pos:line="1137" pos:column="49">*</op:operator> <name pos:line="1137" pos:column="51">lpDirNames</name></expr></argument>, 
                        <argument><expr><name pos:line="1138" pos:column="25">_In_opt_z_</name> <name pos:line="1138" pos:column="36">LPCSTR</name> <name pos:line="1138" pos:column="43">lpComment</name></expr></argument>,
                        <argument><expr><name pos:line="1139" pos:column="25">_In_</name> <name pos:line="1139" pos:column="30">LONG</name> <name pos:line="1139" pos:column="35">dwFlags</name></expr></argument>,
                        <argument><expr><name pos:line="1140" pos:column="25">_In_opt_</name> <name pos:line="1140" pos:column="34">LPCMDOPTS</name> <name pos:line="1140" pos:column="44">pvOptions</name></expr></argument>
                        )</argument_list></decl>;</decl_stmt>

<cpp:if pos:line="1143" pos:column="1">#<cpp:directive pos:line="1143" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1143" pos:column="5">defined</name><argument_list pos:line="1143" pos:column="12">( <argument><expr><name pos:line="1143" pos:column="14">__cplusplus</name></expr></argument> )</argument_list></call></expr></cpp:if>
}</block></extern>
<cpp:endif pos:line="1145" pos:column="1">#<cpp:directive pos:line="1145" pos:column="2">endif</cpp:directive></cpp:endif>





<cpp:endif pos:line="1151" pos:column="1">#<cpp:directive pos:line="1151" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="1151" pos:column="8">// _SCC_DEFS</comment>

<comment type="line" pos:line="1153" pos:column="1">//******* EOF ********</comment>
</unit>
