<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\UI\UI\View\ViewManager.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">IO</name></name>;</using>
<using pos:line="3" pos:column="1">using <name pos:line="3" pos:column="7">EnvDTE80</name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Microsoft</name><op:operator pos:line="4" pos:column="16">.</op:operator><name pos:line="4" pos:column="17">VisualStudio</name><op:operator pos:line="4" pos:column="29">.</op:operator><name pos:line="4" pos:column="30">CommandBars</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Microsoft</name><op:operator pos:line="5" pos:column="16">.</op:operator><name pos:line="5" pos:column="17">VisualStudio</name><op:operator pos:line="5" pos:column="29">.</op:operator><name pos:line="5" pos:column="30">Shell</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Microsoft</name><op:operator pos:line="6" pos:column="16">.</op:operator><name pos:line="6" pos:column="17">VisualStudio</name><op:operator pos:line="6" pos:column="29">.</op:operator><name pos:line="6" pos:column="30">Shell</name><op:operator pos:line="6" pos:column="35">.</op:operator><name pos:line="6" pos:column="36">Interop</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Sando</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">Core</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Sando</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">Core</name><op:operator pos:line="8" pos:column="17">.</op:operator><name pos:line="8" pos:column="18">Logging</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Sando</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">DependencyInjection</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Sando</name><op:operator pos:line="10" pos:column="12">.</op:operator><name pos:line="10" pos:column="13">Core</name><op:operator pos:line="10" pos:column="17">.</op:operator><name pos:line="10" pos:column="18">Tools</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Sando</name><op:operator pos:line="11" pos:column="12">.</op:operator><name pos:line="11" pos:column="13">Core</name><op:operator pos:line="11" pos:column="17">.</op:operator><name pos:line="11" pos:column="18">Logging</name><op:operator pos:line="11" pos:column="25">.</op:operator><name pos:line="11" pos:column="26">Persistence</name></name>;</using>

<namespace pos:line="13" pos:column="1">namespace <name><name pos:line="13" pos:column="11">Sando</name><op:operator pos:line="13" pos:column="16">.</op:operator><name pos:line="13" pos:column="17">UI</name><op:operator pos:line="13" pos:column="19">.</op:operator><name pos:line="13" pos:column="20">View</name></name>
<block pos:line="14" pos:column="1">{
    <class><specifier pos:line="15" pos:column="5">public</specifier> class <name pos:line="15" pos:column="18">ViewManager</name>
    <block pos:line="16" pos:column="5">{

        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">private</specifier> <specifier pos:line="18" pos:column="17">readonly</specifier> <name pos:line="18" pos:column="26">IToolWindowFinder</name></type> <name pos:line="18" pos:column="44">_toolWindowFinder</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">private</specifier> <specifier pos:line="19" pos:column="17">const</specifier> <name pos:line="19" pos:column="23">string</name></type> <name pos:line="19" pos:column="30">Introducesandoflag</name> <init pos:line="19" pos:column="49">= <expr><lit:literal type="string" pos:line="19" pos:column="51">"IntroduceSandoFlag"</lit:literal></expr></init></decl>;</decl_stmt>



        <comment type="line" pos:line="23" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="24" pos:column="9">/// This function is called when the user clicks the menu item that shows the </comment>
        <comment type="line" pos:line="25" pos:column="9">/// tool window. See the Initialize method to see how the menu item is associated to </comment>
        <comment type="line" pos:line="26" pos:column="9">/// this function using the OleMenuCommandService service and the MenuCommand class.</comment>
        <comment type="line" pos:line="27" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="28" pos:column="9">public</specifier> <name pos:line="28" pos:column="16">void</name></type> <name pos:line="28" pos:column="21">ShowToolWindow</name><parameter_list pos:line="28" pos:column="35">(<param><decl><type><name pos:line="28" pos:column="36">object</name></type> <name pos:line="28" pos:column="43">sender</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="51">EventArgs</name></type> <name pos:line="28" pos:column="61">e</name></decl></param>)</parameter_list>
        <block pos:line="29" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">ShowSando</name><argument_list pos:line="30" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="33" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="34" pos:column="9">/// Side affect is creating the tool window if it doesn't exist yet</comment>
        <comment type="line" pos:line="35" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="36" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="37" pos:column="9">private</specifier> <name pos:line="37" pos:column="17">IVsWindowFrame</name></type> <name pos:line="37" pos:column="32">GetWindowFrame</name><parameter_list pos:line="37" pos:column="46">()</parameter_list>
        <block pos:line="38" pos:column="9">{
            <comment type="line" pos:line="39" pos:column="13">// Get the instance number 0 of this tool window. This window is single instance so this instance</comment>
            <comment type="line" pos:line="40" pos:column="13">// is actually the only one.</comment>
            <comment type="line" pos:line="41" pos:column="13">// The last flag is set to true so that if the tool window does not exists it will be created.</comment>
            <decl_stmt><decl><type><name pos:line="42" pos:column="13">ToolWindowPane</name></type> <name pos:line="42" pos:column="28">window</name> <init pos:line="42" pos:column="35">= <expr><call><name><name pos:line="42" pos:column="37">_toolWindowFinder</name><op:operator pos:line="42" pos:column="54">.</op:operator><name pos:line="42" pos:column="55">FindToolWindow</name></name><argument_list pos:line="42" pos:column="69">(<argument><expr><call><name pos:line="42" pos:column="70">typeof</name><argument_list pos:line="42" pos:column="76">(<argument><expr><name pos:line="42" pos:column="77">SearchToolWindow</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="42" pos:column="96">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="42" pos:column="99">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><op:operator pos:line="43" pos:column="17">(</op:operator><name pos:line="43" pos:column="18">null</name> <op:operator pos:line="43" pos:column="23">==</op:operator> <name pos:line="43" pos:column="26">window</name><op:operator pos:line="43" pos:column="32">)</op:operator> <op:operator pos:line="43" pos:column="34">||</op:operator> <op:operator pos:line="43" pos:column="37">(</op:operator><name pos:line="43" pos:column="38">null</name> <op:operator pos:line="43" pos:column="43">==</op:operator> <name><name pos:line="43" pos:column="46">window</name><op:operator pos:line="43" pos:column="52">.</op:operator><name pos:line="43" pos:column="53">Frame</name></name><op:operator pos:line="43" pos:column="58">)</op:operator></expr>)</condition><then pos:line="43" pos:column="60">
            <block pos:line="44" pos:column="13">{
                <throw pos:line="45" pos:column="17">throw <expr><op:operator pos:line="45" pos:column="23">new</op:operator> <call><name pos:line="45" pos:column="27">NotSupportedException</name><argument_list pos:line="45" pos:column="48">(<argument><expr><name><name pos:line="45" pos:column="49">Resources</name><op:operator pos:line="45" pos:column="58">.</op:operator><name pos:line="45" pos:column="59">CanNotCreateWindow</name></name></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>
            <decl_stmt><decl><type><name pos:line="47" pos:column="13">IVsWindowFrame</name></type> <name pos:line="47" pos:column="28">windowFrame</name> <init pos:line="47" pos:column="40">= <expr><op:operator pos:line="47" pos:column="42">(</op:operator><name pos:line="47" pos:column="43">IVsWindowFrame</name><op:operator pos:line="47" pos:column="57">)</op:operator><name><name pos:line="47" pos:column="58">window</name><op:operator pos:line="47" pos:column="64">.</op:operator><name pos:line="47" pos:column="65">Frame</name></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">_toolWindowFinder</name><op:operator pos:line="48" pos:column="30">.</op:operator><name pos:line="48" pos:column="31">UpdateIndexingFilesList</name></name><argument_list pos:line="48" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="49" pos:column="13">return <expr><name pos:line="49" pos:column="20">windowFrame</name></expr>;</return>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="52" pos:column="9">private</specifier> <name pos:line="52" pos:column="17">bool</name></type> <name pos:line="52" pos:column="22">_isRunning</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="54" pos:column="9">public</specifier> <name pos:line="54" pos:column="16">ViewManager</name><parameter_list pos:line="54" pos:column="27">(<param><decl><type><name pos:line="54" pos:column="28">IToolWindowFinder</name></type> <name pos:line="54" pos:column="46">finder</name></decl></param>)</parameter_list>
        <block pos:line="55" pos:column="9">{
            <expr_stmt><expr><name pos:line="56" pos:column="13">_toolWindowFinder</name> <op:operator pos:line="56" pos:column="31">=</op:operator> <name pos:line="56" pos:column="33">finder</name></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="59" pos:column="9">public</specifier> <name pos:line="59" pos:column="16">void</name></type> <name pos:line="59" pos:column="21">EnsureViewExists</name><parameter_list pos:line="59" pos:column="37">()</parameter_list>
        <block pos:line="60" pos:column="9">{
            <if pos:line="61" pos:column="13">if <condition pos:line="61" pos:column="16">(<expr><op:operator pos:line="61" pos:column="17">!</op:operator><name pos:line="61" pos:column="18">_isRunning</name></expr>)</condition><then pos:line="61" pos:column="29">
            <block pos:line="62" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">GetWindowFrame</name><argument_list pos:line="63" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="64" pos:column="17">_isRunning</name> <op:operator pos:line="64" pos:column="28">=</op:operator> <lit:literal type="boolean" pos:line="64" pos:column="30">true</lit:literal></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>


        <function><type><specifier pos:line="69" pos:column="9">public</specifier> <name pos:line="69" pos:column="16">void</name></type> <name pos:line="69" pos:column="21">ShowSando</name><parameter_list pos:line="69" pos:column="30">()</parameter_list>
        <block pos:line="70" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="71" pos:column="13">var</name></type> <name pos:line="71" pos:column="17">windowFrame</name> <init pos:line="71" pos:column="29">= <expr><call><name pos:line="71" pos:column="31">GetWindowFrame</name><argument_list pos:line="71" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="72" pos:column="13">// Dock Sando to the bottom of Visual Studio.</comment>
            <expr_stmt><expr><call><name><name pos:line="73" pos:column="13">windowFrame</name><op:operator pos:line="73" pos:column="24">.</op:operator><name pos:line="73" pos:column="25">SetFramePos</name></name><argument_list pos:line="73" pos:column="36">(<argument><expr><name><name pos:line="73" pos:column="37">VSSETFRAMEPOS</name><op:operator pos:line="73" pos:column="50">.</op:operator><name pos:line="73" pos:column="51">SFP_fDockRight</name></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="67">Guid</name><op:operator pos:line="73" pos:column="71">.</op:operator><name pos:line="73" pos:column="72">Empty</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="73" pos:column="79">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="73" pos:column="82">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="73" pos:column="85">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="73" pos:column="88">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>            
            <expr_stmt><expr><call><name><name pos:line="74" pos:column="13">Microsoft</name><op:operator pos:line="74" pos:column="22">.</op:operator><name pos:line="74" pos:column="23">VisualStudio</name><op:operator pos:line="74" pos:column="35">.</op:operator><name pos:line="74" pos:column="36">ErrorHandler</name><op:operator pos:line="74" pos:column="48">.</op:operator><name pos:line="74" pos:column="49">ThrowOnFailure</name></name><argument_list pos:line="74" pos:column="63">(<argument><expr><call><name><name pos:line="74" pos:column="64">windowFrame</name><op:operator pos:line="74" pos:column="75">.</op:operator><name pos:line="74" pos:column="76">Show</name></name><argument_list pos:line="74" pos:column="80">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="75" pos:column="13">File</name><op:operator pos:line="75" pos:column="17">.</op:operator><name pos:line="75" pos:column="18">Create</name></name><argument_list pos:line="75" pos:column="24">(<argument><expr><call><name pos:line="75" pos:column="25">GetFullIntroduceSandoFlagPath</name><argument_list pos:line="75" pos:column="54">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>                       
        }</block></function>

        <function><type><specifier pos:line="78" pos:column="9">public</specifier> <name pos:line="78" pos:column="16">bool</name></type> <name pos:line="78" pos:column="21">ShouldShow</name><parameter_list pos:line="78" pos:column="31">()</parameter_list>
        <block pos:line="79" pos:column="9">{
            <return pos:line="80" pos:column="13">return <expr><op:operator pos:line="80" pos:column="20">!</op:operator><call><name><name pos:line="80" pos:column="21">File</name><op:operator pos:line="80" pos:column="25">.</op:operator><name pos:line="80" pos:column="26">Exists</name></name><argument_list pos:line="80" pos:column="32">(<argument><expr><call><name pos:line="80" pos:column="33">GetFullIntroduceSandoFlagPath</name><argument_list pos:line="80" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="83" pos:column="9">public</specifier> <name pos:line="83" pos:column="16">void</name></type> <name pos:line="83" pos:column="21">ShowToolbar</name><parameter_list pos:line="83" pos:column="32">()</parameter_list>
        <block pos:line="84" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="85" pos:column="13">var</name></type> <name pos:line="85" pos:column="17">dte</name> <init pos:line="85" pos:column="21">= <expr><call><name><name pos:line="85" pos:column="23">ServiceLocator</name><op:operator pos:line="85" pos:column="37">.</op:operator><name><name pos:line="85" pos:column="38">Resolve</name><argument_list pos:line="85" pos:column="45">&lt;<argument><name pos:line="85" pos:column="46">DTE2</name></argument>&gt;</argument_list></name></name><argument_list pos:line="85" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="86" pos:column="13">var</name></type> <name pos:line="86" pos:column="17">cbs</name> <init pos:line="86" pos:column="21">= <expr><op:operator pos:line="86" pos:column="23">(</op:operator><op:operator pos:line="86" pos:column="24">(</op:operator><name pos:line="86" pos:column="25">CommandBars</name><op:operator pos:line="86" pos:column="36">)</op:operator> <name><name pos:line="86" pos:column="38">dte</name><op:operator pos:line="86" pos:column="41">.</op:operator><name pos:line="86" pos:column="42">CommandBars</name></name><op:operator pos:line="86" pos:column="53">)</op:operator></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="87" pos:column="13">CommandBar</name></type> <name pos:line="87" pos:column="24">cb</name> <init pos:line="87" pos:column="27">= <expr><name><name pos:line="87" pos:column="29">cbs</name><index pos:line="87" pos:column="32">[<expr><lit:literal type="string" pos:line="87" pos:column="33">"Sando Toolbar"</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="88" pos:column="13">cb</name><op:operator pos:line="88" pos:column="15">.</op:operator><name pos:line="88" pos:column="16">Visible</name></name> <op:operator pos:line="88" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="88" pos:column="26">true</lit:literal></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="91" pos:column="9">private</specifier> <name pos:line="91" pos:column="17">string</name></type> <name pos:line="91" pos:column="24">GetFullIntroduceSandoFlagPath</name><parameter_list pos:line="91" pos:column="53">()</parameter_list>
        <block pos:line="92" pos:column="9">{            
            <return pos:line="93" pos:column="13">return <expr><call><name><name pos:line="93" pos:column="20">Path</name><op:operator pos:line="93" pos:column="24">.</op:operator><name pos:line="93" pos:column="25">Combine</name></name><argument_list pos:line="93" pos:column="32">(<argument><expr><call><name><name pos:line="93" pos:column="33">PathManager</name><op:operator pos:line="93" pos:column="44">.</op:operator><name pos:line="93" pos:column="45">Instance</name><op:operator pos:line="93" pos:column="53">.</op:operator><name pos:line="93" pos:column="54">GetExtensionRoot</name></name><argument_list pos:line="93" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="93" pos:column="74">Introducesandoflag</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>

    <class type="interface"><specifier pos:line="97" pos:column="5">public</specifier>  interface <name pos:line="97" pos:column="23">IToolWindowFinder</name>
    <block pos:line="98" pos:column="5">{
        <function_decl><type><name pos:line="99" pos:column="9">ToolWindowPane</name></type> <name pos:line="99" pos:column="24">FindToolWindow</name><parameter_list pos:line="99" pos:column="38">(<param><decl><type><name pos:line="99" pos:column="39">Type</name></type> <name pos:line="99" pos:column="44">type</name></decl></param>, <param><decl><type><name pos:line="99" pos:column="50">int</name></type> <name pos:line="99" pos:column="54">i</name></decl></param>, <param><decl><type><name pos:line="99" pos:column="57">bool</name></type> <name pos:line="99" pos:column="62">b</name></decl></param>)</parameter_list>;</function_decl>

        <function_decl><type><name pos:line="101" pos:column="9">void</name></type> <name pos:line="101" pos:column="14">UpdateIndexingFilesList</name><parameter_list pos:line="101" pos:column="37">()</parameter_list>;</function_decl>
    }</block></class>
}</block></namespace>
</unit>
