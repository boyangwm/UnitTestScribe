<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Sando-master\Indexer\Indexer\Metrics\POSTRETRIEVALMETRICS.CS" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Sando</name><op:operator pos:line="5" pos:column="12">.</op:operator><name pos:line="5" pos:column="13">ExtensionContracts</name><op:operator pos:line="5" pos:column="31">.</op:operator><name pos:line="5" pos:column="32">ResultsReordererContracts</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">Sando</name><op:operator pos:line="7" pos:column="16">.</op:operator><name pos:line="7" pos:column="17">Indexer</name><op:operator pos:line="7" pos:column="24">.</op:operator><name pos:line="7" pos:column="25">Metrics</name></name>
<block pos:line="8" pos:column="1">{
	<class><specifier pos:line="9" pos:column="9">public</specifier> class <name pos:line="9" pos:column="22">PostRetrievalMetrics</name>
	<block pos:line="10" pos:column="9">{
		<function><type><specifier pos:line="11" pos:column="17">public</specifier> <specifier pos:line="11" pos:column="24">static</specifier> <name pos:line="11" pos:column="31">double</name></type> <name pos:line="11" pos:column="38">StdDevScore</name><parameter_list pos:line="11" pos:column="49">(<param><decl><type><name><name pos:line="11" pos:column="50">List</name><argument_list pos:line="11" pos:column="54">&lt;<argument><name pos:line="11" pos:column="55">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="11" pos:column="73">results</name></decl></param>)</parameter_list>
		<block pos:line="12" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="13" pos:column="25">double</name></type> <name pos:line="13" pos:column="32">avgScores</name> <init pos:line="13" pos:column="42">= <expr><call><name pos:line="13" pos:column="44">AvgScore</name><argument_list pos:line="13" pos:column="52">(<argument><expr><name pos:line="13" pos:column="53">results</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="14" pos:column="25">double</name></type> <name pos:line="14" pos:column="32">var</name> <init pos:line="14" pos:column="36">= <expr><lit:literal type="number" pos:line="14" pos:column="38">0.0</lit:literal></expr></init></decl>;</decl_stmt>
			<foreach pos:line="15" pos:column="25">foreach(<init><decl><type><name pos:line="15" pos:column="33">var</name></type> <name pos:line="15" pos:column="37">result</name> <range pos:line="15" pos:column="44">in <expr><name pos:line="15" pos:column="47">results</name></expr></range></decl></init>)
			<block pos:line="16" pos:column="25">{
				<expr_stmt><expr><name pos:line="17" pos:column="33">var</name> <op:operator pos:line="17" pos:column="37">+=</op:operator> <call><name><name pos:line="17" pos:column="40">Math</name><op:operator pos:line="17" pos:column="44">.</op:operator><name pos:line="17" pos:column="45">Pow</name></name><argument_list pos:line="17" pos:column="48">(<argument><expr><name><name pos:line="17" pos:column="49">result</name><op:operator pos:line="17" pos:column="55">.</op:operator><name pos:line="17" pos:column="56">Score</name></name> <op:operator pos:line="17" pos:column="62">-</op:operator> <name pos:line="17" pos:column="64">avgScores</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="17" pos:column="75">2.0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></foreach>
			<return pos:line="19" pos:column="25">return <expr><call><name><name pos:line="19" pos:column="32">Math</name><op:operator pos:line="19" pos:column="36">.</op:operator><name pos:line="19" pos:column="37">Sqrt</name></name><argument_list pos:line="19" pos:column="41">(<argument><expr><name pos:line="19" pos:column="42">var</name> <op:operator pos:line="19" pos:column="46">/</op:operator> <name><name pos:line="19" pos:column="48">results</name><op:operator pos:line="19" pos:column="55">.</op:operator><name pos:line="19" pos:column="56">Count</name></name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="22" pos:column="17">public</specifier> <specifier pos:line="22" pos:column="24">static</specifier> <name pos:line="22" pos:column="31">double</name></type> <name pos:line="22" pos:column="38">AvgScore</name><parameter_list pos:line="22" pos:column="46">(<param><decl><type><name><name pos:line="22" pos:column="47">List</name><argument_list pos:line="22" pos:column="51">&lt;<argument><name pos:line="22" pos:column="52">CodeSearchResult</name></argument>&gt;</argument_list></name></type> <name pos:line="22" pos:column="70">results</name></decl></param>)</parameter_list>
		<block pos:line="23" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="24" pos:column="25">double</name></type> <name pos:line="24" pos:column="32">sum</name> <init pos:line="24" pos:column="36">= <expr><lit:literal type="number" pos:line="24" pos:column="38">0.0</lit:literal></expr></init></decl>;</decl_stmt>
			<foreach pos:line="25" pos:column="25">foreach(<init><decl><type><name pos:line="25" pos:column="33">var</name></type> <name pos:line="25" pos:column="37">result</name> <range pos:line="25" pos:column="44">in <expr><name pos:line="25" pos:column="47">results</name></expr></range></decl></init>)
			<block pos:line="26" pos:column="25">{
				<expr_stmt><expr><name pos:line="27" pos:column="33">sum</name> <op:operator pos:line="27" pos:column="37">+=</op:operator> <name><name pos:line="27" pos:column="40">result</name><op:operator pos:line="27" pos:column="46">.</op:operator><name pos:line="27" pos:column="47">Score</name></name></expr>;</expr_stmt>
			}</block></foreach>
			<return pos:line="29" pos:column="25">return <expr><name pos:line="29" pos:column="32">sum</name> <op:operator pos:line="29" pos:column="36">/</op:operator> <name><name pos:line="29" pos:column="38">results</name><op:operator pos:line="29" pos:column="45">.</op:operator><name pos:line="29" pos:column="46">Count</name></name></expr>;</return>
		}</block></function>

	}</block></class>
}</block></namespace>
</unit>
