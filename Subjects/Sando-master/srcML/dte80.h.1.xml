<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\Sando-master\LIBS\Extensions\inc\dte80.h" pos:tabs="8" pos:line="1" pos:column="1">

<comment type="block" pos:line="3" pos:column="1">/* this ALWAYS GENERATED file contains the definitions for the interfaces */</comment>


 <comment type="block" pos:line="6" pos:column="2">/* File created by MIDL compiler version 7.00.0499 */</comment>
<comment type="block" pos:line="7" pos:column="1">/* Compiler settings for dte80.idl:
    Oicf, W0, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/</comment>
<comment type="line" pos:line="15" pos:column="1">//@@MIDL_FILE_HEADING(  )</comment>

<cpp:pragma pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">pragma</cpp:directive> warning( disable: 4049 )</cpp:pragma>  <comment type="block" pos:line="17" pos:column="35">/* more than 64k source lines */</comment>


<comment type="block" pos:line="20" pos:column="1">/* verify that the &lt;rpcndr.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifndef</cpp:directive> <name pos:line="21" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">__REQUIRED_RPCNDR_H_VERSION__</name></cpp:macro> <cpp:value pos:line="22" pos:column="39">475</cpp:value></cpp:define>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="25" pos:column="1">/* verify that the &lt;rpcsal.h&gt; version is high enough to compile this file*/</comment>
<cpp:ifndef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifndef</cpp:directive> <name pos:line="26" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:ifndef>
<cpp:define pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="27" pos:column="9">__REQUIRED_RPCSAL_H_VERSION__</name></cpp:macro> <cpp:value pos:line="27" pos:column="39">100</cpp:value></cpp:define>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"rpc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"rpcndr.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">__RPCNDR_H_VERSION__</name></cpp:ifndef>
<cpp:error pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">error</cpp:directive> this stub requires an updated version of &lt;rpcndr.h&gt;</cpp:error>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">// __RPCNDR_H_VERSION__</comment>


<cpp:ifndef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifndef</cpp:directive> <name pos:line="38" pos:column="9">__dte80_h__</name></cpp:ifndef>
<cpp:define pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="39" pos:column="9">__dte80_h__</name></cpp:macro></cpp:define>

<cpp:if pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">if</cpp:directive> <expr><call><name pos:line="41" pos:column="5">defined</name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">_MSC_VER</name></expr></argument>)</argument_list></call> <op:operator pos:line="41" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="41" pos:column="26">(</op:operator><name pos:line="41" pos:column="27">_MSC_VER</name> <op:operator pos:line="41" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="41" pos:column="39">1020</lit:literal><op:operator pos:line="41" pos:column="43">)</op:operator></expr></cpp:if>
<cpp:pragma pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="45" pos:column="1">/* Forward Declarations */</comment> 

<cpp:ifndef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifndef</cpp:directive> <name pos:line="47" pos:column="9">__Commands2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="48" pos:column="9">__Commands2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="49" pos:column="1">typedef <type><name pos:line="49" pos:column="9">interface</name> <name pos:line="49" pos:column="19">Commands2</name></type> <name pos:line="49" pos:column="29">Commands2</name>;</typedef>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="50" pos:column="9">/* __Commands2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">ifndef</cpp:directive> <name pos:line="53" pos:column="9">__SourceControl2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="54" pos:column="9">__SourceControl2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="55" pos:column="1">typedef <type><name pos:line="55" pos:column="9">interface</name> <name pos:line="55" pos:column="19">SourceControl2</name></type> <name pos:line="55" pos:column="34">SourceControl2</name>;</typedef>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="56" pos:column="9">/* __SourceControl2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">ifndef</cpp:directive> <name pos:line="59" pos:column="9">__ErrorItem_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="60" pos:column="9">__ErrorItem_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="61" pos:column="1">typedef <type><name pos:line="61" pos:column="9">interface</name> <name pos:line="61" pos:column="19">ErrorItem</name></type> <name pos:line="61" pos:column="29">ErrorItem</name>;</typedef>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="62" pos:column="9">/* __ErrorItem_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">ifndef</cpp:directive> <name pos:line="65" pos:column="9">__ErrorList_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="66" pos:column="9">__ErrorList_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="67" pos:column="1">typedef <type><name pos:line="67" pos:column="9">interface</name> <name pos:line="67" pos:column="19">ErrorList</name></type> <name pos:line="67" pos:column="29">ErrorList</name>;</typedef>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="68" pos:column="9">/* __ErrorList_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">ifndef</cpp:directive> <name pos:line="71" pos:column="9">__CodeAttributeArgument_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="72" pos:column="9">__CodeAttributeArgument_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="73" pos:column="1">typedef <type><name pos:line="73" pos:column="9">interface</name> <name pos:line="73" pos:column="19">CodeAttributeArgument</name></type> <name pos:line="73" pos:column="41">CodeAttributeArgument</name>;</typedef>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="74" pos:column="9">/* __CodeAttributeArgument_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">ifndef</cpp:directive> <name pos:line="77" pos:column="9">__CodeEvent_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="78" pos:column="9">__CodeEvent_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="79" pos:column="1">typedef <type><name pos:line="79" pos:column="9">interface</name> <name pos:line="79" pos:column="19">CodeEvent</name></type> <name pos:line="79" pos:column="29">CodeEvent</name>;</typedef>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="80" pos:column="9">/* __CodeEvent_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">ifndef</cpp:directive> <name pos:line="83" pos:column="9">__CodeElement2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="84" pos:column="9">__CodeElement2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="85" pos:column="1">typedef <type><name pos:line="85" pos:column="9">interface</name> <name pos:line="85" pos:column="19">CodeElement2</name></type> <name pos:line="85" pos:column="32">CodeElement2</name>;</typedef>
<cpp:endif pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="86" pos:column="9">/* __CodeElement2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">ifndef</cpp:directive> <name pos:line="89" pos:column="9">__CodeImport_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="90" pos:column="9">__CodeImport_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="91" pos:column="1">typedef <type><name pos:line="91" pos:column="9">interface</name> <name pos:line="91" pos:column="19">CodeImport</name></type> <name pos:line="91" pos:column="30">CodeImport</name>;</typedef>
<cpp:endif pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="92" pos:column="9">/* __CodeImport_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">ifndef</cpp:directive> <name pos:line="95" pos:column="9">__FileCodeModel2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="96" pos:column="9">__FileCodeModel2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="97" pos:column="1">typedef <type><name pos:line="97" pos:column="9">interface</name> <name pos:line="97" pos:column="19">FileCodeModel2</name></type> <name pos:line="97" pos:column="34">FileCodeModel2</name>;</typedef>
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="98" pos:column="9">/* __FileCodeModel2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">ifndef</cpp:directive> <name pos:line="101" pos:column="9">__CodeModel2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="102" pos:column="9">__CodeModel2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="103" pos:column="1">typedef <type><name pos:line="103" pos:column="9">interface</name> <name pos:line="103" pos:column="19">CodeModel2</name></type> <name pos:line="103" pos:column="30">CodeModel2</name>;</typedef>
<cpp:endif pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="104" pos:column="9">/* __CodeModel2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">ifndef</cpp:directive> <name pos:line="107" pos:column="9">__CodeClass2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="108" pos:column="9">__CodeClass2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="109" pos:column="1">typedef <type><name pos:line="109" pos:column="9">interface</name> <name pos:line="109" pos:column="19">CodeClass2</name></type> <name pos:line="109" pos:column="30">CodeClass2</name>;</typedef>
<cpp:endif pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="110" pos:column="9">/* __CodeClass2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">ifndef</cpp:directive> <name pos:line="113" pos:column="9">__CodeParameter2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="114" pos:column="9">__CodeParameter2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="115" pos:column="1">typedef <type><name pos:line="115" pos:column="9">interface</name> <name pos:line="115" pos:column="19">CodeParameter2</name></type> <name pos:line="115" pos:column="34">CodeParameter2</name>;</typedef>
<cpp:endif pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="116" pos:column="9">/* __CodeParameter2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">ifndef</cpp:directive> <name pos:line="119" pos:column="9">__CodeFunction2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="120" pos:column="9">__CodeFunction2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="121" pos:column="1">typedef <type><name pos:line="121" pos:column="9">interface</name> <name pos:line="121" pos:column="19">CodeFunction2</name></type> <name pos:line="121" pos:column="33">CodeFunction2</name>;</typedef>
<cpp:endif pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="122" pos:column="9">/* __CodeFunction2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">ifndef</cpp:directive> <name pos:line="125" pos:column="9">__CodeAttribute2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="126" pos:column="9">__CodeAttribute2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="127" pos:column="1">typedef <type><name pos:line="127" pos:column="9">interface</name> <name pos:line="127" pos:column="19">CodeAttribute2</name></type> <name pos:line="127" pos:column="34">CodeAttribute2</name>;</typedef>
<cpp:endif pos:line="128" pos:column="1">#<cpp:directive pos:line="128" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="128" pos:column="9">/* __CodeAttribute2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">ifndef</cpp:directive> <name pos:line="131" pos:column="9">__CodeVariable2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="132" pos:column="9">__CodeVariable2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="133" pos:column="1">typedef <type><name pos:line="133" pos:column="9">interface</name> <name pos:line="133" pos:column="19">CodeVariable2</name></type> <name pos:line="133" pos:column="33">CodeVariable2</name>;</typedef>
<cpp:endif pos:line="134" pos:column="1">#<cpp:directive pos:line="134" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="134" pos:column="9">/* __CodeVariable2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="137" pos:column="1">#<cpp:directive pos:line="137" pos:column="2">ifndef</cpp:directive> <name pos:line="137" pos:column="9">__CodeDelegate2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="138" pos:column="9">__CodeDelegate2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="139" pos:column="1">typedef <type><name pos:line="139" pos:column="9">interface</name> <name pos:line="139" pos:column="19">CodeDelegate2</name></type> <name pos:line="139" pos:column="33">CodeDelegate2</name>;</typedef>
<cpp:endif pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="140" pos:column="9">/* __CodeDelegate2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">ifndef</cpp:directive> <name pos:line="143" pos:column="9">__CodeStruct2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="144" pos:column="9">__CodeStruct2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="145" pos:column="1">typedef <type><name pos:line="145" pos:column="9">interface</name> <name pos:line="145" pos:column="19">CodeStruct2</name></type> <name pos:line="145" pos:column="31">CodeStruct2</name>;</typedef>
<cpp:endif pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="146" pos:column="9">/* __CodeStruct2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="149" pos:column="1">#<cpp:directive pos:line="149" pos:column="2">ifndef</cpp:directive> <name pos:line="149" pos:column="9">__CodeInterface2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="150" pos:column="9">__CodeInterface2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="151" pos:column="1">typedef <type><name pos:line="151" pos:column="9">interface</name> <name pos:line="151" pos:column="19">CodeInterface2</name></type> <name pos:line="151" pos:column="34">CodeInterface2</name>;</typedef>
<cpp:endif pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="152" pos:column="9">/* __CodeInterface2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="155" pos:column="1">#<cpp:directive pos:line="155" pos:column="2">ifndef</cpp:directive> <name pos:line="155" pos:column="9">__CodeTypeRef2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="156" pos:column="9">__CodeTypeRef2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="157" pos:column="1">typedef <type><name pos:line="157" pos:column="9">interface</name> <name pos:line="157" pos:column="19">CodeTypeRef2</name></type> <name pos:line="157" pos:column="32">CodeTypeRef2</name>;</typedef>
<cpp:endif pos:line="158" pos:column="1">#<cpp:directive pos:line="158" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="158" pos:column="9">/* __CodeTypeRef2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="161" pos:column="1">#<cpp:directive pos:line="161" pos:column="2">ifndef</cpp:directive> <name pos:line="161" pos:column="9">__CodeProperty2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="162" pos:column="1">#<cpp:directive pos:line="162" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="162" pos:column="9">__CodeProperty2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="163" pos:column="1">typedef <type><name pos:line="163" pos:column="9">interface</name> <name pos:line="163" pos:column="19">CodeProperty2</name></type> <name pos:line="163" pos:column="33">CodeProperty2</name>;</typedef>
<cpp:endif pos:line="164" pos:column="1">#<cpp:directive pos:line="164" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="164" pos:column="9">/* __CodeProperty2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="167" pos:column="1">#<cpp:directive pos:line="167" pos:column="2">ifndef</cpp:directive> <name pos:line="167" pos:column="9">___dispCodeModelEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="168" pos:column="1">#<cpp:directive pos:line="168" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="168" pos:column="9">___dispCodeModelEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="169" pos:column="1">typedef <type><name pos:line="169" pos:column="9">interface</name> <name pos:line="169" pos:column="19">_dispCodeModelEvents</name></type> <name pos:line="169" pos:column="40">_dispCodeModelEvents</name>;</typedef>
<cpp:endif pos:line="170" pos:column="1">#<cpp:directive pos:line="170" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="170" pos:column="9">/* ___dispCodeModelEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="173" pos:column="1">#<cpp:directive pos:line="173" pos:column="2">ifndef</cpp:directive> <name pos:line="173" pos:column="9">__CodeModelEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="174" pos:column="9">__CodeModelEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="176" pos:column="1">#<cpp:directive pos:line="176" pos:column="2">ifdef</cpp:directive> <name pos:line="176" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="177" pos:column="1">typedef <type pos:line="177" pos:column="9">class <name pos:line="177" pos:column="15">CodeModelEvents</name></type> <name pos:line="177" pos:column="31">CodeModelEvents</name>;</typedef>
<cpp:else pos:line="178" pos:column="1">#<cpp:directive pos:line="178" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="179" pos:column="1">typedef <type pos:line="179" pos:column="9">struct <name pos:line="179" pos:column="16">CodeModelEvents</name></type> <name pos:line="179" pos:column="32">CodeModelEvents</name>;</typedef>
<cpp:endif pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="180" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="182" pos:column="1">#<cpp:directive pos:line="182" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="182" pos:column="9">/* __CodeModelEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="185" pos:column="1">#<cpp:directive pos:line="185" pos:column="2">ifndef</cpp:directive> <name pos:line="185" pos:column="9">___CodeModelEventsRoot_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="186" pos:column="1">#<cpp:directive pos:line="186" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="186" pos:column="9">___CodeModelEventsRoot_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="187" pos:column="1">typedef <type><name pos:line="187" pos:column="9">interface</name> <name pos:line="187" pos:column="19">_CodeModelEventsRoot</name></type> <name pos:line="187" pos:column="40">_CodeModelEventsRoot</name>;</typedef>
<cpp:endif pos:line="188" pos:column="1">#<cpp:directive pos:line="188" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="188" pos:column="9">/* ___CodeModelEventsRoot_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="191" pos:column="1">#<cpp:directive pos:line="191" pos:column="2">ifndef</cpp:directive> <name pos:line="191" pos:column="9">___CodeModelEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="192" pos:column="1">#<cpp:directive pos:line="192" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="192" pos:column="9">___CodeModelEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="193" pos:column="1">typedef <type><name pos:line="193" pos:column="9">interface</name> <name pos:line="193" pos:column="19">_CodeModelEvents</name></type> <name pos:line="193" pos:column="36">_CodeModelEvents</name>;</typedef>
<cpp:endif pos:line="194" pos:column="1">#<cpp:directive pos:line="194" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="194" pos:column="9">/* ___CodeModelEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">ifndef</cpp:directive> <name pos:line="197" pos:column="9">__Debugger2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="198" pos:column="1">#<cpp:directive pos:line="198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="198" pos:column="9">__Debugger2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="199" pos:column="1">typedef <type><name pos:line="199" pos:column="9">interface</name> <name pos:line="199" pos:column="19">Debugger2</name></type> <name pos:line="199" pos:column="29">Debugger2</name>;</typedef>
<cpp:endif pos:line="200" pos:column="1">#<cpp:directive pos:line="200" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="200" pos:column="9">/* __Debugger2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="203" pos:column="1">#<cpp:directive pos:line="203" pos:column="2">ifndef</cpp:directive> <name pos:line="203" pos:column="9">__Process2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="204" pos:column="1">#<cpp:directive pos:line="204" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="204" pos:column="9">__Process2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="205" pos:column="1">typedef <type><name pos:line="205" pos:column="9">interface</name> <name pos:line="205" pos:column="19">Process2</name></type> <name pos:line="205" pos:column="28">Process2</name>;</typedef>
<cpp:endif pos:line="206" pos:column="1">#<cpp:directive pos:line="206" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="206" pos:column="9">/* __Process2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="209" pos:column="1">#<cpp:directive pos:line="209" pos:column="2">ifndef</cpp:directive> <name pos:line="209" pos:column="9">__Breakpoint2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="210" pos:column="1">#<cpp:directive pos:line="210" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="210" pos:column="9">__Breakpoint2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="211" pos:column="1">typedef <type><name pos:line="211" pos:column="9">interface</name> <name pos:line="211" pos:column="19">Breakpoint2</name></type> <name pos:line="211" pos:column="31">Breakpoint2</name>;</typedef>
<cpp:endif pos:line="212" pos:column="1">#<cpp:directive pos:line="212" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="212" pos:column="9">/* __Breakpoint2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="215" pos:column="1">#<cpp:directive pos:line="215" pos:column="2">ifndef</cpp:directive> <name pos:line="215" pos:column="9">__Engine_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="216" pos:column="1">#<cpp:directive pos:line="216" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="216" pos:column="9">__Engine_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="217" pos:column="1">typedef <type><name pos:line="217" pos:column="9">interface</name> <name pos:line="217" pos:column="19">Engine</name></type> <name pos:line="217" pos:column="26">Engine</name>;</typedef>
<cpp:endif pos:line="218" pos:column="1">#<cpp:directive pos:line="218" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="218" pos:column="9">/* __Engine_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="221" pos:column="1">#<cpp:directive pos:line="221" pos:column="2">ifndef</cpp:directive> <name pos:line="221" pos:column="9">__Transport_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="222" pos:column="1">#<cpp:directive pos:line="222" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="222" pos:column="9">__Transport_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="223" pos:column="1">typedef <type><name pos:line="223" pos:column="9">interface</name> <name pos:line="223" pos:column="19">Transport</name></type> <name pos:line="223" pos:column="29">Transport</name>;</typedef>
<cpp:endif pos:line="224" pos:column="1">#<cpp:directive pos:line="224" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="224" pos:column="9">/* __Transport_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="227" pos:column="1">#<cpp:directive pos:line="227" pos:column="2">ifndef</cpp:directive> <name pos:line="227" pos:column="9">__Engines_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="228" pos:column="1">#<cpp:directive pos:line="228" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="228" pos:column="9">__Engines_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="229" pos:column="1">typedef <type><name pos:line="229" pos:column="9">interface</name> <name pos:line="229" pos:column="19">Engines</name></type> <name pos:line="229" pos:column="27">Engines</name>;</typedef>
<cpp:endif pos:line="230" pos:column="1">#<cpp:directive pos:line="230" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="230" pos:column="9">/* __Engines_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="233" pos:column="1">#<cpp:directive pos:line="233" pos:column="2">ifndef</cpp:directive> <name pos:line="233" pos:column="9">__Transports_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="234" pos:column="1">#<cpp:directive pos:line="234" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="234" pos:column="9">__Transports_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="235" pos:column="1">typedef <type><name pos:line="235" pos:column="9">interface</name> <name pos:line="235" pos:column="19">Transports</name></type> <name pos:line="235" pos:column="30">Transports</name>;</typedef>
<cpp:endif pos:line="236" pos:column="1">#<cpp:directive pos:line="236" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="236" pos:column="9">/* __Transports_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="239" pos:column="1">#<cpp:directive pos:line="239" pos:column="2">ifndef</cpp:directive> <name pos:line="239" pos:column="9">___dispDebuggerProcessEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="240" pos:column="1">#<cpp:directive pos:line="240" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="240" pos:column="9">___dispDebuggerProcessEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="241" pos:column="1">typedef <type><name pos:line="241" pos:column="9">interface</name> <name pos:line="241" pos:column="19">_dispDebuggerProcessEvents</name></type> <name pos:line="241" pos:column="46">_dispDebuggerProcessEvents</name>;</typedef>
<cpp:endif pos:line="242" pos:column="1">#<cpp:directive pos:line="242" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="242" pos:column="9">/* ___dispDebuggerProcessEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="245" pos:column="1">#<cpp:directive pos:line="245" pos:column="2">ifndef</cpp:directive> <name pos:line="245" pos:column="9">___DebuggerProcessEventsRoot_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="246" pos:column="1">#<cpp:directive pos:line="246" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="246" pos:column="9">___DebuggerProcessEventsRoot_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="247" pos:column="1">typedef <type><name pos:line="247" pos:column="9">interface</name> <name pos:line="247" pos:column="19">_DebuggerProcessEventsRoot</name></type> <name pos:line="247" pos:column="46">_DebuggerProcessEventsRoot</name>;</typedef>
<cpp:endif pos:line="248" pos:column="1">#<cpp:directive pos:line="248" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="248" pos:column="9">/* ___DebuggerProcessEventsRoot_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="251" pos:column="1">#<cpp:directive pos:line="251" pos:column="2">ifndef</cpp:directive> <name pos:line="251" pos:column="9">___DebuggerProcessEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="252" pos:column="1">#<cpp:directive pos:line="252" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="252" pos:column="9">___DebuggerProcessEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="253" pos:column="1">typedef <type><name pos:line="253" pos:column="9">interface</name> <name pos:line="253" pos:column="19">_DebuggerProcessEvents</name></type> <name pos:line="253" pos:column="42">_DebuggerProcessEvents</name>;</typedef>
<cpp:endif pos:line="254" pos:column="1">#<cpp:directive pos:line="254" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="254" pos:column="9">/* ___DebuggerProcessEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="257" pos:column="1">#<cpp:directive pos:line="257" pos:column="2">ifndef</cpp:directive> <name pos:line="257" pos:column="9">__DebuggerProcessEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="258" pos:column="1">#<cpp:directive pos:line="258" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="258" pos:column="9">__DebuggerProcessEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="260" pos:column="1">#<cpp:directive pos:line="260" pos:column="2">ifdef</cpp:directive> <name pos:line="260" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="261" pos:column="1">typedef <type pos:line="261" pos:column="9">class <name pos:line="261" pos:column="15">DebuggerProcessEvents</name></type> <name pos:line="261" pos:column="37">DebuggerProcessEvents</name>;</typedef>
<cpp:else pos:line="262" pos:column="1">#<cpp:directive pos:line="262" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="263" pos:column="1">typedef <type pos:line="263" pos:column="9">struct <name pos:line="263" pos:column="16">DebuggerProcessEvents</name></type> <name pos:line="263" pos:column="38">DebuggerProcessEvents</name>;</typedef>
<cpp:endif pos:line="264" pos:column="1">#<cpp:directive pos:line="264" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="264" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="266" pos:column="1">#<cpp:directive pos:line="266" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="266" pos:column="9">/* __DebuggerProcessEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="269" pos:column="1">#<cpp:directive pos:line="269" pos:column="2">ifndef</cpp:directive> <name pos:line="269" pos:column="9">___dispDebuggerExpressionEvaluationEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="270" pos:column="1">#<cpp:directive pos:line="270" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="270" pos:column="9">___dispDebuggerExpressionEvaluationEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="271" pos:column="1">typedef <type><name pos:line="271" pos:column="9">interface</name> <name pos:line="271" pos:column="19">_dispDebuggerExpressionEvaluationEvents</name></type> <name pos:line="271" pos:column="59">_dispDebuggerExpressionEvaluationEvents</name>;</typedef>
<cpp:endif pos:line="272" pos:column="1">#<cpp:directive pos:line="272" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="272" pos:column="9">/* ___dispDebuggerExpressionEvaluationEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="275" pos:column="1">#<cpp:directive pos:line="275" pos:column="2">ifndef</cpp:directive> <name pos:line="275" pos:column="9">___DebuggerExpressionEvaluationEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="276" pos:column="1">#<cpp:directive pos:line="276" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="276" pos:column="9">___DebuggerExpressionEvaluationEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="277" pos:column="1">typedef <type><name pos:line="277" pos:column="9">interface</name> <name pos:line="277" pos:column="19">_DebuggerExpressionEvaluationEvents</name></type> <name pos:line="277" pos:column="55">_DebuggerExpressionEvaluationEvents</name>;</typedef>
<cpp:endif pos:line="278" pos:column="1">#<cpp:directive pos:line="278" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="278" pos:column="9">/* ___DebuggerExpressionEvaluationEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="281" pos:column="1">#<cpp:directive pos:line="281" pos:column="2">ifndef</cpp:directive> <name pos:line="281" pos:column="9">___DebuggerExpressionEvaluationEventsRoot_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="282" pos:column="1">#<cpp:directive pos:line="282" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="282" pos:column="9">___DebuggerExpressionEvaluationEventsRoot_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="283" pos:column="1">typedef <type><name pos:line="283" pos:column="9">interface</name> <name pos:line="283" pos:column="19">_DebuggerExpressionEvaluationEventsRoot</name></type> <name pos:line="283" pos:column="59">_DebuggerExpressionEvaluationEventsRoot</name>;</typedef>
<cpp:endif pos:line="284" pos:column="1">#<cpp:directive pos:line="284" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="284" pos:column="9">/* ___DebuggerExpressionEvaluationEventsRoot_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="287" pos:column="1">#<cpp:directive pos:line="287" pos:column="2">ifndef</cpp:directive> <name pos:line="287" pos:column="9">__DebuggerExpressionEvaluationEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="288" pos:column="1">#<cpp:directive pos:line="288" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="288" pos:column="9">__DebuggerExpressionEvaluationEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="290" pos:column="1">#<cpp:directive pos:line="290" pos:column="2">ifdef</cpp:directive> <name pos:line="290" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="291" pos:column="1">typedef <type pos:line="291" pos:column="9">class <name pos:line="291" pos:column="15">DebuggerExpressionEvaluationEvents</name></type> <name pos:line="291" pos:column="50">DebuggerExpressionEvaluationEvents</name>;</typedef>
<cpp:else pos:line="292" pos:column="1">#<cpp:directive pos:line="292" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="293" pos:column="1">typedef <type pos:line="293" pos:column="9">struct <name pos:line="293" pos:column="16">DebuggerExpressionEvaluationEvents</name></type> <name pos:line="293" pos:column="51">DebuggerExpressionEvaluationEvents</name>;</typedef>
<cpp:endif pos:line="294" pos:column="1">#<cpp:directive pos:line="294" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="294" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="296" pos:column="1">#<cpp:directive pos:line="296" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="296" pos:column="9">/* __DebuggerExpressionEvaluationEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="299" pos:column="1">#<cpp:directive pos:line="299" pos:column="2">ifndef</cpp:directive> <name pos:line="299" pos:column="9">__ToolWindows_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="300" pos:column="1">#<cpp:directive pos:line="300" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="300" pos:column="9">__ToolWindows_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="301" pos:column="1">typedef <type><name pos:line="301" pos:column="9">interface</name> <name pos:line="301" pos:column="19">ToolWindows</name></type> <name pos:line="301" pos:column="31">ToolWindows</name>;</typedef>
<cpp:endif pos:line="302" pos:column="1">#<cpp:directive pos:line="302" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="302" pos:column="9">/* __ToolWindows_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="305" pos:column="1">#<cpp:directive pos:line="305" pos:column="2">ifndef</cpp:directive> <name pos:line="305" pos:column="9">__Windows2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="306" pos:column="1">#<cpp:directive pos:line="306" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="306" pos:column="9">__Windows2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="307" pos:column="1">typedef <type><name pos:line="307" pos:column="9">interface</name> <name pos:line="307" pos:column="19">Windows2</name></type> <name pos:line="307" pos:column="28">Windows2</name>;</typedef>
<cpp:endif pos:line="308" pos:column="1">#<cpp:directive pos:line="308" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="308" pos:column="9">/* __Windows2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="311" pos:column="1">#<cpp:directive pos:line="311" pos:column="2">ifndef</cpp:directive> <name pos:line="311" pos:column="9">__Window2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="312" pos:column="1">#<cpp:directive pos:line="312" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="312" pos:column="9">__Window2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="313" pos:column="1">typedef <type><name pos:line="313" pos:column="9">interface</name> <name pos:line="313" pos:column="19">Window2</name></type> <name pos:line="313" pos:column="27">Window2</name>;</typedef>
<cpp:endif pos:line="314" pos:column="1">#<cpp:directive pos:line="314" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="314" pos:column="9">/* __Window2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="317" pos:column="1">#<cpp:directive pos:line="317" pos:column="2">ifndef</cpp:directive> <name pos:line="317" pos:column="9">__SourceControlBindings_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="318" pos:column="1">#<cpp:directive pos:line="318" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="318" pos:column="9">__SourceControlBindings_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="319" pos:column="1">typedef <type><name pos:line="319" pos:column="9">interface</name> <name pos:line="319" pos:column="19">SourceControlBindings</name></type> <name pos:line="319" pos:column="41">SourceControlBindings</name>;</typedef>
<cpp:endif pos:line="320" pos:column="1">#<cpp:directive pos:line="320" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="320" pos:column="9">/* __SourceControlBindings_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="323" pos:column="1">#<cpp:directive pos:line="323" pos:column="2">ifndef</cpp:directive> <name pos:line="323" pos:column="9">__DTE2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="324" pos:column="1">#<cpp:directive pos:line="324" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="324" pos:column="9">__DTE2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="325" pos:column="1">typedef <type><name pos:line="325" pos:column="9">interface</name> <name pos:line="325" pos:column="19">DTE2</name></type> <name pos:line="325" pos:column="24">DTE2</name>;</typedef>
<cpp:endif pos:line="326" pos:column="1">#<cpp:directive pos:line="326" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="326" pos:column="9">/* __DTE2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="329" pos:column="1">#<cpp:directive pos:line="329" pos:column="2">ifndef</cpp:directive> <name pos:line="329" pos:column="9">__WindowVisibilityEventsRoot_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="330" pos:column="1">#<cpp:directive pos:line="330" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="330" pos:column="9">__WindowVisibilityEventsRoot_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="331" pos:column="1">typedef <type><name pos:line="331" pos:column="9">interface</name> <name pos:line="331" pos:column="19">WindowVisibilityEventsRoot</name></type> <name pos:line="331" pos:column="46">WindowVisibilityEventsRoot</name>;</typedef>
<cpp:endif pos:line="332" pos:column="1">#<cpp:directive pos:line="332" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="332" pos:column="9">/* __WindowVisibilityEventsRoot_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="335" pos:column="1">#<cpp:directive pos:line="335" pos:column="2">ifndef</cpp:directive> <name pos:line="335" pos:column="9">___WindowVisibilityEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="336" pos:column="1">#<cpp:directive pos:line="336" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="336" pos:column="9">___WindowVisibilityEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="337" pos:column="1">typedef <type><name pos:line="337" pos:column="9">interface</name> <name pos:line="337" pos:column="19">_WindowVisibilityEvents</name></type> <name pos:line="337" pos:column="43">_WindowVisibilityEvents</name>;</typedef>
<cpp:endif pos:line="338" pos:column="1">#<cpp:directive pos:line="338" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="338" pos:column="9">/* ___WindowVisibilityEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="341" pos:column="1">#<cpp:directive pos:line="341" pos:column="2">ifndef</cpp:directive> <name pos:line="341" pos:column="9">___dispWindowVisibilityEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="342" pos:column="1">#<cpp:directive pos:line="342" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="342" pos:column="9">___dispWindowVisibilityEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="343" pos:column="1">typedef <type><name pos:line="343" pos:column="9">interface</name> <name pos:line="343" pos:column="19">_dispWindowVisibilityEvents</name></type> <name pos:line="343" pos:column="47">_dispWindowVisibilityEvents</name>;</typedef>
<cpp:endif pos:line="344" pos:column="1">#<cpp:directive pos:line="344" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="344" pos:column="9">/* ___dispWindowVisibilityEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="347" pos:column="1">#<cpp:directive pos:line="347" pos:column="2">ifndef</cpp:directive> <name pos:line="347" pos:column="9">__WindowVisibilityEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="348" pos:column="1">#<cpp:directive pos:line="348" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="348" pos:column="9">__WindowVisibilityEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="350" pos:column="1">#<cpp:directive pos:line="350" pos:column="2">ifdef</cpp:directive> <name pos:line="350" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="351" pos:column="1">typedef <type pos:line="351" pos:column="9">class <name pos:line="351" pos:column="15">WindowVisibilityEvents</name></type> <name pos:line="351" pos:column="38">WindowVisibilityEvents</name>;</typedef>
<cpp:else pos:line="352" pos:column="1">#<cpp:directive pos:line="352" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="353" pos:column="1">typedef <type pos:line="353" pos:column="9">struct <name pos:line="353" pos:column="16">WindowVisibilityEvents</name></type> <name pos:line="353" pos:column="39">WindowVisibilityEvents</name>;</typedef>
<cpp:endif pos:line="354" pos:column="1">#<cpp:directive pos:line="354" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="354" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="356" pos:column="1">#<cpp:directive pos:line="356" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="356" pos:column="9">/* __WindowVisibilityEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="359" pos:column="1">#<cpp:directive pos:line="359" pos:column="2">ifndef</cpp:directive> <name pos:line="359" pos:column="9">___TextDocumentKeyPressEventsRoot_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="360" pos:column="1">#<cpp:directive pos:line="360" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="360" pos:column="9">___TextDocumentKeyPressEventsRoot_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="361" pos:column="1">typedef <type><name pos:line="361" pos:column="9">interface</name> <name pos:line="361" pos:column="19">_TextDocumentKeyPressEventsRoot</name></type> <name pos:line="361" pos:column="51">_TextDocumentKeyPressEventsRoot</name>;</typedef>
<cpp:endif pos:line="362" pos:column="1">#<cpp:directive pos:line="362" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="362" pos:column="9">/* ___TextDocumentKeyPressEventsRoot_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="365" pos:column="1">#<cpp:directive pos:line="365" pos:column="2">ifndef</cpp:directive> <name pos:line="365" pos:column="9">___TextDocumentKeyPressEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="366" pos:column="1">#<cpp:directive pos:line="366" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="366" pos:column="9">___TextDocumentKeyPressEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="367" pos:column="1">typedef <type><name pos:line="367" pos:column="9">interface</name> <name pos:line="367" pos:column="19">_TextDocumentKeyPressEvents</name></type> <name pos:line="367" pos:column="47">_TextDocumentKeyPressEvents</name>;</typedef>
<cpp:endif pos:line="368" pos:column="1">#<cpp:directive pos:line="368" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="368" pos:column="9">/* ___TextDocumentKeyPressEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="371" pos:column="1">#<cpp:directive pos:line="371" pos:column="2">ifndef</cpp:directive> <name pos:line="371" pos:column="9">___dispTextDocumentKeyPressEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="372" pos:column="1">#<cpp:directive pos:line="372" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="372" pos:column="9">___dispTextDocumentKeyPressEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="373" pos:column="1">typedef <type><name pos:line="373" pos:column="9">interface</name> <name pos:line="373" pos:column="19">_dispTextDocumentKeyPressEvents</name></type> <name pos:line="373" pos:column="51">_dispTextDocumentKeyPressEvents</name>;</typedef>
<cpp:endif pos:line="374" pos:column="1">#<cpp:directive pos:line="374" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="374" pos:column="9">/* ___dispTextDocumentKeyPressEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="377" pos:column="1">#<cpp:directive pos:line="377" pos:column="2">ifndef</cpp:directive> <name pos:line="377" pos:column="9">__TextDocumentKeyPressEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="378" pos:column="1">#<cpp:directive pos:line="378" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="378" pos:column="9">__TextDocumentKeyPressEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="380" pos:column="1">#<cpp:directive pos:line="380" pos:column="2">ifdef</cpp:directive> <name pos:line="380" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="381" pos:column="1">typedef <type pos:line="381" pos:column="9">class <name pos:line="381" pos:column="15">TextDocumentKeyPressEvents</name></type> <name pos:line="381" pos:column="42">TextDocumentKeyPressEvents</name>;</typedef>
<cpp:else pos:line="382" pos:column="1">#<cpp:directive pos:line="382" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="383" pos:column="1">typedef <type pos:line="383" pos:column="9">struct <name pos:line="383" pos:column="16">TextDocumentKeyPressEvents</name></type> <name pos:line="383" pos:column="43">TextDocumentKeyPressEvents</name>;</typedef>
<cpp:endif pos:line="384" pos:column="1">#<cpp:directive pos:line="384" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="384" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="386" pos:column="1">#<cpp:directive pos:line="386" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="386" pos:column="9">/* __TextDocumentKeyPressEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="389" pos:column="1">#<cpp:directive pos:line="389" pos:column="2">ifndef</cpp:directive> <name pos:line="389" pos:column="9">___PublishEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="390" pos:column="1">#<cpp:directive pos:line="390" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="390" pos:column="9">___PublishEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="391" pos:column="1">typedef <type><name pos:line="391" pos:column="9">interface</name> <name pos:line="391" pos:column="19">_PublishEvents</name></type> <name pos:line="391" pos:column="34">_PublishEvents</name>;</typedef>
<cpp:endif pos:line="392" pos:column="1">#<cpp:directive pos:line="392" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="392" pos:column="9">/* ___PublishEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="395" pos:column="1">#<cpp:directive pos:line="395" pos:column="2">ifndef</cpp:directive> <name pos:line="395" pos:column="9">___dispPublishEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="396" pos:column="1">#<cpp:directive pos:line="396" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="396" pos:column="9">___dispPublishEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="397" pos:column="1">typedef <type><name pos:line="397" pos:column="9">interface</name> <name pos:line="397" pos:column="19">_dispPublishEvents</name></type> <name pos:line="397" pos:column="38">_dispPublishEvents</name>;</typedef>
<cpp:endif pos:line="398" pos:column="1">#<cpp:directive pos:line="398" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="398" pos:column="9">/* ___dispPublishEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="401" pos:column="1">#<cpp:directive pos:line="401" pos:column="2">ifndef</cpp:directive> <name pos:line="401" pos:column="9">__PublishEvents_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="402" pos:column="1">#<cpp:directive pos:line="402" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="402" pos:column="9">__PublishEvents_FWD_DEFINED__</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="404" pos:column="1">#<cpp:directive pos:line="404" pos:column="2">ifdef</cpp:directive> <name pos:line="404" pos:column="8">__cplusplus</name></cpp:ifdef>
<typedef pos:line="405" pos:column="1">typedef <type pos:line="405" pos:column="9">class <name pos:line="405" pos:column="15">PublishEvents</name></type> <name pos:line="405" pos:column="29">PublishEvents</name>;</typedef>
<cpp:else pos:line="406" pos:column="1">#<cpp:directive pos:line="406" pos:column="2">else</cpp:directive></cpp:else>
<typedef pos:line="407" pos:column="1">typedef <type pos:line="407" pos:column="9">struct <name pos:line="407" pos:column="16">PublishEvents</name></type> <name pos:line="407" pos:column="30">PublishEvents</name>;</typedef>
<cpp:endif pos:line="408" pos:column="1">#<cpp:directive pos:line="408" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="408" pos:column="8">/* __cplusplus */</comment>

<cpp:endif pos:line="410" pos:column="1">#<cpp:directive pos:line="410" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="410" pos:column="9">/* __PublishEvents_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="413" pos:column="1">#<cpp:directive pos:line="413" pos:column="2">ifndef</cpp:directive> <name pos:line="413" pos:column="9">__Events2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="414" pos:column="1">#<cpp:directive pos:line="414" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="414" pos:column="9">__Events2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="415" pos:column="1">typedef <type><name pos:line="415" pos:column="9">interface</name> <name pos:line="415" pos:column="19">Events2</name></type> <name pos:line="415" pos:column="27">Events2</name>;</typedef>
<cpp:endif pos:line="416" pos:column="1">#<cpp:directive pos:line="416" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="416" pos:column="9">/* __Events2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="419" pos:column="1">#<cpp:directive pos:line="419" pos:column="2">ifndef</cpp:directive> <name pos:line="419" pos:column="9">__Solution2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="420" pos:column="1">#<cpp:directive pos:line="420" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="420" pos:column="9">__Solution2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="421" pos:column="1">typedef <type><name pos:line="421" pos:column="9">interface</name> <name pos:line="421" pos:column="19">Solution2</name></type> <name pos:line="421" pos:column="29">Solution2</name>;</typedef>
<cpp:endif pos:line="422" pos:column="1">#<cpp:directive pos:line="422" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="422" pos:column="9">/* __Solution2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="425" pos:column="1">#<cpp:directive pos:line="425" pos:column="2">ifndef</cpp:directive> <name pos:line="425" pos:column="9">__SolutionFolder_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="426" pos:column="1">#<cpp:directive pos:line="426" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="426" pos:column="9">__SolutionFolder_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="427" pos:column="1">typedef <type><name pos:line="427" pos:column="9">interface</name> <name pos:line="427" pos:column="19">SolutionFolder</name></type> <name pos:line="427" pos:column="34">SolutionFolder</name>;</typedef>
<cpp:endif pos:line="428" pos:column="1">#<cpp:directive pos:line="428" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="428" pos:column="9">/* __SolutionFolder_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="431" pos:column="1">#<cpp:directive pos:line="431" pos:column="2">ifndef</cpp:directive> <name pos:line="431" pos:column="9">__TaskItems2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="432" pos:column="1">#<cpp:directive pos:line="432" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="432" pos:column="9">__TaskItems2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="433" pos:column="1">typedef <type><name pos:line="433" pos:column="9">interface</name> <name pos:line="433" pos:column="19">TaskItems2</name></type> <name pos:line="433" pos:column="30">TaskItems2</name>;</typedef>
<cpp:endif pos:line="434" pos:column="1">#<cpp:directive pos:line="434" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="434" pos:column="9">/* __TaskItems2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="437" pos:column="1">#<cpp:directive pos:line="437" pos:column="2">ifndef</cpp:directive> <name pos:line="437" pos:column="9">__EditPoint2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="438" pos:column="1">#<cpp:directive pos:line="438" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="438" pos:column="9">__EditPoint2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="439" pos:column="1">typedef <type><name pos:line="439" pos:column="9">interface</name> <name pos:line="439" pos:column="19">EditPoint2</name></type> <name pos:line="439" pos:column="30">EditPoint2</name>;</typedef>
<cpp:endif pos:line="440" pos:column="1">#<cpp:directive pos:line="440" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="440" pos:column="9">/* __EditPoint2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="443" pos:column="1">#<cpp:directive pos:line="443" pos:column="2">ifndef</cpp:directive> <name pos:line="443" pos:column="9">__IVsExtensibility2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="444" pos:column="1">#<cpp:directive pos:line="444" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="444" pos:column="9">__IVsExtensibility2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="445" pos:column="1">typedef <type><name pos:line="445" pos:column="9">interface</name> <name pos:line="445" pos:column="19">IVsExtensibility2</name></type> <name pos:line="445" pos:column="37">IVsExtensibility2</name>;</typedef>
<cpp:endif pos:line="446" pos:column="1">#<cpp:directive pos:line="446" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="446" pos:column="9">/* __IVsExtensibility2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="449" pos:column="1">#<cpp:directive pos:line="449" pos:column="2">ifndef</cpp:directive> <name pos:line="449" pos:column="9">__IInternalExtenderProvider_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="450" pos:column="1">#<cpp:directive pos:line="450" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="450" pos:column="9">__IInternalExtenderProvider_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="451" pos:column="1">typedef <type><name pos:line="451" pos:column="9">interface</name> <name pos:line="451" pos:column="19">IInternalExtenderProvider</name></type> <name pos:line="451" pos:column="45">IInternalExtenderProvider</name>;</typedef>
<cpp:endif pos:line="452" pos:column="1">#<cpp:directive pos:line="452" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="452" pos:column="9">/* __IInternalExtenderProvider_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="455" pos:column="1">#<cpp:directive pos:line="455" pos:column="2">ifndef</cpp:directive> <name pos:line="455" pos:column="9">__Find2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="456" pos:column="1">#<cpp:directive pos:line="456" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="456" pos:column="9">__Find2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="457" pos:column="1">typedef <type><name pos:line="457" pos:column="9">interface</name> <name pos:line="457" pos:column="19">Find2</name></type> <name pos:line="457" pos:column="25">Find2</name>;</typedef>
<cpp:endif pos:line="458" pos:column="1">#<cpp:directive pos:line="458" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="458" pos:column="9">/* __Find2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="461" pos:column="1">#<cpp:directive pos:line="461" pos:column="2">ifndef</cpp:directive> <name pos:line="461" pos:column="9">__LifetimeInformation_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="462" pos:column="1">#<cpp:directive pos:line="462" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="462" pos:column="9">__LifetimeInformation_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="463" pos:column="1">typedef <type><name pos:line="463" pos:column="9">interface</name> <name pos:line="463" pos:column="19">LifetimeInformation</name></type> <name pos:line="463" pos:column="39">LifetimeInformation</name>;</typedef>
<cpp:endif pos:line="464" pos:column="1">#<cpp:directive pos:line="464" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="464" pos:column="9">/* __LifetimeInformation_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="467" pos:column="1">#<cpp:directive pos:line="467" pos:column="2">ifndef</cpp:directive> <name pos:line="467" pos:column="9">__ToolBoxItem2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="468" pos:column="1">#<cpp:directive pos:line="468" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="468" pos:column="9">__ToolBoxItem2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="469" pos:column="1">typedef <type><name pos:line="469" pos:column="9">interface</name> <name pos:line="469" pos:column="19">ToolBoxItem2</name></type> <name pos:line="469" pos:column="32">ToolBoxItem2</name>;</typedef>
<cpp:endif pos:line="470" pos:column="1">#<cpp:directive pos:line="470" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="470" pos:column="9">/* __ToolBoxItem2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="473" pos:column="1">#<cpp:directive pos:line="473" pos:column="2">ifndef</cpp:directive> <name pos:line="473" pos:column="9">__ToolBoxTab2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="474" pos:column="1">#<cpp:directive pos:line="474" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="474" pos:column="9">__ToolBoxTab2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="475" pos:column="1">typedef <type><name pos:line="475" pos:column="9">interface</name> <name pos:line="475" pos:column="19">ToolBoxTab2</name></type> <name pos:line="475" pos:column="31">ToolBoxTab2</name>;</typedef>
<cpp:endif pos:line="476" pos:column="1">#<cpp:directive pos:line="476" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="476" pos:column="9">/* __ToolBoxTab2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="479" pos:column="1">#<cpp:directive pos:line="479" pos:column="2">ifndef</cpp:directive> <name pos:line="479" pos:column="9">__IncrementalSearch_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="480" pos:column="1">#<cpp:directive pos:line="480" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="480" pos:column="9">__IncrementalSearch_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="481" pos:column="1">typedef <type><name pos:line="481" pos:column="9">interface</name> <name pos:line="481" pos:column="19">IncrementalSearch</name></type> <name pos:line="481" pos:column="37">IncrementalSearch</name>;</typedef>
<cpp:endif pos:line="482" pos:column="1">#<cpp:directive pos:line="482" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="482" pos:column="9">/* __IncrementalSearch_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="485" pos:column="1">#<cpp:directive pos:line="485" pos:column="2">ifndef</cpp:directive> <name pos:line="485" pos:column="9">__TextPane2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="486" pos:column="1">#<cpp:directive pos:line="486" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="486" pos:column="9">__TextPane2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="487" pos:column="1">typedef <type><name pos:line="487" pos:column="9">interface</name> <name pos:line="487" pos:column="19">TextPane2</name></type> <name pos:line="487" pos:column="29">TextPane2</name>;</typedef>
<cpp:endif pos:line="488" pos:column="1">#<cpp:directive pos:line="488" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="488" pos:column="9">/* __TextPane2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="491" pos:column="1">#<cpp:directive pos:line="491" pos:column="2">ifndef</cpp:directive> <name pos:line="491" pos:column="9">__SolutionConfiguration2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="492" pos:column="1">#<cpp:directive pos:line="492" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="492" pos:column="9">__SolutionConfiguration2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="493" pos:column="1">typedef <type><name pos:line="493" pos:column="9">interface</name> <name pos:line="493" pos:column="19">SolutionConfiguration2</name></type> <name pos:line="493" pos:column="42">SolutionConfiguration2</name>;</typedef>
<cpp:endif pos:line="494" pos:column="1">#<cpp:directive pos:line="494" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="494" pos:column="9">/* __SolutionConfiguration2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="497" pos:column="1">#<cpp:directive pos:line="497" pos:column="2">ifndef</cpp:directive> <name pos:line="497" pos:column="9">__IVsProfferCommands2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="498" pos:column="1">#<cpp:directive pos:line="498" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="498" pos:column="9">__IVsProfferCommands2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="499" pos:column="1">typedef <type><name pos:line="499" pos:column="9">interface</name> <name pos:line="499" pos:column="19">IVsProfferCommands2</name></type> <name pos:line="499" pos:column="39">IVsProfferCommands2</name>;</typedef>
<cpp:endif pos:line="500" pos:column="1">#<cpp:directive pos:line="500" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="500" pos:column="9">/* __IVsProfferCommands2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="503" pos:column="1">#<cpp:directive pos:line="503" pos:column="2">ifndef</cpp:directive> <name pos:line="503" pos:column="9">__SolutionBuild2_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="504" pos:column="1">#<cpp:directive pos:line="504" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="504" pos:column="9">__SolutionBuild2_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="505" pos:column="1">typedef <type><name pos:line="505" pos:column="9">interface</name> <name pos:line="505" pos:column="19">SolutionBuild2</name></type> <name pos:line="505" pos:column="34">SolutionBuild2</name>;</typedef>
<cpp:endif pos:line="506" pos:column="1">#<cpp:directive pos:line="506" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="506" pos:column="9">/* __SolutionBuild2_FWD_DEFINED__ */</comment>


<cpp:ifndef pos:line="509" pos:column="1">#<cpp:directive pos:line="509" pos:column="2">ifndef</cpp:directive> <name pos:line="509" pos:column="9">__ErrorItems_FWD_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="510" pos:column="1">#<cpp:directive pos:line="510" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="510" pos:column="9">__ErrorItems_FWD_DEFINED__</name></cpp:macro></cpp:define>
<typedef pos:line="511" pos:column="1">typedef <type><name pos:line="511" pos:column="9">interface</name> <name pos:line="511" pos:column="19">ErrorItems</name></type> <name pos:line="511" pos:column="30">ErrorItems</name>;</typedef>
<cpp:endif pos:line="512" pos:column="1">#<cpp:directive pos:line="512" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="512" pos:column="9">/* __ErrorItems_FWD_DEFINED__ */</comment>


<cpp:ifdef pos:line="515" pos:column="1">#<cpp:directive pos:line="515" pos:column="2">ifdef</cpp:directive> <name pos:line="515" pos:column="8">__cplusplus</name></cpp:ifdef>
<extern pos:line="516" pos:column="1">extern <lit:literal type="string" pos:line="516" pos:column="8">"C"</lit:literal><block pos:line="516" pos:column="11">{
<cpp:endif pos:line="517" pos:column="1">#<cpp:directive pos:line="517" pos:column="2">endif</cpp:directive></cpp:endif> 


<comment type="block" pos:line="520" pos:column="1">/* interface __MIDL_itf_dte80_0000_0000 */</comment>
<comment type="block" pos:line="521" pos:column="1">/* [local] */</comment> 

<cpp:pragma pos:line="523" pos:column="1">#<cpp:directive pos:line="523" pos:column="2">pragma</cpp:directive> once</cpp:pragma>
<cpp:ifndef pos:line="524" pos:column="1">#<cpp:directive pos:line="524" pos:column="2">ifndef</cpp:directive> <name pos:line="524" pos:column="9">__INDENTSTYLE__</name></cpp:ifndef>
<cpp:define pos:line="525" pos:column="1">#<cpp:directive pos:line="525" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="525" pos:column="9">__INDENTSTYLE__</name></cpp:macro></cpp:define>
<typedef pos:line="526" pos:column="1">typedef <comment type="block" pos:line="526" pos:column="9">/* [uuid] */</comment>  <expr_stmt><expr><call><name pos:line="526" pos:column="23">DECLSPEC_UUID</name><argument_list pos:line="526" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="526" pos:column="37">"BCCEBE05-D29C-11D2-AABD-00C04F688DDE"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="527" pos:column="6">_vsIndentStyle</name>
    <block pos:line="528" pos:column="5">{	<expr><name pos:line="528" pos:column="9">vsIndentStyleNone</name>	<op:operator pos:line="528" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="528" pos:column="35">0</lit:literal></expr><op:operator pos:line="528" pos:column="36">,</op:operator>
	<expr><name pos:line="529" pos:column="9">vsIndentStyleDefault</name>	<op:operator pos:line="529" pos:column="33">=</op:operator> <op:operator pos:line="529" pos:column="35">(</op:operator> <name pos:line="529" pos:column="37">vsIndentStyleNone</name> <op:operator pos:line="529" pos:column="55">+</op:operator> <lit:literal type="number" pos:line="529" pos:column="57">1</lit:literal> <op:operator pos:line="529" pos:column="59">)</op:operator></expr> <op:operator pos:line="529" pos:column="61">,</op:operator>
	<expr><name pos:line="530" pos:column="9">vsIndentStyleSmart</name>	<op:operator pos:line="530" pos:column="33">=</op:operator> <op:operator pos:line="530" pos:column="35">(</op:operator> <name pos:line="530" pos:column="37">vsIndentStyleDefault</name> <op:operator pos:line="530" pos:column="58">+</op:operator> <lit:literal type="number" pos:line="530" pos:column="60">1</lit:literal> <op:operator pos:line="530" pos:column="62">)</op:operator></expr> 
    }</block> 	<name pos:line="531" pos:column="9">vsIndentStyle</name></expr>;</expr_stmt></typedef>

<cpp:endif pos:line="533" pos:column="1">#<cpp:directive pos:line="533" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="533" pos:column="8">// __INDENTSTYLE__</comment>


<decl_stmt><decl><type><specifier pos:line="536" pos:column="1">extern</specifier> <name pos:line="536" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="536" pos:column="22">__MIDL_itf_dte80_0000_0000_v0_0_c_ifspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="537" pos:column="1">extern</specifier> <name pos:line="537" pos:column="8">RPC_IF_HANDLE</name></type> <name pos:line="537" pos:column="22">__MIDL_itf_dte80_0000_0000_v0_0_s_ifspec</name></decl>;</decl_stmt>


<cpp:ifndef pos:line="540" pos:column="1">#<cpp:directive pos:line="540" pos:column="2">ifndef</cpp:directive> <name pos:line="540" pos:column="9">__EnvDTE80_LIBRARY_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="541" pos:column="1">#<cpp:directive pos:line="541" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="541" pos:column="9">__EnvDTE80_LIBRARY_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="543" pos:column="1">/* library EnvDTE80 */</comment>
<comment type="block" pos:line="544" pos:column="1">/* [version][helpstring][uuid] */</comment> 










<typedef pos:line="555" pos:column="1">typedef <comment type="block" pos:line="555" pos:column="9">/* [helpstring][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="555" pos:column="35">DECLSPEC_UUID</name><argument_list pos:line="555" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="555" pos:column="49">"d3c30b7b-11ad-4693-b1a8-e20a36c1c9f1"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="556" pos:column="6">vsCMFunction2</name>
    <block pos:line="557" pos:column="5">{	<expr><name pos:line="557" pos:column="9">vsCMFunctionAddHandler</name>	<op:operator pos:line="557" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="557" pos:column="35">0x20000</lit:literal></expr><op:operator pos:line="557" pos:column="42">,</op:operator>
	<expr><name pos:line="558" pos:column="9">vsCMFunctionRemoveHandler</name>	<op:operator pos:line="558" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="558" pos:column="43">0x40000</lit:literal></expr><op:operator pos:line="558" pos:column="50">,</op:operator>
	<expr><name pos:line="559" pos:column="9">vsCMFunctionRaiseEvent</name>	<op:operator pos:line="559" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="559" pos:column="35">0x80000</lit:literal></expr>
    }</block> 	<name pos:line="560" pos:column="9">vsCMFunction2</name></expr>;</expr_stmt></typedef>

<typedef pos:line="562" pos:column="1">typedef <comment type="block" pos:line="562" pos:column="9">/* [helpstring][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="562" pos:column="35">DECLSPEC_UUID</name><argument_list pos:line="562" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="562" pos:column="49">"7edbc54f-4b70-4b72-a422-5e57555dbd06"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="563" pos:column="6">vsCMElement2</name>
    <block pos:line="564" pos:column="5">{	<expr><name pos:line="564" pos:column="9">vsCMElementUnknown</name>	<op:operator pos:line="564" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="564" pos:column="35">40</lit:literal></expr><op:operator pos:line="564" pos:column="37">,</op:operator>
	<expr><name pos:line="565" pos:column="9">vsCMElementAttributeArgument</name>	<op:operator pos:line="565" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="565" pos:column="43">41</lit:literal></expr>
    }</block> 	<name pos:line="566" pos:column="9">vsCMElement2</name></expr>;</expr_stmt></typedef>

<typedef pos:line="568" pos:column="1">typedef <comment type="block" pos:line="568" pos:column="9">/* [helpstring][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="568" pos:column="35">DECLSPEC_UUID</name><argument_list pos:line="568" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="568" pos:column="49">"7fb3c569-7faf-4070-82aa-04b18b8bbad1"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="569" pos:column="6">vsCMTypeRef2</name>
    <block pos:line="570" pos:column="5">{	<expr><name pos:line="570" pos:column="9">vsCMTypeRefUnsignedChar</name>	<op:operator pos:line="570" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="570" pos:column="35">17</lit:literal></expr><op:operator pos:line="570" pos:column="37">,</op:operator>
	<expr><name pos:line="571" pos:column="9">vsCMTypeRefUnsignedShort</name>	<op:operator pos:line="571" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="571" pos:column="43">18</lit:literal></expr><op:operator pos:line="571" pos:column="45">,</op:operator>
	<expr><name pos:line="572" pos:column="9">vsCMTypeRefUnsignedInt</name>	<op:operator pos:line="572" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="572" pos:column="35">19</lit:literal></expr><op:operator pos:line="572" pos:column="37">,</op:operator>
	<expr><name pos:line="573" pos:column="9">vsCMTypeRefUnsignedLong</name>	<op:operator pos:line="573" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="573" pos:column="35">20</lit:literal></expr><op:operator pos:line="573" pos:column="37">,</op:operator>
	<expr><name pos:line="574" pos:column="9">vsCMTypeRefReference</name>	<op:operator pos:line="574" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="574" pos:column="35">21</lit:literal></expr><op:operator pos:line="574" pos:column="37">,</op:operator>
	<expr><name pos:line="575" pos:column="9">vsCMTypeRefMCBoxedReference</name>	<op:operator pos:line="575" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="575" pos:column="43">22</lit:literal></expr><op:operator pos:line="575" pos:column="45">,</op:operator>
	<expr><name pos:line="576" pos:column="9">vsCMTypeRefSByte</name>	<op:operator pos:line="576" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="576" pos:column="35">23</lit:literal></expr>
    }</block> 	<name pos:line="577" pos:column="9">vsCMTypeRef2</name></expr>;</expr_stmt></typedef>

<typedef pos:line="579" pos:column="1">typedef <comment type="block" pos:line="579" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="579" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="579" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="579" pos:column="81">"A49FB892-EE3A-411E-8BD4-BB4AC6AE6608"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="580" pos:column="6">vsCMParseStatus</name>
    <block pos:line="581" pos:column="5">{	<expr><name pos:line="581" pos:column="9">vsCMParseStatusError</name>	<op:operator pos:line="581" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="581" pos:column="35">1</lit:literal></expr><op:operator pos:line="581" pos:column="36">,</op:operator>
	<expr><name pos:line="582" pos:column="9">vsCMParseStatusComplete</name>	<op:operator pos:line="582" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="582" pos:column="35">2</lit:literal></expr>
    }</block> 	<name pos:line="583" pos:column="9">vsCMParseStatus</name></expr>;</expr_stmt></typedef>

<typedef pos:line="585" pos:column="1">typedef <comment type="block" pos:line="585" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="585" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="585" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="585" pos:column="81">"DBDF9319-8FCC-4950-A50D-1E6FB5490869"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="586" pos:column="6">vsCMClassKind</name>
    <block pos:line="587" pos:column="5">{	<expr><name pos:line="587" pos:column="9">vsCMClassKindMainClass</name>	<op:operator pos:line="587" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="587" pos:column="35">1</lit:literal></expr><op:operator pos:line="587" pos:column="36">,</op:operator>
	<expr><name pos:line="588" pos:column="9">vsCMClassKindBlueprint</name>	<op:operator pos:line="588" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="588" pos:column="35">2</lit:literal></expr><op:operator pos:line="588" pos:column="36">,</op:operator>
	<expr><name pos:line="589" pos:column="9">vsCMClassKindPartialClass</name>	<op:operator pos:line="589" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="589" pos:column="43">4</lit:literal></expr><op:operator pos:line="589" pos:column="44">,</op:operator>
	<expr><name pos:line="590" pos:column="9">vsCMClassKindModule</name>	<op:operator pos:line="590" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="590" pos:column="35">8</lit:literal></expr>
    }</block> 	<name pos:line="591" pos:column="9">vsCMClassKind</name></expr>;</expr_stmt></typedef>

<typedef pos:line="593" pos:column="1">typedef <comment type="block" pos:line="593" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="593" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="593" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="593" pos:column="81">"DBDF931A-8FCC-4950-A50D-1E6FB5490869"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="594" pos:column="6">vsCMDataTypeKind</name>
    <block pos:line="595" pos:column="5">{	<expr><name pos:line="595" pos:column="9">vsCMDataTypeKindMain</name>	<op:operator pos:line="595" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="595" pos:column="35">1</lit:literal></expr><op:operator pos:line="595" pos:column="36">,</op:operator>
	<expr><name pos:line="596" pos:column="9">vsCMDataTypeKindBlueprint</name>	<op:operator pos:line="596" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="596" pos:column="43">2</lit:literal></expr><op:operator pos:line="596" pos:column="44">,</op:operator>
	<expr><name pos:line="597" pos:column="9">vsCMDataTypeKindPartial</name>	<op:operator pos:line="597" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="597" pos:column="35">4</lit:literal></expr><op:operator pos:line="597" pos:column="36">,</op:operator>
	<expr><name pos:line="598" pos:column="9">vsCMDataTypeKindModule</name>	<op:operator pos:line="598" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="598" pos:column="35">8</lit:literal></expr>
    }</block> 	<name pos:line="599" pos:column="9">vsCMDataTypeKind</name></expr>;</expr_stmt></typedef>

<typedef pos:line="601" pos:column="1">typedef <comment type="block" pos:line="601" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="601" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="601" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="601" pos:column="81">"81DD2950-B7E7-4D51-BFD7-11B086738F6E"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="602" pos:column="6">vsCMChangeKind</name>
    <block pos:line="603" pos:column="5">{	<expr><name pos:line="603" pos:column="9">vsCMChangeKindRename</name>	<op:operator pos:line="603" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="603" pos:column="35">1</lit:literal></expr><op:operator pos:line="603" pos:column="36">,</op:operator>
	<expr><name pos:line="604" pos:column="9">vsCMChangeKindUnknown</name>	<op:operator pos:line="604" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="604" pos:column="35">2</lit:literal></expr><op:operator pos:line="604" pos:column="36">,</op:operator>
	<expr><name pos:line="605" pos:column="9">vsCMChangeKindSignatureChange</name>	<op:operator pos:line="605" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="605" pos:column="43">4</lit:literal></expr><op:operator pos:line="605" pos:column="44">,</op:operator>
	<expr><name pos:line="606" pos:column="9">vsCMChangeKindTypeRefChange</name>	<op:operator pos:line="606" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="606" pos:column="43">8</lit:literal></expr><op:operator pos:line="606" pos:column="44">,</op:operator>
	<expr><name pos:line="607" pos:column="9">vsCMChangeKindBaseChange</name>	<op:operator pos:line="607" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="607" pos:column="43">16</lit:literal></expr><op:operator pos:line="607" pos:column="45">,</op:operator>
	<expr><name pos:line="608" pos:column="9">vsCMChangeKindArgumentChange</name>	<op:operator pos:line="608" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="608" pos:column="43">32</lit:literal></expr>
    }</block> 	<name pos:line="609" pos:column="9">vsCMChangeKind</name></expr>;</expr_stmt></typedef>

<typedef pos:line="611" pos:column="1">typedef <comment type="block" pos:line="611" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="611" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="611" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="611" pos:column="81">"C4541DAB-D314-452D-9760-30A615F0DC26"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="612" pos:column="6">vsCMInheritanceKind</name>
    <block pos:line="613" pos:column="5">{	<expr><name pos:line="613" pos:column="9">vsCMInheritanceKindNone</name>	<op:operator pos:line="613" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="613" pos:column="35">0</lit:literal></expr><op:operator pos:line="613" pos:column="36">,</op:operator>
	<expr><name pos:line="614" pos:column="9">vsCMInheritanceKindAbstract</name>	<op:operator pos:line="614" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="614" pos:column="43">1</lit:literal></expr><op:operator pos:line="614" pos:column="44">,</op:operator>
	<expr><name pos:line="615" pos:column="9">vsCMInheritanceKindSealed</name>	<op:operator pos:line="615" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="615" pos:column="43">2</lit:literal></expr><op:operator pos:line="615" pos:column="44">,</op:operator>
	<expr><name pos:line="616" pos:column="9">vsCMInheritanceKindNew</name>	<op:operator pos:line="616" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="616" pos:column="35">4</lit:literal></expr>
    }</block> 	<name pos:line="617" pos:column="9">vsCMInheritanceKind</name></expr>;</expr_stmt></typedef>

<typedef pos:line="619" pos:column="1">typedef <comment type="block" pos:line="619" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="619" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="619" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="619" pos:column="81">"2366AEF3-BA49-4A96-B4A1-B8BF1ACB2600"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="620" pos:column="6">vsCMParameterKind</name>
    <block pos:line="621" pos:column="5">{	<expr><name pos:line="621" pos:column="9">vsCMParameterKindNone</name>	<op:operator pos:line="621" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="621" pos:column="35">0</lit:literal></expr><op:operator pos:line="621" pos:column="36">,</op:operator>
	<expr><name pos:line="622" pos:column="9">vsCMParameterKindIn</name>	<op:operator pos:line="622" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="622" pos:column="35">1</lit:literal></expr><op:operator pos:line="622" pos:column="36">,</op:operator>
	<expr><name pos:line="623" pos:column="9">vsCMParameterKindRef</name>	<op:operator pos:line="623" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="623" pos:column="35">2</lit:literal></expr><op:operator pos:line="623" pos:column="36">,</op:operator>
	<expr><name pos:line="624" pos:column="9">vsCMParameterKindOut</name>	<op:operator pos:line="624" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="624" pos:column="35">4</lit:literal></expr><op:operator pos:line="624" pos:column="36">,</op:operator>
	<expr><name pos:line="625" pos:column="9">vsCMParameterKindOptional</name>	<op:operator pos:line="625" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="625" pos:column="43">8</lit:literal></expr><op:operator pos:line="625" pos:column="44">,</op:operator>
	<expr><name pos:line="626" pos:column="9">vsCMParameterKindParamArray</name>	<op:operator pos:line="626" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="626" pos:column="43">16</lit:literal></expr>
    }</block> 	<name pos:line="627" pos:column="9">vsCMParameterKind</name></expr>;</expr_stmt></typedef>

<typedef pos:line="629" pos:column="1">typedef <comment type="block" pos:line="629" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="629" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="629" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="629" pos:column="81">"3E30C32D-9E8D-4919-8CC4-C3D75879BC52"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="630" pos:column="6">vsCMOverrideKind</name>
    <block pos:line="631" pos:column="5">{	<expr><name pos:line="631" pos:column="9">vsCMOverrideKindNone</name>	<op:operator pos:line="631" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="631" pos:column="35">0</lit:literal></expr><op:operator pos:line="631" pos:column="36">,</op:operator>
	<expr><name pos:line="632" pos:column="9">vsCMOverrideKindAbstract</name>	<op:operator pos:line="632" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="632" pos:column="43">1</lit:literal></expr><op:operator pos:line="632" pos:column="44">,</op:operator>
	<expr><name pos:line="633" pos:column="9">vsCMOverrideKindVirtual</name>	<op:operator pos:line="633" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="633" pos:column="35">2</lit:literal></expr><op:operator pos:line="633" pos:column="36">,</op:operator>
	<expr><name pos:line="634" pos:column="9">vsCMOverrideKindOverride</name>	<op:operator pos:line="634" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="634" pos:column="43">4</lit:literal></expr><op:operator pos:line="634" pos:column="44">,</op:operator>
	<expr><name pos:line="635" pos:column="9">vsCMOverrideKindNew</name>	<op:operator pos:line="635" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="635" pos:column="35">8</lit:literal></expr><op:operator pos:line="635" pos:column="36">,</op:operator>
	<expr><name pos:line="636" pos:column="9">vsCMOverrideKindSealed</name>	<op:operator pos:line="636" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="636" pos:column="35">16</lit:literal></expr>
    }</block> 	<name pos:line="637" pos:column="9">vsCMOverrideKind</name></expr>;</expr_stmt></typedef>

<typedef pos:line="639" pos:column="1">typedef <comment type="block" pos:line="639" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="639" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="639" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="639" pos:column="81">"4438EED0-E747-49AC-8D22-00F26B18755D"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="640" pos:column="6">vsCMConstKind</name>
    <block pos:line="641" pos:column="5">{	<expr><name pos:line="641" pos:column="9">vsCMConstKindNone</name>	<op:operator pos:line="641" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="641" pos:column="35">0</lit:literal></expr><op:operator pos:line="641" pos:column="36">,</op:operator>
	<expr><name pos:line="642" pos:column="9">vsCMConstKindConst</name>	<op:operator pos:line="642" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="642" pos:column="35">1</lit:literal></expr><op:operator pos:line="642" pos:column="36">,</op:operator>
	<expr><name pos:line="643" pos:column="9">vsCMConstKindReadOnly</name>	<op:operator pos:line="643" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="643" pos:column="35">2</lit:literal></expr>
    }</block> 	<name pos:line="644" pos:column="9">vsCMConstKind</name></expr>;</expr_stmt></typedef>

<typedef pos:line="646" pos:column="1">typedef <comment type="block" pos:line="646" pos:column="9">/* [uuid] */</comment>  <expr_stmt><expr><call><name pos:line="646" pos:column="23">DECLSPEC_UUID</name><argument_list pos:line="646" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="646" pos:column="37">"e24a10bd-9a40-43a3-9db9-afaf05d74704"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="647" pos:column="6">vsCMPropertyKind</name>
    <block pos:line="648" pos:column="5">{	<expr><name pos:line="648" pos:column="9">vsCMPropertyKindReadWrite</name>	<op:operator pos:line="648" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="648" pos:column="43">0</lit:literal></expr><op:operator pos:line="648" pos:column="44">,</op:operator>
	<expr><name pos:line="649" pos:column="9">vsCMPropertyKindReadOnly</name>	<op:operator pos:line="649" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="649" pos:column="43">1</lit:literal></expr><op:operator pos:line="649" pos:column="44">,</op:operator>
	<expr><name pos:line="650" pos:column="9">vsCMPropertyKindWriteOnly</name>	<op:operator pos:line="650" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="650" pos:column="43">2</lit:literal></expr>
    }</block> 	<name pos:line="651" pos:column="9">vsCMPropertyKind</name></expr>;</expr_stmt></typedef>








<typedef pos:line="660" pos:column="1">typedef <comment type="block" pos:line="660" pos:column="9">/* [uuid] */</comment>  <expr_stmt><expr><call><name pos:line="660" pos:column="23">DECLSPEC_UUID</name><argument_list pos:line="660" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="660" pos:column="37">"4232C43A-589B-44bc-8931-ED79C6A7CA2B"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="661" pos:column="6">dbgMinidumpOption</name>
    <block pos:line="662" pos:column="5">{	<expr><name pos:line="662" pos:column="9">dbgMinidumpNormal</name>	<op:operator pos:line="662" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="662" pos:column="35">1</lit:literal></expr><op:operator pos:line="662" pos:column="36">,</op:operator>
	<expr><name pos:line="663" pos:column="9">dbgMinidumpFull</name>	<op:operator pos:line="663" pos:column="25">=</op:operator> <op:operator pos:line="663" pos:column="27">(</op:operator> <name pos:line="663" pos:column="29">dbgMinidumpNormal</name> <op:operator pos:line="663" pos:column="47">+</op:operator> <lit:literal type="number" pos:line="663" pos:column="49">1</lit:literal> <op:operator pos:line="663" pos:column="51">)</op:operator></expr> 
    }</block> 	<name pos:line="664" pos:column="9">dbgMinidumpOption</name></expr>;</expr_stmt></typedef>

<typedef pos:line="666" pos:column="1">typedef <comment type="block" pos:line="666" pos:column="9">/* [uuid] */</comment>  <expr_stmt><expr><call><name pos:line="666" pos:column="23">DECLSPEC_UUID</name><argument_list pos:line="666" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="666" pos:column="37">"ECD94EEC-EBF9-45B2-B072-1624241C7C0B"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="667" pos:column="6">dbgEventReason2</name>
    <block pos:line="668" pos:column="5">{	<expr><name pos:line="668" pos:column="9">dbgEventReason2None</name>	<op:operator pos:line="668" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="668" pos:column="35">1</lit:literal></expr><op:operator pos:line="668" pos:column="36">,</op:operator>
	<expr><name pos:line="669" pos:column="9">dbgEventReason2Go</name>	<op:operator pos:line="669" pos:column="33">=</op:operator> <op:operator pos:line="669" pos:column="35">(</op:operator> <name pos:line="669" pos:column="37">dbgEventReason2None</name> <op:operator pos:line="669" pos:column="57">+</op:operator> <lit:literal type="number" pos:line="669" pos:column="59">1</lit:literal> <op:operator pos:line="669" pos:column="61">)</op:operator></expr> <op:operator pos:line="669" pos:column="63">,</op:operator>
	<expr><name pos:line="670" pos:column="9">dbgEventReason2AttachProgram</name>	<op:operator pos:line="670" pos:column="41">=</op:operator> <op:operator pos:line="670" pos:column="43">(</op:operator> <name pos:line="670" pos:column="45">dbgEventReason2Go</name> <op:operator pos:line="670" pos:column="63">+</op:operator> <lit:literal type="number" pos:line="670" pos:column="65">1</lit:literal> <op:operator pos:line="670" pos:column="67">)</op:operator></expr> <op:operator pos:line="670" pos:column="69">,</op:operator>
	<expr><name pos:line="671" pos:column="9">dbgEventReason2DetachProgram</name>	<op:operator pos:line="671" pos:column="41">=</op:operator> <op:operator pos:line="671" pos:column="43">(</op:operator> <name pos:line="671" pos:column="45">dbgEventReason2AttachProgram</name> <op:operator pos:line="671" pos:column="74">+</op:operator> <lit:literal type="number" pos:line="671" pos:column="76">1</lit:literal> <op:operator pos:line="671" pos:column="78">)</op:operator></expr> <op:operator pos:line="671" pos:column="80">,</op:operator>
	<expr><name pos:line="672" pos:column="9">dbgEventReason2LaunchProgram</name>	<op:operator pos:line="672" pos:column="41">=</op:operator> <op:operator pos:line="672" pos:column="43">(</op:operator> <name pos:line="672" pos:column="45">dbgEventReason2DetachProgram</name> <op:operator pos:line="672" pos:column="74">+</op:operator> <lit:literal type="number" pos:line="672" pos:column="76">1</lit:literal> <op:operator pos:line="672" pos:column="78">)</op:operator></expr> <op:operator pos:line="672" pos:column="80">,</op:operator>
	<expr><name pos:line="673" pos:column="9">dbgEventReason2EndProgram</name>	<op:operator pos:line="673" pos:column="41">=</op:operator> <op:operator pos:line="673" pos:column="43">(</op:operator> <name pos:line="673" pos:column="45">dbgEventReason2LaunchProgram</name> <op:operator pos:line="673" pos:column="74">+</op:operator> <lit:literal type="number" pos:line="673" pos:column="76">1</lit:literal> <op:operator pos:line="673" pos:column="78">)</op:operator></expr> <op:operator pos:line="673" pos:column="80">,</op:operator>
	<expr><name pos:line="674" pos:column="9">dbgEventReason2StopDebugging</name>	<op:operator pos:line="674" pos:column="41">=</op:operator> <op:operator pos:line="674" pos:column="43">(</op:operator> <name pos:line="674" pos:column="45">dbgEventReason2EndProgram</name> <op:operator pos:line="674" pos:column="71">+</op:operator> <lit:literal type="number" pos:line="674" pos:column="73">1</lit:literal> <op:operator pos:line="674" pos:column="75">)</op:operator></expr> <op:operator pos:line="674" pos:column="77">,</op:operator>
	<expr><name pos:line="675" pos:column="9">dbgEventReason2Step</name>	<op:operator pos:line="675" pos:column="33">=</op:operator> <op:operator pos:line="675" pos:column="35">(</op:operator> <name pos:line="675" pos:column="37">dbgEventReason2StopDebugging</name> <op:operator pos:line="675" pos:column="66">+</op:operator> <lit:literal type="number" pos:line="675" pos:column="68">1</lit:literal> <op:operator pos:line="675" pos:column="70">)</op:operator></expr> <op:operator pos:line="675" pos:column="72">,</op:operator>
	<expr><name pos:line="676" pos:column="9">dbgEventReason2Breakpoint</name>	<op:operator pos:line="676" pos:column="41">=</op:operator> <op:operator pos:line="676" pos:column="43">(</op:operator> <name pos:line="676" pos:column="45">dbgEventReason2Step</name> <op:operator pos:line="676" pos:column="65">+</op:operator> <lit:literal type="number" pos:line="676" pos:column="67">1</lit:literal> <op:operator pos:line="676" pos:column="69">)</op:operator></expr> <op:operator pos:line="676" pos:column="71">,</op:operator>
	<expr><name pos:line="677" pos:column="9">dbgEventReason2ExceptionThrown</name>	<op:operator pos:line="677" pos:column="41">=</op:operator> <op:operator pos:line="677" pos:column="43">(</op:operator> <name pos:line="677" pos:column="45">dbgEventReason2Breakpoint</name> <op:operator pos:line="677" pos:column="71">+</op:operator> <lit:literal type="number" pos:line="677" pos:column="73">1</lit:literal> <op:operator pos:line="677" pos:column="75">)</op:operator></expr> <op:operator pos:line="677" pos:column="77">,</op:operator>
	<expr><name pos:line="678" pos:column="9">dbgEventReason2ExceptionNotHandled</name>	<op:operator pos:line="678" pos:column="49">=</op:operator> <op:operator pos:line="678" pos:column="51">(</op:operator> <name pos:line="678" pos:column="53">dbgEventReason2ExceptionThrown</name> <op:operator pos:line="678" pos:column="84">+</op:operator> <lit:literal type="number" pos:line="678" pos:column="86">1</lit:literal> <op:operator pos:line="678" pos:column="88">)</op:operator></expr> <op:operator pos:line="678" pos:column="90">,</op:operator>
	<expr><name pos:line="679" pos:column="9">dbgEventReason2UserBreak</name>	<op:operator pos:line="679" pos:column="41">=</op:operator> <op:operator pos:line="679" pos:column="43">(</op:operator> <name pos:line="679" pos:column="45">dbgEventReason2ExceptionNotHandled</name> <op:operator pos:line="679" pos:column="80">+</op:operator> <lit:literal type="number" pos:line="679" pos:column="82">1</lit:literal> <op:operator pos:line="679" pos:column="84">)</op:operator></expr> <op:operator pos:line="679" pos:column="86">,</op:operator>
	<expr><name pos:line="680" pos:column="9">dbgEventReason2ContextSwitch</name>	<op:operator pos:line="680" pos:column="41">=</op:operator> <op:operator pos:line="680" pos:column="43">(</op:operator> <name pos:line="680" pos:column="45">dbgEventReason2UserBreak</name> <op:operator pos:line="680" pos:column="70">+</op:operator> <lit:literal type="number" pos:line="680" pos:column="72">1</lit:literal> <op:operator pos:line="680" pos:column="74">)</op:operator></expr> <op:operator pos:line="680" pos:column="76">,</op:operator>
	<expr><name pos:line="681" pos:column="9">dbgEventReason2Evaluation</name>	<op:operator pos:line="681" pos:column="41">=</op:operator> <op:operator pos:line="681" pos:column="43">(</op:operator> <name pos:line="681" pos:column="45">dbgEventReason2ContextSwitch</name> <op:operator pos:line="681" pos:column="74">+</op:operator> <lit:literal type="number" pos:line="681" pos:column="76">1</lit:literal> <op:operator pos:line="681" pos:column="78">)</op:operator></expr> <op:operator pos:line="681" pos:column="80">,</op:operator>
	<expr><name pos:line="682" pos:column="9">dbgEventReason2UnwindFromException</name>	<op:operator pos:line="682" pos:column="49">=</op:operator> <op:operator pos:line="682" pos:column="51">(</op:operator> <name pos:line="682" pos:column="53">dbgEventReason2Evaluation</name> <op:operator pos:line="682" pos:column="79">+</op:operator> <lit:literal type="number" pos:line="682" pos:column="81">1</lit:literal> <op:operator pos:line="682" pos:column="83">)</op:operator></expr> 
    }</block> 	<name pos:line="683" pos:column="9">dbgEventReason2</name></expr>;</expr_stmt></typedef>


<typedef pos:line="686" pos:column="1">typedef <comment type="block" pos:line="686" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="686" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="686" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="686" pos:column="81">"0c57dfec-8424-4c1a-a43c-ea7922446232"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="687" pos:column="6">dbgProcessState</name>
    <block pos:line="688" pos:column="5">{	<expr><name pos:line="688" pos:column="9">dbgProcessStateRun</name>	<op:operator pos:line="688" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="688" pos:column="35">1</lit:literal></expr><op:operator pos:line="688" pos:column="36">,</op:operator>
	<expr><name pos:line="689" pos:column="9">dbgProcessStateStop</name>	<op:operator pos:line="689" pos:column="33">=</op:operator> <op:operator pos:line="689" pos:column="35">(</op:operator> <name pos:line="689" pos:column="37">dbgProcessStateRun</name> <op:operator pos:line="689" pos:column="56">+</op:operator> <lit:literal type="number" pos:line="689" pos:column="58">1</lit:literal> <op:operator pos:line="689" pos:column="60">)</op:operator></expr> 
    }</block> 	<name pos:line="690" pos:column="9">dbgProcessState</name></expr>;</expr_stmt></typedef>

<typedef pos:line="692" pos:column="1">typedef <comment type="block" pos:line="692" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="692" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="692" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="692" pos:column="81">"f8305f32-f656-4353-a49b-6bb20c6fd263"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="693" pos:column="6">dbgExpressionEvaluationState</name>
    <block pos:line="694" pos:column="5">{	<expr><name pos:line="694" pos:column="9">dbgExpressionEvaluationStateStart</name>	<op:operator pos:line="694" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="694" pos:column="51">1</lit:literal></expr><op:operator pos:line="694" pos:column="52">,</op:operator>
	<expr><name pos:line="695" pos:column="9">dbgExpressionEvaluationStateStop</name>	<op:operator pos:line="695" pos:column="49">=</op:operator> <op:operator pos:line="695" pos:column="51">(</op:operator> <name pos:line="695" pos:column="53">dbgExpressionEvaluationStateStart</name> <op:operator pos:line="695" pos:column="87">+</op:operator> <lit:literal type="number" pos:line="695" pos:column="89">1</lit:literal> <op:operator pos:line="695" pos:column="91">)</op:operator></expr> 
    }</block> 	<name pos:line="696" pos:column="9">dbgExpressionEvaluationState</name></expr>;</expr_stmt></typedef>

<typedef pos:line="698" pos:column="1">typedef <comment type="block" pos:line="698" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="698" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="698" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="698" pos:column="81">"6FB22721-008A-41a0-B4A9-23A7AB2A02B7"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="699" pos:column="6">vsCommandStyle</name>
    <block pos:line="700" pos:column="5">{	<expr><name pos:line="700" pos:column="9">vsCommandStylePict</name>	<op:operator pos:line="700" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="700" pos:column="35">1</lit:literal></expr><op:operator pos:line="700" pos:column="36">,</op:operator>
	<expr><name pos:line="701" pos:column="9">vsCommandStyleText</name>	<op:operator pos:line="701" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="701" pos:column="35">2</lit:literal></expr><op:operator pos:line="701" pos:column="36">,</op:operator>
	<expr><name pos:line="702" pos:column="9">vsCommandStylePictAndText</name>	<op:operator pos:line="702" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="702" pos:column="43">3</lit:literal></expr><op:operator pos:line="702" pos:column="44">,</op:operator>
	<expr><name pos:line="703" pos:column="9">vsCommandStyleComboNoAutoComplete</name>	<op:operator pos:line="703" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="703" pos:column="51">64</lit:literal></expr><op:operator pos:line="703" pos:column="53">,</op:operator>
	<expr><name pos:line="704" pos:column="9">vsCommandStyleComboCaseSensitive</name>	<op:operator pos:line="704" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="704" pos:column="51">128</lit:literal></expr>
    }</block> 	<name pos:line="705" pos:column="9">vsCommandStyle</name></expr>;</expr_stmt></typedef>

<typedef pos:line="707" pos:column="1">typedef <comment type="block" pos:line="707" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="707" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="707" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="707" pos:column="81">"765724FE-DDE5-422a-A008-198376C7B641"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="708" pos:column="6">vsCommandControlType</name>
    <block pos:line="709" pos:column="5">{	<expr><name pos:line="709" pos:column="9">vsCommandControlTypeButton</name>	<op:operator pos:line="709" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="709" pos:column="43">2</lit:literal></expr><op:operator pos:line="709" pos:column="44">,</op:operator>
	<expr><name pos:line="710" pos:column="9">vsCommandControlTypeDropDownCombo</name>	<op:operator pos:line="710" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="710" pos:column="51">32</lit:literal></expr><op:operator pos:line="710" pos:column="53">,</op:operator>
	<expr><name pos:line="711" pos:column="9">vsCommandControlTypeMRUCombo</name>	<op:operator pos:line="711" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="711" pos:column="43">64</lit:literal></expr><op:operator pos:line="711" pos:column="45">,</op:operator>
	<expr><name pos:line="712" pos:column="9">vsCommandControlTypeMRUButton</name>	<op:operator pos:line="712" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="712" pos:column="43">8192</lit:literal></expr>
    }</block> 	<name pos:line="713" pos:column="9">vsCommandControlType</name></expr>;</expr_stmt></typedef>

<typedef pos:line="715" pos:column="1">typedef <comment type="block" pos:line="715" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="715" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="715" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="715" pos:column="81">"4eee3a14-18aa-4244-9745-6e3f35d7fc4b"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="716" pos:column="6">vsSourceControlCheckOutOptions</name>
    <block pos:line="717" pos:column="5">{	<expr><name pos:line="717" pos:column="9">vsSourceControlCheckOutOptionLatestVersion</name>	<op:operator pos:line="717" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="717" pos:column="59">0</lit:literal></expr><op:operator pos:line="717" pos:column="60">,</op:operator>
	<expr><name pos:line="718" pos:column="9">vsSourceControlCheckOutOptionLocalVersion</name>	<op:operator pos:line="718" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="718" pos:column="59">1</lit:literal></expr>
    }</block> 	<name pos:line="719" pos:column="9">vsSourceControlCheckOutOptions</name></expr>;</expr_stmt></typedef>

<typedef pos:line="721" pos:column="1">typedef <comment type="block" pos:line="721" pos:column="9">/* [helpstring][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="721" pos:column="35">DECLSPEC_UUID</name><argument_list pos:line="721" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="721" pos:column="49">"2C23EF05-01A5-4684-AC27-4EFD8D840BA9"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="722" pos:column="6">vsThemeColors</name>
    <block pos:line="723" pos:column="5">{	<expr><name pos:line="723" pos:column="9">vsThemeColorAccentBorder</name>	<op:operator pos:line="723" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="723" pos:column="43">5</lit:literal></expr><op:operator pos:line="723" pos:column="44">,</op:operator>
	<expr><name pos:line="724" pos:column="9">vsThemeColorAccentDark</name>	<op:operator pos:line="724" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="724" pos:column="35">6</lit:literal></expr><op:operator pos:line="724" pos:column="36">,</op:operator>
	<expr><name pos:line="725" pos:column="9">vsThemeColorAccentLight</name>	<op:operator pos:line="725" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="725" pos:column="35">7</lit:literal></expr><op:operator pos:line="725" pos:column="36">,</op:operator>
	<expr><name pos:line="726" pos:column="9">vsThemeColorAccentMedium</name>	<op:operator pos:line="726" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="726" pos:column="43">8</lit:literal></expr><op:operator pos:line="726" pos:column="44">,</op:operator>
	<expr><name pos:line="727" pos:column="9">vsThemeColorAccentPale</name>	<op:operator pos:line="727" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="727" pos:column="35">9</lit:literal></expr><op:operator pos:line="727" pos:column="36">,</op:operator>
	<expr><name pos:line="728" pos:column="9">vsThemeColorCommandbarBorder</name>	<op:operator pos:line="728" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="728" pos:column="43">10</lit:literal></expr><op:operator pos:line="728" pos:column="45">,</op:operator>
	<expr><name pos:line="729" pos:column="9">vsThemeColorCommandbarDraghandle</name>	<op:operator pos:line="729" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="729" pos:column="51">11</lit:literal></expr><op:operator pos:line="729" pos:column="53">,</op:operator>
	<expr><name pos:line="730" pos:column="9">vsThemeColorCommandbarDraghandleShadow</name>	<op:operator pos:line="730" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="730" pos:column="51">12</lit:literal></expr><op:operator pos:line="730" pos:column="53">,</op:operator>
	<expr><name pos:line="731" pos:column="9">vsThemeColorCommandbarGradientBegin</name>	<op:operator pos:line="731" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="731" pos:column="51">13</lit:literal></expr><op:operator pos:line="731" pos:column="53">,</op:operator>
	<expr><name pos:line="732" pos:column="9">vsThemeColorCommandbarGradientEnd</name>	<op:operator pos:line="732" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="732" pos:column="51">14</lit:literal></expr><op:operator pos:line="732" pos:column="53">,</op:operator>
	<expr><name pos:line="733" pos:column="9">vsThemeColorCommandbarGradientMiddle</name>	<op:operator pos:line="733" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="733" pos:column="51">15</lit:literal></expr><op:operator pos:line="733" pos:column="53">,</op:operator>
	<expr><name pos:line="734" pos:column="9">vsThemeColorCommandbarHover</name>	<op:operator pos:line="734" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="734" pos:column="43">16</lit:literal></expr><op:operator pos:line="734" pos:column="45">,</op:operator>
	<expr><name pos:line="735" pos:column="9">vsThemeColorCommandbarHoveroverSelected</name>	<op:operator pos:line="735" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="735" pos:column="51">17</lit:literal></expr><op:operator pos:line="735" pos:column="53">,</op:operator>
	<expr><name pos:line="736" pos:column="9">vsThemeColorCommandbarHoveroverSelectedicon</name>	<op:operator pos:line="736" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="736" pos:column="59">18</lit:literal></expr><op:operator pos:line="736" pos:column="61">,</op:operator>
	<expr><name pos:line="737" pos:column="9">vsThemeColorCommandbarSelected</name>	<op:operator pos:line="737" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="737" pos:column="43">19</lit:literal></expr><op:operator pos:line="737" pos:column="45">,</op:operator>
	<expr><name pos:line="738" pos:column="9">vsThemeColorCommandbarShadow</name>	<op:operator pos:line="738" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="738" pos:column="43">20</lit:literal></expr><op:operator pos:line="738" pos:column="45">,</op:operator>
	<expr><name pos:line="739" pos:column="9">vsThemeColorCommandbarTextActive</name>	<op:operator pos:line="739" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="739" pos:column="51">21</lit:literal></expr><op:operator pos:line="739" pos:column="53">,</op:operator>
	<expr><name pos:line="740" pos:column="9">vsThemeColorCommandbarTextHover</name>	<op:operator pos:line="740" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="740" pos:column="43">22</lit:literal></expr><op:operator pos:line="740" pos:column="45">,</op:operator>
	<expr><name pos:line="741" pos:column="9">vsThemeColorCommandbarTextInactive</name>	<op:operator pos:line="741" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="741" pos:column="51">23</lit:literal></expr><op:operator pos:line="741" pos:column="53">,</op:operator>
	<expr><name pos:line="742" pos:column="9">vsThemeColorCommandbarTextSelected</name>	<op:operator pos:line="742" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="742" pos:column="51">24</lit:literal></expr><op:operator pos:line="742" pos:column="53">,</op:operator>
	<expr><name pos:line="743" pos:column="9">vsThemeColorControlEditHintText</name>	<op:operator pos:line="743" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="743" pos:column="43">25</lit:literal></expr><op:operator pos:line="743" pos:column="45">,</op:operator>
	<expr><name pos:line="744" pos:column="9">vsThemeColorControlEditRequiredBackground</name>	<op:operator pos:line="744" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="744" pos:column="59">26</lit:literal></expr><op:operator pos:line="744" pos:column="61">,</op:operator>
	<expr><name pos:line="745" pos:column="9">vsThemeColorControlEditRequiredHintText</name>	<op:operator pos:line="745" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="745" pos:column="51">27</lit:literal></expr><op:operator pos:line="745" pos:column="53">,</op:operator>
	<expr><name pos:line="746" pos:column="9">vsThemeColorControlLinkText</name>	<op:operator pos:line="746" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="746" pos:column="43">28</lit:literal></expr><op:operator pos:line="746" pos:column="45">,</op:operator>
	<expr><name pos:line="747" pos:column="9">vsThemeColorControlLinkTextHover</name>	<op:operator pos:line="747" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="747" pos:column="51">29</lit:literal></expr><op:operator pos:line="747" pos:column="53">,</op:operator>
	<expr><name pos:line="748" pos:column="9">vsThemeColorControlLinkTextPressed</name>	<op:operator pos:line="748" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="748" pos:column="51">30</lit:literal></expr><op:operator pos:line="748" pos:column="53">,</op:operator>
	<expr><name pos:line="749" pos:column="9">vsThemeColorControlOutline</name>	<op:operator pos:line="749" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="749" pos:column="43">31</lit:literal></expr><op:operator pos:line="749" pos:column="45">,</op:operator>
	<expr><name pos:line="750" pos:column="9">vsThemeColorDebuggerDatatipActiveBackground</name>	<op:operator pos:line="750" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="750" pos:column="59">32</lit:literal></expr><op:operator pos:line="750" pos:column="61">,</op:operator>
	<expr><name pos:line="751" pos:column="9">vsThemeColorDebuggerDatatipActiveBorder</name>	<op:operator pos:line="751" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="751" pos:column="51">33</lit:literal></expr><op:operator pos:line="751" pos:column="53">,</op:operator>
	<expr><name pos:line="752" pos:column="9">vsThemeColorDebuggerDatatipActiveHighlight</name>	<op:operator pos:line="752" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="752" pos:column="59">34</lit:literal></expr><op:operator pos:line="752" pos:column="61">,</op:operator>
	<expr><name pos:line="753" pos:column="9">vsThemeColorDebuggerDatatipActiveHighlightText</name>	<op:operator pos:line="753" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="753" pos:column="59">35</lit:literal></expr><op:operator pos:line="753" pos:column="61">,</op:operator>
	<expr><name pos:line="754" pos:column="9">vsThemeColorDebuggerDatatipActiveSeparator</name>	<op:operator pos:line="754" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="754" pos:column="59">36</lit:literal></expr><op:operator pos:line="754" pos:column="61">,</op:operator>
	<expr><name pos:line="755" pos:column="9">vsThemeColorDebuggerDatatipActiveText</name>	<op:operator pos:line="755" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="755" pos:column="51">37</lit:literal></expr><op:operator pos:line="755" pos:column="53">,</op:operator>
	<expr><name pos:line="756" pos:column="9">vsThemeColorDebuggerDatatipInactiveBackground</name>	<op:operator pos:line="756" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="756" pos:column="59">38</lit:literal></expr><op:operator pos:line="756" pos:column="61">,</op:operator>
	<expr><name pos:line="757" pos:column="9">vsThemeColorDebuggerDatatipInactiveBorder</name>	<op:operator pos:line="757" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="757" pos:column="59">39</lit:literal></expr><op:operator pos:line="757" pos:column="61">,</op:operator>
	<expr><name pos:line="758" pos:column="9">vsThemeColorDebuggerDatatipInactiveHighlight</name>	<op:operator pos:line="758" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="758" pos:column="59">40</lit:literal></expr><op:operator pos:line="758" pos:column="61">,</op:operator>
	<expr><name pos:line="759" pos:column="9">vsThemeColorDebuggerDatatipInactiveHighlightText</name>	<op:operator pos:line="759" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="759" pos:column="67">41</lit:literal></expr><op:operator pos:line="759" pos:column="69">,</op:operator>
	<expr><name pos:line="760" pos:column="9">vsThemeColorDebuggerDatatipInactiveSeparator</name>	<op:operator pos:line="760" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="760" pos:column="59">42</lit:literal></expr><op:operator pos:line="760" pos:column="61">,</op:operator>
	<expr><name pos:line="761" pos:column="9">vsThemeColorDebuggerDatatipInactiveText</name>	<op:operator pos:line="761" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="761" pos:column="51">43</lit:literal></expr><op:operator pos:line="761" pos:column="53">,</op:operator>
	<expr><name pos:line="762" pos:column="9">vsThemeColorDesignerBackground</name>	<op:operator pos:line="762" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="762" pos:column="43">44</lit:literal></expr><op:operator pos:line="762" pos:column="45">,</op:operator>
	<expr><name pos:line="763" pos:column="9">vsThemeColorDesignerSelectionDots</name>	<op:operator pos:line="763" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="763" pos:column="51">45</lit:literal></expr><op:operator pos:line="763" pos:column="53">,</op:operator>
	<expr><name pos:line="764" pos:column="9">vsThemeColorDesignerTray</name>	<op:operator pos:line="764" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="764" pos:column="43">46</lit:literal></expr><op:operator pos:line="764" pos:column="45">,</op:operator>
	<expr><name pos:line="765" pos:column="9">vsThemeColorDesignerWatermark</name>	<op:operator pos:line="765" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="765" pos:column="43">47</lit:literal></expr><op:operator pos:line="765" pos:column="45">,</op:operator>
	<expr><name pos:line="766" pos:column="9">vsThemeColorEnvironmentBackground</name>	<op:operator pos:line="766" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="766" pos:column="51">48</lit:literal></expr><op:operator pos:line="766" pos:column="53">,</op:operator>
	<expr><name pos:line="767" pos:column="9">vsThemeColorEnvironmentBackgroundGradientBegin</name>	<op:operator pos:line="767" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="767" pos:column="59">49</lit:literal></expr><op:operator pos:line="767" pos:column="61">,</op:operator>
	<expr><name pos:line="768" pos:column="9">vsThemeColorEnvironmentBackgroundGradientEnd</name>	<op:operator pos:line="768" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="768" pos:column="59">50</lit:literal></expr><op:operator pos:line="768" pos:column="61">,</op:operator>
	<expr><name pos:line="769" pos:column="9">vsThemeColorFileTabBorder</name>	<op:operator pos:line="769" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="769" pos:column="43">51</lit:literal></expr><op:operator pos:line="769" pos:column="45">,</op:operator>
	<expr><name pos:line="770" pos:column="9">vsThemeColorFileTabChannelBackground</name>	<op:operator pos:line="770" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="770" pos:column="51">52</lit:literal></expr><op:operator pos:line="770" pos:column="53">,</op:operator>
	<expr><name pos:line="771" pos:column="9">vsThemeColorFileTabGradientDark</name>	<op:operator pos:line="771" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="771" pos:column="43">53</lit:literal></expr><op:operator pos:line="771" pos:column="45">,</op:operator>
	<expr><name pos:line="772" pos:column="9">vsThemeColorFileTabGradientLight</name>	<op:operator pos:line="772" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="772" pos:column="51">54</lit:literal></expr><op:operator pos:line="772" pos:column="53">,</op:operator>
	<expr><name pos:line="773" pos:column="9">vsThemeColorFileTabSelectedBackground</name>	<op:operator pos:line="773" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="773" pos:column="51">55</lit:literal></expr><op:operator pos:line="773" pos:column="53">,</op:operator>
	<expr><name pos:line="774" pos:column="9">vsThemeColorFileTabSelectedBorder</name>	<op:operator pos:line="774" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="774" pos:column="51">56</lit:literal></expr><op:operator pos:line="774" pos:column="53">,</op:operator>
	<expr><name pos:line="775" pos:column="9">vsThemeColorFileTabSelectedText</name>	<op:operator pos:line="775" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="775" pos:column="43">57</lit:literal></expr><op:operator pos:line="775" pos:column="45">,</op:operator>
	<expr><name pos:line="776" pos:column="9">vsThemeColorFileTabText</name>	<op:operator pos:line="776" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="776" pos:column="35">58</lit:literal></expr><op:operator pos:line="776" pos:column="37">,</op:operator>
	<expr><name pos:line="777" pos:column="9">vsThemeColorFormSmartTagActiontagBorder</name>	<op:operator pos:line="777" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="777" pos:column="51">59</lit:literal></expr><op:operator pos:line="777" pos:column="53">,</op:operator>
	<expr><name pos:line="778" pos:column="9">vsThemeColorFormSmartTagActiontagFill</name>	<op:operator pos:line="778" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="778" pos:column="51">60</lit:literal></expr><op:operator pos:line="778" pos:column="53">,</op:operator>
	<expr><name pos:line="779" pos:column="9">vsThemeColorFormSmartTagObjecttagBorder</name>	<op:operator pos:line="779" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="779" pos:column="51">61</lit:literal></expr><op:operator pos:line="779" pos:column="53">,</op:operator>
	<expr><name pos:line="780" pos:column="9">vsThemeColorFormSmartTagObjecttagFill</name>	<op:operator pos:line="780" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="780" pos:column="51">62</lit:literal></expr><op:operator pos:line="780" pos:column="53">,</op:operator>
	<expr><name pos:line="781" pos:column="9">vsThemeColorGridHeadingBackground</name>	<op:operator pos:line="781" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="781" pos:column="51">63</lit:literal></expr><op:operator pos:line="781" pos:column="53">,</op:operator>
	<expr><name pos:line="782" pos:column="9">vsThemeColorGridHeadingText</name>	<op:operator pos:line="782" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="782" pos:column="43">64</lit:literal></expr><op:operator pos:line="782" pos:column="45">,</op:operator>
	<expr><name pos:line="783" pos:column="9">vsThemeColorGridLine</name>	<op:operator pos:line="783" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="783" pos:column="35">65</lit:literal></expr><op:operator pos:line="783" pos:column="37">,</op:operator>
	<expr><name pos:line="784" pos:column="9">vsThemeColorHelpHowDoIPaneBackground</name>	<op:operator pos:line="784" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="784" pos:column="51">66</lit:literal></expr><op:operator pos:line="784" pos:column="53">,</op:operator>
	<expr><name pos:line="785" pos:column="9">vsThemeColorHelpHowDoIPaneBorder</name>	<op:operator pos:line="785" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="785" pos:column="51">67</lit:literal></expr><op:operator pos:line="785" pos:column="53">,</op:operator>
	<expr><name pos:line="786" pos:column="9">vsThemeColorHelpHowDoIPaneLink</name>	<op:operator pos:line="786" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="786" pos:column="43">68</lit:literal></expr><op:operator pos:line="786" pos:column="45">,</op:operator>
	<expr><name pos:line="787" pos:column="9">vsThemeColorHelpHowDoIPaneText</name>	<op:operator pos:line="787" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="787" pos:column="43">69</lit:literal></expr><op:operator pos:line="787" pos:column="45">,</op:operator>
	<expr><name pos:line="788" pos:column="9">vsThemeColorHelpHowDoITaskBackground</name>	<op:operator pos:line="788" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="788" pos:column="51">70</lit:literal></expr><op:operator pos:line="788" pos:column="53">,</op:operator>
	<expr><name pos:line="789" pos:column="9">vsThemeColorHelpHowDoITaskLink</name>	<op:operator pos:line="789" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="789" pos:column="43">71</lit:literal></expr><op:operator pos:line="789" pos:column="45">,</op:operator>
	<expr><name pos:line="790" pos:column="9">vsThemeColorHelpHowDoITaskText</name>	<op:operator pos:line="790" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="790" pos:column="43">72</lit:literal></expr><op:operator pos:line="790" pos:column="45">,</op:operator>
	<expr><name pos:line="791" pos:column="9">vsThemeColorHelpSearchBackground</name>	<op:operator pos:line="791" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="791" pos:column="51">73</lit:literal></expr><op:operator pos:line="791" pos:column="53">,</op:operator>
	<expr><name pos:line="792" pos:column="9">vsThemeColorHelpSearchBorder</name>	<op:operator pos:line="792" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="792" pos:column="43">74</lit:literal></expr><op:operator pos:line="792" pos:column="45">,</op:operator>
	<expr><name pos:line="793" pos:column="9">vsThemeColorHelpSearchFitlerBackground</name>	<op:operator pos:line="793" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="793" pos:column="51">75</lit:literal></expr><op:operator pos:line="793" pos:column="53">,</op:operator>
	<expr><name pos:line="794" pos:column="9">vsThemeColorHelpSearchFitlerBorder</name>	<op:operator pos:line="794" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="794" pos:column="51">76</lit:literal></expr><op:operator pos:line="794" pos:column="53">,</op:operator>
	<expr><name pos:line="795" pos:column="9">vsThemeColorHelpSearchGradientBegin</name>	<op:operator pos:line="795" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="795" pos:column="51">77</lit:literal></expr><op:operator pos:line="795" pos:column="53">,</op:operator>
	<expr><name pos:line="796" pos:column="9">vsThemeColorHelpSearchGradientEnd</name>	<op:operator pos:line="796" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="796" pos:column="51">78</lit:literal></expr><op:operator pos:line="796" pos:column="53">,</op:operator>
	<expr><name pos:line="797" pos:column="9">vsThemeColorHelpSearchNavigationDisabled</name>	<op:operator pos:line="797" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="797" pos:column="59">79</lit:literal></expr><op:operator pos:line="797" pos:column="61">,</op:operator>
	<expr><name pos:line="798" pos:column="9">vsThemeColorHelpSearchNavigationEnabled</name>	<op:operator pos:line="798" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="798" pos:column="51">80</lit:literal></expr><op:operator pos:line="798" pos:column="53">,</op:operator>
	<expr><name pos:line="799" pos:column="9">vsThemeColorHelpSearchPanelRules</name>	<op:operator pos:line="799" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="799" pos:column="51">81</lit:literal></expr><op:operator pos:line="799" pos:column="53">,</op:operator>
	<expr><name pos:line="800" pos:column="9">vsThemeColorHelpSearchProviderBackground</name>	<op:operator pos:line="800" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="800" pos:column="59">82</lit:literal></expr><op:operator pos:line="800" pos:column="61">,</op:operator>
	<expr><name pos:line="801" pos:column="9">vsThemeColorHelpSearchProviderIcon</name>	<op:operator pos:line="801" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="801" pos:column="51">83</lit:literal></expr><op:operator pos:line="801" pos:column="53">,</op:operator>
	<expr><name pos:line="802" pos:column="9">vsThemeColorHelpSearchProviderText</name>	<op:operator pos:line="802" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="802" pos:column="51">84</lit:literal></expr><op:operator pos:line="802" pos:column="53">,</op:operator>
	<expr><name pos:line="803" pos:column="9">vsThemeColorHelpSearchResultLinkSelected</name>	<op:operator pos:line="803" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="803" pos:column="59">85</lit:literal></expr><op:operator pos:line="803" pos:column="61">,</op:operator>
	<expr><name pos:line="804" pos:column="9">vsThemeColorHelpSearchResultLinkUnselected</name>	<op:operator pos:line="804" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="804" pos:column="59">86</lit:literal></expr><op:operator pos:line="804" pos:column="61">,</op:operator>
	<expr><name pos:line="805" pos:column="9">vsThemeColorHelpSearchResultSelectedBackground</name>	<op:operator pos:line="805" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="805" pos:column="59">87</lit:literal></expr><op:operator pos:line="805" pos:column="61">,</op:operator>
	<expr><name pos:line="806" pos:column="9">vsThemeColorHelpSearchResultSelectedText</name>	<op:operator pos:line="806" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="806" pos:column="59">88</lit:literal></expr><op:operator pos:line="806" pos:column="61">,</op:operator>
	<expr><name pos:line="807" pos:column="9">vsThemeColorHelpSearchText</name>	<op:operator pos:line="807" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="807" pos:column="43">89</lit:literal></expr><op:operator pos:line="807" pos:column="45">,</op:operator>
	<expr><name pos:line="808" pos:column="9">vsThemeColorPanelBorder</name>	<op:operator pos:line="808" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="808" pos:column="35">90</lit:literal></expr><op:operator pos:line="808" pos:column="37">,</op:operator>
	<expr><name pos:line="809" pos:column="9">vsThemeColorPanelGradientDark</name>	<op:operator pos:line="809" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="809" pos:column="43">91</lit:literal></expr><op:operator pos:line="809" pos:column="45">,</op:operator>
	<expr><name pos:line="810" pos:column="9">vsThemeColorPanelGradientLight</name>	<op:operator pos:line="810" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="810" pos:column="43">92</lit:literal></expr><op:operator pos:line="810" pos:column="45">,</op:operator>
	<expr><name pos:line="811" pos:column="9">vsThemeColorPanelHoveroverCloseBorder</name>	<op:operator pos:line="811" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="811" pos:column="51">93</lit:literal></expr><op:operator pos:line="811" pos:column="53">,</op:operator>
	<expr><name pos:line="812" pos:column="9">vsThemeColorPanelHoveroverCloseFill</name>	<op:operator pos:line="812" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="812" pos:column="51">94</lit:literal></expr><op:operator pos:line="812" pos:column="53">,</op:operator>
	<expr><name pos:line="813" pos:column="9">vsThemeColorPanelHyperlink</name>	<op:operator pos:line="813" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="813" pos:column="43">95</lit:literal></expr><op:operator pos:line="813" pos:column="45">,</op:operator>
	<expr><name pos:line="814" pos:column="9">vsThemeColorPanelHyperlinkHover</name>	<op:operator pos:line="814" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="814" pos:column="43">96</lit:literal></expr><op:operator pos:line="814" pos:column="45">,</op:operator>
	<expr><name pos:line="815" pos:column="9">vsThemeColorPanelHyperlinkPressed</name>	<op:operator pos:line="815" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="815" pos:column="51">97</lit:literal></expr><op:operator pos:line="815" pos:column="53">,</op:operator>
	<expr><name pos:line="816" pos:column="9">vsThemeColorPanelSeparator</name>	<op:operator pos:line="816" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="816" pos:column="43">98</lit:literal></expr><op:operator pos:line="816" pos:column="45">,</op:operator>
	<expr><name pos:line="817" pos:column="9">vsThemeColorPanelSubGroupSeparator</name>	<op:operator pos:line="817" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="817" pos:column="51">99</lit:literal></expr><op:operator pos:line="817" pos:column="53">,</op:operator>
	<expr><name pos:line="818" pos:column="9">vsThemeColorPanelText</name>	<op:operator pos:line="818" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="818" pos:column="35">100</lit:literal></expr><op:operator pos:line="818" pos:column="38">,</op:operator>
	<expr><name pos:line="819" pos:column="9">vsThemeColorPanelTitlebar</name>	<op:operator pos:line="819" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="819" pos:column="43">101</lit:literal></expr><op:operator pos:line="819" pos:column="46">,</op:operator>
	<expr><name pos:line="820" pos:column="9">vsThemeColorPanelTitlebarText</name>	<op:operator pos:line="820" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="820" pos:column="43">102</lit:literal></expr><op:operator pos:line="820" pos:column="46">,</op:operator>
	<expr><name pos:line="821" pos:column="9">vsThemeColorPanelTitlebarUnselected</name>	<op:operator pos:line="821" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="821" pos:column="51">103</lit:literal></expr><op:operator pos:line="821" pos:column="54">,</op:operator>
	<expr><name pos:line="822" pos:column="9">vsThemeColorProjectDesignerBackgroundGradientBegin</name>	<op:operator pos:line="822" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="822" pos:column="67">104</lit:literal></expr><op:operator pos:line="822" pos:column="70">,</op:operator>
	<expr><name pos:line="823" pos:column="9">vsThemeColorProjectDesignerBackgroundGradientEnd</name>	<op:operator pos:line="823" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="823" pos:column="67">105</lit:literal></expr><op:operator pos:line="823" pos:column="70">,</op:operator>
	<expr><name pos:line="824" pos:column="9">vsThemeColorProjectDesignerBorderOutside</name>	<op:operator pos:line="824" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="824" pos:column="59">106</lit:literal></expr><op:operator pos:line="824" pos:column="62">,</op:operator>
	<expr><name pos:line="825" pos:column="9">vsThemeColorProjectDesignerBorderInside</name>	<op:operator pos:line="825" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="825" pos:column="51">107</lit:literal></expr><op:operator pos:line="825" pos:column="54">,</op:operator>
	<expr><name pos:line="826" pos:column="9">vsThemeColorProjectDesignerContentsBackground</name>	<op:operator pos:line="826" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="826" pos:column="59">108</lit:literal></expr><op:operator pos:line="826" pos:column="62">,</op:operator>
	<expr><name pos:line="827" pos:column="9">vsThemeColorProjectDesignerTabBackgroundGradientBegin</name>	<op:operator pos:line="827" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="827" pos:column="67">109</lit:literal></expr><op:operator pos:line="827" pos:column="70">,</op:operator>
	<expr><name pos:line="828" pos:column="9">vsThemeColorProjectDesignerTabBackgroundGradientEnd</name>	<op:operator pos:line="828" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="828" pos:column="67">110</lit:literal></expr><op:operator pos:line="828" pos:column="70">,</op:operator>
	<expr><name pos:line="829" pos:column="9">vsThemeColorProjectDesignerTabSelectedInsideborder</name>	<op:operator pos:line="829" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="829" pos:column="67">111</lit:literal></expr><op:operator pos:line="829" pos:column="70">,</op:operator>
	<expr><name pos:line="830" pos:column="9">vsThemeColorProjectDesignerTabSelectedBorder</name>	<op:operator pos:line="830" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="830" pos:column="59">112</lit:literal></expr><op:operator pos:line="830" pos:column="62">,</op:operator>
	<expr><name pos:line="831" pos:column="9">vsThemeColorProjectDesignerTabSelectedHighlight1</name>	<op:operator pos:line="831" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="831" pos:column="67">113</lit:literal></expr><op:operator pos:line="831" pos:column="70">,</op:operator>
	<expr><name pos:line="832" pos:column="9">vsThemeColorProjectDesignerTabSelectedHighlight2</name>	<op:operator pos:line="832" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="832" pos:column="67">114</lit:literal></expr><op:operator pos:line="832" pos:column="70">,</op:operator>
	<expr><name pos:line="833" pos:column="9">vsThemeColorProjectDesignerTabSelectedBackground</name>	<op:operator pos:line="833" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="833" pos:column="67">115</lit:literal></expr><op:operator pos:line="833" pos:column="70">,</op:operator>
	<expr><name pos:line="834" pos:column="9">vsThemeColorProjectDesignerTabSepBottomGradientBegin</name>	<op:operator pos:line="834" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="834" pos:column="67">116</lit:literal></expr><op:operator pos:line="834" pos:column="70">,</op:operator>
	<expr><name pos:line="835" pos:column="9">vsThemeColorProjectDesignerTabSepBottomGradientEnd</name>	<op:operator pos:line="835" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="835" pos:column="67">117</lit:literal></expr><op:operator pos:line="835" pos:column="70">,</op:operator>
	<expr><name pos:line="836" pos:column="9">vsThemeColorProjectDesignerTabSepTopGradientBegin</name>	<op:operator pos:line="836" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="836" pos:column="67">118</lit:literal></expr><op:operator pos:line="836" pos:column="70">,</op:operator>
	<expr><name pos:line="837" pos:column="9">vsThemeColorProjectDesignerTabSepTopGradientEnd</name>	<op:operator pos:line="837" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="837" pos:column="59">119</lit:literal></expr><op:operator pos:line="837" pos:column="62">,</op:operator>
	<expr><name pos:line="838" pos:column="9">vsThemeColorScreentipBorder</name>	<op:operator pos:line="838" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="838" pos:column="43">120</lit:literal></expr><op:operator pos:line="838" pos:column="46">,</op:operator>
	<expr><name pos:line="839" pos:column="9">vsThemeColorScreentipBackground</name>	<op:operator pos:line="839" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="839" pos:column="43">121</lit:literal></expr><op:operator pos:line="839" pos:column="46">,</op:operator>
	<expr><name pos:line="840" pos:column="9">vsThemeColorScreentipText</name>	<op:operator pos:line="840" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="840" pos:column="43">122</lit:literal></expr><op:operator pos:line="840" pos:column="46">,</op:operator>
	<expr><name pos:line="841" pos:column="9">vsThemeColorSidebarBackground</name>	<op:operator pos:line="841" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="841" pos:column="43">123</lit:literal></expr><op:operator pos:line="841" pos:column="46">,</op:operator>
	<expr><name pos:line="842" pos:column="9">vsThemeColorSidebarGradientdark</name>	<op:operator pos:line="842" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="842" pos:column="43">124</lit:literal></expr><op:operator pos:line="842" pos:column="46">,</op:operator>
	<expr><name pos:line="843" pos:column="9">vsThemeColorSidebarGradientlight</name>	<op:operator pos:line="843" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="843" pos:column="51">125</lit:literal></expr><op:operator pos:line="843" pos:column="54">,</op:operator>
	<expr><name pos:line="844" pos:column="9">vsThemeColorSidebarText</name>	<op:operator pos:line="844" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="844" pos:column="35">126</lit:literal></expr><op:operator pos:line="844" pos:column="38">,</op:operator>
	<expr><name pos:line="845" pos:column="9">vsThemeColorSmartTagBorder</name>	<op:operator pos:line="845" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="845" pos:column="43">127</lit:literal></expr><op:operator pos:line="845" pos:column="46">,</op:operator>
	<expr><name pos:line="846" pos:column="9">vsThemeColorSmartTagFill</name>	<op:operator pos:line="846" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="846" pos:column="43">128</lit:literal></expr><op:operator pos:line="846" pos:column="46">,</op:operator>
	<expr><name pos:line="847" pos:column="9">vsThemeColorSmartTagHoverBorder</name>	<op:operator pos:line="847" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="847" pos:column="43">129</lit:literal></expr><op:operator pos:line="847" pos:column="46">,</op:operator>
	<expr><name pos:line="848" pos:column="9">vsThemeColorSmartTagHoverFill</name>	<op:operator pos:line="848" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="848" pos:column="43">130</lit:literal></expr><op:operator pos:line="848" pos:column="46">,</op:operator>
	<expr><name pos:line="849" pos:column="9">vsThemeColorSmartTagHoverText</name>	<op:operator pos:line="849" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="849" pos:column="43">131</lit:literal></expr><op:operator pos:line="849" pos:column="46">,</op:operator>
	<expr><name pos:line="850" pos:column="9">vsThemeColorSmartTagText</name>	<op:operator pos:line="850" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="850" pos:column="43">132</lit:literal></expr><op:operator pos:line="850" pos:column="46">,</op:operator>
	<expr><name pos:line="851" pos:column="9">vsThemeColorSnaplines</name>	<op:operator pos:line="851" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="851" pos:column="35">133</lit:literal></expr><op:operator pos:line="851" pos:column="38">,</op:operator>
	<expr><name pos:line="852" pos:column="9">vsThemeColorSnaplinesTextBaseline</name>	<op:operator pos:line="852" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="852" pos:column="51">134</lit:literal></expr><op:operator pos:line="852" pos:column="54">,</op:operator>
	<expr><name pos:line="853" pos:column="9">vsThemeColorTasklistGridlines</name>	<op:operator pos:line="853" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="853" pos:column="43">135</lit:literal></expr><op:operator pos:line="853" pos:column="46">,</op:operator>
	<expr><name pos:line="854" pos:column="9">vsThemeColorTitlebarActive</name>	<op:operator pos:line="854" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="854" pos:column="43">136</lit:literal></expr><op:operator pos:line="854" pos:column="46">,</op:operator>
	<expr><name pos:line="855" pos:column="9">vsThemeColorTitlebarActiveGradientBegin</name>	<op:operator pos:line="855" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="855" pos:column="51">137</lit:literal></expr><op:operator pos:line="855" pos:column="54">,</op:operator>
	<expr><name pos:line="856" pos:column="9">vsThemeColorTitlebarActiveGradientEnd</name>	<op:operator pos:line="856" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="856" pos:column="51">138</lit:literal></expr><op:operator pos:line="856" pos:column="54">,</op:operator>
	<expr><name pos:line="857" pos:column="9">vsThemeColorTitlebarActiveText</name>	<op:operator pos:line="857" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="857" pos:column="43">139</lit:literal></expr><op:operator pos:line="857" pos:column="46">,</op:operator>
	<expr><name pos:line="858" pos:column="9">vsThemeColorTitlebarInactive</name>	<op:operator pos:line="858" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="858" pos:column="43">140</lit:literal></expr><op:operator pos:line="858" pos:column="46">,</op:operator>
	<expr><name pos:line="859" pos:column="9">vsThemeColorTitlebarInactiveGradientBegin</name>	<op:operator pos:line="859" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="859" pos:column="59">141</lit:literal></expr><op:operator pos:line="859" pos:column="62">,</op:operator>
	<expr><name pos:line="860" pos:column="9">vsThemeColorTitlebarInactiveGradientEnd</name>	<op:operator pos:line="860" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="860" pos:column="51">142</lit:literal></expr><op:operator pos:line="860" pos:column="54">,</op:operator>
	<expr><name pos:line="861" pos:column="9">vsThemeColorTitlebarInactiveText</name>	<op:operator pos:line="861" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="861" pos:column="51">143</lit:literal></expr><op:operator pos:line="861" pos:column="54">,</op:operator>
	<expr><name pos:line="862" pos:column="9">vsThemeColorToolboxBackground</name>	<op:operator pos:line="862" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="862" pos:column="43">144</lit:literal></expr><op:operator pos:line="862" pos:column="46">,</op:operator>
	<expr><name pos:line="863" pos:column="9">vsThemeColorToolboxDivider</name>	<op:operator pos:line="863" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="863" pos:column="43">145</lit:literal></expr><op:operator pos:line="863" pos:column="46">,</op:operator>
	<expr><name pos:line="864" pos:column="9">vsThemeColorToolboxGradientDark</name>	<op:operator pos:line="864" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="864" pos:column="43">146</lit:literal></expr><op:operator pos:line="864" pos:column="46">,</op:operator>
	<expr><name pos:line="865" pos:column="9">vsThemeColorToolboxGradientLight</name>	<op:operator pos:line="865" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="865" pos:column="51">147</lit:literal></expr><op:operator pos:line="865" pos:column="54">,</op:operator>
	<expr><name pos:line="866" pos:column="9">vsThemeColorToolboxHeadingAccent</name>	<op:operator pos:line="866" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="866" pos:column="51">148</lit:literal></expr><op:operator pos:line="866" pos:column="54">,</op:operator>
	<expr><name pos:line="867" pos:column="9">vsThemeColorToolboxHeadingBegin</name>	<op:operator pos:line="867" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="867" pos:column="43">149</lit:literal></expr><op:operator pos:line="867" pos:column="46">,</op:operator>
	<expr><name pos:line="868" pos:column="9">vsThemeColorToolboxHeadingEnd</name>	<op:operator pos:line="868" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="868" pos:column="43">150</lit:literal></expr><op:operator pos:line="868" pos:column="46">,</op:operator>
	<expr><name pos:line="869" pos:column="9">vsThemeColorToolboxIconHighlight</name>	<op:operator pos:line="869" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="869" pos:column="51">151</lit:literal></expr><op:operator pos:line="869" pos:column="54">,</op:operator>
	<expr><name pos:line="870" pos:column="9">vsThemeColorToolboxIconShadow</name>	<op:operator pos:line="870" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="870" pos:column="43">152</lit:literal></expr><op:operator pos:line="870" pos:column="46">,</op:operator>
	<expr><name pos:line="871" pos:column="9">vsThemeColorToolWindowBackground</name>	<op:operator pos:line="871" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="871" pos:column="51">153</lit:literal></expr><op:operator pos:line="871" pos:column="54">,</op:operator>
	<expr><name pos:line="872" pos:column="9">vsThemeColorToolWindowBorder</name>	<op:operator pos:line="872" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="872" pos:column="43">154</lit:literal></expr><op:operator pos:line="872" pos:column="46">,</op:operator>
	<expr><name pos:line="873" pos:column="9">vsThemeColorToolWindowTabSelectedtab</name>	<op:operator pos:line="873" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="873" pos:column="51">155</lit:literal></expr><op:operator pos:line="873" pos:column="54">,</op:operator>
	<expr><name pos:line="874" pos:column="9">vsThemeColorToolWindowTabBorder</name>	<op:operator pos:line="874" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="874" pos:column="43">156</lit:literal></expr><op:operator pos:line="874" pos:column="46">,</op:operator>
	<expr><name pos:line="875" pos:column="9">vsThemeColorToolWindowTabGradientBegin</name>	<op:operator pos:line="875" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="875" pos:column="51">157</lit:literal></expr><op:operator pos:line="875" pos:column="54">,</op:operator>
	<expr><name pos:line="876" pos:column="9">vsThemeColorToolWindowTabGradientEnd</name>	<op:operator pos:line="876" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="876" pos:column="51">158</lit:literal></expr><op:operator pos:line="876" pos:column="54">,</op:operator>
	<expr><name pos:line="877" pos:column="9">vsThemeColorToolWindowTabText</name>	<op:operator pos:line="877" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="877" pos:column="43">159</lit:literal></expr><op:operator pos:line="877" pos:column="46">,</op:operator>
	<expr><name pos:line="878" pos:column="9">vsThemeColorToolWindowTabSelectedtext</name>	<op:operator pos:line="878" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="878" pos:column="51">160</lit:literal></expr><op:operator pos:line="878" pos:column="54">,</op:operator>
	<expr><name pos:line="879" pos:column="9">vsThemeColorWizardOrientationPanelBackground</name>	<op:operator pos:line="879" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="879" pos:column="59">161</lit:literal></expr><op:operator pos:line="879" pos:column="62">,</op:operator>
	<expr><name pos:line="880" pos:column="9">vsThemeColorWizardOrientationPanelText</name>	<op:operator pos:line="880" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="880" pos:column="51">162</lit:literal></expr>
    }</block> 	<name pos:line="881" pos:column="9">vsThemeColors</name></expr>;</expr_stmt></typedef>

<typedef pos:line="883" pos:column="1">typedef <comment type="block" pos:line="883" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="883" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="883" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="883" pos:column="81">"A3ACF727-0590-4467-A9C7-5557B9C0F3F6"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="884" pos:column="6">vsFindOptions2</name>
    <block pos:line="885" pos:column="5">{	<expr><name pos:line="885" pos:column="9">vsFindOptionsWaitForFindToComplete</name>	<op:operator pos:line="885" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="885" pos:column="51">0x4000</lit:literal></expr>
    }</block> 	<name pos:line="886" pos:column="9">vsFindOptions2</name></expr>;</expr_stmt></typedef>

<typedef pos:line="888" pos:column="1">typedef <comment type="block" pos:line="888" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="888" pos:column="67">DECLSPEC_UUID</name><argument_list pos:line="888" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="888" pos:column="81">"FD6530D0-1A2C-4073-AAE9-3C2B3AA8BC4D"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="889" pos:column="6">vsIncrementalSearchResult</name>
    <block pos:line="890" pos:column="5">{	<expr><name pos:line="890" pos:column="9">vsIncrementalSearchResultFound</name>	<op:operator pos:line="890" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="890" pos:column="43">1</lit:literal></expr><op:operator pos:line="890" pos:column="44">,</op:operator>
	<expr><name pos:line="891" pos:column="9">vsIncrementalSearchResultPassedEOB</name>	<op:operator pos:line="891" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="891" pos:column="51">2</lit:literal></expr><op:operator pos:line="891" pos:column="52">,</op:operator>
	<expr><name pos:line="892" pos:column="9">vsIncrementalSearchResultPassedStart</name>	<op:operator pos:line="892" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="892" pos:column="51">4</lit:literal></expr><op:operator pos:line="892" pos:column="52">,</op:operator>
	<expr><name pos:line="893" pos:column="9">vsIncrementalSearchResultFailed</name>	<op:operator pos:line="893" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="893" pos:column="43">8</lit:literal></expr>
    }</block> 	<name pos:line="894" pos:column="9">vsIncrementalSearchResult</name></expr>;</expr_stmt></typedef>

<typedef pos:line="896" pos:column="1">typedef <comment type="block" pos:line="896" pos:column="9">/* [helpstring][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="896" pos:column="35">DECLSPEC_UUID</name><argument_list pos:line="896" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="896" pos:column="49">"861474e5-de58-4924-b6d3-8d48ba712944"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="897" pos:column="6">vsPublishState</name>
    <block pos:line="898" pos:column="5">{	<expr><name pos:line="898" pos:column="9">vsPublishStateDone</name>	<op:operator pos:line="898" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="898" pos:column="35">1</lit:literal></expr><op:operator pos:line="898" pos:column="36">,</op:operator>
	<expr><name pos:line="899" pos:column="9">vsPublishStateInProgress</name>	<op:operator pos:line="899" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="899" pos:column="43">2</lit:literal></expr><op:operator pos:line="899" pos:column="44">,</op:operator>
	<expr><name pos:line="900" pos:column="9">vsPublishStateNotStarted</name>	<op:operator pos:line="900" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="900" pos:column="43">4</lit:literal></expr>
    }</block> 	<name pos:line="901" pos:column="9">vsPublishState</name></expr>;</expr_stmt></typedef>

<typedef pos:line="903" pos:column="1">typedef <comment type="block" pos:line="903" pos:column="9">/* [helpstring][uuid] */</comment>  <expr_stmt><expr><call><name pos:line="903" pos:column="35">DECLSPEC_UUID</name><argument_list pos:line="903" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="903" pos:column="49">"e71fe63b-b6d9-47a0-9577-963c84aecce0"</lit:literal></expr></argument>)</argument_list></call> 
enum <name pos:line="904" pos:column="6">vsBuildErrorLevel</name>
    <block pos:line="905" pos:column="5">{	<expr><name pos:line="905" pos:column="9">vsBuildErrorLevelLow</name>	<op:operator pos:line="905" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="905" pos:column="35">1</lit:literal></expr><op:operator pos:line="905" pos:column="36">,</op:operator>
	<expr><name pos:line="906" pos:column="9">vsBuildErrorLevelMedium</name>	<op:operator pos:line="906" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="906" pos:column="35">2</lit:literal></expr><op:operator pos:line="906" pos:column="36">,</op:operator>
	<expr><name pos:line="907" pos:column="9">vsBuildErrorLevelHigh</name>	<op:operator pos:line="907" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="907" pos:column="35">4</lit:literal></expr>
    }</block> 	<name pos:line="908" pos:column="9">vsBuildErrorLevel</name></expr>;</expr_stmt></typedef>


<decl_stmt><decl><type><name pos:line="911" pos:column="1">EXTERN_C</name> <specifier pos:line="911" pos:column="10">const</specifier> <name pos:line="911" pos:column="16">IID</name></type> <name pos:line="911" pos:column="20">LIBID_EnvDTE80</name></decl>;</decl_stmt>

<cpp:ifndef pos:line="913" pos:column="1">#<cpp:directive pos:line="913" pos:column="2">ifndef</cpp:directive> <name pos:line="913" pos:column="9">__Commands2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="914" pos:column="1">#<cpp:directive pos:line="914" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="914" pos:column="9">__Commands2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="916" pos:column="1">/* interface Commands2 */</comment>
<comment type="block" pos:line="917" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="920" pos:column="1">EXTERN_C</name> <specifier pos:line="920" pos:column="10">const</specifier> <name pos:line="920" pos:column="16">IID</name></type> <name pos:line="920" pos:column="20">IID_Commands2</name></decl>;</decl_stmt>

<cpp:if pos:line="922" pos:column="1">#<cpp:directive pos:line="922" pos:column="2">if</cpp:directive> <expr><call><name pos:line="922" pos:column="5">defined</name><argument_list pos:line="922" pos:column="12">(<argument><expr><name pos:line="922" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="922" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="922" pos:column="29">!</op:operator><call><name pos:line="922" pos:column="30">defined</name><argument_list pos:line="922" pos:column="37">(<argument><expr><name pos:line="922" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="924" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="924" pos:column="19">(<argument pos:line="924" pos:column="20">"7EAA857B-2356-494B-9E13-0F6EEFA86E43"</argument>)</argument_list></macro>
    <label><name pos:line="925" pos:column="5">Commands2</name> :</label> <expr_stmt><expr pos:line="925" pos:column="17">public <name pos:line="925" pos:column="24">Commands</name>
    <block pos:line="926" pos:column="5">{
    <expr pos:line="927" pos:column="5">public<op:operator pos:line="927" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="928" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="928" pos:column="72">HRESULT</name> <name pos:line="928" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="928" pos:column="98">AddNamedCommand2</name><argument_list pos:line="928" pos:column="114">( 
            <comment type="block" pos:line="929" pos:column="13">/* [in] */</comment> <argument pos:line="929" pos:column="24">__RPC__in <comment type="block" pos:line="929" pos:column="34">/* external definition not present */</comment> AddIn *AddInInstance</argument>,
            <comment type="block" pos:line="930" pos:column="13">/* [in] */</comment> <argument pos:line="930" pos:column="24">__RPC__in BSTR Name</argument>,
            <comment type="block" pos:line="931" pos:column="13">/* [in] */</comment> <argument pos:line="931" pos:column="24">__RPC__in BSTR ButtonText</argument>,
            <comment type="block" pos:line="932" pos:column="13">/* [in] */</comment> <argument pos:line="932" pos:column="24">__RPC__in BSTR Tooltip</argument>,
            <comment type="block" pos:line="933" pos:column="13">/* [in] */</comment> <argument pos:line="933" pos:column="24">VARIANT_BOOL MSOButton</argument>,
            <comment type="block" pos:line="934" pos:column="13">/* [optional][in] */</comment> <argument pos:line="934" pos:column="34">VARIANT Bitmap</argument>,
            <comment type="block" pos:line="935" pos:column="13">/* [optional][in] */</comment> <argument pos:line="935" pos:column="34">__RPC__deref_in_opt SAFEARRAY * *ContextUIGUIDs</argument>,
            <comment type="block" pos:line="936" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="936" pos:column="38">long vsCommandStatusValue</argument>,
            <comment type="block" pos:line="937" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="937" pos:column="38">long CommandStyleFlags</argument>,
            <comment type="block" pos:line="938" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="938" pos:column="38">vsCommandControlType ControlType</argument>,
            <comment type="block" pos:line="939" pos:column="13">/* [retval][out] */</comment> <argument pos:line="939" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="939" pos:column="54">/* external definition not present */</comment> Command **pVal</argument>)</argument_list></macro> <op:operator pos:line="939" pos:column="108">=</op:operator> <lit:literal type="number" pos:line="939" pos:column="110">0</lit:literal></expr>;
        
        <expr pos:line="941" pos:column="9">virtual <comment type="block" pos:line="941" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="941" pos:column="72">HRESULT</name> <name pos:line="941" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="941" pos:column="98">UpdateCommandUI</name><argument_list pos:line="941" pos:column="113">( 
            <argument pos:line="942" pos:column="13">VARIANT_BOOL PerformImmediately</argument>)</argument_list></macro> <op:operator pos:line="942" pos:column="46">=</op:operator> <lit:literal type="number" pos:line="942" pos:column="48">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="946" pos:column="1">#<cpp:directive pos:line="946" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="946" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="948" pos:column="5">typedef <type><struct pos:line="948" pos:column="13">struct <name pos:line="948" pos:column="20">Commands2Vtbl</name>
    <block pos:line="949" pos:column="5">{<public type="default" pos:line="949" pos:column="6">
        <decl_stmt><decl><type><name pos:line="950" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="952" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="952" pos:column="46">HRESULT</name></type> ( <name pos:line="952" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="952" pos:column="74">*</type:modifier><name pos:line="952" pos:column="75">QueryInterface</name> )<parameter_list pos:line="952" pos:column="91">( 
            <param><decl><type><name pos:line="953" pos:column="13">Commands2</name> <type:modifier pos:line="953" pos:column="23">*</type:modifier></type> <name pos:line="953" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="954" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="954" pos:column="47">struct <name pos:line="954" pos:column="54">GUID</name> <type:modifier pos:line="954" pos:column="59">*</type:modifier></type><name pos:line="954" pos:column="60">riid</name></decl><op:operator pos:line="954" pos:column="64">,</op:operator>
            <comment type="block" pos:line="955" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="955" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="955" pos:column="59">void</name> <type:modifier pos:line="955" pos:column="64">*</type:modifier><type:modifier pos:line="955" pos:column="65">*</type:modifier><name pos:line="955" pos:column="66">ppvObj</name><op:operator pos:line="955" pos:column="72">,</op:operator>
            <comment type="block" pos:line="956" pos:column="13">/* [retval][out] */</comment> <name pos:line="956" pos:column="33">__RPC__out</name> <name pos:line="956" pos:column="44">void</name> <type:modifier pos:line="956" pos:column="49">*</type:modifier><name pos:line="956" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="958" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="958" pos:column="46">HRESULT</name></type> ( <name pos:line="958" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="958" pos:column="74">*</type:modifier><name pos:line="958" pos:column="75">AddRef</name> )<parameter_list pos:line="958" pos:column="83">( 
            <param><decl><type><name pos:line="959" pos:column="13">Commands2</name> <type:modifier pos:line="959" pos:column="23">*</type:modifier></type> <name pos:line="959" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="960" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="960" pos:column="33">__RPC__out</name> <name pos:line="960" pos:column="44">unsigned</name> <name pos:line="960" pos:column="53">long</name> <type:modifier pos:line="960" pos:column="58">*</type:modifier></type><name pos:line="960" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="962" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="962" pos:column="46">HRESULT</name></type> ( <name pos:line="962" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="962" pos:column="74">*</type:modifier><name pos:line="962" pos:column="75">Release</name> )<parameter_list pos:line="962" pos:column="84">( 
            <param><decl><type><name pos:line="963" pos:column="13">Commands2</name> <type:modifier pos:line="963" pos:column="23">*</type:modifier></type> <name pos:line="963" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="964" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="964" pos:column="33">__RPC__out</name> <name pos:line="964" pos:column="44">unsigned</name> <name pos:line="964" pos:column="53">long</name> <type:modifier pos:line="964" pos:column="58">*</type:modifier></type><name pos:line="964" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="966" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="966" pos:column="46">HRESULT</name></type> ( <name pos:line="966" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="966" pos:column="74">*</type:modifier><name pos:line="966" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="966" pos:column="93">( 
            <param><decl><type><name pos:line="967" pos:column="13">Commands2</name> <type:modifier pos:line="967" pos:column="23">*</type:modifier></type> <name pos:line="967" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="968" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="968" pos:column="38">__RPC__out</name> <name pos:line="968" pos:column="49">unsigned</name> <name pos:line="968" pos:column="58">UINT</name> <type:modifier pos:line="968" pos:column="63">*</type:modifier></type><name pos:line="968" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="969" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="969" pos:column="33">__RPC__out</name> <name pos:line="969" pos:column="44">void</name> <type:modifier pos:line="969" pos:column="49">*</type:modifier></type><name pos:line="969" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="971" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="971" pos:column="46">HRESULT</name></type> ( <name pos:line="971" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="971" pos:column="74">*</type:modifier><name pos:line="971" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="971" pos:column="88">( 
            <param><decl><type><name pos:line="972" pos:column="13">Commands2</name> <type:modifier pos:line="972" pos:column="23">*</type:modifier></type> <name pos:line="972" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="973" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="973" pos:column="37">unsigned</name> <name pos:line="973" pos:column="46">UINT</name></type> <name pos:line="973" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="974" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="974" pos:column="37">unsigned</name> <name pos:line="974" pos:column="46">long</name></type> <name pos:line="974" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="975" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="975" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="975" pos:column="59">void</name> <type:modifier pos:line="975" pos:column="64">*</type:modifier><type:modifier pos:line="975" pos:column="65">*</type:modifier></type><name pos:line="975" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="976" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="976" pos:column="33">__RPC__out</name> <name pos:line="976" pos:column="44">void</name> <type:modifier pos:line="976" pos:column="49">*</type:modifier></type><name pos:line="976" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="978" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="978" pos:column="46">HRESULT</name> <argument_list pos:line="978" pos:column="54">( <argument pos:line="978" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="978" pos:column="90">(</op:operator> 
            <name pos:line="979" pos:column="13">Commands2</name> <op:operator pos:line="979" pos:column="23">*</op:operator> <name pos:line="979" pos:column="25">This</name><op:operator pos:line="979" pos:column="29">,</op:operator>
            <comment type="block" pos:line="980" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="980" pos:column="37">__RPC__in</name> struct <name pos:line="980" pos:column="54">GUID</name> <op:operator pos:line="980" pos:column="59">*</op:operator><name pos:line="980" pos:column="60">riid</name><op:operator pos:line="980" pos:column="64">,</op:operator>
            <comment type="block" pos:line="981" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="981" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="981" pos:column="57">signed</name> <name pos:line="981" pos:column="64">char</name> <op:operator pos:line="981" pos:column="69">*</op:operator><op:operator pos:line="981" pos:column="70">*</op:operator><name pos:line="981" pos:column="71">rgszNames</name><op:operator pos:line="981" pos:column="80">,</op:operator>
            <comment type="block" pos:line="982" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="982" pos:column="37">unsigned</name> <name pos:line="982" pos:column="46">UINT</name> <name pos:line="982" pos:column="51">cNames</name><op:operator pos:line="982" pos:column="57">,</op:operator>
            <comment type="block" pos:line="983" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="983" pos:column="37">unsigned</name> <name pos:line="983" pos:column="46">long</name> <name pos:line="983" pos:column="51">lcid</name><op:operator pos:line="983" pos:column="55">,</op:operator>
            <comment type="block" pos:line="984" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="984" pos:column="38">__RPC__out</name> <name pos:line="984" pos:column="49">signed</name> <name pos:line="984" pos:column="56">long</name> <op:operator pos:line="984" pos:column="61">*</op:operator><name pos:line="984" pos:column="62">rgdispid</name><op:operator pos:line="984" pos:column="70">,</op:operator>
            <comment type="block" pos:line="985" pos:column="13">/* [retval][out] */</comment> <name pos:line="985" pos:column="33">__RPC__out</name> <name pos:line="985" pos:column="44">void</name> <op:operator pos:line="985" pos:column="49">*</op:operator><name pos:line="985" pos:column="50">retval</name><op:operator pos:line="985" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="987" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="987" pos:column="46">HRESULT</name> <argument_list pos:line="987" pos:column="54">( <argument pos:line="987" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="987" pos:column="83">(</op:operator> 
            <name pos:line="988" pos:column="13">Commands2</name> <op:operator pos:line="988" pos:column="23">*</op:operator> <name pos:line="988" pos:column="25">This</name><op:operator pos:line="988" pos:column="29">,</op:operator>
            <comment type="block" pos:line="989" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="989" pos:column="37">signed</name> <name pos:line="989" pos:column="44">long</name> <name pos:line="989" pos:column="49">dispidMember</name><op:operator pos:line="989" pos:column="61">,</op:operator>
            <comment type="block" pos:line="990" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="990" pos:column="37">__RPC__in</name> struct <name pos:line="990" pos:column="54">GUID</name> <op:operator pos:line="990" pos:column="59">*</op:operator><name pos:line="990" pos:column="60">riid</name><op:operator pos:line="990" pos:column="64">,</op:operator>
            <comment type="block" pos:line="991" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="991" pos:column="37">unsigned</name> <name pos:line="991" pos:column="46">long</name> <name pos:line="991" pos:column="51">lcid</name><op:operator pos:line="991" pos:column="55">,</op:operator>
            <comment type="block" pos:line="992" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="992" pos:column="37">unsigned</name> <name pos:line="992" pos:column="46">short</name> <name pos:line="992" pos:column="52">wFlags</name><op:operator pos:line="992" pos:column="58">,</op:operator>
            <comment type="block" pos:line="993" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="993" pos:column="37">__RPC__in</name> struct <name pos:line="993" pos:column="54">DISPPARAMS</name> <op:operator pos:line="993" pos:column="65">*</op:operator><name pos:line="993" pos:column="66">pdispparams</name><op:operator pos:line="993" pos:column="77">,</op:operator>
            <comment type="block" pos:line="994" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="994" pos:column="38">__RPC__out</name> <name pos:line="994" pos:column="49">VARIANT</name> <op:operator pos:line="994" pos:column="57">*</op:operator><name pos:line="994" pos:column="58">pvarResult</name><op:operator pos:line="994" pos:column="68">,</op:operator>
            <comment type="block" pos:line="995" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="995" pos:column="38">__RPC__out</name> struct <name pos:line="995" pos:column="56">EXCEPINFO</name> <op:operator pos:line="995" pos:column="66">*</op:operator><name pos:line="995" pos:column="67">pexcepinfo</name><op:operator pos:line="995" pos:column="77">,</op:operator>
            <comment type="block" pos:line="996" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="996" pos:column="38">__RPC__out</name> <name pos:line="996" pos:column="49">unsigned</name> <name pos:line="996" pos:column="58">UINT</name> <op:operator pos:line="996" pos:column="63">*</op:operator><name pos:line="996" pos:column="64">puArgErr</name><op:operator pos:line="996" pos:column="72">,</op:operator>
            <comment type="block" pos:line="997" pos:column="13">/* [retval][out] */</comment> <name pos:line="997" pos:column="33">__RPC__out</name> <name pos:line="997" pos:column="44">void</name> <op:operator pos:line="997" pos:column="49">*</op:operator><name pos:line="997" pos:column="50">retval</name><op:operator pos:line="997" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="999" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="999" pos:column="43">HRESULT</name></type> ( <name pos:line="999" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="999" pos:column="71">*</type:modifier><name pos:line="999" pos:column="72">get_DTE</name> )<parameter_list pos:line="999" pos:column="81">( 
            <param><decl><type><name pos:line="1000" pos:column="13">Commands2</name> <type:modifier pos:line="1000" pos:column="23">*</type:modifier></type> <name pos:line="1000" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1001" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1001" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="1001" pos:column="54">*</type:modifier><type:modifier pos:line="1001" pos:column="55">*</type:modifier></type><name pos:line="1001" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1003" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1003" pos:column="43">HRESULT</name></type> ( <name pos:line="1003" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1003" pos:column="71">*</type:modifier><name pos:line="1003" pos:column="72">get_Parent</name> )<parameter_list pos:line="1003" pos:column="84">( 
            <param><decl><type><name pos:line="1004" pos:column="13">Commands2</name> <type:modifier pos:line="1004" pos:column="23">*</type:modifier></type> <name pos:line="1004" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1005" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1005" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="1005" pos:column="54">*</type:modifier><type:modifier pos:line="1005" pos:column="55">*</type:modifier></type><name pos:line="1005" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1007" pos:column="9">/* [id][hidden][funcdescattr] */</comment> <function_decl><type><name pos:line="1007" pos:column="42">HRESULT</name></type> ( <name pos:line="1007" pos:column="52">STDMETHODCALLTYPE</name> <type:modifier pos:line="1007" pos:column="70">*</type:modifier><name pos:line="1007" pos:column="71">Add</name> )<parameter_list pos:line="1007" pos:column="76">( 
            <param><decl><type><name pos:line="1008" pos:column="13">Commands2</name> <type:modifier pos:line="1008" pos:column="23">*</type:modifier></type> <name pos:line="1008" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1009" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1009" pos:column="37">__RPC__in</name> <name pos:line="1009" pos:column="47">BSTR</name></type> <name pos:line="1009" pos:column="52">Guid</name></decl></param>,
            <comment type="block" pos:line="1010" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1010" pos:column="37">signed</name> <name pos:line="1010" pos:column="44">long</name></type> <name pos:line="1010" pos:column="49">ID</name></decl></param>,
            <comment type="block" pos:line="1011" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1011" pos:column="37">__RPC__in</name> <name pos:line="1011" pos:column="47">VARIANT</name> <type:modifier pos:line="1011" pos:column="55">*</type:modifier></type><name pos:line="1011" pos:column="56">Control</name></decl></param>,
            <comment type="block" pos:line="1012" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1012" pos:column="33">__RPC__out</name> <name pos:line="1012" pos:column="44">void</name> <type:modifier pos:line="1012" pos:column="49">*</type:modifier></type><name pos:line="1012" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1014" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1014" pos:column="34">HRESULT</name></type> ( <name pos:line="1014" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1014" pos:column="62">*</type:modifier><name pos:line="1014" pos:column="63">Raise</name> )<parameter_list pos:line="1014" pos:column="70">( 
            <param><decl><type><name pos:line="1015" pos:column="13">Commands2</name> <type:modifier pos:line="1015" pos:column="23">*</type:modifier></type> <name pos:line="1015" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1016" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1016" pos:column="37">__RPC__in</name> <name pos:line="1016" pos:column="47">BSTR</name></type> <name pos:line="1016" pos:column="52">Guid</name></decl></param>,
            <comment type="block" pos:line="1017" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1017" pos:column="37">signed</name> <name pos:line="1017" pos:column="44">long</name></type> <name pos:line="1017" pos:column="49">ID</name></decl></param>,
            <comment type="block" pos:line="1018" pos:column="13">/* [out][in][idldescattr] */</comment> <param><decl><type><name pos:line="1018" pos:column="42">__RPC__inout</name> <name pos:line="1018" pos:column="55">VARIANT</name> <type:modifier pos:line="1018" pos:column="63">*</type:modifier></type><name pos:line="1018" pos:column="64">CustomIn</name></decl></param>,
            <comment type="block" pos:line="1019" pos:column="13">/* [out][in][idldescattr] */</comment> <param><decl><type><name pos:line="1019" pos:column="42">__RPC__inout</name> <name pos:line="1019" pos:column="55">VARIANT</name> <type:modifier pos:line="1019" pos:column="63">*</type:modifier></type><name pos:line="1019" pos:column="64">CustomOut</name></decl></param>,
            <comment type="block" pos:line="1020" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1020" pos:column="33">__RPC__out</name> <name pos:line="1020" pos:column="44">void</name> <type:modifier pos:line="1020" pos:column="49">*</type:modifier></type><name pos:line="1020" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1022" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1022" pos:column="34">HRESULT</name></type> ( <name pos:line="1022" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1022" pos:column="62">*</type:modifier><name pos:line="1022" pos:column="63">CommandInfo</name> )<parameter_list pos:line="1022" pos:column="76">( 
            <param><decl><type><name pos:line="1023" pos:column="13">Commands2</name> <type:modifier pos:line="1023" pos:column="23">*</type:modifier></type> <name pos:line="1023" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1024" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1024" pos:column="37">__RPC__in_opt</name> <name pos:line="1024" pos:column="51">IDispatch</name> <type:modifier pos:line="1024" pos:column="61">*</type:modifier></type><name pos:line="1024" pos:column="62">CommandBarControl</name></decl></param>,
            <comment type="block" pos:line="1025" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="1025" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="1025" pos:column="59">BSTR</name> <type:modifier pos:line="1025" pos:column="64">*</type:modifier></type><name pos:line="1025" pos:column="65">Guid</name></decl></param>,
            <comment type="block" pos:line="1026" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="1026" pos:column="38">__RPC__out</name> <name pos:line="1026" pos:column="49">signed</name> <name pos:line="1026" pos:column="56">long</name> <type:modifier pos:line="1026" pos:column="61">*</type:modifier></type><name pos:line="1026" pos:column="62">ID</name></decl></param>,
            <comment type="block" pos:line="1027" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1027" pos:column="33">__RPC__out</name> <name pos:line="1027" pos:column="44">void</name> <type:modifier pos:line="1027" pos:column="49">*</type:modifier></type><name pos:line="1027" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1029" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1029" pos:column="43">HRESULT</name></type> ( <name pos:line="1029" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1029" pos:column="71">*</type:modifier><name pos:line="1029" pos:column="72">get_Count</name> )<parameter_list pos:line="1029" pos:column="83">( 
            <param><decl><type><name pos:line="1030" pos:column="13">Commands2</name> <type:modifier pos:line="1030" pos:column="23">*</type:modifier></type> <name pos:line="1030" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1031" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1031" pos:column="33">__RPC__out</name> <name pos:line="1031" pos:column="44">signed</name> <name pos:line="1031" pos:column="51">long</name> <type:modifier pos:line="1031" pos:column="56">*</type:modifier></type><name pos:line="1031" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1033" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1033" pos:column="34">HRESULT</name></type> ( <name pos:line="1033" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1033" pos:column="62">*</type:modifier><name pos:line="1033" pos:column="63">Item</name> )<parameter_list pos:line="1033" pos:column="69">( 
            <param><decl><type><name pos:line="1034" pos:column="13">Commands2</name> <type:modifier pos:line="1034" pos:column="23">*</type:modifier></type> <name pos:line="1034" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1035" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1035" pos:column="37">VARIANT</name></type> <name pos:line="1035" pos:column="45">index</name></decl></param>,
            <comment type="block" pos:line="1036" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1036" pos:column="37">signed</name> <name pos:line="1036" pos:column="44">long</name></type> <name pos:line="1036" pos:column="49">ID</name></decl></param>,
            <comment type="block" pos:line="1037" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1037" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1037" pos:column="54">Command</name> <type:modifier pos:line="1037" pos:column="62">*</type:modifier><type:modifier pos:line="1037" pos:column="63">*</type:modifier></type><name pos:line="1037" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1039" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="1039" pos:column="46">HRESULT</name></type> ( <name pos:line="1039" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1039" pos:column="74">*</type:modifier><name pos:line="1039" pos:column="75">_NewEnum</name> )<parameter_list pos:line="1039" pos:column="85">( 
            <param><decl><type><name pos:line="1040" pos:column="13">Commands2</name> <type:modifier pos:line="1040" pos:column="23">*</type:modifier></type> <name pos:line="1040" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1041" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1041" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1041" pos:column="54">IUnknown</name> <type:modifier pos:line="1041" pos:column="63">*</type:modifier><type:modifier pos:line="1041" pos:column="64">*</type:modifier></type><name pos:line="1041" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1043" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1043" pos:column="34">HRESULT</name></type> ( <name pos:line="1043" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1043" pos:column="62">*</type:modifier><name pos:line="1043" pos:column="63">AddNamedCommand</name> )<parameter_list pos:line="1043" pos:column="80">( 
            <param><decl><type><name pos:line="1044" pos:column="13">Commands2</name> <type:modifier pos:line="1044" pos:column="23">*</type:modifier></type> <name pos:line="1044" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1045" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1045" pos:column="37">__RPC__in_opt</name> <name pos:line="1045" pos:column="51">AddIn</name> <type:modifier pos:line="1045" pos:column="57">*</type:modifier></type><name pos:line="1045" pos:column="58">AddInInstance</name></decl></param>,
            <comment type="block" pos:line="1046" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1046" pos:column="37">__RPC__in</name> <name pos:line="1046" pos:column="47">BSTR</name></type> <name pos:line="1046" pos:column="52">Name</name></decl></param>,
            <comment type="block" pos:line="1047" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1047" pos:column="37">__RPC__in</name> <name pos:line="1047" pos:column="47">BSTR</name></type> <name pos:line="1047" pos:column="52">ButtonText</name></decl></param>,
            <comment type="block" pos:line="1048" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1048" pos:column="37">__RPC__in</name> <name pos:line="1048" pos:column="47">BSTR</name></type> <name pos:line="1048" pos:column="52">Tooltip</name></decl></param>,
            <comment type="block" pos:line="1049" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1049" pos:column="37">BOOLEAN</name></type> <name pos:line="1049" pos:column="45">MSOButton</name></decl></param>,
            <comment type="block" pos:line="1050" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1050" pos:column="37">signed</name> <name pos:line="1050" pos:column="44">long</name></type> <name pos:line="1050" pos:column="49">Bitmap</name></decl></param>,
            <comment type="block" pos:line="1051" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1051" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="1051" pos:column="57">SAFEARRAY</name> <type:modifier pos:line="1051" pos:column="67">*</type:modifier> <type:modifier pos:line="1051" pos:column="69">*</type:modifier></type><name pos:line="1051" pos:column="70">ContextUIGUIDs</name></decl></param>,
            <comment type="block" pos:line="1052" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1052" pos:column="37">signed</name> <name pos:line="1052" pos:column="44">long</name></type> <name pos:line="1052" pos:column="49">vsCommandDisabledFlagsValue</name></decl></param>,
            <comment type="block" pos:line="1053" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1053" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1053" pos:column="54">Command</name> <type:modifier pos:line="1053" pos:column="62">*</type:modifier><type:modifier pos:line="1053" pos:column="63">*</type:modifier></type><name pos:line="1053" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1055" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="1055" pos:column="34">HRESULT</name> <argument_list pos:line="1055" pos:column="42">( <argument pos:line="1055" pos:column="44">STDMETHODCALLTYPE *AddCommandBar</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1055" pos:column="78">(</op:operator> 
            <name pos:line="1056" pos:column="13">Commands2</name> <op:operator pos:line="1056" pos:column="23">*</op:operator> <name pos:line="1056" pos:column="25">This</name><op:operator pos:line="1056" pos:column="29">,</op:operator>
            <comment type="block" pos:line="1057" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1057" pos:column="37">__RPC__in</name> <name pos:line="1057" pos:column="47">BSTR</name> <name pos:line="1057" pos:column="52">Name</name><op:operator pos:line="1057" pos:column="56">,</op:operator>
            <comment type="block" pos:line="1058" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="1058" pos:column="42">vsCommandBarType</name> <name pos:line="1058" pos:column="59">Type</name><op:operator pos:line="1058" pos:column="63">,</op:operator>
            <comment type="block" pos:line="1059" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1059" pos:column="37">__RPC__in_opt</name> <name pos:line="1059" pos:column="51">IDispatch</name> <op:operator pos:line="1059" pos:column="61">*</op:operator><name pos:line="1059" pos:column="62">CommandBarParent</name><op:operator pos:line="1059" pos:column="78">,</op:operator>
            <comment type="block" pos:line="1060" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1060" pos:column="37">signed</name> <name pos:line="1060" pos:column="44">long</name> <name pos:line="1060" pos:column="49">Position</name><op:operator pos:line="1060" pos:column="57">,</op:operator>
            <comment type="block" pos:line="1061" pos:column="13">/* [retval][out] */</comment> <name pos:line="1061" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1061" pos:column="54">IDispatch</name> <op:operator pos:line="1061" pos:column="64">*</op:operator><op:operator pos:line="1061" pos:column="65">*</op:operator><name pos:line="1061" pos:column="66">retval</name><op:operator pos:line="1061" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="1063" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1063" pos:column="34">HRESULT</name></type> ( <name pos:line="1063" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1063" pos:column="62">*</type:modifier><name pos:line="1063" pos:column="63">RemoveCommandBar</name> )<parameter_list pos:line="1063" pos:column="81">( 
            <param><decl><type><name pos:line="1064" pos:column="13">Commands2</name> <type:modifier pos:line="1064" pos:column="23">*</type:modifier></type> <name pos:line="1064" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1065" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1065" pos:column="37">__RPC__in_opt</name> <name pos:line="1065" pos:column="51">IDispatch</name> <type:modifier pos:line="1065" pos:column="61">*</type:modifier></type><name pos:line="1065" pos:column="62">CommandBar</name></decl></param>,
            <comment type="block" pos:line="1066" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1066" pos:column="33">__RPC__out</name> <name pos:line="1066" pos:column="44">void</name> <type:modifier pos:line="1066" pos:column="49">*</type:modifier></type><name pos:line="1066" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1068" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="1068" pos:column="64">HRESULT</name></type> ( <name pos:line="1068" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="1068" pos:column="92">*</type:modifier><name pos:line="1068" pos:column="93">AddNamedCommand2</name> )<parameter_list pos:line="1068" pos:column="111">( 
            <param><decl><type><name pos:line="1069" pos:column="13">Commands2</name> <type:modifier pos:line="1069" pos:column="23">*</type:modifier></type> <name pos:line="1069" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1070" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1070" pos:column="24">__RPC__in</name> <comment type="block" pos:line="1070" pos:column="34">/* external definition not present */</comment> <name pos:line="1070" pos:column="72">AddIn</name> <type:modifier pos:line="1070" pos:column="78">*</type:modifier></type><name pos:line="1070" pos:column="79">AddInInstance</name></decl></param>,
            <comment type="block" pos:line="1071" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1071" pos:column="24">__RPC__in</name> <name pos:line="1071" pos:column="34">BSTR</name></type> <name pos:line="1071" pos:column="39">Name</name></decl></param>,
            <comment type="block" pos:line="1072" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1072" pos:column="24">__RPC__in</name> <name pos:line="1072" pos:column="34">BSTR</name></type> <name pos:line="1072" pos:column="39">ButtonText</name></decl></param>,
            <comment type="block" pos:line="1073" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1073" pos:column="24">__RPC__in</name> <name pos:line="1073" pos:column="34">BSTR</name></type> <name pos:line="1073" pos:column="39">Tooltip</name></decl></param>,
            <comment type="block" pos:line="1074" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1074" pos:column="24">VARIANT_BOOL</name></type> <name pos:line="1074" pos:column="37">MSOButton</name></decl></param>,
            <comment type="block" pos:line="1075" pos:column="13">/* [optional][in] */</comment> <param><decl><type><name pos:line="1075" pos:column="34">VARIANT</name></type> <name pos:line="1075" pos:column="42">Bitmap</name></decl></param>,
            <comment type="block" pos:line="1076" pos:column="13">/* [optional][in] */</comment> <param><decl><type><name pos:line="1076" pos:column="34">__RPC__deref_in_opt</name> <name pos:line="1076" pos:column="54">SAFEARRAY</name> <type:modifier pos:line="1076" pos:column="64">*</type:modifier> <type:modifier pos:line="1076" pos:column="66">*</type:modifier></type><name pos:line="1076" pos:column="67">ContextUIGUIDs</name></decl></param>,
            <comment type="block" pos:line="1077" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="1077" pos:column="38">long</name></type> <name pos:line="1077" pos:column="43">vsCommandStatusValue</name></decl></param>,
            <comment type="block" pos:line="1078" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="1078" pos:column="38">long</name></type> <name pos:line="1078" pos:column="43">CommandStyleFlags</name></decl></param>,
            <comment type="block" pos:line="1079" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="1079" pos:column="38">vsCommandControlType</name></type> <name pos:line="1079" pos:column="59">ControlType</name></decl></param>,
            <comment type="block" pos:line="1080" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1080" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="1080" pos:column="54">/* external definition not present */</comment> <name pos:line="1080" pos:column="92">Command</name> <type:modifier pos:line="1080" pos:column="100">*</type:modifier><type:modifier pos:line="1080" pos:column="101">*</type:modifier></type><name pos:line="1080" pos:column="102">pVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1082" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="1082" pos:column="64">HRESULT</name></type> ( <name pos:line="1082" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="1082" pos:column="92">*</type:modifier><name pos:line="1082" pos:column="93">UpdateCommandUI</name> )<parameter_list pos:line="1082" pos:column="110">( 
            <param><decl><type><name pos:line="1083" pos:column="13">Commands2</name> <type:modifier pos:line="1083" pos:column="23">*</type:modifier></type> <name pos:line="1083" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="1084" pos:column="13">VARIANT_BOOL</name></type> <name pos:line="1084" pos:column="26">PerformImmediately</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1086" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1087" pos:column="7">Commands2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1089" pos:column="5">interface</name></type> <name pos:line="1089" pos:column="15">Commands2</name>
    <argument_list pos:line="1090" pos:column="5">{
        <argument><expr><name pos:line="1091" pos:column="9">CONST_VTBL</name> struct <name pos:line="1091" pos:column="27">Commands2Vtbl</name> <op:operator pos:line="1091" pos:column="41">*</op:operator><name pos:line="1091" pos:column="42">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1096" pos:column="1">#<cpp:directive pos:line="1096" pos:column="2">ifdef</cpp:directive> <name pos:line="1096" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1099" pos:column="1">#<cpp:directive pos:line="1099" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1099" pos:column="9">Commands2_QueryInterface</name><parameter_list pos:line="1099" pos:column="33">(<param><type><name pos:line="1099" pos:column="34">This</name></type></param>,<param><type><name pos:line="1099" pos:column="39">riid</name></type></param>,<param><type><name pos:line="1099" pos:column="44">ppvObj</name></type></param>,<param><type><name pos:line="1099" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1100" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1102" pos:column="1">#<cpp:directive pos:line="1102" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1102" pos:column="9">Commands2_AddRef</name><parameter_list pos:line="1102" pos:column="25">(<param><type><name pos:line="1102" pos:column="26">This</name></type></param>,<param><type><name pos:line="1102" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1103" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1105" pos:column="1">#<cpp:directive pos:line="1105" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1105" pos:column="9">Commands2_Release</name><parameter_list pos:line="1105" pos:column="26">(<param><type><name pos:line="1105" pos:column="27">This</name></type></param>,<param><type><name pos:line="1105" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1106" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1108" pos:column="1">#<cpp:directive pos:line="1108" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1108" pos:column="9">Commands2_GetTypeInfoCount</name><parameter_list pos:line="1108" pos:column="35">(<param><type><name pos:line="1108" pos:column="36">This</name></type></param>,<param><type><name pos:line="1108" pos:column="41">pctinfo</name></type></param>,<param><type><name pos:line="1108" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1109" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1111" pos:column="1">#<cpp:directive pos:line="1111" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1111" pos:column="9">Commands2_GetTypeInfo</name><parameter_list pos:line="1111" pos:column="30">(<param><type><name pos:line="1111" pos:column="31">This</name></type></param>,<param><type><name pos:line="1111" pos:column="36">itinfo</name></type></param>,<param><type><name pos:line="1111" pos:column="43">lcid</name></type></param>,<param><type><name pos:line="1111" pos:column="48">pptinfo</name></type></param>,<param><type><name pos:line="1111" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1112" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1114" pos:column="1">#<cpp:directive pos:line="1114" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1114" pos:column="9">Commands2_GetIDsOfNames</name><parameter_list pos:line="1114" pos:column="32">(<param><type><name pos:line="1114" pos:column="33">This</name></type></param>,<param><type><name pos:line="1114" pos:column="38">riid</name></type></param>,<param><type><name pos:line="1114" pos:column="43">rgszNames</name></type></param>,<param><type><name pos:line="1114" pos:column="53">cNames</name></type></param>,<param><type><name pos:line="1114" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="1114" pos:column="65">rgdispid</name></type></param>,<param><type><name pos:line="1114" pos:column="74">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1115" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1117" pos:column="1">#<cpp:directive pos:line="1117" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1117" pos:column="9">Commands2_Invoke</name><parameter_list pos:line="1117" pos:column="25">(<param><type><name pos:line="1117" pos:column="26">This</name></type></param>,<param><type><name pos:line="1117" pos:column="31">dispidMember</name></type></param>,<param><type><name pos:line="1117" pos:column="44">riid</name></type></param>,<param><type><name pos:line="1117" pos:column="49">lcid</name></type></param>,<param><type><name pos:line="1117" pos:column="54">wFlags</name></type></param>,<param><type><name pos:line="1117" pos:column="61">pdispparams</name></type></param>,<param><type><name pos:line="1117" pos:column="73">pvarResult</name></type></param>,<param><type><name pos:line="1117" pos:column="84">pexcepinfo</name></type></param>,<param><type><name pos:line="1117" pos:column="95">puArgErr</name></type></param>,<param><type><name pos:line="1117" pos:column="104">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1118" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1120" pos:column="1">#<cpp:directive pos:line="1120" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1120" pos:column="9">Commands2_get_DTE</name><parameter_list pos:line="1120" pos:column="26">(<param><type><name pos:line="1120" pos:column="27">This</name></type></param>,<param><type><name pos:line="1120" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1121" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1123" pos:column="1">#<cpp:directive pos:line="1123" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1123" pos:column="9">Commands2_get_Parent</name><parameter_list pos:line="1123" pos:column="29">(<param><type><name pos:line="1123" pos:column="30">This</name></type></param>,<param><type><name pos:line="1123" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1124" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1126" pos:column="1">#<cpp:directive pos:line="1126" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1126" pos:column="9">Commands2_Add</name><parameter_list pos:line="1126" pos:column="22">(<param><type><name pos:line="1126" pos:column="23">This</name></type></param>,<param><type><name pos:line="1126" pos:column="28">Guid</name></type></param>,<param><type><name pos:line="1126" pos:column="33">ID</name></type></param>,<param><type><name pos:line="1126" pos:column="36">Control</name></type></param>,<param><type><name pos:line="1126" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1127" pos:column="5">( (This)-&gt;lpVtbl -&gt; Add(This,Guid,ID,Control,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1129" pos:column="1">#<cpp:directive pos:line="1129" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1129" pos:column="9">Commands2_Raise</name><parameter_list pos:line="1129" pos:column="24">(<param><type><name pos:line="1129" pos:column="25">This</name></type></param>,<param><type><name pos:line="1129" pos:column="30">Guid</name></type></param>,<param><type><name pos:line="1129" pos:column="35">ID</name></type></param>,<param><type><name pos:line="1129" pos:column="38">CustomIn</name></type></param>,<param><type><name pos:line="1129" pos:column="47">CustomOut</name></type></param>,<param><type><name pos:line="1129" pos:column="57">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1130" pos:column="5">( (This)-&gt;lpVtbl -&gt; Raise(This,Guid,ID,CustomIn,CustomOut,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1132" pos:column="1">#<cpp:directive pos:line="1132" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1132" pos:column="9">Commands2_CommandInfo</name><parameter_list pos:line="1132" pos:column="30">(<param><type><name pos:line="1132" pos:column="31">This</name></type></param>,<param><type><name pos:line="1132" pos:column="36">CommandBarControl</name></type></param>,<param><type><name pos:line="1132" pos:column="54">Guid</name></type></param>,<param><type><name pos:line="1132" pos:column="59">ID</name></type></param>,<param><type><name pos:line="1132" pos:column="62">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1133" pos:column="5">( (This)-&gt;lpVtbl -&gt; CommandInfo(This,CommandBarControl,Guid,ID,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1135" pos:column="1">#<cpp:directive pos:line="1135" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1135" pos:column="9">Commands2_get_Count</name><parameter_list pos:line="1135" pos:column="28">(<param><type><name pos:line="1135" pos:column="29">This</name></type></param>,<param><type><name pos:line="1135" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1136" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Count(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1138" pos:column="1">#<cpp:directive pos:line="1138" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1138" pos:column="9">Commands2_Item</name><parameter_list pos:line="1138" pos:column="23">(<param><type><name pos:line="1138" pos:column="24">This</name></type></param>,<param><type><name pos:line="1138" pos:column="29">index</name></type></param>,<param><type><name pos:line="1138" pos:column="35">ID</name></type></param>,<param><type><name pos:line="1138" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1139" pos:column="5">( (This)-&gt;lpVtbl -&gt; Item(This,index,ID,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1141" pos:column="1">#<cpp:directive pos:line="1141" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1141" pos:column="9">Commands2__NewEnum</name><parameter_list pos:line="1141" pos:column="27">(<param><type><name pos:line="1141" pos:column="28">This</name></type></param>,<param><type><name pos:line="1141" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1142" pos:column="5">( (This)-&gt;lpVtbl -&gt; _NewEnum(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1144" pos:column="1">#<cpp:directive pos:line="1144" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1144" pos:column="9">Commands2_AddNamedCommand</name><parameter_list pos:line="1144" pos:column="34">(<param><type><name pos:line="1144" pos:column="35">This</name></type></param>,<param><type><name pos:line="1144" pos:column="40">AddInInstance</name></type></param>,<param><type><name pos:line="1144" pos:column="54">Name</name></type></param>,<param><type><name pos:line="1144" pos:column="59">ButtonText</name></type></param>,<param><type><name pos:line="1144" pos:column="70">Tooltip</name></type></param>,<param><type><name pos:line="1144" pos:column="78">MSOButton</name></type></param>,<param><type><name pos:line="1144" pos:column="88">Bitmap</name></type></param>,<param><type><name pos:line="1144" pos:column="95">ContextUIGUIDs</name></type></param>,<param><type><name pos:line="1144" pos:column="110">vsCommandDisabledFlagsValue</name></type></param>,<param><type><name pos:line="1144" pos:column="138">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1145" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddNamedCommand(This,AddInInstance,Name,ButtonText,Tooltip,MSOButton,Bitmap,ContextUIGUIDs,vsCommandDisabledFlagsValue,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1147" pos:column="1">#<cpp:directive pos:line="1147" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1147" pos:column="9">Commands2_AddCommandBar</name><parameter_list pos:line="1147" pos:column="32">(<param><type><name pos:line="1147" pos:column="33">This</name></type></param>,<param><type><name pos:line="1147" pos:column="38">Name</name></type></param>,<param><type><name pos:line="1147" pos:column="43">Type</name></type></param>,<param><type><name pos:line="1147" pos:column="48">CommandBarParent</name></type></param>,<param><type><name pos:line="1147" pos:column="65">Position</name></type></param>,<param><type><name pos:line="1147" pos:column="74">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1148" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddCommandBar(This,Name,Type,CommandBarParent,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1150" pos:column="1">#<cpp:directive pos:line="1150" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1150" pos:column="9">Commands2_RemoveCommandBar</name><parameter_list pos:line="1150" pos:column="35">(<param><type><name pos:line="1150" pos:column="36">This</name></type></param>,<param><type><name pos:line="1150" pos:column="41">CommandBar</name></type></param>,<param><type><name pos:line="1150" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1151" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveCommandBar(This,CommandBar,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="1154" pos:column="1">#<cpp:directive pos:line="1154" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1154" pos:column="9">Commands2_AddNamedCommand2</name><parameter_list pos:line="1154" pos:column="35">(<param><type><name pos:line="1154" pos:column="36">This</name></type></param>,<param><type><name pos:line="1154" pos:column="41">AddInInstance</name></type></param>,<param><type><name pos:line="1154" pos:column="55">Name</name></type></param>,<param><type><name pos:line="1154" pos:column="60">ButtonText</name></type></param>,<param><type><name pos:line="1154" pos:column="71">Tooltip</name></type></param>,<param><type><name pos:line="1154" pos:column="79">MSOButton</name></type></param>,<param><type><name pos:line="1154" pos:column="89">Bitmap</name></type></param>,<param><type><name pos:line="1154" pos:column="96">ContextUIGUIDs</name></type></param>,<param><type><name pos:line="1154" pos:column="111">vsCommandStatusValue</name></type></param>,<param><type><name pos:line="1154" pos:column="132">CommandStyleFlags</name></type></param>,<param><type><name pos:line="1154" pos:column="150">ControlType</name></type></param>,<param><type><name pos:line="1154" pos:column="162">pVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1155" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddNamedCommand2(This,AddInInstance,Name,ButtonText,Tooltip,MSOButton,Bitmap,ContextUIGUIDs,vsCommandStatusValue,CommandStyleFlags,ControlType,pVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="1157" pos:column="1">#<cpp:directive pos:line="1157" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1157" pos:column="9">Commands2_UpdateCommandUI</name><parameter_list pos:line="1157" pos:column="34">(<param><type><name pos:line="1157" pos:column="35">This</name></type></param>,<param><type><name pos:line="1157" pos:column="40">PerformImmediately</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1158" pos:column="5">( (This)-&gt;lpVtbl -&gt; UpdateCommandUI(This,PerformImmediately) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1160" pos:column="1">#<cpp:directive pos:line="1160" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1160" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1163" pos:column="1">#<cpp:directive pos:line="1163" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1163" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1168" pos:column="1">#<cpp:directive pos:line="1168" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1168" pos:column="9">/* __Commands2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1171" pos:column="1">#<cpp:directive pos:line="1171" pos:column="2">ifndef</cpp:directive> <name pos:line="1171" pos:column="9">__SourceControl2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1172" pos:column="1">#<cpp:directive pos:line="1172" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1172" pos:column="9">__SourceControl2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1174" pos:column="1">/* interface SourceControl2 */</comment>
<comment type="block" pos:line="1175" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="1178" pos:column="1">EXTERN_C</name> <specifier pos:line="1178" pos:column="10">const</specifier> <name pos:line="1178" pos:column="16">IID</name></type> <name pos:line="1178" pos:column="20">IID_SourceControl2</name></decl>;</decl_stmt>

<cpp:if pos:line="1180" pos:column="1">#<cpp:directive pos:line="1180" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1180" pos:column="5">defined</name><argument_list pos:line="1180" pos:column="12">(<argument><expr><name pos:line="1180" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1180" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1180" pos:column="29">!</op:operator><call><name pos:line="1180" pos:column="30">defined</name><argument_list pos:line="1180" pos:column="37">(<argument><expr><name pos:line="1180" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1182" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1182" pos:column="19">(<argument pos:line="1182" pos:column="20">"111522ab-f439-4d85-9a36-1716da4da114"</argument>)</argument_list></macro>
    <label><name pos:line="1183" pos:column="5">SourceControl2</name> :</label> <expr_stmt><expr pos:line="1183" pos:column="22">public <name pos:line="1183" pos:column="29">SourceControl</name>
    <block pos:line="1184" pos:column="5">{
    <expr pos:line="1185" pos:column="5">public<op:operator pos:line="1185" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="1186" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="1186" pos:column="72">HRESULT</name> <name pos:line="1186" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="1186" pos:column="98">GetBindings</name><argument_list pos:line="1186" pos:column="109">( 
            <comment type="block" pos:line="1187" pos:column="13">/* [in] */</comment> <argument pos:line="1187" pos:column="24">__RPC__in BSTR ItemPath</argument>,
            <comment type="block" pos:line="1188" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1188" pos:column="33">__RPC__deref_out_opt SourceControlBindings **ppVal</argument>)</argument_list></macro> <op:operator pos:line="1188" pos:column="85">=</op:operator> <lit:literal type="number" pos:line="1188" pos:column="87">0</lit:literal></expr>;
        
        <expr pos:line="1190" pos:column="9">virtual <comment type="block" pos:line="1190" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="1190" pos:column="72">HRESULT</name> <name pos:line="1190" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="1190" pos:column="98">CheckOutItem2</name><argument_list pos:line="1190" pos:column="111">( 
            <comment type="block" pos:line="1191" pos:column="13">/* [in] */</comment> <argument pos:line="1191" pos:column="24">__RPC__in BSTR ItemName</argument>,
            <comment type="block" pos:line="1192" pos:column="13">/* [in] */</comment> <argument pos:line="1192" pos:column="24">vsSourceControlCheckOutOptions Flags</argument>,
            <comment type="block" pos:line="1193" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1193" pos:column="33">__RPC__out VARIANT_BOOL *pfCheckedOut</argument>)</argument_list></macro> <op:operator pos:line="1193" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="1193" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="1195" pos:column="9">virtual <comment type="block" pos:line="1195" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="1195" pos:column="72">HRESULT</name> <name pos:line="1195" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="1195" pos:column="98">CheckOutItems2</name><argument_list pos:line="1195" pos:column="112">( 
            <comment type="block" pos:line="1196" pos:column="13">/* [in] */</comment> <argument pos:line="1196" pos:column="24">__RPC__deref_in_opt SAFEARRAY * *ItemNames</argument>,
            <comment type="block" pos:line="1197" pos:column="13">/* [in] */</comment> <argument pos:line="1197" pos:column="24">vsSourceControlCheckOutOptions Flags</argument>,
            <comment type="block" pos:line="1198" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1198" pos:column="33">__RPC__out VARIANT_BOOL *pfCheckedOut</argument>)</argument_list></macro> <op:operator pos:line="1198" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="1198" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="1200" pos:column="9">virtual <comment type="block" pos:line="1200" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="1200" pos:column="72">HRESULT</name> <name pos:line="1200" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="1200" pos:column="98">UndoExcludeItem</name><argument_list pos:line="1200" pos:column="113">( 
            <comment type="block" pos:line="1201" pos:column="13">/* [in] */</comment> <argument pos:line="1201" pos:column="24">__RPC__in BSTR ProjectFile</argument>,
            <comment type="block" pos:line="1202" pos:column="13">/* [in] */</comment> <argument pos:line="1202" pos:column="24">__RPC__in BSTR ItemName</argument>)</argument_list></macro> <op:operator pos:line="1202" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="1202" pos:column="51">0</lit:literal></expr>;
        
        <expr pos:line="1204" pos:column="9">virtual <comment type="block" pos:line="1204" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="1204" pos:column="72">HRESULT</name> <name pos:line="1204" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="1204" pos:column="98">UndoExcludeItems</name><argument_list pos:line="1204" pos:column="114">( 
            <comment type="block" pos:line="1205" pos:column="13">/* [in] */</comment> <argument pos:line="1205" pos:column="24">__RPC__in BSTR ProjectFile</argument>,
            <comment type="block" pos:line="1206" pos:column="13">/* [in] */</comment> <argument pos:line="1206" pos:column="24">__RPC__deref_in_opt SAFEARRAY * *ItemNames</argument>)</argument_list></macro> <op:operator pos:line="1206" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="1206" pos:column="70">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1210" pos:column="1">#<cpp:directive pos:line="1210" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1210" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1212" pos:column="5">typedef <type><struct pos:line="1212" pos:column="13">struct <name pos:line="1212" pos:column="20">SourceControl2Vtbl</name>
    <block pos:line="1213" pos:column="5">{<public type="default" pos:line="1213" pos:column="6">
        <decl_stmt><decl><type><name pos:line="1214" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="1216" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="1216" pos:column="46">HRESULT</name></type> ( <name pos:line="1216" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1216" pos:column="74">*</type:modifier><name pos:line="1216" pos:column="75">QueryInterface</name> )<parameter_list pos:line="1216" pos:column="91">( 
            <param><decl><type><name pos:line="1217" pos:column="13">SourceControl2</name> <type:modifier pos:line="1217" pos:column="28">*</type:modifier></type> <name pos:line="1217" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1218" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="1218" pos:column="47">struct <name pos:line="1218" pos:column="54">GUID</name> <type:modifier pos:line="1218" pos:column="59">*</type:modifier></type><name pos:line="1218" pos:column="60">riid</name></decl><op:operator pos:line="1218" pos:column="64">,</op:operator>
            <comment type="block" pos:line="1219" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1219" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="1219" pos:column="59">void</name> <type:modifier pos:line="1219" pos:column="64">*</type:modifier><type:modifier pos:line="1219" pos:column="65">*</type:modifier><name pos:line="1219" pos:column="66">ppvObj</name><op:operator pos:line="1219" pos:column="72">,</op:operator>
            <comment type="block" pos:line="1220" pos:column="13">/* [retval][out] */</comment> <name pos:line="1220" pos:column="33">__RPC__out</name> <name pos:line="1220" pos:column="44">void</name> <type:modifier pos:line="1220" pos:column="49">*</type:modifier><name pos:line="1220" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="1222" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="1222" pos:column="46">HRESULT</name></type> ( <name pos:line="1222" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1222" pos:column="74">*</type:modifier><name pos:line="1222" pos:column="75">AddRef</name> )<parameter_list pos:line="1222" pos:column="83">( 
            <param><decl><type><name pos:line="1223" pos:column="13">SourceControl2</name> <type:modifier pos:line="1223" pos:column="28">*</type:modifier></type> <name pos:line="1223" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1224" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1224" pos:column="33">__RPC__out</name> <name pos:line="1224" pos:column="44">unsigned</name> <name pos:line="1224" pos:column="53">long</name> <type:modifier pos:line="1224" pos:column="58">*</type:modifier></type><name pos:line="1224" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1226" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="1226" pos:column="46">HRESULT</name></type> ( <name pos:line="1226" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1226" pos:column="74">*</type:modifier><name pos:line="1226" pos:column="75">Release</name> )<parameter_list pos:line="1226" pos:column="84">( 
            <param><decl><type><name pos:line="1227" pos:column="13">SourceControl2</name> <type:modifier pos:line="1227" pos:column="28">*</type:modifier></type> <name pos:line="1227" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1228" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1228" pos:column="33">__RPC__out</name> <name pos:line="1228" pos:column="44">unsigned</name> <name pos:line="1228" pos:column="53">long</name> <type:modifier pos:line="1228" pos:column="58">*</type:modifier></type><name pos:line="1228" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1230" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="1230" pos:column="46">HRESULT</name></type> ( <name pos:line="1230" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1230" pos:column="74">*</type:modifier><name pos:line="1230" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="1230" pos:column="93">( 
            <param><decl><type><name pos:line="1231" pos:column="13">SourceControl2</name> <type:modifier pos:line="1231" pos:column="28">*</type:modifier></type> <name pos:line="1231" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1232" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="1232" pos:column="38">__RPC__out</name> <name pos:line="1232" pos:column="49">unsigned</name> <name pos:line="1232" pos:column="58">UINT</name> <type:modifier pos:line="1232" pos:column="63">*</type:modifier></type><name pos:line="1232" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="1233" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1233" pos:column="33">__RPC__out</name> <name pos:line="1233" pos:column="44">void</name> <type:modifier pos:line="1233" pos:column="49">*</type:modifier></type><name pos:line="1233" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1235" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="1235" pos:column="46">HRESULT</name></type> ( <name pos:line="1235" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="1235" pos:column="74">*</type:modifier><name pos:line="1235" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="1235" pos:column="88">( 
            <param><decl><type><name pos:line="1236" pos:column="13">SourceControl2</name> <type:modifier pos:line="1236" pos:column="28">*</type:modifier></type> <name pos:line="1236" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1237" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1237" pos:column="37">unsigned</name> <name pos:line="1237" pos:column="46">UINT</name></type> <name pos:line="1237" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="1238" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1238" pos:column="37">unsigned</name> <name pos:line="1238" pos:column="46">long</name></type> <name pos:line="1238" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="1239" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="1239" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="1239" pos:column="59">void</name> <type:modifier pos:line="1239" pos:column="64">*</type:modifier><type:modifier pos:line="1239" pos:column="65">*</type:modifier></type><name pos:line="1239" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="1240" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1240" pos:column="33">__RPC__out</name> <name pos:line="1240" pos:column="44">void</name> <type:modifier pos:line="1240" pos:column="49">*</type:modifier></type><name pos:line="1240" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1242" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="1242" pos:column="46">HRESULT</name> <argument_list pos:line="1242" pos:column="54">( <argument pos:line="1242" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1242" pos:column="90">(</op:operator> 
            <name pos:line="1243" pos:column="13">SourceControl2</name> <op:operator pos:line="1243" pos:column="28">*</op:operator> <name pos:line="1243" pos:column="30">This</name><op:operator pos:line="1243" pos:column="34">,</op:operator>
            <comment type="block" pos:line="1244" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1244" pos:column="37">__RPC__in</name> struct <name pos:line="1244" pos:column="54">GUID</name> <op:operator pos:line="1244" pos:column="59">*</op:operator><name pos:line="1244" pos:column="60">riid</name><op:operator pos:line="1244" pos:column="64">,</op:operator>
            <comment type="block" pos:line="1245" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1245" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="1245" pos:column="57">signed</name> <name pos:line="1245" pos:column="64">char</name> <op:operator pos:line="1245" pos:column="69">*</op:operator><op:operator pos:line="1245" pos:column="70">*</op:operator><name pos:line="1245" pos:column="71">rgszNames</name><op:operator pos:line="1245" pos:column="80">,</op:operator>
            <comment type="block" pos:line="1246" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1246" pos:column="37">unsigned</name> <name pos:line="1246" pos:column="46">UINT</name> <name pos:line="1246" pos:column="51">cNames</name><op:operator pos:line="1246" pos:column="57">,</op:operator>
            <comment type="block" pos:line="1247" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1247" pos:column="37">unsigned</name> <name pos:line="1247" pos:column="46">long</name> <name pos:line="1247" pos:column="51">lcid</name><op:operator pos:line="1247" pos:column="55">,</op:operator>
            <comment type="block" pos:line="1248" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1248" pos:column="38">__RPC__out</name> <name pos:line="1248" pos:column="49">signed</name> <name pos:line="1248" pos:column="56">long</name> <op:operator pos:line="1248" pos:column="61">*</op:operator><name pos:line="1248" pos:column="62">rgdispid</name><op:operator pos:line="1248" pos:column="70">,</op:operator>
            <comment type="block" pos:line="1249" pos:column="13">/* [retval][out] */</comment> <name pos:line="1249" pos:column="33">__RPC__out</name> <name pos:line="1249" pos:column="44">void</name> <op:operator pos:line="1249" pos:column="49">*</op:operator><name pos:line="1249" pos:column="50">retval</name><op:operator pos:line="1249" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="1251" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="1251" pos:column="46">HRESULT</name> <argument_list pos:line="1251" pos:column="54">( <argument pos:line="1251" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1251" pos:column="83">(</op:operator> 
            <name pos:line="1252" pos:column="13">SourceControl2</name> <op:operator pos:line="1252" pos:column="28">*</op:operator> <name pos:line="1252" pos:column="30">This</name><op:operator pos:line="1252" pos:column="34">,</op:operator>
            <comment type="block" pos:line="1253" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1253" pos:column="37">signed</name> <name pos:line="1253" pos:column="44">long</name> <name pos:line="1253" pos:column="49">dispidMember</name><op:operator pos:line="1253" pos:column="61">,</op:operator>
            <comment type="block" pos:line="1254" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1254" pos:column="37">__RPC__in</name> struct <name pos:line="1254" pos:column="54">GUID</name> <op:operator pos:line="1254" pos:column="59">*</op:operator><name pos:line="1254" pos:column="60">riid</name><op:operator pos:line="1254" pos:column="64">,</op:operator>
            <comment type="block" pos:line="1255" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1255" pos:column="37">unsigned</name> <name pos:line="1255" pos:column="46">long</name> <name pos:line="1255" pos:column="51">lcid</name><op:operator pos:line="1255" pos:column="55">,</op:operator>
            <comment type="block" pos:line="1256" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1256" pos:column="37">unsigned</name> <name pos:line="1256" pos:column="46">short</name> <name pos:line="1256" pos:column="52">wFlags</name><op:operator pos:line="1256" pos:column="58">,</op:operator>
            <comment type="block" pos:line="1257" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="1257" pos:column="37">__RPC__in</name> struct <name pos:line="1257" pos:column="54">DISPPARAMS</name> <op:operator pos:line="1257" pos:column="65">*</op:operator><name pos:line="1257" pos:column="66">pdispparams</name><op:operator pos:line="1257" pos:column="77">,</op:operator>
            <comment type="block" pos:line="1258" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1258" pos:column="38">__RPC__out</name> <name pos:line="1258" pos:column="49">VARIANT</name> <op:operator pos:line="1258" pos:column="57">*</op:operator><name pos:line="1258" pos:column="58">pvarResult</name><op:operator pos:line="1258" pos:column="68">,</op:operator>
            <comment type="block" pos:line="1259" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1259" pos:column="38">__RPC__out</name> struct <name pos:line="1259" pos:column="56">EXCEPINFO</name> <op:operator pos:line="1259" pos:column="66">*</op:operator><name pos:line="1259" pos:column="67">pexcepinfo</name><op:operator pos:line="1259" pos:column="77">,</op:operator>
            <comment type="block" pos:line="1260" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="1260" pos:column="38">__RPC__out</name> <name pos:line="1260" pos:column="49">unsigned</name> <name pos:line="1260" pos:column="58">UINT</name> <op:operator pos:line="1260" pos:column="63">*</op:operator><name pos:line="1260" pos:column="64">puArgErr</name><op:operator pos:line="1260" pos:column="72">,</op:operator>
            <comment type="block" pos:line="1261" pos:column="13">/* [retval][out] */</comment> <name pos:line="1261" pos:column="33">__RPC__out</name> <name pos:line="1261" pos:column="44">void</name> <op:operator pos:line="1261" pos:column="49">*</op:operator><name pos:line="1261" pos:column="50">retval</name><op:operator pos:line="1261" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="1263" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1263" pos:column="43">HRESULT</name></type> ( <name pos:line="1263" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1263" pos:column="71">*</type:modifier><name pos:line="1263" pos:column="72">get_DTE</name> )<parameter_list pos:line="1263" pos:column="81">( 
            <param><decl><type><name pos:line="1264" pos:column="13">SourceControl2</name> <type:modifier pos:line="1264" pos:column="28">*</type:modifier></type> <name pos:line="1264" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1265" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1265" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="1265" pos:column="54">*</type:modifier><type:modifier pos:line="1265" pos:column="55">*</type:modifier></type><name pos:line="1265" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1267" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="1267" pos:column="43">HRESULT</name></type> ( <name pos:line="1267" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="1267" pos:column="71">*</type:modifier><name pos:line="1267" pos:column="72">get_Parent</name> )<parameter_list pos:line="1267" pos:column="84">( 
            <param><decl><type><name pos:line="1268" pos:column="13">SourceControl2</name> <type:modifier pos:line="1268" pos:column="28">*</type:modifier></type> <name pos:line="1268" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1269" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1269" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="1269" pos:column="54">*</type:modifier><type:modifier pos:line="1269" pos:column="55">*</type:modifier></type><name pos:line="1269" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1271" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1271" pos:column="34">HRESULT</name></type> ( <name pos:line="1271" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1271" pos:column="62">*</type:modifier><name pos:line="1271" pos:column="63">IsItemUnderSCC</name> )<parameter_list pos:line="1271" pos:column="79">( 
            <param><decl><type><name pos:line="1272" pos:column="13">SourceControl2</name> <type:modifier pos:line="1272" pos:column="28">*</type:modifier></type> <name pos:line="1272" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1273" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1273" pos:column="37">__RPC__in</name> <name pos:line="1273" pos:column="47">BSTR</name></type> <name pos:line="1273" pos:column="52">ItemName</name></decl></param>,
            <comment type="block" pos:line="1274" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1274" pos:column="33">__RPC__out</name> <name pos:line="1274" pos:column="44">BOOLEAN</name> <type:modifier pos:line="1274" pos:column="52">*</type:modifier></type><name pos:line="1274" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1276" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1276" pos:column="34">HRESULT</name></type> ( <name pos:line="1276" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1276" pos:column="62">*</type:modifier><name pos:line="1276" pos:column="63">IsItemCheckedOut</name> )<parameter_list pos:line="1276" pos:column="81">( 
            <param><decl><type><name pos:line="1277" pos:column="13">SourceControl2</name> <type:modifier pos:line="1277" pos:column="28">*</type:modifier></type> <name pos:line="1277" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1278" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1278" pos:column="37">__RPC__in</name> <name pos:line="1278" pos:column="47">BSTR</name></type> <name pos:line="1278" pos:column="52">ItemName</name></decl></param>,
            <comment type="block" pos:line="1279" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1279" pos:column="33">__RPC__out</name> <name pos:line="1279" pos:column="44">BOOLEAN</name> <type:modifier pos:line="1279" pos:column="52">*</type:modifier></type><name pos:line="1279" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1281" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1281" pos:column="34">HRESULT</name></type> ( <name pos:line="1281" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1281" pos:column="62">*</type:modifier><name pos:line="1281" pos:column="63">CheckOutItem</name> )<parameter_list pos:line="1281" pos:column="77">( 
            <param><decl><type><name pos:line="1282" pos:column="13">SourceControl2</name> <type:modifier pos:line="1282" pos:column="28">*</type:modifier></type> <name pos:line="1282" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1283" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1283" pos:column="37">__RPC__in</name> <name pos:line="1283" pos:column="47">BSTR</name></type> <name pos:line="1283" pos:column="52">ItemName</name></decl></param>,
            <comment type="block" pos:line="1284" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1284" pos:column="33">__RPC__out</name> <name pos:line="1284" pos:column="44">BOOLEAN</name> <type:modifier pos:line="1284" pos:column="52">*</type:modifier></type><name pos:line="1284" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1286" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1286" pos:column="34">HRESULT</name></type> ( <name pos:line="1286" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1286" pos:column="62">*</type:modifier><name pos:line="1286" pos:column="63">CheckOutItems</name> )<parameter_list pos:line="1286" pos:column="78">( 
            <param><decl><type><name pos:line="1287" pos:column="13">SourceControl2</name> <type:modifier pos:line="1287" pos:column="28">*</type:modifier></type> <name pos:line="1287" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1288" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1288" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="1288" pos:column="57">SAFEARRAY</name> <type:modifier pos:line="1288" pos:column="67">*</type:modifier> <type:modifier pos:line="1288" pos:column="69">*</type:modifier></type><name pos:line="1288" pos:column="70">ItemNames</name></decl></param>,
            <comment type="block" pos:line="1289" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1289" pos:column="33">__RPC__out</name> <name pos:line="1289" pos:column="44">BOOLEAN</name> <type:modifier pos:line="1289" pos:column="52">*</type:modifier></type><name pos:line="1289" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1291" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1291" pos:column="34">HRESULT</name></type> ( <name pos:line="1291" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1291" pos:column="62">*</type:modifier><name pos:line="1291" pos:column="63">ExcludeItem</name> )<parameter_list pos:line="1291" pos:column="76">( 
            <param><decl><type><name pos:line="1292" pos:column="13">SourceControl2</name> <type:modifier pos:line="1292" pos:column="28">*</type:modifier></type> <name pos:line="1292" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1293" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1293" pos:column="37">__RPC__in</name> <name pos:line="1293" pos:column="47">BSTR</name></type> <name pos:line="1293" pos:column="52">ProjectFile</name></decl></param>,
            <comment type="block" pos:line="1294" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1294" pos:column="37">__RPC__in</name> <name pos:line="1294" pos:column="47">BSTR</name></type> <name pos:line="1294" pos:column="52">ItemName</name></decl></param>,
            <comment type="block" pos:line="1295" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1295" pos:column="33">__RPC__out</name> <name pos:line="1295" pos:column="44">void</name> <type:modifier pos:line="1295" pos:column="49">*</type:modifier></type><name pos:line="1295" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1297" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="1297" pos:column="34">HRESULT</name></type> ( <name pos:line="1297" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="1297" pos:column="62">*</type:modifier><name pos:line="1297" pos:column="63">ExcludeItems</name> )<parameter_list pos:line="1297" pos:column="77">( 
            <param><decl><type><name pos:line="1298" pos:column="13">SourceControl2</name> <type:modifier pos:line="1298" pos:column="28">*</type:modifier></type> <name pos:line="1298" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1299" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1299" pos:column="37">__RPC__in</name> <name pos:line="1299" pos:column="47">BSTR</name></type> <name pos:line="1299" pos:column="52">ProjectFile</name></decl></param>,
            <comment type="block" pos:line="1300" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="1300" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="1300" pos:column="57">SAFEARRAY</name> <type:modifier pos:line="1300" pos:column="67">*</type:modifier> <type:modifier pos:line="1300" pos:column="69">*</type:modifier></type><name pos:line="1300" pos:column="70">ItemNames</name></decl></param>,
            <comment type="block" pos:line="1301" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1301" pos:column="33">__RPC__out</name> <name pos:line="1301" pos:column="44">void</name> <type:modifier pos:line="1301" pos:column="49">*</type:modifier></type><name pos:line="1301" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1303" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="1303" pos:column="64">HRESULT</name></type> ( <name pos:line="1303" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="1303" pos:column="92">*</type:modifier><name pos:line="1303" pos:column="93">GetBindings</name> )<parameter_list pos:line="1303" pos:column="106">( 
            <param><decl><type><name pos:line="1304" pos:column="13">SourceControl2</name> <type:modifier pos:line="1304" pos:column="28">*</type:modifier></type> <name pos:line="1304" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1305" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1305" pos:column="24">__RPC__in</name> <name pos:line="1305" pos:column="34">BSTR</name></type> <name pos:line="1305" pos:column="39">ItemPath</name></decl></param>,
            <comment type="block" pos:line="1306" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1306" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1306" pos:column="54">SourceControlBindings</name> <type:modifier pos:line="1306" pos:column="76">*</type:modifier><type:modifier pos:line="1306" pos:column="77">*</type:modifier></type><name pos:line="1306" pos:column="78">ppVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1308" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="1308" pos:column="64">HRESULT</name></type> ( <name pos:line="1308" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="1308" pos:column="92">*</type:modifier><name pos:line="1308" pos:column="93">CheckOutItem2</name> )<parameter_list pos:line="1308" pos:column="108">( 
            <param><decl><type><name pos:line="1309" pos:column="13">SourceControl2</name> <type:modifier pos:line="1309" pos:column="28">*</type:modifier></type> <name pos:line="1309" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1310" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1310" pos:column="24">__RPC__in</name> <name pos:line="1310" pos:column="34">BSTR</name></type> <name pos:line="1310" pos:column="39">ItemName</name></decl></param>,
            <comment type="block" pos:line="1311" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1311" pos:column="24">vsSourceControlCheckOutOptions</name></type> <name pos:line="1311" pos:column="55">Flags</name></decl></param>,
            <comment type="block" pos:line="1312" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1312" pos:column="33">__RPC__out</name> <name pos:line="1312" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="1312" pos:column="57">*</type:modifier></type><name pos:line="1312" pos:column="58">pfCheckedOut</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1314" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="1314" pos:column="64">HRESULT</name></type> ( <name pos:line="1314" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="1314" pos:column="92">*</type:modifier><name pos:line="1314" pos:column="93">CheckOutItems2</name> )<parameter_list pos:line="1314" pos:column="109">( 
            <param><decl><type><name pos:line="1315" pos:column="13">SourceControl2</name> <type:modifier pos:line="1315" pos:column="28">*</type:modifier></type> <name pos:line="1315" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1316" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1316" pos:column="24">__RPC__deref_in_opt</name> <name pos:line="1316" pos:column="44">SAFEARRAY</name> <type:modifier pos:line="1316" pos:column="54">*</type:modifier> <type:modifier pos:line="1316" pos:column="56">*</type:modifier></type><name pos:line="1316" pos:column="57">ItemNames</name></decl></param>,
            <comment type="block" pos:line="1317" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1317" pos:column="24">vsSourceControlCheckOutOptions</name></type> <name pos:line="1317" pos:column="55">Flags</name></decl></param>,
            <comment type="block" pos:line="1318" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1318" pos:column="33">__RPC__out</name> <name pos:line="1318" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="1318" pos:column="57">*</type:modifier></type><name pos:line="1318" pos:column="58">pfCheckedOut</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1320" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="1320" pos:column="64">HRESULT</name></type> ( <name pos:line="1320" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="1320" pos:column="92">*</type:modifier><name pos:line="1320" pos:column="93">UndoExcludeItem</name> )<parameter_list pos:line="1320" pos:column="110">( 
            <param><decl><type><name pos:line="1321" pos:column="13">SourceControl2</name> <type:modifier pos:line="1321" pos:column="28">*</type:modifier></type> <name pos:line="1321" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1322" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1322" pos:column="24">__RPC__in</name> <name pos:line="1322" pos:column="34">BSTR</name></type> <name pos:line="1322" pos:column="39">ProjectFile</name></decl></param>,
            <comment type="block" pos:line="1323" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1323" pos:column="24">__RPC__in</name> <name pos:line="1323" pos:column="34">BSTR</name></type> <name pos:line="1323" pos:column="39">ItemName</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1325" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="1325" pos:column="64">HRESULT</name></type> ( <name pos:line="1325" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="1325" pos:column="92">*</type:modifier><name pos:line="1325" pos:column="93">UndoExcludeItems</name> )<parameter_list pos:line="1325" pos:column="111">( 
            <param><decl><type><name pos:line="1326" pos:column="13">SourceControl2</name> <type:modifier pos:line="1326" pos:column="28">*</type:modifier></type> <name pos:line="1326" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="1327" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1327" pos:column="24">__RPC__in</name> <name pos:line="1327" pos:column="34">BSTR</name></type> <name pos:line="1327" pos:column="39">ProjectFile</name></decl></param>,
            <comment type="block" pos:line="1328" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1328" pos:column="24">__RPC__deref_in_opt</name> <name pos:line="1328" pos:column="44">SAFEARRAY</name> <type:modifier pos:line="1328" pos:column="54">*</type:modifier> <type:modifier pos:line="1328" pos:column="56">*</type:modifier></type><name pos:line="1328" pos:column="57">ItemNames</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1330" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1331" pos:column="7">SourceControl2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1333" pos:column="5">interface</name></type> <name pos:line="1333" pos:column="15">SourceControl2</name>
    <argument_list pos:line="1334" pos:column="5">{
        <argument><expr><name pos:line="1335" pos:column="9">CONST_VTBL</name> struct <name pos:line="1335" pos:column="27">SourceControl2Vtbl</name> <op:operator pos:line="1335" pos:column="46">*</op:operator><name pos:line="1335" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1340" pos:column="1">#<cpp:directive pos:line="1340" pos:column="2">ifdef</cpp:directive> <name pos:line="1340" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1343" pos:column="1">#<cpp:directive pos:line="1343" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1343" pos:column="9">SourceControl2_QueryInterface</name><parameter_list pos:line="1343" pos:column="38">(<param><type><name pos:line="1343" pos:column="39">This</name></type></param>,<param><type><name pos:line="1343" pos:column="44">riid</name></type></param>,<param><type><name pos:line="1343" pos:column="49">ppvObj</name></type></param>,<param><type><name pos:line="1343" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1344" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1346" pos:column="1">#<cpp:directive pos:line="1346" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1346" pos:column="9">SourceControl2_AddRef</name><parameter_list pos:line="1346" pos:column="30">(<param><type><name pos:line="1346" pos:column="31">This</name></type></param>,<param><type><name pos:line="1346" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1347" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1349" pos:column="1">#<cpp:directive pos:line="1349" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1349" pos:column="9">SourceControl2_Release</name><parameter_list pos:line="1349" pos:column="31">(<param><type><name pos:line="1349" pos:column="32">This</name></type></param>,<param><type><name pos:line="1349" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1350" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1352" pos:column="1">#<cpp:directive pos:line="1352" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1352" pos:column="9">SourceControl2_GetTypeInfoCount</name><parameter_list pos:line="1352" pos:column="40">(<param><type><name pos:line="1352" pos:column="41">This</name></type></param>,<param><type><name pos:line="1352" pos:column="46">pctinfo</name></type></param>,<param><type><name pos:line="1352" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1353" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1355" pos:column="1">#<cpp:directive pos:line="1355" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1355" pos:column="9">SourceControl2_GetTypeInfo</name><parameter_list pos:line="1355" pos:column="35">(<param><type><name pos:line="1355" pos:column="36">This</name></type></param>,<param><type><name pos:line="1355" pos:column="41">itinfo</name></type></param>,<param><type><name pos:line="1355" pos:column="48">lcid</name></type></param>,<param><type><name pos:line="1355" pos:column="53">pptinfo</name></type></param>,<param><type><name pos:line="1355" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1356" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1358" pos:column="1">#<cpp:directive pos:line="1358" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1358" pos:column="9">SourceControl2_GetIDsOfNames</name><parameter_list pos:line="1358" pos:column="37">(<param><type><name pos:line="1358" pos:column="38">This</name></type></param>,<param><type><name pos:line="1358" pos:column="43">riid</name></type></param>,<param><type><name pos:line="1358" pos:column="48">rgszNames</name></type></param>,<param><type><name pos:line="1358" pos:column="58">cNames</name></type></param>,<param><type><name pos:line="1358" pos:column="65">lcid</name></type></param>,<param><type><name pos:line="1358" pos:column="70">rgdispid</name></type></param>,<param><type><name pos:line="1358" pos:column="79">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1359" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1361" pos:column="1">#<cpp:directive pos:line="1361" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1361" pos:column="9">SourceControl2_Invoke</name><parameter_list pos:line="1361" pos:column="30">(<param><type><name pos:line="1361" pos:column="31">This</name></type></param>,<param><type><name pos:line="1361" pos:column="36">dispidMember</name></type></param>,<param><type><name pos:line="1361" pos:column="49">riid</name></type></param>,<param><type><name pos:line="1361" pos:column="54">lcid</name></type></param>,<param><type><name pos:line="1361" pos:column="59">wFlags</name></type></param>,<param><type><name pos:line="1361" pos:column="66">pdispparams</name></type></param>,<param><type><name pos:line="1361" pos:column="78">pvarResult</name></type></param>,<param><type><name pos:line="1361" pos:column="89">pexcepinfo</name></type></param>,<param><type><name pos:line="1361" pos:column="100">puArgErr</name></type></param>,<param><type><name pos:line="1361" pos:column="109">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1362" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1364" pos:column="1">#<cpp:directive pos:line="1364" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1364" pos:column="9">SourceControl2_get_DTE</name><parameter_list pos:line="1364" pos:column="31">(<param><type><name pos:line="1364" pos:column="32">This</name></type></param>,<param><type><name pos:line="1364" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1365" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1367" pos:column="1">#<cpp:directive pos:line="1367" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1367" pos:column="9">SourceControl2_get_Parent</name><parameter_list pos:line="1367" pos:column="34">(<param><type><name pos:line="1367" pos:column="35">This</name></type></param>,<param><type><name pos:line="1367" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1368" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1370" pos:column="1">#<cpp:directive pos:line="1370" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1370" pos:column="9">SourceControl2_IsItemUnderSCC</name><parameter_list pos:line="1370" pos:column="38">(<param><type><name pos:line="1370" pos:column="39">This</name></type></param>,<param><type><name pos:line="1370" pos:column="44">ItemName</name></type></param>,<param><type><name pos:line="1370" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1371" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsItemUnderSCC(This,ItemName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1373" pos:column="1">#<cpp:directive pos:line="1373" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1373" pos:column="9">SourceControl2_IsItemCheckedOut</name><parameter_list pos:line="1373" pos:column="40">(<param><type><name pos:line="1373" pos:column="41">This</name></type></param>,<param><type><name pos:line="1373" pos:column="46">ItemName</name></type></param>,<param><type><name pos:line="1373" pos:column="55">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1374" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsItemCheckedOut(This,ItemName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1376" pos:column="1">#<cpp:directive pos:line="1376" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1376" pos:column="9">SourceControl2_CheckOutItem</name><parameter_list pos:line="1376" pos:column="36">(<param><type><name pos:line="1376" pos:column="37">This</name></type></param>,<param><type><name pos:line="1376" pos:column="42">ItemName</name></type></param>,<param><type><name pos:line="1376" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1377" pos:column="5">( (This)-&gt;lpVtbl -&gt; CheckOutItem(This,ItemName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1379" pos:column="1">#<cpp:directive pos:line="1379" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1379" pos:column="9">SourceControl2_CheckOutItems</name><parameter_list pos:line="1379" pos:column="37">(<param><type><name pos:line="1379" pos:column="38">This</name></type></param>,<param><type><name pos:line="1379" pos:column="43">ItemNames</name></type></param>,<param><type><name pos:line="1379" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1380" pos:column="5">( (This)-&gt;lpVtbl -&gt; CheckOutItems(This,ItemNames,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1382" pos:column="1">#<cpp:directive pos:line="1382" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1382" pos:column="9">SourceControl2_ExcludeItem</name><parameter_list pos:line="1382" pos:column="35">(<param><type><name pos:line="1382" pos:column="36">This</name></type></param>,<param><type><name pos:line="1382" pos:column="41">ProjectFile</name></type></param>,<param><type><name pos:line="1382" pos:column="53">ItemName</name></type></param>,<param><type><name pos:line="1382" pos:column="62">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1383" pos:column="5">( (This)-&gt;lpVtbl -&gt; ExcludeItem(This,ProjectFile,ItemName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="1385" pos:column="1">#<cpp:directive pos:line="1385" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1385" pos:column="9">SourceControl2_ExcludeItems</name><parameter_list pos:line="1385" pos:column="36">(<param><type><name pos:line="1385" pos:column="37">This</name></type></param>,<param><type><name pos:line="1385" pos:column="42">ProjectFile</name></type></param>,<param><type><name pos:line="1385" pos:column="54">ItemNames</name></type></param>,<param><type><name pos:line="1385" pos:column="64">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1386" pos:column="5">( (This)-&gt;lpVtbl -&gt; ExcludeItems(This,ProjectFile,ItemNames,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="1389" pos:column="1">#<cpp:directive pos:line="1389" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1389" pos:column="9">SourceControl2_GetBindings</name><parameter_list pos:line="1389" pos:column="35">(<param><type><name pos:line="1389" pos:column="36">This</name></type></param>,<param><type><name pos:line="1389" pos:column="41">ItemPath</name></type></param>,<param><type><name pos:line="1389" pos:column="50">ppVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1390" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetBindings(This,ItemPath,ppVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="1392" pos:column="1">#<cpp:directive pos:line="1392" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1392" pos:column="9">SourceControl2_CheckOutItem2</name><parameter_list pos:line="1392" pos:column="37">(<param><type><name pos:line="1392" pos:column="38">This</name></type></param>,<param><type><name pos:line="1392" pos:column="43">ItemName</name></type></param>,<param><type><name pos:line="1392" pos:column="52">Flags</name></type></param>,<param><type><name pos:line="1392" pos:column="58">pfCheckedOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1393" pos:column="5">( (This)-&gt;lpVtbl -&gt; CheckOutItem2(This,ItemName,Flags,pfCheckedOut) )</cpp:value></cpp:define> 

<cpp:define pos:line="1395" pos:column="1">#<cpp:directive pos:line="1395" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1395" pos:column="9">SourceControl2_CheckOutItems2</name><parameter_list pos:line="1395" pos:column="38">(<param><type><name pos:line="1395" pos:column="39">This</name></type></param>,<param><type><name pos:line="1395" pos:column="44">ItemNames</name></type></param>,<param><type><name pos:line="1395" pos:column="54">Flags</name></type></param>,<param><type><name pos:line="1395" pos:column="60">pfCheckedOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1396" pos:column="5">( (This)-&gt;lpVtbl -&gt; CheckOutItems2(This,ItemNames,Flags,pfCheckedOut) )</cpp:value></cpp:define> 

<cpp:define pos:line="1398" pos:column="1">#<cpp:directive pos:line="1398" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1398" pos:column="9">SourceControl2_UndoExcludeItem</name><parameter_list pos:line="1398" pos:column="39">(<param><type><name pos:line="1398" pos:column="40">This</name></type></param>,<param><type><name pos:line="1398" pos:column="45">ProjectFile</name></type></param>,<param><type><name pos:line="1398" pos:column="57">ItemName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1399" pos:column="5">( (This)-&gt;lpVtbl -&gt; UndoExcludeItem(This,ProjectFile,ItemName) )</cpp:value></cpp:define> 

<cpp:define pos:line="1401" pos:column="1">#<cpp:directive pos:line="1401" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1401" pos:column="9">SourceControl2_UndoExcludeItems</name><parameter_list pos:line="1401" pos:column="40">(<param><type><name pos:line="1401" pos:column="41">This</name></type></param>,<param><type><name pos:line="1401" pos:column="46">ProjectFile</name></type></param>,<param><type><name pos:line="1401" pos:column="58">ItemNames</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1402" pos:column="5">( (This)-&gt;lpVtbl -&gt; UndoExcludeItems(This,ProjectFile,ItemNames) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1404" pos:column="1">#<cpp:directive pos:line="1404" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1404" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1407" pos:column="1">#<cpp:directive pos:line="1407" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1407" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1412" pos:column="1">#<cpp:directive pos:line="1412" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1412" pos:column="9">/* __SourceControl2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1415" pos:column="1">#<cpp:directive pos:line="1415" pos:column="2">ifndef</cpp:directive> <name pos:line="1415" pos:column="9">__ErrorItem_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1416" pos:column="1">#<cpp:directive pos:line="1416" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1416" pos:column="9">__ErrorItem_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1418" pos:column="1">/* interface ErrorItem */</comment>
<comment type="block" pos:line="1419" pos:column="1">/* [helpstring][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="1422" pos:column="1">EXTERN_C</name> <specifier pos:line="1422" pos:column="10">const</specifier> <name pos:line="1422" pos:column="16">IID</name></type> <name pos:line="1422" pos:column="20">IID_ErrorItem</name></decl>;</decl_stmt>

<cpp:if pos:line="1424" pos:column="1">#<cpp:directive pos:line="1424" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1424" pos:column="5">defined</name><argument_list pos:line="1424" pos:column="12">(<argument><expr><name pos:line="1424" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1424" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1424" pos:column="29">!</op:operator><call><name pos:line="1424" pos:column="30">defined</name><argument_list pos:line="1424" pos:column="37">(<argument><expr><name pos:line="1424" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1426" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1426" pos:column="19">(<argument pos:line="1426" pos:column="20">"f49a191f-7258-493b-9310-5f7771ddf3d7"</argument>)</argument_list></macro>
    <label><name pos:line="1427" pos:column="5">ErrorItem</name> :</label> <expr_stmt><expr pos:line="1427" pos:column="17">public <name pos:line="1427" pos:column="24">IDispatch</name>
    <block pos:line="1428" pos:column="5">{
    <expr pos:line="1429" pos:column="5">public<op:operator pos:line="1429" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="1430" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1430" pos:column="81">HRESULT</name> <name pos:line="1430" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="1430" pos:column="107">get_DTE</name><argument_list pos:line="1430" pos:column="114">( 
            <comment type="block" pos:line="1431" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1431" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1431" pos:column="54">/* external definition not present */</comment> DTE **DTEObject</argument>)</argument_list></macro> <op:operator pos:line="1431" pos:column="109">=</op:operator> <lit:literal type="number" pos:line="1431" pos:column="111">0</lit:literal></expr>;
        
        <expr pos:line="1433" pos:column="9">virtual <comment type="block" pos:line="1433" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1433" pos:column="81">HRESULT</name> <name pos:line="1433" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="1433" pos:column="107">get_Collection</name><argument_list pos:line="1433" pos:column="121">( 
            <comment type="block" pos:line="1434" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1434" pos:column="33">__RPC__deref_out_opt ErrorItems **ErrorItems</argument>)</argument_list></macro> <op:operator pos:line="1434" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="1434" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="1436" pos:column="9">virtual <comment type="block" pos:line="1436" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="1436" pos:column="49">HRESULT</name> <name pos:line="1436" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="1436" pos:column="75">get_ErrorLevel</name><argument_list pos:line="1436" pos:column="89">( 
            <comment type="block" pos:line="1437" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1437" pos:column="33">__RPC__out vsBuildErrorLevel *ErrorLevel</argument>)</argument_list></macro> <op:operator pos:line="1437" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="1437" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="1439" pos:column="9">virtual <comment type="block" pos:line="1439" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1439" pos:column="81">HRESULT</name> <name pos:line="1439" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="1439" pos:column="107">get_Description</name><argument_list pos:line="1439" pos:column="122">( 
            <comment type="block" pos:line="1440" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1440" pos:column="33">__RPC__deref_out_opt BSTR *Description</argument>)</argument_list></macro> <op:operator pos:line="1440" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="1440" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="1442" pos:column="9">virtual <comment type="block" pos:line="1442" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="1442" pos:column="49">HRESULT</name> <name pos:line="1442" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="1442" pos:column="75">get_FileName</name><argument_list pos:line="1442" pos:column="87">( 
            <comment type="block" pos:line="1443" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1443" pos:column="33">__RPC__deref_out_opt BSTR *File</argument>)</argument_list></macro> <op:operator pos:line="1443" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="1443" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="1445" pos:column="9">virtual <comment type="block" pos:line="1445" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="1445" pos:column="49">HRESULT</name> <name pos:line="1445" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="1445" pos:column="75">get_Line</name><argument_list pos:line="1445" pos:column="83">( 
            <comment type="block" pos:line="1446" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1446" pos:column="33">__RPC__out long *Line</argument>)</argument_list></macro> <op:operator pos:line="1446" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="1446" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="1448" pos:column="9">virtual <comment type="block" pos:line="1448" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="1448" pos:column="49">HRESULT</name> <name pos:line="1448" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="1448" pos:column="75">get_Column</name><argument_list pos:line="1448" pos:column="85">( 
            <comment type="block" pos:line="1449" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1449" pos:column="33">__RPC__out long *Column</argument>)</argument_list></macro> <op:operator pos:line="1449" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="1449" pos:column="60">0</lit:literal></expr>;
        
        <expr pos:line="1451" pos:column="9">virtual <comment type="block" pos:line="1451" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="1451" pos:column="49">HRESULT</name> <name pos:line="1451" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="1451" pos:column="75">get_Project</name><argument_list pos:line="1451" pos:column="86">( 
            <comment type="block" pos:line="1452" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1452" pos:column="33">__RPC__deref_out_opt BSTR *ProjectUniqueName</argument>)</argument_list></macro> <op:operator pos:line="1452" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="1452" pos:column="81">0</lit:literal></expr>;
        
        <expr pos:line="1454" pos:column="9">virtual <comment type="block" pos:line="1454" pos:column="17">/* [helpstring][id] */</comment> <name pos:line="1454" pos:column="40">HRESULT</name> <name pos:line="1454" pos:column="48">STDMETHODCALLTYPE</name> <call><name pos:line="1454" pos:column="66">Navigate</name><argument_list pos:line="1454" pos:column="74">( <argument><expr><name pos:line="1454" pos:column="76">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1454" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="1454" pos:column="84">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1458" pos:column="1">#<cpp:directive pos:line="1458" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1458" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1460" pos:column="5">typedef <type><struct pos:line="1460" pos:column="13">struct <name pos:line="1460" pos:column="20">ErrorItemVtbl</name>
    <block pos:line="1461" pos:column="5">{<public type="default" pos:line="1461" pos:column="6">
        <function_decl><type><name pos:line="1462" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1464" pos:column="9">HRESULT</name></type> ( <name pos:line="1464" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1464" pos:column="37">*</type:modifier><name pos:line="1464" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1464" pos:column="54">( 
            <param><decl><type><name pos:line="1465" pos:column="13">ErrorItem</name> <type:modifier pos:line="1465" pos:column="23">*</type:modifier></type> <name pos:line="1465" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1466" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1466" pos:column="24">__RPC__in</name> <name pos:line="1466" pos:column="34">REFIID</name></type> <name pos:line="1466" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1467" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1468" pos:column="13">__RPC__deref_out</name>  <name pos:line="1468" pos:column="31">void</name> <type:modifier pos:line="1468" pos:column="36">*</type:modifier><type:modifier pos:line="1468" pos:column="37">*</type:modifier></type><name pos:line="1468" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1470" pos:column="9">ULONG</name></type> ( <name pos:line="1470" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1470" pos:column="35">*</type:modifier><name pos:line="1470" pos:column="36">AddRef</name> )<parameter_list pos:line="1470" pos:column="44">( 
            <param><decl><type><name pos:line="1471" pos:column="13">ErrorItem</name> <type:modifier pos:line="1471" pos:column="23">*</type:modifier></type> <name pos:line="1471" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1473" pos:column="9">ULONG</name></type> ( <name pos:line="1473" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1473" pos:column="35">*</type:modifier><name pos:line="1473" pos:column="36">Release</name> )<parameter_list pos:line="1473" pos:column="45">( 
            <param><decl><type><name pos:line="1474" pos:column="13">ErrorItem</name> <type:modifier pos:line="1474" pos:column="23">*</type:modifier></type> <name pos:line="1474" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1476" pos:column="9">HRESULT</name></type> ( <name pos:line="1476" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1476" pos:column="37">*</type:modifier><name pos:line="1476" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="1476" pos:column="56">( 
            <param><decl><type><name pos:line="1477" pos:column="13">ErrorItem</name> <type:modifier pos:line="1477" pos:column="23">*</type:modifier></type> <name pos:line="1477" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1478" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1478" pos:column="25">__RPC__out</name> <name pos:line="1478" pos:column="36">UINT</name> <type:modifier pos:line="1478" pos:column="41">*</type:modifier></type><name pos:line="1478" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1480" pos:column="9">HRESULT</name></type> ( <name pos:line="1480" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1480" pos:column="37">*</type:modifier><name pos:line="1480" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="1480" pos:column="51">( 
            <param><decl><type><name pos:line="1481" pos:column="13">ErrorItem</name> <type:modifier pos:line="1481" pos:column="23">*</type:modifier></type> <name pos:line="1481" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1482" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1482" pos:column="24">UINT</name></type> <name pos:line="1482" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="1483" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1483" pos:column="24">LCID</name></type> <name pos:line="1483" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="1484" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1484" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1484" pos:column="46">ITypeInfo</name> <type:modifier pos:line="1484" pos:column="56">*</type:modifier><type:modifier pos:line="1484" pos:column="57">*</type:modifier></type><name pos:line="1484" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1486" pos:column="9">HRESULT</name> <argument_list pos:line="1486" pos:column="17">( <argument pos:line="1486" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1486" pos:column="53">(</op:operator> 
            <name pos:line="1487" pos:column="13">ErrorItem</name> <op:operator pos:line="1487" pos:column="23">*</op:operator> <name pos:line="1487" pos:column="25">This</name><op:operator pos:line="1487" pos:column="29">,</op:operator>
            <comment type="block" pos:line="1488" pos:column="13">/* [in] */</comment> <name pos:line="1488" pos:column="24">__RPC__in</name> <name pos:line="1488" pos:column="34">REFIID</name> <name pos:line="1488" pos:column="41">riid</name><op:operator pos:line="1488" pos:column="45">,</op:operator>
            <comment type="block" pos:line="1489" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1489" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1489" pos:column="54">(<argument pos:line="1489" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="1489" pos:column="63">LPOLESTR</name> <op:operator pos:line="1489" pos:column="72">*</op:operator><name pos:line="1489" pos:column="73">rgszNames</name><op:operator pos:line="1489" pos:column="82">,</op:operator>
            <comment type="block" pos:line="1490" pos:column="13">/* [range][in] */</comment> <name pos:line="1490" pos:column="31">UINT</name> <name pos:line="1490" pos:column="36">cNames</name><op:operator pos:line="1490" pos:column="42">,</op:operator>
            <comment type="block" pos:line="1491" pos:column="13">/* [in] */</comment> <name pos:line="1491" pos:column="24">LCID</name> <name pos:line="1491" pos:column="29">lcid</name><op:operator pos:line="1491" pos:column="33">,</op:operator>
            <comment type="block" pos:line="1492" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="1492" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="1492" pos:column="56">(<argument pos:line="1492" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="1492" pos:column="65">DISPID</name> <op:operator pos:line="1492" pos:column="72">*</op:operator><name pos:line="1492" pos:column="73">rgDispId</name><op:operator pos:line="1492" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="1494" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="1494" pos:column="23">HRESULT</name></type> ( <name pos:line="1494" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="1494" pos:column="51">*</type:modifier><name pos:line="1494" pos:column="52">Invoke</name> )<parameter_list pos:line="1494" pos:column="60">( 
            <param><decl><type><name pos:line="1495" pos:column="13">ErrorItem</name> <type:modifier pos:line="1495" pos:column="23">*</type:modifier></type> <name pos:line="1495" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1496" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1496" pos:column="24">DISPID</name></type> <name pos:line="1496" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="1497" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1497" pos:column="24">REFIID</name></type> <name pos:line="1497" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1498" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1498" pos:column="24">LCID</name></type> <name pos:line="1498" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="1499" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1499" pos:column="24">WORD</name></type> <name pos:line="1499" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="1500" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="1500" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="1500" pos:column="40">*</type:modifier></type><name pos:line="1500" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="1501" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1501" pos:column="25">VARIANT</name> <type:modifier pos:line="1501" pos:column="33">*</type:modifier></type><name pos:line="1501" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="1502" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1502" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="1502" pos:column="35">*</type:modifier></type><name pos:line="1502" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="1503" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1503" pos:column="25">UINT</name> <type:modifier pos:line="1503" pos:column="30">*</type:modifier></type><name pos:line="1503" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1505" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1505" pos:column="73">HRESULT</name></type> ( <name pos:line="1505" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="1505" pos:column="101">*</type:modifier><name pos:line="1505" pos:column="102">get_DTE</name> )<parameter_list pos:line="1505" pos:column="111">( 
            <param><decl><type><name pos:line="1506" pos:column="13">ErrorItem</name> <type:modifier pos:line="1506" pos:column="23">*</type:modifier></type> <name pos:line="1506" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1507" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1507" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="1507" pos:column="54">/* external definition not present */</comment> <name pos:line="1507" pos:column="92">DTE</name> <type:modifier pos:line="1507" pos:column="96">*</type:modifier><type:modifier pos:line="1507" pos:column="97">*</type:modifier></type><name pos:line="1507" pos:column="98">DTEObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1509" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1509" pos:column="73">HRESULT</name></type> ( <name pos:line="1509" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="1509" pos:column="101">*</type:modifier><name pos:line="1509" pos:column="102">get_Collection</name> )<parameter_list pos:line="1509" pos:column="118">( 
            <param><decl><type><name pos:line="1510" pos:column="13">ErrorItem</name> <type:modifier pos:line="1510" pos:column="23">*</type:modifier></type> <name pos:line="1510" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1511" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1511" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1511" pos:column="54">ErrorItems</name> <type:modifier pos:line="1511" pos:column="65">*</type:modifier><type:modifier pos:line="1511" pos:column="66">*</type:modifier></type><name pos:line="1511" pos:column="67">ErrorItems</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1513" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="1513" pos:column="41">HRESULT</name></type> ( <name pos:line="1513" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="1513" pos:column="69">*</type:modifier><name pos:line="1513" pos:column="70">get_ErrorLevel</name> )<parameter_list pos:line="1513" pos:column="86">( 
            <param><decl><type><name pos:line="1514" pos:column="13">ErrorItem</name> <type:modifier pos:line="1514" pos:column="23">*</type:modifier></type> <name pos:line="1514" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1515" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1515" pos:column="33">__RPC__out</name> <name pos:line="1515" pos:column="44">vsBuildErrorLevel</name> <type:modifier pos:line="1515" pos:column="62">*</type:modifier></type><name pos:line="1515" pos:column="63">ErrorLevel</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1517" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1517" pos:column="73">HRESULT</name></type> ( <name pos:line="1517" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="1517" pos:column="101">*</type:modifier><name pos:line="1517" pos:column="102">get_Description</name> )<parameter_list pos:line="1517" pos:column="119">( 
            <param><decl><type><name pos:line="1518" pos:column="13">ErrorItem</name> <type:modifier pos:line="1518" pos:column="23">*</type:modifier></type> <name pos:line="1518" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1519" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1519" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1519" pos:column="54">BSTR</name> <type:modifier pos:line="1519" pos:column="59">*</type:modifier></type><name pos:line="1519" pos:column="60">Description</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1521" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="1521" pos:column="41">HRESULT</name></type> ( <name pos:line="1521" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="1521" pos:column="69">*</type:modifier><name pos:line="1521" pos:column="70">get_FileName</name> )<parameter_list pos:line="1521" pos:column="84">( 
            <param><decl><type><name pos:line="1522" pos:column="13">ErrorItem</name> <type:modifier pos:line="1522" pos:column="23">*</type:modifier></type> <name pos:line="1522" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1523" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1523" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1523" pos:column="54">BSTR</name> <type:modifier pos:line="1523" pos:column="59">*</type:modifier></type><name pos:line="1523" pos:column="60">File</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1525" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="1525" pos:column="41">HRESULT</name></type> ( <name pos:line="1525" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="1525" pos:column="69">*</type:modifier><name pos:line="1525" pos:column="70">get_Line</name> )<parameter_list pos:line="1525" pos:column="80">( 
            <param><decl><type><name pos:line="1526" pos:column="13">ErrorItem</name> <type:modifier pos:line="1526" pos:column="23">*</type:modifier></type> <name pos:line="1526" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1527" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1527" pos:column="33">__RPC__out</name> <name pos:line="1527" pos:column="44">long</name> <type:modifier pos:line="1527" pos:column="49">*</type:modifier></type><name pos:line="1527" pos:column="50">Line</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1529" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="1529" pos:column="41">HRESULT</name></type> ( <name pos:line="1529" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="1529" pos:column="69">*</type:modifier><name pos:line="1529" pos:column="70">get_Column</name> )<parameter_list pos:line="1529" pos:column="82">( 
            <param><decl><type><name pos:line="1530" pos:column="13">ErrorItem</name> <type:modifier pos:line="1530" pos:column="23">*</type:modifier></type> <name pos:line="1530" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1531" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1531" pos:column="33">__RPC__out</name> <name pos:line="1531" pos:column="44">long</name> <type:modifier pos:line="1531" pos:column="49">*</type:modifier></type><name pos:line="1531" pos:column="50">Column</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1533" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="1533" pos:column="41">HRESULT</name></type> ( <name pos:line="1533" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="1533" pos:column="69">*</type:modifier><name pos:line="1533" pos:column="70">get_Project</name> )<parameter_list pos:line="1533" pos:column="83">( 
            <param><decl><type><name pos:line="1534" pos:column="13">ErrorItem</name> <type:modifier pos:line="1534" pos:column="23">*</type:modifier></type> <name pos:line="1534" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1535" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1535" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1535" pos:column="54">BSTR</name> <type:modifier pos:line="1535" pos:column="59">*</type:modifier></type><name pos:line="1535" pos:column="60">ProjectUniqueName</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1537" pos:column="9">/* [helpstring][id] */</comment> <function_decl><type><name pos:line="1537" pos:column="32">HRESULT</name></type> ( <name pos:line="1537" pos:column="42">STDMETHODCALLTYPE</name> <type:modifier pos:line="1537" pos:column="60">*</type:modifier><name pos:line="1537" pos:column="61">Navigate</name> )<parameter_list pos:line="1537" pos:column="71">( 
            <param><decl><type><name pos:line="1538" pos:column="13">ErrorItem</name> <type:modifier pos:line="1538" pos:column="23">*</type:modifier></type> <name pos:line="1538" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1540" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1541" pos:column="7">ErrorItemVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1543" pos:column="5">interface</name></type> <name pos:line="1543" pos:column="15">ErrorItem</name>
    <argument_list pos:line="1544" pos:column="5">{
        <argument><expr><name pos:line="1545" pos:column="9">CONST_VTBL</name> struct <name pos:line="1545" pos:column="27">ErrorItemVtbl</name> <op:operator pos:line="1545" pos:column="41">*</op:operator><name pos:line="1545" pos:column="42">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1550" pos:column="1">#<cpp:directive pos:line="1550" pos:column="2">ifdef</cpp:directive> <name pos:line="1550" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1553" pos:column="1">#<cpp:directive pos:line="1553" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1553" pos:column="9">ErrorItem_QueryInterface</name><parameter_list pos:line="1553" pos:column="33">(<param><type><name pos:line="1553" pos:column="34">This</name></type></param>,<param><type><name pos:line="1553" pos:column="39">riid</name></type></param>,<param><type><name pos:line="1553" pos:column="44">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1554" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1556" pos:column="1">#<cpp:directive pos:line="1556" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1556" pos:column="9">ErrorItem_AddRef</name><parameter_list pos:line="1556" pos:column="25">(<param><type><name pos:line="1556" pos:column="26">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1557" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1559" pos:column="1">#<cpp:directive pos:line="1559" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1559" pos:column="9">ErrorItem_Release</name><parameter_list pos:line="1559" pos:column="26">(<param><type><name pos:line="1559" pos:column="27">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1560" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1563" pos:column="1">#<cpp:directive pos:line="1563" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1563" pos:column="9">ErrorItem_GetTypeInfoCount</name><parameter_list pos:line="1563" pos:column="35">(<param><type><name pos:line="1563" pos:column="36">This</name></type></param>,<param><type><name pos:line="1563" pos:column="41">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1564" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="1566" pos:column="1">#<cpp:directive pos:line="1566" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1566" pos:column="9">ErrorItem_GetTypeInfo</name><parameter_list pos:line="1566" pos:column="30">(<param><type><name pos:line="1566" pos:column="31">This</name></type></param>,<param><type><name pos:line="1566" pos:column="36">iTInfo</name></type></param>,<param><type><name pos:line="1566" pos:column="43">lcid</name></type></param>,<param><type><name pos:line="1566" pos:column="48">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1567" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="1569" pos:column="1">#<cpp:directive pos:line="1569" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1569" pos:column="9">ErrorItem_GetIDsOfNames</name><parameter_list pos:line="1569" pos:column="32">(<param><type><name pos:line="1569" pos:column="33">This</name></type></param>,<param><type><name pos:line="1569" pos:column="38">riid</name></type></param>,<param><type><name pos:line="1569" pos:column="43">rgszNames</name></type></param>,<param><type><name pos:line="1569" pos:column="53">cNames</name></type></param>,<param><type><name pos:line="1569" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="1569" pos:column="65">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1570" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="1572" pos:column="1">#<cpp:directive pos:line="1572" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1572" pos:column="9">ErrorItem_Invoke</name><parameter_list pos:line="1572" pos:column="25">(<param><type><name pos:line="1572" pos:column="26">This</name></type></param>,<param><type><name pos:line="1572" pos:column="31">dispIdMember</name></type></param>,<param><type><name pos:line="1572" pos:column="44">riid</name></type></param>,<param><type><name pos:line="1572" pos:column="49">lcid</name></type></param>,<param><type><name pos:line="1572" pos:column="54">wFlags</name></type></param>,<param><type><name pos:line="1572" pos:column="61">pDispParams</name></type></param>,<param><type><name pos:line="1572" pos:column="73">pVarResult</name></type></param>,<param><type><name pos:line="1572" pos:column="84">pExcepInfo</name></type></param>,<param><type><name pos:line="1572" pos:column="95">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1573" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="1576" pos:column="1">#<cpp:directive pos:line="1576" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1576" pos:column="9">ErrorItem_get_DTE</name><parameter_list pos:line="1576" pos:column="26">(<param><type><name pos:line="1576" pos:column="27">This</name></type></param>,<param><type><name pos:line="1576" pos:column="32">DTEObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1577" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTEObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1579" pos:column="1">#<cpp:directive pos:line="1579" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1579" pos:column="9">ErrorItem_get_Collection</name><parameter_list pos:line="1579" pos:column="33">(<param><type><name pos:line="1579" pos:column="34">This</name></type></param>,<param><type><name pos:line="1579" pos:column="39">ErrorItems</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1580" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,ErrorItems) )</cpp:value></cpp:define> 

<cpp:define pos:line="1582" pos:column="1">#<cpp:directive pos:line="1582" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1582" pos:column="9">ErrorItem_get_ErrorLevel</name><parameter_list pos:line="1582" pos:column="33">(<param><type><name pos:line="1582" pos:column="34">This</name></type></param>,<param><type><name pos:line="1582" pos:column="39">ErrorLevel</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1583" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ErrorLevel(This,ErrorLevel) )</cpp:value></cpp:define> 

<cpp:define pos:line="1585" pos:column="1">#<cpp:directive pos:line="1585" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1585" pos:column="9">ErrorItem_get_Description</name><parameter_list pos:line="1585" pos:column="34">(<param><type><name pos:line="1585" pos:column="35">This</name></type></param>,<param><type><name pos:line="1585" pos:column="40">Description</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1586" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Description(This,Description) )</cpp:value></cpp:define> 

<cpp:define pos:line="1588" pos:column="1">#<cpp:directive pos:line="1588" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1588" pos:column="9">ErrorItem_get_FileName</name><parameter_list pos:line="1588" pos:column="31">(<param><type><name pos:line="1588" pos:column="32">This</name></type></param>,<param><type><name pos:line="1588" pos:column="37">File</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1589" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FileName(This,File) )</cpp:value></cpp:define> 

<cpp:define pos:line="1591" pos:column="1">#<cpp:directive pos:line="1591" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1591" pos:column="9">ErrorItem_get_Line</name><parameter_list pos:line="1591" pos:column="27">(<param><type><name pos:line="1591" pos:column="28">This</name></type></param>,<param><type><name pos:line="1591" pos:column="33">Line</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1592" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Line(This,Line) )</cpp:value></cpp:define> 

<cpp:define pos:line="1594" pos:column="1">#<cpp:directive pos:line="1594" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1594" pos:column="9">ErrorItem_get_Column</name><parameter_list pos:line="1594" pos:column="29">(<param><type><name pos:line="1594" pos:column="30">This</name></type></param>,<param><type><name pos:line="1594" pos:column="35">Column</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1595" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Column(This,Column) )</cpp:value></cpp:define> 

<cpp:define pos:line="1597" pos:column="1">#<cpp:directive pos:line="1597" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1597" pos:column="9">ErrorItem_get_Project</name><parameter_list pos:line="1597" pos:column="30">(<param><type><name pos:line="1597" pos:column="31">This</name></type></param>,<param><type><name pos:line="1597" pos:column="36">ProjectUniqueName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1598" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Project(This,ProjectUniqueName) )</cpp:value></cpp:define> 

<cpp:define pos:line="1600" pos:column="1">#<cpp:directive pos:line="1600" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1600" pos:column="9">ErrorItem_Navigate</name><parameter_list pos:line="1600" pos:column="27">(<param><type><name pos:line="1600" pos:column="28">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1601" pos:column="5">( (This)-&gt;lpVtbl -&gt; Navigate(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1603" pos:column="1">#<cpp:directive pos:line="1603" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1603" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1606" pos:column="1">#<cpp:directive pos:line="1606" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1606" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1611" pos:column="1">#<cpp:directive pos:line="1611" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1611" pos:column="9">/* __ErrorItem_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1614" pos:column="1">#<cpp:directive pos:line="1614" pos:column="2">ifndef</cpp:directive> <name pos:line="1614" pos:column="9">__ErrorList_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1615" pos:column="1">#<cpp:directive pos:line="1615" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1615" pos:column="9">__ErrorList_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1617" pos:column="1">/* interface ErrorList */</comment>
<comment type="block" pos:line="1618" pos:column="1">/* [helpstring][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="1621" pos:column="1">EXTERN_C</name> <specifier pos:line="1621" pos:column="10">const</specifier> <name pos:line="1621" pos:column="16">IID</name></type> <name pos:line="1621" pos:column="20">IID_ErrorList</name></decl>;</decl_stmt>

<cpp:if pos:line="1623" pos:column="1">#<cpp:directive pos:line="1623" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1623" pos:column="5">defined</name><argument_list pos:line="1623" pos:column="12">(<argument><expr><name pos:line="1623" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1623" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1623" pos:column="29">!</op:operator><call><name pos:line="1623" pos:column="30">defined</name><argument_list pos:line="1623" pos:column="37">(<argument><expr><name pos:line="1623" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1625" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1625" pos:column="19">(<argument pos:line="1625" pos:column="20">"7bf84ef1-8246-498a-a127-2ea37824fda1"</argument>)</argument_list></macro>
    <label><name pos:line="1626" pos:column="5">ErrorList</name> :</label> <expr_stmt><expr pos:line="1626" pos:column="17">public <name pos:line="1626" pos:column="24">IDispatch</name>
    <block pos:line="1627" pos:column="5">{
    <expr pos:line="1628" pos:column="5">public<op:operator pos:line="1628" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="1629" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1629" pos:column="81">HRESULT</name> <name pos:line="1629" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="1629" pos:column="107">get_DTE</name><argument_list pos:line="1629" pos:column="114">( 
            <comment type="block" pos:line="1630" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1630" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1630" pos:column="54">/* external definition not present */</comment> DTE **ppDTEObject</argument>)</argument_list></macro> <op:operator pos:line="1630" pos:column="111">=</op:operator> <lit:literal type="number" pos:line="1630" pos:column="113">0</lit:literal></expr>;
        
        <expr pos:line="1632" pos:column="9">virtual <comment type="block" pos:line="1632" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1632" pos:column="81">HRESULT</name> <name pos:line="1632" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="1632" pos:column="107">get_Parent</name><argument_list pos:line="1632" pos:column="117">( 
            <comment type="block" pos:line="1633" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1633" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1633" pos:column="54">/* external definition not present */</comment> Window **ppWindow</argument>)</argument_list></macro> <op:operator pos:line="1633" pos:column="111">=</op:operator> <lit:literal type="number" pos:line="1633" pos:column="113">0</lit:literal></expr>;
        
        <expr pos:line="1635" pos:column="9">virtual <comment type="block" pos:line="1635" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="1635" pos:column="49">HRESULT</name> <name pos:line="1635" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="1635" pos:column="75">get_ShowErrors</name><argument_list pos:line="1635" pos:column="89">( 
            <comment type="block" pos:line="1636" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1636" pos:column="33">__RPC__out VARIANT_BOOL *pShowErrors</argument>)</argument_list></macro> <op:operator pos:line="1636" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="1636" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="1638" pos:column="9">virtual <comment type="block" pos:line="1638" pos:column="17">/* [helpstring][propput][id] */</comment> <name pos:line="1638" pos:column="49">HRESULT</name> <name pos:line="1638" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="1638" pos:column="75">put_ShowErrors</name><argument_list pos:line="1638" pos:column="89">( 
            <argument pos:line="1639" pos:column="13">VARIANT_BOOL ShowErrors</argument>)</argument_list></macro> <op:operator pos:line="1639" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="1639" pos:column="40">0</lit:literal></expr>;
        
        <expr pos:line="1641" pos:column="9">virtual <comment type="block" pos:line="1641" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="1641" pos:column="49">HRESULT</name> <name pos:line="1641" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="1641" pos:column="75">get_ShowWarnings</name><argument_list pos:line="1641" pos:column="91">( 
            <comment type="block" pos:line="1642" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1642" pos:column="33">__RPC__out VARIANT_BOOL *pShowWarnings</argument>)</argument_list></macro> <op:operator pos:line="1642" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="1642" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="1644" pos:column="9">virtual <comment type="block" pos:line="1644" pos:column="17">/* [helpstring][propput][id] */</comment> <name pos:line="1644" pos:column="49">HRESULT</name> <name pos:line="1644" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="1644" pos:column="75">put_ShowWarnings</name><argument_list pos:line="1644" pos:column="91">( 
            <argument pos:line="1645" pos:column="13">VARIANT_BOOL ShowWarnings</argument>)</argument_list></macro> <op:operator pos:line="1645" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="1645" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="1647" pos:column="9">virtual <comment type="block" pos:line="1647" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="1647" pos:column="49">HRESULT</name> <name pos:line="1647" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="1647" pos:column="75">get_ShowMessages</name><argument_list pos:line="1647" pos:column="91">( 
            <comment type="block" pos:line="1648" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1648" pos:column="33">__RPC__out VARIANT_BOOL *pShowMessages</argument>)</argument_list></macro> <op:operator pos:line="1648" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="1648" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="1650" pos:column="9">virtual <comment type="block" pos:line="1650" pos:column="17">/* [helpstring][propput][id] */</comment> <name pos:line="1650" pos:column="49">HRESULT</name> <name pos:line="1650" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="1650" pos:column="75">put_ShowMessages</name><argument_list pos:line="1650" pos:column="91">( 
            <argument pos:line="1651" pos:column="13">VARIANT_BOOL ShowMessages</argument>)</argument_list></macro> <op:operator pos:line="1651" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="1651" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="1653" pos:column="9">virtual <comment type="block" pos:line="1653" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="1653" pos:column="49">HRESULT</name> <name pos:line="1653" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="1653" pos:column="75">get_ErrorItems</name><argument_list pos:line="1653" pos:column="89">( 
            <comment type="block" pos:line="1654" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1654" pos:column="33">__RPC__deref_out_opt ErrorItems **ppErrorItems</argument>)</argument_list></macro> <op:operator pos:line="1654" pos:column="81">=</op:operator> <lit:literal type="number" pos:line="1654" pos:column="83">0</lit:literal></expr>;
        
        <expr pos:line="1656" pos:column="9">virtual <comment type="block" pos:line="1656" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1656" pos:column="81">HRESULT</name> <name pos:line="1656" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="1656" pos:column="107">get_SelectedItems</name><argument_list pos:line="1656" pos:column="124">( 
            <comment type="block" pos:line="1657" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1657" pos:column="33">__RPC__out VARIANT *Selections</argument>)</argument_list></macro> <op:operator pos:line="1657" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="1657" pos:column="67">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1661" pos:column="1">#<cpp:directive pos:line="1661" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1661" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1663" pos:column="5">typedef <type><struct pos:line="1663" pos:column="13">struct <name pos:line="1663" pos:column="20">ErrorListVtbl</name>
    <block pos:line="1664" pos:column="5">{<public type="default" pos:line="1664" pos:column="6">
        <function_decl><type><name pos:line="1665" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1667" pos:column="9">HRESULT</name></type> ( <name pos:line="1667" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1667" pos:column="37">*</type:modifier><name pos:line="1667" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1667" pos:column="54">( 
            <param><decl><type><name pos:line="1668" pos:column="13">ErrorList</name> <type:modifier pos:line="1668" pos:column="23">*</type:modifier></type> <name pos:line="1668" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1669" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1669" pos:column="24">__RPC__in</name> <name pos:line="1669" pos:column="34">REFIID</name></type> <name pos:line="1669" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1670" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1671" pos:column="13">__RPC__deref_out</name>  <name pos:line="1671" pos:column="31">void</name> <type:modifier pos:line="1671" pos:column="36">*</type:modifier><type:modifier pos:line="1671" pos:column="37">*</type:modifier></type><name pos:line="1671" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1673" pos:column="9">ULONG</name></type> ( <name pos:line="1673" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1673" pos:column="35">*</type:modifier><name pos:line="1673" pos:column="36">AddRef</name> )<parameter_list pos:line="1673" pos:column="44">( 
            <param><decl><type><name pos:line="1674" pos:column="13">ErrorList</name> <type:modifier pos:line="1674" pos:column="23">*</type:modifier></type> <name pos:line="1674" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1676" pos:column="9">ULONG</name></type> ( <name pos:line="1676" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1676" pos:column="35">*</type:modifier><name pos:line="1676" pos:column="36">Release</name> )<parameter_list pos:line="1676" pos:column="45">( 
            <param><decl><type><name pos:line="1677" pos:column="13">ErrorList</name> <type:modifier pos:line="1677" pos:column="23">*</type:modifier></type> <name pos:line="1677" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1679" pos:column="9">HRESULT</name></type> ( <name pos:line="1679" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1679" pos:column="37">*</type:modifier><name pos:line="1679" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="1679" pos:column="56">( 
            <param><decl><type><name pos:line="1680" pos:column="13">ErrorList</name> <type:modifier pos:line="1680" pos:column="23">*</type:modifier></type> <name pos:line="1680" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1681" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1681" pos:column="25">__RPC__out</name> <name pos:line="1681" pos:column="36">UINT</name> <type:modifier pos:line="1681" pos:column="41">*</type:modifier></type><name pos:line="1681" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1683" pos:column="9">HRESULT</name></type> ( <name pos:line="1683" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1683" pos:column="37">*</type:modifier><name pos:line="1683" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="1683" pos:column="51">( 
            <param><decl><type><name pos:line="1684" pos:column="13">ErrorList</name> <type:modifier pos:line="1684" pos:column="23">*</type:modifier></type> <name pos:line="1684" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1685" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1685" pos:column="24">UINT</name></type> <name pos:line="1685" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="1686" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1686" pos:column="24">LCID</name></type> <name pos:line="1686" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="1687" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1687" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1687" pos:column="46">ITypeInfo</name> <type:modifier pos:line="1687" pos:column="56">*</type:modifier><type:modifier pos:line="1687" pos:column="57">*</type:modifier></type><name pos:line="1687" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1689" pos:column="9">HRESULT</name> <argument_list pos:line="1689" pos:column="17">( <argument pos:line="1689" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1689" pos:column="53">(</op:operator> 
            <name pos:line="1690" pos:column="13">ErrorList</name> <op:operator pos:line="1690" pos:column="23">*</op:operator> <name pos:line="1690" pos:column="25">This</name><op:operator pos:line="1690" pos:column="29">,</op:operator>
            <comment type="block" pos:line="1691" pos:column="13">/* [in] */</comment> <name pos:line="1691" pos:column="24">__RPC__in</name> <name pos:line="1691" pos:column="34">REFIID</name> <name pos:line="1691" pos:column="41">riid</name><op:operator pos:line="1691" pos:column="45">,</op:operator>
            <comment type="block" pos:line="1692" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1692" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1692" pos:column="54">(<argument pos:line="1692" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="1692" pos:column="63">LPOLESTR</name> <op:operator pos:line="1692" pos:column="72">*</op:operator><name pos:line="1692" pos:column="73">rgszNames</name><op:operator pos:line="1692" pos:column="82">,</op:operator>
            <comment type="block" pos:line="1693" pos:column="13">/* [range][in] */</comment> <name pos:line="1693" pos:column="31">UINT</name> <name pos:line="1693" pos:column="36">cNames</name><op:operator pos:line="1693" pos:column="42">,</op:operator>
            <comment type="block" pos:line="1694" pos:column="13">/* [in] */</comment> <name pos:line="1694" pos:column="24">LCID</name> <name pos:line="1694" pos:column="29">lcid</name><op:operator pos:line="1694" pos:column="33">,</op:operator>
            <comment type="block" pos:line="1695" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="1695" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="1695" pos:column="56">(<argument pos:line="1695" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="1695" pos:column="65">DISPID</name> <op:operator pos:line="1695" pos:column="72">*</op:operator><name pos:line="1695" pos:column="73">rgDispId</name><op:operator pos:line="1695" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="1697" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="1697" pos:column="23">HRESULT</name></type> ( <name pos:line="1697" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="1697" pos:column="51">*</type:modifier><name pos:line="1697" pos:column="52">Invoke</name> )<parameter_list pos:line="1697" pos:column="60">( 
            <param><decl><type><name pos:line="1698" pos:column="13">ErrorList</name> <type:modifier pos:line="1698" pos:column="23">*</type:modifier></type> <name pos:line="1698" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1699" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1699" pos:column="24">DISPID</name></type> <name pos:line="1699" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="1700" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1700" pos:column="24">REFIID</name></type> <name pos:line="1700" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1701" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1701" pos:column="24">LCID</name></type> <name pos:line="1701" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="1702" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1702" pos:column="24">WORD</name></type> <name pos:line="1702" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="1703" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="1703" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="1703" pos:column="40">*</type:modifier></type><name pos:line="1703" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="1704" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1704" pos:column="25">VARIANT</name> <type:modifier pos:line="1704" pos:column="33">*</type:modifier></type><name pos:line="1704" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="1705" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1705" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="1705" pos:column="35">*</type:modifier></type><name pos:line="1705" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="1706" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1706" pos:column="25">UINT</name> <type:modifier pos:line="1706" pos:column="30">*</type:modifier></type><name pos:line="1706" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1708" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1708" pos:column="73">HRESULT</name></type> ( <name pos:line="1708" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="1708" pos:column="101">*</type:modifier><name pos:line="1708" pos:column="102">get_DTE</name> )<parameter_list pos:line="1708" pos:column="111">( 
            <param><decl><type><name pos:line="1709" pos:column="13">ErrorList</name> <type:modifier pos:line="1709" pos:column="23">*</type:modifier></type> <name pos:line="1709" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1710" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1710" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="1710" pos:column="54">/* external definition not present */</comment> <name pos:line="1710" pos:column="92">DTE</name> <type:modifier pos:line="1710" pos:column="96">*</type:modifier><type:modifier pos:line="1710" pos:column="97">*</type:modifier></type><name pos:line="1710" pos:column="98">ppDTEObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1712" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1712" pos:column="73">HRESULT</name></type> ( <name pos:line="1712" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="1712" pos:column="101">*</type:modifier><name pos:line="1712" pos:column="102">get_Parent</name> )<parameter_list pos:line="1712" pos:column="114">( 
            <param><decl><type><name pos:line="1713" pos:column="13">ErrorList</name> <type:modifier pos:line="1713" pos:column="23">*</type:modifier></type> <name pos:line="1713" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1714" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1714" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="1714" pos:column="54">/* external definition not present */</comment> <name pos:line="1714" pos:column="92">Window</name> <type:modifier pos:line="1714" pos:column="99">*</type:modifier><type:modifier pos:line="1714" pos:column="100">*</type:modifier></type><name pos:line="1714" pos:column="101">ppWindow</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1716" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="1716" pos:column="41">HRESULT</name></type> ( <name pos:line="1716" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="1716" pos:column="69">*</type:modifier><name pos:line="1716" pos:column="70">get_ShowErrors</name> )<parameter_list pos:line="1716" pos:column="86">( 
            <param><decl><type><name pos:line="1717" pos:column="13">ErrorList</name> <type:modifier pos:line="1717" pos:column="23">*</type:modifier></type> <name pos:line="1717" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1718" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1718" pos:column="33">__RPC__out</name> <name pos:line="1718" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="1718" pos:column="57">*</type:modifier></type><name pos:line="1718" pos:column="58">pShowErrors</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1720" pos:column="9">/* [helpstring][propput][id] */</comment> <function_decl><type><name pos:line="1720" pos:column="41">HRESULT</name></type> ( <name pos:line="1720" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="1720" pos:column="69">*</type:modifier><name pos:line="1720" pos:column="70">put_ShowErrors</name> )<parameter_list pos:line="1720" pos:column="86">( 
            <param><decl><type><name pos:line="1721" pos:column="13">ErrorList</name> <type:modifier pos:line="1721" pos:column="23">*</type:modifier></type> <name pos:line="1721" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="1722" pos:column="13">VARIANT_BOOL</name></type> <name pos:line="1722" pos:column="26">ShowErrors</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1724" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="1724" pos:column="41">HRESULT</name></type> ( <name pos:line="1724" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="1724" pos:column="69">*</type:modifier><name pos:line="1724" pos:column="70">get_ShowWarnings</name> )<parameter_list pos:line="1724" pos:column="88">( 
            <param><decl><type><name pos:line="1725" pos:column="13">ErrorList</name> <type:modifier pos:line="1725" pos:column="23">*</type:modifier></type> <name pos:line="1725" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1726" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1726" pos:column="33">__RPC__out</name> <name pos:line="1726" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="1726" pos:column="57">*</type:modifier></type><name pos:line="1726" pos:column="58">pShowWarnings</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1728" pos:column="9">/* [helpstring][propput][id] */</comment> <function_decl><type><name pos:line="1728" pos:column="41">HRESULT</name></type> ( <name pos:line="1728" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="1728" pos:column="69">*</type:modifier><name pos:line="1728" pos:column="70">put_ShowWarnings</name> )<parameter_list pos:line="1728" pos:column="88">( 
            <param><decl><type><name pos:line="1729" pos:column="13">ErrorList</name> <type:modifier pos:line="1729" pos:column="23">*</type:modifier></type> <name pos:line="1729" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="1730" pos:column="13">VARIANT_BOOL</name></type> <name pos:line="1730" pos:column="26">ShowWarnings</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1732" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="1732" pos:column="41">HRESULT</name></type> ( <name pos:line="1732" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="1732" pos:column="69">*</type:modifier><name pos:line="1732" pos:column="70">get_ShowMessages</name> )<parameter_list pos:line="1732" pos:column="88">( 
            <param><decl><type><name pos:line="1733" pos:column="13">ErrorList</name> <type:modifier pos:line="1733" pos:column="23">*</type:modifier></type> <name pos:line="1733" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1734" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1734" pos:column="33">__RPC__out</name> <name pos:line="1734" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="1734" pos:column="57">*</type:modifier></type><name pos:line="1734" pos:column="58">pShowMessages</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1736" pos:column="9">/* [helpstring][propput][id] */</comment> <function_decl><type><name pos:line="1736" pos:column="41">HRESULT</name></type> ( <name pos:line="1736" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="1736" pos:column="69">*</type:modifier><name pos:line="1736" pos:column="70">put_ShowMessages</name> )<parameter_list pos:line="1736" pos:column="88">( 
            <param><decl><type><name pos:line="1737" pos:column="13">ErrorList</name> <type:modifier pos:line="1737" pos:column="23">*</type:modifier></type> <name pos:line="1737" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="1738" pos:column="13">VARIANT_BOOL</name></type> <name pos:line="1738" pos:column="26">ShowMessages</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1740" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="1740" pos:column="41">HRESULT</name></type> ( <name pos:line="1740" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="1740" pos:column="69">*</type:modifier><name pos:line="1740" pos:column="70">get_ErrorItems</name> )<parameter_list pos:line="1740" pos:column="86">( 
            <param><decl><type><name pos:line="1741" pos:column="13">ErrorList</name> <type:modifier pos:line="1741" pos:column="23">*</type:modifier></type> <name pos:line="1741" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1742" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1742" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1742" pos:column="54">ErrorItems</name> <type:modifier pos:line="1742" pos:column="65">*</type:modifier><type:modifier pos:line="1742" pos:column="66">*</type:modifier></type><name pos:line="1742" pos:column="67">ppErrorItems</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1744" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1744" pos:column="73">HRESULT</name></type> ( <name pos:line="1744" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="1744" pos:column="101">*</type:modifier><name pos:line="1744" pos:column="102">get_SelectedItems</name> )<parameter_list pos:line="1744" pos:column="121">( 
            <param><decl><type><name pos:line="1745" pos:column="13">ErrorList</name> <type:modifier pos:line="1745" pos:column="23">*</type:modifier></type> <name pos:line="1745" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="1746" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1746" pos:column="33">__RPC__out</name> <name pos:line="1746" pos:column="44">VARIANT</name> <type:modifier pos:line="1746" pos:column="52">*</type:modifier></type><name pos:line="1746" pos:column="53">Selections</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1748" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="1749" pos:column="7">ErrorListVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="1751" pos:column="5">interface</name></type> <name pos:line="1751" pos:column="15">ErrorList</name>
    <argument_list pos:line="1752" pos:column="5">{
        <argument><expr><name pos:line="1753" pos:column="9">CONST_VTBL</name> struct <name pos:line="1753" pos:column="27">ErrorListVtbl</name> <op:operator pos:line="1753" pos:column="41">*</op:operator><name pos:line="1753" pos:column="42">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="1758" pos:column="1">#<cpp:directive pos:line="1758" pos:column="2">ifdef</cpp:directive> <name pos:line="1758" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="1761" pos:column="1">#<cpp:directive pos:line="1761" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1761" pos:column="9">ErrorList_QueryInterface</name><parameter_list pos:line="1761" pos:column="33">(<param><type><name pos:line="1761" pos:column="34">This</name></type></param>,<param><type><name pos:line="1761" pos:column="39">riid</name></type></param>,<param><type><name pos:line="1761" pos:column="44">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1762" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1764" pos:column="1">#<cpp:directive pos:line="1764" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1764" pos:column="9">ErrorList_AddRef</name><parameter_list pos:line="1764" pos:column="25">(<param><type><name pos:line="1764" pos:column="26">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1765" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="1767" pos:column="1">#<cpp:directive pos:line="1767" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1767" pos:column="9">ErrorList_Release</name><parameter_list pos:line="1767" pos:column="26">(<param><type><name pos:line="1767" pos:column="27">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1768" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="1771" pos:column="1">#<cpp:directive pos:line="1771" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1771" pos:column="9">ErrorList_GetTypeInfoCount</name><parameter_list pos:line="1771" pos:column="35">(<param><type><name pos:line="1771" pos:column="36">This</name></type></param>,<param><type><name pos:line="1771" pos:column="41">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1772" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="1774" pos:column="1">#<cpp:directive pos:line="1774" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1774" pos:column="9">ErrorList_GetTypeInfo</name><parameter_list pos:line="1774" pos:column="30">(<param><type><name pos:line="1774" pos:column="31">This</name></type></param>,<param><type><name pos:line="1774" pos:column="36">iTInfo</name></type></param>,<param><type><name pos:line="1774" pos:column="43">lcid</name></type></param>,<param><type><name pos:line="1774" pos:column="48">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1775" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="1777" pos:column="1">#<cpp:directive pos:line="1777" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1777" pos:column="9">ErrorList_GetIDsOfNames</name><parameter_list pos:line="1777" pos:column="32">(<param><type><name pos:line="1777" pos:column="33">This</name></type></param>,<param><type><name pos:line="1777" pos:column="38">riid</name></type></param>,<param><type><name pos:line="1777" pos:column="43">rgszNames</name></type></param>,<param><type><name pos:line="1777" pos:column="53">cNames</name></type></param>,<param><type><name pos:line="1777" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="1777" pos:column="65">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1778" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="1780" pos:column="1">#<cpp:directive pos:line="1780" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1780" pos:column="9">ErrorList_Invoke</name><parameter_list pos:line="1780" pos:column="25">(<param><type><name pos:line="1780" pos:column="26">This</name></type></param>,<param><type><name pos:line="1780" pos:column="31">dispIdMember</name></type></param>,<param><type><name pos:line="1780" pos:column="44">riid</name></type></param>,<param><type><name pos:line="1780" pos:column="49">lcid</name></type></param>,<param><type><name pos:line="1780" pos:column="54">wFlags</name></type></param>,<param><type><name pos:line="1780" pos:column="61">pDispParams</name></type></param>,<param><type><name pos:line="1780" pos:column="73">pVarResult</name></type></param>,<param><type><name pos:line="1780" pos:column="84">pExcepInfo</name></type></param>,<param><type><name pos:line="1780" pos:column="95">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1781" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="1784" pos:column="1">#<cpp:directive pos:line="1784" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1784" pos:column="9">ErrorList_get_DTE</name><parameter_list pos:line="1784" pos:column="26">(<param><type><name pos:line="1784" pos:column="27">This</name></type></param>,<param><type><name pos:line="1784" pos:column="32">ppDTEObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1785" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,ppDTEObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="1787" pos:column="1">#<cpp:directive pos:line="1787" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1787" pos:column="9">ErrorList_get_Parent</name><parameter_list pos:line="1787" pos:column="29">(<param><type><name pos:line="1787" pos:column="30">This</name></type></param>,<param><type><name pos:line="1787" pos:column="35">ppWindow</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1788" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,ppWindow) )</cpp:value></cpp:define> 

<cpp:define pos:line="1790" pos:column="1">#<cpp:directive pos:line="1790" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1790" pos:column="9">ErrorList_get_ShowErrors</name><parameter_list pos:line="1790" pos:column="33">(<param><type><name pos:line="1790" pos:column="34">This</name></type></param>,<param><type><name pos:line="1790" pos:column="39">pShowErrors</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1791" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ShowErrors(This,pShowErrors) )</cpp:value></cpp:define> 

<cpp:define pos:line="1793" pos:column="1">#<cpp:directive pos:line="1793" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1793" pos:column="9">ErrorList_put_ShowErrors</name><parameter_list pos:line="1793" pos:column="33">(<param><type><name pos:line="1793" pos:column="34">This</name></type></param>,<param><type><name pos:line="1793" pos:column="39">ShowErrors</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1794" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_ShowErrors(This,ShowErrors) )</cpp:value></cpp:define> 

<cpp:define pos:line="1796" pos:column="1">#<cpp:directive pos:line="1796" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1796" pos:column="9">ErrorList_get_ShowWarnings</name><parameter_list pos:line="1796" pos:column="35">(<param><type><name pos:line="1796" pos:column="36">This</name></type></param>,<param><type><name pos:line="1796" pos:column="41">pShowWarnings</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1797" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ShowWarnings(This,pShowWarnings) )</cpp:value></cpp:define> 

<cpp:define pos:line="1799" pos:column="1">#<cpp:directive pos:line="1799" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1799" pos:column="9">ErrorList_put_ShowWarnings</name><parameter_list pos:line="1799" pos:column="35">(<param><type><name pos:line="1799" pos:column="36">This</name></type></param>,<param><type><name pos:line="1799" pos:column="41">ShowWarnings</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1800" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_ShowWarnings(This,ShowWarnings) )</cpp:value></cpp:define> 

<cpp:define pos:line="1802" pos:column="1">#<cpp:directive pos:line="1802" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1802" pos:column="9">ErrorList_get_ShowMessages</name><parameter_list pos:line="1802" pos:column="35">(<param><type><name pos:line="1802" pos:column="36">This</name></type></param>,<param><type><name pos:line="1802" pos:column="41">pShowMessages</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1803" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ShowMessages(This,pShowMessages) )</cpp:value></cpp:define> 

<cpp:define pos:line="1805" pos:column="1">#<cpp:directive pos:line="1805" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1805" pos:column="9">ErrorList_put_ShowMessages</name><parameter_list pos:line="1805" pos:column="35">(<param><type><name pos:line="1805" pos:column="36">This</name></type></param>,<param><type><name pos:line="1805" pos:column="41">ShowMessages</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1806" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_ShowMessages(This,ShowMessages) )</cpp:value></cpp:define> 

<cpp:define pos:line="1808" pos:column="1">#<cpp:directive pos:line="1808" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1808" pos:column="9">ErrorList_get_ErrorItems</name><parameter_list pos:line="1808" pos:column="33">(<param><type><name pos:line="1808" pos:column="34">This</name></type></param>,<param><type><name pos:line="1808" pos:column="39">ppErrorItems</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1809" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ErrorItems(This,ppErrorItems) )</cpp:value></cpp:define> 

<cpp:define pos:line="1811" pos:column="1">#<cpp:directive pos:line="1811" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1811" pos:column="9">ErrorList_get_SelectedItems</name><parameter_list pos:line="1811" pos:column="36">(<param><type><name pos:line="1811" pos:column="37">This</name></type></param>,<param><type><name pos:line="1811" pos:column="42">Selections</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="1812" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SelectedItems(This,Selections) )</cpp:value></cpp:define> 

<cpp:endif pos:line="1814" pos:column="1">#<cpp:directive pos:line="1814" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="1814" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="1817" pos:column="1">#<cpp:directive pos:line="1817" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1817" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="1822" pos:column="1">#<cpp:directive pos:line="1822" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="1822" pos:column="9">/* __ErrorList_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="1825" pos:column="1">#<cpp:directive pos:line="1825" pos:column="2">ifndef</cpp:directive> <name pos:line="1825" pos:column="9">__CodeAttributeArgument_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="1826" pos:column="1">#<cpp:directive pos:line="1826" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="1826" pos:column="9">__CodeAttributeArgument_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="1828" pos:column="1">/* interface CodeAttributeArgument */</comment>
<comment type="block" pos:line="1829" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="1832" pos:column="1">EXTERN_C</name> <specifier pos:line="1832" pos:column="10">const</specifier> <name pos:line="1832" pos:column="16">IID</name></type> <name pos:line="1832" pos:column="20">IID_CodeAttributeArgument</name></decl>;</decl_stmt>

<cpp:if pos:line="1834" pos:column="1">#<cpp:directive pos:line="1834" pos:column="2">if</cpp:directive> <expr><call><name pos:line="1834" pos:column="5">defined</name><argument_list pos:line="1834" pos:column="12">(<argument><expr><name pos:line="1834" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="1834" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1834" pos:column="29">!</op:operator><call><name pos:line="1834" pos:column="30">defined</name><argument_list pos:line="1834" pos:column="37">(<argument><expr><name pos:line="1834" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="1836" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="1836" pos:column="19">(<argument pos:line="1836" pos:column="20">"80F4779B-835D-4873-8356-2F34A759A514"</argument>)</argument_list></macro>
    <label><name pos:line="1837" pos:column="5">CodeAttributeArgument</name> :</label> <expr_stmt><expr pos:line="1837" pos:column="29">public <name pos:line="1837" pos:column="36">IDispatch</name>
    <block pos:line="1838" pos:column="5">{
    <expr pos:line="1839" pos:column="5">public<op:operator pos:line="1839" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="1840" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1840" pos:column="95">HRESULT</name> <name pos:line="1840" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="1840" pos:column="121">get_DTE</name><argument_list pos:line="1840" pos:column="128">( 
            <comment type="block" pos:line="1841" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1841" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1841" pos:column="54">/* external definition not present */</comment> DTE **DTEObject</argument>)</argument_list></macro> <op:operator pos:line="1841" pos:column="109">=</op:operator> <lit:literal type="number" pos:line="1841" pos:column="111">0</lit:literal></expr>;
        
        <expr pos:line="1843" pos:column="9">virtual <comment type="block" pos:line="1843" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1843" pos:column="95">HRESULT</name> <name pos:line="1843" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="1843" pos:column="121">get_Collection</name><argument_list pos:line="1843" pos:column="135">( 
            <comment type="block" pos:line="1844" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1844" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1844" pos:column="54">/* external definition not present */</comment> CodeElements **ppCollection</argument>)</argument_list></macro> <op:operator pos:line="1844" pos:column="121">=</op:operator> <lit:literal type="number" pos:line="1844" pos:column="123">0</lit:literal></expr>;
        
        <expr pos:line="1846" pos:column="9">virtual <comment type="block" pos:line="1846" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1846" pos:column="81">HRESULT</name> <name pos:line="1846" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="1846" pos:column="107">get_Name</name><argument_list pos:line="1846" pos:column="115">( 
            <comment type="block" pos:line="1847" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1847" pos:column="33">__RPC__deref_out_opt BSTR *pVal</argument>)</argument_list></macro> <op:operator pos:line="1847" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="1847" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="1849" pos:column="9">virtual <comment type="block" pos:line="1849" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="1849" pos:column="81">HRESULT</name> <name pos:line="1849" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="1849" pos:column="107">put_Name</name><argument_list pos:line="1849" pos:column="115">( 
            <argument pos:line="1850" pos:column="13">__RPC__in BSTR NewName</argument>)</argument_list></macro> <op:operator pos:line="1850" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="1850" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="1852" pos:column="9">virtual <comment type="block" pos:line="1852" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1852" pos:column="81">HRESULT</name> <name pos:line="1852" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="1852" pos:column="107">get_FullName</name><argument_list pos:line="1852" pos:column="119">( 
            <comment type="block" pos:line="1853" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1853" pos:column="33">__RPC__deref_out_opt BSTR *pVal</argument>)</argument_list></macro> <op:operator pos:line="1853" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="1853" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="1855" pos:column="9">virtual <comment type="block" pos:line="1855" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1855" pos:column="95">HRESULT</name> <name pos:line="1855" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="1855" pos:column="121">get_ProjectItem</name><argument_list pos:line="1855" pos:column="136">( 
            <comment type="block" pos:line="1856" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1856" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1856" pos:column="54">/* external definition not present */</comment> ProjectItem **pProjItem</argument>)</argument_list></macro> <op:operator pos:line="1856" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="1856" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="1858" pos:column="9">virtual <comment type="block" pos:line="1858" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1858" pos:column="95">HRESULT</name> <name pos:line="1858" pos:column="103">STDMETHODCALLTYPE</name> <call><name pos:line="1858" pos:column="121">get_Kind</name><argument_list pos:line="1858" pos:column="129">( 
            <comment type="block" pos:line="1859" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="1859" pos:column="33">__RPC__out</name> enum <comment type="block" pos:line="1859" pos:column="49">/* external definition not present */</comment> <name pos:line="1859" pos:column="87">vsCMElement</name> <op:operator pos:line="1859" pos:column="99">*</op:operator><name pos:line="1859" pos:column="100">pCodeEltKind</name></expr></argument>)</argument_list></call> <op:operator pos:line="1859" pos:column="114">=</op:operator> <lit:literal type="number" pos:line="1859" pos:column="116">0</lit:literal></expr>;
        
        <expr pos:line="1861" pos:column="9">virtual <comment type="block" pos:line="1861" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1861" pos:column="95">HRESULT</name> <name pos:line="1861" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="1861" pos:column="121">get_IsCodeType</name><argument_list pos:line="1861" pos:column="135">( 
            <comment type="block" pos:line="1862" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1862" pos:column="33">__RPC__out VARIANT_BOOL *pIsCodeType</argument>)</argument_list></macro> <op:operator pos:line="1862" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="1862" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="1864" pos:column="9">virtual <comment type="block" pos:line="1864" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1864" pos:column="95">HRESULT</name> <name pos:line="1864" pos:column="103">STDMETHODCALLTYPE</name> <call><name pos:line="1864" pos:column="121">get_InfoLocation</name><argument_list pos:line="1864" pos:column="137">( 
            <comment type="block" pos:line="1865" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="1865" pos:column="33">__RPC__out</name> enum <comment type="block" pos:line="1865" pos:column="49">/* external definition not present */</comment> <name pos:line="1865" pos:column="87">vsCMInfoLocation</name> <op:operator pos:line="1865" pos:column="104">*</op:operator><name pos:line="1865" pos:column="105">pInfoLocation</name></expr></argument>)</argument_list></call> <op:operator pos:line="1865" pos:column="120">=</op:operator> <lit:literal type="number" pos:line="1865" pos:column="122">0</lit:literal></expr>;
        
        <expr pos:line="1867" pos:column="9">virtual <comment type="block" pos:line="1867" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1867" pos:column="95">HRESULT</name> <name pos:line="1867" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="1867" pos:column="121">get_Children</name><argument_list pos:line="1867" pos:column="133">( 
            <comment type="block" pos:line="1868" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1868" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1868" pos:column="54">/* external definition not present */</comment> CodeElements **ppCodeElements</argument>)</argument_list></macro> <op:operator pos:line="1868" pos:column="123">=</op:operator> <lit:literal type="number" pos:line="1868" pos:column="125">0</lit:literal></expr>;
        
        <expr pos:line="1870" pos:column="9">virtual <comment type="block" pos:line="1870" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1870" pos:column="95">HRESULT</name> <name pos:line="1870" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="1870" pos:column="121">get_Language</name><argument_list pos:line="1870" pos:column="133">( 
            <comment type="block" pos:line="1871" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1871" pos:column="33">__RPC__deref_out_opt BSTR *pLanguage</argument>)</argument_list></macro> <op:operator pos:line="1871" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="1871" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="1873" pos:column="9">virtual <comment type="block" pos:line="1873" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1873" pos:column="95">HRESULT</name> <name pos:line="1873" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="1873" pos:column="121">get_StartPoint</name><argument_list pos:line="1873" pos:column="135">( 
            <comment type="block" pos:line="1874" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1874" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1874" pos:column="54">/* external definition not present */</comment> TextPoint **ppTextPoint</argument>)</argument_list></macro> <op:operator pos:line="1874" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="1874" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="1876" pos:column="9">virtual <comment type="block" pos:line="1876" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1876" pos:column="95">HRESULT</name> <name pos:line="1876" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="1876" pos:column="121">get_EndPoint</name><argument_list pos:line="1876" pos:column="133">( 
            <comment type="block" pos:line="1877" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1877" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1877" pos:column="54">/* external definition not present */</comment> TextPoint **ppTextPoint</argument>)</argument_list></macro> <op:operator pos:line="1877" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="1877" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="1879" pos:column="9">virtual <comment type="block" pos:line="1879" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */</comment> <name pos:line="1879" pos:column="95">HRESULT</name> <name pos:line="1879" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="1879" pos:column="121">get_ExtenderNames</name><argument_list pos:line="1879" pos:column="138">( 
            <comment type="block" pos:line="1880" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1880" pos:column="33">__RPC__out VARIANT *ExtenderNames</argument>)</argument_list></macro> <op:operator pos:line="1880" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="1880" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="1882" pos:column="9">virtual <comment type="block" pos:line="1882" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */</comment> <name pos:line="1882" pos:column="95">HRESULT</name> <name pos:line="1882" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="1882" pos:column="121">get_Extender</name><argument_list pos:line="1882" pos:column="133">( 
            <argument pos:line="1883" pos:column="13">__RPC__in BSTR ExtenderName</argument>,
            <comment type="block" pos:line="1884" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1884" pos:column="33">__RPC__deref_out_opt IDispatch **Extender</argument>)</argument_list></macro> <op:operator pos:line="1884" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="1884" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="1886" pos:column="9">virtual <comment type="block" pos:line="1886" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */</comment> <name pos:line="1886" pos:column="95">HRESULT</name> <name pos:line="1886" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="1886" pos:column="121">get_ExtenderCATID</name><argument_list pos:line="1886" pos:column="138">( 
            <comment type="block" pos:line="1887" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1887" pos:column="33">__RPC__deref_out_opt BSTR *pRetval</argument>)</argument_list></macro> <op:operator pos:line="1887" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="1887" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="1889" pos:column="9">virtual <comment type="block" pos:line="1889" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="1889" pos:column="86">HRESULT</name> <name pos:line="1889" pos:column="94">STDMETHODCALLTYPE</name> <macro><name pos:line="1889" pos:column="112">GetStartPoint</name><argument_list pos:line="1889" pos:column="125">( 
            <comment type="block" pos:line="1890" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="1890" pos:column="38">enum <comment type="block" pos:line="1890" pos:column="43">/* external definition not present */</comment> vsCMPart Part</argument>,
            <comment type="block" pos:line="1891" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1891" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1891" pos:column="54">/* external definition not present */</comment> TextPoint **ppTextPoint</argument>)</argument_list></macro> <op:operator pos:line="1891" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="1891" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="1893" pos:column="9">virtual <comment type="block" pos:line="1893" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="1893" pos:column="86">HRESULT</name> <name pos:line="1893" pos:column="94">STDMETHODCALLTYPE</name> <macro><name pos:line="1893" pos:column="112">GetEndPoint</name><argument_list pos:line="1893" pos:column="123">( 
            <comment type="block" pos:line="1894" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="1894" pos:column="38">enum <comment type="block" pos:line="1894" pos:column="43">/* external definition not present */</comment> vsCMPart Part</argument>,
            <comment type="block" pos:line="1895" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1895" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="1895" pos:column="54">/* external definition not present */</comment> TextPoint **ppTextPoint</argument>)</argument_list></macro> <op:operator pos:line="1895" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="1895" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="1897" pos:column="9">virtual <comment type="block" pos:line="1897" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="1897" pos:column="81">HRESULT</name> <name pos:line="1897" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="1897" pos:column="107">get_Value</name><argument_list pos:line="1897" pos:column="116">( 
            <comment type="block" pos:line="1898" pos:column="13">/* [retval][out] */</comment> <argument pos:line="1898" pos:column="33">__RPC__deref_out_opt BSTR *value</argument>)</argument_list></macro> <op:operator pos:line="1898" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="1898" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="1900" pos:column="9">virtual <comment type="block" pos:line="1900" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="1900" pos:column="81">HRESULT</name> <name pos:line="1900" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="1900" pos:column="107">put_Value</name><argument_list pos:line="1900" pos:column="116">( 
            <argument pos:line="1901" pos:column="13">__RPC__in BSTR value</argument>)</argument_list></macro> <op:operator pos:line="1901" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="1901" pos:column="37">0</lit:literal></expr>;
        
        <expr pos:line="1903" pos:column="9">virtual <comment type="block" pos:line="1903" pos:column="17">/* [helpstring][id] */</comment> <name pos:line="1903" pos:column="40">HRESULT</name> <name pos:line="1903" pos:column="48">STDMETHODCALLTYPE</name> <call><name pos:line="1903" pos:column="66">Delete</name><argument_list pos:line="1903" pos:column="72">( <argument><expr><name pos:line="1903" pos:column="74">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="1903" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="1903" pos:column="82">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="1907" pos:column="1">#<cpp:directive pos:line="1907" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="1907" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="1909" pos:column="5">typedef <type><struct pos:line="1909" pos:column="13">struct <name pos:line="1909" pos:column="20">CodeAttributeArgumentVtbl</name>
    <block pos:line="1910" pos:column="5">{<public type="default" pos:line="1910" pos:column="6">
        <function_decl><type><name pos:line="1911" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="1913" pos:column="9">HRESULT</name></type> ( <name pos:line="1913" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1913" pos:column="37">*</type:modifier><name pos:line="1913" pos:column="38">QueryInterface</name> )<parameter_list pos:line="1913" pos:column="54">( 
            <param><decl><type><name pos:line="1914" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1914" pos:column="35">*</type:modifier></type> <name pos:line="1914" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1915" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1915" pos:column="24">__RPC__in</name> <name pos:line="1915" pos:column="34">REFIID</name></type> <name pos:line="1915" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="1916" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="1917" pos:column="13">__RPC__deref_out</name>  <name pos:line="1917" pos:column="31">void</name> <type:modifier pos:line="1917" pos:column="36">*</type:modifier><type:modifier pos:line="1917" pos:column="37">*</type:modifier></type><name pos:line="1917" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1919" pos:column="9">ULONG</name></type> ( <name pos:line="1919" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1919" pos:column="35">*</type:modifier><name pos:line="1919" pos:column="36">AddRef</name> )<parameter_list pos:line="1919" pos:column="44">( 
            <param><decl><type><name pos:line="1920" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1920" pos:column="35">*</type:modifier></type> <name pos:line="1920" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1922" pos:column="9">ULONG</name></type> ( <name pos:line="1922" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="1922" pos:column="35">*</type:modifier><name pos:line="1922" pos:column="36">Release</name> )<parameter_list pos:line="1922" pos:column="45">( 
            <param><decl><type><name pos:line="1923" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1923" pos:column="35">*</type:modifier></type> <name pos:line="1923" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1925" pos:column="9">HRESULT</name></type> ( <name pos:line="1925" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1925" pos:column="37">*</type:modifier><name pos:line="1925" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="1925" pos:column="56">( 
            <param><decl><type><name pos:line="1926" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1926" pos:column="35">*</type:modifier></type> <name pos:line="1926" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1927" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1927" pos:column="25">__RPC__out</name> <name pos:line="1927" pos:column="36">UINT</name> <type:modifier pos:line="1927" pos:column="41">*</type:modifier></type><name pos:line="1927" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="1929" pos:column="9">HRESULT</name></type> ( <name pos:line="1929" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="1929" pos:column="37">*</type:modifier><name pos:line="1929" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="1929" pos:column="51">( 
            <param><decl><type><name pos:line="1930" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1930" pos:column="35">*</type:modifier></type> <name pos:line="1930" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1931" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1931" pos:column="24">UINT</name></type> <name pos:line="1931" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="1932" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1932" pos:column="24">LCID</name></type> <name pos:line="1932" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="1933" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1933" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="1933" pos:column="46">ITypeInfo</name> <type:modifier pos:line="1933" pos:column="56">*</type:modifier><type:modifier pos:line="1933" pos:column="57">*</type:modifier></type><name pos:line="1933" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="1935" pos:column="9">HRESULT</name> <argument_list pos:line="1935" pos:column="17">( <argument pos:line="1935" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1935" pos:column="53">(</op:operator> 
            <name pos:line="1936" pos:column="13">CodeAttributeArgument</name> <op:operator pos:line="1936" pos:column="35">*</op:operator> <name pos:line="1936" pos:column="37">This</name><op:operator pos:line="1936" pos:column="41">,</op:operator>
            <comment type="block" pos:line="1937" pos:column="13">/* [in] */</comment> <name pos:line="1937" pos:column="24">__RPC__in</name> <name pos:line="1937" pos:column="34">REFIID</name> <name pos:line="1937" pos:column="41">riid</name><op:operator pos:line="1937" pos:column="45">,</op:operator>
            <comment type="block" pos:line="1938" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="1938" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="1938" pos:column="54">(<argument pos:line="1938" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="1938" pos:column="63">LPOLESTR</name> <op:operator pos:line="1938" pos:column="72">*</op:operator><name pos:line="1938" pos:column="73">rgszNames</name><op:operator pos:line="1938" pos:column="82">,</op:operator>
            <comment type="block" pos:line="1939" pos:column="13">/* [range][in] */</comment> <name pos:line="1939" pos:column="31">UINT</name> <name pos:line="1939" pos:column="36">cNames</name><op:operator pos:line="1939" pos:column="42">,</op:operator>
            <comment type="block" pos:line="1940" pos:column="13">/* [in] */</comment> <name pos:line="1940" pos:column="24">LCID</name> <name pos:line="1940" pos:column="29">lcid</name><op:operator pos:line="1940" pos:column="33">,</op:operator>
            <comment type="block" pos:line="1941" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="1941" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="1941" pos:column="56">(<argument pos:line="1941" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="1941" pos:column="65">DISPID</name> <op:operator pos:line="1941" pos:column="72">*</op:operator><name pos:line="1941" pos:column="73">rgDispId</name><op:operator pos:line="1941" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="1943" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="1943" pos:column="23">HRESULT</name></type> ( <name pos:line="1943" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="1943" pos:column="51">*</type:modifier><name pos:line="1943" pos:column="52">Invoke</name> )<parameter_list pos:line="1943" pos:column="60">( 
            <param><decl><type><name pos:line="1944" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1944" pos:column="35">*</type:modifier></type> <name pos:line="1944" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1945" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1945" pos:column="24">DISPID</name></type> <name pos:line="1945" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="1946" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1946" pos:column="24">REFIID</name></type> <name pos:line="1946" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="1947" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1947" pos:column="24">LCID</name></type> <name pos:line="1947" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="1948" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="1948" pos:column="24">WORD</name></type> <name pos:line="1948" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="1949" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="1949" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="1949" pos:column="40">*</type:modifier></type><name pos:line="1949" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="1950" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1950" pos:column="25">VARIANT</name> <type:modifier pos:line="1950" pos:column="33">*</type:modifier></type><name pos:line="1950" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="1951" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1951" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="1951" pos:column="35">*</type:modifier></type><name pos:line="1951" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="1952" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="1952" pos:column="25">UINT</name> <type:modifier pos:line="1952" pos:column="30">*</type:modifier></type><name pos:line="1952" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1954" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1954" pos:column="87">HRESULT</name></type> ( <name pos:line="1954" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="1954" pos:column="115">*</type:modifier><name pos:line="1954" pos:column="116">get_DTE</name> )<parameter_list pos:line="1954" pos:column="125">( 
            <param><decl><type><name pos:line="1955" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1955" pos:column="35">*</type:modifier></type> <name pos:line="1955" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1956" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1956" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="1956" pos:column="54">/* external definition not present */</comment> <name pos:line="1956" pos:column="92">DTE</name> <type:modifier pos:line="1956" pos:column="96">*</type:modifier><type:modifier pos:line="1956" pos:column="97">*</type:modifier></type><name pos:line="1956" pos:column="98">DTEObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1958" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1958" pos:column="87">HRESULT</name></type> ( <name pos:line="1958" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="1958" pos:column="115">*</type:modifier><name pos:line="1958" pos:column="116">get_Collection</name> )<parameter_list pos:line="1958" pos:column="132">( 
            <param><decl><type><name pos:line="1959" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1959" pos:column="35">*</type:modifier></type> <name pos:line="1959" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1960" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1960" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="1960" pos:column="54">/* external definition not present */</comment> <name pos:line="1960" pos:column="92">CodeElements</name> <type:modifier pos:line="1960" pos:column="105">*</type:modifier><type:modifier pos:line="1960" pos:column="106">*</type:modifier></type><name pos:line="1960" pos:column="107">ppCollection</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1962" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1962" pos:column="73">HRESULT</name></type> ( <name pos:line="1962" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="1962" pos:column="101">*</type:modifier><name pos:line="1962" pos:column="102">get_Name</name> )<parameter_list pos:line="1962" pos:column="112">( 
            <param><decl><type><name pos:line="1963" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1963" pos:column="35">*</type:modifier></type> <name pos:line="1963" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1964" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1964" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1964" pos:column="54">BSTR</name> <type:modifier pos:line="1964" pos:column="59">*</type:modifier></type><name pos:line="1964" pos:column="60">pVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1966" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="1966" pos:column="73">HRESULT</name></type> ( <name pos:line="1966" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="1966" pos:column="101">*</type:modifier><name pos:line="1966" pos:column="102">put_Name</name> )<parameter_list pos:line="1966" pos:column="112">( 
            <param><decl><type><name pos:line="1967" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1967" pos:column="35">*</type:modifier></type> <name pos:line="1967" pos:column="37">This</name></decl></param>,
            <param><decl><type><name pos:line="1968" pos:column="13">__RPC__in</name> <name pos:line="1968" pos:column="23">BSTR</name></type> <name pos:line="1968" pos:column="28">NewName</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1970" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1970" pos:column="73">HRESULT</name></type> ( <name pos:line="1970" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="1970" pos:column="101">*</type:modifier><name pos:line="1970" pos:column="102">get_FullName</name> )<parameter_list pos:line="1970" pos:column="116">( 
            <param><decl><type><name pos:line="1971" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1971" pos:column="35">*</type:modifier></type> <name pos:line="1971" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1972" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1972" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1972" pos:column="54">BSTR</name> <type:modifier pos:line="1972" pos:column="59">*</type:modifier></type><name pos:line="1972" pos:column="60">pVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1974" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1974" pos:column="87">HRESULT</name></type> ( <name pos:line="1974" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="1974" pos:column="115">*</type:modifier><name pos:line="1974" pos:column="116">get_ProjectItem</name> )<parameter_list pos:line="1974" pos:column="133">( 
            <param><decl><type><name pos:line="1975" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1975" pos:column="35">*</type:modifier></type> <name pos:line="1975" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1976" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1976" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="1976" pos:column="54">/* external definition not present */</comment> <name pos:line="1976" pos:column="92">ProjectItem</name> <type:modifier pos:line="1976" pos:column="104">*</type:modifier><type:modifier pos:line="1976" pos:column="105">*</type:modifier></type><name pos:line="1976" pos:column="106">pProjItem</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1978" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <macro><name pos:line="1978" pos:column="87">HRESULT</name> <argument_list pos:line="1978" pos:column="95">( <argument pos:line="1978" pos:column="97">STDMETHODCALLTYPE *get_Kind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1978" pos:column="126">(</op:operator> 
            <name pos:line="1979" pos:column="13">CodeAttributeArgument</name> <op:operator pos:line="1979" pos:column="35">*</op:operator> <name pos:line="1979" pos:column="37">This</name><op:operator pos:line="1979" pos:column="41">,</op:operator>
            <comment type="block" pos:line="1980" pos:column="13">/* [retval][out] */</comment> <name pos:line="1980" pos:column="33">__RPC__out</name> enum <comment type="block" pos:line="1980" pos:column="49">/* external definition not present */</comment> <name pos:line="1980" pos:column="87">vsCMElement</name> <op:operator pos:line="1980" pos:column="99">*</op:operator><name pos:line="1980" pos:column="100">pCodeEltKind</name><op:operator pos:line="1980" pos:column="112">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="1982" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1982" pos:column="87">HRESULT</name></type> ( <name pos:line="1982" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="1982" pos:column="115">*</type:modifier><name pos:line="1982" pos:column="116">get_IsCodeType</name> )<parameter_list pos:line="1982" pos:column="132">( 
            <param><decl><type><name pos:line="1983" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1983" pos:column="35">*</type:modifier></type> <name pos:line="1983" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1984" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1984" pos:column="33">__RPC__out</name> <name pos:line="1984" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="1984" pos:column="57">*</type:modifier></type><name pos:line="1984" pos:column="58">pIsCodeType</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1986" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <macro><name pos:line="1986" pos:column="87">HRESULT</name> <argument_list pos:line="1986" pos:column="95">( <argument pos:line="1986" pos:column="97">STDMETHODCALLTYPE *get_InfoLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="1986" pos:column="134">(</op:operator> 
            <name pos:line="1987" pos:column="13">CodeAttributeArgument</name> <op:operator pos:line="1987" pos:column="35">*</op:operator> <name pos:line="1987" pos:column="37">This</name><op:operator pos:line="1987" pos:column="41">,</op:operator>
            <comment type="block" pos:line="1988" pos:column="13">/* [retval][out] */</comment> <name pos:line="1988" pos:column="33">__RPC__out</name> enum <comment type="block" pos:line="1988" pos:column="49">/* external definition not present */</comment> <name pos:line="1988" pos:column="87">vsCMInfoLocation</name> <op:operator pos:line="1988" pos:column="104">*</op:operator><name pos:line="1988" pos:column="105">pInfoLocation</name><op:operator pos:line="1988" pos:column="118">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="1990" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1990" pos:column="87">HRESULT</name></type> ( <name pos:line="1990" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="1990" pos:column="115">*</type:modifier><name pos:line="1990" pos:column="116">get_Children</name> )<parameter_list pos:line="1990" pos:column="130">( 
            <param><decl><type><name pos:line="1991" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1991" pos:column="35">*</type:modifier></type> <name pos:line="1991" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1992" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1992" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="1992" pos:column="54">/* external definition not present */</comment> <name pos:line="1992" pos:column="92">CodeElements</name> <type:modifier pos:line="1992" pos:column="105">*</type:modifier><type:modifier pos:line="1992" pos:column="106">*</type:modifier></type><name pos:line="1992" pos:column="107">ppCodeElements</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1994" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1994" pos:column="87">HRESULT</name></type> ( <name pos:line="1994" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="1994" pos:column="115">*</type:modifier><name pos:line="1994" pos:column="116">get_Language</name> )<parameter_list pos:line="1994" pos:column="130">( 
            <param><decl><type><name pos:line="1995" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1995" pos:column="35">*</type:modifier></type> <name pos:line="1995" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="1996" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="1996" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="1996" pos:column="54">BSTR</name> <type:modifier pos:line="1996" pos:column="59">*</type:modifier></type><name pos:line="1996" pos:column="60">pLanguage</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="1998" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="1998" pos:column="87">HRESULT</name></type> ( <name pos:line="1998" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="1998" pos:column="115">*</type:modifier><name pos:line="1998" pos:column="116">get_StartPoint</name> )<parameter_list pos:line="1998" pos:column="132">( 
            <param><decl><type><name pos:line="1999" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="1999" pos:column="35">*</type:modifier></type> <name pos:line="1999" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="2000" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2000" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2000" pos:column="54">/* external definition not present */</comment> <name pos:line="2000" pos:column="92">TextPoint</name> <type:modifier pos:line="2000" pos:column="102">*</type:modifier><type:modifier pos:line="2000" pos:column="103">*</type:modifier></type><name pos:line="2000" pos:column="104">ppTextPoint</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2002" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2002" pos:column="87">HRESULT</name></type> ( <name pos:line="2002" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2002" pos:column="115">*</type:modifier><name pos:line="2002" pos:column="116">get_EndPoint</name> )<parameter_list pos:line="2002" pos:column="130">( 
            <param><decl><type><name pos:line="2003" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="2003" pos:column="35">*</type:modifier></type> <name pos:line="2003" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="2004" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2004" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2004" pos:column="54">/* external definition not present */</comment> <name pos:line="2004" pos:column="92">TextPoint</name> <type:modifier pos:line="2004" pos:column="102">*</type:modifier><type:modifier pos:line="2004" pos:column="103">*</type:modifier></type><name pos:line="2004" pos:column="104">ppTextPoint</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2006" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */</comment> <function_decl><type><name pos:line="2006" pos:column="87">HRESULT</name></type> ( <name pos:line="2006" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2006" pos:column="115">*</type:modifier><name pos:line="2006" pos:column="116">get_ExtenderNames</name> )<parameter_list pos:line="2006" pos:column="135">( 
            <param><decl><type><name pos:line="2007" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="2007" pos:column="35">*</type:modifier></type> <name pos:line="2007" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="2008" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2008" pos:column="33">__RPC__out</name> <name pos:line="2008" pos:column="44">VARIANT</name> <type:modifier pos:line="2008" pos:column="52">*</type:modifier></type><name pos:line="2008" pos:column="53">ExtenderNames</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2010" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */</comment> <function_decl><type><name pos:line="2010" pos:column="87">HRESULT</name></type> ( <name pos:line="2010" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2010" pos:column="115">*</type:modifier><name pos:line="2010" pos:column="116">get_Extender</name> )<parameter_list pos:line="2010" pos:column="130">( 
            <param><decl><type><name pos:line="2011" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="2011" pos:column="35">*</type:modifier></type> <name pos:line="2011" pos:column="37">This</name></decl></param>,
            <param><decl><type><name pos:line="2012" pos:column="13">__RPC__in</name> <name pos:line="2012" pos:column="23">BSTR</name></type> <name pos:line="2012" pos:column="28">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="2013" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2013" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2013" pos:column="54">IDispatch</name> <type:modifier pos:line="2013" pos:column="64">*</type:modifier><type:modifier pos:line="2013" pos:column="65">*</type:modifier></type><name pos:line="2013" pos:column="66">Extender</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2015" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */</comment> <function_decl><type><name pos:line="2015" pos:column="87">HRESULT</name></type> ( <name pos:line="2015" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2015" pos:column="115">*</type:modifier><name pos:line="2015" pos:column="116">get_ExtenderCATID</name> )<parameter_list pos:line="2015" pos:column="135">( 
            <param><decl><type><name pos:line="2016" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="2016" pos:column="35">*</type:modifier></type> <name pos:line="2016" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="2017" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2017" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2017" pos:column="54">BSTR</name> <type:modifier pos:line="2017" pos:column="59">*</type:modifier></type><name pos:line="2017" pos:column="60">pRetval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2019" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */</comment> <macro><name pos:line="2019" pos:column="78">HRESULT</name> <argument_list pos:line="2019" pos:column="86">( <argument pos:line="2019" pos:column="88">STDMETHODCALLTYPE *GetStartPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2019" pos:column="122">(</op:operator> 
            <name pos:line="2020" pos:column="13">CodeAttributeArgument</name> <op:operator pos:line="2020" pos:column="35">*</op:operator> <name pos:line="2020" pos:column="37">This</name><op:operator pos:line="2020" pos:column="41">,</op:operator>
            <comment type="block" pos:line="2021" pos:column="13">/* [defaultvalue][in] */</comment> enum <comment type="block" pos:line="2021" pos:column="43">/* external definition not present */</comment> <name pos:line="2021" pos:column="81">vsCMPart</name> <name pos:line="2021" pos:column="90">Part</name><op:operator pos:line="2021" pos:column="94">,</op:operator>
            <comment type="block" pos:line="2022" pos:column="13">/* [retval][out] */</comment> <name pos:line="2022" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2022" pos:column="54">/* external definition not present */</comment> <name pos:line="2022" pos:column="92">TextPoint</name> <op:operator pos:line="2022" pos:column="102">*</op:operator><op:operator pos:line="2022" pos:column="103">*</op:operator><name pos:line="2022" pos:column="104">ppTextPoint</name><op:operator pos:line="2022" pos:column="115">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2024" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */</comment> <macro><name pos:line="2024" pos:column="78">HRESULT</name> <argument_list pos:line="2024" pos:column="86">( <argument pos:line="2024" pos:column="88">STDMETHODCALLTYPE *GetEndPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2024" pos:column="120">(</op:operator> 
            <name pos:line="2025" pos:column="13">CodeAttributeArgument</name> <op:operator pos:line="2025" pos:column="35">*</op:operator> <name pos:line="2025" pos:column="37">This</name><op:operator pos:line="2025" pos:column="41">,</op:operator>
            <comment type="block" pos:line="2026" pos:column="13">/* [defaultvalue][in] */</comment> enum <comment type="block" pos:line="2026" pos:column="43">/* external definition not present */</comment> <name pos:line="2026" pos:column="81">vsCMPart</name> <name pos:line="2026" pos:column="90">Part</name><op:operator pos:line="2026" pos:column="94">,</op:operator>
            <comment type="block" pos:line="2027" pos:column="13">/* [retval][out] */</comment> <name pos:line="2027" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2027" pos:column="54">/* external definition not present */</comment> <name pos:line="2027" pos:column="92">TextPoint</name> <op:operator pos:line="2027" pos:column="102">*</op:operator><op:operator pos:line="2027" pos:column="103">*</op:operator><name pos:line="2027" pos:column="104">ppTextPoint</name><op:operator pos:line="2027" pos:column="115">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2029" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2029" pos:column="73">HRESULT</name></type> ( <name pos:line="2029" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2029" pos:column="101">*</type:modifier><name pos:line="2029" pos:column="102">get_Value</name> )<parameter_list pos:line="2029" pos:column="113">( 
            <param><decl><type><name pos:line="2030" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="2030" pos:column="35">*</type:modifier></type> <name pos:line="2030" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="2031" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2031" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2031" pos:column="54">BSTR</name> <type:modifier pos:line="2031" pos:column="59">*</type:modifier></type><name pos:line="2031" pos:column="60">value</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2033" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="2033" pos:column="73">HRESULT</name></type> ( <name pos:line="2033" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2033" pos:column="101">*</type:modifier><name pos:line="2033" pos:column="102">put_Value</name> )<parameter_list pos:line="2033" pos:column="113">( 
            <param><decl><type><name pos:line="2034" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="2034" pos:column="35">*</type:modifier></type> <name pos:line="2034" pos:column="37">This</name></decl></param>,
            <param><decl><type><name pos:line="2035" pos:column="13">__RPC__in</name> <name pos:line="2035" pos:column="23">BSTR</name></type> <name pos:line="2035" pos:column="28">value</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2037" pos:column="9">/* [helpstring][id] */</comment> <function_decl><type><name pos:line="2037" pos:column="32">HRESULT</name></type> ( <name pos:line="2037" pos:column="42">STDMETHODCALLTYPE</name> <type:modifier pos:line="2037" pos:column="60">*</type:modifier><name pos:line="2037" pos:column="61">Delete</name> )<parameter_list pos:line="2037" pos:column="69">( 
            <param><decl><type><name pos:line="2038" pos:column="13">CodeAttributeArgument</name> <type:modifier pos:line="2038" pos:column="35">*</type:modifier></type> <name pos:line="2038" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2040" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2041" pos:column="7">CodeAttributeArgumentVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2043" pos:column="5">interface</name></type> <name pos:line="2043" pos:column="15">CodeAttributeArgument</name>
    <argument_list pos:line="2044" pos:column="5">{
        <argument><expr><name pos:line="2045" pos:column="9">CONST_VTBL</name> struct <name pos:line="2045" pos:column="27">CodeAttributeArgumentVtbl</name> <op:operator pos:line="2045" pos:column="53">*</op:operator><name pos:line="2045" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2050" pos:column="1">#<cpp:directive pos:line="2050" pos:column="2">ifdef</cpp:directive> <name pos:line="2050" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2053" pos:column="1">#<cpp:directive pos:line="2053" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2053" pos:column="9">CodeAttributeArgument_QueryInterface</name><parameter_list pos:line="2053" pos:column="45">(<param><type><name pos:line="2053" pos:column="46">This</name></type></param>,<param><type><name pos:line="2053" pos:column="51">riid</name></type></param>,<param><type><name pos:line="2053" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2054" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2056" pos:column="1">#<cpp:directive pos:line="2056" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2056" pos:column="9">CodeAttributeArgument_AddRef</name><parameter_list pos:line="2056" pos:column="37">(<param><type><name pos:line="2056" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2057" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2059" pos:column="1">#<cpp:directive pos:line="2059" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2059" pos:column="9">CodeAttributeArgument_Release</name><parameter_list pos:line="2059" pos:column="38">(<param><type><name pos:line="2059" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2060" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2063" pos:column="1">#<cpp:directive pos:line="2063" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2063" pos:column="9">CodeAttributeArgument_GetTypeInfoCount</name><parameter_list pos:line="2063" pos:column="47">(<param><type><name pos:line="2063" pos:column="48">This</name></type></param>,<param><type><name pos:line="2063" pos:column="53">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2064" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2066" pos:column="1">#<cpp:directive pos:line="2066" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2066" pos:column="9">CodeAttributeArgument_GetTypeInfo</name><parameter_list pos:line="2066" pos:column="42">(<param><type><name pos:line="2066" pos:column="43">This</name></type></param>,<param><type><name pos:line="2066" pos:column="48">iTInfo</name></type></param>,<param><type><name pos:line="2066" pos:column="55">lcid</name></type></param>,<param><type><name pos:line="2066" pos:column="60">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2067" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2069" pos:column="1">#<cpp:directive pos:line="2069" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2069" pos:column="9">CodeAttributeArgument_GetIDsOfNames</name><parameter_list pos:line="2069" pos:column="44">(<param><type><name pos:line="2069" pos:column="45">This</name></type></param>,<param><type><name pos:line="2069" pos:column="50">riid</name></type></param>,<param><type><name pos:line="2069" pos:column="55">rgszNames</name></type></param>,<param><type><name pos:line="2069" pos:column="65">cNames</name></type></param>,<param><type><name pos:line="2069" pos:column="72">lcid</name></type></param>,<param><type><name pos:line="2069" pos:column="77">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2070" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="2072" pos:column="1">#<cpp:directive pos:line="2072" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2072" pos:column="9">CodeAttributeArgument_Invoke</name><parameter_list pos:line="2072" pos:column="37">(<param><type><name pos:line="2072" pos:column="38">This</name></type></param>,<param><type><name pos:line="2072" pos:column="43">dispIdMember</name></type></param>,<param><type><name pos:line="2072" pos:column="56">riid</name></type></param>,<param><type><name pos:line="2072" pos:column="61">lcid</name></type></param>,<param><type><name pos:line="2072" pos:column="66">wFlags</name></type></param>,<param><type><name pos:line="2072" pos:column="73">pDispParams</name></type></param>,<param><type><name pos:line="2072" pos:column="85">pVarResult</name></type></param>,<param><type><name pos:line="2072" pos:column="96">pExcepInfo</name></type></param>,<param><type><name pos:line="2072" pos:column="107">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2073" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="2076" pos:column="1">#<cpp:directive pos:line="2076" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2076" pos:column="9">CodeAttributeArgument_get_DTE</name><parameter_list pos:line="2076" pos:column="38">(<param><type><name pos:line="2076" pos:column="39">This</name></type></param>,<param><type><name pos:line="2076" pos:column="44">DTEObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2077" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTEObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2079" pos:column="1">#<cpp:directive pos:line="2079" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2079" pos:column="9">CodeAttributeArgument_get_Collection</name><parameter_list pos:line="2079" pos:column="45">(<param><type><name pos:line="2079" pos:column="46">This</name></type></param>,<param><type><name pos:line="2079" pos:column="51">ppCollection</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2080" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,ppCollection) )</cpp:value></cpp:define> 

<cpp:define pos:line="2082" pos:column="1">#<cpp:directive pos:line="2082" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2082" pos:column="9">CodeAttributeArgument_get_Name</name><parameter_list pos:line="2082" pos:column="39">(<param><type><name pos:line="2082" pos:column="40">This</name></type></param>,<param><type><name pos:line="2082" pos:column="45">pVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2083" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,pVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="2085" pos:column="1">#<cpp:directive pos:line="2085" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2085" pos:column="9">CodeAttributeArgument_put_Name</name><parameter_list pos:line="2085" pos:column="39">(<param><type><name pos:line="2085" pos:column="40">This</name></type></param>,<param><type><name pos:line="2085" pos:column="45">NewName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2086" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,NewName) )</cpp:value></cpp:define> 

<cpp:define pos:line="2088" pos:column="1">#<cpp:directive pos:line="2088" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2088" pos:column="9">CodeAttributeArgument_get_FullName</name><parameter_list pos:line="2088" pos:column="43">(<param><type><name pos:line="2088" pos:column="44">This</name></type></param>,<param><type><name pos:line="2088" pos:column="49">pVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2089" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,pVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="2091" pos:column="1">#<cpp:directive pos:line="2091" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2091" pos:column="9">CodeAttributeArgument_get_ProjectItem</name><parameter_list pos:line="2091" pos:column="46">(<param><type><name pos:line="2091" pos:column="47">This</name></type></param>,<param><type><name pos:line="2091" pos:column="52">pProjItem</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2092" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItem(This,pProjItem) )</cpp:value></cpp:define> 

<cpp:define pos:line="2094" pos:column="1">#<cpp:directive pos:line="2094" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2094" pos:column="9">CodeAttributeArgument_get_Kind</name><parameter_list pos:line="2094" pos:column="39">(<param><type><name pos:line="2094" pos:column="40">This</name></type></param>,<param><type><name pos:line="2094" pos:column="45">pCodeEltKind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2095" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Kind(This,pCodeEltKind) )</cpp:value></cpp:define> 

<cpp:define pos:line="2097" pos:column="1">#<cpp:directive pos:line="2097" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2097" pos:column="9">CodeAttributeArgument_get_IsCodeType</name><parameter_list pos:line="2097" pos:column="45">(<param><type><name pos:line="2097" pos:column="46">This</name></type></param>,<param><type><name pos:line="2097" pos:column="51">pIsCodeType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2098" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsCodeType(This,pIsCodeType) )</cpp:value></cpp:define> 

<cpp:define pos:line="2100" pos:column="1">#<cpp:directive pos:line="2100" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2100" pos:column="9">CodeAttributeArgument_get_InfoLocation</name><parameter_list pos:line="2100" pos:column="47">(<param><type><name pos:line="2100" pos:column="48">This</name></type></param>,<param><type><name pos:line="2100" pos:column="53">pInfoLocation</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2101" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InfoLocation(This,pInfoLocation) )</cpp:value></cpp:define> 

<cpp:define pos:line="2103" pos:column="1">#<cpp:directive pos:line="2103" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2103" pos:column="9">CodeAttributeArgument_get_Children</name><parameter_list pos:line="2103" pos:column="43">(<param><type><name pos:line="2103" pos:column="44">This</name></type></param>,<param><type><name pos:line="2103" pos:column="49">ppCodeElements</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2104" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Children(This,ppCodeElements) )</cpp:value></cpp:define> 

<cpp:define pos:line="2106" pos:column="1">#<cpp:directive pos:line="2106" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2106" pos:column="9">CodeAttributeArgument_get_Language</name><parameter_list pos:line="2106" pos:column="43">(<param><type><name pos:line="2106" pos:column="44">This</name></type></param>,<param><type><name pos:line="2106" pos:column="49">pLanguage</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2107" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,pLanguage) )</cpp:value></cpp:define> 

<cpp:define pos:line="2109" pos:column="1">#<cpp:directive pos:line="2109" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2109" pos:column="9">CodeAttributeArgument_get_StartPoint</name><parameter_list pos:line="2109" pos:column="45">(<param><type><name pos:line="2109" pos:column="46">This</name></type></param>,<param><type><name pos:line="2109" pos:column="51">ppTextPoint</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2110" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartPoint(This,ppTextPoint) )</cpp:value></cpp:define> 

<cpp:define pos:line="2112" pos:column="1">#<cpp:directive pos:line="2112" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2112" pos:column="9">CodeAttributeArgument_get_EndPoint</name><parameter_list pos:line="2112" pos:column="43">(<param><type><name pos:line="2112" pos:column="44">This</name></type></param>,<param><type><name pos:line="2112" pos:column="49">ppTextPoint</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2113" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_EndPoint(This,ppTextPoint) )</cpp:value></cpp:define> 

<cpp:define pos:line="2115" pos:column="1">#<cpp:directive pos:line="2115" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2115" pos:column="9">CodeAttributeArgument_get_ExtenderNames</name><parameter_list pos:line="2115" pos:column="48">(<param><type><name pos:line="2115" pos:column="49">This</name></type></param>,<param><type><name pos:line="2115" pos:column="54">ExtenderNames</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2116" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,ExtenderNames) )</cpp:value></cpp:define> 

<cpp:define pos:line="2118" pos:column="1">#<cpp:directive pos:line="2118" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2118" pos:column="9">CodeAttributeArgument_get_Extender</name><parameter_list pos:line="2118" pos:column="43">(<param><type><name pos:line="2118" pos:column="44">This</name></type></param>,<param><type><name pos:line="2118" pos:column="49">ExtenderName</name></type></param>,<param><type><name pos:line="2118" pos:column="62">Extender</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2119" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,Extender) )</cpp:value></cpp:define> 

<cpp:define pos:line="2121" pos:column="1">#<cpp:directive pos:line="2121" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2121" pos:column="9">CodeAttributeArgument_get_ExtenderCATID</name><parameter_list pos:line="2121" pos:column="48">(<param><type><name pos:line="2121" pos:column="49">This</name></type></param>,<param><type><name pos:line="2121" pos:column="54">pRetval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2122" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,pRetval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2124" pos:column="1">#<cpp:directive pos:line="2124" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2124" pos:column="9">CodeAttributeArgument_GetStartPoint</name><parameter_list pos:line="2124" pos:column="44">(<param><type><name pos:line="2124" pos:column="45">This</name></type></param>,<param><type><name pos:line="2124" pos:column="50">Part</name></type></param>,<param><type><name pos:line="2124" pos:column="55">ppTextPoint</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2125" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStartPoint(This,Part,ppTextPoint) )</cpp:value></cpp:define> 

<cpp:define pos:line="2127" pos:column="1">#<cpp:directive pos:line="2127" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2127" pos:column="9">CodeAttributeArgument_GetEndPoint</name><parameter_list pos:line="2127" pos:column="42">(<param><type><name pos:line="2127" pos:column="43">This</name></type></param>,<param><type><name pos:line="2127" pos:column="48">Part</name></type></param>,<param><type><name pos:line="2127" pos:column="53">ppTextPoint</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2128" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndPoint(This,Part,ppTextPoint) )</cpp:value></cpp:define> 

<cpp:define pos:line="2130" pos:column="1">#<cpp:directive pos:line="2130" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2130" pos:column="9">CodeAttributeArgument_get_Value</name><parameter_list pos:line="2130" pos:column="40">(<param><type><name pos:line="2130" pos:column="41">This</name></type></param>,<param><type><name pos:line="2130" pos:column="46">value</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2131" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Value(This,value) )</cpp:value></cpp:define> 

<cpp:define pos:line="2133" pos:column="1">#<cpp:directive pos:line="2133" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2133" pos:column="9">CodeAttributeArgument_put_Value</name><parameter_list pos:line="2133" pos:column="40">(<param><type><name pos:line="2133" pos:column="41">This</name></type></param>,<param><type><name pos:line="2133" pos:column="46">value</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2134" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Value(This,value) )</cpp:value></cpp:define> 

<cpp:define pos:line="2136" pos:column="1">#<cpp:directive pos:line="2136" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2136" pos:column="9">CodeAttributeArgument_Delete</name><parameter_list pos:line="2136" pos:column="37">(<param><type><name pos:line="2136" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2137" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2139" pos:column="1">#<cpp:directive pos:line="2139" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2139" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2142" pos:column="1">#<cpp:directive pos:line="2142" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2142" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2147" pos:column="1">#<cpp:directive pos:line="2147" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2147" pos:column="9">/* __CodeAttributeArgument_INTERFACE_DEFINED__ */</comment>



<cpp:ifndef pos:line="2151" pos:column="1">#<cpp:directive pos:line="2151" pos:column="2">ifndef</cpp:directive> <name pos:line="2151" pos:column="9">__CodeModelLanguageConstants2_MODULE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2152" pos:column="1">#<cpp:directive pos:line="2152" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2152" pos:column="9">__CodeModelLanguageConstants2_MODULE_DEFINED__</name></cpp:macro></cpp:define>


<comment type="block" pos:line="2155" pos:column="1">/* module CodeModelLanguageConstants2 */</comment>
<comment type="block" pos:line="2156" pos:column="1">/* [dllname][uuid] */</comment> 

<decl_stmt><decl><type><specifier pos:line="2158" pos:column="1">const</specifier> <name pos:line="2158" pos:column="7">LPSTR</name></type> <name pos:line="2158" pos:column="13">vsCMLanguageJSharp</name>	<init pos:line="2158" pos:column="33">=	<expr><lit:literal type="string" pos:line="2158" pos:column="41">"{E6FDF8BF-F3D1-11D4-8576-0002A516ECE8}"</lit:literal></expr></init></decl>;</decl_stmt>

<cpp:endif pos:line="2160" pos:column="1">#<cpp:directive pos:line="2160" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2160" pos:column="8">/* __CodeModelLanguageConstants2_MODULE_DEFINED__ */</comment>

<cpp:ifndef pos:line="2162" pos:column="1">#<cpp:directive pos:line="2162" pos:column="2">ifndef</cpp:directive> <name pos:line="2162" pos:column="9">__CodeEvent_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2163" pos:column="1">#<cpp:directive pos:line="2163" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2163" pos:column="9">__CodeEvent_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2165" pos:column="1">/* interface CodeEvent */</comment>
<comment type="block" pos:line="2166" pos:column="1">/* [helpstring][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="2169" pos:column="1">EXTERN_C</name> <specifier pos:line="2169" pos:column="10">const</specifier> <name pos:line="2169" pos:column="16">IID</name></type> <name pos:line="2169" pos:column="20">IID_CodeEvent</name></decl>;</decl_stmt>

<cpp:if pos:line="2171" pos:column="1">#<cpp:directive pos:line="2171" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2171" pos:column="5">defined</name><argument_list pos:line="2171" pos:column="12">(<argument><expr><name pos:line="2171" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2171" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2171" pos:column="29">!</op:operator><call><name pos:line="2171" pos:column="30">defined</name><argument_list pos:line="2171" pos:column="37">(<argument><expr><name pos:line="2171" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2173" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2173" pos:column="19">(<argument pos:line="2173" pos:column="20">"ce615bd2-8ed5-4f0c-a7b6-4a299d8801fd"</argument>)</argument_list></macro>
    <label><name pos:line="2174" pos:column="5">CodeEvent</name> :</label> <expr_stmt><expr pos:line="2174" pos:column="17">public <name pos:line="2174" pos:column="24">IDispatch</name>
    <block pos:line="2175" pos:column="5">{
    <expr pos:line="2176" pos:column="5">public<op:operator pos:line="2176" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="2177" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2177" pos:column="95">HRESULT</name> <name pos:line="2177" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="2177" pos:column="121">get_DTE</name><argument_list pos:line="2177" pos:column="128">( 
            <comment type="block" pos:line="2178" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2178" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2178" pos:column="54">/* external definition not present */</comment> DTE **DTEObject</argument>)</argument_list></macro> <op:operator pos:line="2178" pos:column="109">=</op:operator> <lit:literal type="number" pos:line="2178" pos:column="111">0</lit:literal></expr>;
        
        <expr pos:line="2180" pos:column="9">virtual <comment type="block" pos:line="2180" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2180" pos:column="95">HRESULT</name> <name pos:line="2180" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="2180" pos:column="121">get_Collection</name><argument_list pos:line="2180" pos:column="135">( 
            <comment type="block" pos:line="2181" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2181" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2181" pos:column="54">/* external definition not present */</comment> CodeElements **ppCollection</argument>)</argument_list></macro> <op:operator pos:line="2181" pos:column="121">=</op:operator> <lit:literal type="number" pos:line="2181" pos:column="123">0</lit:literal></expr>;
        
        <expr pos:line="2183" pos:column="9">virtual <comment type="block" pos:line="2183" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2183" pos:column="81">HRESULT</name> <name pos:line="2183" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2183" pos:column="107">get_Name</name><argument_list pos:line="2183" pos:column="115">( 
            <comment type="block" pos:line="2184" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2184" pos:column="33">__RPC__deref_out_opt BSTR *pVal</argument>)</argument_list></macro> <op:operator pos:line="2184" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="2184" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="2186" pos:column="9">virtual <comment type="block" pos:line="2186" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="2186" pos:column="81">HRESULT</name> <name pos:line="2186" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2186" pos:column="107">put_Name</name><argument_list pos:line="2186" pos:column="115">( 
            <argument pos:line="2187" pos:column="13">__RPC__in BSTR NewName</argument>)</argument_list></macro> <op:operator pos:line="2187" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="2187" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="2189" pos:column="9">virtual <comment type="block" pos:line="2189" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2189" pos:column="81">HRESULT</name> <name pos:line="2189" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2189" pos:column="107">get_FullName</name><argument_list pos:line="2189" pos:column="119">( 
            <comment type="block" pos:line="2190" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2190" pos:column="33">__RPC__deref_out_opt BSTR *pVal</argument>)</argument_list></macro> <op:operator pos:line="2190" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="2190" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="2192" pos:column="9">virtual <comment type="block" pos:line="2192" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2192" pos:column="95">HRESULT</name> <name pos:line="2192" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="2192" pos:column="121">get_ProjectItem</name><argument_list pos:line="2192" pos:column="136">( 
            <comment type="block" pos:line="2193" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2193" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2193" pos:column="54">/* external definition not present */</comment> ProjectItem **pProjItem</argument>)</argument_list></macro> <op:operator pos:line="2193" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="2193" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="2195" pos:column="9">virtual <comment type="block" pos:line="2195" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2195" pos:column="95">HRESULT</name> <name pos:line="2195" pos:column="103">STDMETHODCALLTYPE</name> <call><name pos:line="2195" pos:column="121">get_Kind</name><argument_list pos:line="2195" pos:column="129">( 
            <comment type="block" pos:line="2196" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2196" pos:column="33">__RPC__out</name> enum <comment type="block" pos:line="2196" pos:column="49">/* external definition not present */</comment> <name pos:line="2196" pos:column="87">vsCMElement</name> <op:operator pos:line="2196" pos:column="99">*</op:operator><name pos:line="2196" pos:column="100">pCodeEltKind</name></expr></argument>)</argument_list></call> <op:operator pos:line="2196" pos:column="114">=</op:operator> <lit:literal type="number" pos:line="2196" pos:column="116">0</lit:literal></expr>;
        
        <expr pos:line="2198" pos:column="9">virtual <comment type="block" pos:line="2198" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2198" pos:column="95">HRESULT</name> <name pos:line="2198" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="2198" pos:column="121">get_IsCodeType</name><argument_list pos:line="2198" pos:column="135">( 
            <comment type="block" pos:line="2199" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2199" pos:column="33">__RPC__out VARIANT_BOOL *pIsCodeType</argument>)</argument_list></macro> <op:operator pos:line="2199" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2199" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="2201" pos:column="9">virtual <comment type="block" pos:line="2201" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2201" pos:column="95">HRESULT</name> <name pos:line="2201" pos:column="103">STDMETHODCALLTYPE</name> <call><name pos:line="2201" pos:column="121">get_InfoLocation</name><argument_list pos:line="2201" pos:column="137">( 
            <comment type="block" pos:line="2202" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2202" pos:column="33">__RPC__out</name> enum <comment type="block" pos:line="2202" pos:column="49">/* external definition not present */</comment> <name pos:line="2202" pos:column="87">vsCMInfoLocation</name> <op:operator pos:line="2202" pos:column="104">*</op:operator><name pos:line="2202" pos:column="105">pInfoLocation</name></expr></argument>)</argument_list></call> <op:operator pos:line="2202" pos:column="120">=</op:operator> <lit:literal type="number" pos:line="2202" pos:column="122">0</lit:literal></expr>;
        
        <expr pos:line="2204" pos:column="9">virtual <comment type="block" pos:line="2204" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2204" pos:column="95">HRESULT</name> <name pos:line="2204" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="2204" pos:column="121">get_Children</name><argument_list pos:line="2204" pos:column="133">( 
            <comment type="block" pos:line="2205" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2205" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2205" pos:column="54">/* external definition not present */</comment> CodeElements **ppCodeElements</argument>)</argument_list></macro> <op:operator pos:line="2205" pos:column="123">=</op:operator> <lit:literal type="number" pos:line="2205" pos:column="125">0</lit:literal></expr>;
        
        <expr pos:line="2207" pos:column="9">virtual <comment type="block" pos:line="2207" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2207" pos:column="95">HRESULT</name> <name pos:line="2207" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="2207" pos:column="121">get_Language</name><argument_list pos:line="2207" pos:column="133">( 
            <comment type="block" pos:line="2208" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2208" pos:column="33">__RPC__deref_out_opt BSTR *pLanguage</argument>)</argument_list></macro> <op:operator pos:line="2208" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2208" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="2210" pos:column="9">virtual <comment type="block" pos:line="2210" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2210" pos:column="95">HRESULT</name> <name pos:line="2210" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="2210" pos:column="121">get_StartPoint</name><argument_list pos:line="2210" pos:column="135">( 
            <comment type="block" pos:line="2211" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2211" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2211" pos:column="54">/* external definition not present */</comment> TextPoint **ppTextPoint</argument>)</argument_list></macro> <op:operator pos:line="2211" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="2211" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="2213" pos:column="9">virtual <comment type="block" pos:line="2213" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2213" pos:column="95">HRESULT</name> <name pos:line="2213" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="2213" pos:column="121">get_EndPoint</name><argument_list pos:line="2213" pos:column="133">( 
            <comment type="block" pos:line="2214" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2214" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2214" pos:column="54">/* external definition not present */</comment> TextPoint **ppTextPoint</argument>)</argument_list></macro> <op:operator pos:line="2214" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="2214" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="2216" pos:column="9">virtual <comment type="block" pos:line="2216" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */</comment> <name pos:line="2216" pos:column="95">HRESULT</name> <name pos:line="2216" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="2216" pos:column="121">get_ExtenderNames</name><argument_list pos:line="2216" pos:column="138">( 
            <comment type="block" pos:line="2217" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2217" pos:column="33">__RPC__out VARIANT *ExtenderNames</argument>)</argument_list></macro> <op:operator pos:line="2217" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="2217" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="2219" pos:column="9">virtual <comment type="block" pos:line="2219" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */</comment> <name pos:line="2219" pos:column="95">HRESULT</name> <name pos:line="2219" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="2219" pos:column="121">get_Extender</name><argument_list pos:line="2219" pos:column="133">( 
            <argument pos:line="2220" pos:column="13">__RPC__in BSTR ExtenderName</argument>,
            <comment type="block" pos:line="2221" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2221" pos:column="33">__RPC__deref_out_opt IDispatch **Extender</argument>)</argument_list></macro> <op:operator pos:line="2221" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="2221" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="2223" pos:column="9">virtual <comment type="block" pos:line="2223" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */</comment> <name pos:line="2223" pos:column="95">HRESULT</name> <name pos:line="2223" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="2223" pos:column="121">get_ExtenderCATID</name><argument_list pos:line="2223" pos:column="138">( 
            <comment type="block" pos:line="2224" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2224" pos:column="33">__RPC__deref_out_opt BSTR *pRetval</argument>)</argument_list></macro> <op:operator pos:line="2224" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="2224" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="2226" pos:column="9">virtual <comment type="block" pos:line="2226" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="2226" pos:column="86">HRESULT</name> <name pos:line="2226" pos:column="94">STDMETHODCALLTYPE</name> <macro><name pos:line="2226" pos:column="112">GetStartPoint</name><argument_list pos:line="2226" pos:column="125">( 
            <comment type="block" pos:line="2227" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="2227" pos:column="38">enum <comment type="block" pos:line="2227" pos:column="43">/* external definition not present */</comment> vsCMPart Part</argument>,
            <comment type="block" pos:line="2228" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2228" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2228" pos:column="54">/* external definition not present */</comment> TextPoint **ppTextPoint</argument>)</argument_list></macro> <op:operator pos:line="2228" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="2228" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="2230" pos:column="9">virtual <comment type="block" pos:line="2230" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="2230" pos:column="86">HRESULT</name> <name pos:line="2230" pos:column="94">STDMETHODCALLTYPE</name> <macro><name pos:line="2230" pos:column="112">GetEndPoint</name><argument_list pos:line="2230" pos:column="123">( 
            <comment type="block" pos:line="2231" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="2231" pos:column="38">enum <comment type="block" pos:line="2231" pos:column="43">/* external definition not present */</comment> vsCMPart Part</argument>,
            <comment type="block" pos:line="2232" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2232" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2232" pos:column="54">/* external definition not present */</comment> TextPoint **ppTextPoint</argument>)</argument_list></macro> <op:operator pos:line="2232" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="2232" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="2234" pos:column="9">virtual <comment type="block" pos:line="2234" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2234" pos:column="81">HRESULT</name> <name pos:line="2234" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2234" pos:column="107">get_Parent</name><argument_list pos:line="2234" pos:column="117">( 
            <comment type="block" pos:line="2235" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2235" pos:column="33">__RPC__deref_out_opt IDispatch **ParentObject</argument>)</argument_list></macro> <op:operator pos:line="2235" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="2235" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="2237" pos:column="9">virtual <comment type="block" pos:line="2237" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="2237" pos:column="81">HRESULT</name> <name pos:line="2237" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2237" pos:column="107">put_Access</name><argument_list pos:line="2237" pos:column="117">( 
            <argument pos:line="2238" pos:column="13">enum <comment type="block" pos:line="2238" pos:column="18">/* external definition not present */</comment> vsCMAccess Access</argument>)</argument_list></macro> <op:operator pos:line="2238" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="2238" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="2240" pos:column="9">virtual <comment type="block" pos:line="2240" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2240" pos:column="81">HRESULT</name> <name pos:line="2240" pos:column="89">STDMETHODCALLTYPE</name> <call><name pos:line="2240" pos:column="107">get_Access</name><argument_list pos:line="2240" pos:column="117">( 
            <comment type="block" pos:line="2241" pos:column="13">/* [retval][out] */</comment> <argument><expr><name pos:line="2241" pos:column="33">__RPC__out</name> enum <comment type="block" pos:line="2241" pos:column="49">/* external definition not present */</comment> <name pos:line="2241" pos:column="87">vsCMAccess</name> <op:operator pos:line="2241" pos:column="98">*</op:operator><name pos:line="2241" pos:column="99">Access</name></expr></argument>)</argument_list></call> <op:operator pos:line="2241" pos:column="107">=</op:operator> <lit:literal type="number" pos:line="2241" pos:column="109">0</lit:literal></expr>;
        
        <expr pos:line="2243" pos:column="9">virtual <comment type="block" pos:line="2243" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2243" pos:column="81">HRESULT</name> <name pos:line="2243" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2243" pos:column="107">get_Attributes</name><argument_list pos:line="2243" pos:column="121">( 
            <comment type="block" pos:line="2244" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2244" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2244" pos:column="54">/* external definition not present */</comment> CodeElements **ppMembers</argument>)</argument_list></macro> <op:operator pos:line="2244" pos:column="118">=</op:operator> <lit:literal type="number" pos:line="2244" pos:column="120">0</lit:literal></expr>;
        
        <expr pos:line="2246" pos:column="9">virtual <comment type="block" pos:line="2246" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2246" pos:column="81">HRESULT</name> <name pos:line="2246" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2246" pos:column="107">get_DocComment</name><argument_list pos:line="2246" pos:column="121">( 
            <comment type="block" pos:line="2247" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2247" pos:column="33">__RPC__deref_out_opt BSTR *pDocComment</argument>)</argument_list></macro> <op:operator pos:line="2247" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="2247" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="2249" pos:column="9">virtual <comment type="block" pos:line="2249" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="2249" pos:column="81">HRESULT</name> <name pos:line="2249" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2249" pos:column="107">put_DocComment</name><argument_list pos:line="2249" pos:column="121">( 
            <argument pos:line="2250" pos:column="13">__RPC__in BSTR DocComment</argument>)</argument_list></macro> <op:operator pos:line="2250" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="2250" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="2252" pos:column="9">virtual <comment type="block" pos:line="2252" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2252" pos:column="81">HRESULT</name> <name pos:line="2252" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2252" pos:column="107">get_Comment</name><argument_list pos:line="2252" pos:column="118">( 
            <comment type="block" pos:line="2253" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2253" pos:column="33">__RPC__deref_out_opt BSTR *pComment</argument>)</argument_list></macro> <op:operator pos:line="2253" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="2253" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="2255" pos:column="9">virtual <comment type="block" pos:line="2255" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="2255" pos:column="81">HRESULT</name> <name pos:line="2255" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2255" pos:column="107">put_Comment</name><argument_list pos:line="2255" pos:column="118">( 
            <argument pos:line="2256" pos:column="13">__RPC__in BSTR Comment</argument>)</argument_list></macro> <op:operator pos:line="2256" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="2256" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="2258" pos:column="9">virtual <comment type="block" pos:line="2258" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="2258" pos:column="72">HRESULT</name> <name pos:line="2258" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="2258" pos:column="98">AddAttribute</name><argument_list pos:line="2258" pos:column="110">( 
            <argument pos:line="2259" pos:column="13">__RPC__in BSTR Name</argument>,
            <argument pos:line="2260" pos:column="13">__RPC__in BSTR Value</argument>,
            <comment type="block" pos:line="2261" pos:column="13">/* [optional] */</comment> <argument pos:line="2261" pos:column="30">VARIANT Position</argument>,
            <comment type="block" pos:line="2262" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2262" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2262" pos:column="54">/* external definition not present */</comment> CodeAttribute **ppCodeAttribute</argument>)</argument_list></macro> <op:operator pos:line="2262" pos:column="125">=</op:operator> <lit:literal type="number" pos:line="2262" pos:column="127">0</lit:literal></expr>;
        
        <expr pos:line="2264" pos:column="9">virtual <comment type="block" pos:line="2264" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="2264" pos:column="49">HRESULT</name> <name pos:line="2264" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="2264" pos:column="75">get_Adder</name><argument_list pos:line="2264" pos:column="84">( 
            <comment type="block" pos:line="2265" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2265" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2265" pos:column="54">/* external definition not present */</comment> CodeFunction **ppCodeFunction</argument>)</argument_list></macro> <op:operator pos:line="2265" pos:column="123">=</op:operator> <lit:literal type="number" pos:line="2265" pos:column="125">0</lit:literal></expr>;
        
        <expr pos:line="2267" pos:column="9">virtual <comment type="block" pos:line="2267" pos:column="17">/* [helpstring][propput][id] */</comment> <name pos:line="2267" pos:column="49">HRESULT</name> <name pos:line="2267" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="2267" pos:column="75">put_Adder</name><argument_list pos:line="2267" pos:column="84">( 
            <argument pos:line="2268" pos:column="13">__RPC__in <comment type="block" pos:line="2268" pos:column="23">/* external definition not present */</comment> CodeFunction *codeFunction</argument>)</argument_list></macro> <op:operator pos:line="2268" pos:column="89">=</op:operator> <lit:literal type="number" pos:line="2268" pos:column="91">0</lit:literal></expr>;
        
        <expr pos:line="2270" pos:column="9">virtual <comment type="block" pos:line="2270" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="2270" pos:column="49">HRESULT</name> <name pos:line="2270" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="2270" pos:column="75">get_Remover</name><argument_list pos:line="2270" pos:column="86">( 
            <comment type="block" pos:line="2271" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2271" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2271" pos:column="54">/* external definition not present */</comment> CodeFunction **ppCodeFunction</argument>)</argument_list></macro> <op:operator pos:line="2271" pos:column="123">=</op:operator> <lit:literal type="number" pos:line="2271" pos:column="125">0</lit:literal></expr>;
        
        <expr pos:line="2273" pos:column="9">virtual <comment type="block" pos:line="2273" pos:column="17">/* [helpstring][propput][id] */</comment> <name pos:line="2273" pos:column="49">HRESULT</name> <name pos:line="2273" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="2273" pos:column="75">put_Remover</name><argument_list pos:line="2273" pos:column="86">( 
            <argument pos:line="2274" pos:column="13">__RPC__in <comment type="block" pos:line="2274" pos:column="23">/* external definition not present */</comment> CodeFunction *codeFunction</argument>)</argument_list></macro> <op:operator pos:line="2274" pos:column="89">=</op:operator> <lit:literal type="number" pos:line="2274" pos:column="91">0</lit:literal></expr>;
        
        <expr pos:line="2276" pos:column="9">virtual <comment type="block" pos:line="2276" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="2276" pos:column="49">HRESULT</name> <name pos:line="2276" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="2276" pos:column="75">get_Thrower</name><argument_list pos:line="2276" pos:column="86">( 
            <comment type="block" pos:line="2277" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2277" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2277" pos:column="54">/* external definition not present */</comment> CodeFunction **ppCodeFunction</argument>)</argument_list></macro> <op:operator pos:line="2277" pos:column="123">=</op:operator> <lit:literal type="number" pos:line="2277" pos:column="125">0</lit:literal></expr>;
        
        <expr pos:line="2279" pos:column="9">virtual <comment type="block" pos:line="2279" pos:column="17">/* [helpstring][propput][id] */</comment> <name pos:line="2279" pos:column="49">HRESULT</name> <name pos:line="2279" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="2279" pos:column="75">put_Thrower</name><argument_list pos:line="2279" pos:column="86">( 
            <argument pos:line="2280" pos:column="13">__RPC__in <comment type="block" pos:line="2280" pos:column="23">/* external definition not present */</comment> CodeFunction *codeFunction</argument>)</argument_list></macro> <op:operator pos:line="2280" pos:column="89">=</op:operator> <lit:literal type="number" pos:line="2280" pos:column="91">0</lit:literal></expr>;
        
        <expr pos:line="2282" pos:column="9">virtual <comment type="block" pos:line="2282" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="2282" pos:column="49">HRESULT</name> <name pos:line="2282" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="2282" pos:column="75">get_IsPropertyStyleEvent</name><argument_list pos:line="2282" pos:column="99">( 
            <comment type="block" pos:line="2283" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2283" pos:column="33">__RPC__out VARIANT_BOOL *vbIsPropertyStyle</argument>)</argument_list></macro> <op:operator pos:line="2283" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="2283" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="2285" pos:column="9">virtual <comment type="block" pos:line="2285" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2285" pos:column="95">HRESULT</name> <name pos:line="2285" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="2285" pos:column="121">get_Prototype</name><argument_list pos:line="2285" pos:column="134">( 
            <comment type="block" pos:line="2286" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="2286" pos:column="38">long Flags</argument>,
            <comment type="block" pos:line="2287" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2287" pos:column="33">__RPC__deref_out_opt BSTR *pFullName</argument>)</argument_list></macro> <op:operator pos:line="2287" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="2287" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="2289" pos:column="9">virtual <comment type="block" pos:line="2289" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2289" pos:column="95">HRESULT</name> <name pos:line="2289" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="2289" pos:column="121">get_Type</name><argument_list pos:line="2289" pos:column="129">( 
            <comment type="block" pos:line="2290" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2290" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="2290" pos:column="54">/* external definition not present */</comment> CodeTypeRef **ppCodeTypeRef</argument>)</argument_list></macro> <op:operator pos:line="2290" pos:column="121">=</op:operator> <lit:literal type="number" pos:line="2290" pos:column="123">0</lit:literal></expr>;
        
        <expr pos:line="2292" pos:column="9">virtual <comment type="block" pos:line="2292" pos:column="17">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="2292" pos:column="95">HRESULT</name> <name pos:line="2292" pos:column="103">STDMETHODCALLTYPE</name> <macro><name pos:line="2292" pos:column="121">put_Type</name><argument_list pos:line="2292" pos:column="129">( 
            <argument pos:line="2293" pos:column="13">__RPC__in <comment type="block" pos:line="2293" pos:column="23">/* external definition not present */</comment> CodeTypeRef *pCodeTypeRef</argument>)</argument_list></macro> <op:operator pos:line="2293" pos:column="88">=</op:operator> <lit:literal type="number" pos:line="2293" pos:column="90">0</lit:literal></expr>;
        
        <expr pos:line="2295" pos:column="9">virtual <comment type="block" pos:line="2295" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2295" pos:column="81">HRESULT</name> <name pos:line="2295" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2295" pos:column="107">get_OverrideKind</name><argument_list pos:line="2295" pos:column="123">( 
            <comment type="block" pos:line="2296" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2296" pos:column="33">__RPC__out vsCMOverrideKind *Kind</argument>)</argument_list></macro> <op:operator pos:line="2296" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="2296" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="2298" pos:column="9">virtual <comment type="block" pos:line="2298" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="2298" pos:column="81">HRESULT</name> <name pos:line="2298" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2298" pos:column="107">put_OverrideKind</name><argument_list pos:line="2298" pos:column="123">( 
            <argument pos:line="2299" pos:column="13">vsCMOverrideKind Kind</argument>)</argument_list></macro> <op:operator pos:line="2299" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="2299" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="2301" pos:column="9">virtual <comment type="block" pos:line="2301" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2301" pos:column="81">HRESULT</name> <name pos:line="2301" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2301" pos:column="107">get_IsShared</name><argument_list pos:line="2301" pos:column="119">( 
            <comment type="block" pos:line="2302" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2302" pos:column="33">__RPC__out VARIANT_BOOL *pIsShared</argument>)</argument_list></macro> <op:operator pos:line="2302" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="2302" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="2304" pos:column="9">virtual <comment type="block" pos:line="2304" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="2304" pos:column="81">HRESULT</name> <name pos:line="2304" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2304" pos:column="107">put_IsShared</name><argument_list pos:line="2304" pos:column="119">( 
            <argument pos:line="2305" pos:column="13">VARIANT_BOOL Shared</argument>)</argument_list></macro> <op:operator pos:line="2305" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="2305" pos:column="36">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2309" pos:column="1">#<cpp:directive pos:line="2309" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2309" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2311" pos:column="5">typedef <type><struct pos:line="2311" pos:column="13">struct <name pos:line="2311" pos:column="20">CodeEventVtbl</name>
    <block pos:line="2312" pos:column="5">{<public type="default" pos:line="2312" pos:column="6">
        <function_decl><type><name pos:line="2313" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="2315" pos:column="9">HRESULT</name></type> ( <name pos:line="2315" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2315" pos:column="37">*</type:modifier><name pos:line="2315" pos:column="38">QueryInterface</name> )<parameter_list pos:line="2315" pos:column="54">( 
            <param><decl><type><name pos:line="2316" pos:column="13">CodeEvent</name> <type:modifier pos:line="2316" pos:column="23">*</type:modifier></type> <name pos:line="2316" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2317" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2317" pos:column="24">__RPC__in</name> <name pos:line="2317" pos:column="34">REFIID</name></type> <name pos:line="2317" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="2318" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="2319" pos:column="13">__RPC__deref_out</name>  <name pos:line="2319" pos:column="31">void</name> <type:modifier pos:line="2319" pos:column="36">*</type:modifier><type:modifier pos:line="2319" pos:column="37">*</type:modifier></type><name pos:line="2319" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2321" pos:column="9">ULONG</name></type> ( <name pos:line="2321" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2321" pos:column="35">*</type:modifier><name pos:line="2321" pos:column="36">AddRef</name> )<parameter_list pos:line="2321" pos:column="44">( 
            <param><decl><type><name pos:line="2322" pos:column="13">CodeEvent</name> <type:modifier pos:line="2322" pos:column="23">*</type:modifier></type> <name pos:line="2322" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2324" pos:column="9">ULONG</name></type> ( <name pos:line="2324" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="2324" pos:column="35">*</type:modifier><name pos:line="2324" pos:column="36">Release</name> )<parameter_list pos:line="2324" pos:column="45">( 
            <param><decl><type><name pos:line="2325" pos:column="13">CodeEvent</name> <type:modifier pos:line="2325" pos:column="23">*</type:modifier></type> <name pos:line="2325" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2327" pos:column="9">HRESULT</name></type> ( <name pos:line="2327" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2327" pos:column="37">*</type:modifier><name pos:line="2327" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="2327" pos:column="56">( 
            <param><decl><type><name pos:line="2328" pos:column="13">CodeEvent</name> <type:modifier pos:line="2328" pos:column="23">*</type:modifier></type> <name pos:line="2328" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2329" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2329" pos:column="25">__RPC__out</name> <name pos:line="2329" pos:column="36">UINT</name> <type:modifier pos:line="2329" pos:column="41">*</type:modifier></type><name pos:line="2329" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="2331" pos:column="9">HRESULT</name></type> ( <name pos:line="2331" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="2331" pos:column="37">*</type:modifier><name pos:line="2331" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="2331" pos:column="51">( 
            <param><decl><type><name pos:line="2332" pos:column="13">CodeEvent</name> <type:modifier pos:line="2332" pos:column="23">*</type:modifier></type> <name pos:line="2332" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2333" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2333" pos:column="24">UINT</name></type> <name pos:line="2333" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="2334" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2334" pos:column="24">LCID</name></type> <name pos:line="2334" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="2335" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2335" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="2335" pos:column="46">ITypeInfo</name> <type:modifier pos:line="2335" pos:column="56">*</type:modifier><type:modifier pos:line="2335" pos:column="57">*</type:modifier></type><name pos:line="2335" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2337" pos:column="9">HRESULT</name> <argument_list pos:line="2337" pos:column="17">( <argument pos:line="2337" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2337" pos:column="53">(</op:operator> 
            <name pos:line="2338" pos:column="13">CodeEvent</name> <op:operator pos:line="2338" pos:column="23">*</op:operator> <name pos:line="2338" pos:column="25">This</name><op:operator pos:line="2338" pos:column="29">,</op:operator>
            <comment type="block" pos:line="2339" pos:column="13">/* [in] */</comment> <name pos:line="2339" pos:column="24">__RPC__in</name> <name pos:line="2339" pos:column="34">REFIID</name> <name pos:line="2339" pos:column="41">riid</name><op:operator pos:line="2339" pos:column="45">,</op:operator>
            <comment type="block" pos:line="2340" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="2340" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="2340" pos:column="54">(<argument pos:line="2340" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="2340" pos:column="63">LPOLESTR</name> <op:operator pos:line="2340" pos:column="72">*</op:operator><name pos:line="2340" pos:column="73">rgszNames</name><op:operator pos:line="2340" pos:column="82">,</op:operator>
            <comment type="block" pos:line="2341" pos:column="13">/* [range][in] */</comment> <name pos:line="2341" pos:column="31">UINT</name> <name pos:line="2341" pos:column="36">cNames</name><op:operator pos:line="2341" pos:column="42">,</op:operator>
            <comment type="block" pos:line="2342" pos:column="13">/* [in] */</comment> <name pos:line="2342" pos:column="24">LCID</name> <name pos:line="2342" pos:column="29">lcid</name><op:operator pos:line="2342" pos:column="33">,</op:operator>
            <comment type="block" pos:line="2343" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="2343" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="2343" pos:column="56">(<argument pos:line="2343" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="2343" pos:column="65">DISPID</name> <op:operator pos:line="2343" pos:column="72">*</op:operator><name pos:line="2343" pos:column="73">rgDispId</name><op:operator pos:line="2343" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2345" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="2345" pos:column="23">HRESULT</name></type> ( <name pos:line="2345" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="2345" pos:column="51">*</type:modifier><name pos:line="2345" pos:column="52">Invoke</name> )<parameter_list pos:line="2345" pos:column="60">( 
            <param><decl><type><name pos:line="2346" pos:column="13">CodeEvent</name> <type:modifier pos:line="2346" pos:column="23">*</type:modifier></type> <name pos:line="2346" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2347" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2347" pos:column="24">DISPID</name></type> <name pos:line="2347" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="2348" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2348" pos:column="24">REFIID</name></type> <name pos:line="2348" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="2349" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2349" pos:column="24">LCID</name></type> <name pos:line="2349" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="2350" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="2350" pos:column="24">WORD</name></type> <name pos:line="2350" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="2351" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="2351" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="2351" pos:column="40">*</type:modifier></type><name pos:line="2351" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="2352" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2352" pos:column="25">VARIANT</name> <type:modifier pos:line="2352" pos:column="33">*</type:modifier></type><name pos:line="2352" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="2353" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2353" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="2353" pos:column="35">*</type:modifier></type><name pos:line="2353" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="2354" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="2354" pos:column="25">UINT</name> <type:modifier pos:line="2354" pos:column="30">*</type:modifier></type><name pos:line="2354" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2356" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2356" pos:column="87">HRESULT</name></type> ( <name pos:line="2356" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2356" pos:column="115">*</type:modifier><name pos:line="2356" pos:column="116">get_DTE</name> )<parameter_list pos:line="2356" pos:column="125">( 
            <param><decl><type><name pos:line="2357" pos:column="13">CodeEvent</name> <type:modifier pos:line="2357" pos:column="23">*</type:modifier></type> <name pos:line="2357" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2358" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2358" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2358" pos:column="54">/* external definition not present */</comment> <name pos:line="2358" pos:column="92">DTE</name> <type:modifier pos:line="2358" pos:column="96">*</type:modifier><type:modifier pos:line="2358" pos:column="97">*</type:modifier></type><name pos:line="2358" pos:column="98">DTEObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2360" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2360" pos:column="87">HRESULT</name></type> ( <name pos:line="2360" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2360" pos:column="115">*</type:modifier><name pos:line="2360" pos:column="116">get_Collection</name> )<parameter_list pos:line="2360" pos:column="132">( 
            <param><decl><type><name pos:line="2361" pos:column="13">CodeEvent</name> <type:modifier pos:line="2361" pos:column="23">*</type:modifier></type> <name pos:line="2361" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2362" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2362" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2362" pos:column="54">/* external definition not present */</comment> <name pos:line="2362" pos:column="92">CodeElements</name> <type:modifier pos:line="2362" pos:column="105">*</type:modifier><type:modifier pos:line="2362" pos:column="106">*</type:modifier></type><name pos:line="2362" pos:column="107">ppCollection</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2364" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2364" pos:column="73">HRESULT</name></type> ( <name pos:line="2364" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2364" pos:column="101">*</type:modifier><name pos:line="2364" pos:column="102">get_Name</name> )<parameter_list pos:line="2364" pos:column="112">( 
            <param><decl><type><name pos:line="2365" pos:column="13">CodeEvent</name> <type:modifier pos:line="2365" pos:column="23">*</type:modifier></type> <name pos:line="2365" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2366" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2366" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2366" pos:column="54">BSTR</name> <type:modifier pos:line="2366" pos:column="59">*</type:modifier></type><name pos:line="2366" pos:column="60">pVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2368" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="2368" pos:column="73">HRESULT</name></type> ( <name pos:line="2368" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2368" pos:column="101">*</type:modifier><name pos:line="2368" pos:column="102">put_Name</name> )<parameter_list pos:line="2368" pos:column="112">( 
            <param><decl><type><name pos:line="2369" pos:column="13">CodeEvent</name> <type:modifier pos:line="2369" pos:column="23">*</type:modifier></type> <name pos:line="2369" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="2370" pos:column="13">__RPC__in</name> <name pos:line="2370" pos:column="23">BSTR</name></type> <name pos:line="2370" pos:column="28">NewName</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2372" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2372" pos:column="73">HRESULT</name></type> ( <name pos:line="2372" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2372" pos:column="101">*</type:modifier><name pos:line="2372" pos:column="102">get_FullName</name> )<parameter_list pos:line="2372" pos:column="116">( 
            <param><decl><type><name pos:line="2373" pos:column="13">CodeEvent</name> <type:modifier pos:line="2373" pos:column="23">*</type:modifier></type> <name pos:line="2373" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2374" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2374" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2374" pos:column="54">BSTR</name> <type:modifier pos:line="2374" pos:column="59">*</type:modifier></type><name pos:line="2374" pos:column="60">pVal</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2376" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2376" pos:column="87">HRESULT</name></type> ( <name pos:line="2376" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2376" pos:column="115">*</type:modifier><name pos:line="2376" pos:column="116">get_ProjectItem</name> )<parameter_list pos:line="2376" pos:column="133">( 
            <param><decl><type><name pos:line="2377" pos:column="13">CodeEvent</name> <type:modifier pos:line="2377" pos:column="23">*</type:modifier></type> <name pos:line="2377" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2378" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2378" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2378" pos:column="54">/* external definition not present */</comment> <name pos:line="2378" pos:column="92">ProjectItem</name> <type:modifier pos:line="2378" pos:column="104">*</type:modifier><type:modifier pos:line="2378" pos:column="105">*</type:modifier></type><name pos:line="2378" pos:column="106">pProjItem</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2380" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <macro><name pos:line="2380" pos:column="87">HRESULT</name> <argument_list pos:line="2380" pos:column="95">( <argument pos:line="2380" pos:column="97">STDMETHODCALLTYPE *get_Kind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2380" pos:column="126">(</op:operator> 
            <name pos:line="2381" pos:column="13">CodeEvent</name> <op:operator pos:line="2381" pos:column="23">*</op:operator> <name pos:line="2381" pos:column="25">This</name><op:operator pos:line="2381" pos:column="29">,</op:operator>
            <comment type="block" pos:line="2382" pos:column="13">/* [retval][out] */</comment> <name pos:line="2382" pos:column="33">__RPC__out</name> enum <comment type="block" pos:line="2382" pos:column="49">/* external definition not present */</comment> <name pos:line="2382" pos:column="87">vsCMElement</name> <op:operator pos:line="2382" pos:column="99">*</op:operator><name pos:line="2382" pos:column="100">pCodeEltKind</name><op:operator pos:line="2382" pos:column="112">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2384" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2384" pos:column="87">HRESULT</name></type> ( <name pos:line="2384" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2384" pos:column="115">*</type:modifier><name pos:line="2384" pos:column="116">get_IsCodeType</name> )<parameter_list pos:line="2384" pos:column="132">( 
            <param><decl><type><name pos:line="2385" pos:column="13">CodeEvent</name> <type:modifier pos:line="2385" pos:column="23">*</type:modifier></type> <name pos:line="2385" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2386" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2386" pos:column="33">__RPC__out</name> <name pos:line="2386" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="2386" pos:column="57">*</type:modifier></type><name pos:line="2386" pos:column="58">pIsCodeType</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2388" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <macro><name pos:line="2388" pos:column="87">HRESULT</name> <argument_list pos:line="2388" pos:column="95">( <argument pos:line="2388" pos:column="97">STDMETHODCALLTYPE *get_InfoLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2388" pos:column="134">(</op:operator> 
            <name pos:line="2389" pos:column="13">CodeEvent</name> <op:operator pos:line="2389" pos:column="23">*</op:operator> <name pos:line="2389" pos:column="25">This</name><op:operator pos:line="2389" pos:column="29">,</op:operator>
            <comment type="block" pos:line="2390" pos:column="13">/* [retval][out] */</comment> <name pos:line="2390" pos:column="33">__RPC__out</name> enum <comment type="block" pos:line="2390" pos:column="49">/* external definition not present */</comment> <name pos:line="2390" pos:column="87">vsCMInfoLocation</name> <op:operator pos:line="2390" pos:column="104">*</op:operator><name pos:line="2390" pos:column="105">pInfoLocation</name><op:operator pos:line="2390" pos:column="118">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2392" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2392" pos:column="87">HRESULT</name></type> ( <name pos:line="2392" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2392" pos:column="115">*</type:modifier><name pos:line="2392" pos:column="116">get_Children</name> )<parameter_list pos:line="2392" pos:column="130">( 
            <param><decl><type><name pos:line="2393" pos:column="13">CodeEvent</name> <type:modifier pos:line="2393" pos:column="23">*</type:modifier></type> <name pos:line="2393" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2394" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2394" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2394" pos:column="54">/* external definition not present */</comment> <name pos:line="2394" pos:column="92">CodeElements</name> <type:modifier pos:line="2394" pos:column="105">*</type:modifier><type:modifier pos:line="2394" pos:column="106">*</type:modifier></type><name pos:line="2394" pos:column="107">ppCodeElements</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2396" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2396" pos:column="87">HRESULT</name></type> ( <name pos:line="2396" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2396" pos:column="115">*</type:modifier><name pos:line="2396" pos:column="116">get_Language</name> )<parameter_list pos:line="2396" pos:column="130">( 
            <param><decl><type><name pos:line="2397" pos:column="13">CodeEvent</name> <type:modifier pos:line="2397" pos:column="23">*</type:modifier></type> <name pos:line="2397" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2398" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2398" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2398" pos:column="54">BSTR</name> <type:modifier pos:line="2398" pos:column="59">*</type:modifier></type><name pos:line="2398" pos:column="60">pLanguage</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2400" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2400" pos:column="87">HRESULT</name></type> ( <name pos:line="2400" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2400" pos:column="115">*</type:modifier><name pos:line="2400" pos:column="116">get_StartPoint</name> )<parameter_list pos:line="2400" pos:column="132">( 
            <param><decl><type><name pos:line="2401" pos:column="13">CodeEvent</name> <type:modifier pos:line="2401" pos:column="23">*</type:modifier></type> <name pos:line="2401" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2402" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2402" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2402" pos:column="54">/* external definition not present */</comment> <name pos:line="2402" pos:column="92">TextPoint</name> <type:modifier pos:line="2402" pos:column="102">*</type:modifier><type:modifier pos:line="2402" pos:column="103">*</type:modifier></type><name pos:line="2402" pos:column="104">ppTextPoint</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2404" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2404" pos:column="87">HRESULT</name></type> ( <name pos:line="2404" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2404" pos:column="115">*</type:modifier><name pos:line="2404" pos:column="116">get_EndPoint</name> )<parameter_list pos:line="2404" pos:column="130">( 
            <param><decl><type><name pos:line="2405" pos:column="13">CodeEvent</name> <type:modifier pos:line="2405" pos:column="23">*</type:modifier></type> <name pos:line="2405" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2406" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2406" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2406" pos:column="54">/* external definition not present */</comment> <name pos:line="2406" pos:column="92">TextPoint</name> <type:modifier pos:line="2406" pos:column="102">*</type:modifier><type:modifier pos:line="2406" pos:column="103">*</type:modifier></type><name pos:line="2406" pos:column="104">ppTextPoint</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2408" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */</comment> <function_decl><type><name pos:line="2408" pos:column="87">HRESULT</name></type> ( <name pos:line="2408" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2408" pos:column="115">*</type:modifier><name pos:line="2408" pos:column="116">get_ExtenderNames</name> )<parameter_list pos:line="2408" pos:column="135">( 
            <param><decl><type><name pos:line="2409" pos:column="13">CodeEvent</name> <type:modifier pos:line="2409" pos:column="23">*</type:modifier></type> <name pos:line="2409" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2410" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2410" pos:column="33">__RPC__out</name> <name pos:line="2410" pos:column="44">VARIANT</name> <type:modifier pos:line="2410" pos:column="52">*</type:modifier></type><name pos:line="2410" pos:column="53">ExtenderNames</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2412" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */</comment> <function_decl><type><name pos:line="2412" pos:column="87">HRESULT</name></type> ( <name pos:line="2412" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2412" pos:column="115">*</type:modifier><name pos:line="2412" pos:column="116">get_Extender</name> )<parameter_list pos:line="2412" pos:column="130">( 
            <param><decl><type><name pos:line="2413" pos:column="13">CodeEvent</name> <type:modifier pos:line="2413" pos:column="23">*</type:modifier></type> <name pos:line="2413" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="2414" pos:column="13">__RPC__in</name> <name pos:line="2414" pos:column="23">BSTR</name></type> <name pos:line="2414" pos:column="28">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="2415" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2415" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2415" pos:column="54">IDispatch</name> <type:modifier pos:line="2415" pos:column="64">*</type:modifier><type:modifier pos:line="2415" pos:column="65">*</type:modifier></type><name pos:line="2415" pos:column="66">Extender</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2417" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][nonbrowsable][propget][id] */</comment> <function_decl><type><name pos:line="2417" pos:column="87">HRESULT</name></type> ( <name pos:line="2417" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2417" pos:column="115">*</type:modifier><name pos:line="2417" pos:column="116">get_ExtenderCATID</name> )<parameter_list pos:line="2417" pos:column="135">( 
            <param><decl><type><name pos:line="2418" pos:column="13">CodeEvent</name> <type:modifier pos:line="2418" pos:column="23">*</type:modifier></type> <name pos:line="2418" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2419" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2419" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2419" pos:column="54">BSTR</name> <type:modifier pos:line="2419" pos:column="59">*</type:modifier></type><name pos:line="2419" pos:column="60">pRetval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2421" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */</comment> <macro><name pos:line="2421" pos:column="78">HRESULT</name> <argument_list pos:line="2421" pos:column="86">( <argument pos:line="2421" pos:column="88">STDMETHODCALLTYPE *GetStartPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2421" pos:column="122">(</op:operator> 
            <name pos:line="2422" pos:column="13">CodeEvent</name> <op:operator pos:line="2422" pos:column="23">*</op:operator> <name pos:line="2422" pos:column="25">This</name><op:operator pos:line="2422" pos:column="29">,</op:operator>
            <comment type="block" pos:line="2423" pos:column="13">/* [defaultvalue][in] */</comment> enum <comment type="block" pos:line="2423" pos:column="43">/* external definition not present */</comment> <name pos:line="2423" pos:column="81">vsCMPart</name> <name pos:line="2423" pos:column="90">Part</name><op:operator pos:line="2423" pos:column="94">,</op:operator>
            <comment type="block" pos:line="2424" pos:column="13">/* [retval][out] */</comment> <name pos:line="2424" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2424" pos:column="54">/* external definition not present */</comment> <name pos:line="2424" pos:column="92">TextPoint</name> <op:operator pos:line="2424" pos:column="102">*</op:operator><op:operator pos:line="2424" pos:column="103">*</op:operator><name pos:line="2424" pos:column="104">ppTextPoint</name><op:operator pos:line="2424" pos:column="115">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2426" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][id] */</comment> <macro><name pos:line="2426" pos:column="78">HRESULT</name> <argument_list pos:line="2426" pos:column="86">( <argument pos:line="2426" pos:column="88">STDMETHODCALLTYPE *GetEndPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2426" pos:column="120">(</op:operator> 
            <name pos:line="2427" pos:column="13">CodeEvent</name> <op:operator pos:line="2427" pos:column="23">*</op:operator> <name pos:line="2427" pos:column="25">This</name><op:operator pos:line="2427" pos:column="29">,</op:operator>
            <comment type="block" pos:line="2428" pos:column="13">/* [defaultvalue][in] */</comment> enum <comment type="block" pos:line="2428" pos:column="43">/* external definition not present */</comment> <name pos:line="2428" pos:column="81">vsCMPart</name> <name pos:line="2428" pos:column="90">Part</name><op:operator pos:line="2428" pos:column="94">,</op:operator>
            <comment type="block" pos:line="2429" pos:column="13">/* [retval][out] */</comment> <name pos:line="2429" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2429" pos:column="54">/* external definition not present */</comment> <name pos:line="2429" pos:column="92">TextPoint</name> <op:operator pos:line="2429" pos:column="102">*</op:operator><op:operator pos:line="2429" pos:column="103">*</op:operator><name pos:line="2429" pos:column="104">ppTextPoint</name><op:operator pos:line="2429" pos:column="115">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2431" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2431" pos:column="73">HRESULT</name></type> ( <name pos:line="2431" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2431" pos:column="101">*</type:modifier><name pos:line="2431" pos:column="102">get_Parent</name> )<parameter_list pos:line="2431" pos:column="114">( 
            <param><decl><type><name pos:line="2432" pos:column="13">CodeEvent</name> <type:modifier pos:line="2432" pos:column="23">*</type:modifier></type> <name pos:line="2432" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2433" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2433" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2433" pos:column="54">IDispatch</name> <type:modifier pos:line="2433" pos:column="64">*</type:modifier><type:modifier pos:line="2433" pos:column="65">*</type:modifier></type><name pos:line="2433" pos:column="66">ParentObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2435" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <macro><name pos:line="2435" pos:column="73">HRESULT</name> <argument_list pos:line="2435" pos:column="81">( <argument pos:line="2435" pos:column="83">STDMETHODCALLTYPE *put_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2435" pos:column="114">(</op:operator> 
            <name pos:line="2436" pos:column="13">CodeEvent</name> <op:operator pos:line="2436" pos:column="23">*</op:operator> <name pos:line="2436" pos:column="25">This</name><op:operator pos:line="2436" pos:column="29">,</op:operator>
            enum <comment type="block" pos:line="2437" pos:column="18">/* external definition not present */</comment> <name pos:line="2437" pos:column="56">vsCMAccess</name> <name pos:line="2437" pos:column="67">Access</name><op:operator pos:line="2437" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2439" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <macro><name pos:line="2439" pos:column="73">HRESULT</name> <argument_list pos:line="2439" pos:column="81">( <argument pos:line="2439" pos:column="83">STDMETHODCALLTYPE *get_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2439" pos:column="114">(</op:operator> 
            <name pos:line="2440" pos:column="13">CodeEvent</name> <op:operator pos:line="2440" pos:column="23">*</op:operator> <name pos:line="2440" pos:column="25">This</name><op:operator pos:line="2440" pos:column="29">,</op:operator>
            <comment type="block" pos:line="2441" pos:column="13">/* [retval][out] */</comment> <name pos:line="2441" pos:column="33">__RPC__out</name> enum <comment type="block" pos:line="2441" pos:column="49">/* external definition not present */</comment> <name pos:line="2441" pos:column="87">vsCMAccess</name> <op:operator pos:line="2441" pos:column="98">*</op:operator><name pos:line="2441" pos:column="99">Access</name><op:operator pos:line="2441" pos:column="105">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2443" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2443" pos:column="73">HRESULT</name></type> ( <name pos:line="2443" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2443" pos:column="101">*</type:modifier><name pos:line="2443" pos:column="102">get_Attributes</name> )<parameter_list pos:line="2443" pos:column="118">( 
            <param><decl><type><name pos:line="2444" pos:column="13">CodeEvent</name> <type:modifier pos:line="2444" pos:column="23">*</type:modifier></type> <name pos:line="2444" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2445" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2445" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2445" pos:column="54">/* external definition not present */</comment> <name pos:line="2445" pos:column="92">CodeElements</name> <type:modifier pos:line="2445" pos:column="105">*</type:modifier><type:modifier pos:line="2445" pos:column="106">*</type:modifier></type><name pos:line="2445" pos:column="107">ppMembers</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2447" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2447" pos:column="73">HRESULT</name></type> ( <name pos:line="2447" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2447" pos:column="101">*</type:modifier><name pos:line="2447" pos:column="102">get_DocComment</name> )<parameter_list pos:line="2447" pos:column="118">( 
            <param><decl><type><name pos:line="2448" pos:column="13">CodeEvent</name> <type:modifier pos:line="2448" pos:column="23">*</type:modifier></type> <name pos:line="2448" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2449" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2449" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2449" pos:column="54">BSTR</name> <type:modifier pos:line="2449" pos:column="59">*</type:modifier></type><name pos:line="2449" pos:column="60">pDocComment</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2451" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="2451" pos:column="73">HRESULT</name></type> ( <name pos:line="2451" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2451" pos:column="101">*</type:modifier><name pos:line="2451" pos:column="102">put_DocComment</name> )<parameter_list pos:line="2451" pos:column="118">( 
            <param><decl><type><name pos:line="2452" pos:column="13">CodeEvent</name> <type:modifier pos:line="2452" pos:column="23">*</type:modifier></type> <name pos:line="2452" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="2453" pos:column="13">__RPC__in</name> <name pos:line="2453" pos:column="23">BSTR</name></type> <name pos:line="2453" pos:column="28">DocComment</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2455" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2455" pos:column="73">HRESULT</name></type> ( <name pos:line="2455" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2455" pos:column="101">*</type:modifier><name pos:line="2455" pos:column="102">get_Comment</name> )<parameter_list pos:line="2455" pos:column="115">( 
            <param><decl><type><name pos:line="2456" pos:column="13">CodeEvent</name> <type:modifier pos:line="2456" pos:column="23">*</type:modifier></type> <name pos:line="2456" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2457" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2457" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2457" pos:column="54">BSTR</name> <type:modifier pos:line="2457" pos:column="59">*</type:modifier></type><name pos:line="2457" pos:column="60">pComment</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2459" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="2459" pos:column="73">HRESULT</name></type> ( <name pos:line="2459" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2459" pos:column="101">*</type:modifier><name pos:line="2459" pos:column="102">put_Comment</name> )<parameter_list pos:line="2459" pos:column="115">( 
            <param><decl><type><name pos:line="2460" pos:column="13">CodeEvent</name> <type:modifier pos:line="2460" pos:column="23">*</type:modifier></type> <name pos:line="2460" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="2461" pos:column="13">__RPC__in</name> <name pos:line="2461" pos:column="23">BSTR</name></type> <name pos:line="2461" pos:column="28">Comment</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2463" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="2463" pos:column="64">HRESULT</name></type> ( <name pos:line="2463" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="2463" pos:column="92">*</type:modifier><name pos:line="2463" pos:column="93">AddAttribute</name> )<parameter_list pos:line="2463" pos:column="107">( 
            <param><decl><type><name pos:line="2464" pos:column="13">CodeEvent</name> <type:modifier pos:line="2464" pos:column="23">*</type:modifier></type> <name pos:line="2464" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="2465" pos:column="13">__RPC__in</name> <name pos:line="2465" pos:column="23">BSTR</name></type> <name pos:line="2465" pos:column="28">Name</name></decl></param>,
            <param><decl><type><name pos:line="2466" pos:column="13">__RPC__in</name> <name pos:line="2466" pos:column="23">BSTR</name></type> <name pos:line="2466" pos:column="28">Value</name></decl></param>,
            <comment type="block" pos:line="2467" pos:column="13">/* [optional] */</comment> <param><decl><type><name pos:line="2467" pos:column="30">VARIANT</name></type> <name pos:line="2467" pos:column="38">Position</name></decl></param>,
            <comment type="block" pos:line="2468" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2468" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2468" pos:column="54">/* external definition not present */</comment> <name pos:line="2468" pos:column="92">CodeAttribute</name> <type:modifier pos:line="2468" pos:column="106">*</type:modifier><type:modifier pos:line="2468" pos:column="107">*</type:modifier></type><name pos:line="2468" pos:column="108">ppCodeAttribute</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2470" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="2470" pos:column="41">HRESULT</name></type> ( <name pos:line="2470" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="2470" pos:column="69">*</type:modifier><name pos:line="2470" pos:column="70">get_Adder</name> )<parameter_list pos:line="2470" pos:column="81">( 
            <param><decl><type><name pos:line="2471" pos:column="13">CodeEvent</name> <type:modifier pos:line="2471" pos:column="23">*</type:modifier></type> <name pos:line="2471" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2472" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2472" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2472" pos:column="54">/* external definition not present */</comment> <name pos:line="2472" pos:column="92">CodeFunction</name> <type:modifier pos:line="2472" pos:column="105">*</type:modifier><type:modifier pos:line="2472" pos:column="106">*</type:modifier></type><name pos:line="2472" pos:column="107">ppCodeFunction</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2474" pos:column="9">/* [helpstring][propput][id] */</comment> <function_decl><type><name pos:line="2474" pos:column="41">HRESULT</name></type> ( <name pos:line="2474" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="2474" pos:column="69">*</type:modifier><name pos:line="2474" pos:column="70">put_Adder</name> )<parameter_list pos:line="2474" pos:column="81">( 
            <param><decl><type><name pos:line="2475" pos:column="13">CodeEvent</name> <type:modifier pos:line="2475" pos:column="23">*</type:modifier></type> <name pos:line="2475" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="2476" pos:column="13">__RPC__in</name> <comment type="block" pos:line="2476" pos:column="23">/* external definition not present */</comment> <name pos:line="2476" pos:column="61">CodeFunction</name> <type:modifier pos:line="2476" pos:column="74">*</type:modifier></type><name pos:line="2476" pos:column="75">codeFunction</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2478" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="2478" pos:column="41">HRESULT</name></type> ( <name pos:line="2478" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="2478" pos:column="69">*</type:modifier><name pos:line="2478" pos:column="70">get_Remover</name> )<parameter_list pos:line="2478" pos:column="83">( 
            <param><decl><type><name pos:line="2479" pos:column="13">CodeEvent</name> <type:modifier pos:line="2479" pos:column="23">*</type:modifier></type> <name pos:line="2479" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2480" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2480" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2480" pos:column="54">/* external definition not present */</comment> <name pos:line="2480" pos:column="92">CodeFunction</name> <type:modifier pos:line="2480" pos:column="105">*</type:modifier><type:modifier pos:line="2480" pos:column="106">*</type:modifier></type><name pos:line="2480" pos:column="107">ppCodeFunction</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2482" pos:column="9">/* [helpstring][propput][id] */</comment> <function_decl><type><name pos:line="2482" pos:column="41">HRESULT</name></type> ( <name pos:line="2482" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="2482" pos:column="69">*</type:modifier><name pos:line="2482" pos:column="70">put_Remover</name> )<parameter_list pos:line="2482" pos:column="83">( 
            <param><decl><type><name pos:line="2483" pos:column="13">CodeEvent</name> <type:modifier pos:line="2483" pos:column="23">*</type:modifier></type> <name pos:line="2483" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="2484" pos:column="13">__RPC__in</name> <comment type="block" pos:line="2484" pos:column="23">/* external definition not present */</comment> <name pos:line="2484" pos:column="61">CodeFunction</name> <type:modifier pos:line="2484" pos:column="74">*</type:modifier></type><name pos:line="2484" pos:column="75">codeFunction</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2486" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="2486" pos:column="41">HRESULT</name></type> ( <name pos:line="2486" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="2486" pos:column="69">*</type:modifier><name pos:line="2486" pos:column="70">get_Thrower</name> )<parameter_list pos:line="2486" pos:column="83">( 
            <param><decl><type><name pos:line="2487" pos:column="13">CodeEvent</name> <type:modifier pos:line="2487" pos:column="23">*</type:modifier></type> <name pos:line="2487" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2488" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2488" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2488" pos:column="54">/* external definition not present */</comment> <name pos:line="2488" pos:column="92">CodeFunction</name> <type:modifier pos:line="2488" pos:column="105">*</type:modifier><type:modifier pos:line="2488" pos:column="106">*</type:modifier></type><name pos:line="2488" pos:column="107">ppCodeFunction</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2490" pos:column="9">/* [helpstring][propput][id] */</comment> <function_decl><type><name pos:line="2490" pos:column="41">HRESULT</name></type> ( <name pos:line="2490" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="2490" pos:column="69">*</type:modifier><name pos:line="2490" pos:column="70">put_Thrower</name> )<parameter_list pos:line="2490" pos:column="83">( 
            <param><decl><type><name pos:line="2491" pos:column="13">CodeEvent</name> <type:modifier pos:line="2491" pos:column="23">*</type:modifier></type> <name pos:line="2491" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="2492" pos:column="13">__RPC__in</name> <comment type="block" pos:line="2492" pos:column="23">/* external definition not present */</comment> <name pos:line="2492" pos:column="61">CodeFunction</name> <type:modifier pos:line="2492" pos:column="74">*</type:modifier></type><name pos:line="2492" pos:column="75">codeFunction</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2494" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="2494" pos:column="41">HRESULT</name></type> ( <name pos:line="2494" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="2494" pos:column="69">*</type:modifier><name pos:line="2494" pos:column="70">get_IsPropertyStyleEvent</name> )<parameter_list pos:line="2494" pos:column="96">( 
            <param><decl><type><name pos:line="2495" pos:column="13">CodeEvent</name> <type:modifier pos:line="2495" pos:column="23">*</type:modifier></type> <name pos:line="2495" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2496" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2496" pos:column="33">__RPC__out</name> <name pos:line="2496" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="2496" pos:column="57">*</type:modifier></type><name pos:line="2496" pos:column="58">vbIsPropertyStyle</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2498" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2498" pos:column="87">HRESULT</name></type> ( <name pos:line="2498" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2498" pos:column="115">*</type:modifier><name pos:line="2498" pos:column="116">get_Prototype</name> )<parameter_list pos:line="2498" pos:column="131">( 
            <param><decl><type><name pos:line="2499" pos:column="13">CodeEvent</name> <type:modifier pos:line="2499" pos:column="23">*</type:modifier></type> <name pos:line="2499" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2500" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="2500" pos:column="38">long</name></type> <name pos:line="2500" pos:column="43">Flags</name></decl></param>,
            <comment type="block" pos:line="2501" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2501" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2501" pos:column="54">BSTR</name> <type:modifier pos:line="2501" pos:column="59">*</type:modifier></type><name pos:line="2501" pos:column="60">pFullName</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2503" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2503" pos:column="87">HRESULT</name></type> ( <name pos:line="2503" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2503" pos:column="115">*</type:modifier><name pos:line="2503" pos:column="116">get_Type</name> )<parameter_list pos:line="2503" pos:column="126">( 
            <param><decl><type><name pos:line="2504" pos:column="13">CodeEvent</name> <type:modifier pos:line="2504" pos:column="23">*</type:modifier></type> <name pos:line="2504" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2505" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2505" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="2505" pos:column="54">/* external definition not present */</comment> <name pos:line="2505" pos:column="92">CodeTypeRef</name> <type:modifier pos:line="2505" pos:column="104">*</type:modifier><type:modifier pos:line="2505" pos:column="105">*</type:modifier></type><name pos:line="2505" pos:column="106">ppCodeTypeRef</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2507" pos:column="9">/* [nonbrowsable][helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="2507" pos:column="87">HRESULT</name></type> ( <name pos:line="2507" pos:column="97">STDMETHODCALLTYPE</name> <type:modifier pos:line="2507" pos:column="115">*</type:modifier><name pos:line="2507" pos:column="116">put_Type</name> )<parameter_list pos:line="2507" pos:column="126">( 
            <param><decl><type><name pos:line="2508" pos:column="13">CodeEvent</name> <type:modifier pos:line="2508" pos:column="23">*</type:modifier></type> <name pos:line="2508" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="2509" pos:column="13">__RPC__in</name> <comment type="block" pos:line="2509" pos:column="23">/* external definition not present */</comment> <name pos:line="2509" pos:column="61">CodeTypeRef</name> <type:modifier pos:line="2509" pos:column="73">*</type:modifier></type><name pos:line="2509" pos:column="74">pCodeTypeRef</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2511" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2511" pos:column="73">HRESULT</name></type> ( <name pos:line="2511" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2511" pos:column="101">*</type:modifier><name pos:line="2511" pos:column="102">get_OverrideKind</name> )<parameter_list pos:line="2511" pos:column="120">( 
            <param><decl><type><name pos:line="2512" pos:column="13">CodeEvent</name> <type:modifier pos:line="2512" pos:column="23">*</type:modifier></type> <name pos:line="2512" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2513" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2513" pos:column="33">__RPC__out</name> <name pos:line="2513" pos:column="44">vsCMOverrideKind</name> <type:modifier pos:line="2513" pos:column="61">*</type:modifier></type><name pos:line="2513" pos:column="62">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2515" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="2515" pos:column="73">HRESULT</name></type> ( <name pos:line="2515" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2515" pos:column="101">*</type:modifier><name pos:line="2515" pos:column="102">put_OverrideKind</name> )<parameter_list pos:line="2515" pos:column="120">( 
            <param><decl><type><name pos:line="2516" pos:column="13">CodeEvent</name> <type:modifier pos:line="2516" pos:column="23">*</type:modifier></type> <name pos:line="2516" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="2517" pos:column="13">vsCMOverrideKind</name></type> <name pos:line="2517" pos:column="30">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2519" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2519" pos:column="73">HRESULT</name></type> ( <name pos:line="2519" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2519" pos:column="101">*</type:modifier><name pos:line="2519" pos:column="102">get_IsShared</name> )<parameter_list pos:line="2519" pos:column="116">( 
            <param><decl><type><name pos:line="2520" pos:column="13">CodeEvent</name> <type:modifier pos:line="2520" pos:column="23">*</type:modifier></type> <name pos:line="2520" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="2521" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2521" pos:column="33">__RPC__out</name> <name pos:line="2521" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="2521" pos:column="57">*</type:modifier></type><name pos:line="2521" pos:column="58">pIsShared</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2523" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="2523" pos:column="73">HRESULT</name></type> ( <name pos:line="2523" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2523" pos:column="101">*</type:modifier><name pos:line="2523" pos:column="102">put_IsShared</name> )<parameter_list pos:line="2523" pos:column="116">( 
            <param><decl><type><name pos:line="2524" pos:column="13">CodeEvent</name> <type:modifier pos:line="2524" pos:column="23">*</type:modifier></type> <name pos:line="2524" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="2525" pos:column="13">VARIANT_BOOL</name></type> <name pos:line="2525" pos:column="26">Shared</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2527" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2528" pos:column="7">CodeEventVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2530" pos:column="5">interface</name></type> <name pos:line="2530" pos:column="15">CodeEvent</name>
    <argument_list pos:line="2531" pos:column="5">{
        <argument><expr><name pos:line="2532" pos:column="9">CONST_VTBL</name> struct <name pos:line="2532" pos:column="27">CodeEventVtbl</name> <op:operator pos:line="2532" pos:column="41">*</op:operator><name pos:line="2532" pos:column="42">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2537" pos:column="1">#<cpp:directive pos:line="2537" pos:column="2">ifdef</cpp:directive> <name pos:line="2537" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2540" pos:column="1">#<cpp:directive pos:line="2540" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2540" pos:column="9">CodeEvent_QueryInterface</name><parameter_list pos:line="2540" pos:column="33">(<param><type><name pos:line="2540" pos:column="34">This</name></type></param>,<param><type><name pos:line="2540" pos:column="39">riid</name></type></param>,<param><type><name pos:line="2540" pos:column="44">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2541" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2543" pos:column="1">#<cpp:directive pos:line="2543" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2543" pos:column="9">CodeEvent_AddRef</name><parameter_list pos:line="2543" pos:column="25">(<param><type><name pos:line="2543" pos:column="26">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2544" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="2546" pos:column="1">#<cpp:directive pos:line="2546" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2546" pos:column="9">CodeEvent_Release</name><parameter_list pos:line="2546" pos:column="26">(<param><type><name pos:line="2546" pos:column="27">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2547" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="2550" pos:column="1">#<cpp:directive pos:line="2550" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2550" pos:column="9">CodeEvent_GetTypeInfoCount</name><parameter_list pos:line="2550" pos:column="35">(<param><type><name pos:line="2550" pos:column="36">This</name></type></param>,<param><type><name pos:line="2550" pos:column="41">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2551" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2553" pos:column="1">#<cpp:directive pos:line="2553" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2553" pos:column="9">CodeEvent_GetTypeInfo</name><parameter_list pos:line="2553" pos:column="30">(<param><type><name pos:line="2553" pos:column="31">This</name></type></param>,<param><type><name pos:line="2553" pos:column="36">iTInfo</name></type></param>,<param><type><name pos:line="2553" pos:column="43">lcid</name></type></param>,<param><type><name pos:line="2553" pos:column="48">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2554" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="2556" pos:column="1">#<cpp:directive pos:line="2556" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2556" pos:column="9">CodeEvent_GetIDsOfNames</name><parameter_list pos:line="2556" pos:column="32">(<param><type><name pos:line="2556" pos:column="33">This</name></type></param>,<param><type><name pos:line="2556" pos:column="38">riid</name></type></param>,<param><type><name pos:line="2556" pos:column="43">rgszNames</name></type></param>,<param><type><name pos:line="2556" pos:column="53">cNames</name></type></param>,<param><type><name pos:line="2556" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="2556" pos:column="65">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2557" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="2559" pos:column="1">#<cpp:directive pos:line="2559" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2559" pos:column="9">CodeEvent_Invoke</name><parameter_list pos:line="2559" pos:column="25">(<param><type><name pos:line="2559" pos:column="26">This</name></type></param>,<param><type><name pos:line="2559" pos:column="31">dispIdMember</name></type></param>,<param><type><name pos:line="2559" pos:column="44">riid</name></type></param>,<param><type><name pos:line="2559" pos:column="49">lcid</name></type></param>,<param><type><name pos:line="2559" pos:column="54">wFlags</name></type></param>,<param><type><name pos:line="2559" pos:column="61">pDispParams</name></type></param>,<param><type><name pos:line="2559" pos:column="73">pVarResult</name></type></param>,<param><type><name pos:line="2559" pos:column="84">pExcepInfo</name></type></param>,<param><type><name pos:line="2559" pos:column="95">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2560" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="2563" pos:column="1">#<cpp:directive pos:line="2563" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2563" pos:column="9">CodeEvent_get_DTE</name><parameter_list pos:line="2563" pos:column="26">(<param><type><name pos:line="2563" pos:column="27">This</name></type></param>,<param><type><name pos:line="2563" pos:column="32">DTEObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2564" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTEObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2566" pos:column="1">#<cpp:directive pos:line="2566" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2566" pos:column="9">CodeEvent_get_Collection</name><parameter_list pos:line="2566" pos:column="33">(<param><type><name pos:line="2566" pos:column="34">This</name></type></param>,<param><type><name pos:line="2566" pos:column="39">ppCollection</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2567" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,ppCollection) )</cpp:value></cpp:define> 

<cpp:define pos:line="2569" pos:column="1">#<cpp:directive pos:line="2569" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2569" pos:column="9">CodeEvent_get_Name</name><parameter_list pos:line="2569" pos:column="27">(<param><type><name pos:line="2569" pos:column="28">This</name></type></param>,<param><type><name pos:line="2569" pos:column="33">pVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2570" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,pVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="2572" pos:column="1">#<cpp:directive pos:line="2572" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2572" pos:column="9">CodeEvent_put_Name</name><parameter_list pos:line="2572" pos:column="27">(<param><type><name pos:line="2572" pos:column="28">This</name></type></param>,<param><type><name pos:line="2572" pos:column="33">NewName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2573" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,NewName) )</cpp:value></cpp:define> 

<cpp:define pos:line="2575" pos:column="1">#<cpp:directive pos:line="2575" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2575" pos:column="9">CodeEvent_get_FullName</name><parameter_list pos:line="2575" pos:column="31">(<param><type><name pos:line="2575" pos:column="32">This</name></type></param>,<param><type><name pos:line="2575" pos:column="37">pVal</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2576" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,pVal) )</cpp:value></cpp:define> 

<cpp:define pos:line="2578" pos:column="1">#<cpp:directive pos:line="2578" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2578" pos:column="9">CodeEvent_get_ProjectItem</name><parameter_list pos:line="2578" pos:column="34">(<param><type><name pos:line="2578" pos:column="35">This</name></type></param>,<param><type><name pos:line="2578" pos:column="40">pProjItem</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2579" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItem(This,pProjItem) )</cpp:value></cpp:define> 

<cpp:define pos:line="2581" pos:column="1">#<cpp:directive pos:line="2581" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2581" pos:column="9">CodeEvent_get_Kind</name><parameter_list pos:line="2581" pos:column="27">(<param><type><name pos:line="2581" pos:column="28">This</name></type></param>,<param><type><name pos:line="2581" pos:column="33">pCodeEltKind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2582" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Kind(This,pCodeEltKind) )</cpp:value></cpp:define> 

<cpp:define pos:line="2584" pos:column="1">#<cpp:directive pos:line="2584" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2584" pos:column="9">CodeEvent_get_IsCodeType</name><parameter_list pos:line="2584" pos:column="33">(<param><type><name pos:line="2584" pos:column="34">This</name></type></param>,<param><type><name pos:line="2584" pos:column="39">pIsCodeType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2585" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsCodeType(This,pIsCodeType) )</cpp:value></cpp:define> 

<cpp:define pos:line="2587" pos:column="1">#<cpp:directive pos:line="2587" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2587" pos:column="9">CodeEvent_get_InfoLocation</name><parameter_list pos:line="2587" pos:column="35">(<param><type><name pos:line="2587" pos:column="36">This</name></type></param>,<param><type><name pos:line="2587" pos:column="41">pInfoLocation</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2588" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InfoLocation(This,pInfoLocation) )</cpp:value></cpp:define> 

<cpp:define pos:line="2590" pos:column="1">#<cpp:directive pos:line="2590" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2590" pos:column="9">CodeEvent_get_Children</name><parameter_list pos:line="2590" pos:column="31">(<param><type><name pos:line="2590" pos:column="32">This</name></type></param>,<param><type><name pos:line="2590" pos:column="37">ppCodeElements</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2591" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Children(This,ppCodeElements) )</cpp:value></cpp:define> 

<cpp:define pos:line="2593" pos:column="1">#<cpp:directive pos:line="2593" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2593" pos:column="9">CodeEvent_get_Language</name><parameter_list pos:line="2593" pos:column="31">(<param><type><name pos:line="2593" pos:column="32">This</name></type></param>,<param><type><name pos:line="2593" pos:column="37">pLanguage</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2594" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,pLanguage) )</cpp:value></cpp:define> 

<cpp:define pos:line="2596" pos:column="1">#<cpp:directive pos:line="2596" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2596" pos:column="9">CodeEvent_get_StartPoint</name><parameter_list pos:line="2596" pos:column="33">(<param><type><name pos:line="2596" pos:column="34">This</name></type></param>,<param><type><name pos:line="2596" pos:column="39">ppTextPoint</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2597" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartPoint(This,ppTextPoint) )</cpp:value></cpp:define> 

<cpp:define pos:line="2599" pos:column="1">#<cpp:directive pos:line="2599" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2599" pos:column="9">CodeEvent_get_EndPoint</name><parameter_list pos:line="2599" pos:column="31">(<param><type><name pos:line="2599" pos:column="32">This</name></type></param>,<param><type><name pos:line="2599" pos:column="37">ppTextPoint</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2600" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_EndPoint(This,ppTextPoint) )</cpp:value></cpp:define> 

<cpp:define pos:line="2602" pos:column="1">#<cpp:directive pos:line="2602" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2602" pos:column="9">CodeEvent_get_ExtenderNames</name><parameter_list pos:line="2602" pos:column="36">(<param><type><name pos:line="2602" pos:column="37">This</name></type></param>,<param><type><name pos:line="2602" pos:column="42">ExtenderNames</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2603" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,ExtenderNames) )</cpp:value></cpp:define> 

<cpp:define pos:line="2605" pos:column="1">#<cpp:directive pos:line="2605" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2605" pos:column="9">CodeEvent_get_Extender</name><parameter_list pos:line="2605" pos:column="31">(<param><type><name pos:line="2605" pos:column="32">This</name></type></param>,<param><type><name pos:line="2605" pos:column="37">ExtenderName</name></type></param>,<param><type><name pos:line="2605" pos:column="50">Extender</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2606" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,Extender) )</cpp:value></cpp:define> 

<cpp:define pos:line="2608" pos:column="1">#<cpp:directive pos:line="2608" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2608" pos:column="9">CodeEvent_get_ExtenderCATID</name><parameter_list pos:line="2608" pos:column="36">(<param><type><name pos:line="2608" pos:column="37">This</name></type></param>,<param><type><name pos:line="2608" pos:column="42">pRetval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2609" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,pRetval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2611" pos:column="1">#<cpp:directive pos:line="2611" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2611" pos:column="9">CodeEvent_GetStartPoint</name><parameter_list pos:line="2611" pos:column="32">(<param><type><name pos:line="2611" pos:column="33">This</name></type></param>,<param><type><name pos:line="2611" pos:column="38">Part</name></type></param>,<param><type><name pos:line="2611" pos:column="43">ppTextPoint</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2612" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStartPoint(This,Part,ppTextPoint) )</cpp:value></cpp:define> 

<cpp:define pos:line="2614" pos:column="1">#<cpp:directive pos:line="2614" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2614" pos:column="9">CodeEvent_GetEndPoint</name><parameter_list pos:line="2614" pos:column="30">(<param><type><name pos:line="2614" pos:column="31">This</name></type></param>,<param><type><name pos:line="2614" pos:column="36">Part</name></type></param>,<param><type><name pos:line="2614" pos:column="41">ppTextPoint</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2615" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndPoint(This,Part,ppTextPoint) )</cpp:value></cpp:define> 

<cpp:define pos:line="2617" pos:column="1">#<cpp:directive pos:line="2617" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2617" pos:column="9">CodeEvent_get_Parent</name><parameter_list pos:line="2617" pos:column="29">(<param><type><name pos:line="2617" pos:column="30">This</name></type></param>,<param><type><name pos:line="2617" pos:column="35">ParentObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2618" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,ParentObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="2620" pos:column="1">#<cpp:directive pos:line="2620" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2620" pos:column="9">CodeEvent_put_Access</name><parameter_list pos:line="2620" pos:column="29">(<param><type><name pos:line="2620" pos:column="30">This</name></type></param>,<param><type><name pos:line="2620" pos:column="35">Access</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2621" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Access(This,Access) )</cpp:value></cpp:define> 

<cpp:define pos:line="2623" pos:column="1">#<cpp:directive pos:line="2623" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2623" pos:column="9">CodeEvent_get_Access</name><parameter_list pos:line="2623" pos:column="29">(<param><type><name pos:line="2623" pos:column="30">This</name></type></param>,<param><type><name pos:line="2623" pos:column="35">Access</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2624" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Access(This,Access) )</cpp:value></cpp:define> 

<cpp:define pos:line="2626" pos:column="1">#<cpp:directive pos:line="2626" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2626" pos:column="9">CodeEvent_get_Attributes</name><parameter_list pos:line="2626" pos:column="33">(<param><type><name pos:line="2626" pos:column="34">This</name></type></param>,<param><type><name pos:line="2626" pos:column="39">ppMembers</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2627" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Attributes(This,ppMembers) )</cpp:value></cpp:define> 

<cpp:define pos:line="2629" pos:column="1">#<cpp:directive pos:line="2629" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2629" pos:column="9">CodeEvent_get_DocComment</name><parameter_list pos:line="2629" pos:column="33">(<param><type><name pos:line="2629" pos:column="34">This</name></type></param>,<param><type><name pos:line="2629" pos:column="39">pDocComment</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2630" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DocComment(This,pDocComment) )</cpp:value></cpp:define> 

<cpp:define pos:line="2632" pos:column="1">#<cpp:directive pos:line="2632" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2632" pos:column="9">CodeEvent_put_DocComment</name><parameter_list pos:line="2632" pos:column="33">(<param><type><name pos:line="2632" pos:column="34">This</name></type></param>,<param><type><name pos:line="2632" pos:column="39">DocComment</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2633" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DocComment(This,DocComment) )</cpp:value></cpp:define> 

<cpp:define pos:line="2635" pos:column="1">#<cpp:directive pos:line="2635" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2635" pos:column="9">CodeEvent_get_Comment</name><parameter_list pos:line="2635" pos:column="30">(<param><type><name pos:line="2635" pos:column="31">This</name></type></param>,<param><type><name pos:line="2635" pos:column="36">pComment</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2636" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Comment(This,pComment) )</cpp:value></cpp:define> 

<cpp:define pos:line="2638" pos:column="1">#<cpp:directive pos:line="2638" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2638" pos:column="9">CodeEvent_put_Comment</name><parameter_list pos:line="2638" pos:column="30">(<param><type><name pos:line="2638" pos:column="31">This</name></type></param>,<param><type><name pos:line="2638" pos:column="36">Comment</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2639" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Comment(This,Comment) )</cpp:value></cpp:define> 

<cpp:define pos:line="2641" pos:column="1">#<cpp:directive pos:line="2641" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2641" pos:column="9">CodeEvent_AddAttribute</name><parameter_list pos:line="2641" pos:column="31">(<param><type><name pos:line="2641" pos:column="32">This</name></type></param>,<param><type><name pos:line="2641" pos:column="37">Name</name></type></param>,<param><type><name pos:line="2641" pos:column="42">Value</name></type></param>,<param><type><name pos:line="2641" pos:column="48">Position</name></type></param>,<param><type><name pos:line="2641" pos:column="57">ppCodeAttribute</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2642" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddAttribute(This,Name,Value,Position,ppCodeAttribute) )</cpp:value></cpp:define> 

<cpp:define pos:line="2644" pos:column="1">#<cpp:directive pos:line="2644" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2644" pos:column="9">CodeEvent_get_Adder</name><parameter_list pos:line="2644" pos:column="28">(<param><type><name pos:line="2644" pos:column="29">This</name></type></param>,<param><type><name pos:line="2644" pos:column="34">ppCodeFunction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2645" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Adder(This,ppCodeFunction) )</cpp:value></cpp:define> 

<cpp:define pos:line="2647" pos:column="1">#<cpp:directive pos:line="2647" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2647" pos:column="9">CodeEvent_put_Adder</name><parameter_list pos:line="2647" pos:column="28">(<param><type><name pos:line="2647" pos:column="29">This</name></type></param>,<param><type><name pos:line="2647" pos:column="34">codeFunction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2648" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Adder(This,codeFunction) )</cpp:value></cpp:define> 

<cpp:define pos:line="2650" pos:column="1">#<cpp:directive pos:line="2650" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2650" pos:column="9">CodeEvent_get_Remover</name><parameter_list pos:line="2650" pos:column="30">(<param><type><name pos:line="2650" pos:column="31">This</name></type></param>,<param><type><name pos:line="2650" pos:column="36">ppCodeFunction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2651" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Remover(This,ppCodeFunction) )</cpp:value></cpp:define> 

<cpp:define pos:line="2653" pos:column="1">#<cpp:directive pos:line="2653" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2653" pos:column="9">CodeEvent_put_Remover</name><parameter_list pos:line="2653" pos:column="30">(<param><type><name pos:line="2653" pos:column="31">This</name></type></param>,<param><type><name pos:line="2653" pos:column="36">codeFunction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2654" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Remover(This,codeFunction) )</cpp:value></cpp:define> 

<cpp:define pos:line="2656" pos:column="1">#<cpp:directive pos:line="2656" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2656" pos:column="9">CodeEvent_get_Thrower</name><parameter_list pos:line="2656" pos:column="30">(<param><type><name pos:line="2656" pos:column="31">This</name></type></param>,<param><type><name pos:line="2656" pos:column="36">ppCodeFunction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2657" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Thrower(This,ppCodeFunction) )</cpp:value></cpp:define> 

<cpp:define pos:line="2659" pos:column="1">#<cpp:directive pos:line="2659" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2659" pos:column="9">CodeEvent_put_Thrower</name><parameter_list pos:line="2659" pos:column="30">(<param><type><name pos:line="2659" pos:column="31">This</name></type></param>,<param><type><name pos:line="2659" pos:column="36">codeFunction</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2660" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Thrower(This,codeFunction) )</cpp:value></cpp:define> 

<cpp:define pos:line="2662" pos:column="1">#<cpp:directive pos:line="2662" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2662" pos:column="9">CodeEvent_get_IsPropertyStyleEvent</name><parameter_list pos:line="2662" pos:column="43">(<param><type><name pos:line="2662" pos:column="44">This</name></type></param>,<param><type><name pos:line="2662" pos:column="49">vbIsPropertyStyle</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2663" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsPropertyStyleEvent(This,vbIsPropertyStyle) )</cpp:value></cpp:define> 

<cpp:define pos:line="2665" pos:column="1">#<cpp:directive pos:line="2665" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2665" pos:column="9">CodeEvent_get_Prototype</name><parameter_list pos:line="2665" pos:column="32">(<param><type><name pos:line="2665" pos:column="33">This</name></type></param>,<param><type><name pos:line="2665" pos:column="38">Flags</name></type></param>,<param><type><name pos:line="2665" pos:column="44">pFullName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2666" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Prototype(This,Flags,pFullName) )</cpp:value></cpp:define> 

<cpp:define pos:line="2668" pos:column="1">#<cpp:directive pos:line="2668" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2668" pos:column="9">CodeEvent_get_Type</name><parameter_list pos:line="2668" pos:column="27">(<param><type><name pos:line="2668" pos:column="28">This</name></type></param>,<param><type><name pos:line="2668" pos:column="33">ppCodeTypeRef</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2669" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Type(This,ppCodeTypeRef) )</cpp:value></cpp:define> 

<cpp:define pos:line="2671" pos:column="1">#<cpp:directive pos:line="2671" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2671" pos:column="9">CodeEvent_put_Type</name><parameter_list pos:line="2671" pos:column="27">(<param><type><name pos:line="2671" pos:column="28">This</name></type></param>,<param><type><name pos:line="2671" pos:column="33">pCodeTypeRef</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2672" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Type(This,pCodeTypeRef) )</cpp:value></cpp:define> 

<cpp:define pos:line="2674" pos:column="1">#<cpp:directive pos:line="2674" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2674" pos:column="9">CodeEvent_get_OverrideKind</name><parameter_list pos:line="2674" pos:column="35">(<param><type><name pos:line="2674" pos:column="36">This</name></type></param>,<param><type><name pos:line="2674" pos:column="41">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2675" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_OverrideKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="2677" pos:column="1">#<cpp:directive pos:line="2677" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2677" pos:column="9">CodeEvent_put_OverrideKind</name><parameter_list pos:line="2677" pos:column="35">(<param><type><name pos:line="2677" pos:column="36">This</name></type></param>,<param><type><name pos:line="2677" pos:column="41">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2678" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_OverrideKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="2680" pos:column="1">#<cpp:directive pos:line="2680" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2680" pos:column="9">CodeEvent_get_IsShared</name><parameter_list pos:line="2680" pos:column="31">(<param><type><name pos:line="2680" pos:column="32">This</name></type></param>,<param><type><name pos:line="2680" pos:column="37">pIsShared</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2681" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsShared(This,pIsShared) )</cpp:value></cpp:define> 

<cpp:define pos:line="2683" pos:column="1">#<cpp:directive pos:line="2683" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2683" pos:column="9">CodeEvent_put_IsShared</name><parameter_list pos:line="2683" pos:column="31">(<param><type><name pos:line="2683" pos:column="32">This</name></type></param>,<param><type><name pos:line="2683" pos:column="37">Shared</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2684" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_IsShared(This,Shared) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2686" pos:column="1">#<cpp:directive pos:line="2686" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2686" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2689" pos:column="1">#<cpp:directive pos:line="2689" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2689" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2694" pos:column="1">#<cpp:directive pos:line="2694" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2694" pos:column="9">/* __CodeEvent_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2697" pos:column="1">#<cpp:directive pos:line="2697" pos:column="2">ifndef</cpp:directive> <name pos:line="2697" pos:column="9">__CodeElement2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2698" pos:column="1">#<cpp:directive pos:line="2698" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2698" pos:column="9">__CodeElement2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2700" pos:column="1">/* interface CodeElement2 */</comment>
<comment type="block" pos:line="2701" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="2704" pos:column="1">EXTERN_C</name> <specifier pos:line="2704" pos:column="10">const</specifier> <name pos:line="2704" pos:column="16">IID</name></type> <name pos:line="2704" pos:column="20">IID_CodeElement2</name></decl>;</decl_stmt>

<cpp:if pos:line="2706" pos:column="1">#<cpp:directive pos:line="2706" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2706" pos:column="5">defined</name><argument_list pos:line="2706" pos:column="12">(<argument><expr><name pos:line="2706" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2706" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2706" pos:column="29">!</op:operator><call><name pos:line="2706" pos:column="30">defined</name><argument_list pos:line="2706" pos:column="37">(<argument><expr><name pos:line="2706" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2708" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2708" pos:column="19">(<argument pos:line="2708" pos:column="20">"F03DCCE8-233B-43D7-A66B-A66EFC1F85C3"</argument>)</argument_list></macro>
    <label><name pos:line="2709" pos:column="5">CodeElement2</name> :</label> <expr_stmt><expr pos:line="2709" pos:column="20">public <name pos:line="2709" pos:column="27">CodeElement</name>
    <block pos:line="2710" pos:column="5">{
    <expr pos:line="2711" pos:column="5">public<op:operator pos:line="2711" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="2712" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2712" pos:column="81">HRESULT</name> <name pos:line="2712" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2712" pos:column="107">get_ElementID</name><argument_list pos:line="2712" pos:column="120">( 
            <comment type="block" pos:line="2713" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2713" pos:column="33">__RPC__deref_out_opt BSTR *ID</argument>)</argument_list></macro> <op:operator pos:line="2713" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="2713" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="2715" pos:column="9">virtual <comment type="block" pos:line="2715" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="2715" pos:column="72">HRESULT</name> <name pos:line="2715" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="2715" pos:column="98">RenameSymbol</name><argument_list pos:line="2715" pos:column="110">( 
            <argument pos:line="2716" pos:column="13">__RPC__in BSTR NewName</argument>)</argument_list></macro> <op:operator pos:line="2716" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="2716" pos:column="39">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2720" pos:column="1">#<cpp:directive pos:line="2720" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2720" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2722" pos:column="5">typedef <type><struct pos:line="2722" pos:column="13">struct <name pos:line="2722" pos:column="20">CodeElement2Vtbl</name>
    <block pos:line="2723" pos:column="5">{<public type="default" pos:line="2723" pos:column="6">
        <decl_stmt><decl><type><name pos:line="2724" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="2726" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="2726" pos:column="46">HRESULT</name></type> ( <name pos:line="2726" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="2726" pos:column="74">*</type:modifier><name pos:line="2726" pos:column="75">QueryInterface</name> )<parameter_list pos:line="2726" pos:column="91">( 
            <param><decl><type><name pos:line="2727" pos:column="13">CodeElement2</name> <type:modifier pos:line="2727" pos:column="26">*</type:modifier></type> <name pos:line="2727" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2728" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="2728" pos:column="47">struct <name pos:line="2728" pos:column="54">GUID</name> <type:modifier pos:line="2728" pos:column="59">*</type:modifier></type><name pos:line="2728" pos:column="60">riid</name></decl><op:operator pos:line="2728" pos:column="64">,</op:operator>
            <comment type="block" pos:line="2729" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="2729" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="2729" pos:column="59">void</name> <type:modifier pos:line="2729" pos:column="64">*</type:modifier><type:modifier pos:line="2729" pos:column="65">*</type:modifier><name pos:line="2729" pos:column="66">ppvObj</name><op:operator pos:line="2729" pos:column="72">,</op:operator>
            <comment type="block" pos:line="2730" pos:column="13">/* [retval][out] */</comment> <name pos:line="2730" pos:column="33">__RPC__out</name> <name pos:line="2730" pos:column="44">void</name> <type:modifier pos:line="2730" pos:column="49">*</type:modifier><name pos:line="2730" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="2732" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="2732" pos:column="46">HRESULT</name></type> ( <name pos:line="2732" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="2732" pos:column="74">*</type:modifier><name pos:line="2732" pos:column="75">AddRef</name> )<parameter_list pos:line="2732" pos:column="83">( 
            <param><decl><type><name pos:line="2733" pos:column="13">CodeElement2</name> <type:modifier pos:line="2733" pos:column="26">*</type:modifier></type> <name pos:line="2733" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2734" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2734" pos:column="33">__RPC__out</name> <name pos:line="2734" pos:column="44">unsigned</name> <name pos:line="2734" pos:column="53">long</name> <type:modifier pos:line="2734" pos:column="58">*</type:modifier></type><name pos:line="2734" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2736" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="2736" pos:column="46">HRESULT</name></type> ( <name pos:line="2736" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="2736" pos:column="74">*</type:modifier><name pos:line="2736" pos:column="75">Release</name> )<parameter_list pos:line="2736" pos:column="84">( 
            <param><decl><type><name pos:line="2737" pos:column="13">CodeElement2</name> <type:modifier pos:line="2737" pos:column="26">*</type:modifier></type> <name pos:line="2737" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2738" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2738" pos:column="33">__RPC__out</name> <name pos:line="2738" pos:column="44">unsigned</name> <name pos:line="2738" pos:column="53">long</name> <type:modifier pos:line="2738" pos:column="58">*</type:modifier></type><name pos:line="2738" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2740" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="2740" pos:column="46">HRESULT</name></type> ( <name pos:line="2740" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="2740" pos:column="74">*</type:modifier><name pos:line="2740" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="2740" pos:column="93">( 
            <param><decl><type><name pos:line="2741" pos:column="13">CodeElement2</name> <type:modifier pos:line="2741" pos:column="26">*</type:modifier></type> <name pos:line="2741" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2742" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="2742" pos:column="38">__RPC__out</name> <name pos:line="2742" pos:column="49">unsigned</name> <name pos:line="2742" pos:column="58">UINT</name> <type:modifier pos:line="2742" pos:column="63">*</type:modifier></type><name pos:line="2742" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="2743" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2743" pos:column="33">__RPC__out</name> <name pos:line="2743" pos:column="44">void</name> <type:modifier pos:line="2743" pos:column="49">*</type:modifier></type><name pos:line="2743" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2745" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="2745" pos:column="46">HRESULT</name></type> ( <name pos:line="2745" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="2745" pos:column="74">*</type:modifier><name pos:line="2745" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="2745" pos:column="88">( 
            <param><decl><type><name pos:line="2746" pos:column="13">CodeElement2</name> <type:modifier pos:line="2746" pos:column="26">*</type:modifier></type> <name pos:line="2746" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2747" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="2747" pos:column="37">unsigned</name> <name pos:line="2747" pos:column="46">UINT</name></type> <name pos:line="2747" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="2748" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="2748" pos:column="37">unsigned</name> <name pos:line="2748" pos:column="46">long</name></type> <name pos:line="2748" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="2749" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="2749" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="2749" pos:column="59">void</name> <type:modifier pos:line="2749" pos:column="64">*</type:modifier><type:modifier pos:line="2749" pos:column="65">*</type:modifier></type><name pos:line="2749" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="2750" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2750" pos:column="33">__RPC__out</name> <name pos:line="2750" pos:column="44">void</name> <type:modifier pos:line="2750" pos:column="49">*</type:modifier></type><name pos:line="2750" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2752" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="2752" pos:column="46">HRESULT</name> <argument_list pos:line="2752" pos:column="54">( <argument pos:line="2752" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2752" pos:column="90">(</op:operator> 
            <name pos:line="2753" pos:column="13">CodeElement2</name> <op:operator pos:line="2753" pos:column="26">*</op:operator> <name pos:line="2753" pos:column="28">This</name><op:operator pos:line="2753" pos:column="32">,</op:operator>
            <comment type="block" pos:line="2754" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="2754" pos:column="37">__RPC__in</name> struct <name pos:line="2754" pos:column="54">GUID</name> <op:operator pos:line="2754" pos:column="59">*</op:operator><name pos:line="2754" pos:column="60">riid</name><op:operator pos:line="2754" pos:column="64">,</op:operator>
            <comment type="block" pos:line="2755" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="2755" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="2755" pos:column="57">signed</name> <name pos:line="2755" pos:column="64">char</name> <op:operator pos:line="2755" pos:column="69">*</op:operator><op:operator pos:line="2755" pos:column="70">*</op:operator><name pos:line="2755" pos:column="71">rgszNames</name><op:operator pos:line="2755" pos:column="80">,</op:operator>
            <comment type="block" pos:line="2756" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="2756" pos:column="37">unsigned</name> <name pos:line="2756" pos:column="46">UINT</name> <name pos:line="2756" pos:column="51">cNames</name><op:operator pos:line="2756" pos:column="57">,</op:operator>
            <comment type="block" pos:line="2757" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="2757" pos:column="37">unsigned</name> <name pos:line="2757" pos:column="46">long</name> <name pos:line="2757" pos:column="51">lcid</name><op:operator pos:line="2757" pos:column="55">,</op:operator>
            <comment type="block" pos:line="2758" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="2758" pos:column="38">__RPC__out</name> <name pos:line="2758" pos:column="49">signed</name> <name pos:line="2758" pos:column="56">long</name> <op:operator pos:line="2758" pos:column="61">*</op:operator><name pos:line="2758" pos:column="62">rgdispid</name><op:operator pos:line="2758" pos:column="70">,</op:operator>
            <comment type="block" pos:line="2759" pos:column="13">/* [retval][out] */</comment> <name pos:line="2759" pos:column="33">__RPC__out</name> <name pos:line="2759" pos:column="44">void</name> <op:operator pos:line="2759" pos:column="49">*</op:operator><name pos:line="2759" pos:column="50">retval</name><op:operator pos:line="2759" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2761" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="2761" pos:column="46">HRESULT</name> <argument_list pos:line="2761" pos:column="54">( <argument pos:line="2761" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2761" pos:column="83">(</op:operator> 
            <name pos:line="2762" pos:column="13">CodeElement2</name> <op:operator pos:line="2762" pos:column="26">*</op:operator> <name pos:line="2762" pos:column="28">This</name><op:operator pos:line="2762" pos:column="32">,</op:operator>
            <comment type="block" pos:line="2763" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="2763" pos:column="37">signed</name> <name pos:line="2763" pos:column="44">long</name> <name pos:line="2763" pos:column="49">dispidMember</name><op:operator pos:line="2763" pos:column="61">,</op:operator>
            <comment type="block" pos:line="2764" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="2764" pos:column="37">__RPC__in</name> struct <name pos:line="2764" pos:column="54">GUID</name> <op:operator pos:line="2764" pos:column="59">*</op:operator><name pos:line="2764" pos:column="60">riid</name><op:operator pos:line="2764" pos:column="64">,</op:operator>
            <comment type="block" pos:line="2765" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="2765" pos:column="37">unsigned</name> <name pos:line="2765" pos:column="46">long</name> <name pos:line="2765" pos:column="51">lcid</name><op:operator pos:line="2765" pos:column="55">,</op:operator>
            <comment type="block" pos:line="2766" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="2766" pos:column="37">unsigned</name> <name pos:line="2766" pos:column="46">short</name> <name pos:line="2766" pos:column="52">wFlags</name><op:operator pos:line="2766" pos:column="58">,</op:operator>
            <comment type="block" pos:line="2767" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="2767" pos:column="37">__RPC__in</name> struct <name pos:line="2767" pos:column="54">DISPPARAMS</name> <op:operator pos:line="2767" pos:column="65">*</op:operator><name pos:line="2767" pos:column="66">pdispparams</name><op:operator pos:line="2767" pos:column="77">,</op:operator>
            <comment type="block" pos:line="2768" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="2768" pos:column="38">__RPC__out</name> <name pos:line="2768" pos:column="49">VARIANT</name> <op:operator pos:line="2768" pos:column="57">*</op:operator><name pos:line="2768" pos:column="58">pvarResult</name><op:operator pos:line="2768" pos:column="68">,</op:operator>
            <comment type="block" pos:line="2769" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="2769" pos:column="38">__RPC__out</name> struct <name pos:line="2769" pos:column="56">EXCEPINFO</name> <op:operator pos:line="2769" pos:column="66">*</op:operator><name pos:line="2769" pos:column="67">pexcepinfo</name><op:operator pos:line="2769" pos:column="77">,</op:operator>
            <comment type="block" pos:line="2770" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="2770" pos:column="38">__RPC__out</name> <name pos:line="2770" pos:column="49">unsigned</name> <name pos:line="2770" pos:column="58">UINT</name> <op:operator pos:line="2770" pos:column="63">*</op:operator><name pos:line="2770" pos:column="64">puArgErr</name><op:operator pos:line="2770" pos:column="72">,</op:operator>
            <comment type="block" pos:line="2771" pos:column="13">/* [retval][out] */</comment> <name pos:line="2771" pos:column="33">__RPC__out</name> <name pos:line="2771" pos:column="44">void</name> <op:operator pos:line="2771" pos:column="49">*</op:operator><name pos:line="2771" pos:column="50">retval</name><op:operator pos:line="2771" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2773" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="2773" pos:column="43">HRESULT</name></type> ( <name pos:line="2773" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="2773" pos:column="71">*</type:modifier><name pos:line="2773" pos:column="72">get_DTE</name> )<parameter_list pos:line="2773" pos:column="81">( 
            <param><decl><type><name pos:line="2774" pos:column="13">CodeElement2</name> <type:modifier pos:line="2774" pos:column="26">*</type:modifier></type> <name pos:line="2774" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2775" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2775" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="2775" pos:column="54">*</type:modifier><type:modifier pos:line="2775" pos:column="55">*</type:modifier></type><name pos:line="2775" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2777" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="2777" pos:column="43">HRESULT</name></type> ( <name pos:line="2777" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="2777" pos:column="71">*</type:modifier><name pos:line="2777" pos:column="72">get_Collection</name> )<parameter_list pos:line="2777" pos:column="88">( 
            <param><decl><type><name pos:line="2778" pos:column="13">CodeElement2</name> <type:modifier pos:line="2778" pos:column="26">*</type:modifier></type> <name pos:line="2778" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2779" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2779" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2779" pos:column="54">CodeElements</name> <type:modifier pos:line="2779" pos:column="67">*</type:modifier><type:modifier pos:line="2779" pos:column="68">*</type:modifier></type><name pos:line="2779" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2781" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="2781" pos:column="43">HRESULT</name></type> ( <name pos:line="2781" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="2781" pos:column="71">*</type:modifier><name pos:line="2781" pos:column="72">get_Name</name> )<parameter_list pos:line="2781" pos:column="82">( 
            <param><decl><type><name pos:line="2782" pos:column="13">CodeElement2</name> <type:modifier pos:line="2782" pos:column="26">*</type:modifier></type> <name pos:line="2782" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2783" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2783" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2783" pos:column="54">BSTR</name> <type:modifier pos:line="2783" pos:column="59">*</type:modifier></type><name pos:line="2783" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2785" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="2785" pos:column="43">HRESULT</name></type> ( <name pos:line="2785" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="2785" pos:column="71">*</type:modifier><name pos:line="2785" pos:column="72">put_Name</name> )<parameter_list pos:line="2785" pos:column="82">( 
            <param><decl><type><name pos:line="2786" pos:column="13">CodeElement2</name> <type:modifier pos:line="2786" pos:column="26">*</type:modifier></type> <name pos:line="2786" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2787" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="2787" pos:column="33">__RPC__in</name> <name pos:line="2787" pos:column="43">BSTR</name></type> <name pos:line="2787" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="2788" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2788" pos:column="33">__RPC__out</name> <name pos:line="2788" pos:column="44">void</name> <type:modifier pos:line="2788" pos:column="49">*</type:modifier></type><name pos:line="2788" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2790" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="2790" pos:column="43">HRESULT</name></type> ( <name pos:line="2790" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="2790" pos:column="71">*</type:modifier><name pos:line="2790" pos:column="72">get_FullName</name> )<parameter_list pos:line="2790" pos:column="86">( 
            <param><decl><type><name pos:line="2791" pos:column="13">CodeElement2</name> <type:modifier pos:line="2791" pos:column="26">*</type:modifier></type> <name pos:line="2791" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2792" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2792" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2792" pos:column="54">BSTR</name> <type:modifier pos:line="2792" pos:column="59">*</type:modifier></type><name pos:line="2792" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2794" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="2794" pos:column="43">HRESULT</name></type> ( <name pos:line="2794" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="2794" pos:column="71">*</type:modifier><name pos:line="2794" pos:column="72">get_ProjectItem</name> )<parameter_list pos:line="2794" pos:column="89">( 
            <param><decl><type><name pos:line="2795" pos:column="13">CodeElement2</name> <type:modifier pos:line="2795" pos:column="26">*</type:modifier></type> <name pos:line="2795" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2796" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2796" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2796" pos:column="54">ProjectItem</name> <type:modifier pos:line="2796" pos:column="66">*</type:modifier><type:modifier pos:line="2796" pos:column="67">*</type:modifier></type><name pos:line="2796" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2798" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="2798" pos:column="43">HRESULT</name> <argument_list pos:line="2798" pos:column="51">( <argument pos:line="2798" pos:column="53">STDMETHODCALLTYPE *get_Kind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2798" pos:column="82">(</op:operator> 
            <name pos:line="2799" pos:column="13">CodeElement2</name> <op:operator pos:line="2799" pos:column="26">*</op:operator> <name pos:line="2799" pos:column="28">This</name><op:operator pos:line="2799" pos:column="32">,</op:operator>
            <comment type="block" pos:line="2800" pos:column="13">/* [retval][out] */</comment> <name pos:line="2800" pos:column="33">__RPC__out</name> enum <name pos:line="2800" pos:column="49">vsCMElement</name> <op:operator pos:line="2800" pos:column="61">*</op:operator><name pos:line="2800" pos:column="62">retval</name><op:operator pos:line="2800" pos:column="68">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2802" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="2802" pos:column="43">HRESULT</name></type> ( <name pos:line="2802" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="2802" pos:column="71">*</type:modifier><name pos:line="2802" pos:column="72">get_IsCodeType</name> )<parameter_list pos:line="2802" pos:column="88">( 
            <param><decl><type><name pos:line="2803" pos:column="13">CodeElement2</name> <type:modifier pos:line="2803" pos:column="26">*</type:modifier></type> <name pos:line="2803" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2804" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2804" pos:column="33">__RPC__out</name> <name pos:line="2804" pos:column="44">BOOLEAN</name> <type:modifier pos:line="2804" pos:column="52">*</type:modifier></type><name pos:line="2804" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2806" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="2806" pos:column="43">HRESULT</name> <argument_list pos:line="2806" pos:column="51">( <argument pos:line="2806" pos:column="53">STDMETHODCALLTYPE *get_InfoLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2806" pos:column="90">(</op:operator> 
            <name pos:line="2807" pos:column="13">CodeElement2</name> <op:operator pos:line="2807" pos:column="26">*</op:operator> <name pos:line="2807" pos:column="28">This</name><op:operator pos:line="2807" pos:column="32">,</op:operator>
            <comment type="block" pos:line="2808" pos:column="13">/* [retval][out] */</comment> <name pos:line="2808" pos:column="33">__RPC__out</name> enum <name pos:line="2808" pos:column="49">vsCMInfoLocation</name> <op:operator pos:line="2808" pos:column="66">*</op:operator><name pos:line="2808" pos:column="67">retval</name><op:operator pos:line="2808" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2810" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="2810" pos:column="43">HRESULT</name></type> ( <name pos:line="2810" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="2810" pos:column="71">*</type:modifier><name pos:line="2810" pos:column="72">get_Children</name> )<parameter_list pos:line="2810" pos:column="86">( 
            <param><decl><type><name pos:line="2811" pos:column="13">CodeElement2</name> <type:modifier pos:line="2811" pos:column="26">*</type:modifier></type> <name pos:line="2811" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2812" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2812" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2812" pos:column="54">CodeElements</name> <type:modifier pos:line="2812" pos:column="67">*</type:modifier><type:modifier pos:line="2812" pos:column="68">*</type:modifier></type><name pos:line="2812" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2814" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="2814" pos:column="43">HRESULT</name></type> ( <name pos:line="2814" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="2814" pos:column="71">*</type:modifier><name pos:line="2814" pos:column="72">get_Language</name> )<parameter_list pos:line="2814" pos:column="86">( 
            <param><decl><type><name pos:line="2815" pos:column="13">CodeElement2</name> <type:modifier pos:line="2815" pos:column="26">*</type:modifier></type> <name pos:line="2815" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2816" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2816" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2816" pos:column="54">BSTR</name> <type:modifier pos:line="2816" pos:column="59">*</type:modifier></type><name pos:line="2816" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2818" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="2818" pos:column="43">HRESULT</name></type> ( <name pos:line="2818" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="2818" pos:column="71">*</type:modifier><name pos:line="2818" pos:column="72">get_StartPoint</name> )<parameter_list pos:line="2818" pos:column="88">( 
            <param><decl><type><name pos:line="2819" pos:column="13">CodeElement2</name> <type:modifier pos:line="2819" pos:column="26">*</type:modifier></type> <name pos:line="2819" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2820" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2820" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2820" pos:column="54">TextPoint</name> <type:modifier pos:line="2820" pos:column="64">*</type:modifier><type:modifier pos:line="2820" pos:column="65">*</type:modifier></type><name pos:line="2820" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2822" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="2822" pos:column="43">HRESULT</name></type> ( <name pos:line="2822" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="2822" pos:column="71">*</type:modifier><name pos:line="2822" pos:column="72">get_EndPoint</name> )<parameter_list pos:line="2822" pos:column="86">( 
            <param><decl><type><name pos:line="2823" pos:column="13">CodeElement2</name> <type:modifier pos:line="2823" pos:column="26">*</type:modifier></type> <name pos:line="2823" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2824" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2824" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2824" pos:column="54">TextPoint</name> <type:modifier pos:line="2824" pos:column="64">*</type:modifier><type:modifier pos:line="2824" pos:column="65">*</type:modifier></type><name pos:line="2824" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2826" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="2826" pos:column="43">HRESULT</name></type> ( <name pos:line="2826" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="2826" pos:column="71">*</type:modifier><name pos:line="2826" pos:column="72">get_ExtenderNames</name> )<parameter_list pos:line="2826" pos:column="91">( 
            <param><decl><type><name pos:line="2827" pos:column="13">CodeElement2</name> <type:modifier pos:line="2827" pos:column="26">*</type:modifier></type> <name pos:line="2827" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2828" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2828" pos:column="33">__RPC__out</name> <name pos:line="2828" pos:column="44">VARIANT</name> <type:modifier pos:line="2828" pos:column="52">*</type:modifier></type><name pos:line="2828" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2830" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="2830" pos:column="43">HRESULT</name></type> ( <name pos:line="2830" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="2830" pos:column="71">*</type:modifier><name pos:line="2830" pos:column="72">get_Extender</name> )<parameter_list pos:line="2830" pos:column="86">( 
            <param><decl><type><name pos:line="2831" pos:column="13">CodeElement2</name> <type:modifier pos:line="2831" pos:column="26">*</type:modifier></type> <name pos:line="2831" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2832" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="2832" pos:column="33">__RPC__in</name> <name pos:line="2832" pos:column="43">BSTR</name></type> <name pos:line="2832" pos:column="48">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="2833" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2833" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2833" pos:column="54">IDispatch</name> <type:modifier pos:line="2833" pos:column="64">*</type:modifier><type:modifier pos:line="2833" pos:column="65">*</type:modifier></type><name pos:line="2833" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2835" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="2835" pos:column="43">HRESULT</name></type> ( <name pos:line="2835" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="2835" pos:column="71">*</type:modifier><name pos:line="2835" pos:column="72">get_ExtenderCATID</name> )<parameter_list pos:line="2835" pos:column="91">( 
            <param><decl><type><name pos:line="2836" pos:column="13">CodeElement2</name> <type:modifier pos:line="2836" pos:column="26">*</type:modifier></type> <name pos:line="2836" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2837" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2837" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2837" pos:column="54">BSTR</name> <type:modifier pos:line="2837" pos:column="59">*</type:modifier></type><name pos:line="2837" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2839" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="2839" pos:column="34">HRESULT</name> <argument_list pos:line="2839" pos:column="42">( <argument pos:line="2839" pos:column="44">STDMETHODCALLTYPE *GetStartPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2839" pos:column="78">(</op:operator> 
            <name pos:line="2840" pos:column="13">CodeElement2</name> <op:operator pos:line="2840" pos:column="26">*</op:operator> <name pos:line="2840" pos:column="28">This</name><op:operator pos:line="2840" pos:column="32">,</op:operator>
            <comment type="block" pos:line="2841" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="2841" pos:column="42">vsCMPart</name> <name pos:line="2841" pos:column="51">Part</name><op:operator pos:line="2841" pos:column="55">,</op:operator>
            <comment type="block" pos:line="2842" pos:column="13">/* [retval][out] */</comment> <name pos:line="2842" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2842" pos:column="54">TextPoint</name> <op:operator pos:line="2842" pos:column="64">*</op:operator><op:operator pos:line="2842" pos:column="65">*</op:operator><name pos:line="2842" pos:column="66">retval</name><op:operator pos:line="2842" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2844" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="2844" pos:column="34">HRESULT</name> <argument_list pos:line="2844" pos:column="42">( <argument pos:line="2844" pos:column="44">STDMETHODCALLTYPE *GetEndPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="2844" pos:column="76">(</op:operator> 
            <name pos:line="2845" pos:column="13">CodeElement2</name> <op:operator pos:line="2845" pos:column="26">*</op:operator> <name pos:line="2845" pos:column="28">This</name><op:operator pos:line="2845" pos:column="32">,</op:operator>
            <comment type="block" pos:line="2846" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="2846" pos:column="42">vsCMPart</name> <name pos:line="2846" pos:column="51">Part</name><op:operator pos:line="2846" pos:column="55">,</op:operator>
            <comment type="block" pos:line="2847" pos:column="13">/* [retval][out] */</comment> <name pos:line="2847" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2847" pos:column="54">TextPoint</name> <op:operator pos:line="2847" pos:column="64">*</op:operator><op:operator pos:line="2847" pos:column="65">*</op:operator><name pos:line="2847" pos:column="66">retval</name><op:operator pos:line="2847" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="2849" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="2849" pos:column="73">HRESULT</name></type> ( <name pos:line="2849" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="2849" pos:column="101">*</type:modifier><name pos:line="2849" pos:column="102">get_ElementID</name> )<parameter_list pos:line="2849" pos:column="117">( 
            <param><decl><type><name pos:line="2850" pos:column="13">CodeElement2</name> <type:modifier pos:line="2850" pos:column="26">*</type:modifier></type> <name pos:line="2850" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="2851" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="2851" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="2851" pos:column="54">BSTR</name> <type:modifier pos:line="2851" pos:column="59">*</type:modifier></type><name pos:line="2851" pos:column="60">ID</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="2853" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="2853" pos:column="64">HRESULT</name></type> ( <name pos:line="2853" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="2853" pos:column="92">*</type:modifier><name pos:line="2853" pos:column="93">RenameSymbol</name> )<parameter_list pos:line="2853" pos:column="107">( 
            <param><decl><type><name pos:line="2854" pos:column="13">CodeElement2</name> <type:modifier pos:line="2854" pos:column="26">*</type:modifier></type> <name pos:line="2854" pos:column="28">This</name></decl></param>,
            <param><decl><type><name pos:line="2855" pos:column="13">__RPC__in</name> <name pos:line="2855" pos:column="23">BSTR</name></type> <name pos:line="2855" pos:column="28">NewName</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="2857" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="2858" pos:column="7">CodeElement2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="2860" pos:column="5">interface</name></type> <name pos:line="2860" pos:column="15">CodeElement2</name>
    <argument_list pos:line="2861" pos:column="5">{
        <argument><expr><name pos:line="2862" pos:column="9">CONST_VTBL</name> struct <name pos:line="2862" pos:column="27">CodeElement2Vtbl</name> <op:operator pos:line="2862" pos:column="44">*</op:operator><name pos:line="2862" pos:column="45">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="2867" pos:column="1">#<cpp:directive pos:line="2867" pos:column="2">ifdef</cpp:directive> <name pos:line="2867" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="2870" pos:column="1">#<cpp:directive pos:line="2870" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2870" pos:column="9">CodeElement2_QueryInterface</name><parameter_list pos:line="2870" pos:column="36">(<param><type><name pos:line="2870" pos:column="37">This</name></type></param>,<param><type><name pos:line="2870" pos:column="42">riid</name></type></param>,<param><type><name pos:line="2870" pos:column="47">ppvObj</name></type></param>,<param><type><name pos:line="2870" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2871" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2873" pos:column="1">#<cpp:directive pos:line="2873" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2873" pos:column="9">CodeElement2_AddRef</name><parameter_list pos:line="2873" pos:column="28">(<param><type><name pos:line="2873" pos:column="29">This</name></type></param>,<param><type><name pos:line="2873" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2874" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2876" pos:column="1">#<cpp:directive pos:line="2876" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2876" pos:column="9">CodeElement2_Release</name><parameter_list pos:line="2876" pos:column="29">(<param><type><name pos:line="2876" pos:column="30">This</name></type></param>,<param><type><name pos:line="2876" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2877" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2879" pos:column="1">#<cpp:directive pos:line="2879" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2879" pos:column="9">CodeElement2_GetTypeInfoCount</name><parameter_list pos:line="2879" pos:column="38">(<param><type><name pos:line="2879" pos:column="39">This</name></type></param>,<param><type><name pos:line="2879" pos:column="44">pctinfo</name></type></param>,<param><type><name pos:line="2879" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2880" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2882" pos:column="1">#<cpp:directive pos:line="2882" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2882" pos:column="9">CodeElement2_GetTypeInfo</name><parameter_list pos:line="2882" pos:column="33">(<param><type><name pos:line="2882" pos:column="34">This</name></type></param>,<param><type><name pos:line="2882" pos:column="39">itinfo</name></type></param>,<param><type><name pos:line="2882" pos:column="46">lcid</name></type></param>,<param><type><name pos:line="2882" pos:column="51">pptinfo</name></type></param>,<param><type><name pos:line="2882" pos:column="59">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2883" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2885" pos:column="1">#<cpp:directive pos:line="2885" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2885" pos:column="9">CodeElement2_GetIDsOfNames</name><parameter_list pos:line="2885" pos:column="35">(<param><type><name pos:line="2885" pos:column="36">This</name></type></param>,<param><type><name pos:line="2885" pos:column="41">riid</name></type></param>,<param><type><name pos:line="2885" pos:column="46">rgszNames</name></type></param>,<param><type><name pos:line="2885" pos:column="56">cNames</name></type></param>,<param><type><name pos:line="2885" pos:column="63">lcid</name></type></param>,<param><type><name pos:line="2885" pos:column="68">rgdispid</name></type></param>,<param><type><name pos:line="2885" pos:column="77">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2886" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2888" pos:column="1">#<cpp:directive pos:line="2888" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2888" pos:column="9">CodeElement2_Invoke</name><parameter_list pos:line="2888" pos:column="28">(<param><type><name pos:line="2888" pos:column="29">This</name></type></param>,<param><type><name pos:line="2888" pos:column="34">dispidMember</name></type></param>,<param><type><name pos:line="2888" pos:column="47">riid</name></type></param>,<param><type><name pos:line="2888" pos:column="52">lcid</name></type></param>,<param><type><name pos:line="2888" pos:column="57">wFlags</name></type></param>,<param><type><name pos:line="2888" pos:column="64">pdispparams</name></type></param>,<param><type><name pos:line="2888" pos:column="76">pvarResult</name></type></param>,<param><type><name pos:line="2888" pos:column="87">pexcepinfo</name></type></param>,<param><type><name pos:line="2888" pos:column="98">puArgErr</name></type></param>,<param><type><name pos:line="2888" pos:column="107">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2889" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2891" pos:column="1">#<cpp:directive pos:line="2891" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2891" pos:column="9">CodeElement2_get_DTE</name><parameter_list pos:line="2891" pos:column="29">(<param><type><name pos:line="2891" pos:column="30">This</name></type></param>,<param><type><name pos:line="2891" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2892" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2894" pos:column="1">#<cpp:directive pos:line="2894" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2894" pos:column="9">CodeElement2_get_Collection</name><parameter_list pos:line="2894" pos:column="36">(<param><type><name pos:line="2894" pos:column="37">This</name></type></param>,<param><type><name pos:line="2894" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2895" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2897" pos:column="1">#<cpp:directive pos:line="2897" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2897" pos:column="9">CodeElement2_get_Name</name><parameter_list pos:line="2897" pos:column="30">(<param><type><name pos:line="2897" pos:column="31">This</name></type></param>,<param><type><name pos:line="2897" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2898" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2900" pos:column="1">#<cpp:directive pos:line="2900" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2900" pos:column="9">CodeElement2_put_Name</name><parameter_list pos:line="2900" pos:column="30">(<param><type><name pos:line="2900" pos:column="31">This</name></type></param>,<param><type><name pos:line="2900" pos:column="36">noname</name></type></param>,<param><type><name pos:line="2900" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2901" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2903" pos:column="1">#<cpp:directive pos:line="2903" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2903" pos:column="9">CodeElement2_get_FullName</name><parameter_list pos:line="2903" pos:column="34">(<param><type><name pos:line="2903" pos:column="35">This</name></type></param>,<param><type><name pos:line="2903" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2904" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2906" pos:column="1">#<cpp:directive pos:line="2906" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2906" pos:column="9">CodeElement2_get_ProjectItem</name><parameter_list pos:line="2906" pos:column="37">(<param><type><name pos:line="2906" pos:column="38">This</name></type></param>,<param><type><name pos:line="2906" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2907" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItem(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2909" pos:column="1">#<cpp:directive pos:line="2909" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2909" pos:column="9">CodeElement2_get_Kind</name><parameter_list pos:line="2909" pos:column="30">(<param><type><name pos:line="2909" pos:column="31">This</name></type></param>,<param><type><name pos:line="2909" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2910" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Kind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2912" pos:column="1">#<cpp:directive pos:line="2912" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2912" pos:column="9">CodeElement2_get_IsCodeType</name><parameter_list pos:line="2912" pos:column="36">(<param><type><name pos:line="2912" pos:column="37">This</name></type></param>,<param><type><name pos:line="2912" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2913" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsCodeType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2915" pos:column="1">#<cpp:directive pos:line="2915" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2915" pos:column="9">CodeElement2_get_InfoLocation</name><parameter_list pos:line="2915" pos:column="38">(<param><type><name pos:line="2915" pos:column="39">This</name></type></param>,<param><type><name pos:line="2915" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2916" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InfoLocation(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2918" pos:column="1">#<cpp:directive pos:line="2918" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2918" pos:column="9">CodeElement2_get_Children</name><parameter_list pos:line="2918" pos:column="34">(<param><type><name pos:line="2918" pos:column="35">This</name></type></param>,<param><type><name pos:line="2918" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2919" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Children(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2921" pos:column="1">#<cpp:directive pos:line="2921" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2921" pos:column="9">CodeElement2_get_Language</name><parameter_list pos:line="2921" pos:column="34">(<param><type><name pos:line="2921" pos:column="35">This</name></type></param>,<param><type><name pos:line="2921" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2922" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2924" pos:column="1">#<cpp:directive pos:line="2924" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2924" pos:column="9">CodeElement2_get_StartPoint</name><parameter_list pos:line="2924" pos:column="36">(<param><type><name pos:line="2924" pos:column="37">This</name></type></param>,<param><type><name pos:line="2924" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2925" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2927" pos:column="1">#<cpp:directive pos:line="2927" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2927" pos:column="9">CodeElement2_get_EndPoint</name><parameter_list pos:line="2927" pos:column="34">(<param><type><name pos:line="2927" pos:column="35">This</name></type></param>,<param><type><name pos:line="2927" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2928" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_EndPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2930" pos:column="1">#<cpp:directive pos:line="2930" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2930" pos:column="9">CodeElement2_get_ExtenderNames</name><parameter_list pos:line="2930" pos:column="39">(<param><type><name pos:line="2930" pos:column="40">This</name></type></param>,<param><type><name pos:line="2930" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2931" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2933" pos:column="1">#<cpp:directive pos:line="2933" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2933" pos:column="9">CodeElement2_get_Extender</name><parameter_list pos:line="2933" pos:column="34">(<param><type><name pos:line="2933" pos:column="35">This</name></type></param>,<param><type><name pos:line="2933" pos:column="40">ExtenderName</name></type></param>,<param><type><name pos:line="2933" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2934" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2936" pos:column="1">#<cpp:directive pos:line="2936" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2936" pos:column="9">CodeElement2_get_ExtenderCATID</name><parameter_list pos:line="2936" pos:column="39">(<param><type><name pos:line="2936" pos:column="40">This</name></type></param>,<param><type><name pos:line="2936" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2937" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2939" pos:column="1">#<cpp:directive pos:line="2939" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2939" pos:column="9">CodeElement2_GetStartPoint</name><parameter_list pos:line="2939" pos:column="35">(<param><type><name pos:line="2939" pos:column="36">This</name></type></param>,<param><type><name pos:line="2939" pos:column="41">Part</name></type></param>,<param><type><name pos:line="2939" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2940" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStartPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="2942" pos:column="1">#<cpp:directive pos:line="2942" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2942" pos:column="9">CodeElement2_GetEndPoint</name><parameter_list pos:line="2942" pos:column="33">(<param><type><name pos:line="2942" pos:column="34">This</name></type></param>,<param><type><name pos:line="2942" pos:column="39">Part</name></type></param>,<param><type><name pos:line="2942" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2943" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndPoint(This,Part,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="2946" pos:column="1">#<cpp:directive pos:line="2946" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2946" pos:column="9">CodeElement2_get_ElementID</name><parameter_list pos:line="2946" pos:column="35">(<param><type><name pos:line="2946" pos:column="36">This</name></type></param>,<param><type><name pos:line="2946" pos:column="41">ID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2947" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ElementID(This,ID) )</cpp:value></cpp:define> 

<cpp:define pos:line="2949" pos:column="1">#<cpp:directive pos:line="2949" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2949" pos:column="9">CodeElement2_RenameSymbol</name><parameter_list pos:line="2949" pos:column="34">(<param><type><name pos:line="2949" pos:column="35">This</name></type></param>,<param><type><name pos:line="2949" pos:column="40">NewName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="2950" pos:column="5">( (This)-&gt;lpVtbl -&gt; RenameSymbol(This,NewName) )</cpp:value></cpp:define> 

<cpp:endif pos:line="2952" pos:column="1">#<cpp:directive pos:line="2952" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="2952" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="2955" pos:column="1">#<cpp:directive pos:line="2955" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2955" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="2960" pos:column="1">#<cpp:directive pos:line="2960" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="2960" pos:column="9">/* __CodeElement2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="2963" pos:column="1">#<cpp:directive pos:line="2963" pos:column="2">ifndef</cpp:directive> <name pos:line="2963" pos:column="9">__CodeImport_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="2964" pos:column="1">#<cpp:directive pos:line="2964" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2964" pos:column="9">__CodeImport_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="2966" pos:column="1">/* interface CodeImport */</comment>
<comment type="block" pos:line="2967" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="2970" pos:column="1">EXTERN_C</name> <specifier pos:line="2970" pos:column="10">const</specifier> <name pos:line="2970" pos:column="16">IID</name></type> <name pos:line="2970" pos:column="20">IID_CodeImport</name></decl>;</decl_stmt>

<cpp:if pos:line="2972" pos:column="1">#<cpp:directive pos:line="2972" pos:column="2">if</cpp:directive> <expr><call><name pos:line="2972" pos:column="5">defined</name><argument_list pos:line="2972" pos:column="12">(<argument><expr><name pos:line="2972" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="2972" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="2972" pos:column="29">!</op:operator><call><name pos:line="2972" pos:column="30">defined</name><argument_list pos:line="2972" pos:column="37">(<argument><expr><name pos:line="2972" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="2974" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="2974" pos:column="19">(<argument pos:line="2974" pos:column="20">"0C9A256E-0FF9-4D4A-88E6-304ACF78225F"</argument>)</argument_list></macro>
    <label><name pos:line="2975" pos:column="5">CodeImport</name> :</label> <expr_stmt><expr pos:line="2975" pos:column="18">public <name pos:line="2975" pos:column="25">CodeElement</name>
    <block pos:line="2976" pos:column="5">{
    <expr pos:line="2977" pos:column="5">public<op:operator pos:line="2977" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="2978" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2978" pos:column="81">HRESULT</name> <name pos:line="2978" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2978" pos:column="107">get_Namespace</name><argument_list pos:line="2978" pos:column="120">( 
            <comment type="block" pos:line="2979" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2979" pos:column="33">__RPC__deref_out_opt BSTR *Name</argument>)</argument_list></macro> <op:operator pos:line="2979" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="2979" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="2981" pos:column="9">virtual <comment type="block" pos:line="2981" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="2981" pos:column="81">HRESULT</name> <name pos:line="2981" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2981" pos:column="107">put_Namespace</name><argument_list pos:line="2981" pos:column="120">( 
            <argument pos:line="2982" pos:column="13">__RPC__in BSTR Name</argument>)</argument_list></macro> <op:operator pos:line="2982" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="2982" pos:column="36">0</lit:literal></expr>;
        
        <expr pos:line="2984" pos:column="9">virtual <comment type="block" pos:line="2984" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2984" pos:column="81">HRESULT</name> <name pos:line="2984" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2984" pos:column="107">get_Alias</name><argument_list pos:line="2984" pos:column="116">( 
            <comment type="block" pos:line="2985" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2985" pos:column="33">__RPC__deref_out_opt BSTR *Alias</argument>)</argument_list></macro> <op:operator pos:line="2985" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="2985" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="2987" pos:column="9">virtual <comment type="block" pos:line="2987" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="2987" pos:column="81">HRESULT</name> <name pos:line="2987" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2987" pos:column="107">put_Alias</name><argument_list pos:line="2987" pos:column="116">( 
            <argument pos:line="2988" pos:column="13">__RPC__in BSTR Alias</argument>)</argument_list></macro> <op:operator pos:line="2988" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="2988" pos:column="37">0</lit:literal></expr>;
        
        <expr pos:line="2990" pos:column="9">virtual <comment type="block" pos:line="2990" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="2990" pos:column="81">HRESULT</name> <name pos:line="2990" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="2990" pos:column="107">get_Parent</name><argument_list pos:line="2990" pos:column="117">( 
            <comment type="block" pos:line="2991" pos:column="13">/* [retval][out] */</comment> <argument pos:line="2991" pos:column="33">__RPC__deref_out_opt IDispatch **ParentObject</argument>)</argument_list></macro> <op:operator pos:line="2991" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="2991" pos:column="82">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="2995" pos:column="1">#<cpp:directive pos:line="2995" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="2995" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="2997" pos:column="5">typedef <type><struct pos:line="2997" pos:column="13">struct <name pos:line="2997" pos:column="20">CodeImportVtbl</name>
    <block pos:line="2998" pos:column="5">{<public type="default" pos:line="2998" pos:column="6">
        <decl_stmt><decl><type><name pos:line="2999" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="3001" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="3001" pos:column="46">HRESULT</name></type> ( <name pos:line="3001" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3001" pos:column="74">*</type:modifier><name pos:line="3001" pos:column="75">QueryInterface</name> )<parameter_list pos:line="3001" pos:column="91">( 
            <param><decl><type><name pos:line="3002" pos:column="13">CodeImport</name> <type:modifier pos:line="3002" pos:column="24">*</type:modifier></type> <name pos:line="3002" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3003" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="3003" pos:column="47">struct <name pos:line="3003" pos:column="54">GUID</name> <type:modifier pos:line="3003" pos:column="59">*</type:modifier></type><name pos:line="3003" pos:column="60">riid</name></decl><op:operator pos:line="3003" pos:column="64">,</op:operator>
            <comment type="block" pos:line="3004" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3004" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="3004" pos:column="59">void</name> <type:modifier pos:line="3004" pos:column="64">*</type:modifier><type:modifier pos:line="3004" pos:column="65">*</type:modifier><name pos:line="3004" pos:column="66">ppvObj</name><op:operator pos:line="3004" pos:column="72">,</op:operator>
            <comment type="block" pos:line="3005" pos:column="13">/* [retval][out] */</comment> <name pos:line="3005" pos:column="33">__RPC__out</name> <name pos:line="3005" pos:column="44">void</name> <type:modifier pos:line="3005" pos:column="49">*</type:modifier><name pos:line="3005" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="3007" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="3007" pos:column="46">HRESULT</name></type> ( <name pos:line="3007" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3007" pos:column="74">*</type:modifier><name pos:line="3007" pos:column="75">AddRef</name> )<parameter_list pos:line="3007" pos:column="83">( 
            <param><decl><type><name pos:line="3008" pos:column="13">CodeImport</name> <type:modifier pos:line="3008" pos:column="24">*</type:modifier></type> <name pos:line="3008" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3009" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3009" pos:column="33">__RPC__out</name> <name pos:line="3009" pos:column="44">unsigned</name> <name pos:line="3009" pos:column="53">long</name> <type:modifier pos:line="3009" pos:column="58">*</type:modifier></type><name pos:line="3009" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3011" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="3011" pos:column="46">HRESULT</name></type> ( <name pos:line="3011" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3011" pos:column="74">*</type:modifier><name pos:line="3011" pos:column="75">Release</name> )<parameter_list pos:line="3011" pos:column="84">( 
            <param><decl><type><name pos:line="3012" pos:column="13">CodeImport</name> <type:modifier pos:line="3012" pos:column="24">*</type:modifier></type> <name pos:line="3012" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3013" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3013" pos:column="33">__RPC__out</name> <name pos:line="3013" pos:column="44">unsigned</name> <name pos:line="3013" pos:column="53">long</name> <type:modifier pos:line="3013" pos:column="58">*</type:modifier></type><name pos:line="3013" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3015" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="3015" pos:column="46">HRESULT</name></type> ( <name pos:line="3015" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3015" pos:column="74">*</type:modifier><name pos:line="3015" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="3015" pos:column="93">( 
            <param><decl><type><name pos:line="3016" pos:column="13">CodeImport</name> <type:modifier pos:line="3016" pos:column="24">*</type:modifier></type> <name pos:line="3016" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3017" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="3017" pos:column="38">__RPC__out</name> <name pos:line="3017" pos:column="49">unsigned</name> <name pos:line="3017" pos:column="58">UINT</name> <type:modifier pos:line="3017" pos:column="63">*</type:modifier></type><name pos:line="3017" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="3018" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3018" pos:column="33">__RPC__out</name> <name pos:line="3018" pos:column="44">void</name> <type:modifier pos:line="3018" pos:column="49">*</type:modifier></type><name pos:line="3018" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3020" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="3020" pos:column="46">HRESULT</name></type> ( <name pos:line="3020" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3020" pos:column="74">*</type:modifier><name pos:line="3020" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="3020" pos:column="88">( 
            <param><decl><type><name pos:line="3021" pos:column="13">CodeImport</name> <type:modifier pos:line="3021" pos:column="24">*</type:modifier></type> <name pos:line="3021" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3022" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3022" pos:column="37">unsigned</name> <name pos:line="3022" pos:column="46">UINT</name></type> <name pos:line="3022" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="3023" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3023" pos:column="37">unsigned</name> <name pos:line="3023" pos:column="46">long</name></type> <name pos:line="3023" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="3024" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="3024" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="3024" pos:column="59">void</name> <type:modifier pos:line="3024" pos:column="64">*</type:modifier><type:modifier pos:line="3024" pos:column="65">*</type:modifier></type><name pos:line="3024" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="3025" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3025" pos:column="33">__RPC__out</name> <name pos:line="3025" pos:column="44">void</name> <type:modifier pos:line="3025" pos:column="49">*</type:modifier></type><name pos:line="3025" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3027" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="3027" pos:column="46">HRESULT</name> <argument_list pos:line="3027" pos:column="54">( <argument pos:line="3027" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3027" pos:column="90">(</op:operator> 
            <name pos:line="3028" pos:column="13">CodeImport</name> <op:operator pos:line="3028" pos:column="24">*</op:operator> <name pos:line="3028" pos:column="26">This</name><op:operator pos:line="3028" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3029" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3029" pos:column="37">__RPC__in</name> struct <name pos:line="3029" pos:column="54">GUID</name> <op:operator pos:line="3029" pos:column="59">*</op:operator><name pos:line="3029" pos:column="60">riid</name><op:operator pos:line="3029" pos:column="64">,</op:operator>
            <comment type="block" pos:line="3030" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3030" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="3030" pos:column="57">signed</name> <name pos:line="3030" pos:column="64">char</name> <op:operator pos:line="3030" pos:column="69">*</op:operator><op:operator pos:line="3030" pos:column="70">*</op:operator><name pos:line="3030" pos:column="71">rgszNames</name><op:operator pos:line="3030" pos:column="80">,</op:operator>
            <comment type="block" pos:line="3031" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3031" pos:column="37">unsigned</name> <name pos:line="3031" pos:column="46">UINT</name> <name pos:line="3031" pos:column="51">cNames</name><op:operator pos:line="3031" pos:column="57">,</op:operator>
            <comment type="block" pos:line="3032" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3032" pos:column="37">unsigned</name> <name pos:line="3032" pos:column="46">long</name> <name pos:line="3032" pos:column="51">lcid</name><op:operator pos:line="3032" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3033" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3033" pos:column="38">__RPC__out</name> <name pos:line="3033" pos:column="49">signed</name> <name pos:line="3033" pos:column="56">long</name> <op:operator pos:line="3033" pos:column="61">*</op:operator><name pos:line="3033" pos:column="62">rgdispid</name><op:operator pos:line="3033" pos:column="70">,</op:operator>
            <comment type="block" pos:line="3034" pos:column="13">/* [retval][out] */</comment> <name pos:line="3034" pos:column="33">__RPC__out</name> <name pos:line="3034" pos:column="44">void</name> <op:operator pos:line="3034" pos:column="49">*</op:operator><name pos:line="3034" pos:column="50">retval</name><op:operator pos:line="3034" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3036" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="3036" pos:column="46">HRESULT</name> <argument_list pos:line="3036" pos:column="54">( <argument pos:line="3036" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3036" pos:column="83">(</op:operator> 
            <name pos:line="3037" pos:column="13">CodeImport</name> <op:operator pos:line="3037" pos:column="24">*</op:operator> <name pos:line="3037" pos:column="26">This</name><op:operator pos:line="3037" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3038" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3038" pos:column="37">signed</name> <name pos:line="3038" pos:column="44">long</name> <name pos:line="3038" pos:column="49">dispidMember</name><op:operator pos:line="3038" pos:column="61">,</op:operator>
            <comment type="block" pos:line="3039" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3039" pos:column="37">__RPC__in</name> struct <name pos:line="3039" pos:column="54">GUID</name> <op:operator pos:line="3039" pos:column="59">*</op:operator><name pos:line="3039" pos:column="60">riid</name><op:operator pos:line="3039" pos:column="64">,</op:operator>
            <comment type="block" pos:line="3040" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3040" pos:column="37">unsigned</name> <name pos:line="3040" pos:column="46">long</name> <name pos:line="3040" pos:column="51">lcid</name><op:operator pos:line="3040" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3041" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3041" pos:column="37">unsigned</name> <name pos:line="3041" pos:column="46">short</name> <name pos:line="3041" pos:column="52">wFlags</name><op:operator pos:line="3041" pos:column="58">,</op:operator>
            <comment type="block" pos:line="3042" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3042" pos:column="37">__RPC__in</name> struct <name pos:line="3042" pos:column="54">DISPPARAMS</name> <op:operator pos:line="3042" pos:column="65">*</op:operator><name pos:line="3042" pos:column="66">pdispparams</name><op:operator pos:line="3042" pos:column="77">,</op:operator>
            <comment type="block" pos:line="3043" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3043" pos:column="38">__RPC__out</name> <name pos:line="3043" pos:column="49">VARIANT</name> <op:operator pos:line="3043" pos:column="57">*</op:operator><name pos:line="3043" pos:column="58">pvarResult</name><op:operator pos:line="3043" pos:column="68">,</op:operator>
            <comment type="block" pos:line="3044" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3044" pos:column="38">__RPC__out</name> struct <name pos:line="3044" pos:column="56">EXCEPINFO</name> <op:operator pos:line="3044" pos:column="66">*</op:operator><name pos:line="3044" pos:column="67">pexcepinfo</name><op:operator pos:line="3044" pos:column="77">,</op:operator>
            <comment type="block" pos:line="3045" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3045" pos:column="38">__RPC__out</name> <name pos:line="3045" pos:column="49">unsigned</name> <name pos:line="3045" pos:column="58">UINT</name> <op:operator pos:line="3045" pos:column="63">*</op:operator><name pos:line="3045" pos:column="64">puArgErr</name><op:operator pos:line="3045" pos:column="72">,</op:operator>
            <comment type="block" pos:line="3046" pos:column="13">/* [retval][out] */</comment> <name pos:line="3046" pos:column="33">__RPC__out</name> <name pos:line="3046" pos:column="44">void</name> <op:operator pos:line="3046" pos:column="49">*</op:operator><name pos:line="3046" pos:column="50">retval</name><op:operator pos:line="3046" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3048" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3048" pos:column="43">HRESULT</name></type> ( <name pos:line="3048" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3048" pos:column="71">*</type:modifier><name pos:line="3048" pos:column="72">get_DTE</name> )<parameter_list pos:line="3048" pos:column="81">( 
            <param><decl><type><name pos:line="3049" pos:column="13">CodeImport</name> <type:modifier pos:line="3049" pos:column="24">*</type:modifier></type> <name pos:line="3049" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3050" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3050" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="3050" pos:column="54">*</type:modifier><type:modifier pos:line="3050" pos:column="55">*</type:modifier></type><name pos:line="3050" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3052" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3052" pos:column="43">HRESULT</name></type> ( <name pos:line="3052" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3052" pos:column="71">*</type:modifier><name pos:line="3052" pos:column="72">get_Collection</name> )<parameter_list pos:line="3052" pos:column="88">( 
            <param><decl><type><name pos:line="3053" pos:column="13">CodeImport</name> <type:modifier pos:line="3053" pos:column="24">*</type:modifier></type> <name pos:line="3053" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3054" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3054" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3054" pos:column="54">CodeElements</name> <type:modifier pos:line="3054" pos:column="67">*</type:modifier><type:modifier pos:line="3054" pos:column="68">*</type:modifier></type><name pos:line="3054" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3056" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3056" pos:column="43">HRESULT</name></type> ( <name pos:line="3056" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3056" pos:column="71">*</type:modifier><name pos:line="3056" pos:column="72">get_Name</name> )<parameter_list pos:line="3056" pos:column="82">( 
            <param><decl><type><name pos:line="3057" pos:column="13">CodeImport</name> <type:modifier pos:line="3057" pos:column="24">*</type:modifier></type> <name pos:line="3057" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3058" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3058" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3058" pos:column="54">BSTR</name> <type:modifier pos:line="3058" pos:column="59">*</type:modifier></type><name pos:line="3058" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3060" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="3060" pos:column="43">HRESULT</name></type> ( <name pos:line="3060" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3060" pos:column="71">*</type:modifier><name pos:line="3060" pos:column="72">put_Name</name> )<parameter_list pos:line="3060" pos:column="82">( 
            <param><decl><type><name pos:line="3061" pos:column="13">CodeImport</name> <type:modifier pos:line="3061" pos:column="24">*</type:modifier></type> <name pos:line="3061" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3062" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3062" pos:column="33">__RPC__in</name> <name pos:line="3062" pos:column="43">BSTR</name></type> <name pos:line="3062" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="3063" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3063" pos:column="33">__RPC__out</name> <name pos:line="3063" pos:column="44">void</name> <type:modifier pos:line="3063" pos:column="49">*</type:modifier></type><name pos:line="3063" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3065" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3065" pos:column="43">HRESULT</name></type> ( <name pos:line="3065" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3065" pos:column="71">*</type:modifier><name pos:line="3065" pos:column="72">get_FullName</name> )<parameter_list pos:line="3065" pos:column="86">( 
            <param><decl><type><name pos:line="3066" pos:column="13">CodeImport</name> <type:modifier pos:line="3066" pos:column="24">*</type:modifier></type> <name pos:line="3066" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3067" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3067" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3067" pos:column="54">BSTR</name> <type:modifier pos:line="3067" pos:column="59">*</type:modifier></type><name pos:line="3067" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3069" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3069" pos:column="43">HRESULT</name></type> ( <name pos:line="3069" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3069" pos:column="71">*</type:modifier><name pos:line="3069" pos:column="72">get_ProjectItem</name> )<parameter_list pos:line="3069" pos:column="89">( 
            <param><decl><type><name pos:line="3070" pos:column="13">CodeImport</name> <type:modifier pos:line="3070" pos:column="24">*</type:modifier></type> <name pos:line="3070" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3071" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3071" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3071" pos:column="54">ProjectItem</name> <type:modifier pos:line="3071" pos:column="66">*</type:modifier><type:modifier pos:line="3071" pos:column="67">*</type:modifier></type><name pos:line="3071" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3073" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="3073" pos:column="43">HRESULT</name> <argument_list pos:line="3073" pos:column="51">( <argument pos:line="3073" pos:column="53">STDMETHODCALLTYPE *get_Kind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3073" pos:column="82">(</op:operator> 
            <name pos:line="3074" pos:column="13">CodeImport</name> <op:operator pos:line="3074" pos:column="24">*</op:operator> <name pos:line="3074" pos:column="26">This</name><op:operator pos:line="3074" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3075" pos:column="13">/* [retval][out] */</comment> <name pos:line="3075" pos:column="33">__RPC__out</name> enum <name pos:line="3075" pos:column="49">vsCMElement</name> <op:operator pos:line="3075" pos:column="61">*</op:operator><name pos:line="3075" pos:column="62">retval</name><op:operator pos:line="3075" pos:column="68">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3077" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3077" pos:column="43">HRESULT</name></type> ( <name pos:line="3077" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3077" pos:column="71">*</type:modifier><name pos:line="3077" pos:column="72">get_IsCodeType</name> )<parameter_list pos:line="3077" pos:column="88">( 
            <param><decl><type><name pos:line="3078" pos:column="13">CodeImport</name> <type:modifier pos:line="3078" pos:column="24">*</type:modifier></type> <name pos:line="3078" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3079" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3079" pos:column="33">__RPC__out</name> <name pos:line="3079" pos:column="44">BOOLEAN</name> <type:modifier pos:line="3079" pos:column="52">*</type:modifier></type><name pos:line="3079" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3081" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="3081" pos:column="43">HRESULT</name> <argument_list pos:line="3081" pos:column="51">( <argument pos:line="3081" pos:column="53">STDMETHODCALLTYPE *get_InfoLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3081" pos:column="90">(</op:operator> 
            <name pos:line="3082" pos:column="13">CodeImport</name> <op:operator pos:line="3082" pos:column="24">*</op:operator> <name pos:line="3082" pos:column="26">This</name><op:operator pos:line="3082" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3083" pos:column="13">/* [retval][out] */</comment> <name pos:line="3083" pos:column="33">__RPC__out</name> enum <name pos:line="3083" pos:column="49">vsCMInfoLocation</name> <op:operator pos:line="3083" pos:column="66">*</op:operator><name pos:line="3083" pos:column="67">retval</name><op:operator pos:line="3083" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3085" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3085" pos:column="43">HRESULT</name></type> ( <name pos:line="3085" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3085" pos:column="71">*</type:modifier><name pos:line="3085" pos:column="72">get_Children</name> )<parameter_list pos:line="3085" pos:column="86">( 
            <param><decl><type><name pos:line="3086" pos:column="13">CodeImport</name> <type:modifier pos:line="3086" pos:column="24">*</type:modifier></type> <name pos:line="3086" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3087" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3087" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3087" pos:column="54">CodeElements</name> <type:modifier pos:line="3087" pos:column="67">*</type:modifier><type:modifier pos:line="3087" pos:column="68">*</type:modifier></type><name pos:line="3087" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3089" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3089" pos:column="43">HRESULT</name></type> ( <name pos:line="3089" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3089" pos:column="71">*</type:modifier><name pos:line="3089" pos:column="72">get_Language</name> )<parameter_list pos:line="3089" pos:column="86">( 
            <param><decl><type><name pos:line="3090" pos:column="13">CodeImport</name> <type:modifier pos:line="3090" pos:column="24">*</type:modifier></type> <name pos:line="3090" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3091" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3091" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3091" pos:column="54">BSTR</name> <type:modifier pos:line="3091" pos:column="59">*</type:modifier></type><name pos:line="3091" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3093" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3093" pos:column="43">HRESULT</name></type> ( <name pos:line="3093" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3093" pos:column="71">*</type:modifier><name pos:line="3093" pos:column="72">get_StartPoint</name> )<parameter_list pos:line="3093" pos:column="88">( 
            <param><decl><type><name pos:line="3094" pos:column="13">CodeImport</name> <type:modifier pos:line="3094" pos:column="24">*</type:modifier></type> <name pos:line="3094" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3095" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3095" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3095" pos:column="54">TextPoint</name> <type:modifier pos:line="3095" pos:column="64">*</type:modifier><type:modifier pos:line="3095" pos:column="65">*</type:modifier></type><name pos:line="3095" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3097" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3097" pos:column="43">HRESULT</name></type> ( <name pos:line="3097" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3097" pos:column="71">*</type:modifier><name pos:line="3097" pos:column="72">get_EndPoint</name> )<parameter_list pos:line="3097" pos:column="86">( 
            <param><decl><type><name pos:line="3098" pos:column="13">CodeImport</name> <type:modifier pos:line="3098" pos:column="24">*</type:modifier></type> <name pos:line="3098" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3099" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3099" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3099" pos:column="54">TextPoint</name> <type:modifier pos:line="3099" pos:column="64">*</type:modifier><type:modifier pos:line="3099" pos:column="65">*</type:modifier></type><name pos:line="3099" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3101" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3101" pos:column="43">HRESULT</name></type> ( <name pos:line="3101" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3101" pos:column="71">*</type:modifier><name pos:line="3101" pos:column="72">get_ExtenderNames</name> )<parameter_list pos:line="3101" pos:column="91">( 
            <param><decl><type><name pos:line="3102" pos:column="13">CodeImport</name> <type:modifier pos:line="3102" pos:column="24">*</type:modifier></type> <name pos:line="3102" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3103" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3103" pos:column="33">__RPC__out</name> <name pos:line="3103" pos:column="44">VARIANT</name> <type:modifier pos:line="3103" pos:column="52">*</type:modifier></type><name pos:line="3103" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3105" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3105" pos:column="43">HRESULT</name></type> ( <name pos:line="3105" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3105" pos:column="71">*</type:modifier><name pos:line="3105" pos:column="72">get_Extender</name> )<parameter_list pos:line="3105" pos:column="86">( 
            <param><decl><type><name pos:line="3106" pos:column="13">CodeImport</name> <type:modifier pos:line="3106" pos:column="24">*</type:modifier></type> <name pos:line="3106" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3107" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3107" pos:column="33">__RPC__in</name> <name pos:line="3107" pos:column="43">BSTR</name></type> <name pos:line="3107" pos:column="48">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="3108" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3108" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3108" pos:column="54">IDispatch</name> <type:modifier pos:line="3108" pos:column="64">*</type:modifier><type:modifier pos:line="3108" pos:column="65">*</type:modifier></type><name pos:line="3108" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3110" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3110" pos:column="43">HRESULT</name></type> ( <name pos:line="3110" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3110" pos:column="71">*</type:modifier><name pos:line="3110" pos:column="72">get_ExtenderCATID</name> )<parameter_list pos:line="3110" pos:column="91">( 
            <param><decl><type><name pos:line="3111" pos:column="13">CodeImport</name> <type:modifier pos:line="3111" pos:column="24">*</type:modifier></type> <name pos:line="3111" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3112" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3112" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3112" pos:column="54">BSTR</name> <type:modifier pos:line="3112" pos:column="59">*</type:modifier></type><name pos:line="3112" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3114" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3114" pos:column="34">HRESULT</name> <argument_list pos:line="3114" pos:column="42">( <argument pos:line="3114" pos:column="44">STDMETHODCALLTYPE *GetStartPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3114" pos:column="78">(</op:operator> 
            <name pos:line="3115" pos:column="13">CodeImport</name> <op:operator pos:line="3115" pos:column="24">*</op:operator> <name pos:line="3115" pos:column="26">This</name><op:operator pos:line="3115" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3116" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="3116" pos:column="42">vsCMPart</name> <name pos:line="3116" pos:column="51">Part</name><op:operator pos:line="3116" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3117" pos:column="13">/* [retval][out] */</comment> <name pos:line="3117" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3117" pos:column="54">TextPoint</name> <op:operator pos:line="3117" pos:column="64">*</op:operator><op:operator pos:line="3117" pos:column="65">*</op:operator><name pos:line="3117" pos:column="66">retval</name><op:operator pos:line="3117" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3119" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3119" pos:column="34">HRESULT</name> <argument_list pos:line="3119" pos:column="42">( <argument pos:line="3119" pos:column="44">STDMETHODCALLTYPE *GetEndPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3119" pos:column="76">(</op:operator> 
            <name pos:line="3120" pos:column="13">CodeImport</name> <op:operator pos:line="3120" pos:column="24">*</op:operator> <name pos:line="3120" pos:column="26">This</name><op:operator pos:line="3120" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3121" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="3121" pos:column="42">vsCMPart</name> <name pos:line="3121" pos:column="51">Part</name><op:operator pos:line="3121" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3122" pos:column="13">/* [retval][out] */</comment> <name pos:line="3122" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3122" pos:column="54">TextPoint</name> <op:operator pos:line="3122" pos:column="64">*</op:operator><op:operator pos:line="3122" pos:column="65">*</op:operator><name pos:line="3122" pos:column="66">retval</name><op:operator pos:line="3122" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3124" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="3124" pos:column="73">HRESULT</name></type> ( <name pos:line="3124" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="3124" pos:column="101">*</type:modifier><name pos:line="3124" pos:column="102">get_Namespace</name> )<parameter_list pos:line="3124" pos:column="117">( 
            <param><decl><type><name pos:line="3125" pos:column="13">CodeImport</name> <type:modifier pos:line="3125" pos:column="24">*</type:modifier></type> <name pos:line="3125" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3126" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3126" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3126" pos:column="54">BSTR</name> <type:modifier pos:line="3126" pos:column="59">*</type:modifier></type><name pos:line="3126" pos:column="60">Name</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3128" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="3128" pos:column="73">HRESULT</name></type> ( <name pos:line="3128" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="3128" pos:column="101">*</type:modifier><name pos:line="3128" pos:column="102">put_Namespace</name> )<parameter_list pos:line="3128" pos:column="117">( 
            <param><decl><type><name pos:line="3129" pos:column="13">CodeImport</name> <type:modifier pos:line="3129" pos:column="24">*</type:modifier></type> <name pos:line="3129" pos:column="26">This</name></decl></param>,
            <param><decl><type><name pos:line="3130" pos:column="13">__RPC__in</name> <name pos:line="3130" pos:column="23">BSTR</name></type> <name pos:line="3130" pos:column="28">Name</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3132" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="3132" pos:column="73">HRESULT</name></type> ( <name pos:line="3132" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="3132" pos:column="101">*</type:modifier><name pos:line="3132" pos:column="102">get_Alias</name> )<parameter_list pos:line="3132" pos:column="113">( 
            <param><decl><type><name pos:line="3133" pos:column="13">CodeImport</name> <type:modifier pos:line="3133" pos:column="24">*</type:modifier></type> <name pos:line="3133" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3134" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3134" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3134" pos:column="54">BSTR</name> <type:modifier pos:line="3134" pos:column="59">*</type:modifier></type><name pos:line="3134" pos:column="60">Alias</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3136" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="3136" pos:column="73">HRESULT</name></type> ( <name pos:line="3136" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="3136" pos:column="101">*</type:modifier><name pos:line="3136" pos:column="102">put_Alias</name> )<parameter_list pos:line="3136" pos:column="113">( 
            <param><decl><type><name pos:line="3137" pos:column="13">CodeImport</name> <type:modifier pos:line="3137" pos:column="24">*</type:modifier></type> <name pos:line="3137" pos:column="26">This</name></decl></param>,
            <param><decl><type><name pos:line="3138" pos:column="13">__RPC__in</name> <name pos:line="3138" pos:column="23">BSTR</name></type> <name pos:line="3138" pos:column="28">Alias</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3140" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="3140" pos:column="73">HRESULT</name></type> ( <name pos:line="3140" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="3140" pos:column="101">*</type:modifier><name pos:line="3140" pos:column="102">get_Parent</name> )<parameter_list pos:line="3140" pos:column="114">( 
            <param><decl><type><name pos:line="3141" pos:column="13">CodeImport</name> <type:modifier pos:line="3141" pos:column="24">*</type:modifier></type> <name pos:line="3141" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3142" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3142" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3142" pos:column="54">IDispatch</name> <type:modifier pos:line="3142" pos:column="64">*</type:modifier><type:modifier pos:line="3142" pos:column="65">*</type:modifier></type><name pos:line="3142" pos:column="66">ParentObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3144" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3145" pos:column="7">CodeImportVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3147" pos:column="5">interface</name></type> <name pos:line="3147" pos:column="15">CodeImport</name>
    <argument_list pos:line="3148" pos:column="5">{
        <argument><expr><name pos:line="3149" pos:column="9">CONST_VTBL</name> struct <name pos:line="3149" pos:column="27">CodeImportVtbl</name> <op:operator pos:line="3149" pos:column="42">*</op:operator><name pos:line="3149" pos:column="43">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3154" pos:column="1">#<cpp:directive pos:line="3154" pos:column="2">ifdef</cpp:directive> <name pos:line="3154" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3157" pos:column="1">#<cpp:directive pos:line="3157" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3157" pos:column="9">CodeImport_QueryInterface</name><parameter_list pos:line="3157" pos:column="34">(<param><type><name pos:line="3157" pos:column="35">This</name></type></param>,<param><type><name pos:line="3157" pos:column="40">riid</name></type></param>,<param><type><name pos:line="3157" pos:column="45">ppvObj</name></type></param>,<param><type><name pos:line="3157" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3158" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3160" pos:column="1">#<cpp:directive pos:line="3160" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3160" pos:column="9">CodeImport_AddRef</name><parameter_list pos:line="3160" pos:column="26">(<param><type><name pos:line="3160" pos:column="27">This</name></type></param>,<param><type><name pos:line="3160" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3161" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3163" pos:column="1">#<cpp:directive pos:line="3163" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3163" pos:column="9">CodeImport_Release</name><parameter_list pos:line="3163" pos:column="27">(<param><type><name pos:line="3163" pos:column="28">This</name></type></param>,<param><type><name pos:line="3163" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3164" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3166" pos:column="1">#<cpp:directive pos:line="3166" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3166" pos:column="9">CodeImport_GetTypeInfoCount</name><parameter_list pos:line="3166" pos:column="36">(<param><type><name pos:line="3166" pos:column="37">This</name></type></param>,<param><type><name pos:line="3166" pos:column="42">pctinfo</name></type></param>,<param><type><name pos:line="3166" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3167" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3169" pos:column="1">#<cpp:directive pos:line="3169" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3169" pos:column="9">CodeImport_GetTypeInfo</name><parameter_list pos:line="3169" pos:column="31">(<param><type><name pos:line="3169" pos:column="32">This</name></type></param>,<param><type><name pos:line="3169" pos:column="37">itinfo</name></type></param>,<param><type><name pos:line="3169" pos:column="44">lcid</name></type></param>,<param><type><name pos:line="3169" pos:column="49">pptinfo</name></type></param>,<param><type><name pos:line="3169" pos:column="57">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3170" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3172" pos:column="1">#<cpp:directive pos:line="3172" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3172" pos:column="9">CodeImport_GetIDsOfNames</name><parameter_list pos:line="3172" pos:column="33">(<param><type><name pos:line="3172" pos:column="34">This</name></type></param>,<param><type><name pos:line="3172" pos:column="39">riid</name></type></param>,<param><type><name pos:line="3172" pos:column="44">rgszNames</name></type></param>,<param><type><name pos:line="3172" pos:column="54">cNames</name></type></param>,<param><type><name pos:line="3172" pos:column="61">lcid</name></type></param>,<param><type><name pos:line="3172" pos:column="66">rgdispid</name></type></param>,<param><type><name pos:line="3172" pos:column="75">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3173" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3175" pos:column="1">#<cpp:directive pos:line="3175" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3175" pos:column="9">CodeImport_Invoke</name><parameter_list pos:line="3175" pos:column="26">(<param><type><name pos:line="3175" pos:column="27">This</name></type></param>,<param><type><name pos:line="3175" pos:column="32">dispidMember</name></type></param>,<param><type><name pos:line="3175" pos:column="45">riid</name></type></param>,<param><type><name pos:line="3175" pos:column="50">lcid</name></type></param>,<param><type><name pos:line="3175" pos:column="55">wFlags</name></type></param>,<param><type><name pos:line="3175" pos:column="62">pdispparams</name></type></param>,<param><type><name pos:line="3175" pos:column="74">pvarResult</name></type></param>,<param><type><name pos:line="3175" pos:column="85">pexcepinfo</name></type></param>,<param><type><name pos:line="3175" pos:column="96">puArgErr</name></type></param>,<param><type><name pos:line="3175" pos:column="105">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3176" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3178" pos:column="1">#<cpp:directive pos:line="3178" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3178" pos:column="9">CodeImport_get_DTE</name><parameter_list pos:line="3178" pos:column="27">(<param><type><name pos:line="3178" pos:column="28">This</name></type></param>,<param><type><name pos:line="3178" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3179" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3181" pos:column="1">#<cpp:directive pos:line="3181" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3181" pos:column="9">CodeImport_get_Collection</name><parameter_list pos:line="3181" pos:column="34">(<param><type><name pos:line="3181" pos:column="35">This</name></type></param>,<param><type><name pos:line="3181" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3182" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3184" pos:column="1">#<cpp:directive pos:line="3184" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3184" pos:column="9">CodeImport_get_Name</name><parameter_list pos:line="3184" pos:column="28">(<param><type><name pos:line="3184" pos:column="29">This</name></type></param>,<param><type><name pos:line="3184" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3185" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3187" pos:column="1">#<cpp:directive pos:line="3187" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3187" pos:column="9">CodeImport_put_Name</name><parameter_list pos:line="3187" pos:column="28">(<param><type><name pos:line="3187" pos:column="29">This</name></type></param>,<param><type><name pos:line="3187" pos:column="34">noname</name></type></param>,<param><type><name pos:line="3187" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3188" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3190" pos:column="1">#<cpp:directive pos:line="3190" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3190" pos:column="9">CodeImport_get_FullName</name><parameter_list pos:line="3190" pos:column="32">(<param><type><name pos:line="3190" pos:column="33">This</name></type></param>,<param><type><name pos:line="3190" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3191" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3193" pos:column="1">#<cpp:directive pos:line="3193" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3193" pos:column="9">CodeImport_get_ProjectItem</name><parameter_list pos:line="3193" pos:column="35">(<param><type><name pos:line="3193" pos:column="36">This</name></type></param>,<param><type><name pos:line="3193" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3194" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItem(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3196" pos:column="1">#<cpp:directive pos:line="3196" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3196" pos:column="9">CodeImport_get_Kind</name><parameter_list pos:line="3196" pos:column="28">(<param><type><name pos:line="3196" pos:column="29">This</name></type></param>,<param><type><name pos:line="3196" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3197" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Kind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3199" pos:column="1">#<cpp:directive pos:line="3199" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3199" pos:column="9">CodeImport_get_IsCodeType</name><parameter_list pos:line="3199" pos:column="34">(<param><type><name pos:line="3199" pos:column="35">This</name></type></param>,<param><type><name pos:line="3199" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3200" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsCodeType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3202" pos:column="1">#<cpp:directive pos:line="3202" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3202" pos:column="9">CodeImport_get_InfoLocation</name><parameter_list pos:line="3202" pos:column="36">(<param><type><name pos:line="3202" pos:column="37">This</name></type></param>,<param><type><name pos:line="3202" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3203" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InfoLocation(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3205" pos:column="1">#<cpp:directive pos:line="3205" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3205" pos:column="9">CodeImport_get_Children</name><parameter_list pos:line="3205" pos:column="32">(<param><type><name pos:line="3205" pos:column="33">This</name></type></param>,<param><type><name pos:line="3205" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3206" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Children(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3208" pos:column="1">#<cpp:directive pos:line="3208" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3208" pos:column="9">CodeImport_get_Language</name><parameter_list pos:line="3208" pos:column="32">(<param><type><name pos:line="3208" pos:column="33">This</name></type></param>,<param><type><name pos:line="3208" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3209" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3211" pos:column="1">#<cpp:directive pos:line="3211" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3211" pos:column="9">CodeImport_get_StartPoint</name><parameter_list pos:line="3211" pos:column="34">(<param><type><name pos:line="3211" pos:column="35">This</name></type></param>,<param><type><name pos:line="3211" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3212" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3214" pos:column="1">#<cpp:directive pos:line="3214" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3214" pos:column="9">CodeImport_get_EndPoint</name><parameter_list pos:line="3214" pos:column="32">(<param><type><name pos:line="3214" pos:column="33">This</name></type></param>,<param><type><name pos:line="3214" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3215" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_EndPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3217" pos:column="1">#<cpp:directive pos:line="3217" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3217" pos:column="9">CodeImport_get_ExtenderNames</name><parameter_list pos:line="3217" pos:column="37">(<param><type><name pos:line="3217" pos:column="38">This</name></type></param>,<param><type><name pos:line="3217" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3218" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3220" pos:column="1">#<cpp:directive pos:line="3220" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3220" pos:column="9">CodeImport_get_Extender</name><parameter_list pos:line="3220" pos:column="32">(<param><type><name pos:line="3220" pos:column="33">This</name></type></param>,<param><type><name pos:line="3220" pos:column="38">ExtenderName</name></type></param>,<param><type><name pos:line="3220" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3221" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3223" pos:column="1">#<cpp:directive pos:line="3223" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3223" pos:column="9">CodeImport_get_ExtenderCATID</name><parameter_list pos:line="3223" pos:column="37">(<param><type><name pos:line="3223" pos:column="38">This</name></type></param>,<param><type><name pos:line="3223" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3224" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3226" pos:column="1">#<cpp:directive pos:line="3226" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3226" pos:column="9">CodeImport_GetStartPoint</name><parameter_list pos:line="3226" pos:column="33">(<param><type><name pos:line="3226" pos:column="34">This</name></type></param>,<param><type><name pos:line="3226" pos:column="39">Part</name></type></param>,<param><type><name pos:line="3226" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3227" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStartPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3229" pos:column="1">#<cpp:directive pos:line="3229" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3229" pos:column="9">CodeImport_GetEndPoint</name><parameter_list pos:line="3229" pos:column="31">(<param><type><name pos:line="3229" pos:column="32">This</name></type></param>,<param><type><name pos:line="3229" pos:column="37">Part</name></type></param>,<param><type><name pos:line="3229" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3230" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndPoint(This,Part,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="3233" pos:column="1">#<cpp:directive pos:line="3233" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3233" pos:column="9">CodeImport_get_Namespace</name><parameter_list pos:line="3233" pos:column="33">(<param><type><name pos:line="3233" pos:column="34">This</name></type></param>,<param><type><name pos:line="3233" pos:column="39">Name</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3234" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Namespace(This,Name) )</cpp:value></cpp:define> 

<cpp:define pos:line="3236" pos:column="1">#<cpp:directive pos:line="3236" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3236" pos:column="9">CodeImport_put_Namespace</name><parameter_list pos:line="3236" pos:column="33">(<param><type><name pos:line="3236" pos:column="34">This</name></type></param>,<param><type><name pos:line="3236" pos:column="39">Name</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3237" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Namespace(This,Name) )</cpp:value></cpp:define> 

<cpp:define pos:line="3239" pos:column="1">#<cpp:directive pos:line="3239" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3239" pos:column="9">CodeImport_get_Alias</name><parameter_list pos:line="3239" pos:column="29">(<param><type><name pos:line="3239" pos:column="30">This</name></type></param>,<param><type><name pos:line="3239" pos:column="35">Alias</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3240" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Alias(This,Alias) )</cpp:value></cpp:define> 

<cpp:define pos:line="3242" pos:column="1">#<cpp:directive pos:line="3242" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3242" pos:column="9">CodeImport_put_Alias</name><parameter_list pos:line="3242" pos:column="29">(<param><type><name pos:line="3242" pos:column="30">This</name></type></param>,<param><type><name pos:line="3242" pos:column="35">Alias</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3243" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Alias(This,Alias) )</cpp:value></cpp:define> 

<cpp:define pos:line="3245" pos:column="1">#<cpp:directive pos:line="3245" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3245" pos:column="9">CodeImport_get_Parent</name><parameter_list pos:line="3245" pos:column="30">(<param><type><name pos:line="3245" pos:column="31">This</name></type></param>,<param><type><name pos:line="3245" pos:column="36">ParentObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3246" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,ParentObject) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3248" pos:column="1">#<cpp:directive pos:line="3248" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3248" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3251" pos:column="1">#<cpp:directive pos:line="3251" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3251" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3256" pos:column="1">#<cpp:directive pos:line="3256" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3256" pos:column="9">/* __CodeImport_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3259" pos:column="1">#<cpp:directive pos:line="3259" pos:column="2">ifndef</cpp:directive> <name pos:line="3259" pos:column="9">__FileCodeModel2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3260" pos:column="1">#<cpp:directive pos:line="3260" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3260" pos:column="9">__FileCodeModel2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3262" pos:column="1">/* interface FileCodeModel2 */</comment>
<comment type="block" pos:line="3263" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="3266" pos:column="1">EXTERN_C</name> <specifier pos:line="3266" pos:column="10">const</specifier> <name pos:line="3266" pos:column="16">IID</name></type> <name pos:line="3266" pos:column="20">IID_FileCodeModel2</name></decl>;</decl_stmt>

<cpp:if pos:line="3268" pos:column="1">#<cpp:directive pos:line="3268" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3268" pos:column="5">defined</name><argument_list pos:line="3268" pos:column="12">(<argument><expr><name pos:line="3268" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3268" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3268" pos:column="29">!</op:operator><call><name pos:line="3268" pos:column="30">defined</name><argument_list pos:line="3268" pos:column="37">(<argument><expr><name pos:line="3268" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3270" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3270" pos:column="19">(<argument pos:line="3270" pos:column="20">"A65964DF-3A07-45EB-882A-DD04602016B9"</argument>)</argument_list></macro>
    <label><name pos:line="3271" pos:column="5">FileCodeModel2</name> :</label> <expr_stmt><expr pos:line="3271" pos:column="22">public <name pos:line="3271" pos:column="29">FileCodeModel</name>
    <block pos:line="3272" pos:column="5">{
    <expr pos:line="3273" pos:column="5">public<op:operator pos:line="3273" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="3274" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="3274" pos:column="72">HRESULT</name> <name pos:line="3274" pos:column="80">STDMETHODCALLTYPE</name> <call><name pos:line="3274" pos:column="98">Synchronize</name><argument_list pos:line="3274" pos:column="109">( <argument><expr><name pos:line="3274" pos:column="111">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3274" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="3274" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="3276" pos:column="9">virtual <comment type="block" pos:line="3276" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="3276" pos:column="81">HRESULT</name> <name pos:line="3276" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="3276" pos:column="107">get_ParseStatus</name><argument_list pos:line="3276" pos:column="122">( 
            <comment type="block" pos:line="3277" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3277" pos:column="33">__RPC__out vsCMParseStatus *Status</argument>)</argument_list></macro> <op:operator pos:line="3277" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="3277" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="3279" pos:column="9">virtual <comment type="block" pos:line="3279" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="3279" pos:column="72">HRESULT</name> <name pos:line="3279" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="3279" pos:column="98">AddImport</name><argument_list pos:line="3279" pos:column="107">( 
            <argument pos:line="3280" pos:column="13">__RPC__in BSTR Name</argument>,
            <comment type="block" pos:line="3281" pos:column="13">/* [optional][in] */</comment> <argument pos:line="3281" pos:column="34">VARIANT Position</argument>,
            <comment type="block" pos:line="3282" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="3282" pos:column="38">__RPC__in BSTR Alias</argument>,
            <comment type="block" pos:line="3283" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3283" pos:column="33">__RPC__deref_out_opt CodeImport **ppImport</argument>)</argument_list></macro> <op:operator pos:line="3283" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="3283" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="3285" pos:column="9">virtual <comment type="block" pos:line="3285" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="3285" pos:column="72">HRESULT</name> <name pos:line="3285" pos:column="80">STDMETHODCALLTYPE</name> <call><name pos:line="3285" pos:column="98">BeginBatch</name><argument_list pos:line="3285" pos:column="108">( <argument><expr><name pos:line="3285" pos:column="110">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3285" pos:column="116">=</op:operator> <lit:literal type="number" pos:line="3285" pos:column="118">0</lit:literal></expr>;
        
        <expr pos:line="3287" pos:column="9">virtual <comment type="block" pos:line="3287" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="3287" pos:column="72">HRESULT</name> <name pos:line="3287" pos:column="80">STDMETHODCALLTYPE</name> <call><name pos:line="3287" pos:column="98">EndBatch</name><argument_list pos:line="3287" pos:column="106">( <argument><expr><name pos:line="3287" pos:column="108">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3287" pos:column="114">=</op:operator> <lit:literal type="number" pos:line="3287" pos:column="116">0</lit:literal></expr>;
        
        <expr pos:line="3289" pos:column="9">virtual <comment type="block" pos:line="3289" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="3289" pos:column="49">HRESULT</name> <name pos:line="3289" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="3289" pos:column="75">get_IsBatchOpen</name><argument_list pos:line="3289" pos:column="90">( 
            <comment type="block" pos:line="3290" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3290" pos:column="33">__RPC__out VARIANT_BOOL *Open</argument>)</argument_list></macro> <op:operator pos:line="3290" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="3290" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="3292" pos:column="9">virtual <comment type="block" pos:line="3292" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="3292" pos:column="72">HRESULT</name> <name pos:line="3292" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="3292" pos:column="98">ElementFromID</name><argument_list pos:line="3292" pos:column="111">( 
            <argument pos:line="3293" pos:column="13">__RPC__in BSTR ID</argument>,
            <comment type="block" pos:line="3294" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3294" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="3294" pos:column="54">/* external definition not present */</comment> CodeElement **ppElement</argument>)</argument_list></macro> <op:operator pos:line="3294" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="3294" pos:column="119">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3298" pos:column="1">#<cpp:directive pos:line="3298" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3298" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3300" pos:column="5">typedef <type><struct pos:line="3300" pos:column="13">struct <name pos:line="3300" pos:column="20">FileCodeModel2Vtbl</name>
    <block pos:line="3301" pos:column="5">{<public type="default" pos:line="3301" pos:column="6">
        <decl_stmt><decl><type><name pos:line="3302" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="3304" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="3304" pos:column="46">HRESULT</name></type> ( <name pos:line="3304" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3304" pos:column="74">*</type:modifier><name pos:line="3304" pos:column="75">QueryInterface</name> )<parameter_list pos:line="3304" pos:column="91">( 
            <param><decl><type><name pos:line="3305" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3305" pos:column="28">*</type:modifier></type> <name pos:line="3305" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="3306" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="3306" pos:column="47">struct <name pos:line="3306" pos:column="54">GUID</name> <type:modifier pos:line="3306" pos:column="59">*</type:modifier></type><name pos:line="3306" pos:column="60">riid</name></decl><op:operator pos:line="3306" pos:column="64">,</op:operator>
            <comment type="block" pos:line="3307" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3307" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="3307" pos:column="59">void</name> <type:modifier pos:line="3307" pos:column="64">*</type:modifier><type:modifier pos:line="3307" pos:column="65">*</type:modifier><name pos:line="3307" pos:column="66">ppvObj</name><op:operator pos:line="3307" pos:column="72">,</op:operator>
            <comment type="block" pos:line="3308" pos:column="13">/* [retval][out] */</comment> <name pos:line="3308" pos:column="33">__RPC__out</name> <name pos:line="3308" pos:column="44">void</name> <type:modifier pos:line="3308" pos:column="49">*</type:modifier><name pos:line="3308" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="3310" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="3310" pos:column="46">HRESULT</name></type> ( <name pos:line="3310" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3310" pos:column="74">*</type:modifier><name pos:line="3310" pos:column="75">AddRef</name> )<parameter_list pos:line="3310" pos:column="83">( 
            <param><decl><type><name pos:line="3311" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3311" pos:column="28">*</type:modifier></type> <name pos:line="3311" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="3312" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3312" pos:column="33">__RPC__out</name> <name pos:line="3312" pos:column="44">unsigned</name> <name pos:line="3312" pos:column="53">long</name> <type:modifier pos:line="3312" pos:column="58">*</type:modifier></type><name pos:line="3312" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3314" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="3314" pos:column="46">HRESULT</name></type> ( <name pos:line="3314" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3314" pos:column="74">*</type:modifier><name pos:line="3314" pos:column="75">Release</name> )<parameter_list pos:line="3314" pos:column="84">( 
            <param><decl><type><name pos:line="3315" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3315" pos:column="28">*</type:modifier></type> <name pos:line="3315" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="3316" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3316" pos:column="33">__RPC__out</name> <name pos:line="3316" pos:column="44">unsigned</name> <name pos:line="3316" pos:column="53">long</name> <type:modifier pos:line="3316" pos:column="58">*</type:modifier></type><name pos:line="3316" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3318" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="3318" pos:column="46">HRESULT</name></type> ( <name pos:line="3318" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3318" pos:column="74">*</type:modifier><name pos:line="3318" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="3318" pos:column="93">( 
            <param><decl><type><name pos:line="3319" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3319" pos:column="28">*</type:modifier></type> <name pos:line="3319" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="3320" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="3320" pos:column="38">__RPC__out</name> <name pos:line="3320" pos:column="49">unsigned</name> <name pos:line="3320" pos:column="58">UINT</name> <type:modifier pos:line="3320" pos:column="63">*</type:modifier></type><name pos:line="3320" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="3321" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3321" pos:column="33">__RPC__out</name> <name pos:line="3321" pos:column="44">void</name> <type:modifier pos:line="3321" pos:column="49">*</type:modifier></type><name pos:line="3321" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3323" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="3323" pos:column="46">HRESULT</name></type> ( <name pos:line="3323" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3323" pos:column="74">*</type:modifier><name pos:line="3323" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="3323" pos:column="88">( 
            <param><decl><type><name pos:line="3324" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3324" pos:column="28">*</type:modifier></type> <name pos:line="3324" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="3325" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3325" pos:column="37">unsigned</name> <name pos:line="3325" pos:column="46">UINT</name></type> <name pos:line="3325" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="3326" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3326" pos:column="37">unsigned</name> <name pos:line="3326" pos:column="46">long</name></type> <name pos:line="3326" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="3327" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="3327" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="3327" pos:column="59">void</name> <type:modifier pos:line="3327" pos:column="64">*</type:modifier><type:modifier pos:line="3327" pos:column="65">*</type:modifier></type><name pos:line="3327" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="3328" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3328" pos:column="33">__RPC__out</name> <name pos:line="3328" pos:column="44">void</name> <type:modifier pos:line="3328" pos:column="49">*</type:modifier></type><name pos:line="3328" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3330" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="3330" pos:column="46">HRESULT</name> <argument_list pos:line="3330" pos:column="54">( <argument pos:line="3330" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3330" pos:column="90">(</op:operator> 
            <name pos:line="3331" pos:column="13">FileCodeModel2</name> <op:operator pos:line="3331" pos:column="28">*</op:operator> <name pos:line="3331" pos:column="30">This</name><op:operator pos:line="3331" pos:column="34">,</op:operator>
            <comment type="block" pos:line="3332" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3332" pos:column="37">__RPC__in</name> struct <name pos:line="3332" pos:column="54">GUID</name> <op:operator pos:line="3332" pos:column="59">*</op:operator><name pos:line="3332" pos:column="60">riid</name><op:operator pos:line="3332" pos:column="64">,</op:operator>
            <comment type="block" pos:line="3333" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3333" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="3333" pos:column="57">signed</name> <name pos:line="3333" pos:column="64">char</name> <op:operator pos:line="3333" pos:column="69">*</op:operator><op:operator pos:line="3333" pos:column="70">*</op:operator><name pos:line="3333" pos:column="71">rgszNames</name><op:operator pos:line="3333" pos:column="80">,</op:operator>
            <comment type="block" pos:line="3334" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3334" pos:column="37">unsigned</name> <name pos:line="3334" pos:column="46">UINT</name> <name pos:line="3334" pos:column="51">cNames</name><op:operator pos:line="3334" pos:column="57">,</op:operator>
            <comment type="block" pos:line="3335" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3335" pos:column="37">unsigned</name> <name pos:line="3335" pos:column="46">long</name> <name pos:line="3335" pos:column="51">lcid</name><op:operator pos:line="3335" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3336" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3336" pos:column="38">__RPC__out</name> <name pos:line="3336" pos:column="49">signed</name> <name pos:line="3336" pos:column="56">long</name> <op:operator pos:line="3336" pos:column="61">*</op:operator><name pos:line="3336" pos:column="62">rgdispid</name><op:operator pos:line="3336" pos:column="70">,</op:operator>
            <comment type="block" pos:line="3337" pos:column="13">/* [retval][out] */</comment> <name pos:line="3337" pos:column="33">__RPC__out</name> <name pos:line="3337" pos:column="44">void</name> <op:operator pos:line="3337" pos:column="49">*</op:operator><name pos:line="3337" pos:column="50">retval</name><op:operator pos:line="3337" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3339" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="3339" pos:column="46">HRESULT</name> <argument_list pos:line="3339" pos:column="54">( <argument pos:line="3339" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3339" pos:column="83">(</op:operator> 
            <name pos:line="3340" pos:column="13">FileCodeModel2</name> <op:operator pos:line="3340" pos:column="28">*</op:operator> <name pos:line="3340" pos:column="30">This</name><op:operator pos:line="3340" pos:column="34">,</op:operator>
            <comment type="block" pos:line="3341" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3341" pos:column="37">signed</name> <name pos:line="3341" pos:column="44">long</name> <name pos:line="3341" pos:column="49">dispidMember</name><op:operator pos:line="3341" pos:column="61">,</op:operator>
            <comment type="block" pos:line="3342" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3342" pos:column="37">__RPC__in</name> struct <name pos:line="3342" pos:column="54">GUID</name> <op:operator pos:line="3342" pos:column="59">*</op:operator><name pos:line="3342" pos:column="60">riid</name><op:operator pos:line="3342" pos:column="64">,</op:operator>
            <comment type="block" pos:line="3343" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3343" pos:column="37">unsigned</name> <name pos:line="3343" pos:column="46">long</name> <name pos:line="3343" pos:column="51">lcid</name><op:operator pos:line="3343" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3344" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3344" pos:column="37">unsigned</name> <name pos:line="3344" pos:column="46">short</name> <name pos:line="3344" pos:column="52">wFlags</name><op:operator pos:line="3344" pos:column="58">,</op:operator>
            <comment type="block" pos:line="3345" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3345" pos:column="37">__RPC__in</name> struct <name pos:line="3345" pos:column="54">DISPPARAMS</name> <op:operator pos:line="3345" pos:column="65">*</op:operator><name pos:line="3345" pos:column="66">pdispparams</name><op:operator pos:line="3345" pos:column="77">,</op:operator>
            <comment type="block" pos:line="3346" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3346" pos:column="38">__RPC__out</name> <name pos:line="3346" pos:column="49">VARIANT</name> <op:operator pos:line="3346" pos:column="57">*</op:operator><name pos:line="3346" pos:column="58">pvarResult</name><op:operator pos:line="3346" pos:column="68">,</op:operator>
            <comment type="block" pos:line="3347" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3347" pos:column="38">__RPC__out</name> struct <name pos:line="3347" pos:column="56">EXCEPINFO</name> <op:operator pos:line="3347" pos:column="66">*</op:operator><name pos:line="3347" pos:column="67">pexcepinfo</name><op:operator pos:line="3347" pos:column="77">,</op:operator>
            <comment type="block" pos:line="3348" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3348" pos:column="38">__RPC__out</name> <name pos:line="3348" pos:column="49">unsigned</name> <name pos:line="3348" pos:column="58">UINT</name> <op:operator pos:line="3348" pos:column="63">*</op:operator><name pos:line="3348" pos:column="64">puArgErr</name><op:operator pos:line="3348" pos:column="72">,</op:operator>
            <comment type="block" pos:line="3349" pos:column="13">/* [retval][out] */</comment> <name pos:line="3349" pos:column="33">__RPC__out</name> <name pos:line="3349" pos:column="44">void</name> <op:operator pos:line="3349" pos:column="49">*</op:operator><name pos:line="3349" pos:column="50">retval</name><op:operator pos:line="3349" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3351" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3351" pos:column="43">HRESULT</name></type> ( <name pos:line="3351" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3351" pos:column="71">*</type:modifier><name pos:line="3351" pos:column="72">get_DTE</name> )<parameter_list pos:line="3351" pos:column="81">( 
            <param><decl><type><name pos:line="3352" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3352" pos:column="28">*</type:modifier></type> <name pos:line="3352" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="3353" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3353" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="3353" pos:column="54">*</type:modifier><type:modifier pos:line="3353" pos:column="55">*</type:modifier></type><name pos:line="3353" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3355" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3355" pos:column="43">HRESULT</name></type> ( <name pos:line="3355" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3355" pos:column="71">*</type:modifier><name pos:line="3355" pos:column="72">get_Parent</name> )<parameter_list pos:line="3355" pos:column="84">( 
            <param><decl><type><name pos:line="3356" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3356" pos:column="28">*</type:modifier></type> <name pos:line="3356" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="3357" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3357" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3357" pos:column="54">ProjectItem</name> <type:modifier pos:line="3357" pos:column="66">*</type:modifier><type:modifier pos:line="3357" pos:column="67">*</type:modifier></type><name pos:line="3357" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3359" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3359" pos:column="43">HRESULT</name></type> ( <name pos:line="3359" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3359" pos:column="71">*</type:modifier><name pos:line="3359" pos:column="72">get_Language</name> )<parameter_list pos:line="3359" pos:column="86">( 
            <param><decl><type><name pos:line="3360" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3360" pos:column="28">*</type:modifier></type> <name pos:line="3360" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="3361" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3361" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3361" pos:column="54">BSTR</name> <type:modifier pos:line="3361" pos:column="59">*</type:modifier></type><name pos:line="3361" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3363" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3363" pos:column="43">HRESULT</name></type> ( <name pos:line="3363" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3363" pos:column="71">*</type:modifier><name pos:line="3363" pos:column="72">get_CodeElements</name> )<parameter_list pos:line="3363" pos:column="90">( 
            <param><decl><type><name pos:line="3364" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3364" pos:column="28">*</type:modifier></type> <name pos:line="3364" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="3365" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3365" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3365" pos:column="54">CodeElements</name> <type:modifier pos:line="3365" pos:column="67">*</type:modifier><type:modifier pos:line="3365" pos:column="68">*</type:modifier></type><name pos:line="3365" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3367" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3367" pos:column="34">HRESULT</name> <argument_list pos:line="3367" pos:column="42">( <argument pos:line="3367" pos:column="44">STDMETHODCALLTYPE *CodeElementFromPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3367" pos:column="85">(</op:operator> 
            <name pos:line="3368" pos:column="13">FileCodeModel2</name> <op:operator pos:line="3368" pos:column="28">*</op:operator> <name pos:line="3368" pos:column="30">This</name><op:operator pos:line="3368" pos:column="34">,</op:operator>
            <comment type="block" pos:line="3369" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3369" pos:column="33">__RPC__in_opt</name> <name pos:line="3369" pos:column="47">TextPoint</name> <op:operator pos:line="3369" pos:column="57">*</op:operator><name pos:line="3369" pos:column="58">Point</name><op:operator pos:line="3369" pos:column="63">,</op:operator>
            <comment type="block" pos:line="3370" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3370" pos:column="38">vsCMElement</name> <name pos:line="3370" pos:column="50">Scope</name><op:operator pos:line="3370" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3371" pos:column="13">/* [retval][out] */</comment> <name pos:line="3371" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3371" pos:column="54">CodeElement</name> <op:operator pos:line="3371" pos:column="66">*</op:operator><op:operator pos:line="3371" pos:column="67">*</op:operator><name pos:line="3371" pos:column="68">retval</name><op:operator pos:line="3371" pos:column="74">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3373" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3373" pos:column="34">HRESULT</name></type> ( <name pos:line="3373" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3373" pos:column="62">*</type:modifier><name pos:line="3373" pos:column="63">AddNamespace</name> )<parameter_list pos:line="3373" pos:column="77">( 
            <param><decl><type><name pos:line="3374" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3374" pos:column="28">*</type:modifier></type> <name pos:line="3374" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="3375" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3375" pos:column="33">__RPC__in</name> <name pos:line="3375" pos:column="43">BSTR</name></type> <name pos:line="3375" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="3376" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="3376" pos:column="43">VARIANT</name></type> <name pos:line="3376" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="3377" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3377" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3377" pos:column="54">CodeNamespace</name> <type:modifier pos:line="3377" pos:column="68">*</type:modifier><type:modifier pos:line="3377" pos:column="69">*</type:modifier></type><name pos:line="3377" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3379" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3379" pos:column="34">HRESULT</name> <argument_list pos:line="3379" pos:column="42">( <argument pos:line="3379" pos:column="44">STDMETHODCALLTYPE *AddClass</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3379" pos:column="73">(</op:operator> 
            <name pos:line="3380" pos:column="13">FileCodeModel2</name> <op:operator pos:line="3380" pos:column="28">*</op:operator> <name pos:line="3380" pos:column="30">This</name><op:operator pos:line="3380" pos:column="34">,</op:operator>
            <comment type="block" pos:line="3381" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3381" pos:column="33">__RPC__in</name> <name pos:line="3381" pos:column="43">BSTR</name> <name pos:line="3381" pos:column="48">Name</name><op:operator pos:line="3381" pos:column="52">,</op:operator>
            <comment type="block" pos:line="3382" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3382" pos:column="33">VARIANT</name> <name pos:line="3382" pos:column="41">Position</name><op:operator pos:line="3382" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3383" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3383" pos:column="33">VARIANT</name> <name pos:line="3383" pos:column="41">Bases</name><op:operator pos:line="3383" pos:column="46">,</op:operator>
            <comment type="block" pos:line="3384" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3384" pos:column="33">VARIANT</name> <name pos:line="3384" pos:column="41">ImplementedInterfaces</name><op:operator pos:line="3384" pos:column="62">,</op:operator>
            <comment type="block" pos:line="3385" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3385" pos:column="38">vsCMAccess</name> <name pos:line="3385" pos:column="49">Access</name><op:operator pos:line="3385" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3386" pos:column="13">/* [retval][out] */</comment> <name pos:line="3386" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3386" pos:column="54">CodeClass</name> <op:operator pos:line="3386" pos:column="64">*</op:operator><op:operator pos:line="3386" pos:column="65">*</op:operator><name pos:line="3386" pos:column="66">retval</name><op:operator pos:line="3386" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3388" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3388" pos:column="34">HRESULT</name> <argument_list pos:line="3388" pos:column="42">( <argument pos:line="3388" pos:column="44">STDMETHODCALLTYPE *AddInterface</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3388" pos:column="77">(</op:operator> 
            <name pos:line="3389" pos:column="13">FileCodeModel2</name> <op:operator pos:line="3389" pos:column="28">*</op:operator> <name pos:line="3389" pos:column="30">This</name><op:operator pos:line="3389" pos:column="34">,</op:operator>
            <comment type="block" pos:line="3390" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3390" pos:column="33">__RPC__in</name> <name pos:line="3390" pos:column="43">BSTR</name> <name pos:line="3390" pos:column="48">Name</name><op:operator pos:line="3390" pos:column="52">,</op:operator>
            <comment type="block" pos:line="3391" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3391" pos:column="33">VARIANT</name> <name pos:line="3391" pos:column="41">Position</name><op:operator pos:line="3391" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3392" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3392" pos:column="33">VARIANT</name> <name pos:line="3392" pos:column="41">Bases</name><op:operator pos:line="3392" pos:column="46">,</op:operator>
            <comment type="block" pos:line="3393" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3393" pos:column="38">vsCMAccess</name> <name pos:line="3393" pos:column="49">Access</name><op:operator pos:line="3393" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3394" pos:column="13">/* [retval][out] */</comment> <name pos:line="3394" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3394" pos:column="54">CodeInterface</name> <op:operator pos:line="3394" pos:column="68">*</op:operator><op:operator pos:line="3394" pos:column="69">*</op:operator><name pos:line="3394" pos:column="70">retval</name><op:operator pos:line="3394" pos:column="76">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3396" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3396" pos:column="34">HRESULT</name> <argument_list pos:line="3396" pos:column="42">( <argument pos:line="3396" pos:column="44">STDMETHODCALLTYPE *AddFunction</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3396" pos:column="76">(</op:operator> 
            <name pos:line="3397" pos:column="13">FileCodeModel2</name> <op:operator pos:line="3397" pos:column="28">*</op:operator> <name pos:line="3397" pos:column="30">This</name><op:operator pos:line="3397" pos:column="34">,</op:operator>
            <comment type="block" pos:line="3398" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3398" pos:column="33">__RPC__in</name> <name pos:line="3398" pos:column="43">BSTR</name> <name pos:line="3398" pos:column="48">Name</name><op:operator pos:line="3398" pos:column="52">,</op:operator>
            <comment type="block" pos:line="3399" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3399" pos:column="38">vsCMFunction</name> <name pos:line="3399" pos:column="51">Kind</name><op:operator pos:line="3399" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3400" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3400" pos:column="33">VARIANT</name> <name pos:line="3400" pos:column="41">Type</name><op:operator pos:line="3400" pos:column="45">,</op:operator>
            <comment type="block" pos:line="3401" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3401" pos:column="33">VARIANT</name> <name pos:line="3401" pos:column="41">Position</name><op:operator pos:line="3401" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3402" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3402" pos:column="38">vsCMAccess</name> <name pos:line="3402" pos:column="49">Access</name><op:operator pos:line="3402" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3403" pos:column="13">/* [retval][out] */</comment> <name pos:line="3403" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3403" pos:column="54">CodeFunction</name> <op:operator pos:line="3403" pos:column="67">*</op:operator><op:operator pos:line="3403" pos:column="68">*</op:operator><name pos:line="3403" pos:column="69">retval</name><op:operator pos:line="3403" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3405" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3405" pos:column="34">HRESULT</name> <argument_list pos:line="3405" pos:column="42">( <argument pos:line="3405" pos:column="44">STDMETHODCALLTYPE *AddVariable</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3405" pos:column="76">(</op:operator> 
            <name pos:line="3406" pos:column="13">FileCodeModel2</name> <op:operator pos:line="3406" pos:column="28">*</op:operator> <name pos:line="3406" pos:column="30">This</name><op:operator pos:line="3406" pos:column="34">,</op:operator>
            <comment type="block" pos:line="3407" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3407" pos:column="33">__RPC__in</name> <name pos:line="3407" pos:column="43">BSTR</name> <name pos:line="3407" pos:column="48">Name</name><op:operator pos:line="3407" pos:column="52">,</op:operator>
            <comment type="block" pos:line="3408" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3408" pos:column="33">VARIANT</name> <name pos:line="3408" pos:column="41">Type</name><op:operator pos:line="3408" pos:column="45">,</op:operator>
            <comment type="block" pos:line="3409" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3409" pos:column="33">VARIANT</name> <name pos:line="3409" pos:column="41">Position</name><op:operator pos:line="3409" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3410" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3410" pos:column="38">vsCMAccess</name> <name pos:line="3410" pos:column="49">Access</name><op:operator pos:line="3410" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3411" pos:column="13">/* [retval][out] */</comment> <name pos:line="3411" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3411" pos:column="54">CodeVariable</name> <op:operator pos:line="3411" pos:column="67">*</op:operator><op:operator pos:line="3411" pos:column="68">*</op:operator><name pos:line="3411" pos:column="69">retval</name><op:operator pos:line="3411" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3413" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3413" pos:column="34">HRESULT</name></type> ( <name pos:line="3413" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3413" pos:column="62">*</type:modifier><name pos:line="3413" pos:column="63">AddAttribute</name> )<parameter_list pos:line="3413" pos:column="77">( 
            <param><decl><type><name pos:line="3414" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3414" pos:column="28">*</type:modifier></type> <name pos:line="3414" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="3415" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3415" pos:column="33">__RPC__in</name> <name pos:line="3415" pos:column="43">BSTR</name></type> <name pos:line="3415" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="3416" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3416" pos:column="33">__RPC__in</name> <name pos:line="3416" pos:column="43">BSTR</name></type> <name pos:line="3416" pos:column="48">Value</name></decl></param>,
            <comment type="block" pos:line="3417" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="3417" pos:column="43">VARIANT</name></type> <name pos:line="3417" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="3418" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3418" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3418" pos:column="54">CodeAttribute</name> <type:modifier pos:line="3418" pos:column="68">*</type:modifier><type:modifier pos:line="3418" pos:column="69">*</type:modifier></type><name pos:line="3418" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3420" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3420" pos:column="34">HRESULT</name> <argument_list pos:line="3420" pos:column="42">( <argument pos:line="3420" pos:column="44">STDMETHODCALLTYPE *AddStruct</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3420" pos:column="74">(</op:operator> 
            <name pos:line="3421" pos:column="13">FileCodeModel2</name> <op:operator pos:line="3421" pos:column="28">*</op:operator> <name pos:line="3421" pos:column="30">This</name><op:operator pos:line="3421" pos:column="34">,</op:operator>
            <comment type="block" pos:line="3422" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3422" pos:column="33">__RPC__in</name> <name pos:line="3422" pos:column="43">BSTR</name> <name pos:line="3422" pos:column="48">Name</name><op:operator pos:line="3422" pos:column="52">,</op:operator>
            <comment type="block" pos:line="3423" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3423" pos:column="33">VARIANT</name> <name pos:line="3423" pos:column="41">Position</name><op:operator pos:line="3423" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3424" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3424" pos:column="33">VARIANT</name> <name pos:line="3424" pos:column="41">Bases</name><op:operator pos:line="3424" pos:column="46">,</op:operator>
            <comment type="block" pos:line="3425" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3425" pos:column="33">VARIANT</name> <name pos:line="3425" pos:column="41">ImplementedInterfaces</name><op:operator pos:line="3425" pos:column="62">,</op:operator>
            <comment type="block" pos:line="3426" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3426" pos:column="38">vsCMAccess</name> <name pos:line="3426" pos:column="49">Access</name><op:operator pos:line="3426" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3427" pos:column="13">/* [retval][out] */</comment> <name pos:line="3427" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3427" pos:column="54">CodeStruct</name> <op:operator pos:line="3427" pos:column="65">*</op:operator><op:operator pos:line="3427" pos:column="66">*</op:operator><name pos:line="3427" pos:column="67">retval</name><op:operator pos:line="3427" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3429" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3429" pos:column="34">HRESULT</name> <argument_list pos:line="3429" pos:column="42">( <argument pos:line="3429" pos:column="44">STDMETHODCALLTYPE *AddEnum</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3429" pos:column="72">(</op:operator> 
            <name pos:line="3430" pos:column="13">FileCodeModel2</name> <op:operator pos:line="3430" pos:column="28">*</op:operator> <name pos:line="3430" pos:column="30">This</name><op:operator pos:line="3430" pos:column="34">,</op:operator>
            <comment type="block" pos:line="3431" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3431" pos:column="33">__RPC__in</name> <name pos:line="3431" pos:column="43">BSTR</name> <name pos:line="3431" pos:column="48">Name</name><op:operator pos:line="3431" pos:column="52">,</op:operator>
            <comment type="block" pos:line="3432" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3432" pos:column="33">VARIANT</name> <name pos:line="3432" pos:column="41">Position</name><op:operator pos:line="3432" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3433" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3433" pos:column="33">VARIANT</name> <name pos:line="3433" pos:column="41">Bases</name><op:operator pos:line="3433" pos:column="46">,</op:operator>
            <comment type="block" pos:line="3434" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3434" pos:column="38">vsCMAccess</name> <name pos:line="3434" pos:column="49">Access</name><op:operator pos:line="3434" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3435" pos:column="13">/* [retval][out] */</comment> <name pos:line="3435" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3435" pos:column="54">CodeEnum</name> <op:operator pos:line="3435" pos:column="63">*</op:operator><op:operator pos:line="3435" pos:column="64">*</op:operator><name pos:line="3435" pos:column="65">retval</name><op:operator pos:line="3435" pos:column="71">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3437" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3437" pos:column="34">HRESULT</name> <argument_list pos:line="3437" pos:column="42">( <argument pos:line="3437" pos:column="44">STDMETHODCALLTYPE *AddDelegate</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3437" pos:column="76">(</op:operator> 
            <name pos:line="3438" pos:column="13">FileCodeModel2</name> <op:operator pos:line="3438" pos:column="28">*</op:operator> <name pos:line="3438" pos:column="30">This</name><op:operator pos:line="3438" pos:column="34">,</op:operator>
            <comment type="block" pos:line="3439" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3439" pos:column="33">__RPC__in</name> <name pos:line="3439" pos:column="43">BSTR</name> <name pos:line="3439" pos:column="48">Name</name><op:operator pos:line="3439" pos:column="52">,</op:operator>
            <comment type="block" pos:line="3440" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3440" pos:column="33">VARIANT</name> <name pos:line="3440" pos:column="41">Type</name><op:operator pos:line="3440" pos:column="45">,</op:operator>
            <comment type="block" pos:line="3441" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3441" pos:column="33">VARIANT</name> <name pos:line="3441" pos:column="41">Position</name><op:operator pos:line="3441" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3442" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3442" pos:column="38">vsCMAccess</name> <name pos:line="3442" pos:column="49">Access</name><op:operator pos:line="3442" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3443" pos:column="13">/* [retval][out] */</comment> <name pos:line="3443" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3443" pos:column="54">CodeDelegate</name> <op:operator pos:line="3443" pos:column="67">*</op:operator><op:operator pos:line="3443" pos:column="68">*</op:operator><name pos:line="3443" pos:column="69">retval</name><op:operator pos:line="3443" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3445" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3445" pos:column="34">HRESULT</name></type> ( <name pos:line="3445" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3445" pos:column="62">*</type:modifier><name pos:line="3445" pos:column="63">Remove</name> )<parameter_list pos:line="3445" pos:column="71">( 
            <param><decl><type><name pos:line="3446" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3446" pos:column="28">*</type:modifier></type> <name pos:line="3446" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="3447" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3447" pos:column="33">VARIANT</name></type> <name pos:line="3447" pos:column="41">Element</name></decl></param>,
            <comment type="block" pos:line="3448" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3448" pos:column="33">__RPC__out</name> <name pos:line="3448" pos:column="44">void</name> <type:modifier pos:line="3448" pos:column="49">*</type:modifier></type><name pos:line="3448" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3450" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="3450" pos:column="64">HRESULT</name></type> ( <name pos:line="3450" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="3450" pos:column="92">*</type:modifier><name pos:line="3450" pos:column="93">Synchronize</name> )<parameter_list pos:line="3450" pos:column="106">( 
            <param><decl><type><name pos:line="3451" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3451" pos:column="28">*</type:modifier></type> <name pos:line="3451" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3453" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="3453" pos:column="73">HRESULT</name></type> ( <name pos:line="3453" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="3453" pos:column="101">*</type:modifier><name pos:line="3453" pos:column="102">get_ParseStatus</name> )<parameter_list pos:line="3453" pos:column="119">( 
            <param><decl><type><name pos:line="3454" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3454" pos:column="28">*</type:modifier></type> <name pos:line="3454" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="3455" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3455" pos:column="33">__RPC__out</name> <name pos:line="3455" pos:column="44">vsCMParseStatus</name> <type:modifier pos:line="3455" pos:column="60">*</type:modifier></type><name pos:line="3455" pos:column="61">Status</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3457" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="3457" pos:column="64">HRESULT</name></type> ( <name pos:line="3457" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="3457" pos:column="92">*</type:modifier><name pos:line="3457" pos:column="93">AddImport</name> )<parameter_list pos:line="3457" pos:column="104">( 
            <param><decl><type><name pos:line="3458" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3458" pos:column="28">*</type:modifier></type> <name pos:line="3458" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="3459" pos:column="13">__RPC__in</name> <name pos:line="3459" pos:column="23">BSTR</name></type> <name pos:line="3459" pos:column="28">Name</name></decl></param>,
            <comment type="block" pos:line="3460" pos:column="13">/* [optional][in] */</comment> <param><decl><type><name pos:line="3460" pos:column="34">VARIANT</name></type> <name pos:line="3460" pos:column="42">Position</name></decl></param>,
            <comment type="block" pos:line="3461" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="3461" pos:column="38">__RPC__in</name> <name pos:line="3461" pos:column="48">BSTR</name></type> <name pos:line="3461" pos:column="53">Alias</name></decl></param>,
            <comment type="block" pos:line="3462" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3462" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3462" pos:column="54">CodeImport</name> <type:modifier pos:line="3462" pos:column="65">*</type:modifier><type:modifier pos:line="3462" pos:column="66">*</type:modifier></type><name pos:line="3462" pos:column="67">ppImport</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3464" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="3464" pos:column="64">HRESULT</name></type> ( <name pos:line="3464" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="3464" pos:column="92">*</type:modifier><name pos:line="3464" pos:column="93">BeginBatch</name> )<parameter_list pos:line="3464" pos:column="105">( 
            <param><decl><type><name pos:line="3465" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3465" pos:column="28">*</type:modifier></type> <name pos:line="3465" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3467" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="3467" pos:column="64">HRESULT</name></type> ( <name pos:line="3467" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="3467" pos:column="92">*</type:modifier><name pos:line="3467" pos:column="93">EndBatch</name> )<parameter_list pos:line="3467" pos:column="103">( 
            <param><decl><type><name pos:line="3468" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3468" pos:column="28">*</type:modifier></type> <name pos:line="3468" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3470" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="3470" pos:column="41">HRESULT</name></type> ( <name pos:line="3470" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="3470" pos:column="69">*</type:modifier><name pos:line="3470" pos:column="70">get_IsBatchOpen</name> )<parameter_list pos:line="3470" pos:column="87">( 
            <param><decl><type><name pos:line="3471" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3471" pos:column="28">*</type:modifier></type> <name pos:line="3471" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="3472" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3472" pos:column="33">__RPC__out</name> <name pos:line="3472" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="3472" pos:column="57">*</type:modifier></type><name pos:line="3472" pos:column="58">Open</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3474" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="3474" pos:column="64">HRESULT</name></type> ( <name pos:line="3474" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="3474" pos:column="92">*</type:modifier><name pos:line="3474" pos:column="93">ElementFromID</name> )<parameter_list pos:line="3474" pos:column="108">( 
            <param><decl><type><name pos:line="3475" pos:column="13">FileCodeModel2</name> <type:modifier pos:line="3475" pos:column="28">*</type:modifier></type> <name pos:line="3475" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="3476" pos:column="13">__RPC__in</name> <name pos:line="3476" pos:column="23">BSTR</name></type> <name pos:line="3476" pos:column="28">ID</name></decl></param>,
            <comment type="block" pos:line="3477" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3477" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="3477" pos:column="54">/* external definition not present */</comment> <name pos:line="3477" pos:column="92">CodeElement</name> <type:modifier pos:line="3477" pos:column="104">*</type:modifier><type:modifier pos:line="3477" pos:column="105">*</type:modifier></type><name pos:line="3477" pos:column="106">ppElement</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3479" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3480" pos:column="7">FileCodeModel2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3482" pos:column="5">interface</name></type> <name pos:line="3482" pos:column="15">FileCodeModel2</name>
    <argument_list pos:line="3483" pos:column="5">{
        <argument><expr><name pos:line="3484" pos:column="9">CONST_VTBL</name> struct <name pos:line="3484" pos:column="27">FileCodeModel2Vtbl</name> <op:operator pos:line="3484" pos:column="46">*</op:operator><name pos:line="3484" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3489" pos:column="1">#<cpp:directive pos:line="3489" pos:column="2">ifdef</cpp:directive> <name pos:line="3489" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3492" pos:column="1">#<cpp:directive pos:line="3492" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3492" pos:column="9">FileCodeModel2_QueryInterface</name><parameter_list pos:line="3492" pos:column="38">(<param><type><name pos:line="3492" pos:column="39">This</name></type></param>,<param><type><name pos:line="3492" pos:column="44">riid</name></type></param>,<param><type><name pos:line="3492" pos:column="49">ppvObj</name></type></param>,<param><type><name pos:line="3492" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3493" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3495" pos:column="1">#<cpp:directive pos:line="3495" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3495" pos:column="9">FileCodeModel2_AddRef</name><parameter_list pos:line="3495" pos:column="30">(<param><type><name pos:line="3495" pos:column="31">This</name></type></param>,<param><type><name pos:line="3495" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3496" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3498" pos:column="1">#<cpp:directive pos:line="3498" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3498" pos:column="9">FileCodeModel2_Release</name><parameter_list pos:line="3498" pos:column="31">(<param><type><name pos:line="3498" pos:column="32">This</name></type></param>,<param><type><name pos:line="3498" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3499" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3501" pos:column="1">#<cpp:directive pos:line="3501" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3501" pos:column="9">FileCodeModel2_GetTypeInfoCount</name><parameter_list pos:line="3501" pos:column="40">(<param><type><name pos:line="3501" pos:column="41">This</name></type></param>,<param><type><name pos:line="3501" pos:column="46">pctinfo</name></type></param>,<param><type><name pos:line="3501" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3502" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3504" pos:column="1">#<cpp:directive pos:line="3504" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3504" pos:column="9">FileCodeModel2_GetTypeInfo</name><parameter_list pos:line="3504" pos:column="35">(<param><type><name pos:line="3504" pos:column="36">This</name></type></param>,<param><type><name pos:line="3504" pos:column="41">itinfo</name></type></param>,<param><type><name pos:line="3504" pos:column="48">lcid</name></type></param>,<param><type><name pos:line="3504" pos:column="53">pptinfo</name></type></param>,<param><type><name pos:line="3504" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3505" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3507" pos:column="1">#<cpp:directive pos:line="3507" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3507" pos:column="9">FileCodeModel2_GetIDsOfNames</name><parameter_list pos:line="3507" pos:column="37">(<param><type><name pos:line="3507" pos:column="38">This</name></type></param>,<param><type><name pos:line="3507" pos:column="43">riid</name></type></param>,<param><type><name pos:line="3507" pos:column="48">rgszNames</name></type></param>,<param><type><name pos:line="3507" pos:column="58">cNames</name></type></param>,<param><type><name pos:line="3507" pos:column="65">lcid</name></type></param>,<param><type><name pos:line="3507" pos:column="70">rgdispid</name></type></param>,<param><type><name pos:line="3507" pos:column="79">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3508" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3510" pos:column="1">#<cpp:directive pos:line="3510" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3510" pos:column="9">FileCodeModel2_Invoke</name><parameter_list pos:line="3510" pos:column="30">(<param><type><name pos:line="3510" pos:column="31">This</name></type></param>,<param><type><name pos:line="3510" pos:column="36">dispidMember</name></type></param>,<param><type><name pos:line="3510" pos:column="49">riid</name></type></param>,<param><type><name pos:line="3510" pos:column="54">lcid</name></type></param>,<param><type><name pos:line="3510" pos:column="59">wFlags</name></type></param>,<param><type><name pos:line="3510" pos:column="66">pdispparams</name></type></param>,<param><type><name pos:line="3510" pos:column="78">pvarResult</name></type></param>,<param><type><name pos:line="3510" pos:column="89">pexcepinfo</name></type></param>,<param><type><name pos:line="3510" pos:column="100">puArgErr</name></type></param>,<param><type><name pos:line="3510" pos:column="109">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3511" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3513" pos:column="1">#<cpp:directive pos:line="3513" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3513" pos:column="9">FileCodeModel2_get_DTE</name><parameter_list pos:line="3513" pos:column="31">(<param><type><name pos:line="3513" pos:column="32">This</name></type></param>,<param><type><name pos:line="3513" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3514" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3516" pos:column="1">#<cpp:directive pos:line="3516" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3516" pos:column="9">FileCodeModel2_get_Parent</name><parameter_list pos:line="3516" pos:column="34">(<param><type><name pos:line="3516" pos:column="35">This</name></type></param>,<param><type><name pos:line="3516" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3517" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3519" pos:column="1">#<cpp:directive pos:line="3519" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3519" pos:column="9">FileCodeModel2_get_Language</name><parameter_list pos:line="3519" pos:column="36">(<param><type><name pos:line="3519" pos:column="37">This</name></type></param>,<param><type><name pos:line="3519" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3520" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3522" pos:column="1">#<cpp:directive pos:line="3522" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3522" pos:column="9">FileCodeModel2_get_CodeElements</name><parameter_list pos:line="3522" pos:column="40">(<param><type><name pos:line="3522" pos:column="41">This</name></type></param>,<param><type><name pos:line="3522" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3523" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CodeElements(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3525" pos:column="1">#<cpp:directive pos:line="3525" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3525" pos:column="9">FileCodeModel2_CodeElementFromPoint</name><parameter_list pos:line="3525" pos:column="44">(<param><type><name pos:line="3525" pos:column="45">This</name></type></param>,<param><type><name pos:line="3525" pos:column="50">Point</name></type></param>,<param><type><name pos:line="3525" pos:column="56">Scope</name></type></param>,<param><type><name pos:line="3525" pos:column="62">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3526" pos:column="5">( (This)-&gt;lpVtbl -&gt; CodeElementFromPoint(This,Point,Scope,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3528" pos:column="1">#<cpp:directive pos:line="3528" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3528" pos:column="9">FileCodeModel2_AddNamespace</name><parameter_list pos:line="3528" pos:column="36">(<param><type><name pos:line="3528" pos:column="37">This</name></type></param>,<param><type><name pos:line="3528" pos:column="42">Name</name></type></param>,<param><type><name pos:line="3528" pos:column="47">Position</name></type></param>,<param><type><name pos:line="3528" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3529" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddNamespace(This,Name,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3531" pos:column="1">#<cpp:directive pos:line="3531" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3531" pos:column="9">FileCodeModel2_AddClass</name><parameter_list pos:line="3531" pos:column="32">(<param><type><name pos:line="3531" pos:column="33">This</name></type></param>,<param><type><name pos:line="3531" pos:column="38">Name</name></type></param>,<param><type><name pos:line="3531" pos:column="43">Position</name></type></param>,<param><type><name pos:line="3531" pos:column="52">Bases</name></type></param>,<param><type><name pos:line="3531" pos:column="58">ImplementedInterfaces</name></type></param>,<param><type><name pos:line="3531" pos:column="80">Access</name></type></param>,<param><type><name pos:line="3531" pos:column="87">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3532" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddClass(This,Name,Position,Bases,ImplementedInterfaces,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3534" pos:column="1">#<cpp:directive pos:line="3534" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3534" pos:column="9">FileCodeModel2_AddInterface</name><parameter_list pos:line="3534" pos:column="36">(<param><type><name pos:line="3534" pos:column="37">This</name></type></param>,<param><type><name pos:line="3534" pos:column="42">Name</name></type></param>,<param><type><name pos:line="3534" pos:column="47">Position</name></type></param>,<param><type><name pos:line="3534" pos:column="56">Bases</name></type></param>,<param><type><name pos:line="3534" pos:column="62">Access</name></type></param>,<param><type><name pos:line="3534" pos:column="69">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3535" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddInterface(This,Name,Position,Bases,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3537" pos:column="1">#<cpp:directive pos:line="3537" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3537" pos:column="9">FileCodeModel2_AddFunction</name><parameter_list pos:line="3537" pos:column="35">(<param><type><name pos:line="3537" pos:column="36">This</name></type></param>,<param><type><name pos:line="3537" pos:column="41">Name</name></type></param>,<param><type><name pos:line="3537" pos:column="46">Kind</name></type></param>,<param><type><name pos:line="3537" pos:column="51">Type</name></type></param>,<param><type><name pos:line="3537" pos:column="56">Position</name></type></param>,<param><type><name pos:line="3537" pos:column="65">Access</name></type></param>,<param><type><name pos:line="3537" pos:column="72">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3538" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddFunction(This,Name,Kind,Type,Position,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3540" pos:column="1">#<cpp:directive pos:line="3540" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3540" pos:column="9">FileCodeModel2_AddVariable</name><parameter_list pos:line="3540" pos:column="35">(<param><type><name pos:line="3540" pos:column="36">This</name></type></param>,<param><type><name pos:line="3540" pos:column="41">Name</name></type></param>,<param><type><name pos:line="3540" pos:column="46">Type</name></type></param>,<param><type><name pos:line="3540" pos:column="51">Position</name></type></param>,<param><type><name pos:line="3540" pos:column="60">Access</name></type></param>,<param><type><name pos:line="3540" pos:column="67">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3541" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddVariable(This,Name,Type,Position,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3543" pos:column="1">#<cpp:directive pos:line="3543" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3543" pos:column="9">FileCodeModel2_AddAttribute</name><parameter_list pos:line="3543" pos:column="36">(<param><type><name pos:line="3543" pos:column="37">This</name></type></param>,<param><type><name pos:line="3543" pos:column="42">Name</name></type></param>,<param><type><name pos:line="3543" pos:column="47">Value</name></type></param>,<param><type><name pos:line="3543" pos:column="53">Position</name></type></param>,<param><type><name pos:line="3543" pos:column="62">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3544" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddAttribute(This,Name,Value,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3546" pos:column="1">#<cpp:directive pos:line="3546" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3546" pos:column="9">FileCodeModel2_AddStruct</name><parameter_list pos:line="3546" pos:column="33">(<param><type><name pos:line="3546" pos:column="34">This</name></type></param>,<param><type><name pos:line="3546" pos:column="39">Name</name></type></param>,<param><type><name pos:line="3546" pos:column="44">Position</name></type></param>,<param><type><name pos:line="3546" pos:column="53">Bases</name></type></param>,<param><type><name pos:line="3546" pos:column="59">ImplementedInterfaces</name></type></param>,<param><type><name pos:line="3546" pos:column="81">Access</name></type></param>,<param><type><name pos:line="3546" pos:column="88">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3547" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddStruct(This,Name,Position,Bases,ImplementedInterfaces,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3549" pos:column="1">#<cpp:directive pos:line="3549" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3549" pos:column="9">FileCodeModel2_AddEnum</name><parameter_list pos:line="3549" pos:column="31">(<param><type><name pos:line="3549" pos:column="32">This</name></type></param>,<param><type><name pos:line="3549" pos:column="37">Name</name></type></param>,<param><type><name pos:line="3549" pos:column="42">Position</name></type></param>,<param><type><name pos:line="3549" pos:column="51">Bases</name></type></param>,<param><type><name pos:line="3549" pos:column="57">Access</name></type></param>,<param><type><name pos:line="3549" pos:column="64">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3550" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddEnum(This,Name,Position,Bases,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3552" pos:column="1">#<cpp:directive pos:line="3552" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3552" pos:column="9">FileCodeModel2_AddDelegate</name><parameter_list pos:line="3552" pos:column="35">(<param><type><name pos:line="3552" pos:column="36">This</name></type></param>,<param><type><name pos:line="3552" pos:column="41">Name</name></type></param>,<param><type><name pos:line="3552" pos:column="46">Type</name></type></param>,<param><type><name pos:line="3552" pos:column="51">Position</name></type></param>,<param><type><name pos:line="3552" pos:column="60">Access</name></type></param>,<param><type><name pos:line="3552" pos:column="67">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3553" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddDelegate(This,Name,Type,Position,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3555" pos:column="1">#<cpp:directive pos:line="3555" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3555" pos:column="9">FileCodeModel2_Remove</name><parameter_list pos:line="3555" pos:column="30">(<param><type><name pos:line="3555" pos:column="31">This</name></type></param>,<param><type><name pos:line="3555" pos:column="36">Element</name></type></param>,<param><type><name pos:line="3555" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3556" pos:column="5">( (This)-&gt;lpVtbl -&gt; Remove(This,Element,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="3559" pos:column="1">#<cpp:directive pos:line="3559" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3559" pos:column="9">FileCodeModel2_Synchronize</name><parameter_list pos:line="3559" pos:column="35">(<param><type><name pos:line="3559" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3560" pos:column="5">( (This)-&gt;lpVtbl -&gt; Synchronize(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3562" pos:column="1">#<cpp:directive pos:line="3562" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3562" pos:column="9">FileCodeModel2_get_ParseStatus</name><parameter_list pos:line="3562" pos:column="39">(<param><type><name pos:line="3562" pos:column="40">This</name></type></param>,<param><type><name pos:line="3562" pos:column="45">Status</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3563" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ParseStatus(This,Status) )</cpp:value></cpp:define> 

<cpp:define pos:line="3565" pos:column="1">#<cpp:directive pos:line="3565" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3565" pos:column="9">FileCodeModel2_AddImport</name><parameter_list pos:line="3565" pos:column="33">(<param><type><name pos:line="3565" pos:column="34">This</name></type></param>,<param><type><name pos:line="3565" pos:column="39">Name</name></type></param>,<param><type><name pos:line="3565" pos:column="44">Position</name></type></param>,<param><type><name pos:line="3565" pos:column="53">Alias</name></type></param>,<param><type><name pos:line="3565" pos:column="59">ppImport</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3566" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddImport(This,Name,Position,Alias,ppImport) )</cpp:value></cpp:define> 

<cpp:define pos:line="3568" pos:column="1">#<cpp:directive pos:line="3568" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3568" pos:column="9">FileCodeModel2_BeginBatch</name><parameter_list pos:line="3568" pos:column="34">(<param><type><name pos:line="3568" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3569" pos:column="5">( (This)-&gt;lpVtbl -&gt; BeginBatch(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3571" pos:column="1">#<cpp:directive pos:line="3571" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3571" pos:column="9">FileCodeModel2_EndBatch</name><parameter_list pos:line="3571" pos:column="32">(<param><type><name pos:line="3571" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3572" pos:column="5">( (This)-&gt;lpVtbl -&gt; EndBatch(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3574" pos:column="1">#<cpp:directive pos:line="3574" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3574" pos:column="9">FileCodeModel2_get_IsBatchOpen</name><parameter_list pos:line="3574" pos:column="39">(<param><type><name pos:line="3574" pos:column="40">This</name></type></param>,<param><type><name pos:line="3574" pos:column="45">Open</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3575" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsBatchOpen(This,Open) )</cpp:value></cpp:define> 

<cpp:define pos:line="3577" pos:column="1">#<cpp:directive pos:line="3577" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3577" pos:column="9">FileCodeModel2_ElementFromID</name><parameter_list pos:line="3577" pos:column="37">(<param><type><name pos:line="3577" pos:column="38">This</name></type></param>,<param><type><name pos:line="3577" pos:column="43">ID</name></type></param>,<param><type><name pos:line="3577" pos:column="46">ppElement</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3578" pos:column="5">( (This)-&gt;lpVtbl -&gt; ElementFromID(This,ID,ppElement) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3580" pos:column="1">#<cpp:directive pos:line="3580" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3580" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3583" pos:column="1">#<cpp:directive pos:line="3583" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3583" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3588" pos:column="1">#<cpp:directive pos:line="3588" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3588" pos:column="9">/* __FileCodeModel2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3591" pos:column="1">#<cpp:directive pos:line="3591" pos:column="2">ifndef</cpp:directive> <name pos:line="3591" pos:column="9">__CodeModel2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3592" pos:column="1">#<cpp:directive pos:line="3592" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3592" pos:column="9">__CodeModel2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3594" pos:column="1">/* interface CodeModel2 */</comment>
<comment type="block" pos:line="3595" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="3598" pos:column="1">EXTERN_C</name> <specifier pos:line="3598" pos:column="10">const</specifier> <name pos:line="3598" pos:column="16">IID</name></type> <name pos:line="3598" pos:column="20">IID_CodeModel2</name></decl>;</decl_stmt>

<cpp:if pos:line="3600" pos:column="1">#<cpp:directive pos:line="3600" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3600" pos:column="5">defined</name><argument_list pos:line="3600" pos:column="12">(<argument><expr><name pos:line="3600" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3600" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3600" pos:column="29">!</op:operator><call><name pos:line="3600" pos:column="30">defined</name><argument_list pos:line="3600" pos:column="37">(<argument><expr><name pos:line="3600" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3602" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3602" pos:column="19">(<argument pos:line="3602" pos:column="20">"99B9CD0E-6C89-4BC4-BBA2-FFD3529D3ACB"</argument>)</argument_list></macro>
    <label><name pos:line="3603" pos:column="5">CodeModel2</name> :</label> <expr_stmt><expr pos:line="3603" pos:column="18">public <name pos:line="3603" pos:column="25">CodeModel</name>
    <block pos:line="3604" pos:column="5">{
    <expr pos:line="3605" pos:column="5">public<op:operator pos:line="3605" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="3606" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="3606" pos:column="72">HRESULT</name> <name pos:line="3606" pos:column="80">STDMETHODCALLTYPE</name> <call><name pos:line="3606" pos:column="98">Synchronize</name><argument_list pos:line="3606" pos:column="109">( <argument><expr><name pos:line="3606" pos:column="111">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="3606" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="3606" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="3608" pos:column="9">virtual <comment type="block" pos:line="3608" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="3608" pos:column="72">HRESULT</name> <name pos:line="3608" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="3608" pos:column="98">DotNetNameFromLanguageSpecific</name><argument_list pos:line="3608" pos:column="128">( 
            <argument pos:line="3609" pos:column="13">__RPC__in BSTR LanguageName</argument>,
            <comment type="block" pos:line="3610" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3610" pos:column="33">__RPC__deref_out_opt BSTR *DotNETName</argument>)</argument_list></macro> <op:operator pos:line="3610" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="3610" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="3612" pos:column="9">virtual <comment type="block" pos:line="3612" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="3612" pos:column="72">HRESULT</name> <name pos:line="3612" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="3612" pos:column="98">LanguageSpecificNameFromDotNet</name><argument_list pos:line="3612" pos:column="128">( 
            <argument pos:line="3613" pos:column="13">__RPC__in BSTR DotNETName</argument>,
            <comment type="block" pos:line="3614" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3614" pos:column="33">__RPC__deref_out_opt BSTR *LanguageName</argument>)</argument_list></macro> <op:operator pos:line="3614" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="3614" pos:column="76">0</lit:literal></expr>;
        
        <expr pos:line="3616" pos:column="9">virtual <comment type="block" pos:line="3616" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="3616" pos:column="72">HRESULT</name> <name pos:line="3616" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="3616" pos:column="98">ElementFromID</name><argument_list pos:line="3616" pos:column="111">( 
            <argument pos:line="3617" pos:column="13">__RPC__in BSTR ID</argument>,
            <comment type="block" pos:line="3618" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3618" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="3618" pos:column="54">/* external definition not present */</comment> CodeElement **pElement</argument>)</argument_list></macro> <op:operator pos:line="3618" pos:column="116">=</op:operator> <lit:literal type="number" pos:line="3618" pos:column="118">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3622" pos:column="1">#<cpp:directive pos:line="3622" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3622" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3624" pos:column="5">typedef <type><struct pos:line="3624" pos:column="13">struct <name pos:line="3624" pos:column="20">CodeModel2Vtbl</name>
    <block pos:line="3625" pos:column="5">{<public type="default" pos:line="3625" pos:column="6">
        <decl_stmt><decl><type><name pos:line="3626" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="3628" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="3628" pos:column="46">HRESULT</name></type> ( <name pos:line="3628" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3628" pos:column="74">*</type:modifier><name pos:line="3628" pos:column="75">QueryInterface</name> )<parameter_list pos:line="3628" pos:column="91">( 
            <param><decl><type><name pos:line="3629" pos:column="13">CodeModel2</name> <type:modifier pos:line="3629" pos:column="24">*</type:modifier></type> <name pos:line="3629" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3630" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="3630" pos:column="47">struct <name pos:line="3630" pos:column="54">GUID</name> <type:modifier pos:line="3630" pos:column="59">*</type:modifier></type><name pos:line="3630" pos:column="60">riid</name></decl><op:operator pos:line="3630" pos:column="64">,</op:operator>
            <comment type="block" pos:line="3631" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3631" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="3631" pos:column="59">void</name> <type:modifier pos:line="3631" pos:column="64">*</type:modifier><type:modifier pos:line="3631" pos:column="65">*</type:modifier><name pos:line="3631" pos:column="66">ppvObj</name><op:operator pos:line="3631" pos:column="72">,</op:operator>
            <comment type="block" pos:line="3632" pos:column="13">/* [retval][out] */</comment> <name pos:line="3632" pos:column="33">__RPC__out</name> <name pos:line="3632" pos:column="44">void</name> <type:modifier pos:line="3632" pos:column="49">*</type:modifier><name pos:line="3632" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="3634" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="3634" pos:column="46">HRESULT</name></type> ( <name pos:line="3634" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3634" pos:column="74">*</type:modifier><name pos:line="3634" pos:column="75">AddRef</name> )<parameter_list pos:line="3634" pos:column="83">( 
            <param><decl><type><name pos:line="3635" pos:column="13">CodeModel2</name> <type:modifier pos:line="3635" pos:column="24">*</type:modifier></type> <name pos:line="3635" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3636" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3636" pos:column="33">__RPC__out</name> <name pos:line="3636" pos:column="44">unsigned</name> <name pos:line="3636" pos:column="53">long</name> <type:modifier pos:line="3636" pos:column="58">*</type:modifier></type><name pos:line="3636" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3638" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="3638" pos:column="46">HRESULT</name></type> ( <name pos:line="3638" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3638" pos:column="74">*</type:modifier><name pos:line="3638" pos:column="75">Release</name> )<parameter_list pos:line="3638" pos:column="84">( 
            <param><decl><type><name pos:line="3639" pos:column="13">CodeModel2</name> <type:modifier pos:line="3639" pos:column="24">*</type:modifier></type> <name pos:line="3639" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3640" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3640" pos:column="33">__RPC__out</name> <name pos:line="3640" pos:column="44">unsigned</name> <name pos:line="3640" pos:column="53">long</name> <type:modifier pos:line="3640" pos:column="58">*</type:modifier></type><name pos:line="3640" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3642" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="3642" pos:column="46">HRESULT</name></type> ( <name pos:line="3642" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3642" pos:column="74">*</type:modifier><name pos:line="3642" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="3642" pos:column="93">( 
            <param><decl><type><name pos:line="3643" pos:column="13">CodeModel2</name> <type:modifier pos:line="3643" pos:column="24">*</type:modifier></type> <name pos:line="3643" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3644" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="3644" pos:column="38">__RPC__out</name> <name pos:line="3644" pos:column="49">unsigned</name> <name pos:line="3644" pos:column="58">UINT</name> <type:modifier pos:line="3644" pos:column="63">*</type:modifier></type><name pos:line="3644" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="3645" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3645" pos:column="33">__RPC__out</name> <name pos:line="3645" pos:column="44">void</name> <type:modifier pos:line="3645" pos:column="49">*</type:modifier></type><name pos:line="3645" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3647" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="3647" pos:column="46">HRESULT</name></type> ( <name pos:line="3647" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3647" pos:column="74">*</type:modifier><name pos:line="3647" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="3647" pos:column="88">( 
            <param><decl><type><name pos:line="3648" pos:column="13">CodeModel2</name> <type:modifier pos:line="3648" pos:column="24">*</type:modifier></type> <name pos:line="3648" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3649" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3649" pos:column="37">unsigned</name> <name pos:line="3649" pos:column="46">UINT</name></type> <name pos:line="3649" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="3650" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="3650" pos:column="37">unsigned</name> <name pos:line="3650" pos:column="46">long</name></type> <name pos:line="3650" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="3651" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="3651" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="3651" pos:column="59">void</name> <type:modifier pos:line="3651" pos:column="64">*</type:modifier><type:modifier pos:line="3651" pos:column="65">*</type:modifier></type><name pos:line="3651" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="3652" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3652" pos:column="33">__RPC__out</name> <name pos:line="3652" pos:column="44">void</name> <type:modifier pos:line="3652" pos:column="49">*</type:modifier></type><name pos:line="3652" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3654" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="3654" pos:column="46">HRESULT</name> <argument_list pos:line="3654" pos:column="54">( <argument pos:line="3654" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3654" pos:column="90">(</op:operator> 
            <name pos:line="3655" pos:column="13">CodeModel2</name> <op:operator pos:line="3655" pos:column="24">*</op:operator> <name pos:line="3655" pos:column="26">This</name><op:operator pos:line="3655" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3656" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3656" pos:column="37">__RPC__in</name> struct <name pos:line="3656" pos:column="54">GUID</name> <op:operator pos:line="3656" pos:column="59">*</op:operator><name pos:line="3656" pos:column="60">riid</name><op:operator pos:line="3656" pos:column="64">,</op:operator>
            <comment type="block" pos:line="3657" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3657" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="3657" pos:column="57">signed</name> <name pos:line="3657" pos:column="64">char</name> <op:operator pos:line="3657" pos:column="69">*</op:operator><op:operator pos:line="3657" pos:column="70">*</op:operator><name pos:line="3657" pos:column="71">rgszNames</name><op:operator pos:line="3657" pos:column="80">,</op:operator>
            <comment type="block" pos:line="3658" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3658" pos:column="37">unsigned</name> <name pos:line="3658" pos:column="46">UINT</name> <name pos:line="3658" pos:column="51">cNames</name><op:operator pos:line="3658" pos:column="57">,</op:operator>
            <comment type="block" pos:line="3659" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3659" pos:column="37">unsigned</name> <name pos:line="3659" pos:column="46">long</name> <name pos:line="3659" pos:column="51">lcid</name><op:operator pos:line="3659" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3660" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3660" pos:column="38">__RPC__out</name> <name pos:line="3660" pos:column="49">signed</name> <name pos:line="3660" pos:column="56">long</name> <op:operator pos:line="3660" pos:column="61">*</op:operator><name pos:line="3660" pos:column="62">rgdispid</name><op:operator pos:line="3660" pos:column="70">,</op:operator>
            <comment type="block" pos:line="3661" pos:column="13">/* [retval][out] */</comment> <name pos:line="3661" pos:column="33">__RPC__out</name> <name pos:line="3661" pos:column="44">void</name> <op:operator pos:line="3661" pos:column="49">*</op:operator><name pos:line="3661" pos:column="50">retval</name><op:operator pos:line="3661" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3663" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="3663" pos:column="46">HRESULT</name> <argument_list pos:line="3663" pos:column="54">( <argument pos:line="3663" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3663" pos:column="83">(</op:operator> 
            <name pos:line="3664" pos:column="13">CodeModel2</name> <op:operator pos:line="3664" pos:column="24">*</op:operator> <name pos:line="3664" pos:column="26">This</name><op:operator pos:line="3664" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3665" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3665" pos:column="37">signed</name> <name pos:line="3665" pos:column="44">long</name> <name pos:line="3665" pos:column="49">dispidMember</name><op:operator pos:line="3665" pos:column="61">,</op:operator>
            <comment type="block" pos:line="3666" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3666" pos:column="37">__RPC__in</name> struct <name pos:line="3666" pos:column="54">GUID</name> <op:operator pos:line="3666" pos:column="59">*</op:operator><name pos:line="3666" pos:column="60">riid</name><op:operator pos:line="3666" pos:column="64">,</op:operator>
            <comment type="block" pos:line="3667" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3667" pos:column="37">unsigned</name> <name pos:line="3667" pos:column="46">long</name> <name pos:line="3667" pos:column="51">lcid</name><op:operator pos:line="3667" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3668" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3668" pos:column="37">unsigned</name> <name pos:line="3668" pos:column="46">short</name> <name pos:line="3668" pos:column="52">wFlags</name><op:operator pos:line="3668" pos:column="58">,</op:operator>
            <comment type="block" pos:line="3669" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="3669" pos:column="37">__RPC__in</name> struct <name pos:line="3669" pos:column="54">DISPPARAMS</name> <op:operator pos:line="3669" pos:column="65">*</op:operator><name pos:line="3669" pos:column="66">pdispparams</name><op:operator pos:line="3669" pos:column="77">,</op:operator>
            <comment type="block" pos:line="3670" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3670" pos:column="38">__RPC__out</name> <name pos:line="3670" pos:column="49">VARIANT</name> <op:operator pos:line="3670" pos:column="57">*</op:operator><name pos:line="3670" pos:column="58">pvarResult</name><op:operator pos:line="3670" pos:column="68">,</op:operator>
            <comment type="block" pos:line="3671" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3671" pos:column="38">__RPC__out</name> struct <name pos:line="3671" pos:column="56">EXCEPINFO</name> <op:operator pos:line="3671" pos:column="66">*</op:operator><name pos:line="3671" pos:column="67">pexcepinfo</name><op:operator pos:line="3671" pos:column="77">,</op:operator>
            <comment type="block" pos:line="3672" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3672" pos:column="38">__RPC__out</name> <name pos:line="3672" pos:column="49">unsigned</name> <name pos:line="3672" pos:column="58">UINT</name> <op:operator pos:line="3672" pos:column="63">*</op:operator><name pos:line="3672" pos:column="64">puArgErr</name><op:operator pos:line="3672" pos:column="72">,</op:operator>
            <comment type="block" pos:line="3673" pos:column="13">/* [retval][out] */</comment> <name pos:line="3673" pos:column="33">__RPC__out</name> <name pos:line="3673" pos:column="44">void</name> <op:operator pos:line="3673" pos:column="49">*</op:operator><name pos:line="3673" pos:column="50">retval</name><op:operator pos:line="3673" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3675" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3675" pos:column="43">HRESULT</name></type> ( <name pos:line="3675" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3675" pos:column="71">*</type:modifier><name pos:line="3675" pos:column="72">get_DTE</name> )<parameter_list pos:line="3675" pos:column="81">( 
            <param><decl><type><name pos:line="3676" pos:column="13">CodeModel2</name> <type:modifier pos:line="3676" pos:column="24">*</type:modifier></type> <name pos:line="3676" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3677" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3677" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="3677" pos:column="54">*</type:modifier><type:modifier pos:line="3677" pos:column="55">*</type:modifier></type><name pos:line="3677" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3679" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3679" pos:column="43">HRESULT</name></type> ( <name pos:line="3679" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3679" pos:column="71">*</type:modifier><name pos:line="3679" pos:column="72">get_Parent</name> )<parameter_list pos:line="3679" pos:column="84">( 
            <param><decl><type><name pos:line="3680" pos:column="13">CodeModel2</name> <type:modifier pos:line="3680" pos:column="24">*</type:modifier></type> <name pos:line="3680" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3681" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3681" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3681" pos:column="54">Project</name> <type:modifier pos:line="3681" pos:column="62">*</type:modifier><type:modifier pos:line="3681" pos:column="63">*</type:modifier></type><name pos:line="3681" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3683" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3683" pos:column="43">HRESULT</name></type> ( <name pos:line="3683" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3683" pos:column="71">*</type:modifier><name pos:line="3683" pos:column="72">get_Language</name> )<parameter_list pos:line="3683" pos:column="86">( 
            <param><decl><type><name pos:line="3684" pos:column="13">CodeModel2</name> <type:modifier pos:line="3684" pos:column="24">*</type:modifier></type> <name pos:line="3684" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3685" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3685" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3685" pos:column="54">BSTR</name> <type:modifier pos:line="3685" pos:column="59">*</type:modifier></type><name pos:line="3685" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3687" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3687" pos:column="43">HRESULT</name></type> ( <name pos:line="3687" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3687" pos:column="71">*</type:modifier><name pos:line="3687" pos:column="72">get_CodeElements</name> )<parameter_list pos:line="3687" pos:column="90">( 
            <param><decl><type><name pos:line="3688" pos:column="13">CodeModel2</name> <type:modifier pos:line="3688" pos:column="24">*</type:modifier></type> <name pos:line="3688" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3689" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3689" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3689" pos:column="54">CodeElements</name> <type:modifier pos:line="3689" pos:column="67">*</type:modifier><type:modifier pos:line="3689" pos:column="68">*</type:modifier></type><name pos:line="3689" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3691" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3691" pos:column="34">HRESULT</name></type> ( <name pos:line="3691" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3691" pos:column="62">*</type:modifier><name pos:line="3691" pos:column="63">CodeTypeFromFullName</name> )<parameter_list pos:line="3691" pos:column="85">( 
            <param><decl><type><name pos:line="3692" pos:column="13">CodeModel2</name> <type:modifier pos:line="3692" pos:column="24">*</type:modifier></type> <name pos:line="3692" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3693" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3693" pos:column="33">__RPC__in</name> <name pos:line="3693" pos:column="43">BSTR</name></type> <name pos:line="3693" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="3694" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3694" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3694" pos:column="54">CodeType</name> <type:modifier pos:line="3694" pos:column="63">*</type:modifier><type:modifier pos:line="3694" pos:column="64">*</type:modifier></type><name pos:line="3694" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3696" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3696" pos:column="34">HRESULT</name></type> ( <name pos:line="3696" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3696" pos:column="62">*</type:modifier><name pos:line="3696" pos:column="63">AddNamespace</name> )<parameter_list pos:line="3696" pos:column="77">( 
            <param><decl><type><name pos:line="3697" pos:column="13">CodeModel2</name> <type:modifier pos:line="3697" pos:column="24">*</type:modifier></type> <name pos:line="3697" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3698" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3698" pos:column="33">__RPC__in</name> <name pos:line="3698" pos:column="43">BSTR</name></type> <name pos:line="3698" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="3699" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3699" pos:column="33">VARIANT</name></type> <name pos:line="3699" pos:column="41">Location</name></decl></param>,
            <comment type="block" pos:line="3700" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="3700" pos:column="43">VARIANT</name></type> <name pos:line="3700" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="3701" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3701" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3701" pos:column="54">CodeNamespace</name> <type:modifier pos:line="3701" pos:column="68">*</type:modifier><type:modifier pos:line="3701" pos:column="69">*</type:modifier></type><name pos:line="3701" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3703" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3703" pos:column="34">HRESULT</name> <argument_list pos:line="3703" pos:column="42">( <argument pos:line="3703" pos:column="44">STDMETHODCALLTYPE *AddClass</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3703" pos:column="73">(</op:operator> 
            <name pos:line="3704" pos:column="13">CodeModel2</name> <op:operator pos:line="3704" pos:column="24">*</op:operator> <name pos:line="3704" pos:column="26">This</name><op:operator pos:line="3704" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3705" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3705" pos:column="33">__RPC__in</name> <name pos:line="3705" pos:column="43">BSTR</name> <name pos:line="3705" pos:column="48">Name</name><op:operator pos:line="3705" pos:column="52">,</op:operator>
            <comment type="block" pos:line="3706" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3706" pos:column="33">VARIANT</name> <name pos:line="3706" pos:column="41">Location</name><op:operator pos:line="3706" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3707" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3707" pos:column="33">VARIANT</name> <name pos:line="3707" pos:column="41">Position</name><op:operator pos:line="3707" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3708" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3708" pos:column="33">VARIANT</name> <name pos:line="3708" pos:column="41">Bases</name><op:operator pos:line="3708" pos:column="46">,</op:operator>
            <comment type="block" pos:line="3709" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3709" pos:column="33">VARIANT</name> <name pos:line="3709" pos:column="41">ImplementedInterfaces</name><op:operator pos:line="3709" pos:column="62">,</op:operator>
            <comment type="block" pos:line="3710" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3710" pos:column="38">vsCMAccess</name> <name pos:line="3710" pos:column="49">Access</name><op:operator pos:line="3710" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3711" pos:column="13">/* [retval][out] */</comment> <name pos:line="3711" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3711" pos:column="54">CodeClass</name> <op:operator pos:line="3711" pos:column="64">*</op:operator><op:operator pos:line="3711" pos:column="65">*</op:operator><name pos:line="3711" pos:column="66">retval</name><op:operator pos:line="3711" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3713" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3713" pos:column="34">HRESULT</name> <argument_list pos:line="3713" pos:column="42">( <argument pos:line="3713" pos:column="44">STDMETHODCALLTYPE *AddInterface</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3713" pos:column="77">(</op:operator> 
            <name pos:line="3714" pos:column="13">CodeModel2</name> <op:operator pos:line="3714" pos:column="24">*</op:operator> <name pos:line="3714" pos:column="26">This</name><op:operator pos:line="3714" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3715" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3715" pos:column="33">__RPC__in</name> <name pos:line="3715" pos:column="43">BSTR</name> <name pos:line="3715" pos:column="48">Name</name><op:operator pos:line="3715" pos:column="52">,</op:operator>
            <comment type="block" pos:line="3716" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3716" pos:column="33">VARIANT</name> <name pos:line="3716" pos:column="41">Location</name><op:operator pos:line="3716" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3717" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3717" pos:column="33">VARIANT</name> <name pos:line="3717" pos:column="41">Position</name><op:operator pos:line="3717" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3718" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3718" pos:column="33">VARIANT</name> <name pos:line="3718" pos:column="41">Bases</name><op:operator pos:line="3718" pos:column="46">,</op:operator>
            <comment type="block" pos:line="3719" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3719" pos:column="38">vsCMAccess</name> <name pos:line="3719" pos:column="49">Access</name><op:operator pos:line="3719" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3720" pos:column="13">/* [retval][out] */</comment> <name pos:line="3720" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3720" pos:column="54">CodeInterface</name> <op:operator pos:line="3720" pos:column="68">*</op:operator><op:operator pos:line="3720" pos:column="69">*</op:operator><name pos:line="3720" pos:column="70">retval</name><op:operator pos:line="3720" pos:column="76">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3722" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3722" pos:column="34">HRESULT</name> <argument_list pos:line="3722" pos:column="42">( <argument pos:line="3722" pos:column="44">STDMETHODCALLTYPE *AddFunction</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3722" pos:column="76">(</op:operator> 
            <name pos:line="3723" pos:column="13">CodeModel2</name> <op:operator pos:line="3723" pos:column="24">*</op:operator> <name pos:line="3723" pos:column="26">This</name><op:operator pos:line="3723" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3724" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3724" pos:column="33">__RPC__in</name> <name pos:line="3724" pos:column="43">BSTR</name> <name pos:line="3724" pos:column="48">Name</name><op:operator pos:line="3724" pos:column="52">,</op:operator>
            <comment type="block" pos:line="3725" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3725" pos:column="33">VARIANT</name> <name pos:line="3725" pos:column="41">Location</name><op:operator pos:line="3725" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3726" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3726" pos:column="38">vsCMFunction</name> <name pos:line="3726" pos:column="51">Kind</name><op:operator pos:line="3726" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3727" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3727" pos:column="33">VARIANT</name> <name pos:line="3727" pos:column="41">Type</name><op:operator pos:line="3727" pos:column="45">,</op:operator>
            <comment type="block" pos:line="3728" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3728" pos:column="33">VARIANT</name> <name pos:line="3728" pos:column="41">Position</name><op:operator pos:line="3728" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3729" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3729" pos:column="38">vsCMAccess</name> <name pos:line="3729" pos:column="49">Access</name><op:operator pos:line="3729" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3730" pos:column="13">/* [retval][out] */</comment> <name pos:line="3730" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3730" pos:column="54">CodeFunction</name> <op:operator pos:line="3730" pos:column="67">*</op:operator><op:operator pos:line="3730" pos:column="68">*</op:operator><name pos:line="3730" pos:column="69">retval</name><op:operator pos:line="3730" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3732" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3732" pos:column="34">HRESULT</name> <argument_list pos:line="3732" pos:column="42">( <argument pos:line="3732" pos:column="44">STDMETHODCALLTYPE *AddVariable</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3732" pos:column="76">(</op:operator> 
            <name pos:line="3733" pos:column="13">CodeModel2</name> <op:operator pos:line="3733" pos:column="24">*</op:operator> <name pos:line="3733" pos:column="26">This</name><op:operator pos:line="3733" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3734" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3734" pos:column="33">__RPC__in</name> <name pos:line="3734" pos:column="43">BSTR</name> <name pos:line="3734" pos:column="48">Name</name><op:operator pos:line="3734" pos:column="52">,</op:operator>
            <comment type="block" pos:line="3735" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3735" pos:column="33">VARIANT</name> <name pos:line="3735" pos:column="41">Location</name><op:operator pos:line="3735" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3736" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3736" pos:column="33">VARIANT</name> <name pos:line="3736" pos:column="41">Type</name><op:operator pos:line="3736" pos:column="45">,</op:operator>
            <comment type="block" pos:line="3737" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3737" pos:column="33">VARIANT</name> <name pos:line="3737" pos:column="41">Position</name><op:operator pos:line="3737" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3738" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3738" pos:column="38">vsCMAccess</name> <name pos:line="3738" pos:column="49">Access</name><op:operator pos:line="3738" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3739" pos:column="13">/* [retval][out] */</comment> <name pos:line="3739" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3739" pos:column="54">CodeVariable</name> <op:operator pos:line="3739" pos:column="67">*</op:operator><op:operator pos:line="3739" pos:column="68">*</op:operator><name pos:line="3739" pos:column="69">retval</name><op:operator pos:line="3739" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3741" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3741" pos:column="34">HRESULT</name> <argument_list pos:line="3741" pos:column="42">( <argument pos:line="3741" pos:column="44">STDMETHODCALLTYPE *AddStruct</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3741" pos:column="74">(</op:operator> 
            <name pos:line="3742" pos:column="13">CodeModel2</name> <op:operator pos:line="3742" pos:column="24">*</op:operator> <name pos:line="3742" pos:column="26">This</name><op:operator pos:line="3742" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3743" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3743" pos:column="33">__RPC__in</name> <name pos:line="3743" pos:column="43">BSTR</name> <name pos:line="3743" pos:column="48">Name</name><op:operator pos:line="3743" pos:column="52">,</op:operator>
            <comment type="block" pos:line="3744" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3744" pos:column="33">VARIANT</name> <name pos:line="3744" pos:column="41">Location</name><op:operator pos:line="3744" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3745" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3745" pos:column="33">VARIANT</name> <name pos:line="3745" pos:column="41">Position</name><op:operator pos:line="3745" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3746" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3746" pos:column="33">VARIANT</name> <name pos:line="3746" pos:column="41">Bases</name><op:operator pos:line="3746" pos:column="46">,</op:operator>
            <comment type="block" pos:line="3747" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3747" pos:column="33">VARIANT</name> <name pos:line="3747" pos:column="41">ImplementedInterfaces</name><op:operator pos:line="3747" pos:column="62">,</op:operator>
            <comment type="block" pos:line="3748" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3748" pos:column="38">vsCMAccess</name> <name pos:line="3748" pos:column="49">Access</name><op:operator pos:line="3748" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3749" pos:column="13">/* [retval][out] */</comment> <name pos:line="3749" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3749" pos:column="54">CodeStruct</name> <op:operator pos:line="3749" pos:column="65">*</op:operator><op:operator pos:line="3749" pos:column="66">*</op:operator><name pos:line="3749" pos:column="67">retval</name><op:operator pos:line="3749" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3751" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3751" pos:column="34">HRESULT</name> <argument_list pos:line="3751" pos:column="42">( <argument pos:line="3751" pos:column="44">STDMETHODCALLTYPE *AddEnum</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3751" pos:column="72">(</op:operator> 
            <name pos:line="3752" pos:column="13">CodeModel2</name> <op:operator pos:line="3752" pos:column="24">*</op:operator> <name pos:line="3752" pos:column="26">This</name><op:operator pos:line="3752" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3753" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3753" pos:column="33">__RPC__in</name> <name pos:line="3753" pos:column="43">BSTR</name> <name pos:line="3753" pos:column="48">Name</name><op:operator pos:line="3753" pos:column="52">,</op:operator>
            <comment type="block" pos:line="3754" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3754" pos:column="33">VARIANT</name> <name pos:line="3754" pos:column="41">Location</name><op:operator pos:line="3754" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3755" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3755" pos:column="33">VARIANT</name> <name pos:line="3755" pos:column="41">Position</name><op:operator pos:line="3755" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3756" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3756" pos:column="33">VARIANT</name> <name pos:line="3756" pos:column="41">Bases</name><op:operator pos:line="3756" pos:column="46">,</op:operator>
            <comment type="block" pos:line="3757" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3757" pos:column="38">vsCMAccess</name> <name pos:line="3757" pos:column="49">Access</name><op:operator pos:line="3757" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3758" pos:column="13">/* [retval][out] */</comment> <name pos:line="3758" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3758" pos:column="54">CodeEnum</name> <op:operator pos:line="3758" pos:column="63">*</op:operator><op:operator pos:line="3758" pos:column="64">*</op:operator><name pos:line="3758" pos:column="65">retval</name><op:operator pos:line="3758" pos:column="71">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3760" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="3760" pos:column="34">HRESULT</name> <argument_list pos:line="3760" pos:column="42">( <argument pos:line="3760" pos:column="44">STDMETHODCALLTYPE *AddDelegate</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="3760" pos:column="76">(</op:operator> 
            <name pos:line="3761" pos:column="13">CodeModel2</name> <op:operator pos:line="3761" pos:column="24">*</op:operator> <name pos:line="3761" pos:column="26">This</name><op:operator pos:line="3761" pos:column="30">,</op:operator>
            <comment type="block" pos:line="3762" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3762" pos:column="33">__RPC__in</name> <name pos:line="3762" pos:column="43">BSTR</name> <name pos:line="3762" pos:column="48">Name</name><op:operator pos:line="3762" pos:column="52">,</op:operator>
            <comment type="block" pos:line="3763" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3763" pos:column="33">VARIANT</name> <name pos:line="3763" pos:column="41">Location</name><op:operator pos:line="3763" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3764" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3764" pos:column="33">VARIANT</name> <name pos:line="3764" pos:column="41">Type</name><op:operator pos:line="3764" pos:column="45">,</op:operator>
            <comment type="block" pos:line="3765" pos:column="13">/* [idldescattr] */</comment> <name pos:line="3765" pos:column="33">VARIANT</name> <name pos:line="3765" pos:column="41">Position</name><op:operator pos:line="3765" pos:column="49">,</op:operator>
            <comment type="block" pos:line="3766" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="3766" pos:column="38">vsCMAccess</name> <name pos:line="3766" pos:column="49">Access</name><op:operator pos:line="3766" pos:column="55">,</op:operator>
            <comment type="block" pos:line="3767" pos:column="13">/* [retval][out] */</comment> <name pos:line="3767" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3767" pos:column="54">CodeDelegate</name> <op:operator pos:line="3767" pos:column="67">*</op:operator><op:operator pos:line="3767" pos:column="68">*</op:operator><name pos:line="3767" pos:column="69">retval</name><op:operator pos:line="3767" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="3769" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3769" pos:column="34">HRESULT</name></type> ( <name pos:line="3769" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3769" pos:column="62">*</type:modifier><name pos:line="3769" pos:column="63">AddAttribute</name> )<parameter_list pos:line="3769" pos:column="77">( 
            <param><decl><type><name pos:line="3770" pos:column="13">CodeModel2</name> <type:modifier pos:line="3770" pos:column="24">*</type:modifier></type> <name pos:line="3770" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3771" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3771" pos:column="33">__RPC__in</name> <name pos:line="3771" pos:column="43">BSTR</name></type> <name pos:line="3771" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="3772" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3772" pos:column="33">VARIANT</name></type> <name pos:line="3772" pos:column="41">Location</name></decl></param>,
            <comment type="block" pos:line="3773" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3773" pos:column="33">__RPC__in</name> <name pos:line="3773" pos:column="43">BSTR</name></type> <name pos:line="3773" pos:column="48">Value</name></decl></param>,
            <comment type="block" pos:line="3774" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="3774" pos:column="43">VARIANT</name></type> <name pos:line="3774" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="3775" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3775" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3775" pos:column="54">CodeAttribute</name> <type:modifier pos:line="3775" pos:column="68">*</type:modifier><type:modifier pos:line="3775" pos:column="69">*</type:modifier></type><name pos:line="3775" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3777" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3777" pos:column="34">HRESULT</name></type> ( <name pos:line="3777" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3777" pos:column="62">*</type:modifier><name pos:line="3777" pos:column="63">Remove</name> )<parameter_list pos:line="3777" pos:column="71">( 
            <param><decl><type><name pos:line="3778" pos:column="13">CodeModel2</name> <type:modifier pos:line="3778" pos:column="24">*</type:modifier></type> <name pos:line="3778" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3779" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3779" pos:column="33">VARIANT</name></type> <name pos:line="3779" pos:column="41">Element</name></decl></param>,
            <comment type="block" pos:line="3780" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3780" pos:column="33">__RPC__out</name> <name pos:line="3780" pos:column="44">void</name> <type:modifier pos:line="3780" pos:column="49">*</type:modifier></type><name pos:line="3780" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3782" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3782" pos:column="34">HRESULT</name></type> ( <name pos:line="3782" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3782" pos:column="62">*</type:modifier><name pos:line="3782" pos:column="63">IsValidID</name> )<parameter_list pos:line="3782" pos:column="74">( 
            <param><decl><type><name pos:line="3783" pos:column="13">CodeModel2</name> <type:modifier pos:line="3783" pos:column="24">*</type:modifier></type> <name pos:line="3783" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3784" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3784" pos:column="33">__RPC__in</name> <name pos:line="3784" pos:column="43">BSTR</name></type> <name pos:line="3784" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="3785" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3785" pos:column="33">__RPC__out</name> <name pos:line="3785" pos:column="44">BOOLEAN</name> <type:modifier pos:line="3785" pos:column="52">*</type:modifier></type><name pos:line="3785" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3787" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="3787" pos:column="43">HRESULT</name></type> ( <name pos:line="3787" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="3787" pos:column="71">*</type:modifier><name pos:line="3787" pos:column="72">get_IsCaseSensitive</name> )<parameter_list pos:line="3787" pos:column="93">( 
            <param><decl><type><name pos:line="3788" pos:column="13">CodeModel2</name> <type:modifier pos:line="3788" pos:column="24">*</type:modifier></type> <name pos:line="3788" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3789" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3789" pos:column="33">__RPC__out</name> <name pos:line="3789" pos:column="44">BOOLEAN</name> <type:modifier pos:line="3789" pos:column="52">*</type:modifier></type><name pos:line="3789" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3791" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="3791" pos:column="34">HRESULT</name></type> ( <name pos:line="3791" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="3791" pos:column="62">*</type:modifier><name pos:line="3791" pos:column="63">CreateCodeTypeRef</name> )<parameter_list pos:line="3791" pos:column="82">( 
            <param><decl><type><name pos:line="3792" pos:column="13">CodeModel2</name> <type:modifier pos:line="3792" pos:column="24">*</type:modifier></type> <name pos:line="3792" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3793" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="3793" pos:column="33">VARIANT</name></type> <name pos:line="3793" pos:column="41">Type</name></decl></param>,
            <comment type="block" pos:line="3794" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3794" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3794" pos:column="54">CodeTypeRef</name> <type:modifier pos:line="3794" pos:column="66">*</type:modifier><type:modifier pos:line="3794" pos:column="67">*</type:modifier></type><name pos:line="3794" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3796" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="3796" pos:column="64">HRESULT</name></type> ( <name pos:line="3796" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="3796" pos:column="92">*</type:modifier><name pos:line="3796" pos:column="93">Synchronize</name> )<parameter_list pos:line="3796" pos:column="106">( 
            <param><decl><type><name pos:line="3797" pos:column="13">CodeModel2</name> <type:modifier pos:line="3797" pos:column="24">*</type:modifier></type> <name pos:line="3797" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3799" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="3799" pos:column="64">HRESULT</name></type> ( <name pos:line="3799" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="3799" pos:column="92">*</type:modifier><name pos:line="3799" pos:column="93">DotNetNameFromLanguageSpecific</name> )<parameter_list pos:line="3799" pos:column="125">( 
            <param><decl><type><name pos:line="3800" pos:column="13">CodeModel2</name> <type:modifier pos:line="3800" pos:column="24">*</type:modifier></type> <name pos:line="3800" pos:column="26">This</name></decl></param>,
            <param><decl><type><name pos:line="3801" pos:column="13">__RPC__in</name> <name pos:line="3801" pos:column="23">BSTR</name></type> <name pos:line="3801" pos:column="28">LanguageName</name></decl></param>,
            <comment type="block" pos:line="3802" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3802" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3802" pos:column="54">BSTR</name> <type:modifier pos:line="3802" pos:column="59">*</type:modifier></type><name pos:line="3802" pos:column="60">DotNETName</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3804" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="3804" pos:column="64">HRESULT</name></type> ( <name pos:line="3804" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="3804" pos:column="92">*</type:modifier><name pos:line="3804" pos:column="93">LanguageSpecificNameFromDotNet</name> )<parameter_list pos:line="3804" pos:column="125">( 
            <param><decl><type><name pos:line="3805" pos:column="13">CodeModel2</name> <type:modifier pos:line="3805" pos:column="24">*</type:modifier></type> <name pos:line="3805" pos:column="26">This</name></decl></param>,
            <param><decl><type><name pos:line="3806" pos:column="13">__RPC__in</name> <name pos:line="3806" pos:column="23">BSTR</name></type> <name pos:line="3806" pos:column="28">DotNETName</name></decl></param>,
            <comment type="block" pos:line="3807" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3807" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="3807" pos:column="54">BSTR</name> <type:modifier pos:line="3807" pos:column="59">*</type:modifier></type><name pos:line="3807" pos:column="60">LanguageName</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="3809" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="3809" pos:column="64">HRESULT</name></type> ( <name pos:line="3809" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="3809" pos:column="92">*</type:modifier><name pos:line="3809" pos:column="93">ElementFromID</name> )<parameter_list pos:line="3809" pos:column="108">( 
            <param><decl><type><name pos:line="3810" pos:column="13">CodeModel2</name> <type:modifier pos:line="3810" pos:column="24">*</type:modifier></type> <name pos:line="3810" pos:column="26">This</name></decl></param>,
            <param><decl><type><name pos:line="3811" pos:column="13">__RPC__in</name> <name pos:line="3811" pos:column="23">BSTR</name></type> <name pos:line="3811" pos:column="28">ID</name></decl></param>,
            <comment type="block" pos:line="3812" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3812" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="3812" pos:column="54">/* external definition not present */</comment> <name pos:line="3812" pos:column="92">CodeElement</name> <type:modifier pos:line="3812" pos:column="104">*</type:modifier><type:modifier pos:line="3812" pos:column="105">*</type:modifier></type><name pos:line="3812" pos:column="106">pElement</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="3814" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="3815" pos:column="7">CodeModel2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="3817" pos:column="5">interface</name></type> <name pos:line="3817" pos:column="15">CodeModel2</name>
    <argument_list pos:line="3818" pos:column="5">{
        <argument><expr><name pos:line="3819" pos:column="9">CONST_VTBL</name> struct <name pos:line="3819" pos:column="27">CodeModel2Vtbl</name> <op:operator pos:line="3819" pos:column="42">*</op:operator><name pos:line="3819" pos:column="43">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="3824" pos:column="1">#<cpp:directive pos:line="3824" pos:column="2">ifdef</cpp:directive> <name pos:line="3824" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="3827" pos:column="1">#<cpp:directive pos:line="3827" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3827" pos:column="9">CodeModel2_QueryInterface</name><parameter_list pos:line="3827" pos:column="34">(<param><type><name pos:line="3827" pos:column="35">This</name></type></param>,<param><type><name pos:line="3827" pos:column="40">riid</name></type></param>,<param><type><name pos:line="3827" pos:column="45">ppvObj</name></type></param>,<param><type><name pos:line="3827" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3828" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3830" pos:column="1">#<cpp:directive pos:line="3830" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3830" pos:column="9">CodeModel2_AddRef</name><parameter_list pos:line="3830" pos:column="26">(<param><type><name pos:line="3830" pos:column="27">This</name></type></param>,<param><type><name pos:line="3830" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3831" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3833" pos:column="1">#<cpp:directive pos:line="3833" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3833" pos:column="9">CodeModel2_Release</name><parameter_list pos:line="3833" pos:column="27">(<param><type><name pos:line="3833" pos:column="28">This</name></type></param>,<param><type><name pos:line="3833" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3834" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3836" pos:column="1">#<cpp:directive pos:line="3836" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3836" pos:column="9">CodeModel2_GetTypeInfoCount</name><parameter_list pos:line="3836" pos:column="36">(<param><type><name pos:line="3836" pos:column="37">This</name></type></param>,<param><type><name pos:line="3836" pos:column="42">pctinfo</name></type></param>,<param><type><name pos:line="3836" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3837" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3839" pos:column="1">#<cpp:directive pos:line="3839" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3839" pos:column="9">CodeModel2_GetTypeInfo</name><parameter_list pos:line="3839" pos:column="31">(<param><type><name pos:line="3839" pos:column="32">This</name></type></param>,<param><type><name pos:line="3839" pos:column="37">itinfo</name></type></param>,<param><type><name pos:line="3839" pos:column="44">lcid</name></type></param>,<param><type><name pos:line="3839" pos:column="49">pptinfo</name></type></param>,<param><type><name pos:line="3839" pos:column="57">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3840" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3842" pos:column="1">#<cpp:directive pos:line="3842" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3842" pos:column="9">CodeModel2_GetIDsOfNames</name><parameter_list pos:line="3842" pos:column="33">(<param><type><name pos:line="3842" pos:column="34">This</name></type></param>,<param><type><name pos:line="3842" pos:column="39">riid</name></type></param>,<param><type><name pos:line="3842" pos:column="44">rgszNames</name></type></param>,<param><type><name pos:line="3842" pos:column="54">cNames</name></type></param>,<param><type><name pos:line="3842" pos:column="61">lcid</name></type></param>,<param><type><name pos:line="3842" pos:column="66">rgdispid</name></type></param>,<param><type><name pos:line="3842" pos:column="75">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3843" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3845" pos:column="1">#<cpp:directive pos:line="3845" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3845" pos:column="9">CodeModel2_Invoke</name><parameter_list pos:line="3845" pos:column="26">(<param><type><name pos:line="3845" pos:column="27">This</name></type></param>,<param><type><name pos:line="3845" pos:column="32">dispidMember</name></type></param>,<param><type><name pos:line="3845" pos:column="45">riid</name></type></param>,<param><type><name pos:line="3845" pos:column="50">lcid</name></type></param>,<param><type><name pos:line="3845" pos:column="55">wFlags</name></type></param>,<param><type><name pos:line="3845" pos:column="62">pdispparams</name></type></param>,<param><type><name pos:line="3845" pos:column="74">pvarResult</name></type></param>,<param><type><name pos:line="3845" pos:column="85">pexcepinfo</name></type></param>,<param><type><name pos:line="3845" pos:column="96">puArgErr</name></type></param>,<param><type><name pos:line="3845" pos:column="105">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3846" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3848" pos:column="1">#<cpp:directive pos:line="3848" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3848" pos:column="9">CodeModel2_get_DTE</name><parameter_list pos:line="3848" pos:column="27">(<param><type><name pos:line="3848" pos:column="28">This</name></type></param>,<param><type><name pos:line="3848" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3849" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3851" pos:column="1">#<cpp:directive pos:line="3851" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3851" pos:column="9">CodeModel2_get_Parent</name><parameter_list pos:line="3851" pos:column="30">(<param><type><name pos:line="3851" pos:column="31">This</name></type></param>,<param><type><name pos:line="3851" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3852" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3854" pos:column="1">#<cpp:directive pos:line="3854" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3854" pos:column="9">CodeModel2_get_Language</name><parameter_list pos:line="3854" pos:column="32">(<param><type><name pos:line="3854" pos:column="33">This</name></type></param>,<param><type><name pos:line="3854" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3855" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3857" pos:column="1">#<cpp:directive pos:line="3857" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3857" pos:column="9">CodeModel2_get_CodeElements</name><parameter_list pos:line="3857" pos:column="36">(<param><type><name pos:line="3857" pos:column="37">This</name></type></param>,<param><type><name pos:line="3857" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3858" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CodeElements(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3860" pos:column="1">#<cpp:directive pos:line="3860" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3860" pos:column="9">CodeModel2_CodeTypeFromFullName</name><parameter_list pos:line="3860" pos:column="40">(<param><type><name pos:line="3860" pos:column="41">This</name></type></param>,<param><type><name pos:line="3860" pos:column="46">Name</name></type></param>,<param><type><name pos:line="3860" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3861" pos:column="5">( (This)-&gt;lpVtbl -&gt; CodeTypeFromFullName(This,Name,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3863" pos:column="1">#<cpp:directive pos:line="3863" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3863" pos:column="9">CodeModel2_AddNamespace</name><parameter_list pos:line="3863" pos:column="32">(<param><type><name pos:line="3863" pos:column="33">This</name></type></param>,<param><type><name pos:line="3863" pos:column="38">Name</name></type></param>,<param><type><name pos:line="3863" pos:column="43">Location</name></type></param>,<param><type><name pos:line="3863" pos:column="52">Position</name></type></param>,<param><type><name pos:line="3863" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3864" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddNamespace(This,Name,Location,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3866" pos:column="1">#<cpp:directive pos:line="3866" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3866" pos:column="9">CodeModel2_AddClass</name><parameter_list pos:line="3866" pos:column="28">(<param><type><name pos:line="3866" pos:column="29">This</name></type></param>,<param><type><name pos:line="3866" pos:column="34">Name</name></type></param>,<param><type><name pos:line="3866" pos:column="39">Location</name></type></param>,<param><type><name pos:line="3866" pos:column="48">Position</name></type></param>,<param><type><name pos:line="3866" pos:column="57">Bases</name></type></param>,<param><type><name pos:line="3866" pos:column="63">ImplementedInterfaces</name></type></param>,<param><type><name pos:line="3866" pos:column="85">Access</name></type></param>,<param><type><name pos:line="3866" pos:column="92">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3867" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddClass(This,Name,Location,Position,Bases,ImplementedInterfaces,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3869" pos:column="1">#<cpp:directive pos:line="3869" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3869" pos:column="9">CodeModel2_AddInterface</name><parameter_list pos:line="3869" pos:column="32">(<param><type><name pos:line="3869" pos:column="33">This</name></type></param>,<param><type><name pos:line="3869" pos:column="38">Name</name></type></param>,<param><type><name pos:line="3869" pos:column="43">Location</name></type></param>,<param><type><name pos:line="3869" pos:column="52">Position</name></type></param>,<param><type><name pos:line="3869" pos:column="61">Bases</name></type></param>,<param><type><name pos:line="3869" pos:column="67">Access</name></type></param>,<param><type><name pos:line="3869" pos:column="74">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3870" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddInterface(This,Name,Location,Position,Bases,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3872" pos:column="1">#<cpp:directive pos:line="3872" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3872" pos:column="9">CodeModel2_AddFunction</name><parameter_list pos:line="3872" pos:column="31">(<param><type><name pos:line="3872" pos:column="32">This</name></type></param>,<param><type><name pos:line="3872" pos:column="37">Name</name></type></param>,<param><type><name pos:line="3872" pos:column="42">Location</name></type></param>,<param><type><name pos:line="3872" pos:column="51">Kind</name></type></param>,<param><type><name pos:line="3872" pos:column="56">Type</name></type></param>,<param><type><name pos:line="3872" pos:column="61">Position</name></type></param>,<param><type><name pos:line="3872" pos:column="70">Access</name></type></param>,<param><type><name pos:line="3872" pos:column="77">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3873" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddFunction(This,Name,Location,Kind,Type,Position,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3875" pos:column="1">#<cpp:directive pos:line="3875" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3875" pos:column="9">CodeModel2_AddVariable</name><parameter_list pos:line="3875" pos:column="31">(<param><type><name pos:line="3875" pos:column="32">This</name></type></param>,<param><type><name pos:line="3875" pos:column="37">Name</name></type></param>,<param><type><name pos:line="3875" pos:column="42">Location</name></type></param>,<param><type><name pos:line="3875" pos:column="51">Type</name></type></param>,<param><type><name pos:line="3875" pos:column="56">Position</name></type></param>,<param><type><name pos:line="3875" pos:column="65">Access</name></type></param>,<param><type><name pos:line="3875" pos:column="72">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3876" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddVariable(This,Name,Location,Type,Position,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3878" pos:column="1">#<cpp:directive pos:line="3878" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3878" pos:column="9">CodeModel2_AddStruct</name><parameter_list pos:line="3878" pos:column="29">(<param><type><name pos:line="3878" pos:column="30">This</name></type></param>,<param><type><name pos:line="3878" pos:column="35">Name</name></type></param>,<param><type><name pos:line="3878" pos:column="40">Location</name></type></param>,<param><type><name pos:line="3878" pos:column="49">Position</name></type></param>,<param><type><name pos:line="3878" pos:column="58">Bases</name></type></param>,<param><type><name pos:line="3878" pos:column="64">ImplementedInterfaces</name></type></param>,<param><type><name pos:line="3878" pos:column="86">Access</name></type></param>,<param><type><name pos:line="3878" pos:column="93">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3879" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddStruct(This,Name,Location,Position,Bases,ImplementedInterfaces,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3881" pos:column="1">#<cpp:directive pos:line="3881" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3881" pos:column="9">CodeModel2_AddEnum</name><parameter_list pos:line="3881" pos:column="27">(<param><type><name pos:line="3881" pos:column="28">This</name></type></param>,<param><type><name pos:line="3881" pos:column="33">Name</name></type></param>,<param><type><name pos:line="3881" pos:column="38">Location</name></type></param>,<param><type><name pos:line="3881" pos:column="47">Position</name></type></param>,<param><type><name pos:line="3881" pos:column="56">Bases</name></type></param>,<param><type><name pos:line="3881" pos:column="62">Access</name></type></param>,<param><type><name pos:line="3881" pos:column="69">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3882" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddEnum(This,Name,Location,Position,Bases,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3884" pos:column="1">#<cpp:directive pos:line="3884" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3884" pos:column="9">CodeModel2_AddDelegate</name><parameter_list pos:line="3884" pos:column="31">(<param><type><name pos:line="3884" pos:column="32">This</name></type></param>,<param><type><name pos:line="3884" pos:column="37">Name</name></type></param>,<param><type><name pos:line="3884" pos:column="42">Location</name></type></param>,<param><type><name pos:line="3884" pos:column="51">Type</name></type></param>,<param><type><name pos:line="3884" pos:column="56">Position</name></type></param>,<param><type><name pos:line="3884" pos:column="65">Access</name></type></param>,<param><type><name pos:line="3884" pos:column="72">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3885" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddDelegate(This,Name,Location,Type,Position,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3887" pos:column="1">#<cpp:directive pos:line="3887" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3887" pos:column="9">CodeModel2_AddAttribute</name><parameter_list pos:line="3887" pos:column="32">(<param><type><name pos:line="3887" pos:column="33">This</name></type></param>,<param><type><name pos:line="3887" pos:column="38">Name</name></type></param>,<param><type><name pos:line="3887" pos:column="43">Location</name></type></param>,<param><type><name pos:line="3887" pos:column="52">Value</name></type></param>,<param><type><name pos:line="3887" pos:column="58">Position</name></type></param>,<param><type><name pos:line="3887" pos:column="67">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3888" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddAttribute(This,Name,Location,Value,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3890" pos:column="1">#<cpp:directive pos:line="3890" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3890" pos:column="9">CodeModel2_Remove</name><parameter_list pos:line="3890" pos:column="26">(<param><type><name pos:line="3890" pos:column="27">This</name></type></param>,<param><type><name pos:line="3890" pos:column="32">Element</name></type></param>,<param><type><name pos:line="3890" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3891" pos:column="5">( (This)-&gt;lpVtbl -&gt; Remove(This,Element,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3893" pos:column="1">#<cpp:directive pos:line="3893" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3893" pos:column="9">CodeModel2_IsValidID</name><parameter_list pos:line="3893" pos:column="29">(<param><type><name pos:line="3893" pos:column="30">This</name></type></param>,<param><type><name pos:line="3893" pos:column="35">Name</name></type></param>,<param><type><name pos:line="3893" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3894" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsValidID(This,Name,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3896" pos:column="1">#<cpp:directive pos:line="3896" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3896" pos:column="9">CodeModel2_get_IsCaseSensitive</name><parameter_list pos:line="3896" pos:column="39">(<param><type><name pos:line="3896" pos:column="40">This</name></type></param>,<param><type><name pos:line="3896" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3897" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsCaseSensitive(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="3899" pos:column="1">#<cpp:directive pos:line="3899" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3899" pos:column="9">CodeModel2_CreateCodeTypeRef</name><parameter_list pos:line="3899" pos:column="37">(<param><type><name pos:line="3899" pos:column="38">This</name></type></param>,<param><type><name pos:line="3899" pos:column="43">Type</name></type></param>,<param><type><name pos:line="3899" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3900" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateCodeTypeRef(This,Type,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="3903" pos:column="1">#<cpp:directive pos:line="3903" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3903" pos:column="9">CodeModel2_Synchronize</name><parameter_list pos:line="3903" pos:column="31">(<param><type><name pos:line="3903" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3904" pos:column="5">( (This)-&gt;lpVtbl -&gt; Synchronize(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="3906" pos:column="1">#<cpp:directive pos:line="3906" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3906" pos:column="9">CodeModel2_DotNetNameFromLanguageSpecific</name><parameter_list pos:line="3906" pos:column="50">(<param><type><name pos:line="3906" pos:column="51">This</name></type></param>,<param><type><name pos:line="3906" pos:column="56">LanguageName</name></type></param>,<param><type><name pos:line="3906" pos:column="69">DotNETName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3907" pos:column="5">( (This)-&gt;lpVtbl -&gt; DotNetNameFromLanguageSpecific(This,LanguageName,DotNETName) )</cpp:value></cpp:define> 

<cpp:define pos:line="3909" pos:column="1">#<cpp:directive pos:line="3909" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3909" pos:column="9">CodeModel2_LanguageSpecificNameFromDotNet</name><parameter_list pos:line="3909" pos:column="50">(<param><type><name pos:line="3909" pos:column="51">This</name></type></param>,<param><type><name pos:line="3909" pos:column="56">DotNETName</name></type></param>,<param><type><name pos:line="3909" pos:column="67">LanguageName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3910" pos:column="5">( (This)-&gt;lpVtbl -&gt; LanguageSpecificNameFromDotNet(This,DotNETName,LanguageName) )</cpp:value></cpp:define> 

<cpp:define pos:line="3912" pos:column="1">#<cpp:directive pos:line="3912" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3912" pos:column="9">CodeModel2_ElementFromID</name><parameter_list pos:line="3912" pos:column="33">(<param><type><name pos:line="3912" pos:column="34">This</name></type></param>,<param><type><name pos:line="3912" pos:column="39">ID</name></type></param>,<param><type><name pos:line="3912" pos:column="42">pElement</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="3913" pos:column="5">( (This)-&gt;lpVtbl -&gt; ElementFromID(This,ID,pElement) )</cpp:value></cpp:define> 

<cpp:endif pos:line="3915" pos:column="1">#<cpp:directive pos:line="3915" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="3915" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="3918" pos:column="1">#<cpp:directive pos:line="3918" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3918" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="3923" pos:column="1">#<cpp:directive pos:line="3923" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="3923" pos:column="9">/* __CodeModel2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="3926" pos:column="1">#<cpp:directive pos:line="3926" pos:column="2">ifndef</cpp:directive> <name pos:line="3926" pos:column="9">__CodeClass2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="3927" pos:column="1">#<cpp:directive pos:line="3927" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3927" pos:column="9">__CodeClass2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="3929" pos:column="1">/* interface CodeClass2 */</comment>
<comment type="block" pos:line="3930" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="3933" pos:column="1">EXTERN_C</name> <specifier pos:line="3933" pos:column="10">const</specifier> <name pos:line="3933" pos:column="16">IID</name></type> <name pos:line="3933" pos:column="20">IID_CodeClass2</name></decl>;</decl_stmt>

<cpp:if pos:line="3935" pos:column="1">#<cpp:directive pos:line="3935" pos:column="2">if</cpp:directive> <expr><call><name pos:line="3935" pos:column="5">defined</name><argument_list pos:line="3935" pos:column="12">(<argument><expr><name pos:line="3935" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="3935" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="3935" pos:column="29">!</op:operator><call><name pos:line="3935" pos:column="30">defined</name><argument_list pos:line="3935" pos:column="37">(<argument><expr><name pos:line="3935" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="3937" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="3937" pos:column="19">(<argument pos:line="3937" pos:column="20">"295ADCD4-B052-49EE-934E-C6B36862A7C6"</argument>)</argument_list></macro>
    <label><name pos:line="3938" pos:column="5">CodeClass2</name> :</label> <expr_stmt><expr pos:line="3938" pos:column="18">public <name pos:line="3938" pos:column="25">CodeClass</name>
    <block pos:line="3939" pos:column="5">{
    <expr pos:line="3940" pos:column="5">public<op:operator pos:line="3940" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="3941" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */</comment> <name pos:line="3941" pos:column="89">HRESULT</name> <name pos:line="3941" pos:column="97">STDMETHODCALLTYPE</name> <macro><name pos:line="3941" pos:column="115">get_ClassKind</name><argument_list pos:line="3941" pos:column="128">( 
            <comment type="block" pos:line="3942" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3942" pos:column="33">__RPC__out vsCMClassKind *Kind</argument>)</argument_list></macro> <op:operator pos:line="3942" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="3942" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="3944" pos:column="9">virtual <comment type="block" pos:line="3944" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][hidden][propput][id] */</comment> <name pos:line="3944" pos:column="89">HRESULT</name> <name pos:line="3944" pos:column="97">STDMETHODCALLTYPE</name> <macro><name pos:line="3944" pos:column="115">put_ClassKind</name><argument_list pos:line="3944" pos:column="128">( 
            <argument pos:line="3945" pos:column="13">vsCMClassKind Kind</argument>)</argument_list></macro> <op:operator pos:line="3945" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="3945" pos:column="35">0</lit:literal></expr>;
        
        <expr pos:line="3947" pos:column="9">virtual <comment type="block" pos:line="3947" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */</comment> <name pos:line="3947" pos:column="89">HRESULT</name> <name pos:line="3947" pos:column="97">STDMETHODCALLTYPE</name> <macro><name pos:line="3947" pos:column="115">get_PartialClasses</name><argument_list pos:line="3947" pos:column="133">( 
            <comment type="block" pos:line="3948" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3948" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="3948" pos:column="54">/* external definition not present */</comment> CodeElements **Elements</argument>)</argument_list></macro> <op:operator pos:line="3948" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="3948" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="3950" pos:column="9">virtual <comment type="block" pos:line="3950" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="3950" pos:column="81">HRESULT</name> <name pos:line="3950" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="3950" pos:column="107">get_DataTypeKind</name><argument_list pos:line="3950" pos:column="123">( 
            <comment type="block" pos:line="3951" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3951" pos:column="33">__RPC__out vsCMDataTypeKind *Kind</argument>)</argument_list></macro> <op:operator pos:line="3951" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="3951" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="3953" pos:column="9">virtual <comment type="block" pos:line="3953" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="3953" pos:column="81">HRESULT</name> <name pos:line="3953" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="3953" pos:column="107">put_DataTypeKind</name><argument_list pos:line="3953" pos:column="123">( 
            <argument pos:line="3954" pos:column="13">vsCMDataTypeKind Kind</argument>)</argument_list></macro> <op:operator pos:line="3954" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="3954" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="3956" pos:column="9">virtual <comment type="block" pos:line="3956" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="3956" pos:column="81">HRESULT</name> <name pos:line="3956" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="3956" pos:column="107">get_Parts</name><argument_list pos:line="3956" pos:column="116">( 
            <comment type="block" pos:line="3957" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3957" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="3957" pos:column="54">/* external definition not present */</comment> CodeElements **Elements</argument>)</argument_list></macro> <op:operator pos:line="3957" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="3957" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="3959" pos:column="9">virtual <comment type="block" pos:line="3959" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="3959" pos:column="81">HRESULT</name> <name pos:line="3959" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="3959" pos:column="107">get_InheritanceKind</name><argument_list pos:line="3959" pos:column="126">( 
            <comment type="block" pos:line="3960" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3960" pos:column="33">__RPC__out vsCMInheritanceKind *Kind</argument>)</argument_list></macro> <op:operator pos:line="3960" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="3960" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="3962" pos:column="9">virtual <comment type="block" pos:line="3962" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="3962" pos:column="81">HRESULT</name> <name pos:line="3962" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="3962" pos:column="107">put_InheritanceKind</name><argument_list pos:line="3962" pos:column="126">( 
            <argument pos:line="3963" pos:column="13">vsCMInheritanceKind Kind</argument>)</argument_list></macro> <op:operator pos:line="3963" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="3963" pos:column="41">0</lit:literal></expr>;
        
        <expr pos:line="3965" pos:column="9">virtual <comment type="block" pos:line="3965" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="3965" pos:column="49">HRESULT</name> <name pos:line="3965" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="3965" pos:column="75">get_IsGeneric</name><argument_list pos:line="3965" pos:column="88">( 
            <comment type="block" pos:line="3966" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3966" pos:column="33">__RPC__out VARIANT_BOOL *pIsGeneric</argument>)</argument_list></macro> <op:operator pos:line="3966" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="3966" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="3968" pos:column="9">virtual <comment type="block" pos:line="3968" pos:column="17">/* [helpstring][id] */</comment> <name pos:line="3968" pos:column="40">HRESULT</name> <name pos:line="3968" pos:column="48">STDMETHODCALLTYPE</name> <macro><name pos:line="3968" pos:column="66">AddEvent</name><argument_list pos:line="3968" pos:column="74">( 
            <argument pos:line="3969" pos:column="13">__RPC__in BSTR Name</argument>,
            <argument pos:line="3970" pos:column="13">__RPC__in BSTR FullDelegateName</argument>,
            <comment type="block" pos:line="3971" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="3971" pos:column="38">VARIANT_BOOL CreatePropertyStyleEvent</argument>,
            <comment type="block" pos:line="3972" pos:column="13">/* [optional] */</comment> <argument pos:line="3972" pos:column="30">VARIANT Location</argument>,
            <comment type="block" pos:line="3973" pos:column="13">/* [defaultvalue] */</comment> <argument pos:line="3973" pos:column="34">enum <comment type="block" pos:line="3973" pos:column="39">/* external definition not present */</comment> vsCMAccess Access</argument>,
            <comment type="block" pos:line="3974" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3974" pos:column="33">__RPC__deref_out_opt CodeEvent **ppEvent</argument>)</argument_list></macro> <op:operator pos:line="3974" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="3974" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="3976" pos:column="9">virtual <comment type="block" pos:line="3976" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="3976" pos:column="81">HRESULT</name> <name pos:line="3976" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="3976" pos:column="107">get_IsShared</name><argument_list pos:line="3976" pos:column="119">( 
            <comment type="block" pos:line="3977" pos:column="13">/* [retval][out] */</comment> <argument pos:line="3977" pos:column="33">__RPC__out VARIANT_BOOL *pIsShared</argument>)</argument_list></macro> <op:operator pos:line="3977" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="3977" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="3979" pos:column="9">virtual <comment type="block" pos:line="3979" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="3979" pos:column="81">HRESULT</name> <name pos:line="3979" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="3979" pos:column="107">put_IsShared</name><argument_list pos:line="3979" pos:column="119">( 
            <argument pos:line="3980" pos:column="13">VARIANT_BOOL Shared</argument>)</argument_list></macro> <op:operator pos:line="3980" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="3980" pos:column="36">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="3984" pos:column="1">#<cpp:directive pos:line="3984" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="3984" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="3986" pos:column="5">typedef <type><struct pos:line="3986" pos:column="13">struct <name pos:line="3986" pos:column="20">CodeClass2Vtbl</name>
    <block pos:line="3987" pos:column="5">{<public type="default" pos:line="3987" pos:column="6">
        <decl_stmt><decl><type><name pos:line="3988" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="3990" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="3990" pos:column="46">HRESULT</name></type> ( <name pos:line="3990" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3990" pos:column="74">*</type:modifier><name pos:line="3990" pos:column="75">QueryInterface</name> )<parameter_list pos:line="3990" pos:column="91">( 
            <param><decl><type><name pos:line="3991" pos:column="13">CodeClass2</name> <type:modifier pos:line="3991" pos:column="24">*</type:modifier></type> <name pos:line="3991" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3992" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="3992" pos:column="47">struct <name pos:line="3992" pos:column="54">GUID</name> <type:modifier pos:line="3992" pos:column="59">*</type:modifier></type><name pos:line="3992" pos:column="60">riid</name></decl><op:operator pos:line="3992" pos:column="64">,</op:operator>
            <comment type="block" pos:line="3993" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="3993" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="3993" pos:column="59">void</name> <type:modifier pos:line="3993" pos:column="64">*</type:modifier><type:modifier pos:line="3993" pos:column="65">*</type:modifier><name pos:line="3993" pos:column="66">ppvObj</name><op:operator pos:line="3993" pos:column="72">,</op:operator>
            <comment type="block" pos:line="3994" pos:column="13">/* [retval][out] */</comment> <name pos:line="3994" pos:column="33">__RPC__out</name> <name pos:line="3994" pos:column="44">void</name> <type:modifier pos:line="3994" pos:column="49">*</type:modifier><name pos:line="3994" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="3996" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="3996" pos:column="46">HRESULT</name></type> ( <name pos:line="3996" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="3996" pos:column="74">*</type:modifier><name pos:line="3996" pos:column="75">AddRef</name> )<parameter_list pos:line="3996" pos:column="83">( 
            <param><decl><type><name pos:line="3997" pos:column="13">CodeClass2</name> <type:modifier pos:line="3997" pos:column="24">*</type:modifier></type> <name pos:line="3997" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="3998" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="3998" pos:column="33">__RPC__out</name> <name pos:line="3998" pos:column="44">unsigned</name> <name pos:line="3998" pos:column="53">long</name> <type:modifier pos:line="3998" pos:column="58">*</type:modifier></type><name pos:line="3998" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4000" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="4000" pos:column="46">HRESULT</name></type> ( <name pos:line="4000" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="4000" pos:column="74">*</type:modifier><name pos:line="4000" pos:column="75">Release</name> )<parameter_list pos:line="4000" pos:column="84">( 
            <param><decl><type><name pos:line="4001" pos:column="13">CodeClass2</name> <type:modifier pos:line="4001" pos:column="24">*</type:modifier></type> <name pos:line="4001" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4002" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4002" pos:column="33">__RPC__out</name> <name pos:line="4002" pos:column="44">unsigned</name> <name pos:line="4002" pos:column="53">long</name> <type:modifier pos:line="4002" pos:column="58">*</type:modifier></type><name pos:line="4002" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4004" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="4004" pos:column="46">HRESULT</name></type> ( <name pos:line="4004" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="4004" pos:column="74">*</type:modifier><name pos:line="4004" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="4004" pos:column="93">( 
            <param><decl><type><name pos:line="4005" pos:column="13">CodeClass2</name> <type:modifier pos:line="4005" pos:column="24">*</type:modifier></type> <name pos:line="4005" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4006" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="4006" pos:column="38">__RPC__out</name> <name pos:line="4006" pos:column="49">unsigned</name> <name pos:line="4006" pos:column="58">UINT</name> <type:modifier pos:line="4006" pos:column="63">*</type:modifier></type><name pos:line="4006" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="4007" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4007" pos:column="33">__RPC__out</name> <name pos:line="4007" pos:column="44">void</name> <type:modifier pos:line="4007" pos:column="49">*</type:modifier></type><name pos:line="4007" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4009" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="4009" pos:column="46">HRESULT</name></type> ( <name pos:line="4009" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="4009" pos:column="74">*</type:modifier><name pos:line="4009" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="4009" pos:column="88">( 
            <param><decl><type><name pos:line="4010" pos:column="13">CodeClass2</name> <type:modifier pos:line="4010" pos:column="24">*</type:modifier></type> <name pos:line="4010" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4011" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="4011" pos:column="37">unsigned</name> <name pos:line="4011" pos:column="46">UINT</name></type> <name pos:line="4011" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="4012" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="4012" pos:column="37">unsigned</name> <name pos:line="4012" pos:column="46">long</name></type> <name pos:line="4012" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="4013" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="4013" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="4013" pos:column="59">void</name> <type:modifier pos:line="4013" pos:column="64">*</type:modifier><type:modifier pos:line="4013" pos:column="65">*</type:modifier></type><name pos:line="4013" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="4014" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4014" pos:column="33">__RPC__out</name> <name pos:line="4014" pos:column="44">void</name> <type:modifier pos:line="4014" pos:column="49">*</type:modifier></type><name pos:line="4014" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4016" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="4016" pos:column="46">HRESULT</name> <argument_list pos:line="4016" pos:column="54">( <argument pos:line="4016" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4016" pos:column="90">(</op:operator> 
            <name pos:line="4017" pos:column="13">CodeClass2</name> <op:operator pos:line="4017" pos:column="24">*</op:operator> <name pos:line="4017" pos:column="26">This</name><op:operator pos:line="4017" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4018" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4018" pos:column="37">__RPC__in</name> struct <name pos:line="4018" pos:column="54">GUID</name> <op:operator pos:line="4018" pos:column="59">*</op:operator><name pos:line="4018" pos:column="60">riid</name><op:operator pos:line="4018" pos:column="64">,</op:operator>
            <comment type="block" pos:line="4019" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4019" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="4019" pos:column="57">signed</name> <name pos:line="4019" pos:column="64">char</name> <op:operator pos:line="4019" pos:column="69">*</op:operator><op:operator pos:line="4019" pos:column="70">*</op:operator><name pos:line="4019" pos:column="71">rgszNames</name><op:operator pos:line="4019" pos:column="80">,</op:operator>
            <comment type="block" pos:line="4020" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4020" pos:column="37">unsigned</name> <name pos:line="4020" pos:column="46">UINT</name> <name pos:line="4020" pos:column="51">cNames</name><op:operator pos:line="4020" pos:column="57">,</op:operator>
            <comment type="block" pos:line="4021" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4021" pos:column="37">unsigned</name> <name pos:line="4021" pos:column="46">long</name> <name pos:line="4021" pos:column="51">lcid</name><op:operator pos:line="4021" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4022" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="4022" pos:column="38">__RPC__out</name> <name pos:line="4022" pos:column="49">signed</name> <name pos:line="4022" pos:column="56">long</name> <op:operator pos:line="4022" pos:column="61">*</op:operator><name pos:line="4022" pos:column="62">rgdispid</name><op:operator pos:line="4022" pos:column="70">,</op:operator>
            <comment type="block" pos:line="4023" pos:column="13">/* [retval][out] */</comment> <name pos:line="4023" pos:column="33">__RPC__out</name> <name pos:line="4023" pos:column="44">void</name> <op:operator pos:line="4023" pos:column="49">*</op:operator><name pos:line="4023" pos:column="50">retval</name><op:operator pos:line="4023" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4025" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="4025" pos:column="46">HRESULT</name> <argument_list pos:line="4025" pos:column="54">( <argument pos:line="4025" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4025" pos:column="83">(</op:operator> 
            <name pos:line="4026" pos:column="13">CodeClass2</name> <op:operator pos:line="4026" pos:column="24">*</op:operator> <name pos:line="4026" pos:column="26">This</name><op:operator pos:line="4026" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4027" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4027" pos:column="37">signed</name> <name pos:line="4027" pos:column="44">long</name> <name pos:line="4027" pos:column="49">dispidMember</name><op:operator pos:line="4027" pos:column="61">,</op:operator>
            <comment type="block" pos:line="4028" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4028" pos:column="37">__RPC__in</name> struct <name pos:line="4028" pos:column="54">GUID</name> <op:operator pos:line="4028" pos:column="59">*</op:operator><name pos:line="4028" pos:column="60">riid</name><op:operator pos:line="4028" pos:column="64">,</op:operator>
            <comment type="block" pos:line="4029" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4029" pos:column="37">unsigned</name> <name pos:line="4029" pos:column="46">long</name> <name pos:line="4029" pos:column="51">lcid</name><op:operator pos:line="4029" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4030" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4030" pos:column="37">unsigned</name> <name pos:line="4030" pos:column="46">short</name> <name pos:line="4030" pos:column="52">wFlags</name><op:operator pos:line="4030" pos:column="58">,</op:operator>
            <comment type="block" pos:line="4031" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4031" pos:column="37">__RPC__in</name> struct <name pos:line="4031" pos:column="54">DISPPARAMS</name> <op:operator pos:line="4031" pos:column="65">*</op:operator><name pos:line="4031" pos:column="66">pdispparams</name><op:operator pos:line="4031" pos:column="77">,</op:operator>
            <comment type="block" pos:line="4032" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="4032" pos:column="38">__RPC__out</name> <name pos:line="4032" pos:column="49">VARIANT</name> <op:operator pos:line="4032" pos:column="57">*</op:operator><name pos:line="4032" pos:column="58">pvarResult</name><op:operator pos:line="4032" pos:column="68">,</op:operator>
            <comment type="block" pos:line="4033" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="4033" pos:column="38">__RPC__out</name> struct <name pos:line="4033" pos:column="56">EXCEPINFO</name> <op:operator pos:line="4033" pos:column="66">*</op:operator><name pos:line="4033" pos:column="67">pexcepinfo</name><op:operator pos:line="4033" pos:column="77">,</op:operator>
            <comment type="block" pos:line="4034" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="4034" pos:column="38">__RPC__out</name> <name pos:line="4034" pos:column="49">unsigned</name> <name pos:line="4034" pos:column="58">UINT</name> <op:operator pos:line="4034" pos:column="63">*</op:operator><name pos:line="4034" pos:column="64">puArgErr</name><op:operator pos:line="4034" pos:column="72">,</op:operator>
            <comment type="block" pos:line="4035" pos:column="13">/* [retval][out] */</comment> <name pos:line="4035" pos:column="33">__RPC__out</name> <name pos:line="4035" pos:column="44">void</name> <op:operator pos:line="4035" pos:column="49">*</op:operator><name pos:line="4035" pos:column="50">retval</name><op:operator pos:line="4035" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4037" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4037" pos:column="43">HRESULT</name></type> ( <name pos:line="4037" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4037" pos:column="71">*</type:modifier><name pos:line="4037" pos:column="72">get_DTE</name> )<parameter_list pos:line="4037" pos:column="81">( 
            <param><decl><type><name pos:line="4038" pos:column="13">CodeClass2</name> <type:modifier pos:line="4038" pos:column="24">*</type:modifier></type> <name pos:line="4038" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4039" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4039" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="4039" pos:column="54">*</type:modifier><type:modifier pos:line="4039" pos:column="55">*</type:modifier></type><name pos:line="4039" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4041" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4041" pos:column="43">HRESULT</name></type> ( <name pos:line="4041" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4041" pos:column="71">*</type:modifier><name pos:line="4041" pos:column="72">get_Collection</name> )<parameter_list pos:line="4041" pos:column="88">( 
            <param><decl><type><name pos:line="4042" pos:column="13">CodeClass2</name> <type:modifier pos:line="4042" pos:column="24">*</type:modifier></type> <name pos:line="4042" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4043" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4043" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4043" pos:column="54">CodeElements</name> <type:modifier pos:line="4043" pos:column="67">*</type:modifier><type:modifier pos:line="4043" pos:column="68">*</type:modifier></type><name pos:line="4043" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4045" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4045" pos:column="43">HRESULT</name></type> ( <name pos:line="4045" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4045" pos:column="71">*</type:modifier><name pos:line="4045" pos:column="72">get_Name</name> )<parameter_list pos:line="4045" pos:column="82">( 
            <param><decl><type><name pos:line="4046" pos:column="13">CodeClass2</name> <type:modifier pos:line="4046" pos:column="24">*</type:modifier></type> <name pos:line="4046" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4047" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4047" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4047" pos:column="54">BSTR</name> <type:modifier pos:line="4047" pos:column="59">*</type:modifier></type><name pos:line="4047" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4049" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="4049" pos:column="43">HRESULT</name></type> ( <name pos:line="4049" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4049" pos:column="71">*</type:modifier><name pos:line="4049" pos:column="72">put_Name</name> )<parameter_list pos:line="4049" pos:column="82">( 
            <param><decl><type><name pos:line="4050" pos:column="13">CodeClass2</name> <type:modifier pos:line="4050" pos:column="24">*</type:modifier></type> <name pos:line="4050" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4051" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4051" pos:column="33">__RPC__in</name> <name pos:line="4051" pos:column="43">BSTR</name></type> <name pos:line="4051" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="4052" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4052" pos:column="33">__RPC__out</name> <name pos:line="4052" pos:column="44">void</name> <type:modifier pos:line="4052" pos:column="49">*</type:modifier></type><name pos:line="4052" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4054" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4054" pos:column="43">HRESULT</name></type> ( <name pos:line="4054" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4054" pos:column="71">*</type:modifier><name pos:line="4054" pos:column="72">get_FullName</name> )<parameter_list pos:line="4054" pos:column="86">( 
            <param><decl><type><name pos:line="4055" pos:column="13">CodeClass2</name> <type:modifier pos:line="4055" pos:column="24">*</type:modifier></type> <name pos:line="4055" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4056" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4056" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4056" pos:column="54">BSTR</name> <type:modifier pos:line="4056" pos:column="59">*</type:modifier></type><name pos:line="4056" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4058" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4058" pos:column="43">HRESULT</name></type> ( <name pos:line="4058" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4058" pos:column="71">*</type:modifier><name pos:line="4058" pos:column="72">get_ProjectItem</name> )<parameter_list pos:line="4058" pos:column="89">( 
            <param><decl><type><name pos:line="4059" pos:column="13">CodeClass2</name> <type:modifier pos:line="4059" pos:column="24">*</type:modifier></type> <name pos:line="4059" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4060" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4060" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4060" pos:column="54">ProjectItem</name> <type:modifier pos:line="4060" pos:column="66">*</type:modifier><type:modifier pos:line="4060" pos:column="67">*</type:modifier></type><name pos:line="4060" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4062" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="4062" pos:column="43">HRESULT</name> <argument_list pos:line="4062" pos:column="51">( <argument pos:line="4062" pos:column="53">STDMETHODCALLTYPE *get_Kind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4062" pos:column="82">(</op:operator> 
            <name pos:line="4063" pos:column="13">CodeClass2</name> <op:operator pos:line="4063" pos:column="24">*</op:operator> <name pos:line="4063" pos:column="26">This</name><op:operator pos:line="4063" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4064" pos:column="13">/* [retval][out] */</comment> <name pos:line="4064" pos:column="33">__RPC__out</name> enum <name pos:line="4064" pos:column="49">vsCMElement</name> <op:operator pos:line="4064" pos:column="61">*</op:operator><name pos:line="4064" pos:column="62">retval</name><op:operator pos:line="4064" pos:column="68">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4066" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4066" pos:column="43">HRESULT</name></type> ( <name pos:line="4066" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4066" pos:column="71">*</type:modifier><name pos:line="4066" pos:column="72">get_IsCodeType</name> )<parameter_list pos:line="4066" pos:column="88">( 
            <param><decl><type><name pos:line="4067" pos:column="13">CodeClass2</name> <type:modifier pos:line="4067" pos:column="24">*</type:modifier></type> <name pos:line="4067" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4068" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4068" pos:column="33">__RPC__out</name> <name pos:line="4068" pos:column="44">BOOLEAN</name> <type:modifier pos:line="4068" pos:column="52">*</type:modifier></type><name pos:line="4068" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4070" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="4070" pos:column="43">HRESULT</name> <argument_list pos:line="4070" pos:column="51">( <argument pos:line="4070" pos:column="53">STDMETHODCALLTYPE *get_InfoLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4070" pos:column="90">(</op:operator> 
            <name pos:line="4071" pos:column="13">CodeClass2</name> <op:operator pos:line="4071" pos:column="24">*</op:operator> <name pos:line="4071" pos:column="26">This</name><op:operator pos:line="4071" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4072" pos:column="13">/* [retval][out] */</comment> <name pos:line="4072" pos:column="33">__RPC__out</name> enum <name pos:line="4072" pos:column="49">vsCMInfoLocation</name> <op:operator pos:line="4072" pos:column="66">*</op:operator><name pos:line="4072" pos:column="67">retval</name><op:operator pos:line="4072" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4074" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4074" pos:column="43">HRESULT</name></type> ( <name pos:line="4074" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4074" pos:column="71">*</type:modifier><name pos:line="4074" pos:column="72">get_Children</name> )<parameter_list pos:line="4074" pos:column="86">( 
            <param><decl><type><name pos:line="4075" pos:column="13">CodeClass2</name> <type:modifier pos:line="4075" pos:column="24">*</type:modifier></type> <name pos:line="4075" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4076" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4076" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4076" pos:column="54">CodeElements</name> <type:modifier pos:line="4076" pos:column="67">*</type:modifier><type:modifier pos:line="4076" pos:column="68">*</type:modifier></type><name pos:line="4076" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4078" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4078" pos:column="43">HRESULT</name></type> ( <name pos:line="4078" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4078" pos:column="71">*</type:modifier><name pos:line="4078" pos:column="72">get_Language</name> )<parameter_list pos:line="4078" pos:column="86">( 
            <param><decl><type><name pos:line="4079" pos:column="13">CodeClass2</name> <type:modifier pos:line="4079" pos:column="24">*</type:modifier></type> <name pos:line="4079" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4080" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4080" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4080" pos:column="54">BSTR</name> <type:modifier pos:line="4080" pos:column="59">*</type:modifier></type><name pos:line="4080" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4082" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4082" pos:column="43">HRESULT</name></type> ( <name pos:line="4082" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4082" pos:column="71">*</type:modifier><name pos:line="4082" pos:column="72">get_StartPoint</name> )<parameter_list pos:line="4082" pos:column="88">( 
            <param><decl><type><name pos:line="4083" pos:column="13">CodeClass2</name> <type:modifier pos:line="4083" pos:column="24">*</type:modifier></type> <name pos:line="4083" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4084" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4084" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4084" pos:column="54">TextPoint</name> <type:modifier pos:line="4084" pos:column="64">*</type:modifier><type:modifier pos:line="4084" pos:column="65">*</type:modifier></type><name pos:line="4084" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4086" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4086" pos:column="43">HRESULT</name></type> ( <name pos:line="4086" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4086" pos:column="71">*</type:modifier><name pos:line="4086" pos:column="72">get_EndPoint</name> )<parameter_list pos:line="4086" pos:column="86">( 
            <param><decl><type><name pos:line="4087" pos:column="13">CodeClass2</name> <type:modifier pos:line="4087" pos:column="24">*</type:modifier></type> <name pos:line="4087" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4088" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4088" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4088" pos:column="54">TextPoint</name> <type:modifier pos:line="4088" pos:column="64">*</type:modifier><type:modifier pos:line="4088" pos:column="65">*</type:modifier></type><name pos:line="4088" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4090" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4090" pos:column="43">HRESULT</name></type> ( <name pos:line="4090" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4090" pos:column="71">*</type:modifier><name pos:line="4090" pos:column="72">get_ExtenderNames</name> )<parameter_list pos:line="4090" pos:column="91">( 
            <param><decl><type><name pos:line="4091" pos:column="13">CodeClass2</name> <type:modifier pos:line="4091" pos:column="24">*</type:modifier></type> <name pos:line="4091" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4092" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4092" pos:column="33">__RPC__out</name> <name pos:line="4092" pos:column="44">VARIANT</name> <type:modifier pos:line="4092" pos:column="52">*</type:modifier></type><name pos:line="4092" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4094" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4094" pos:column="43">HRESULT</name></type> ( <name pos:line="4094" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4094" pos:column="71">*</type:modifier><name pos:line="4094" pos:column="72">get_Extender</name> )<parameter_list pos:line="4094" pos:column="86">( 
            <param><decl><type><name pos:line="4095" pos:column="13">CodeClass2</name> <type:modifier pos:line="4095" pos:column="24">*</type:modifier></type> <name pos:line="4095" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4096" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4096" pos:column="33">__RPC__in</name> <name pos:line="4096" pos:column="43">BSTR</name></type> <name pos:line="4096" pos:column="48">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="4097" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4097" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4097" pos:column="54">IDispatch</name> <type:modifier pos:line="4097" pos:column="64">*</type:modifier><type:modifier pos:line="4097" pos:column="65">*</type:modifier></type><name pos:line="4097" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4099" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4099" pos:column="43">HRESULT</name></type> ( <name pos:line="4099" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4099" pos:column="71">*</type:modifier><name pos:line="4099" pos:column="72">get_ExtenderCATID</name> )<parameter_list pos:line="4099" pos:column="91">( 
            <param><decl><type><name pos:line="4100" pos:column="13">CodeClass2</name> <type:modifier pos:line="4100" pos:column="24">*</type:modifier></type> <name pos:line="4100" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4101" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4101" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4101" pos:column="54">BSTR</name> <type:modifier pos:line="4101" pos:column="59">*</type:modifier></type><name pos:line="4101" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4103" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="4103" pos:column="34">HRESULT</name> <argument_list pos:line="4103" pos:column="42">( <argument pos:line="4103" pos:column="44">STDMETHODCALLTYPE *GetStartPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4103" pos:column="78">(</op:operator> 
            <name pos:line="4104" pos:column="13">CodeClass2</name> <op:operator pos:line="4104" pos:column="24">*</op:operator> <name pos:line="4104" pos:column="26">This</name><op:operator pos:line="4104" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4105" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="4105" pos:column="42">vsCMPart</name> <name pos:line="4105" pos:column="51">Part</name><op:operator pos:line="4105" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4106" pos:column="13">/* [retval][out] */</comment> <name pos:line="4106" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4106" pos:column="54">TextPoint</name> <op:operator pos:line="4106" pos:column="64">*</op:operator><op:operator pos:line="4106" pos:column="65">*</op:operator><name pos:line="4106" pos:column="66">retval</name><op:operator pos:line="4106" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4108" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="4108" pos:column="34">HRESULT</name> <argument_list pos:line="4108" pos:column="42">( <argument pos:line="4108" pos:column="44">STDMETHODCALLTYPE *GetEndPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4108" pos:column="76">(</op:operator> 
            <name pos:line="4109" pos:column="13">CodeClass2</name> <op:operator pos:line="4109" pos:column="24">*</op:operator> <name pos:line="4109" pos:column="26">This</name><op:operator pos:line="4109" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4110" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="4110" pos:column="42">vsCMPart</name> <name pos:line="4110" pos:column="51">Part</name><op:operator pos:line="4110" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4111" pos:column="13">/* [retval][out] */</comment> <name pos:line="4111" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4111" pos:column="54">TextPoint</name> <op:operator pos:line="4111" pos:column="64">*</op:operator><op:operator pos:line="4111" pos:column="65">*</op:operator><name pos:line="4111" pos:column="66">retval</name><op:operator pos:line="4111" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4113" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4113" pos:column="43">HRESULT</name></type> ( <name pos:line="4113" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4113" pos:column="71">*</type:modifier><name pos:line="4113" pos:column="72">get_Parent</name> )<parameter_list pos:line="4113" pos:column="84">( 
            <param><decl><type><name pos:line="4114" pos:column="13">CodeClass2</name> <type:modifier pos:line="4114" pos:column="24">*</type:modifier></type> <name pos:line="4114" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4115" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4115" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4115" pos:column="54">IDispatch</name> <type:modifier pos:line="4115" pos:column="64">*</type:modifier><type:modifier pos:line="4115" pos:column="65">*</type:modifier></type><name pos:line="4115" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4117" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4117" pos:column="43">HRESULT</name></type> ( <name pos:line="4117" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4117" pos:column="71">*</type:modifier><name pos:line="4117" pos:column="72">get_Namespace</name> )<parameter_list pos:line="4117" pos:column="87">( 
            <param><decl><type><name pos:line="4118" pos:column="13">CodeClass2</name> <type:modifier pos:line="4118" pos:column="24">*</type:modifier></type> <name pos:line="4118" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4119" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4119" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4119" pos:column="54">CodeNamespace</name> <type:modifier pos:line="4119" pos:column="68">*</type:modifier><type:modifier pos:line="4119" pos:column="69">*</type:modifier></type><name pos:line="4119" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4121" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4121" pos:column="43">HRESULT</name></type> ( <name pos:line="4121" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4121" pos:column="71">*</type:modifier><name pos:line="4121" pos:column="72">get_Bases</name> )<parameter_list pos:line="4121" pos:column="83">( 
            <param><decl><type><name pos:line="4122" pos:column="13">CodeClass2</name> <type:modifier pos:line="4122" pos:column="24">*</type:modifier></type> <name pos:line="4122" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4123" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4123" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4123" pos:column="54">CodeElements</name> <type:modifier pos:line="4123" pos:column="67">*</type:modifier><type:modifier pos:line="4123" pos:column="68">*</type:modifier></type><name pos:line="4123" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4125" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4125" pos:column="43">HRESULT</name></type> ( <name pos:line="4125" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4125" pos:column="71">*</type:modifier><name pos:line="4125" pos:column="72">get_Members</name> )<parameter_list pos:line="4125" pos:column="85">( 
            <param><decl><type><name pos:line="4126" pos:column="13">CodeClass2</name> <type:modifier pos:line="4126" pos:column="24">*</type:modifier></type> <name pos:line="4126" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4127" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4127" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4127" pos:column="54">CodeElements</name> <type:modifier pos:line="4127" pos:column="67">*</type:modifier><type:modifier pos:line="4127" pos:column="68">*</type:modifier></type><name pos:line="4127" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4129" pos:column="9">/* [id][propput][funcdescattr] */</comment> <macro><name pos:line="4129" pos:column="43">HRESULT</name> <argument_list pos:line="4129" pos:column="51">( <argument pos:line="4129" pos:column="53">STDMETHODCALLTYPE *put_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4129" pos:column="84">(</op:operator> 
            <name pos:line="4130" pos:column="13">CodeClass2</name> <op:operator pos:line="4130" pos:column="24">*</op:operator> <name pos:line="4130" pos:column="26">This</name><op:operator pos:line="4130" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4131" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="4131" pos:column="38">vsCMAccess</name> <name pos:line="4131" pos:column="49">noname</name><op:operator pos:line="4131" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4132" pos:column="13">/* [retval][out] */</comment> <name pos:line="4132" pos:column="33">__RPC__out</name> <name pos:line="4132" pos:column="44">void</name> <op:operator pos:line="4132" pos:column="49">*</op:operator><name pos:line="4132" pos:column="50">retval</name><op:operator pos:line="4132" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4134" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="4134" pos:column="43">HRESULT</name> <argument_list pos:line="4134" pos:column="51">( <argument pos:line="4134" pos:column="53">STDMETHODCALLTYPE *get_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4134" pos:column="84">(</op:operator> 
            <name pos:line="4135" pos:column="13">CodeClass2</name> <op:operator pos:line="4135" pos:column="24">*</op:operator> <name pos:line="4135" pos:column="26">This</name><op:operator pos:line="4135" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4136" pos:column="13">/* [retval][out] */</comment> <name pos:line="4136" pos:column="33">__RPC__out</name> enum <name pos:line="4136" pos:column="49">vsCMAccess</name> <op:operator pos:line="4136" pos:column="60">*</op:operator><name pos:line="4136" pos:column="61">retval</name><op:operator pos:line="4136" pos:column="67">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4138" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4138" pos:column="43">HRESULT</name></type> ( <name pos:line="4138" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4138" pos:column="71">*</type:modifier><name pos:line="4138" pos:column="72">get_Attributes</name> )<parameter_list pos:line="4138" pos:column="88">( 
            <param><decl><type><name pos:line="4139" pos:column="13">CodeClass2</name> <type:modifier pos:line="4139" pos:column="24">*</type:modifier></type> <name pos:line="4139" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4140" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4140" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4140" pos:column="54">CodeElements</name> <type:modifier pos:line="4140" pos:column="67">*</type:modifier><type:modifier pos:line="4140" pos:column="68">*</type:modifier></type><name pos:line="4140" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4142" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4142" pos:column="43">HRESULT</name></type> ( <name pos:line="4142" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4142" pos:column="71">*</type:modifier><name pos:line="4142" pos:column="72">get_DocComment</name> )<parameter_list pos:line="4142" pos:column="88">( 
            <param><decl><type><name pos:line="4143" pos:column="13">CodeClass2</name> <type:modifier pos:line="4143" pos:column="24">*</type:modifier></type> <name pos:line="4143" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4144" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4144" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4144" pos:column="54">BSTR</name> <type:modifier pos:line="4144" pos:column="59">*</type:modifier></type><name pos:line="4144" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4146" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="4146" pos:column="43">HRESULT</name></type> ( <name pos:line="4146" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4146" pos:column="71">*</type:modifier><name pos:line="4146" pos:column="72">put_DocComment</name> )<parameter_list pos:line="4146" pos:column="88">( 
            <param><decl><type><name pos:line="4147" pos:column="13">CodeClass2</name> <type:modifier pos:line="4147" pos:column="24">*</type:modifier></type> <name pos:line="4147" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4148" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4148" pos:column="33">__RPC__in</name> <name pos:line="4148" pos:column="43">BSTR</name></type> <name pos:line="4148" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="4149" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4149" pos:column="33">__RPC__out</name> <name pos:line="4149" pos:column="44">void</name> <type:modifier pos:line="4149" pos:column="49">*</type:modifier></type><name pos:line="4149" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4151" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4151" pos:column="43">HRESULT</name></type> ( <name pos:line="4151" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4151" pos:column="71">*</type:modifier><name pos:line="4151" pos:column="72">get_Comment</name> )<parameter_list pos:line="4151" pos:column="85">( 
            <param><decl><type><name pos:line="4152" pos:column="13">CodeClass2</name> <type:modifier pos:line="4152" pos:column="24">*</type:modifier></type> <name pos:line="4152" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4153" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4153" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4153" pos:column="54">BSTR</name> <type:modifier pos:line="4153" pos:column="59">*</type:modifier></type><name pos:line="4153" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4155" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="4155" pos:column="43">HRESULT</name></type> ( <name pos:line="4155" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4155" pos:column="71">*</type:modifier><name pos:line="4155" pos:column="72">put_Comment</name> )<parameter_list pos:line="4155" pos:column="85">( 
            <param><decl><type><name pos:line="4156" pos:column="13">CodeClass2</name> <type:modifier pos:line="4156" pos:column="24">*</type:modifier></type> <name pos:line="4156" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4157" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4157" pos:column="33">__RPC__in</name> <name pos:line="4157" pos:column="43">BSTR</name></type> <name pos:line="4157" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="4158" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4158" pos:column="33">__RPC__out</name> <name pos:line="4158" pos:column="44">void</name> <type:modifier pos:line="4158" pos:column="49">*</type:modifier></type><name pos:line="4158" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4160" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="4160" pos:column="34">HRESULT</name></type> ( <name pos:line="4160" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="4160" pos:column="62">*</type:modifier><name pos:line="4160" pos:column="63">AddBase</name> )<parameter_list pos:line="4160" pos:column="72">( 
            <param><decl><type><name pos:line="4161" pos:column="13">CodeClass2</name> <type:modifier pos:line="4161" pos:column="24">*</type:modifier></type> <name pos:line="4161" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4162" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4162" pos:column="33">VARIANT</name></type> <name pos:line="4162" pos:column="41">Base</name></decl></param>,
            <comment type="block" pos:line="4163" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="4163" pos:column="43">VARIANT</name></type> <name pos:line="4163" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="4164" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4164" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4164" pos:column="54">CodeElement</name> <type:modifier pos:line="4164" pos:column="66">*</type:modifier><type:modifier pos:line="4164" pos:column="67">*</type:modifier></type><name pos:line="4164" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4166" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="4166" pos:column="34">HRESULT</name></type> ( <name pos:line="4166" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="4166" pos:column="62">*</type:modifier><name pos:line="4166" pos:column="63">AddAttribute</name> )<parameter_list pos:line="4166" pos:column="77">( 
            <param><decl><type><name pos:line="4167" pos:column="13">CodeClass2</name> <type:modifier pos:line="4167" pos:column="24">*</type:modifier></type> <name pos:line="4167" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4168" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4168" pos:column="33">__RPC__in</name> <name pos:line="4168" pos:column="43">BSTR</name></type> <name pos:line="4168" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="4169" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4169" pos:column="33">__RPC__in</name> <name pos:line="4169" pos:column="43">BSTR</name></type> <name pos:line="4169" pos:column="48">Value</name></decl></param>,
            <comment type="block" pos:line="4170" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="4170" pos:column="43">VARIANT</name></type> <name pos:line="4170" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="4171" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4171" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4171" pos:column="54">CodeAttribute</name> <type:modifier pos:line="4171" pos:column="68">*</type:modifier><type:modifier pos:line="4171" pos:column="69">*</type:modifier></type><name pos:line="4171" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4173" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="4173" pos:column="34">HRESULT</name></type> ( <name pos:line="4173" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="4173" pos:column="62">*</type:modifier><name pos:line="4173" pos:column="63">RemoveBase</name> )<parameter_list pos:line="4173" pos:column="75">( 
            <param><decl><type><name pos:line="4174" pos:column="13">CodeClass2</name> <type:modifier pos:line="4174" pos:column="24">*</type:modifier></type> <name pos:line="4174" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4175" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4175" pos:column="33">VARIANT</name></type> <name pos:line="4175" pos:column="41">Element</name></decl></param>,
            <comment type="block" pos:line="4176" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4176" pos:column="33">__RPC__out</name> <name pos:line="4176" pos:column="44">void</name> <type:modifier pos:line="4176" pos:column="49">*</type:modifier></type><name pos:line="4176" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4178" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="4178" pos:column="34">HRESULT</name></type> ( <name pos:line="4178" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="4178" pos:column="62">*</type:modifier><name pos:line="4178" pos:column="63">RemoveMember</name> )<parameter_list pos:line="4178" pos:column="77">( 
            <param><decl><type><name pos:line="4179" pos:column="13">CodeClass2</name> <type:modifier pos:line="4179" pos:column="24">*</type:modifier></type> <name pos:line="4179" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4180" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4180" pos:column="33">VARIANT</name></type> <name pos:line="4180" pos:column="41">Element</name></decl></param>,
            <comment type="block" pos:line="4181" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4181" pos:column="33">__RPC__out</name> <name pos:line="4181" pos:column="44">void</name> <type:modifier pos:line="4181" pos:column="49">*</type:modifier></type><name pos:line="4181" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4183" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4183" pos:column="43">HRESULT</name></type> ( <name pos:line="4183" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4183" pos:column="71">*</type:modifier><name pos:line="4183" pos:column="72">get_IsDerivedFrom</name> )<parameter_list pos:line="4183" pos:column="91">( 
            <param><decl><type><name pos:line="4184" pos:column="13">CodeClass2</name> <type:modifier pos:line="4184" pos:column="24">*</type:modifier></type> <name pos:line="4184" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4185" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4185" pos:column="33">__RPC__in</name> <name pos:line="4185" pos:column="43">BSTR</name></type> <name pos:line="4185" pos:column="48">FullName</name></decl></param>,
            <comment type="block" pos:line="4186" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4186" pos:column="33">__RPC__out</name> <name pos:line="4186" pos:column="44">BOOLEAN</name> <type:modifier pos:line="4186" pos:column="52">*</type:modifier></type><name pos:line="4186" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4188" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4188" pos:column="43">HRESULT</name></type> ( <name pos:line="4188" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4188" pos:column="71">*</type:modifier><name pos:line="4188" pos:column="72">get_DerivedTypes</name> )<parameter_list pos:line="4188" pos:column="90">( 
            <param><decl><type><name pos:line="4189" pos:column="13">CodeClass2</name> <type:modifier pos:line="4189" pos:column="24">*</type:modifier></type> <name pos:line="4189" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4190" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4190" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4190" pos:column="54">CodeElements</name> <type:modifier pos:line="4190" pos:column="67">*</type:modifier><type:modifier pos:line="4190" pos:column="68">*</type:modifier></type><name pos:line="4190" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4192" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4192" pos:column="43">HRESULT</name></type> ( <name pos:line="4192" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4192" pos:column="71">*</type:modifier><name pos:line="4192" pos:column="72">get_ImplementedInterfaces</name> )<parameter_list pos:line="4192" pos:column="99">( 
            <param><decl><type><name pos:line="4193" pos:column="13">CodeClass2</name> <type:modifier pos:line="4193" pos:column="24">*</type:modifier></type> <name pos:line="4193" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4194" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4194" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4194" pos:column="54">CodeElements</name> <type:modifier pos:line="4194" pos:column="67">*</type:modifier><type:modifier pos:line="4194" pos:column="68">*</type:modifier></type><name pos:line="4194" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4196" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4196" pos:column="43">HRESULT</name></type> ( <name pos:line="4196" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4196" pos:column="71">*</type:modifier><name pos:line="4196" pos:column="72">get_IsAbstract</name> )<parameter_list pos:line="4196" pos:column="88">( 
            <param><decl><type><name pos:line="4197" pos:column="13">CodeClass2</name> <type:modifier pos:line="4197" pos:column="24">*</type:modifier></type> <name pos:line="4197" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4198" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4198" pos:column="33">__RPC__out</name> <name pos:line="4198" pos:column="44">BOOLEAN</name> <type:modifier pos:line="4198" pos:column="52">*</type:modifier></type><name pos:line="4198" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4200" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="4200" pos:column="43">HRESULT</name></type> ( <name pos:line="4200" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4200" pos:column="71">*</type:modifier><name pos:line="4200" pos:column="72">put_IsAbstract</name> )<parameter_list pos:line="4200" pos:column="88">( 
            <param><decl><type><name pos:line="4201" pos:column="13">CodeClass2</name> <type:modifier pos:line="4201" pos:column="24">*</type:modifier></type> <name pos:line="4201" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4202" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4202" pos:column="33">BOOLEAN</name></type> <name pos:line="4202" pos:column="41">noname</name></decl></param>,
            <comment type="block" pos:line="4203" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4203" pos:column="33">__RPC__out</name> <name pos:line="4203" pos:column="44">void</name> <type:modifier pos:line="4203" pos:column="49">*</type:modifier></type><name pos:line="4203" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4205" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="4205" pos:column="34">HRESULT</name></type> ( <name pos:line="4205" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="4205" pos:column="62">*</type:modifier><name pos:line="4205" pos:column="63">AddImplementedInterface</name> )<parameter_list pos:line="4205" pos:column="88">( 
            <param><decl><type><name pos:line="4206" pos:column="13">CodeClass2</name> <type:modifier pos:line="4206" pos:column="24">*</type:modifier></type> <name pos:line="4206" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4207" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4207" pos:column="33">VARIANT</name></type> <name pos:line="4207" pos:column="41">Base</name></decl></param>,
            <comment type="block" pos:line="4208" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="4208" pos:column="43">VARIANT</name></type> <name pos:line="4208" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="4209" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4209" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4209" pos:column="54">CodeInterface</name> <type:modifier pos:line="4209" pos:column="68">*</type:modifier><type:modifier pos:line="4209" pos:column="69">*</type:modifier></type><name pos:line="4209" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4211" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="4211" pos:column="34">HRESULT</name> <argument_list pos:line="4211" pos:column="42">( <argument pos:line="4211" pos:column="44">STDMETHODCALLTYPE *AddFunction</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4211" pos:column="76">(</op:operator> 
            <name pos:line="4212" pos:column="13">CodeClass2</name> <op:operator pos:line="4212" pos:column="24">*</op:operator> <name pos:line="4212" pos:column="26">This</name><op:operator pos:line="4212" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4213" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4213" pos:column="33">__RPC__in</name> <name pos:line="4213" pos:column="43">BSTR</name> <name pos:line="4213" pos:column="48">Name</name><op:operator pos:line="4213" pos:column="52">,</op:operator>
            <comment type="block" pos:line="4214" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="4214" pos:column="38">vsCMFunction</name> <name pos:line="4214" pos:column="51">Kind</name><op:operator pos:line="4214" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4215" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4215" pos:column="33">VARIANT</name> <name pos:line="4215" pos:column="41">Type</name><op:operator pos:line="4215" pos:column="45">,</op:operator>
            <comment type="block" pos:line="4216" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4216" pos:column="33">VARIANT</name> <name pos:line="4216" pos:column="41">Position</name><op:operator pos:line="4216" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4217" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="4217" pos:column="38">vsCMAccess</name> <name pos:line="4217" pos:column="49">Access</name><op:operator pos:line="4217" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4218" pos:column="13">/* [optional][idldescattr] */</comment> <name pos:line="4218" pos:column="43">VARIANT</name> <name pos:line="4218" pos:column="51">Location</name><op:operator pos:line="4218" pos:column="59">,</op:operator>
            <comment type="block" pos:line="4219" pos:column="13">/* [retval][out] */</comment> <name pos:line="4219" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4219" pos:column="54">CodeFunction</name> <op:operator pos:line="4219" pos:column="67">*</op:operator><op:operator pos:line="4219" pos:column="68">*</op:operator><name pos:line="4219" pos:column="69">retval</name><op:operator pos:line="4219" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4221" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="4221" pos:column="34">HRESULT</name> <argument_list pos:line="4221" pos:column="42">( <argument pos:line="4221" pos:column="44">STDMETHODCALLTYPE *AddVariable</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4221" pos:column="76">(</op:operator> 
            <name pos:line="4222" pos:column="13">CodeClass2</name> <op:operator pos:line="4222" pos:column="24">*</op:operator> <name pos:line="4222" pos:column="26">This</name><op:operator pos:line="4222" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4223" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4223" pos:column="33">__RPC__in</name> <name pos:line="4223" pos:column="43">BSTR</name> <name pos:line="4223" pos:column="48">Name</name><op:operator pos:line="4223" pos:column="52">,</op:operator>
            <comment type="block" pos:line="4224" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4224" pos:column="33">VARIANT</name> <name pos:line="4224" pos:column="41">Type</name><op:operator pos:line="4224" pos:column="45">,</op:operator>
            <comment type="block" pos:line="4225" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4225" pos:column="33">VARIANT</name> <name pos:line="4225" pos:column="41">Position</name><op:operator pos:line="4225" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4226" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="4226" pos:column="38">vsCMAccess</name> <name pos:line="4226" pos:column="49">Access</name><op:operator pos:line="4226" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4227" pos:column="13">/* [optional][idldescattr] */</comment> <name pos:line="4227" pos:column="43">VARIANT</name> <name pos:line="4227" pos:column="51">Location</name><op:operator pos:line="4227" pos:column="59">,</op:operator>
            <comment type="block" pos:line="4228" pos:column="13">/* [retval][out] */</comment> <name pos:line="4228" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4228" pos:column="54">CodeVariable</name> <op:operator pos:line="4228" pos:column="67">*</op:operator><op:operator pos:line="4228" pos:column="68">*</op:operator><name pos:line="4228" pos:column="69">retval</name><op:operator pos:line="4228" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4230" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="4230" pos:column="34">HRESULT</name> <argument_list pos:line="4230" pos:column="42">( <argument pos:line="4230" pos:column="44">STDMETHODCALLTYPE *AddProperty</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4230" pos:column="76">(</op:operator> 
            <name pos:line="4231" pos:column="13">CodeClass2</name> <op:operator pos:line="4231" pos:column="24">*</op:operator> <name pos:line="4231" pos:column="26">This</name><op:operator pos:line="4231" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4232" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4232" pos:column="33">__RPC__in</name> <name pos:line="4232" pos:column="43">BSTR</name> <name pos:line="4232" pos:column="48">GetterName</name><op:operator pos:line="4232" pos:column="58">,</op:operator>
            <comment type="block" pos:line="4233" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4233" pos:column="33">__RPC__in</name> <name pos:line="4233" pos:column="43">BSTR</name> <name pos:line="4233" pos:column="48">PutterName</name><op:operator pos:line="4233" pos:column="58">,</op:operator>
            <comment type="block" pos:line="4234" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4234" pos:column="33">VARIANT</name> <name pos:line="4234" pos:column="41">Type</name><op:operator pos:line="4234" pos:column="45">,</op:operator>
            <comment type="block" pos:line="4235" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4235" pos:column="33">VARIANT</name> <name pos:line="4235" pos:column="41">Position</name><op:operator pos:line="4235" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4236" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="4236" pos:column="38">vsCMAccess</name> <name pos:line="4236" pos:column="49">Access</name><op:operator pos:line="4236" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4237" pos:column="13">/* [optional][idldescattr] */</comment> <name pos:line="4237" pos:column="43">VARIANT</name> <name pos:line="4237" pos:column="51">Location</name><op:operator pos:line="4237" pos:column="59">,</op:operator>
            <comment type="block" pos:line="4238" pos:column="13">/* [retval][out] */</comment> <name pos:line="4238" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4238" pos:column="54">CodeProperty</name> <op:operator pos:line="4238" pos:column="67">*</op:operator><op:operator pos:line="4238" pos:column="68">*</op:operator><name pos:line="4238" pos:column="69">retval</name><op:operator pos:line="4238" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4240" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="4240" pos:column="34">HRESULT</name> <argument_list pos:line="4240" pos:column="42">( <argument pos:line="4240" pos:column="44">STDMETHODCALLTYPE *AddClass</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4240" pos:column="73">(</op:operator> 
            <name pos:line="4241" pos:column="13">CodeClass2</name> <op:operator pos:line="4241" pos:column="24">*</op:operator> <name pos:line="4241" pos:column="26">This</name><op:operator pos:line="4241" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4242" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4242" pos:column="33">__RPC__in</name> <name pos:line="4242" pos:column="43">BSTR</name> <name pos:line="4242" pos:column="48">Name</name><op:operator pos:line="4242" pos:column="52">,</op:operator>
            <comment type="block" pos:line="4243" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4243" pos:column="33">VARIANT</name> <name pos:line="4243" pos:column="41">Position</name><op:operator pos:line="4243" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4244" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4244" pos:column="33">VARIANT</name> <name pos:line="4244" pos:column="41">Bases</name><op:operator pos:line="4244" pos:column="46">,</op:operator>
            <comment type="block" pos:line="4245" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4245" pos:column="33">VARIANT</name> <name pos:line="4245" pos:column="41">ImplementedInterfaces</name><op:operator pos:line="4245" pos:column="62">,</op:operator>
            <comment type="block" pos:line="4246" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="4246" pos:column="38">vsCMAccess</name> <name pos:line="4246" pos:column="49">Access</name><op:operator pos:line="4246" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4247" pos:column="13">/* [retval][out] */</comment> <name pos:line="4247" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4247" pos:column="54">CodeClass</name> <op:operator pos:line="4247" pos:column="64">*</op:operator><op:operator pos:line="4247" pos:column="65">*</op:operator><name pos:line="4247" pos:column="66">retval</name><op:operator pos:line="4247" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4249" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="4249" pos:column="34">HRESULT</name> <argument_list pos:line="4249" pos:column="42">( <argument pos:line="4249" pos:column="44">STDMETHODCALLTYPE *AddStruct</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4249" pos:column="74">(</op:operator> 
            <name pos:line="4250" pos:column="13">CodeClass2</name> <op:operator pos:line="4250" pos:column="24">*</op:operator> <name pos:line="4250" pos:column="26">This</name><op:operator pos:line="4250" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4251" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4251" pos:column="33">__RPC__in</name> <name pos:line="4251" pos:column="43">BSTR</name> <name pos:line="4251" pos:column="48">Name</name><op:operator pos:line="4251" pos:column="52">,</op:operator>
            <comment type="block" pos:line="4252" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4252" pos:column="33">VARIANT</name> <name pos:line="4252" pos:column="41">Position</name><op:operator pos:line="4252" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4253" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4253" pos:column="33">VARIANT</name> <name pos:line="4253" pos:column="41">Bases</name><op:operator pos:line="4253" pos:column="46">,</op:operator>
            <comment type="block" pos:line="4254" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4254" pos:column="33">VARIANT</name> <name pos:line="4254" pos:column="41">ImplementedInterfaces</name><op:operator pos:line="4254" pos:column="62">,</op:operator>
            <comment type="block" pos:line="4255" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="4255" pos:column="38">vsCMAccess</name> <name pos:line="4255" pos:column="49">Access</name><op:operator pos:line="4255" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4256" pos:column="13">/* [retval][out] */</comment> <name pos:line="4256" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4256" pos:column="54">CodeStruct</name> <op:operator pos:line="4256" pos:column="65">*</op:operator><op:operator pos:line="4256" pos:column="66">*</op:operator><name pos:line="4256" pos:column="67">retval</name><op:operator pos:line="4256" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4258" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="4258" pos:column="34">HRESULT</name> <argument_list pos:line="4258" pos:column="42">( <argument pos:line="4258" pos:column="44">STDMETHODCALLTYPE *AddEnum</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4258" pos:column="72">(</op:operator> 
            <name pos:line="4259" pos:column="13">CodeClass2</name> <op:operator pos:line="4259" pos:column="24">*</op:operator> <name pos:line="4259" pos:column="26">This</name><op:operator pos:line="4259" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4260" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4260" pos:column="33">__RPC__in</name> <name pos:line="4260" pos:column="43">BSTR</name> <name pos:line="4260" pos:column="48">Name</name><op:operator pos:line="4260" pos:column="52">,</op:operator>
            <comment type="block" pos:line="4261" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4261" pos:column="33">VARIANT</name> <name pos:line="4261" pos:column="41">Position</name><op:operator pos:line="4261" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4262" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4262" pos:column="33">VARIANT</name> <name pos:line="4262" pos:column="41">Bases</name><op:operator pos:line="4262" pos:column="46">,</op:operator>
            <comment type="block" pos:line="4263" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="4263" pos:column="38">vsCMAccess</name> <name pos:line="4263" pos:column="49">Access</name><op:operator pos:line="4263" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4264" pos:column="13">/* [retval][out] */</comment> <name pos:line="4264" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4264" pos:column="54">CodeEnum</name> <op:operator pos:line="4264" pos:column="63">*</op:operator><op:operator pos:line="4264" pos:column="64">*</op:operator><name pos:line="4264" pos:column="65">retval</name><op:operator pos:line="4264" pos:column="71">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4266" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="4266" pos:column="34">HRESULT</name> <argument_list pos:line="4266" pos:column="42">( <argument pos:line="4266" pos:column="44">STDMETHODCALLTYPE *AddDelegate</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4266" pos:column="76">(</op:operator> 
            <name pos:line="4267" pos:column="13">CodeClass2</name> <op:operator pos:line="4267" pos:column="24">*</op:operator> <name pos:line="4267" pos:column="26">This</name><op:operator pos:line="4267" pos:column="30">,</op:operator>
            <comment type="block" pos:line="4268" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4268" pos:column="33">__RPC__in</name> <name pos:line="4268" pos:column="43">BSTR</name> <name pos:line="4268" pos:column="48">Name</name><op:operator pos:line="4268" pos:column="52">,</op:operator>
            <comment type="block" pos:line="4269" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4269" pos:column="33">VARIANT</name> <name pos:line="4269" pos:column="41">Type</name><op:operator pos:line="4269" pos:column="45">,</op:operator>
            <comment type="block" pos:line="4270" pos:column="13">/* [idldescattr] */</comment> <name pos:line="4270" pos:column="33">VARIANT</name> <name pos:line="4270" pos:column="41">Position</name><op:operator pos:line="4270" pos:column="49">,</op:operator>
            <comment type="block" pos:line="4271" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="4271" pos:column="38">vsCMAccess</name> <name pos:line="4271" pos:column="49">Access</name><op:operator pos:line="4271" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4272" pos:column="13">/* [retval][out] */</comment> <name pos:line="4272" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4272" pos:column="54">CodeDelegate</name> <op:operator pos:line="4272" pos:column="67">*</op:operator><op:operator pos:line="4272" pos:column="68">*</op:operator><name pos:line="4272" pos:column="69">retval</name><op:operator pos:line="4272" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4274" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="4274" pos:column="34">HRESULT</name></type> ( <name pos:line="4274" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="4274" pos:column="62">*</type:modifier><name pos:line="4274" pos:column="63">RemoveInterface</name> )<parameter_list pos:line="4274" pos:column="80">( 
            <param><decl><type><name pos:line="4275" pos:column="13">CodeClass2</name> <type:modifier pos:line="4275" pos:column="24">*</type:modifier></type> <name pos:line="4275" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4276" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4276" pos:column="33">VARIANT</name></type> <name pos:line="4276" pos:column="41">Element</name></decl></param>,
            <comment type="block" pos:line="4277" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4277" pos:column="33">__RPC__out</name> <name pos:line="4277" pos:column="44">void</name> <type:modifier pos:line="4277" pos:column="49">*</type:modifier></type><name pos:line="4277" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4279" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */</comment> <function_decl><type><name pos:line="4279" pos:column="81">HRESULT</name></type> ( <name pos:line="4279" pos:column="91">STDMETHODCALLTYPE</name> <type:modifier pos:line="4279" pos:column="109">*</type:modifier><name pos:line="4279" pos:column="110">get_ClassKind</name> )<parameter_list pos:line="4279" pos:column="125">( 
            <param><decl><type><name pos:line="4280" pos:column="13">CodeClass2</name> <type:modifier pos:line="4280" pos:column="24">*</type:modifier></type> <name pos:line="4280" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4281" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4281" pos:column="33">__RPC__out</name> <name pos:line="4281" pos:column="44">vsCMClassKind</name> <type:modifier pos:line="4281" pos:column="58">*</type:modifier></type><name pos:line="4281" pos:column="59">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4283" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][hidden][propput][id] */</comment> <function_decl><type><name pos:line="4283" pos:column="81">HRESULT</name></type> ( <name pos:line="4283" pos:column="91">STDMETHODCALLTYPE</name> <type:modifier pos:line="4283" pos:column="109">*</type:modifier><name pos:line="4283" pos:column="110">put_ClassKind</name> )<parameter_list pos:line="4283" pos:column="125">( 
            <param><decl><type><name pos:line="4284" pos:column="13">CodeClass2</name> <type:modifier pos:line="4284" pos:column="24">*</type:modifier></type> <name pos:line="4284" pos:column="26">This</name></decl></param>,
            <param><decl><type><name pos:line="4285" pos:column="13">vsCMClassKind</name></type> <name pos:line="4285" pos:column="27">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4287" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][hidden][propget][id] */</comment> <function_decl><type><name pos:line="4287" pos:column="81">HRESULT</name></type> ( <name pos:line="4287" pos:column="91">STDMETHODCALLTYPE</name> <type:modifier pos:line="4287" pos:column="109">*</type:modifier><name pos:line="4287" pos:column="110">get_PartialClasses</name> )<parameter_list pos:line="4287" pos:column="130">( 
            <param><decl><type><name pos:line="4288" pos:column="13">CodeClass2</name> <type:modifier pos:line="4288" pos:column="24">*</type:modifier></type> <name pos:line="4288" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4289" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4289" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="4289" pos:column="54">/* external definition not present */</comment> <name pos:line="4289" pos:column="92">CodeElements</name> <type:modifier pos:line="4289" pos:column="105">*</type:modifier><type:modifier pos:line="4289" pos:column="106">*</type:modifier></type><name pos:line="4289" pos:column="107">Elements</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4291" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="4291" pos:column="73">HRESULT</name></type> ( <name pos:line="4291" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="4291" pos:column="101">*</type:modifier><name pos:line="4291" pos:column="102">get_DataTypeKind</name> )<parameter_list pos:line="4291" pos:column="120">( 
            <param><decl><type><name pos:line="4292" pos:column="13">CodeClass2</name> <type:modifier pos:line="4292" pos:column="24">*</type:modifier></type> <name pos:line="4292" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4293" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4293" pos:column="33">__RPC__out</name> <name pos:line="4293" pos:column="44">vsCMDataTypeKind</name> <type:modifier pos:line="4293" pos:column="61">*</type:modifier></type><name pos:line="4293" pos:column="62">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4295" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="4295" pos:column="73">HRESULT</name></type> ( <name pos:line="4295" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="4295" pos:column="101">*</type:modifier><name pos:line="4295" pos:column="102">put_DataTypeKind</name> )<parameter_list pos:line="4295" pos:column="120">( 
            <param><decl><type><name pos:line="4296" pos:column="13">CodeClass2</name> <type:modifier pos:line="4296" pos:column="24">*</type:modifier></type> <name pos:line="4296" pos:column="26">This</name></decl></param>,
            <param><decl><type><name pos:line="4297" pos:column="13">vsCMDataTypeKind</name></type> <name pos:line="4297" pos:column="30">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4299" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="4299" pos:column="73">HRESULT</name></type> ( <name pos:line="4299" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="4299" pos:column="101">*</type:modifier><name pos:line="4299" pos:column="102">get_Parts</name> )<parameter_list pos:line="4299" pos:column="113">( 
            <param><decl><type><name pos:line="4300" pos:column="13">CodeClass2</name> <type:modifier pos:line="4300" pos:column="24">*</type:modifier></type> <name pos:line="4300" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4301" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4301" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="4301" pos:column="54">/* external definition not present */</comment> <name pos:line="4301" pos:column="92">CodeElements</name> <type:modifier pos:line="4301" pos:column="105">*</type:modifier><type:modifier pos:line="4301" pos:column="106">*</type:modifier></type><name pos:line="4301" pos:column="107">Elements</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4303" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="4303" pos:column="73">HRESULT</name></type> ( <name pos:line="4303" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="4303" pos:column="101">*</type:modifier><name pos:line="4303" pos:column="102">get_InheritanceKind</name> )<parameter_list pos:line="4303" pos:column="123">( 
            <param><decl><type><name pos:line="4304" pos:column="13">CodeClass2</name> <type:modifier pos:line="4304" pos:column="24">*</type:modifier></type> <name pos:line="4304" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4305" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4305" pos:column="33">__RPC__out</name> <name pos:line="4305" pos:column="44">vsCMInheritanceKind</name> <type:modifier pos:line="4305" pos:column="64">*</type:modifier></type><name pos:line="4305" pos:column="65">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4307" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="4307" pos:column="73">HRESULT</name></type> ( <name pos:line="4307" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="4307" pos:column="101">*</type:modifier><name pos:line="4307" pos:column="102">put_InheritanceKind</name> )<parameter_list pos:line="4307" pos:column="123">( 
            <param><decl><type><name pos:line="4308" pos:column="13">CodeClass2</name> <type:modifier pos:line="4308" pos:column="24">*</type:modifier></type> <name pos:line="4308" pos:column="26">This</name></decl></param>,
            <param><decl><type><name pos:line="4309" pos:column="13">vsCMInheritanceKind</name></type> <name pos:line="4309" pos:column="33">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4311" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="4311" pos:column="41">HRESULT</name></type> ( <name pos:line="4311" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="4311" pos:column="69">*</type:modifier><name pos:line="4311" pos:column="70">get_IsGeneric</name> )<parameter_list pos:line="4311" pos:column="85">( 
            <param><decl><type><name pos:line="4312" pos:column="13">CodeClass2</name> <type:modifier pos:line="4312" pos:column="24">*</type:modifier></type> <name pos:line="4312" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4313" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4313" pos:column="33">__RPC__out</name> <name pos:line="4313" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="4313" pos:column="57">*</type:modifier></type><name pos:line="4313" pos:column="58">pIsGeneric</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4315" pos:column="9">/* [helpstring][id] */</comment> <macro><name pos:line="4315" pos:column="32">HRESULT</name> <argument_list pos:line="4315" pos:column="40">( <argument pos:line="4315" pos:column="42">STDMETHODCALLTYPE *AddEvent</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4315" pos:column="71">(</op:operator> 
            <name pos:line="4316" pos:column="13">CodeClass2</name> <op:operator pos:line="4316" pos:column="24">*</op:operator> <name pos:line="4316" pos:column="26">This</name><op:operator pos:line="4316" pos:column="30">,</op:operator>
            <name pos:line="4317" pos:column="13">__RPC__in</name> <name pos:line="4317" pos:column="23">BSTR</name> <name pos:line="4317" pos:column="28">Name</name><op:operator pos:line="4317" pos:column="32">,</op:operator>
            <name pos:line="4318" pos:column="13">__RPC__in</name> <name pos:line="4318" pos:column="23">BSTR</name> <name pos:line="4318" pos:column="28">FullDelegateName</name><op:operator pos:line="4318" pos:column="44">,</op:operator>
            <comment type="block" pos:line="4319" pos:column="13">/* [defaultvalue][in] */</comment> <name pos:line="4319" pos:column="38">VARIANT_BOOL</name> <name pos:line="4319" pos:column="51">CreatePropertyStyleEvent</name><op:operator pos:line="4319" pos:column="75">,</op:operator>
            <comment type="block" pos:line="4320" pos:column="13">/* [optional] */</comment> <name pos:line="4320" pos:column="30">VARIANT</name> <name pos:line="4320" pos:column="38">Location</name><op:operator pos:line="4320" pos:column="46">,</op:operator>
            <comment type="block" pos:line="4321" pos:column="13">/* [defaultvalue] */</comment> enum <comment type="block" pos:line="4321" pos:column="39">/* external definition not present */</comment> <name pos:line="4321" pos:column="77">vsCMAccess</name> <name pos:line="4321" pos:column="88">Access</name><op:operator pos:line="4321" pos:column="94">,</op:operator>
            <comment type="block" pos:line="4322" pos:column="13">/* [retval][out] */</comment> <name pos:line="4322" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4322" pos:column="54">CodeEvent</name> <op:operator pos:line="4322" pos:column="64">*</op:operator><op:operator pos:line="4322" pos:column="65">*</op:operator><name pos:line="4322" pos:column="66">ppEvent</name><op:operator pos:line="4322" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4324" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="4324" pos:column="73">HRESULT</name></type> ( <name pos:line="4324" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="4324" pos:column="101">*</type:modifier><name pos:line="4324" pos:column="102">get_IsShared</name> )<parameter_list pos:line="4324" pos:column="116">( 
            <param><decl><type><name pos:line="4325" pos:column="13">CodeClass2</name> <type:modifier pos:line="4325" pos:column="24">*</type:modifier></type> <name pos:line="4325" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="4326" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4326" pos:column="33">__RPC__out</name> <name pos:line="4326" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="4326" pos:column="57">*</type:modifier></type><name pos:line="4326" pos:column="58">pIsShared</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4328" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="4328" pos:column="73">HRESULT</name></type> ( <name pos:line="4328" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="4328" pos:column="101">*</type:modifier><name pos:line="4328" pos:column="102">put_IsShared</name> )<parameter_list pos:line="4328" pos:column="116">( 
            <param><decl><type><name pos:line="4329" pos:column="13">CodeClass2</name> <type:modifier pos:line="4329" pos:column="24">*</type:modifier></type> <name pos:line="4329" pos:column="26">This</name></decl></param>,
            <param><decl><type><name pos:line="4330" pos:column="13">VARIANT_BOOL</name></type> <name pos:line="4330" pos:column="26">Shared</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4332" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4333" pos:column="7">CodeClass2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4335" pos:column="5">interface</name></type> <name pos:line="4335" pos:column="15">CodeClass2</name>
    <argument_list pos:line="4336" pos:column="5">{
        <argument><expr><name pos:line="4337" pos:column="9">CONST_VTBL</name> struct <name pos:line="4337" pos:column="27">CodeClass2Vtbl</name> <op:operator pos:line="4337" pos:column="42">*</op:operator><name pos:line="4337" pos:column="43">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4342" pos:column="1">#<cpp:directive pos:line="4342" pos:column="2">ifdef</cpp:directive> <name pos:line="4342" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4345" pos:column="1">#<cpp:directive pos:line="4345" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4345" pos:column="9">CodeClass2_QueryInterface</name><parameter_list pos:line="4345" pos:column="34">(<param><type><name pos:line="4345" pos:column="35">This</name></type></param>,<param><type><name pos:line="4345" pos:column="40">riid</name></type></param>,<param><type><name pos:line="4345" pos:column="45">ppvObj</name></type></param>,<param><type><name pos:line="4345" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4346" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4348" pos:column="1">#<cpp:directive pos:line="4348" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4348" pos:column="9">CodeClass2_AddRef</name><parameter_list pos:line="4348" pos:column="26">(<param><type><name pos:line="4348" pos:column="27">This</name></type></param>,<param><type><name pos:line="4348" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4349" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4351" pos:column="1">#<cpp:directive pos:line="4351" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4351" pos:column="9">CodeClass2_Release</name><parameter_list pos:line="4351" pos:column="27">(<param><type><name pos:line="4351" pos:column="28">This</name></type></param>,<param><type><name pos:line="4351" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4352" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4354" pos:column="1">#<cpp:directive pos:line="4354" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4354" pos:column="9">CodeClass2_GetTypeInfoCount</name><parameter_list pos:line="4354" pos:column="36">(<param><type><name pos:line="4354" pos:column="37">This</name></type></param>,<param><type><name pos:line="4354" pos:column="42">pctinfo</name></type></param>,<param><type><name pos:line="4354" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4355" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4357" pos:column="1">#<cpp:directive pos:line="4357" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4357" pos:column="9">CodeClass2_GetTypeInfo</name><parameter_list pos:line="4357" pos:column="31">(<param><type><name pos:line="4357" pos:column="32">This</name></type></param>,<param><type><name pos:line="4357" pos:column="37">itinfo</name></type></param>,<param><type><name pos:line="4357" pos:column="44">lcid</name></type></param>,<param><type><name pos:line="4357" pos:column="49">pptinfo</name></type></param>,<param><type><name pos:line="4357" pos:column="57">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4358" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4360" pos:column="1">#<cpp:directive pos:line="4360" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4360" pos:column="9">CodeClass2_GetIDsOfNames</name><parameter_list pos:line="4360" pos:column="33">(<param><type><name pos:line="4360" pos:column="34">This</name></type></param>,<param><type><name pos:line="4360" pos:column="39">riid</name></type></param>,<param><type><name pos:line="4360" pos:column="44">rgszNames</name></type></param>,<param><type><name pos:line="4360" pos:column="54">cNames</name></type></param>,<param><type><name pos:line="4360" pos:column="61">lcid</name></type></param>,<param><type><name pos:line="4360" pos:column="66">rgdispid</name></type></param>,<param><type><name pos:line="4360" pos:column="75">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4361" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4363" pos:column="1">#<cpp:directive pos:line="4363" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4363" pos:column="9">CodeClass2_Invoke</name><parameter_list pos:line="4363" pos:column="26">(<param><type><name pos:line="4363" pos:column="27">This</name></type></param>,<param><type><name pos:line="4363" pos:column="32">dispidMember</name></type></param>,<param><type><name pos:line="4363" pos:column="45">riid</name></type></param>,<param><type><name pos:line="4363" pos:column="50">lcid</name></type></param>,<param><type><name pos:line="4363" pos:column="55">wFlags</name></type></param>,<param><type><name pos:line="4363" pos:column="62">pdispparams</name></type></param>,<param><type><name pos:line="4363" pos:column="74">pvarResult</name></type></param>,<param><type><name pos:line="4363" pos:column="85">pexcepinfo</name></type></param>,<param><type><name pos:line="4363" pos:column="96">puArgErr</name></type></param>,<param><type><name pos:line="4363" pos:column="105">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4364" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4366" pos:column="1">#<cpp:directive pos:line="4366" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4366" pos:column="9">CodeClass2_get_DTE</name><parameter_list pos:line="4366" pos:column="27">(<param><type><name pos:line="4366" pos:column="28">This</name></type></param>,<param><type><name pos:line="4366" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4367" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4369" pos:column="1">#<cpp:directive pos:line="4369" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4369" pos:column="9">CodeClass2_get_Collection</name><parameter_list pos:line="4369" pos:column="34">(<param><type><name pos:line="4369" pos:column="35">This</name></type></param>,<param><type><name pos:line="4369" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4370" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4372" pos:column="1">#<cpp:directive pos:line="4372" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4372" pos:column="9">CodeClass2_get_Name</name><parameter_list pos:line="4372" pos:column="28">(<param><type><name pos:line="4372" pos:column="29">This</name></type></param>,<param><type><name pos:line="4372" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4373" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4375" pos:column="1">#<cpp:directive pos:line="4375" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4375" pos:column="9">CodeClass2_put_Name</name><parameter_list pos:line="4375" pos:column="28">(<param><type><name pos:line="4375" pos:column="29">This</name></type></param>,<param><type><name pos:line="4375" pos:column="34">noname</name></type></param>,<param><type><name pos:line="4375" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4376" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4378" pos:column="1">#<cpp:directive pos:line="4378" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4378" pos:column="9">CodeClass2_get_FullName</name><parameter_list pos:line="4378" pos:column="32">(<param><type><name pos:line="4378" pos:column="33">This</name></type></param>,<param><type><name pos:line="4378" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4379" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4381" pos:column="1">#<cpp:directive pos:line="4381" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4381" pos:column="9">CodeClass2_get_ProjectItem</name><parameter_list pos:line="4381" pos:column="35">(<param><type><name pos:line="4381" pos:column="36">This</name></type></param>,<param><type><name pos:line="4381" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4382" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItem(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4384" pos:column="1">#<cpp:directive pos:line="4384" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4384" pos:column="9">CodeClass2_get_Kind</name><parameter_list pos:line="4384" pos:column="28">(<param><type><name pos:line="4384" pos:column="29">This</name></type></param>,<param><type><name pos:line="4384" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4385" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Kind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4387" pos:column="1">#<cpp:directive pos:line="4387" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4387" pos:column="9">CodeClass2_get_IsCodeType</name><parameter_list pos:line="4387" pos:column="34">(<param><type><name pos:line="4387" pos:column="35">This</name></type></param>,<param><type><name pos:line="4387" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4388" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsCodeType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4390" pos:column="1">#<cpp:directive pos:line="4390" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4390" pos:column="9">CodeClass2_get_InfoLocation</name><parameter_list pos:line="4390" pos:column="36">(<param><type><name pos:line="4390" pos:column="37">This</name></type></param>,<param><type><name pos:line="4390" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4391" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InfoLocation(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4393" pos:column="1">#<cpp:directive pos:line="4393" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4393" pos:column="9">CodeClass2_get_Children</name><parameter_list pos:line="4393" pos:column="32">(<param><type><name pos:line="4393" pos:column="33">This</name></type></param>,<param><type><name pos:line="4393" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4394" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Children(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4396" pos:column="1">#<cpp:directive pos:line="4396" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4396" pos:column="9">CodeClass2_get_Language</name><parameter_list pos:line="4396" pos:column="32">(<param><type><name pos:line="4396" pos:column="33">This</name></type></param>,<param><type><name pos:line="4396" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4397" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4399" pos:column="1">#<cpp:directive pos:line="4399" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4399" pos:column="9">CodeClass2_get_StartPoint</name><parameter_list pos:line="4399" pos:column="34">(<param><type><name pos:line="4399" pos:column="35">This</name></type></param>,<param><type><name pos:line="4399" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4400" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4402" pos:column="1">#<cpp:directive pos:line="4402" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4402" pos:column="9">CodeClass2_get_EndPoint</name><parameter_list pos:line="4402" pos:column="32">(<param><type><name pos:line="4402" pos:column="33">This</name></type></param>,<param><type><name pos:line="4402" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4403" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_EndPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4405" pos:column="1">#<cpp:directive pos:line="4405" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4405" pos:column="9">CodeClass2_get_ExtenderNames</name><parameter_list pos:line="4405" pos:column="37">(<param><type><name pos:line="4405" pos:column="38">This</name></type></param>,<param><type><name pos:line="4405" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4406" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4408" pos:column="1">#<cpp:directive pos:line="4408" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4408" pos:column="9">CodeClass2_get_Extender</name><parameter_list pos:line="4408" pos:column="32">(<param><type><name pos:line="4408" pos:column="33">This</name></type></param>,<param><type><name pos:line="4408" pos:column="38">ExtenderName</name></type></param>,<param><type><name pos:line="4408" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4409" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4411" pos:column="1">#<cpp:directive pos:line="4411" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4411" pos:column="9">CodeClass2_get_ExtenderCATID</name><parameter_list pos:line="4411" pos:column="37">(<param><type><name pos:line="4411" pos:column="38">This</name></type></param>,<param><type><name pos:line="4411" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4412" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4414" pos:column="1">#<cpp:directive pos:line="4414" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4414" pos:column="9">CodeClass2_GetStartPoint</name><parameter_list pos:line="4414" pos:column="33">(<param><type><name pos:line="4414" pos:column="34">This</name></type></param>,<param><type><name pos:line="4414" pos:column="39">Part</name></type></param>,<param><type><name pos:line="4414" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4415" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStartPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4417" pos:column="1">#<cpp:directive pos:line="4417" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4417" pos:column="9">CodeClass2_GetEndPoint</name><parameter_list pos:line="4417" pos:column="31">(<param><type><name pos:line="4417" pos:column="32">This</name></type></param>,<param><type><name pos:line="4417" pos:column="37">Part</name></type></param>,<param><type><name pos:line="4417" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4418" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4420" pos:column="1">#<cpp:directive pos:line="4420" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4420" pos:column="9">CodeClass2_get_Parent</name><parameter_list pos:line="4420" pos:column="30">(<param><type><name pos:line="4420" pos:column="31">This</name></type></param>,<param><type><name pos:line="4420" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4421" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4423" pos:column="1">#<cpp:directive pos:line="4423" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4423" pos:column="9">CodeClass2_get_Namespace</name><parameter_list pos:line="4423" pos:column="33">(<param><type><name pos:line="4423" pos:column="34">This</name></type></param>,<param><type><name pos:line="4423" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4424" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Namespace(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4426" pos:column="1">#<cpp:directive pos:line="4426" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4426" pos:column="9">CodeClass2_get_Bases</name><parameter_list pos:line="4426" pos:column="29">(<param><type><name pos:line="4426" pos:column="30">This</name></type></param>,<param><type><name pos:line="4426" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4427" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Bases(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4429" pos:column="1">#<cpp:directive pos:line="4429" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4429" pos:column="9">CodeClass2_get_Members</name><parameter_list pos:line="4429" pos:column="31">(<param><type><name pos:line="4429" pos:column="32">This</name></type></param>,<param><type><name pos:line="4429" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4430" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Members(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4432" pos:column="1">#<cpp:directive pos:line="4432" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4432" pos:column="9">CodeClass2_put_Access</name><parameter_list pos:line="4432" pos:column="30">(<param><type><name pos:line="4432" pos:column="31">This</name></type></param>,<param><type><name pos:line="4432" pos:column="36">noname</name></type></param>,<param><type><name pos:line="4432" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4433" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Access(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4435" pos:column="1">#<cpp:directive pos:line="4435" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4435" pos:column="9">CodeClass2_get_Access</name><parameter_list pos:line="4435" pos:column="30">(<param><type><name pos:line="4435" pos:column="31">This</name></type></param>,<param><type><name pos:line="4435" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4436" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Access(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4438" pos:column="1">#<cpp:directive pos:line="4438" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4438" pos:column="9">CodeClass2_get_Attributes</name><parameter_list pos:line="4438" pos:column="34">(<param><type><name pos:line="4438" pos:column="35">This</name></type></param>,<param><type><name pos:line="4438" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4439" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Attributes(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4441" pos:column="1">#<cpp:directive pos:line="4441" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4441" pos:column="9">CodeClass2_get_DocComment</name><parameter_list pos:line="4441" pos:column="34">(<param><type><name pos:line="4441" pos:column="35">This</name></type></param>,<param><type><name pos:line="4441" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4442" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DocComment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4444" pos:column="1">#<cpp:directive pos:line="4444" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4444" pos:column="9">CodeClass2_put_DocComment</name><parameter_list pos:line="4444" pos:column="34">(<param><type><name pos:line="4444" pos:column="35">This</name></type></param>,<param><type><name pos:line="4444" pos:column="40">noname</name></type></param>,<param><type><name pos:line="4444" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4445" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DocComment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4447" pos:column="1">#<cpp:directive pos:line="4447" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4447" pos:column="9">CodeClass2_get_Comment</name><parameter_list pos:line="4447" pos:column="31">(<param><type><name pos:line="4447" pos:column="32">This</name></type></param>,<param><type><name pos:line="4447" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4448" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Comment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4450" pos:column="1">#<cpp:directive pos:line="4450" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4450" pos:column="9">CodeClass2_put_Comment</name><parameter_list pos:line="4450" pos:column="31">(<param><type><name pos:line="4450" pos:column="32">This</name></type></param>,<param><type><name pos:line="4450" pos:column="37">noname</name></type></param>,<param><type><name pos:line="4450" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4451" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Comment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4453" pos:column="1">#<cpp:directive pos:line="4453" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4453" pos:column="9">CodeClass2_AddBase</name><parameter_list pos:line="4453" pos:column="27">(<param><type><name pos:line="4453" pos:column="28">This</name></type></param>,<param><type><name pos:line="4453" pos:column="33">Base</name></type></param>,<param><type><name pos:line="4453" pos:column="38">Position</name></type></param>,<param><type><name pos:line="4453" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4454" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddBase(This,Base,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4456" pos:column="1">#<cpp:directive pos:line="4456" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4456" pos:column="9">CodeClass2_AddAttribute</name><parameter_list pos:line="4456" pos:column="32">(<param><type><name pos:line="4456" pos:column="33">This</name></type></param>,<param><type><name pos:line="4456" pos:column="38">Name</name></type></param>,<param><type><name pos:line="4456" pos:column="43">Value</name></type></param>,<param><type><name pos:line="4456" pos:column="49">Position</name></type></param>,<param><type><name pos:line="4456" pos:column="58">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4457" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddAttribute(This,Name,Value,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4459" pos:column="1">#<cpp:directive pos:line="4459" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4459" pos:column="9">CodeClass2_RemoveBase</name><parameter_list pos:line="4459" pos:column="30">(<param><type><name pos:line="4459" pos:column="31">This</name></type></param>,<param><type><name pos:line="4459" pos:column="36">Element</name></type></param>,<param><type><name pos:line="4459" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4460" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveBase(This,Element,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4462" pos:column="1">#<cpp:directive pos:line="4462" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4462" pos:column="9">CodeClass2_RemoveMember</name><parameter_list pos:line="4462" pos:column="32">(<param><type><name pos:line="4462" pos:column="33">This</name></type></param>,<param><type><name pos:line="4462" pos:column="38">Element</name></type></param>,<param><type><name pos:line="4462" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4463" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveMember(This,Element,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4465" pos:column="1">#<cpp:directive pos:line="4465" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4465" pos:column="9">CodeClass2_get_IsDerivedFrom</name><parameter_list pos:line="4465" pos:column="37">(<param><type><name pos:line="4465" pos:column="38">This</name></type></param>,<param><type><name pos:line="4465" pos:column="43">FullName</name></type></param>,<param><type><name pos:line="4465" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4466" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsDerivedFrom(This,FullName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4468" pos:column="1">#<cpp:directive pos:line="4468" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4468" pos:column="9">CodeClass2_get_DerivedTypes</name><parameter_list pos:line="4468" pos:column="36">(<param><type><name pos:line="4468" pos:column="37">This</name></type></param>,<param><type><name pos:line="4468" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4469" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DerivedTypes(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4471" pos:column="1">#<cpp:directive pos:line="4471" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4471" pos:column="9">CodeClass2_get_ImplementedInterfaces</name><parameter_list pos:line="4471" pos:column="45">(<param><type><name pos:line="4471" pos:column="46">This</name></type></param>,<param><type><name pos:line="4471" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4472" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ImplementedInterfaces(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4474" pos:column="1">#<cpp:directive pos:line="4474" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4474" pos:column="9">CodeClass2_get_IsAbstract</name><parameter_list pos:line="4474" pos:column="34">(<param><type><name pos:line="4474" pos:column="35">This</name></type></param>,<param><type><name pos:line="4474" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4475" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsAbstract(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4477" pos:column="1">#<cpp:directive pos:line="4477" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4477" pos:column="9">CodeClass2_put_IsAbstract</name><parameter_list pos:line="4477" pos:column="34">(<param><type><name pos:line="4477" pos:column="35">This</name></type></param>,<param><type><name pos:line="4477" pos:column="40">noname</name></type></param>,<param><type><name pos:line="4477" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4478" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_IsAbstract(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4480" pos:column="1">#<cpp:directive pos:line="4480" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4480" pos:column="9">CodeClass2_AddImplementedInterface</name><parameter_list pos:line="4480" pos:column="43">(<param><type><name pos:line="4480" pos:column="44">This</name></type></param>,<param><type><name pos:line="4480" pos:column="49">Base</name></type></param>,<param><type><name pos:line="4480" pos:column="54">Position</name></type></param>,<param><type><name pos:line="4480" pos:column="63">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4481" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddImplementedInterface(This,Base,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4483" pos:column="1">#<cpp:directive pos:line="4483" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4483" pos:column="9">CodeClass2_AddFunction</name><parameter_list pos:line="4483" pos:column="31">(<param><type><name pos:line="4483" pos:column="32">This</name></type></param>,<param><type><name pos:line="4483" pos:column="37">Name</name></type></param>,<param><type><name pos:line="4483" pos:column="42">Kind</name></type></param>,<param><type><name pos:line="4483" pos:column="47">Type</name></type></param>,<param><type><name pos:line="4483" pos:column="52">Position</name></type></param>,<param><type><name pos:line="4483" pos:column="61">Access</name></type></param>,<param><type><name pos:line="4483" pos:column="68">Location</name></type></param>,<param><type><name pos:line="4483" pos:column="77">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4484" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddFunction(This,Name,Kind,Type,Position,Access,Location,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4486" pos:column="1">#<cpp:directive pos:line="4486" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4486" pos:column="9">CodeClass2_AddVariable</name><parameter_list pos:line="4486" pos:column="31">(<param><type><name pos:line="4486" pos:column="32">This</name></type></param>,<param><type><name pos:line="4486" pos:column="37">Name</name></type></param>,<param><type><name pos:line="4486" pos:column="42">Type</name></type></param>,<param><type><name pos:line="4486" pos:column="47">Position</name></type></param>,<param><type><name pos:line="4486" pos:column="56">Access</name></type></param>,<param><type><name pos:line="4486" pos:column="63">Location</name></type></param>,<param><type><name pos:line="4486" pos:column="72">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4487" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddVariable(This,Name,Type,Position,Access,Location,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4489" pos:column="1">#<cpp:directive pos:line="4489" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4489" pos:column="9">CodeClass2_AddProperty</name><parameter_list pos:line="4489" pos:column="31">(<param><type><name pos:line="4489" pos:column="32">This</name></type></param>,<param><type><name pos:line="4489" pos:column="37">GetterName</name></type></param>,<param><type><name pos:line="4489" pos:column="48">PutterName</name></type></param>,<param><type><name pos:line="4489" pos:column="59">Type</name></type></param>,<param><type><name pos:line="4489" pos:column="64">Position</name></type></param>,<param><type><name pos:line="4489" pos:column="73">Access</name></type></param>,<param><type><name pos:line="4489" pos:column="80">Location</name></type></param>,<param><type><name pos:line="4489" pos:column="89">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4490" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddProperty(This,GetterName,PutterName,Type,Position,Access,Location,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4492" pos:column="1">#<cpp:directive pos:line="4492" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4492" pos:column="9">CodeClass2_AddClass</name><parameter_list pos:line="4492" pos:column="28">(<param><type><name pos:line="4492" pos:column="29">This</name></type></param>,<param><type><name pos:line="4492" pos:column="34">Name</name></type></param>,<param><type><name pos:line="4492" pos:column="39">Position</name></type></param>,<param><type><name pos:line="4492" pos:column="48">Bases</name></type></param>,<param><type><name pos:line="4492" pos:column="54">ImplementedInterfaces</name></type></param>,<param><type><name pos:line="4492" pos:column="76">Access</name></type></param>,<param><type><name pos:line="4492" pos:column="83">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4493" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddClass(This,Name,Position,Bases,ImplementedInterfaces,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4495" pos:column="1">#<cpp:directive pos:line="4495" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4495" pos:column="9">CodeClass2_AddStruct</name><parameter_list pos:line="4495" pos:column="29">(<param><type><name pos:line="4495" pos:column="30">This</name></type></param>,<param><type><name pos:line="4495" pos:column="35">Name</name></type></param>,<param><type><name pos:line="4495" pos:column="40">Position</name></type></param>,<param><type><name pos:line="4495" pos:column="49">Bases</name></type></param>,<param><type><name pos:line="4495" pos:column="55">ImplementedInterfaces</name></type></param>,<param><type><name pos:line="4495" pos:column="77">Access</name></type></param>,<param><type><name pos:line="4495" pos:column="84">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4496" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddStruct(This,Name,Position,Bases,ImplementedInterfaces,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4498" pos:column="1">#<cpp:directive pos:line="4498" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4498" pos:column="9">CodeClass2_AddEnum</name><parameter_list pos:line="4498" pos:column="27">(<param><type><name pos:line="4498" pos:column="28">This</name></type></param>,<param><type><name pos:line="4498" pos:column="33">Name</name></type></param>,<param><type><name pos:line="4498" pos:column="38">Position</name></type></param>,<param><type><name pos:line="4498" pos:column="47">Bases</name></type></param>,<param><type><name pos:line="4498" pos:column="53">Access</name></type></param>,<param><type><name pos:line="4498" pos:column="60">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4499" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddEnum(This,Name,Position,Bases,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4501" pos:column="1">#<cpp:directive pos:line="4501" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4501" pos:column="9">CodeClass2_AddDelegate</name><parameter_list pos:line="4501" pos:column="31">(<param><type><name pos:line="4501" pos:column="32">This</name></type></param>,<param><type><name pos:line="4501" pos:column="37">Name</name></type></param>,<param><type><name pos:line="4501" pos:column="42">Type</name></type></param>,<param><type><name pos:line="4501" pos:column="47">Position</name></type></param>,<param><type><name pos:line="4501" pos:column="56">Access</name></type></param>,<param><type><name pos:line="4501" pos:column="63">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4502" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddDelegate(This,Name,Type,Position,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4504" pos:column="1">#<cpp:directive pos:line="4504" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4504" pos:column="9">CodeClass2_RemoveInterface</name><parameter_list pos:line="4504" pos:column="35">(<param><type><name pos:line="4504" pos:column="36">This</name></type></param>,<param><type><name pos:line="4504" pos:column="41">Element</name></type></param>,<param><type><name pos:line="4504" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4505" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveInterface(This,Element,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="4508" pos:column="1">#<cpp:directive pos:line="4508" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4508" pos:column="9">CodeClass2_get_ClassKind</name><parameter_list pos:line="4508" pos:column="33">(<param><type><name pos:line="4508" pos:column="34">This</name></type></param>,<param><type><name pos:line="4508" pos:column="39">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4509" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ClassKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="4511" pos:column="1">#<cpp:directive pos:line="4511" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4511" pos:column="9">CodeClass2_put_ClassKind</name><parameter_list pos:line="4511" pos:column="33">(<param><type><name pos:line="4511" pos:column="34">This</name></type></param>,<param><type><name pos:line="4511" pos:column="39">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4512" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_ClassKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="4514" pos:column="1">#<cpp:directive pos:line="4514" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4514" pos:column="9">CodeClass2_get_PartialClasses</name><parameter_list pos:line="4514" pos:column="38">(<param><type><name pos:line="4514" pos:column="39">This</name></type></param>,<param><type><name pos:line="4514" pos:column="44">Elements</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4515" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_PartialClasses(This,Elements) )</cpp:value></cpp:define> 

<cpp:define pos:line="4517" pos:column="1">#<cpp:directive pos:line="4517" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4517" pos:column="9">CodeClass2_get_DataTypeKind</name><parameter_list pos:line="4517" pos:column="36">(<param><type><name pos:line="4517" pos:column="37">This</name></type></param>,<param><type><name pos:line="4517" pos:column="42">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4518" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DataTypeKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="4520" pos:column="1">#<cpp:directive pos:line="4520" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4520" pos:column="9">CodeClass2_put_DataTypeKind</name><parameter_list pos:line="4520" pos:column="36">(<param><type><name pos:line="4520" pos:column="37">This</name></type></param>,<param><type><name pos:line="4520" pos:column="42">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4521" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DataTypeKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="4523" pos:column="1">#<cpp:directive pos:line="4523" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4523" pos:column="9">CodeClass2_get_Parts</name><parameter_list pos:line="4523" pos:column="29">(<param><type><name pos:line="4523" pos:column="30">This</name></type></param>,<param><type><name pos:line="4523" pos:column="35">Elements</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4524" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parts(This,Elements) )</cpp:value></cpp:define> 

<cpp:define pos:line="4526" pos:column="1">#<cpp:directive pos:line="4526" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4526" pos:column="9">CodeClass2_get_InheritanceKind</name><parameter_list pos:line="4526" pos:column="39">(<param><type><name pos:line="4526" pos:column="40">This</name></type></param>,<param><type><name pos:line="4526" pos:column="45">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4527" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InheritanceKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="4529" pos:column="1">#<cpp:directive pos:line="4529" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4529" pos:column="9">CodeClass2_put_InheritanceKind</name><parameter_list pos:line="4529" pos:column="39">(<param><type><name pos:line="4529" pos:column="40">This</name></type></param>,<param><type><name pos:line="4529" pos:column="45">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4530" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_InheritanceKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="4532" pos:column="1">#<cpp:directive pos:line="4532" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4532" pos:column="9">CodeClass2_get_IsGeneric</name><parameter_list pos:line="4532" pos:column="33">(<param><type><name pos:line="4532" pos:column="34">This</name></type></param>,<param><type><name pos:line="4532" pos:column="39">pIsGeneric</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4533" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsGeneric(This,pIsGeneric) )</cpp:value></cpp:define> 

<cpp:define pos:line="4535" pos:column="1">#<cpp:directive pos:line="4535" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4535" pos:column="9">CodeClass2_AddEvent</name><parameter_list pos:line="4535" pos:column="28">(<param><type><name pos:line="4535" pos:column="29">This</name></type></param>,<param><type><name pos:line="4535" pos:column="34">Name</name></type></param>,<param><type><name pos:line="4535" pos:column="39">FullDelegateName</name></type></param>,<param><type><name pos:line="4535" pos:column="56">CreatePropertyStyleEvent</name></type></param>,<param><type><name pos:line="4535" pos:column="81">Location</name></type></param>,<param><type><name pos:line="4535" pos:column="90">Access</name></type></param>,<param><type><name pos:line="4535" pos:column="97">ppEvent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4536" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddEvent(This,Name,FullDelegateName,CreatePropertyStyleEvent,Location,Access,ppEvent) )</cpp:value></cpp:define> 

<cpp:define pos:line="4538" pos:column="1">#<cpp:directive pos:line="4538" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4538" pos:column="9">CodeClass2_get_IsShared</name><parameter_list pos:line="4538" pos:column="32">(<param><type><name pos:line="4538" pos:column="33">This</name></type></param>,<param><type><name pos:line="4538" pos:column="38">pIsShared</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4539" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsShared(This,pIsShared) )</cpp:value></cpp:define> 

<cpp:define pos:line="4541" pos:column="1">#<cpp:directive pos:line="4541" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4541" pos:column="9">CodeClass2_put_IsShared</name><parameter_list pos:line="4541" pos:column="32">(<param><type><name pos:line="4541" pos:column="33">This</name></type></param>,<param><type><name pos:line="4541" pos:column="38">Shared</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4542" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_IsShared(This,Shared) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4544" pos:column="1">#<cpp:directive pos:line="4544" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4544" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4547" pos:column="1">#<cpp:directive pos:line="4547" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4547" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4552" pos:column="1">#<cpp:directive pos:line="4552" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4552" pos:column="9">/* __CodeClass2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="4555" pos:column="1">#<cpp:directive pos:line="4555" pos:column="2">ifndef</cpp:directive> <name pos:line="4555" pos:column="9">__CodeParameter2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4556" pos:column="1">#<cpp:directive pos:line="4556" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4556" pos:column="9">__CodeParameter2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4558" pos:column="1">/* interface CodeParameter2 */</comment>
<comment type="block" pos:line="4559" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="4562" pos:column="1">EXTERN_C</name> <specifier pos:line="4562" pos:column="10">const</specifier> <name pos:line="4562" pos:column="16">IID</name></type> <name pos:line="4562" pos:column="20">IID_CodeParameter2</name></decl>;</decl_stmt>

<cpp:if pos:line="4564" pos:column="1">#<cpp:directive pos:line="4564" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4564" pos:column="5">defined</name><argument_list pos:line="4564" pos:column="12">(<argument><expr><name pos:line="4564" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4564" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4564" pos:column="29">!</op:operator><call><name pos:line="4564" pos:column="30">defined</name><argument_list pos:line="4564" pos:column="37">(<argument><expr><name pos:line="4564" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4566" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4566" pos:column="19">(<argument pos:line="4566" pos:column="20">"35CD9E36-7C96-4429-968F-C0C350CB1A47"</argument>)</argument_list></macro>
    <label><name pos:line="4567" pos:column="5">CodeParameter2</name> :</label> <expr_stmt><expr pos:line="4567" pos:column="22">public <name pos:line="4567" pos:column="29">CodeParameter</name>
    <block pos:line="4568" pos:column="5">{
    <expr pos:line="4569" pos:column="5">public<op:operator pos:line="4569" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="4570" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="4570" pos:column="81">HRESULT</name> <name pos:line="4570" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="4570" pos:column="107">get_ParameterKind</name><argument_list pos:line="4570" pos:column="124">( 
            <comment type="block" pos:line="4571" pos:column="13">/* [retval][out] */</comment> <argument pos:line="4571" pos:column="33">__RPC__out vsCMParameterKind *Kind</argument>)</argument_list></macro> <op:operator pos:line="4571" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="4571" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="4573" pos:column="9">virtual <comment type="block" pos:line="4573" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="4573" pos:column="81">HRESULT</name> <name pos:line="4573" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="4573" pos:column="107">put_ParameterKind</name><argument_list pos:line="4573" pos:column="124">( 
            <argument pos:line="4574" pos:column="13">vsCMParameterKind Kind</argument>)</argument_list></macro> <op:operator pos:line="4574" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="4574" pos:column="39">0</lit:literal></expr>;
        
        <expr pos:line="4576" pos:column="9">virtual <comment type="block" pos:line="4576" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="4576" pos:column="81">HRESULT</name> <name pos:line="4576" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="4576" pos:column="107">get_DefaultValue</name><argument_list pos:line="4576" pos:column="123">( 
            <comment type="block" pos:line="4577" pos:column="13">/* [retval][out] */</comment> <argument pos:line="4577" pos:column="33">__RPC__deref_out_opt BSTR *Value</argument>)</argument_list></macro> <op:operator pos:line="4577" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="4577" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="4579" pos:column="9">virtual <comment type="block" pos:line="4579" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="4579" pos:column="81">HRESULT</name> <name pos:line="4579" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="4579" pos:column="107">put_DefaultValue</name><argument_list pos:line="4579" pos:column="123">( 
            <argument pos:line="4580" pos:column="13">__RPC__in BSTR Value</argument>)</argument_list></macro> <op:operator pos:line="4580" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="4580" pos:column="37">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4584" pos:column="1">#<cpp:directive pos:line="4584" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4584" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4586" pos:column="5">typedef <type><struct pos:line="4586" pos:column="13">struct <name pos:line="4586" pos:column="20">CodeParameter2Vtbl</name>
    <block pos:line="4587" pos:column="5">{<public type="default" pos:line="4587" pos:column="6">
        <decl_stmt><decl><type><name pos:line="4588" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="4590" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="4590" pos:column="46">HRESULT</name></type> ( <name pos:line="4590" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="4590" pos:column="74">*</type:modifier><name pos:line="4590" pos:column="75">QueryInterface</name> )<parameter_list pos:line="4590" pos:column="91">( 
            <param><decl><type><name pos:line="4591" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4591" pos:column="28">*</type:modifier></type> <name pos:line="4591" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4592" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="4592" pos:column="47">struct <name pos:line="4592" pos:column="54">GUID</name> <type:modifier pos:line="4592" pos:column="59">*</type:modifier></type><name pos:line="4592" pos:column="60">riid</name></decl><op:operator pos:line="4592" pos:column="64">,</op:operator>
            <comment type="block" pos:line="4593" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="4593" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="4593" pos:column="59">void</name> <type:modifier pos:line="4593" pos:column="64">*</type:modifier><type:modifier pos:line="4593" pos:column="65">*</type:modifier><name pos:line="4593" pos:column="66">ppvObj</name><op:operator pos:line="4593" pos:column="72">,</op:operator>
            <comment type="block" pos:line="4594" pos:column="13">/* [retval][out] */</comment> <name pos:line="4594" pos:column="33">__RPC__out</name> <name pos:line="4594" pos:column="44">void</name> <type:modifier pos:line="4594" pos:column="49">*</type:modifier><name pos:line="4594" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="4596" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="4596" pos:column="46">HRESULT</name></type> ( <name pos:line="4596" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="4596" pos:column="74">*</type:modifier><name pos:line="4596" pos:column="75">AddRef</name> )<parameter_list pos:line="4596" pos:column="83">( 
            <param><decl><type><name pos:line="4597" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4597" pos:column="28">*</type:modifier></type> <name pos:line="4597" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4598" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4598" pos:column="33">__RPC__out</name> <name pos:line="4598" pos:column="44">unsigned</name> <name pos:line="4598" pos:column="53">long</name> <type:modifier pos:line="4598" pos:column="58">*</type:modifier></type><name pos:line="4598" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4600" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="4600" pos:column="46">HRESULT</name></type> ( <name pos:line="4600" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="4600" pos:column="74">*</type:modifier><name pos:line="4600" pos:column="75">Release</name> )<parameter_list pos:line="4600" pos:column="84">( 
            <param><decl><type><name pos:line="4601" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4601" pos:column="28">*</type:modifier></type> <name pos:line="4601" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4602" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4602" pos:column="33">__RPC__out</name> <name pos:line="4602" pos:column="44">unsigned</name> <name pos:line="4602" pos:column="53">long</name> <type:modifier pos:line="4602" pos:column="58">*</type:modifier></type><name pos:line="4602" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4604" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="4604" pos:column="46">HRESULT</name></type> ( <name pos:line="4604" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="4604" pos:column="74">*</type:modifier><name pos:line="4604" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="4604" pos:column="93">( 
            <param><decl><type><name pos:line="4605" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4605" pos:column="28">*</type:modifier></type> <name pos:line="4605" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4606" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="4606" pos:column="38">__RPC__out</name> <name pos:line="4606" pos:column="49">unsigned</name> <name pos:line="4606" pos:column="58">UINT</name> <type:modifier pos:line="4606" pos:column="63">*</type:modifier></type><name pos:line="4606" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="4607" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4607" pos:column="33">__RPC__out</name> <name pos:line="4607" pos:column="44">void</name> <type:modifier pos:line="4607" pos:column="49">*</type:modifier></type><name pos:line="4607" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4609" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="4609" pos:column="46">HRESULT</name></type> ( <name pos:line="4609" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="4609" pos:column="74">*</type:modifier><name pos:line="4609" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="4609" pos:column="88">( 
            <param><decl><type><name pos:line="4610" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4610" pos:column="28">*</type:modifier></type> <name pos:line="4610" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4611" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="4611" pos:column="37">unsigned</name> <name pos:line="4611" pos:column="46">UINT</name></type> <name pos:line="4611" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="4612" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="4612" pos:column="37">unsigned</name> <name pos:line="4612" pos:column="46">long</name></type> <name pos:line="4612" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="4613" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="4613" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="4613" pos:column="59">void</name> <type:modifier pos:line="4613" pos:column="64">*</type:modifier><type:modifier pos:line="4613" pos:column="65">*</type:modifier></type><name pos:line="4613" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="4614" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4614" pos:column="33">__RPC__out</name> <name pos:line="4614" pos:column="44">void</name> <type:modifier pos:line="4614" pos:column="49">*</type:modifier></type><name pos:line="4614" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4616" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="4616" pos:column="46">HRESULT</name> <argument_list pos:line="4616" pos:column="54">( <argument pos:line="4616" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4616" pos:column="90">(</op:operator> 
            <name pos:line="4617" pos:column="13">CodeParameter2</name> <op:operator pos:line="4617" pos:column="28">*</op:operator> <name pos:line="4617" pos:column="30">This</name><op:operator pos:line="4617" pos:column="34">,</op:operator>
            <comment type="block" pos:line="4618" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4618" pos:column="37">__RPC__in</name> struct <name pos:line="4618" pos:column="54">GUID</name> <op:operator pos:line="4618" pos:column="59">*</op:operator><name pos:line="4618" pos:column="60">riid</name><op:operator pos:line="4618" pos:column="64">,</op:operator>
            <comment type="block" pos:line="4619" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4619" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="4619" pos:column="57">signed</name> <name pos:line="4619" pos:column="64">char</name> <op:operator pos:line="4619" pos:column="69">*</op:operator><op:operator pos:line="4619" pos:column="70">*</op:operator><name pos:line="4619" pos:column="71">rgszNames</name><op:operator pos:line="4619" pos:column="80">,</op:operator>
            <comment type="block" pos:line="4620" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4620" pos:column="37">unsigned</name> <name pos:line="4620" pos:column="46">UINT</name> <name pos:line="4620" pos:column="51">cNames</name><op:operator pos:line="4620" pos:column="57">,</op:operator>
            <comment type="block" pos:line="4621" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4621" pos:column="37">unsigned</name> <name pos:line="4621" pos:column="46">long</name> <name pos:line="4621" pos:column="51">lcid</name><op:operator pos:line="4621" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4622" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="4622" pos:column="38">__RPC__out</name> <name pos:line="4622" pos:column="49">signed</name> <name pos:line="4622" pos:column="56">long</name> <op:operator pos:line="4622" pos:column="61">*</op:operator><name pos:line="4622" pos:column="62">rgdispid</name><op:operator pos:line="4622" pos:column="70">,</op:operator>
            <comment type="block" pos:line="4623" pos:column="13">/* [retval][out] */</comment> <name pos:line="4623" pos:column="33">__RPC__out</name> <name pos:line="4623" pos:column="44">void</name> <op:operator pos:line="4623" pos:column="49">*</op:operator><name pos:line="4623" pos:column="50">retval</name><op:operator pos:line="4623" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4625" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="4625" pos:column="46">HRESULT</name> <argument_list pos:line="4625" pos:column="54">( <argument pos:line="4625" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4625" pos:column="83">(</op:operator> 
            <name pos:line="4626" pos:column="13">CodeParameter2</name> <op:operator pos:line="4626" pos:column="28">*</op:operator> <name pos:line="4626" pos:column="30">This</name><op:operator pos:line="4626" pos:column="34">,</op:operator>
            <comment type="block" pos:line="4627" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4627" pos:column="37">signed</name> <name pos:line="4627" pos:column="44">long</name> <name pos:line="4627" pos:column="49">dispidMember</name><op:operator pos:line="4627" pos:column="61">,</op:operator>
            <comment type="block" pos:line="4628" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4628" pos:column="37">__RPC__in</name> struct <name pos:line="4628" pos:column="54">GUID</name> <op:operator pos:line="4628" pos:column="59">*</op:operator><name pos:line="4628" pos:column="60">riid</name><op:operator pos:line="4628" pos:column="64">,</op:operator>
            <comment type="block" pos:line="4629" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4629" pos:column="37">unsigned</name> <name pos:line="4629" pos:column="46">long</name> <name pos:line="4629" pos:column="51">lcid</name><op:operator pos:line="4629" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4630" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4630" pos:column="37">unsigned</name> <name pos:line="4630" pos:column="46">short</name> <name pos:line="4630" pos:column="52">wFlags</name><op:operator pos:line="4630" pos:column="58">,</op:operator>
            <comment type="block" pos:line="4631" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4631" pos:column="37">__RPC__in</name> struct <name pos:line="4631" pos:column="54">DISPPARAMS</name> <op:operator pos:line="4631" pos:column="65">*</op:operator><name pos:line="4631" pos:column="66">pdispparams</name><op:operator pos:line="4631" pos:column="77">,</op:operator>
            <comment type="block" pos:line="4632" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="4632" pos:column="38">__RPC__out</name> <name pos:line="4632" pos:column="49">VARIANT</name> <op:operator pos:line="4632" pos:column="57">*</op:operator><name pos:line="4632" pos:column="58">pvarResult</name><op:operator pos:line="4632" pos:column="68">,</op:operator>
            <comment type="block" pos:line="4633" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="4633" pos:column="38">__RPC__out</name> struct <name pos:line="4633" pos:column="56">EXCEPINFO</name> <op:operator pos:line="4633" pos:column="66">*</op:operator><name pos:line="4633" pos:column="67">pexcepinfo</name><op:operator pos:line="4633" pos:column="77">,</op:operator>
            <comment type="block" pos:line="4634" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="4634" pos:column="38">__RPC__out</name> <name pos:line="4634" pos:column="49">unsigned</name> <name pos:line="4634" pos:column="58">UINT</name> <op:operator pos:line="4634" pos:column="63">*</op:operator><name pos:line="4634" pos:column="64">puArgErr</name><op:operator pos:line="4634" pos:column="72">,</op:operator>
            <comment type="block" pos:line="4635" pos:column="13">/* [retval][out] */</comment> <name pos:line="4635" pos:column="33">__RPC__out</name> <name pos:line="4635" pos:column="44">void</name> <op:operator pos:line="4635" pos:column="49">*</op:operator><name pos:line="4635" pos:column="50">retval</name><op:operator pos:line="4635" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4637" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4637" pos:column="43">HRESULT</name></type> ( <name pos:line="4637" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4637" pos:column="71">*</type:modifier><name pos:line="4637" pos:column="72">get_DTE</name> )<parameter_list pos:line="4637" pos:column="81">( 
            <param><decl><type><name pos:line="4638" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4638" pos:column="28">*</type:modifier></type> <name pos:line="4638" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4639" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4639" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="4639" pos:column="54">*</type:modifier><type:modifier pos:line="4639" pos:column="55">*</type:modifier></type><name pos:line="4639" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4641" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4641" pos:column="43">HRESULT</name></type> ( <name pos:line="4641" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4641" pos:column="71">*</type:modifier><name pos:line="4641" pos:column="72">get_Collection</name> )<parameter_list pos:line="4641" pos:column="88">( 
            <param><decl><type><name pos:line="4642" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4642" pos:column="28">*</type:modifier></type> <name pos:line="4642" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4643" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4643" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4643" pos:column="54">CodeElements</name> <type:modifier pos:line="4643" pos:column="67">*</type:modifier><type:modifier pos:line="4643" pos:column="68">*</type:modifier></type><name pos:line="4643" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4645" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4645" pos:column="43">HRESULT</name></type> ( <name pos:line="4645" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4645" pos:column="71">*</type:modifier><name pos:line="4645" pos:column="72">get_Name</name> )<parameter_list pos:line="4645" pos:column="82">( 
            <param><decl><type><name pos:line="4646" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4646" pos:column="28">*</type:modifier></type> <name pos:line="4646" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4647" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4647" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4647" pos:column="54">BSTR</name> <type:modifier pos:line="4647" pos:column="59">*</type:modifier></type><name pos:line="4647" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4649" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="4649" pos:column="43">HRESULT</name></type> ( <name pos:line="4649" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4649" pos:column="71">*</type:modifier><name pos:line="4649" pos:column="72">put_Name</name> )<parameter_list pos:line="4649" pos:column="82">( 
            <param><decl><type><name pos:line="4650" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4650" pos:column="28">*</type:modifier></type> <name pos:line="4650" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4651" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4651" pos:column="33">__RPC__in</name> <name pos:line="4651" pos:column="43">BSTR</name></type> <name pos:line="4651" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="4652" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4652" pos:column="33">__RPC__out</name> <name pos:line="4652" pos:column="44">void</name> <type:modifier pos:line="4652" pos:column="49">*</type:modifier></type><name pos:line="4652" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4654" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4654" pos:column="43">HRESULT</name></type> ( <name pos:line="4654" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4654" pos:column="71">*</type:modifier><name pos:line="4654" pos:column="72">get_FullName</name> )<parameter_list pos:line="4654" pos:column="86">( 
            <param><decl><type><name pos:line="4655" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4655" pos:column="28">*</type:modifier></type> <name pos:line="4655" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4656" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4656" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4656" pos:column="54">BSTR</name> <type:modifier pos:line="4656" pos:column="59">*</type:modifier></type><name pos:line="4656" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4658" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4658" pos:column="43">HRESULT</name></type> ( <name pos:line="4658" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4658" pos:column="71">*</type:modifier><name pos:line="4658" pos:column="72">get_ProjectItem</name> )<parameter_list pos:line="4658" pos:column="89">( 
            <param><decl><type><name pos:line="4659" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4659" pos:column="28">*</type:modifier></type> <name pos:line="4659" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4660" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4660" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4660" pos:column="54">ProjectItem</name> <type:modifier pos:line="4660" pos:column="66">*</type:modifier><type:modifier pos:line="4660" pos:column="67">*</type:modifier></type><name pos:line="4660" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4662" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="4662" pos:column="43">HRESULT</name> <argument_list pos:line="4662" pos:column="51">( <argument pos:line="4662" pos:column="53">STDMETHODCALLTYPE *get_Kind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4662" pos:column="82">(</op:operator> 
            <name pos:line="4663" pos:column="13">CodeParameter2</name> <op:operator pos:line="4663" pos:column="28">*</op:operator> <name pos:line="4663" pos:column="30">This</name><op:operator pos:line="4663" pos:column="34">,</op:operator>
            <comment type="block" pos:line="4664" pos:column="13">/* [retval][out] */</comment> <name pos:line="4664" pos:column="33">__RPC__out</name> enum <name pos:line="4664" pos:column="49">vsCMElement</name> <op:operator pos:line="4664" pos:column="61">*</op:operator><name pos:line="4664" pos:column="62">retval</name><op:operator pos:line="4664" pos:column="68">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4666" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4666" pos:column="43">HRESULT</name></type> ( <name pos:line="4666" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4666" pos:column="71">*</type:modifier><name pos:line="4666" pos:column="72">get_IsCodeType</name> )<parameter_list pos:line="4666" pos:column="88">( 
            <param><decl><type><name pos:line="4667" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4667" pos:column="28">*</type:modifier></type> <name pos:line="4667" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4668" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4668" pos:column="33">__RPC__out</name> <name pos:line="4668" pos:column="44">BOOLEAN</name> <type:modifier pos:line="4668" pos:column="52">*</type:modifier></type><name pos:line="4668" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4670" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="4670" pos:column="43">HRESULT</name> <argument_list pos:line="4670" pos:column="51">( <argument pos:line="4670" pos:column="53">STDMETHODCALLTYPE *get_InfoLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4670" pos:column="90">(</op:operator> 
            <name pos:line="4671" pos:column="13">CodeParameter2</name> <op:operator pos:line="4671" pos:column="28">*</op:operator> <name pos:line="4671" pos:column="30">This</name><op:operator pos:line="4671" pos:column="34">,</op:operator>
            <comment type="block" pos:line="4672" pos:column="13">/* [retval][out] */</comment> <name pos:line="4672" pos:column="33">__RPC__out</name> enum <name pos:line="4672" pos:column="49">vsCMInfoLocation</name> <op:operator pos:line="4672" pos:column="66">*</op:operator><name pos:line="4672" pos:column="67">retval</name><op:operator pos:line="4672" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4674" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4674" pos:column="43">HRESULT</name></type> ( <name pos:line="4674" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4674" pos:column="71">*</type:modifier><name pos:line="4674" pos:column="72">get_Children</name> )<parameter_list pos:line="4674" pos:column="86">( 
            <param><decl><type><name pos:line="4675" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4675" pos:column="28">*</type:modifier></type> <name pos:line="4675" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4676" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4676" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4676" pos:column="54">CodeElements</name> <type:modifier pos:line="4676" pos:column="67">*</type:modifier><type:modifier pos:line="4676" pos:column="68">*</type:modifier></type><name pos:line="4676" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4678" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4678" pos:column="43">HRESULT</name></type> ( <name pos:line="4678" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4678" pos:column="71">*</type:modifier><name pos:line="4678" pos:column="72">get_Language</name> )<parameter_list pos:line="4678" pos:column="86">( 
            <param><decl><type><name pos:line="4679" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4679" pos:column="28">*</type:modifier></type> <name pos:line="4679" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4680" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4680" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4680" pos:column="54">BSTR</name> <type:modifier pos:line="4680" pos:column="59">*</type:modifier></type><name pos:line="4680" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4682" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4682" pos:column="43">HRESULT</name></type> ( <name pos:line="4682" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4682" pos:column="71">*</type:modifier><name pos:line="4682" pos:column="72">get_StartPoint</name> )<parameter_list pos:line="4682" pos:column="88">( 
            <param><decl><type><name pos:line="4683" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4683" pos:column="28">*</type:modifier></type> <name pos:line="4683" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4684" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4684" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4684" pos:column="54">TextPoint</name> <type:modifier pos:line="4684" pos:column="64">*</type:modifier><type:modifier pos:line="4684" pos:column="65">*</type:modifier></type><name pos:line="4684" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4686" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4686" pos:column="43">HRESULT</name></type> ( <name pos:line="4686" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4686" pos:column="71">*</type:modifier><name pos:line="4686" pos:column="72">get_EndPoint</name> )<parameter_list pos:line="4686" pos:column="86">( 
            <param><decl><type><name pos:line="4687" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4687" pos:column="28">*</type:modifier></type> <name pos:line="4687" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4688" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4688" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4688" pos:column="54">TextPoint</name> <type:modifier pos:line="4688" pos:column="64">*</type:modifier><type:modifier pos:line="4688" pos:column="65">*</type:modifier></type><name pos:line="4688" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4690" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4690" pos:column="43">HRESULT</name></type> ( <name pos:line="4690" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4690" pos:column="71">*</type:modifier><name pos:line="4690" pos:column="72">get_ExtenderNames</name> )<parameter_list pos:line="4690" pos:column="91">( 
            <param><decl><type><name pos:line="4691" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4691" pos:column="28">*</type:modifier></type> <name pos:line="4691" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4692" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4692" pos:column="33">__RPC__out</name> <name pos:line="4692" pos:column="44">VARIANT</name> <type:modifier pos:line="4692" pos:column="52">*</type:modifier></type><name pos:line="4692" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4694" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4694" pos:column="43">HRESULT</name></type> ( <name pos:line="4694" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4694" pos:column="71">*</type:modifier><name pos:line="4694" pos:column="72">get_Extender</name> )<parameter_list pos:line="4694" pos:column="86">( 
            <param><decl><type><name pos:line="4695" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4695" pos:column="28">*</type:modifier></type> <name pos:line="4695" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4696" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4696" pos:column="33">__RPC__in</name> <name pos:line="4696" pos:column="43">BSTR</name></type> <name pos:line="4696" pos:column="48">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="4697" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4697" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4697" pos:column="54">IDispatch</name> <type:modifier pos:line="4697" pos:column="64">*</type:modifier><type:modifier pos:line="4697" pos:column="65">*</type:modifier></type><name pos:line="4697" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4699" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4699" pos:column="43">HRESULT</name></type> ( <name pos:line="4699" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4699" pos:column="71">*</type:modifier><name pos:line="4699" pos:column="72">get_ExtenderCATID</name> )<parameter_list pos:line="4699" pos:column="91">( 
            <param><decl><type><name pos:line="4700" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4700" pos:column="28">*</type:modifier></type> <name pos:line="4700" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4701" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4701" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4701" pos:column="54">BSTR</name> <type:modifier pos:line="4701" pos:column="59">*</type:modifier></type><name pos:line="4701" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4703" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="4703" pos:column="34">HRESULT</name> <argument_list pos:line="4703" pos:column="42">( <argument pos:line="4703" pos:column="44">STDMETHODCALLTYPE *GetStartPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4703" pos:column="78">(</op:operator> 
            <name pos:line="4704" pos:column="13">CodeParameter2</name> <op:operator pos:line="4704" pos:column="28">*</op:operator> <name pos:line="4704" pos:column="30">This</name><op:operator pos:line="4704" pos:column="34">,</op:operator>
            <comment type="block" pos:line="4705" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="4705" pos:column="42">vsCMPart</name> <name pos:line="4705" pos:column="51">Part</name><op:operator pos:line="4705" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4706" pos:column="13">/* [retval][out] */</comment> <name pos:line="4706" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4706" pos:column="54">TextPoint</name> <op:operator pos:line="4706" pos:column="64">*</op:operator><op:operator pos:line="4706" pos:column="65">*</op:operator><name pos:line="4706" pos:column="66">retval</name><op:operator pos:line="4706" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4708" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="4708" pos:column="34">HRESULT</name> <argument_list pos:line="4708" pos:column="42">( <argument pos:line="4708" pos:column="44">STDMETHODCALLTYPE *GetEndPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4708" pos:column="76">(</op:operator> 
            <name pos:line="4709" pos:column="13">CodeParameter2</name> <op:operator pos:line="4709" pos:column="28">*</op:operator> <name pos:line="4709" pos:column="30">This</name><op:operator pos:line="4709" pos:column="34">,</op:operator>
            <comment type="block" pos:line="4710" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="4710" pos:column="42">vsCMPart</name> <name pos:line="4710" pos:column="51">Part</name><op:operator pos:line="4710" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4711" pos:column="13">/* [retval][out] */</comment> <name pos:line="4711" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4711" pos:column="54">TextPoint</name> <op:operator pos:line="4711" pos:column="64">*</op:operator><op:operator pos:line="4711" pos:column="65">*</op:operator><name pos:line="4711" pos:column="66">retval</name><op:operator pos:line="4711" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4713" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4713" pos:column="43">HRESULT</name></type> ( <name pos:line="4713" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4713" pos:column="71">*</type:modifier><name pos:line="4713" pos:column="72">get_Parent</name> )<parameter_list pos:line="4713" pos:column="84">( 
            <param><decl><type><name pos:line="4714" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4714" pos:column="28">*</type:modifier></type> <name pos:line="4714" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4715" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4715" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4715" pos:column="54">CodeElement</name> <type:modifier pos:line="4715" pos:column="66">*</type:modifier><type:modifier pos:line="4715" pos:column="67">*</type:modifier></type><name pos:line="4715" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4717" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="4717" pos:column="43">HRESULT</name></type> ( <name pos:line="4717" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4717" pos:column="71">*</type:modifier><name pos:line="4717" pos:column="72">put_Type</name> )<parameter_list pos:line="4717" pos:column="82">( 
            <param><decl><type><name pos:line="4718" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4718" pos:column="28">*</type:modifier></type> <name pos:line="4718" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4719" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4719" pos:column="33">__RPC__in_opt</name> <name pos:line="4719" pos:column="47">CodeTypeRef</name> <type:modifier pos:line="4719" pos:column="59">*</type:modifier></type><name pos:line="4719" pos:column="60">noname</name></decl></param>,
            <comment type="block" pos:line="4720" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4720" pos:column="33">__RPC__out</name> <name pos:line="4720" pos:column="44">void</name> <type:modifier pos:line="4720" pos:column="49">*</type:modifier></type><name pos:line="4720" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4722" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4722" pos:column="43">HRESULT</name></type> ( <name pos:line="4722" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4722" pos:column="71">*</type:modifier><name pos:line="4722" pos:column="72">get_Type</name> )<parameter_list pos:line="4722" pos:column="82">( 
            <param><decl><type><name pos:line="4723" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4723" pos:column="28">*</type:modifier></type> <name pos:line="4723" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4724" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4724" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4724" pos:column="54">CodeTypeRef</name> <type:modifier pos:line="4724" pos:column="66">*</type:modifier><type:modifier pos:line="4724" pos:column="67">*</type:modifier></type><name pos:line="4724" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4726" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4726" pos:column="43">HRESULT</name></type> ( <name pos:line="4726" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4726" pos:column="71">*</type:modifier><name pos:line="4726" pos:column="72">get_Attributes</name> )<parameter_list pos:line="4726" pos:column="88">( 
            <param><decl><type><name pos:line="4727" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4727" pos:column="28">*</type:modifier></type> <name pos:line="4727" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4728" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4728" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4728" pos:column="54">CodeElements</name> <type:modifier pos:line="4728" pos:column="67">*</type:modifier><type:modifier pos:line="4728" pos:column="68">*</type:modifier></type><name pos:line="4728" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4730" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4730" pos:column="43">HRESULT</name></type> ( <name pos:line="4730" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4730" pos:column="71">*</type:modifier><name pos:line="4730" pos:column="72">get_DocComment</name> )<parameter_list pos:line="4730" pos:column="88">( 
            <param><decl><type><name pos:line="4731" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4731" pos:column="28">*</type:modifier></type> <name pos:line="4731" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4732" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4732" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4732" pos:column="54">BSTR</name> <type:modifier pos:line="4732" pos:column="59">*</type:modifier></type><name pos:line="4732" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4734" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="4734" pos:column="43">HRESULT</name></type> ( <name pos:line="4734" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4734" pos:column="71">*</type:modifier><name pos:line="4734" pos:column="72">put_DocComment</name> )<parameter_list pos:line="4734" pos:column="88">( 
            <param><decl><type><name pos:line="4735" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4735" pos:column="28">*</type:modifier></type> <name pos:line="4735" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4736" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4736" pos:column="33">__RPC__in</name> <name pos:line="4736" pos:column="43">BSTR</name></type> <name pos:line="4736" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="4737" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4737" pos:column="33">__RPC__out</name> <name pos:line="4737" pos:column="44">void</name> <type:modifier pos:line="4737" pos:column="49">*</type:modifier></type><name pos:line="4737" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4739" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="4739" pos:column="34">HRESULT</name></type> ( <name pos:line="4739" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="4739" pos:column="62">*</type:modifier><name pos:line="4739" pos:column="63">AddAttribute</name> )<parameter_list pos:line="4739" pos:column="77">( 
            <param><decl><type><name pos:line="4740" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4740" pos:column="28">*</type:modifier></type> <name pos:line="4740" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4741" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4741" pos:column="33">__RPC__in</name> <name pos:line="4741" pos:column="43">BSTR</name></type> <name pos:line="4741" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="4742" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4742" pos:column="33">__RPC__in</name> <name pos:line="4742" pos:column="43">BSTR</name></type> <name pos:line="4742" pos:column="48">Value</name></decl></param>,
            <comment type="block" pos:line="4743" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="4743" pos:column="43">VARIANT</name></type> <name pos:line="4743" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="4744" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4744" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4744" pos:column="54">CodeAttribute</name> <type:modifier pos:line="4744" pos:column="68">*</type:modifier><type:modifier pos:line="4744" pos:column="69">*</type:modifier></type><name pos:line="4744" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4746" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="4746" pos:column="73">HRESULT</name></type> ( <name pos:line="4746" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="4746" pos:column="101">*</type:modifier><name pos:line="4746" pos:column="102">get_ParameterKind</name> )<parameter_list pos:line="4746" pos:column="121">( 
            <param><decl><type><name pos:line="4747" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4747" pos:column="28">*</type:modifier></type> <name pos:line="4747" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4748" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4748" pos:column="33">__RPC__out</name> <name pos:line="4748" pos:column="44">vsCMParameterKind</name> <type:modifier pos:line="4748" pos:column="62">*</type:modifier></type><name pos:line="4748" pos:column="63">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4750" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="4750" pos:column="73">HRESULT</name></type> ( <name pos:line="4750" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="4750" pos:column="101">*</type:modifier><name pos:line="4750" pos:column="102">put_ParameterKind</name> )<parameter_list pos:line="4750" pos:column="121">( 
            <param><decl><type><name pos:line="4751" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4751" pos:column="28">*</type:modifier></type> <name pos:line="4751" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="4752" pos:column="13">vsCMParameterKind</name></type> <name pos:line="4752" pos:column="31">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4754" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="4754" pos:column="73">HRESULT</name></type> ( <name pos:line="4754" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="4754" pos:column="101">*</type:modifier><name pos:line="4754" pos:column="102">get_DefaultValue</name> )<parameter_list pos:line="4754" pos:column="120">( 
            <param><decl><type><name pos:line="4755" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4755" pos:column="28">*</type:modifier></type> <name pos:line="4755" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="4756" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4756" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4756" pos:column="54">BSTR</name> <type:modifier pos:line="4756" pos:column="59">*</type:modifier></type><name pos:line="4756" pos:column="60">Value</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4758" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="4758" pos:column="73">HRESULT</name></type> ( <name pos:line="4758" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="4758" pos:column="101">*</type:modifier><name pos:line="4758" pos:column="102">put_DefaultValue</name> )<parameter_list pos:line="4758" pos:column="120">( 
            <param><decl><type><name pos:line="4759" pos:column="13">CodeParameter2</name> <type:modifier pos:line="4759" pos:column="28">*</type:modifier></type> <name pos:line="4759" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="4760" pos:column="13">__RPC__in</name> <name pos:line="4760" pos:column="23">BSTR</name></type> <name pos:line="4760" pos:column="28">Value</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="4762" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="4763" pos:column="7">CodeParameter2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="4765" pos:column="5">interface</name></type> <name pos:line="4765" pos:column="15">CodeParameter2</name>
    <argument_list pos:line="4766" pos:column="5">{
        <argument><expr><name pos:line="4767" pos:column="9">CONST_VTBL</name> struct <name pos:line="4767" pos:column="27">CodeParameter2Vtbl</name> <op:operator pos:line="4767" pos:column="46">*</op:operator><name pos:line="4767" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="4772" pos:column="1">#<cpp:directive pos:line="4772" pos:column="2">ifdef</cpp:directive> <name pos:line="4772" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="4775" pos:column="1">#<cpp:directive pos:line="4775" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4775" pos:column="9">CodeParameter2_QueryInterface</name><parameter_list pos:line="4775" pos:column="38">(<param><type><name pos:line="4775" pos:column="39">This</name></type></param>,<param><type><name pos:line="4775" pos:column="44">riid</name></type></param>,<param><type><name pos:line="4775" pos:column="49">ppvObj</name></type></param>,<param><type><name pos:line="4775" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4776" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4778" pos:column="1">#<cpp:directive pos:line="4778" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4778" pos:column="9">CodeParameter2_AddRef</name><parameter_list pos:line="4778" pos:column="30">(<param><type><name pos:line="4778" pos:column="31">This</name></type></param>,<param><type><name pos:line="4778" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4779" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4781" pos:column="1">#<cpp:directive pos:line="4781" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4781" pos:column="9">CodeParameter2_Release</name><parameter_list pos:line="4781" pos:column="31">(<param><type><name pos:line="4781" pos:column="32">This</name></type></param>,<param><type><name pos:line="4781" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4782" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4784" pos:column="1">#<cpp:directive pos:line="4784" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4784" pos:column="9">CodeParameter2_GetTypeInfoCount</name><parameter_list pos:line="4784" pos:column="40">(<param><type><name pos:line="4784" pos:column="41">This</name></type></param>,<param><type><name pos:line="4784" pos:column="46">pctinfo</name></type></param>,<param><type><name pos:line="4784" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4785" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4787" pos:column="1">#<cpp:directive pos:line="4787" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4787" pos:column="9">CodeParameter2_GetTypeInfo</name><parameter_list pos:line="4787" pos:column="35">(<param><type><name pos:line="4787" pos:column="36">This</name></type></param>,<param><type><name pos:line="4787" pos:column="41">itinfo</name></type></param>,<param><type><name pos:line="4787" pos:column="48">lcid</name></type></param>,<param><type><name pos:line="4787" pos:column="53">pptinfo</name></type></param>,<param><type><name pos:line="4787" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4788" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4790" pos:column="1">#<cpp:directive pos:line="4790" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4790" pos:column="9">CodeParameter2_GetIDsOfNames</name><parameter_list pos:line="4790" pos:column="37">(<param><type><name pos:line="4790" pos:column="38">This</name></type></param>,<param><type><name pos:line="4790" pos:column="43">riid</name></type></param>,<param><type><name pos:line="4790" pos:column="48">rgszNames</name></type></param>,<param><type><name pos:line="4790" pos:column="58">cNames</name></type></param>,<param><type><name pos:line="4790" pos:column="65">lcid</name></type></param>,<param><type><name pos:line="4790" pos:column="70">rgdispid</name></type></param>,<param><type><name pos:line="4790" pos:column="79">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4791" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4793" pos:column="1">#<cpp:directive pos:line="4793" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4793" pos:column="9">CodeParameter2_Invoke</name><parameter_list pos:line="4793" pos:column="30">(<param><type><name pos:line="4793" pos:column="31">This</name></type></param>,<param><type><name pos:line="4793" pos:column="36">dispidMember</name></type></param>,<param><type><name pos:line="4793" pos:column="49">riid</name></type></param>,<param><type><name pos:line="4793" pos:column="54">lcid</name></type></param>,<param><type><name pos:line="4793" pos:column="59">wFlags</name></type></param>,<param><type><name pos:line="4793" pos:column="66">pdispparams</name></type></param>,<param><type><name pos:line="4793" pos:column="78">pvarResult</name></type></param>,<param><type><name pos:line="4793" pos:column="89">pexcepinfo</name></type></param>,<param><type><name pos:line="4793" pos:column="100">puArgErr</name></type></param>,<param><type><name pos:line="4793" pos:column="109">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4794" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4796" pos:column="1">#<cpp:directive pos:line="4796" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4796" pos:column="9">CodeParameter2_get_DTE</name><parameter_list pos:line="4796" pos:column="31">(<param><type><name pos:line="4796" pos:column="32">This</name></type></param>,<param><type><name pos:line="4796" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4797" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4799" pos:column="1">#<cpp:directive pos:line="4799" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4799" pos:column="9">CodeParameter2_get_Collection</name><parameter_list pos:line="4799" pos:column="38">(<param><type><name pos:line="4799" pos:column="39">This</name></type></param>,<param><type><name pos:line="4799" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4800" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4802" pos:column="1">#<cpp:directive pos:line="4802" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4802" pos:column="9">CodeParameter2_get_Name</name><parameter_list pos:line="4802" pos:column="32">(<param><type><name pos:line="4802" pos:column="33">This</name></type></param>,<param><type><name pos:line="4802" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4803" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4805" pos:column="1">#<cpp:directive pos:line="4805" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4805" pos:column="9">CodeParameter2_put_Name</name><parameter_list pos:line="4805" pos:column="32">(<param><type><name pos:line="4805" pos:column="33">This</name></type></param>,<param><type><name pos:line="4805" pos:column="38">noname</name></type></param>,<param><type><name pos:line="4805" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4806" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4808" pos:column="1">#<cpp:directive pos:line="4808" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4808" pos:column="9">CodeParameter2_get_FullName</name><parameter_list pos:line="4808" pos:column="36">(<param><type><name pos:line="4808" pos:column="37">This</name></type></param>,<param><type><name pos:line="4808" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4809" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4811" pos:column="1">#<cpp:directive pos:line="4811" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4811" pos:column="9">CodeParameter2_get_ProjectItem</name><parameter_list pos:line="4811" pos:column="39">(<param><type><name pos:line="4811" pos:column="40">This</name></type></param>,<param><type><name pos:line="4811" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4812" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItem(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4814" pos:column="1">#<cpp:directive pos:line="4814" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4814" pos:column="9">CodeParameter2_get_Kind</name><parameter_list pos:line="4814" pos:column="32">(<param><type><name pos:line="4814" pos:column="33">This</name></type></param>,<param><type><name pos:line="4814" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4815" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Kind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4817" pos:column="1">#<cpp:directive pos:line="4817" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4817" pos:column="9">CodeParameter2_get_IsCodeType</name><parameter_list pos:line="4817" pos:column="38">(<param><type><name pos:line="4817" pos:column="39">This</name></type></param>,<param><type><name pos:line="4817" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4818" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsCodeType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4820" pos:column="1">#<cpp:directive pos:line="4820" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4820" pos:column="9">CodeParameter2_get_InfoLocation</name><parameter_list pos:line="4820" pos:column="40">(<param><type><name pos:line="4820" pos:column="41">This</name></type></param>,<param><type><name pos:line="4820" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4821" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InfoLocation(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4823" pos:column="1">#<cpp:directive pos:line="4823" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4823" pos:column="9">CodeParameter2_get_Children</name><parameter_list pos:line="4823" pos:column="36">(<param><type><name pos:line="4823" pos:column="37">This</name></type></param>,<param><type><name pos:line="4823" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4824" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Children(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4826" pos:column="1">#<cpp:directive pos:line="4826" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4826" pos:column="9">CodeParameter2_get_Language</name><parameter_list pos:line="4826" pos:column="36">(<param><type><name pos:line="4826" pos:column="37">This</name></type></param>,<param><type><name pos:line="4826" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4827" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4829" pos:column="1">#<cpp:directive pos:line="4829" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4829" pos:column="9">CodeParameter2_get_StartPoint</name><parameter_list pos:line="4829" pos:column="38">(<param><type><name pos:line="4829" pos:column="39">This</name></type></param>,<param><type><name pos:line="4829" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4830" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4832" pos:column="1">#<cpp:directive pos:line="4832" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4832" pos:column="9">CodeParameter2_get_EndPoint</name><parameter_list pos:line="4832" pos:column="36">(<param><type><name pos:line="4832" pos:column="37">This</name></type></param>,<param><type><name pos:line="4832" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4833" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_EndPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4835" pos:column="1">#<cpp:directive pos:line="4835" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4835" pos:column="9">CodeParameter2_get_ExtenderNames</name><parameter_list pos:line="4835" pos:column="41">(<param><type><name pos:line="4835" pos:column="42">This</name></type></param>,<param><type><name pos:line="4835" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4836" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4838" pos:column="1">#<cpp:directive pos:line="4838" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4838" pos:column="9">CodeParameter2_get_Extender</name><parameter_list pos:line="4838" pos:column="36">(<param><type><name pos:line="4838" pos:column="37">This</name></type></param>,<param><type><name pos:line="4838" pos:column="42">ExtenderName</name></type></param>,<param><type><name pos:line="4838" pos:column="55">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4839" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4841" pos:column="1">#<cpp:directive pos:line="4841" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4841" pos:column="9">CodeParameter2_get_ExtenderCATID</name><parameter_list pos:line="4841" pos:column="41">(<param><type><name pos:line="4841" pos:column="42">This</name></type></param>,<param><type><name pos:line="4841" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4842" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4844" pos:column="1">#<cpp:directive pos:line="4844" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4844" pos:column="9">CodeParameter2_GetStartPoint</name><parameter_list pos:line="4844" pos:column="37">(<param><type><name pos:line="4844" pos:column="38">This</name></type></param>,<param><type><name pos:line="4844" pos:column="43">Part</name></type></param>,<param><type><name pos:line="4844" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4845" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStartPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4847" pos:column="1">#<cpp:directive pos:line="4847" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4847" pos:column="9">CodeParameter2_GetEndPoint</name><parameter_list pos:line="4847" pos:column="35">(<param><type><name pos:line="4847" pos:column="36">This</name></type></param>,<param><type><name pos:line="4847" pos:column="41">Part</name></type></param>,<param><type><name pos:line="4847" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4848" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4850" pos:column="1">#<cpp:directive pos:line="4850" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4850" pos:column="9">CodeParameter2_get_Parent</name><parameter_list pos:line="4850" pos:column="34">(<param><type><name pos:line="4850" pos:column="35">This</name></type></param>,<param><type><name pos:line="4850" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4851" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4853" pos:column="1">#<cpp:directive pos:line="4853" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4853" pos:column="9">CodeParameter2_put_Type</name><parameter_list pos:line="4853" pos:column="32">(<param><type><name pos:line="4853" pos:column="33">This</name></type></param>,<param><type><name pos:line="4853" pos:column="38">noname</name></type></param>,<param><type><name pos:line="4853" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4854" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Type(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4856" pos:column="1">#<cpp:directive pos:line="4856" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4856" pos:column="9">CodeParameter2_get_Type</name><parameter_list pos:line="4856" pos:column="32">(<param><type><name pos:line="4856" pos:column="33">This</name></type></param>,<param><type><name pos:line="4856" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4857" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Type(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4859" pos:column="1">#<cpp:directive pos:line="4859" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4859" pos:column="9">CodeParameter2_get_Attributes</name><parameter_list pos:line="4859" pos:column="38">(<param><type><name pos:line="4859" pos:column="39">This</name></type></param>,<param><type><name pos:line="4859" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4860" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Attributes(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4862" pos:column="1">#<cpp:directive pos:line="4862" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4862" pos:column="9">CodeParameter2_get_DocComment</name><parameter_list pos:line="4862" pos:column="38">(<param><type><name pos:line="4862" pos:column="39">This</name></type></param>,<param><type><name pos:line="4862" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4863" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DocComment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4865" pos:column="1">#<cpp:directive pos:line="4865" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4865" pos:column="9">CodeParameter2_put_DocComment</name><parameter_list pos:line="4865" pos:column="38">(<param><type><name pos:line="4865" pos:column="39">This</name></type></param>,<param><type><name pos:line="4865" pos:column="44">noname</name></type></param>,<param><type><name pos:line="4865" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4866" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DocComment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="4868" pos:column="1">#<cpp:directive pos:line="4868" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4868" pos:column="9">CodeParameter2_AddAttribute</name><parameter_list pos:line="4868" pos:column="36">(<param><type><name pos:line="4868" pos:column="37">This</name></type></param>,<param><type><name pos:line="4868" pos:column="42">Name</name></type></param>,<param><type><name pos:line="4868" pos:column="47">Value</name></type></param>,<param><type><name pos:line="4868" pos:column="53">Position</name></type></param>,<param><type><name pos:line="4868" pos:column="62">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4869" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddAttribute(This,Name,Value,Position,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="4872" pos:column="1">#<cpp:directive pos:line="4872" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4872" pos:column="9">CodeParameter2_get_ParameterKind</name><parameter_list pos:line="4872" pos:column="41">(<param><type><name pos:line="4872" pos:column="42">This</name></type></param>,<param><type><name pos:line="4872" pos:column="47">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4873" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ParameterKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="4875" pos:column="1">#<cpp:directive pos:line="4875" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4875" pos:column="9">CodeParameter2_put_ParameterKind</name><parameter_list pos:line="4875" pos:column="41">(<param><type><name pos:line="4875" pos:column="42">This</name></type></param>,<param><type><name pos:line="4875" pos:column="47">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4876" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_ParameterKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="4878" pos:column="1">#<cpp:directive pos:line="4878" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4878" pos:column="9">CodeParameter2_get_DefaultValue</name><parameter_list pos:line="4878" pos:column="40">(<param><type><name pos:line="4878" pos:column="41">This</name></type></param>,<param><type><name pos:line="4878" pos:column="46">Value</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4879" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DefaultValue(This,Value) )</cpp:value></cpp:define> 

<cpp:define pos:line="4881" pos:column="1">#<cpp:directive pos:line="4881" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4881" pos:column="9">CodeParameter2_put_DefaultValue</name><parameter_list pos:line="4881" pos:column="40">(<param><type><name pos:line="4881" pos:column="41">This</name></type></param>,<param><type><name pos:line="4881" pos:column="46">Value</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="4882" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DefaultValue(This,Value) )</cpp:value></cpp:define> 

<cpp:endif pos:line="4884" pos:column="1">#<cpp:directive pos:line="4884" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="4884" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="4887" pos:column="1">#<cpp:directive pos:line="4887" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4887" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="4892" pos:column="1">#<cpp:directive pos:line="4892" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="4892" pos:column="9">/* __CodeParameter2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="4895" pos:column="1">#<cpp:directive pos:line="4895" pos:column="2">ifndef</cpp:directive> <name pos:line="4895" pos:column="9">__CodeFunction2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="4896" pos:column="1">#<cpp:directive pos:line="4896" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="4896" pos:column="9">__CodeFunction2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="4898" pos:column="1">/* interface CodeFunction2 */</comment>
<comment type="block" pos:line="4899" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="4902" pos:column="1">EXTERN_C</name> <specifier pos:line="4902" pos:column="10">const</specifier> <name pos:line="4902" pos:column="16">IID</name></type> <name pos:line="4902" pos:column="20">IID_CodeFunction2</name></decl>;</decl_stmt>

<cpp:if pos:line="4904" pos:column="1">#<cpp:directive pos:line="4904" pos:column="2">if</cpp:directive> <expr><call><name pos:line="4904" pos:column="5">defined</name><argument_list pos:line="4904" pos:column="12">(<argument><expr><name pos:line="4904" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="4904" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="4904" pos:column="29">!</op:operator><call><name pos:line="4904" pos:column="30">defined</name><argument_list pos:line="4904" pos:column="37">(<argument><expr><name pos:line="4904" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="4906" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="4906" pos:column="19">(<argument pos:line="4906" pos:column="20">"7E20CD35-8689-466D-8EA0-A863B7EA5DB9"</argument>)</argument_list></macro>
    <label><name pos:line="4907" pos:column="5">CodeFunction2</name> :</label> <expr_stmt><expr pos:line="4907" pos:column="21">public <name pos:line="4907" pos:column="28">CodeFunction</name>
    <block pos:line="4908" pos:column="5">{
    <expr pos:line="4909" pos:column="5">public<op:operator pos:line="4909" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="4910" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="4910" pos:column="81">HRESULT</name> <name pos:line="4910" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="4910" pos:column="107">get_OverrideKind</name><argument_list pos:line="4910" pos:column="123">( 
            <comment type="block" pos:line="4911" pos:column="13">/* [retval][out] */</comment> <argument pos:line="4911" pos:column="33">__RPC__out vsCMOverrideKind *Kind</argument>)</argument_list></macro> <op:operator pos:line="4911" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="4911" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="4913" pos:column="9">virtual <comment type="block" pos:line="4913" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="4913" pos:column="81">HRESULT</name> <name pos:line="4913" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="4913" pos:column="107">put_OverrideKind</name><argument_list pos:line="4913" pos:column="123">( 
            <argument pos:line="4914" pos:column="13">vsCMOverrideKind Kind</argument>)</argument_list></macro> <op:operator pos:line="4914" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="4914" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="4916" pos:column="9">virtual <comment type="block" pos:line="4916" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="4916" pos:column="49">HRESULT</name> <name pos:line="4916" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="4916" pos:column="75">get_IsGeneric</name><argument_list pos:line="4916" pos:column="88">( 
            <comment type="block" pos:line="4917" pos:column="13">/* [retval][out] */</comment> <argument pos:line="4917" pos:column="33">__RPC__out VARIANT_BOOL *pIsGeneric</argument>)</argument_list></macro> <op:operator pos:line="4917" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="4917" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="4921" pos:column="1">#<cpp:directive pos:line="4921" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="4921" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="4923" pos:column="5">typedef <type><struct pos:line="4923" pos:column="13">struct <name pos:line="4923" pos:column="20">CodeFunction2Vtbl</name>
    <block pos:line="4924" pos:column="5">{<public type="default" pos:line="4924" pos:column="6">
        <decl_stmt><decl><type><name pos:line="4925" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="4927" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="4927" pos:column="46">HRESULT</name></type> ( <name pos:line="4927" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="4927" pos:column="74">*</type:modifier><name pos:line="4927" pos:column="75">QueryInterface</name> )<parameter_list pos:line="4927" pos:column="91">( 
            <param><decl><type><name pos:line="4928" pos:column="13">CodeFunction2</name> <type:modifier pos:line="4928" pos:column="27">*</type:modifier></type> <name pos:line="4928" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4929" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="4929" pos:column="47">struct <name pos:line="4929" pos:column="54">GUID</name> <type:modifier pos:line="4929" pos:column="59">*</type:modifier></type><name pos:line="4929" pos:column="60">riid</name></decl><op:operator pos:line="4929" pos:column="64">,</op:operator>
            <comment type="block" pos:line="4930" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="4930" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="4930" pos:column="59">void</name> <type:modifier pos:line="4930" pos:column="64">*</type:modifier><type:modifier pos:line="4930" pos:column="65">*</type:modifier><name pos:line="4930" pos:column="66">ppvObj</name><op:operator pos:line="4930" pos:column="72">,</op:operator>
            <comment type="block" pos:line="4931" pos:column="13">/* [retval][out] */</comment> <name pos:line="4931" pos:column="33">__RPC__out</name> <name pos:line="4931" pos:column="44">void</name> <type:modifier pos:line="4931" pos:column="49">*</type:modifier><name pos:line="4931" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="4933" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="4933" pos:column="46">HRESULT</name></type> ( <name pos:line="4933" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="4933" pos:column="74">*</type:modifier><name pos:line="4933" pos:column="75">AddRef</name> )<parameter_list pos:line="4933" pos:column="83">( 
            <param><decl><type><name pos:line="4934" pos:column="13">CodeFunction2</name> <type:modifier pos:line="4934" pos:column="27">*</type:modifier></type> <name pos:line="4934" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4935" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4935" pos:column="33">__RPC__out</name> <name pos:line="4935" pos:column="44">unsigned</name> <name pos:line="4935" pos:column="53">long</name> <type:modifier pos:line="4935" pos:column="58">*</type:modifier></type><name pos:line="4935" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4937" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="4937" pos:column="46">HRESULT</name></type> ( <name pos:line="4937" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="4937" pos:column="74">*</type:modifier><name pos:line="4937" pos:column="75">Release</name> )<parameter_list pos:line="4937" pos:column="84">( 
            <param><decl><type><name pos:line="4938" pos:column="13">CodeFunction2</name> <type:modifier pos:line="4938" pos:column="27">*</type:modifier></type> <name pos:line="4938" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4939" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4939" pos:column="33">__RPC__out</name> <name pos:line="4939" pos:column="44">unsigned</name> <name pos:line="4939" pos:column="53">long</name> <type:modifier pos:line="4939" pos:column="58">*</type:modifier></type><name pos:line="4939" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4941" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="4941" pos:column="46">HRESULT</name></type> ( <name pos:line="4941" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="4941" pos:column="74">*</type:modifier><name pos:line="4941" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="4941" pos:column="93">( 
            <param><decl><type><name pos:line="4942" pos:column="13">CodeFunction2</name> <type:modifier pos:line="4942" pos:column="27">*</type:modifier></type> <name pos:line="4942" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4943" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="4943" pos:column="38">__RPC__out</name> <name pos:line="4943" pos:column="49">unsigned</name> <name pos:line="4943" pos:column="58">UINT</name> <type:modifier pos:line="4943" pos:column="63">*</type:modifier></type><name pos:line="4943" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="4944" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4944" pos:column="33">__RPC__out</name> <name pos:line="4944" pos:column="44">void</name> <type:modifier pos:line="4944" pos:column="49">*</type:modifier></type><name pos:line="4944" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4946" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="4946" pos:column="46">HRESULT</name></type> ( <name pos:line="4946" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="4946" pos:column="74">*</type:modifier><name pos:line="4946" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="4946" pos:column="88">( 
            <param><decl><type><name pos:line="4947" pos:column="13">CodeFunction2</name> <type:modifier pos:line="4947" pos:column="27">*</type:modifier></type> <name pos:line="4947" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4948" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="4948" pos:column="37">unsigned</name> <name pos:line="4948" pos:column="46">UINT</name></type> <name pos:line="4948" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="4949" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="4949" pos:column="37">unsigned</name> <name pos:line="4949" pos:column="46">long</name></type> <name pos:line="4949" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="4950" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="4950" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="4950" pos:column="59">void</name> <type:modifier pos:line="4950" pos:column="64">*</type:modifier><type:modifier pos:line="4950" pos:column="65">*</type:modifier></type><name pos:line="4950" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="4951" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4951" pos:column="33">__RPC__out</name> <name pos:line="4951" pos:column="44">void</name> <type:modifier pos:line="4951" pos:column="49">*</type:modifier></type><name pos:line="4951" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4953" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="4953" pos:column="46">HRESULT</name> <argument_list pos:line="4953" pos:column="54">( <argument pos:line="4953" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4953" pos:column="90">(</op:operator> 
            <name pos:line="4954" pos:column="13">CodeFunction2</name> <op:operator pos:line="4954" pos:column="27">*</op:operator> <name pos:line="4954" pos:column="29">This</name><op:operator pos:line="4954" pos:column="33">,</op:operator>
            <comment type="block" pos:line="4955" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4955" pos:column="37">__RPC__in</name> struct <name pos:line="4955" pos:column="54">GUID</name> <op:operator pos:line="4955" pos:column="59">*</op:operator><name pos:line="4955" pos:column="60">riid</name><op:operator pos:line="4955" pos:column="64">,</op:operator>
            <comment type="block" pos:line="4956" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4956" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="4956" pos:column="57">signed</name> <name pos:line="4956" pos:column="64">char</name> <op:operator pos:line="4956" pos:column="69">*</op:operator><op:operator pos:line="4956" pos:column="70">*</op:operator><name pos:line="4956" pos:column="71">rgszNames</name><op:operator pos:line="4956" pos:column="80">,</op:operator>
            <comment type="block" pos:line="4957" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4957" pos:column="37">unsigned</name> <name pos:line="4957" pos:column="46">UINT</name> <name pos:line="4957" pos:column="51">cNames</name><op:operator pos:line="4957" pos:column="57">,</op:operator>
            <comment type="block" pos:line="4958" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4958" pos:column="37">unsigned</name> <name pos:line="4958" pos:column="46">long</name> <name pos:line="4958" pos:column="51">lcid</name><op:operator pos:line="4958" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4959" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="4959" pos:column="38">__RPC__out</name> <name pos:line="4959" pos:column="49">signed</name> <name pos:line="4959" pos:column="56">long</name> <op:operator pos:line="4959" pos:column="61">*</op:operator><name pos:line="4959" pos:column="62">rgdispid</name><op:operator pos:line="4959" pos:column="70">,</op:operator>
            <comment type="block" pos:line="4960" pos:column="13">/* [retval][out] */</comment> <name pos:line="4960" pos:column="33">__RPC__out</name> <name pos:line="4960" pos:column="44">void</name> <op:operator pos:line="4960" pos:column="49">*</op:operator><name pos:line="4960" pos:column="50">retval</name><op:operator pos:line="4960" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4962" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="4962" pos:column="46">HRESULT</name> <argument_list pos:line="4962" pos:column="54">( <argument pos:line="4962" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4962" pos:column="83">(</op:operator> 
            <name pos:line="4963" pos:column="13">CodeFunction2</name> <op:operator pos:line="4963" pos:column="27">*</op:operator> <name pos:line="4963" pos:column="29">This</name><op:operator pos:line="4963" pos:column="33">,</op:operator>
            <comment type="block" pos:line="4964" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4964" pos:column="37">signed</name> <name pos:line="4964" pos:column="44">long</name> <name pos:line="4964" pos:column="49">dispidMember</name><op:operator pos:line="4964" pos:column="61">,</op:operator>
            <comment type="block" pos:line="4965" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4965" pos:column="37">__RPC__in</name> struct <name pos:line="4965" pos:column="54">GUID</name> <op:operator pos:line="4965" pos:column="59">*</op:operator><name pos:line="4965" pos:column="60">riid</name><op:operator pos:line="4965" pos:column="64">,</op:operator>
            <comment type="block" pos:line="4966" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4966" pos:column="37">unsigned</name> <name pos:line="4966" pos:column="46">long</name> <name pos:line="4966" pos:column="51">lcid</name><op:operator pos:line="4966" pos:column="55">,</op:operator>
            <comment type="block" pos:line="4967" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4967" pos:column="37">unsigned</name> <name pos:line="4967" pos:column="46">short</name> <name pos:line="4967" pos:column="52">wFlags</name><op:operator pos:line="4967" pos:column="58">,</op:operator>
            <comment type="block" pos:line="4968" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="4968" pos:column="37">__RPC__in</name> struct <name pos:line="4968" pos:column="54">DISPPARAMS</name> <op:operator pos:line="4968" pos:column="65">*</op:operator><name pos:line="4968" pos:column="66">pdispparams</name><op:operator pos:line="4968" pos:column="77">,</op:operator>
            <comment type="block" pos:line="4969" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="4969" pos:column="38">__RPC__out</name> <name pos:line="4969" pos:column="49">VARIANT</name> <op:operator pos:line="4969" pos:column="57">*</op:operator><name pos:line="4969" pos:column="58">pvarResult</name><op:operator pos:line="4969" pos:column="68">,</op:operator>
            <comment type="block" pos:line="4970" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="4970" pos:column="38">__RPC__out</name> struct <name pos:line="4970" pos:column="56">EXCEPINFO</name> <op:operator pos:line="4970" pos:column="66">*</op:operator><name pos:line="4970" pos:column="67">pexcepinfo</name><op:operator pos:line="4970" pos:column="77">,</op:operator>
            <comment type="block" pos:line="4971" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="4971" pos:column="38">__RPC__out</name> <name pos:line="4971" pos:column="49">unsigned</name> <name pos:line="4971" pos:column="58">UINT</name> <op:operator pos:line="4971" pos:column="63">*</op:operator><name pos:line="4971" pos:column="64">puArgErr</name><op:operator pos:line="4971" pos:column="72">,</op:operator>
            <comment type="block" pos:line="4972" pos:column="13">/* [retval][out] */</comment> <name pos:line="4972" pos:column="33">__RPC__out</name> <name pos:line="4972" pos:column="44">void</name> <op:operator pos:line="4972" pos:column="49">*</op:operator><name pos:line="4972" pos:column="50">retval</name><op:operator pos:line="4972" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="4974" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4974" pos:column="43">HRESULT</name></type> ( <name pos:line="4974" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4974" pos:column="71">*</type:modifier><name pos:line="4974" pos:column="72">get_DTE</name> )<parameter_list pos:line="4974" pos:column="81">( 
            <param><decl><type><name pos:line="4975" pos:column="13">CodeFunction2</name> <type:modifier pos:line="4975" pos:column="27">*</type:modifier></type> <name pos:line="4975" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4976" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4976" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="4976" pos:column="54">*</type:modifier><type:modifier pos:line="4976" pos:column="55">*</type:modifier></type><name pos:line="4976" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4978" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4978" pos:column="43">HRESULT</name></type> ( <name pos:line="4978" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4978" pos:column="71">*</type:modifier><name pos:line="4978" pos:column="72">get_Collection</name> )<parameter_list pos:line="4978" pos:column="88">( 
            <param><decl><type><name pos:line="4979" pos:column="13">CodeFunction2</name> <type:modifier pos:line="4979" pos:column="27">*</type:modifier></type> <name pos:line="4979" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4980" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4980" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4980" pos:column="54">CodeElements</name> <type:modifier pos:line="4980" pos:column="67">*</type:modifier><type:modifier pos:line="4980" pos:column="68">*</type:modifier></type><name pos:line="4980" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4982" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4982" pos:column="43">HRESULT</name></type> ( <name pos:line="4982" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4982" pos:column="71">*</type:modifier><name pos:line="4982" pos:column="72">get_Name</name> )<parameter_list pos:line="4982" pos:column="82">( 
            <param><decl><type><name pos:line="4983" pos:column="13">CodeFunction2</name> <type:modifier pos:line="4983" pos:column="27">*</type:modifier></type> <name pos:line="4983" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4984" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4984" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4984" pos:column="54">BSTR</name> <type:modifier pos:line="4984" pos:column="59">*</type:modifier></type><name pos:line="4984" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4986" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="4986" pos:column="43">HRESULT</name></type> ( <name pos:line="4986" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4986" pos:column="71">*</type:modifier><name pos:line="4986" pos:column="72">put_Name</name> )<parameter_list pos:line="4986" pos:column="82">( 
            <param><decl><type><name pos:line="4987" pos:column="13">CodeFunction2</name> <type:modifier pos:line="4987" pos:column="27">*</type:modifier></type> <name pos:line="4987" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4988" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="4988" pos:column="33">__RPC__in</name> <name pos:line="4988" pos:column="43">BSTR</name></type> <name pos:line="4988" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="4989" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4989" pos:column="33">__RPC__out</name> <name pos:line="4989" pos:column="44">void</name> <type:modifier pos:line="4989" pos:column="49">*</type:modifier></type><name pos:line="4989" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4991" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4991" pos:column="43">HRESULT</name></type> ( <name pos:line="4991" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4991" pos:column="71">*</type:modifier><name pos:line="4991" pos:column="72">get_FullName</name> )<parameter_list pos:line="4991" pos:column="86">( 
            <param><decl><type><name pos:line="4992" pos:column="13">CodeFunction2</name> <type:modifier pos:line="4992" pos:column="27">*</type:modifier></type> <name pos:line="4992" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4993" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4993" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4993" pos:column="54">BSTR</name> <type:modifier pos:line="4993" pos:column="59">*</type:modifier></type><name pos:line="4993" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4995" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="4995" pos:column="43">HRESULT</name></type> ( <name pos:line="4995" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="4995" pos:column="71">*</type:modifier><name pos:line="4995" pos:column="72">get_ProjectItem</name> )<parameter_list pos:line="4995" pos:column="89">( 
            <param><decl><type><name pos:line="4996" pos:column="13">CodeFunction2</name> <type:modifier pos:line="4996" pos:column="27">*</type:modifier></type> <name pos:line="4996" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="4997" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="4997" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="4997" pos:column="54">ProjectItem</name> <type:modifier pos:line="4997" pos:column="66">*</type:modifier><type:modifier pos:line="4997" pos:column="67">*</type:modifier></type><name pos:line="4997" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="4999" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="4999" pos:column="43">HRESULT</name> <argument_list pos:line="4999" pos:column="51">( <argument pos:line="4999" pos:column="53">STDMETHODCALLTYPE *get_Kind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="4999" pos:column="82">(</op:operator> 
            <name pos:line="5000" pos:column="13">CodeFunction2</name> <op:operator pos:line="5000" pos:column="27">*</op:operator> <name pos:line="5000" pos:column="29">This</name><op:operator pos:line="5000" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5001" pos:column="13">/* [retval][out] */</comment> <name pos:line="5001" pos:column="33">__RPC__out</name> enum <name pos:line="5001" pos:column="49">vsCMElement</name> <op:operator pos:line="5001" pos:column="61">*</op:operator><name pos:line="5001" pos:column="62">retval</name><op:operator pos:line="5001" pos:column="68">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5003" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5003" pos:column="43">HRESULT</name></type> ( <name pos:line="5003" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5003" pos:column="71">*</type:modifier><name pos:line="5003" pos:column="72">get_IsCodeType</name> )<parameter_list pos:line="5003" pos:column="88">( 
            <param><decl><type><name pos:line="5004" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5004" pos:column="27">*</type:modifier></type> <name pos:line="5004" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5005" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5005" pos:column="33">__RPC__out</name> <name pos:line="5005" pos:column="44">BOOLEAN</name> <type:modifier pos:line="5005" pos:column="52">*</type:modifier></type><name pos:line="5005" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5007" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="5007" pos:column="43">HRESULT</name> <argument_list pos:line="5007" pos:column="51">( <argument pos:line="5007" pos:column="53">STDMETHODCALLTYPE *get_InfoLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5007" pos:column="90">(</op:operator> 
            <name pos:line="5008" pos:column="13">CodeFunction2</name> <op:operator pos:line="5008" pos:column="27">*</op:operator> <name pos:line="5008" pos:column="29">This</name><op:operator pos:line="5008" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5009" pos:column="13">/* [retval][out] */</comment> <name pos:line="5009" pos:column="33">__RPC__out</name> enum <name pos:line="5009" pos:column="49">vsCMInfoLocation</name> <op:operator pos:line="5009" pos:column="66">*</op:operator><name pos:line="5009" pos:column="67">retval</name><op:operator pos:line="5009" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5011" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5011" pos:column="43">HRESULT</name></type> ( <name pos:line="5011" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5011" pos:column="71">*</type:modifier><name pos:line="5011" pos:column="72">get_Children</name> )<parameter_list pos:line="5011" pos:column="86">( 
            <param><decl><type><name pos:line="5012" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5012" pos:column="27">*</type:modifier></type> <name pos:line="5012" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5013" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5013" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5013" pos:column="54">CodeElements</name> <type:modifier pos:line="5013" pos:column="67">*</type:modifier><type:modifier pos:line="5013" pos:column="68">*</type:modifier></type><name pos:line="5013" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5015" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5015" pos:column="43">HRESULT</name></type> ( <name pos:line="5015" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5015" pos:column="71">*</type:modifier><name pos:line="5015" pos:column="72">get_Language</name> )<parameter_list pos:line="5015" pos:column="86">( 
            <param><decl><type><name pos:line="5016" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5016" pos:column="27">*</type:modifier></type> <name pos:line="5016" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5017" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5017" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5017" pos:column="54">BSTR</name> <type:modifier pos:line="5017" pos:column="59">*</type:modifier></type><name pos:line="5017" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5019" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5019" pos:column="43">HRESULT</name></type> ( <name pos:line="5019" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5019" pos:column="71">*</type:modifier><name pos:line="5019" pos:column="72">get_StartPoint</name> )<parameter_list pos:line="5019" pos:column="88">( 
            <param><decl><type><name pos:line="5020" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5020" pos:column="27">*</type:modifier></type> <name pos:line="5020" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5021" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5021" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5021" pos:column="54">TextPoint</name> <type:modifier pos:line="5021" pos:column="64">*</type:modifier><type:modifier pos:line="5021" pos:column="65">*</type:modifier></type><name pos:line="5021" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5023" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5023" pos:column="43">HRESULT</name></type> ( <name pos:line="5023" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5023" pos:column="71">*</type:modifier><name pos:line="5023" pos:column="72">get_EndPoint</name> )<parameter_list pos:line="5023" pos:column="86">( 
            <param><decl><type><name pos:line="5024" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5024" pos:column="27">*</type:modifier></type> <name pos:line="5024" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5025" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5025" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5025" pos:column="54">TextPoint</name> <type:modifier pos:line="5025" pos:column="64">*</type:modifier><type:modifier pos:line="5025" pos:column="65">*</type:modifier></type><name pos:line="5025" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5027" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5027" pos:column="43">HRESULT</name></type> ( <name pos:line="5027" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5027" pos:column="71">*</type:modifier><name pos:line="5027" pos:column="72">get_ExtenderNames</name> )<parameter_list pos:line="5027" pos:column="91">( 
            <param><decl><type><name pos:line="5028" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5028" pos:column="27">*</type:modifier></type> <name pos:line="5028" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5029" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5029" pos:column="33">__RPC__out</name> <name pos:line="5029" pos:column="44">VARIANT</name> <type:modifier pos:line="5029" pos:column="52">*</type:modifier></type><name pos:line="5029" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5031" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5031" pos:column="43">HRESULT</name></type> ( <name pos:line="5031" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5031" pos:column="71">*</type:modifier><name pos:line="5031" pos:column="72">get_Extender</name> )<parameter_list pos:line="5031" pos:column="86">( 
            <param><decl><type><name pos:line="5032" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5032" pos:column="27">*</type:modifier></type> <name pos:line="5032" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5033" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5033" pos:column="33">__RPC__in</name> <name pos:line="5033" pos:column="43">BSTR</name></type> <name pos:line="5033" pos:column="48">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="5034" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5034" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5034" pos:column="54">IDispatch</name> <type:modifier pos:line="5034" pos:column="64">*</type:modifier><type:modifier pos:line="5034" pos:column="65">*</type:modifier></type><name pos:line="5034" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5036" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5036" pos:column="43">HRESULT</name></type> ( <name pos:line="5036" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5036" pos:column="71">*</type:modifier><name pos:line="5036" pos:column="72">get_ExtenderCATID</name> )<parameter_list pos:line="5036" pos:column="91">( 
            <param><decl><type><name pos:line="5037" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5037" pos:column="27">*</type:modifier></type> <name pos:line="5037" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5038" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5038" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5038" pos:column="54">BSTR</name> <type:modifier pos:line="5038" pos:column="59">*</type:modifier></type><name pos:line="5038" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5040" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="5040" pos:column="34">HRESULT</name> <argument_list pos:line="5040" pos:column="42">( <argument pos:line="5040" pos:column="44">STDMETHODCALLTYPE *GetStartPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5040" pos:column="78">(</op:operator> 
            <name pos:line="5041" pos:column="13">CodeFunction2</name> <op:operator pos:line="5041" pos:column="27">*</op:operator> <name pos:line="5041" pos:column="29">This</name><op:operator pos:line="5041" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5042" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="5042" pos:column="42">vsCMPart</name> <name pos:line="5042" pos:column="51">Part</name><op:operator pos:line="5042" pos:column="55">,</op:operator>
            <comment type="block" pos:line="5043" pos:column="13">/* [retval][out] */</comment> <name pos:line="5043" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5043" pos:column="54">TextPoint</name> <op:operator pos:line="5043" pos:column="64">*</op:operator><op:operator pos:line="5043" pos:column="65">*</op:operator><name pos:line="5043" pos:column="66">retval</name><op:operator pos:line="5043" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5045" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="5045" pos:column="34">HRESULT</name> <argument_list pos:line="5045" pos:column="42">( <argument pos:line="5045" pos:column="44">STDMETHODCALLTYPE *GetEndPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5045" pos:column="76">(</op:operator> 
            <name pos:line="5046" pos:column="13">CodeFunction2</name> <op:operator pos:line="5046" pos:column="27">*</op:operator> <name pos:line="5046" pos:column="29">This</name><op:operator pos:line="5046" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5047" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="5047" pos:column="42">vsCMPart</name> <name pos:line="5047" pos:column="51">Part</name><op:operator pos:line="5047" pos:column="55">,</op:operator>
            <comment type="block" pos:line="5048" pos:column="13">/* [retval][out] */</comment> <name pos:line="5048" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5048" pos:column="54">TextPoint</name> <op:operator pos:line="5048" pos:column="64">*</op:operator><op:operator pos:line="5048" pos:column="65">*</op:operator><name pos:line="5048" pos:column="66">retval</name><op:operator pos:line="5048" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5050" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5050" pos:column="43">HRESULT</name></type> ( <name pos:line="5050" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5050" pos:column="71">*</type:modifier><name pos:line="5050" pos:column="72">get_Parent</name> )<parameter_list pos:line="5050" pos:column="84">( 
            <param><decl><type><name pos:line="5051" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5051" pos:column="27">*</type:modifier></type> <name pos:line="5051" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5052" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5052" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5052" pos:column="54">IDispatch</name> <type:modifier pos:line="5052" pos:column="64">*</type:modifier><type:modifier pos:line="5052" pos:column="65">*</type:modifier></type><name pos:line="5052" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5054" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="5054" pos:column="43">HRESULT</name> <argument_list pos:line="5054" pos:column="51">( <argument pos:line="5054" pos:column="53">STDMETHODCALLTYPE *get_FunctionKind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5054" pos:column="90">(</op:operator> 
            <name pos:line="5055" pos:column="13">CodeFunction2</name> <op:operator pos:line="5055" pos:column="27">*</op:operator> <name pos:line="5055" pos:column="29">This</name><op:operator pos:line="5055" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5056" pos:column="13">/* [retval][out] */</comment> <name pos:line="5056" pos:column="33">__RPC__out</name> enum <name pos:line="5056" pos:column="49">vsCMFunction</name> <op:operator pos:line="5056" pos:column="62">*</op:operator><name pos:line="5056" pos:column="63">retval</name><op:operator pos:line="5056" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5058" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5058" pos:column="43">HRESULT</name></type> ( <name pos:line="5058" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5058" pos:column="71">*</type:modifier><name pos:line="5058" pos:column="72">get_Prototype</name> )<parameter_list pos:line="5058" pos:column="87">( 
            <param><decl><type><name pos:line="5059" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5059" pos:column="27">*</type:modifier></type> <name pos:line="5059" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5060" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="5060" pos:column="37">signed</name> <name pos:line="5060" pos:column="44">long</name></type> <name pos:line="5060" pos:column="49">Flags</name></decl></param>,
            <comment type="block" pos:line="5061" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5061" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5061" pos:column="54">BSTR</name> <type:modifier pos:line="5061" pos:column="59">*</type:modifier></type><name pos:line="5061" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5063" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5063" pos:column="43">HRESULT</name></type> ( <name pos:line="5063" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5063" pos:column="71">*</type:modifier><name pos:line="5063" pos:column="72">get_Type</name> )<parameter_list pos:line="5063" pos:column="82">( 
            <param><decl><type><name pos:line="5064" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5064" pos:column="27">*</type:modifier></type> <name pos:line="5064" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5065" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5065" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5065" pos:column="54">CodeTypeRef</name> <type:modifier pos:line="5065" pos:column="66">*</type:modifier><type:modifier pos:line="5065" pos:column="67">*</type:modifier></type><name pos:line="5065" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5067" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5067" pos:column="43">HRESULT</name></type> ( <name pos:line="5067" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5067" pos:column="71">*</type:modifier><name pos:line="5067" pos:column="72">put_Type</name> )<parameter_list pos:line="5067" pos:column="82">( 
            <param><decl><type><name pos:line="5068" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5068" pos:column="27">*</type:modifier></type> <name pos:line="5068" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5069" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5069" pos:column="33">__RPC__in_opt</name> <name pos:line="5069" pos:column="47">CodeTypeRef</name> <type:modifier pos:line="5069" pos:column="59">*</type:modifier></type><name pos:line="5069" pos:column="60">noname</name></decl></param>,
            <comment type="block" pos:line="5070" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5070" pos:column="33">__RPC__out</name> <name pos:line="5070" pos:column="44">void</name> <type:modifier pos:line="5070" pos:column="49">*</type:modifier></type><name pos:line="5070" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5072" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5072" pos:column="43">HRESULT</name></type> ( <name pos:line="5072" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5072" pos:column="71">*</type:modifier><name pos:line="5072" pos:column="72">get_Parameters</name> )<parameter_list pos:line="5072" pos:column="88">( 
            <param><decl><type><name pos:line="5073" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5073" pos:column="27">*</type:modifier></type> <name pos:line="5073" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5074" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5074" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5074" pos:column="54">CodeElements</name> <type:modifier pos:line="5074" pos:column="67">*</type:modifier><type:modifier pos:line="5074" pos:column="68">*</type:modifier></type><name pos:line="5074" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5076" pos:column="9">/* [id][propput][funcdescattr] */</comment> <macro><name pos:line="5076" pos:column="43">HRESULT</name> <argument_list pos:line="5076" pos:column="51">( <argument pos:line="5076" pos:column="53">STDMETHODCALLTYPE *put_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5076" pos:column="84">(</op:operator> 
            <name pos:line="5077" pos:column="13">CodeFunction2</name> <op:operator pos:line="5077" pos:column="27">*</op:operator> <name pos:line="5077" pos:column="29">This</name><op:operator pos:line="5077" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5078" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="5078" pos:column="38">vsCMAccess</name> <name pos:line="5078" pos:column="49">noname</name><op:operator pos:line="5078" pos:column="55">,</op:operator>
            <comment type="block" pos:line="5079" pos:column="13">/* [retval][out] */</comment> <name pos:line="5079" pos:column="33">__RPC__out</name> <name pos:line="5079" pos:column="44">void</name> <op:operator pos:line="5079" pos:column="49">*</op:operator><name pos:line="5079" pos:column="50">retval</name><op:operator pos:line="5079" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5081" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="5081" pos:column="43">HRESULT</name> <argument_list pos:line="5081" pos:column="51">( <argument pos:line="5081" pos:column="53">STDMETHODCALLTYPE *get_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5081" pos:column="84">(</op:operator> 
            <name pos:line="5082" pos:column="13">CodeFunction2</name> <op:operator pos:line="5082" pos:column="27">*</op:operator> <name pos:line="5082" pos:column="29">This</name><op:operator pos:line="5082" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5083" pos:column="13">/* [retval][out] */</comment> <name pos:line="5083" pos:column="33">__RPC__out</name> enum <name pos:line="5083" pos:column="49">vsCMAccess</name> <op:operator pos:line="5083" pos:column="60">*</op:operator><name pos:line="5083" pos:column="61">retval</name><op:operator pos:line="5083" pos:column="67">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5085" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5085" pos:column="43">HRESULT</name></type> ( <name pos:line="5085" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5085" pos:column="71">*</type:modifier><name pos:line="5085" pos:column="72">get_IsOverloaded</name> )<parameter_list pos:line="5085" pos:column="90">( 
            <param><decl><type><name pos:line="5086" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5086" pos:column="27">*</type:modifier></type> <name pos:line="5086" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5087" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5087" pos:column="33">__RPC__out</name> <name pos:line="5087" pos:column="44">BOOLEAN</name> <type:modifier pos:line="5087" pos:column="52">*</type:modifier></type><name pos:line="5087" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5089" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5089" pos:column="43">HRESULT</name></type> ( <name pos:line="5089" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5089" pos:column="71">*</type:modifier><name pos:line="5089" pos:column="72">get_IsShared</name> )<parameter_list pos:line="5089" pos:column="86">( 
            <param><decl><type><name pos:line="5090" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5090" pos:column="27">*</type:modifier></type> <name pos:line="5090" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5091" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5091" pos:column="33">__RPC__out</name> <name pos:line="5091" pos:column="44">BOOLEAN</name> <type:modifier pos:line="5091" pos:column="52">*</type:modifier></type><name pos:line="5091" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5093" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5093" pos:column="43">HRESULT</name></type> ( <name pos:line="5093" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5093" pos:column="71">*</type:modifier><name pos:line="5093" pos:column="72">put_IsShared</name> )<parameter_list pos:line="5093" pos:column="86">( 
            <param><decl><type><name pos:line="5094" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5094" pos:column="27">*</type:modifier></type> <name pos:line="5094" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5095" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5095" pos:column="33">BOOLEAN</name></type> <name pos:line="5095" pos:column="41">noname</name></decl></param>,
            <comment type="block" pos:line="5096" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5096" pos:column="33">__RPC__out</name> <name pos:line="5096" pos:column="44">void</name> <type:modifier pos:line="5096" pos:column="49">*</type:modifier></type><name pos:line="5096" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5098" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5098" pos:column="43">HRESULT</name></type> ( <name pos:line="5098" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5098" pos:column="71">*</type:modifier><name pos:line="5098" pos:column="72">get_MustImplement</name> )<parameter_list pos:line="5098" pos:column="91">( 
            <param><decl><type><name pos:line="5099" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5099" pos:column="27">*</type:modifier></type> <name pos:line="5099" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5100" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5100" pos:column="33">__RPC__out</name> <name pos:line="5100" pos:column="44">BOOLEAN</name> <type:modifier pos:line="5100" pos:column="52">*</type:modifier></type><name pos:line="5100" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5102" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5102" pos:column="43">HRESULT</name></type> ( <name pos:line="5102" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5102" pos:column="71">*</type:modifier><name pos:line="5102" pos:column="72">put_MustImplement</name> )<parameter_list pos:line="5102" pos:column="91">( 
            <param><decl><type><name pos:line="5103" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5103" pos:column="27">*</type:modifier></type> <name pos:line="5103" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5104" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5104" pos:column="33">BOOLEAN</name></type> <name pos:line="5104" pos:column="41">noname</name></decl></param>,
            <comment type="block" pos:line="5105" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5105" pos:column="33">__RPC__out</name> <name pos:line="5105" pos:column="44">void</name> <type:modifier pos:line="5105" pos:column="49">*</type:modifier></type><name pos:line="5105" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5107" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5107" pos:column="43">HRESULT</name></type> ( <name pos:line="5107" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5107" pos:column="71">*</type:modifier><name pos:line="5107" pos:column="72">get_Overloads</name> )<parameter_list pos:line="5107" pos:column="87">( 
            <param><decl><type><name pos:line="5108" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5108" pos:column="27">*</type:modifier></type> <name pos:line="5108" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5109" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5109" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5109" pos:column="54">CodeElements</name> <type:modifier pos:line="5109" pos:column="67">*</type:modifier><type:modifier pos:line="5109" pos:column="68">*</type:modifier></type><name pos:line="5109" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5111" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5111" pos:column="43">HRESULT</name></type> ( <name pos:line="5111" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5111" pos:column="71">*</type:modifier><name pos:line="5111" pos:column="72">get_Attributes</name> )<parameter_list pos:line="5111" pos:column="88">( 
            <param><decl><type><name pos:line="5112" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5112" pos:column="27">*</type:modifier></type> <name pos:line="5112" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5113" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5113" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5113" pos:column="54">CodeElements</name> <type:modifier pos:line="5113" pos:column="67">*</type:modifier><type:modifier pos:line="5113" pos:column="68">*</type:modifier></type><name pos:line="5113" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5115" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5115" pos:column="43">HRESULT</name></type> ( <name pos:line="5115" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5115" pos:column="71">*</type:modifier><name pos:line="5115" pos:column="72">get_DocComment</name> )<parameter_list pos:line="5115" pos:column="88">( 
            <param><decl><type><name pos:line="5116" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5116" pos:column="27">*</type:modifier></type> <name pos:line="5116" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5117" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5117" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5117" pos:column="54">BSTR</name> <type:modifier pos:line="5117" pos:column="59">*</type:modifier></type><name pos:line="5117" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5119" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5119" pos:column="43">HRESULT</name></type> ( <name pos:line="5119" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5119" pos:column="71">*</type:modifier><name pos:line="5119" pos:column="72">put_DocComment</name> )<parameter_list pos:line="5119" pos:column="88">( 
            <param><decl><type><name pos:line="5120" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5120" pos:column="27">*</type:modifier></type> <name pos:line="5120" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5121" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5121" pos:column="33">__RPC__in</name> <name pos:line="5121" pos:column="43">BSTR</name></type> <name pos:line="5121" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="5122" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5122" pos:column="33">__RPC__out</name> <name pos:line="5122" pos:column="44">void</name> <type:modifier pos:line="5122" pos:column="49">*</type:modifier></type><name pos:line="5122" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5124" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5124" pos:column="43">HRESULT</name></type> ( <name pos:line="5124" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5124" pos:column="71">*</type:modifier><name pos:line="5124" pos:column="72">get_Comment</name> )<parameter_list pos:line="5124" pos:column="85">( 
            <param><decl><type><name pos:line="5125" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5125" pos:column="27">*</type:modifier></type> <name pos:line="5125" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5126" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5126" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5126" pos:column="54">BSTR</name> <type:modifier pos:line="5126" pos:column="59">*</type:modifier></type><name pos:line="5126" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5128" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5128" pos:column="43">HRESULT</name></type> ( <name pos:line="5128" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5128" pos:column="71">*</type:modifier><name pos:line="5128" pos:column="72">put_Comment</name> )<parameter_list pos:line="5128" pos:column="85">( 
            <param><decl><type><name pos:line="5129" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5129" pos:column="27">*</type:modifier></type> <name pos:line="5129" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5130" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5130" pos:column="33">__RPC__in</name> <name pos:line="5130" pos:column="43">BSTR</name></type> <name pos:line="5130" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="5131" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5131" pos:column="33">__RPC__out</name> <name pos:line="5131" pos:column="44">void</name> <type:modifier pos:line="5131" pos:column="49">*</type:modifier></type><name pos:line="5131" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5133" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="5133" pos:column="34">HRESULT</name></type> ( <name pos:line="5133" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="5133" pos:column="62">*</type:modifier><name pos:line="5133" pos:column="63">AddParameter</name> )<parameter_list pos:line="5133" pos:column="77">( 
            <param><decl><type><name pos:line="5134" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5134" pos:column="27">*</type:modifier></type> <name pos:line="5134" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5135" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5135" pos:column="33">__RPC__in</name> <name pos:line="5135" pos:column="43">BSTR</name></type> <name pos:line="5135" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="5136" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5136" pos:column="33">VARIANT</name></type> <name pos:line="5136" pos:column="41">Type</name></decl></param>,
            <comment type="block" pos:line="5137" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="5137" pos:column="43">VARIANT</name></type> <name pos:line="5137" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="5138" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5138" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5138" pos:column="54">CodeParameter</name> <type:modifier pos:line="5138" pos:column="68">*</type:modifier><type:modifier pos:line="5138" pos:column="69">*</type:modifier></type><name pos:line="5138" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5140" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="5140" pos:column="34">HRESULT</name></type> ( <name pos:line="5140" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="5140" pos:column="62">*</type:modifier><name pos:line="5140" pos:column="63">AddAttribute</name> )<parameter_list pos:line="5140" pos:column="77">( 
            <param><decl><type><name pos:line="5141" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5141" pos:column="27">*</type:modifier></type> <name pos:line="5141" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5142" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5142" pos:column="33">__RPC__in</name> <name pos:line="5142" pos:column="43">BSTR</name></type> <name pos:line="5142" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="5143" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5143" pos:column="33">__RPC__in</name> <name pos:line="5143" pos:column="43">BSTR</name></type> <name pos:line="5143" pos:column="48">Value</name></decl></param>,
            <comment type="block" pos:line="5144" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="5144" pos:column="43">VARIANT</name></type> <name pos:line="5144" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="5145" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5145" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5145" pos:column="54">CodeAttribute</name> <type:modifier pos:line="5145" pos:column="68">*</type:modifier><type:modifier pos:line="5145" pos:column="69">*</type:modifier></type><name pos:line="5145" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5147" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="5147" pos:column="34">HRESULT</name></type> ( <name pos:line="5147" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="5147" pos:column="62">*</type:modifier><name pos:line="5147" pos:column="63">RemoveParameter</name> )<parameter_list pos:line="5147" pos:column="80">( 
            <param><decl><type><name pos:line="5148" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5148" pos:column="27">*</type:modifier></type> <name pos:line="5148" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5149" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5149" pos:column="33">VARIANT</name></type> <name pos:line="5149" pos:column="41">Element</name></decl></param>,
            <comment type="block" pos:line="5150" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5150" pos:column="33">__RPC__out</name> <name pos:line="5150" pos:column="44">void</name> <type:modifier pos:line="5150" pos:column="49">*</type:modifier></type><name pos:line="5150" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5152" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5152" pos:column="43">HRESULT</name></type> ( <name pos:line="5152" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5152" pos:column="71">*</type:modifier><name pos:line="5152" pos:column="72">get_CanOverride</name> )<parameter_list pos:line="5152" pos:column="89">( 
            <param><decl><type><name pos:line="5153" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5153" pos:column="27">*</type:modifier></type> <name pos:line="5153" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5154" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5154" pos:column="33">__RPC__out</name> <name pos:line="5154" pos:column="44">BOOLEAN</name> <type:modifier pos:line="5154" pos:column="52">*</type:modifier></type><name pos:line="5154" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5156" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5156" pos:column="43">HRESULT</name></type> ( <name pos:line="5156" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5156" pos:column="71">*</type:modifier><name pos:line="5156" pos:column="72">put_CanOverride</name> )<parameter_list pos:line="5156" pos:column="89">( 
            <param><decl><type><name pos:line="5157" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5157" pos:column="27">*</type:modifier></type> <name pos:line="5157" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5158" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5158" pos:column="33">BOOLEAN</name></type> <name pos:line="5158" pos:column="41">noname</name></decl></param>,
            <comment type="block" pos:line="5159" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5159" pos:column="33">__RPC__out</name> <name pos:line="5159" pos:column="44">void</name> <type:modifier pos:line="5159" pos:column="49">*</type:modifier></type><name pos:line="5159" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5161" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="5161" pos:column="73">HRESULT</name></type> ( <name pos:line="5161" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="5161" pos:column="101">*</type:modifier><name pos:line="5161" pos:column="102">get_OverrideKind</name> )<parameter_list pos:line="5161" pos:column="120">( 
            <param><decl><type><name pos:line="5162" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5162" pos:column="27">*</type:modifier></type> <name pos:line="5162" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5163" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5163" pos:column="33">__RPC__out</name> <name pos:line="5163" pos:column="44">vsCMOverrideKind</name> <type:modifier pos:line="5163" pos:column="61">*</type:modifier></type><name pos:line="5163" pos:column="62">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5165" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="5165" pos:column="73">HRESULT</name></type> ( <name pos:line="5165" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="5165" pos:column="101">*</type:modifier><name pos:line="5165" pos:column="102">put_OverrideKind</name> )<parameter_list pos:line="5165" pos:column="120">( 
            <param><decl><type><name pos:line="5166" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5166" pos:column="27">*</type:modifier></type> <name pos:line="5166" pos:column="29">This</name></decl></param>,
            <param><decl><type><name pos:line="5167" pos:column="13">vsCMOverrideKind</name></type> <name pos:line="5167" pos:column="30">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5169" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="5169" pos:column="41">HRESULT</name></type> ( <name pos:line="5169" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="5169" pos:column="69">*</type:modifier><name pos:line="5169" pos:column="70">get_IsGeneric</name> )<parameter_list pos:line="5169" pos:column="85">( 
            <param><decl><type><name pos:line="5170" pos:column="13">CodeFunction2</name> <type:modifier pos:line="5170" pos:column="27">*</type:modifier></type> <name pos:line="5170" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5171" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5171" pos:column="33">__RPC__out</name> <name pos:line="5171" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="5171" pos:column="57">*</type:modifier></type><name pos:line="5171" pos:column="58">pIsGeneric</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5173" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5174" pos:column="7">CodeFunction2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5176" pos:column="5">interface</name></type> <name pos:line="5176" pos:column="15">CodeFunction2</name>
    <argument_list pos:line="5177" pos:column="5">{
        <argument><expr><name pos:line="5178" pos:column="9">CONST_VTBL</name> struct <name pos:line="5178" pos:column="27">CodeFunction2Vtbl</name> <op:operator pos:line="5178" pos:column="45">*</op:operator><name pos:line="5178" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5183" pos:column="1">#<cpp:directive pos:line="5183" pos:column="2">ifdef</cpp:directive> <name pos:line="5183" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5186" pos:column="1">#<cpp:directive pos:line="5186" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5186" pos:column="9">CodeFunction2_QueryInterface</name><parameter_list pos:line="5186" pos:column="37">(<param><type><name pos:line="5186" pos:column="38">This</name></type></param>,<param><type><name pos:line="5186" pos:column="43">riid</name></type></param>,<param><type><name pos:line="5186" pos:column="48">ppvObj</name></type></param>,<param><type><name pos:line="5186" pos:column="55">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5187" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5189" pos:column="1">#<cpp:directive pos:line="5189" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5189" pos:column="9">CodeFunction2_AddRef</name><parameter_list pos:line="5189" pos:column="29">(<param><type><name pos:line="5189" pos:column="30">This</name></type></param>,<param><type><name pos:line="5189" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5190" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5192" pos:column="1">#<cpp:directive pos:line="5192" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5192" pos:column="9">CodeFunction2_Release</name><parameter_list pos:line="5192" pos:column="30">(<param><type><name pos:line="5192" pos:column="31">This</name></type></param>,<param><type><name pos:line="5192" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5193" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5195" pos:column="1">#<cpp:directive pos:line="5195" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5195" pos:column="9">CodeFunction2_GetTypeInfoCount</name><parameter_list pos:line="5195" pos:column="39">(<param><type><name pos:line="5195" pos:column="40">This</name></type></param>,<param><type><name pos:line="5195" pos:column="45">pctinfo</name></type></param>,<param><type><name pos:line="5195" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5196" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5198" pos:column="1">#<cpp:directive pos:line="5198" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5198" pos:column="9">CodeFunction2_GetTypeInfo</name><parameter_list pos:line="5198" pos:column="34">(<param><type><name pos:line="5198" pos:column="35">This</name></type></param>,<param><type><name pos:line="5198" pos:column="40">itinfo</name></type></param>,<param><type><name pos:line="5198" pos:column="47">lcid</name></type></param>,<param><type><name pos:line="5198" pos:column="52">pptinfo</name></type></param>,<param><type><name pos:line="5198" pos:column="60">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5199" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5201" pos:column="1">#<cpp:directive pos:line="5201" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5201" pos:column="9">CodeFunction2_GetIDsOfNames</name><parameter_list pos:line="5201" pos:column="36">(<param><type><name pos:line="5201" pos:column="37">This</name></type></param>,<param><type><name pos:line="5201" pos:column="42">riid</name></type></param>,<param><type><name pos:line="5201" pos:column="47">rgszNames</name></type></param>,<param><type><name pos:line="5201" pos:column="57">cNames</name></type></param>,<param><type><name pos:line="5201" pos:column="64">lcid</name></type></param>,<param><type><name pos:line="5201" pos:column="69">rgdispid</name></type></param>,<param><type><name pos:line="5201" pos:column="78">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5202" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5204" pos:column="1">#<cpp:directive pos:line="5204" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5204" pos:column="9">CodeFunction2_Invoke</name><parameter_list pos:line="5204" pos:column="29">(<param><type><name pos:line="5204" pos:column="30">This</name></type></param>,<param><type><name pos:line="5204" pos:column="35">dispidMember</name></type></param>,<param><type><name pos:line="5204" pos:column="48">riid</name></type></param>,<param><type><name pos:line="5204" pos:column="53">lcid</name></type></param>,<param><type><name pos:line="5204" pos:column="58">wFlags</name></type></param>,<param><type><name pos:line="5204" pos:column="65">pdispparams</name></type></param>,<param><type><name pos:line="5204" pos:column="77">pvarResult</name></type></param>,<param><type><name pos:line="5204" pos:column="88">pexcepinfo</name></type></param>,<param><type><name pos:line="5204" pos:column="99">puArgErr</name></type></param>,<param><type><name pos:line="5204" pos:column="108">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5205" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5207" pos:column="1">#<cpp:directive pos:line="5207" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5207" pos:column="9">CodeFunction2_get_DTE</name><parameter_list pos:line="5207" pos:column="30">(<param><type><name pos:line="5207" pos:column="31">This</name></type></param>,<param><type><name pos:line="5207" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5208" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5210" pos:column="1">#<cpp:directive pos:line="5210" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5210" pos:column="9">CodeFunction2_get_Collection</name><parameter_list pos:line="5210" pos:column="37">(<param><type><name pos:line="5210" pos:column="38">This</name></type></param>,<param><type><name pos:line="5210" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5211" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5213" pos:column="1">#<cpp:directive pos:line="5213" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5213" pos:column="9">CodeFunction2_get_Name</name><parameter_list pos:line="5213" pos:column="31">(<param><type><name pos:line="5213" pos:column="32">This</name></type></param>,<param><type><name pos:line="5213" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5214" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5216" pos:column="1">#<cpp:directive pos:line="5216" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5216" pos:column="9">CodeFunction2_put_Name</name><parameter_list pos:line="5216" pos:column="31">(<param><type><name pos:line="5216" pos:column="32">This</name></type></param>,<param><type><name pos:line="5216" pos:column="37">noname</name></type></param>,<param><type><name pos:line="5216" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5217" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5219" pos:column="1">#<cpp:directive pos:line="5219" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5219" pos:column="9">CodeFunction2_get_FullName</name><parameter_list pos:line="5219" pos:column="35">(<param><type><name pos:line="5219" pos:column="36">This</name></type></param>,<param><type><name pos:line="5219" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5220" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5222" pos:column="1">#<cpp:directive pos:line="5222" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5222" pos:column="9">CodeFunction2_get_ProjectItem</name><parameter_list pos:line="5222" pos:column="38">(<param><type><name pos:line="5222" pos:column="39">This</name></type></param>,<param><type><name pos:line="5222" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5223" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItem(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5225" pos:column="1">#<cpp:directive pos:line="5225" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5225" pos:column="9">CodeFunction2_get_Kind</name><parameter_list pos:line="5225" pos:column="31">(<param><type><name pos:line="5225" pos:column="32">This</name></type></param>,<param><type><name pos:line="5225" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5226" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Kind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5228" pos:column="1">#<cpp:directive pos:line="5228" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5228" pos:column="9">CodeFunction2_get_IsCodeType</name><parameter_list pos:line="5228" pos:column="37">(<param><type><name pos:line="5228" pos:column="38">This</name></type></param>,<param><type><name pos:line="5228" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5229" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsCodeType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5231" pos:column="1">#<cpp:directive pos:line="5231" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5231" pos:column="9">CodeFunction2_get_InfoLocation</name><parameter_list pos:line="5231" pos:column="39">(<param><type><name pos:line="5231" pos:column="40">This</name></type></param>,<param><type><name pos:line="5231" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5232" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InfoLocation(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5234" pos:column="1">#<cpp:directive pos:line="5234" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5234" pos:column="9">CodeFunction2_get_Children</name><parameter_list pos:line="5234" pos:column="35">(<param><type><name pos:line="5234" pos:column="36">This</name></type></param>,<param><type><name pos:line="5234" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5235" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Children(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5237" pos:column="1">#<cpp:directive pos:line="5237" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5237" pos:column="9">CodeFunction2_get_Language</name><parameter_list pos:line="5237" pos:column="35">(<param><type><name pos:line="5237" pos:column="36">This</name></type></param>,<param><type><name pos:line="5237" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5238" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5240" pos:column="1">#<cpp:directive pos:line="5240" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5240" pos:column="9">CodeFunction2_get_StartPoint</name><parameter_list pos:line="5240" pos:column="37">(<param><type><name pos:line="5240" pos:column="38">This</name></type></param>,<param><type><name pos:line="5240" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5241" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5243" pos:column="1">#<cpp:directive pos:line="5243" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5243" pos:column="9">CodeFunction2_get_EndPoint</name><parameter_list pos:line="5243" pos:column="35">(<param><type><name pos:line="5243" pos:column="36">This</name></type></param>,<param><type><name pos:line="5243" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5244" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_EndPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5246" pos:column="1">#<cpp:directive pos:line="5246" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5246" pos:column="9">CodeFunction2_get_ExtenderNames</name><parameter_list pos:line="5246" pos:column="40">(<param><type><name pos:line="5246" pos:column="41">This</name></type></param>,<param><type><name pos:line="5246" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5247" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5249" pos:column="1">#<cpp:directive pos:line="5249" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5249" pos:column="9">CodeFunction2_get_Extender</name><parameter_list pos:line="5249" pos:column="35">(<param><type><name pos:line="5249" pos:column="36">This</name></type></param>,<param><type><name pos:line="5249" pos:column="41">ExtenderName</name></type></param>,<param><type><name pos:line="5249" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5250" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5252" pos:column="1">#<cpp:directive pos:line="5252" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5252" pos:column="9">CodeFunction2_get_ExtenderCATID</name><parameter_list pos:line="5252" pos:column="40">(<param><type><name pos:line="5252" pos:column="41">This</name></type></param>,<param><type><name pos:line="5252" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5253" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5255" pos:column="1">#<cpp:directive pos:line="5255" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5255" pos:column="9">CodeFunction2_GetStartPoint</name><parameter_list pos:line="5255" pos:column="36">(<param><type><name pos:line="5255" pos:column="37">This</name></type></param>,<param><type><name pos:line="5255" pos:column="42">Part</name></type></param>,<param><type><name pos:line="5255" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5256" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStartPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5258" pos:column="1">#<cpp:directive pos:line="5258" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5258" pos:column="9">CodeFunction2_GetEndPoint</name><parameter_list pos:line="5258" pos:column="34">(<param><type><name pos:line="5258" pos:column="35">This</name></type></param>,<param><type><name pos:line="5258" pos:column="40">Part</name></type></param>,<param><type><name pos:line="5258" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5259" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5261" pos:column="1">#<cpp:directive pos:line="5261" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5261" pos:column="9">CodeFunction2_get_Parent</name><parameter_list pos:line="5261" pos:column="33">(<param><type><name pos:line="5261" pos:column="34">This</name></type></param>,<param><type><name pos:line="5261" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5262" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5264" pos:column="1">#<cpp:directive pos:line="5264" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5264" pos:column="9">CodeFunction2_get_FunctionKind</name><parameter_list pos:line="5264" pos:column="39">(<param><type><name pos:line="5264" pos:column="40">This</name></type></param>,<param><type><name pos:line="5264" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5265" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FunctionKind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5267" pos:column="1">#<cpp:directive pos:line="5267" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5267" pos:column="9">CodeFunction2_get_Prototype</name><parameter_list pos:line="5267" pos:column="36">(<param><type><name pos:line="5267" pos:column="37">This</name></type></param>,<param><type><name pos:line="5267" pos:column="42">Flags</name></type></param>,<param><type><name pos:line="5267" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5268" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Prototype(This,Flags,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5270" pos:column="1">#<cpp:directive pos:line="5270" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5270" pos:column="9">CodeFunction2_get_Type</name><parameter_list pos:line="5270" pos:column="31">(<param><type><name pos:line="5270" pos:column="32">This</name></type></param>,<param><type><name pos:line="5270" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5271" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Type(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5273" pos:column="1">#<cpp:directive pos:line="5273" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5273" pos:column="9">CodeFunction2_put_Type</name><parameter_list pos:line="5273" pos:column="31">(<param><type><name pos:line="5273" pos:column="32">This</name></type></param>,<param><type><name pos:line="5273" pos:column="37">noname</name></type></param>,<param><type><name pos:line="5273" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5274" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Type(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5276" pos:column="1">#<cpp:directive pos:line="5276" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5276" pos:column="9">CodeFunction2_get_Parameters</name><parameter_list pos:line="5276" pos:column="37">(<param><type><name pos:line="5276" pos:column="38">This</name></type></param>,<param><type><name pos:line="5276" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5277" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parameters(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5279" pos:column="1">#<cpp:directive pos:line="5279" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5279" pos:column="9">CodeFunction2_put_Access</name><parameter_list pos:line="5279" pos:column="33">(<param><type><name pos:line="5279" pos:column="34">This</name></type></param>,<param><type><name pos:line="5279" pos:column="39">noname</name></type></param>,<param><type><name pos:line="5279" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5280" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Access(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5282" pos:column="1">#<cpp:directive pos:line="5282" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5282" pos:column="9">CodeFunction2_get_Access</name><parameter_list pos:line="5282" pos:column="33">(<param><type><name pos:line="5282" pos:column="34">This</name></type></param>,<param><type><name pos:line="5282" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5283" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Access(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5285" pos:column="1">#<cpp:directive pos:line="5285" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5285" pos:column="9">CodeFunction2_get_IsOverloaded</name><parameter_list pos:line="5285" pos:column="39">(<param><type><name pos:line="5285" pos:column="40">This</name></type></param>,<param><type><name pos:line="5285" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5286" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsOverloaded(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5288" pos:column="1">#<cpp:directive pos:line="5288" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5288" pos:column="9">CodeFunction2_get_IsShared</name><parameter_list pos:line="5288" pos:column="35">(<param><type><name pos:line="5288" pos:column="36">This</name></type></param>,<param><type><name pos:line="5288" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5289" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsShared(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5291" pos:column="1">#<cpp:directive pos:line="5291" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5291" pos:column="9">CodeFunction2_put_IsShared</name><parameter_list pos:line="5291" pos:column="35">(<param><type><name pos:line="5291" pos:column="36">This</name></type></param>,<param><type><name pos:line="5291" pos:column="41">noname</name></type></param>,<param><type><name pos:line="5291" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5292" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_IsShared(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5294" pos:column="1">#<cpp:directive pos:line="5294" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5294" pos:column="9">CodeFunction2_get_MustImplement</name><parameter_list pos:line="5294" pos:column="40">(<param><type><name pos:line="5294" pos:column="41">This</name></type></param>,<param><type><name pos:line="5294" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5295" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_MustImplement(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5297" pos:column="1">#<cpp:directive pos:line="5297" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5297" pos:column="9">CodeFunction2_put_MustImplement</name><parameter_list pos:line="5297" pos:column="40">(<param><type><name pos:line="5297" pos:column="41">This</name></type></param>,<param><type><name pos:line="5297" pos:column="46">noname</name></type></param>,<param><type><name pos:line="5297" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5298" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_MustImplement(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5300" pos:column="1">#<cpp:directive pos:line="5300" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5300" pos:column="9">CodeFunction2_get_Overloads</name><parameter_list pos:line="5300" pos:column="36">(<param><type><name pos:line="5300" pos:column="37">This</name></type></param>,<param><type><name pos:line="5300" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5301" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Overloads(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5303" pos:column="1">#<cpp:directive pos:line="5303" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5303" pos:column="9">CodeFunction2_get_Attributes</name><parameter_list pos:line="5303" pos:column="37">(<param><type><name pos:line="5303" pos:column="38">This</name></type></param>,<param><type><name pos:line="5303" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5304" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Attributes(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5306" pos:column="1">#<cpp:directive pos:line="5306" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5306" pos:column="9">CodeFunction2_get_DocComment</name><parameter_list pos:line="5306" pos:column="37">(<param><type><name pos:line="5306" pos:column="38">This</name></type></param>,<param><type><name pos:line="5306" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5307" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DocComment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5309" pos:column="1">#<cpp:directive pos:line="5309" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5309" pos:column="9">CodeFunction2_put_DocComment</name><parameter_list pos:line="5309" pos:column="37">(<param><type><name pos:line="5309" pos:column="38">This</name></type></param>,<param><type><name pos:line="5309" pos:column="43">noname</name></type></param>,<param><type><name pos:line="5309" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5310" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DocComment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5312" pos:column="1">#<cpp:directive pos:line="5312" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5312" pos:column="9">CodeFunction2_get_Comment</name><parameter_list pos:line="5312" pos:column="34">(<param><type><name pos:line="5312" pos:column="35">This</name></type></param>,<param><type><name pos:line="5312" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5313" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Comment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5315" pos:column="1">#<cpp:directive pos:line="5315" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5315" pos:column="9">CodeFunction2_put_Comment</name><parameter_list pos:line="5315" pos:column="34">(<param><type><name pos:line="5315" pos:column="35">This</name></type></param>,<param><type><name pos:line="5315" pos:column="40">noname</name></type></param>,<param><type><name pos:line="5315" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5316" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Comment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5318" pos:column="1">#<cpp:directive pos:line="5318" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5318" pos:column="9">CodeFunction2_AddParameter</name><parameter_list pos:line="5318" pos:column="35">(<param><type><name pos:line="5318" pos:column="36">This</name></type></param>,<param><type><name pos:line="5318" pos:column="41">Name</name></type></param>,<param><type><name pos:line="5318" pos:column="46">Type</name></type></param>,<param><type><name pos:line="5318" pos:column="51">Position</name></type></param>,<param><type><name pos:line="5318" pos:column="60">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5319" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddParameter(This,Name,Type,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5321" pos:column="1">#<cpp:directive pos:line="5321" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5321" pos:column="9">CodeFunction2_AddAttribute</name><parameter_list pos:line="5321" pos:column="35">(<param><type><name pos:line="5321" pos:column="36">This</name></type></param>,<param><type><name pos:line="5321" pos:column="41">Name</name></type></param>,<param><type><name pos:line="5321" pos:column="46">Value</name></type></param>,<param><type><name pos:line="5321" pos:column="52">Position</name></type></param>,<param><type><name pos:line="5321" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5322" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddAttribute(This,Name,Value,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5324" pos:column="1">#<cpp:directive pos:line="5324" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5324" pos:column="9">CodeFunction2_RemoveParameter</name><parameter_list pos:line="5324" pos:column="38">(<param><type><name pos:line="5324" pos:column="39">This</name></type></param>,<param><type><name pos:line="5324" pos:column="44">Element</name></type></param>,<param><type><name pos:line="5324" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5325" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveParameter(This,Element,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5327" pos:column="1">#<cpp:directive pos:line="5327" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5327" pos:column="9">CodeFunction2_get_CanOverride</name><parameter_list pos:line="5327" pos:column="38">(<param><type><name pos:line="5327" pos:column="39">This</name></type></param>,<param><type><name pos:line="5327" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5328" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CanOverride(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5330" pos:column="1">#<cpp:directive pos:line="5330" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5330" pos:column="9">CodeFunction2_put_CanOverride</name><parameter_list pos:line="5330" pos:column="38">(<param><type><name pos:line="5330" pos:column="39">This</name></type></param>,<param><type><name pos:line="5330" pos:column="44">noname</name></type></param>,<param><type><name pos:line="5330" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5331" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_CanOverride(This,noname,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="5334" pos:column="1">#<cpp:directive pos:line="5334" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5334" pos:column="9">CodeFunction2_get_OverrideKind</name><parameter_list pos:line="5334" pos:column="39">(<param><type><name pos:line="5334" pos:column="40">This</name></type></param>,<param><type><name pos:line="5334" pos:column="45">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5335" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_OverrideKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="5337" pos:column="1">#<cpp:directive pos:line="5337" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5337" pos:column="9">CodeFunction2_put_OverrideKind</name><parameter_list pos:line="5337" pos:column="39">(<param><type><name pos:line="5337" pos:column="40">This</name></type></param>,<param><type><name pos:line="5337" pos:column="45">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5338" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_OverrideKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="5340" pos:column="1">#<cpp:directive pos:line="5340" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5340" pos:column="9">CodeFunction2_get_IsGeneric</name><parameter_list pos:line="5340" pos:column="36">(<param><type><name pos:line="5340" pos:column="37">This</name></type></param>,<param><type><name pos:line="5340" pos:column="42">pIsGeneric</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5341" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsGeneric(This,pIsGeneric) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5343" pos:column="1">#<cpp:directive pos:line="5343" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5343" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5346" pos:column="1">#<cpp:directive pos:line="5346" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5346" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5351" pos:column="1">#<cpp:directive pos:line="5351" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5351" pos:column="9">/* __CodeFunction2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5354" pos:column="1">#<cpp:directive pos:line="5354" pos:column="2">ifndef</cpp:directive> <name pos:line="5354" pos:column="9">__CodeAttribute2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5355" pos:column="1">#<cpp:directive pos:line="5355" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5355" pos:column="9">__CodeAttribute2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5357" pos:column="1">/* interface CodeAttribute2 */</comment>
<comment type="block" pos:line="5358" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="5361" pos:column="1">EXTERN_C</name> <specifier pos:line="5361" pos:column="10">const</specifier> <name pos:line="5361" pos:column="16">IID</name></type> <name pos:line="5361" pos:column="20">IID_CodeAttribute2</name></decl>;</decl_stmt>

<cpp:if pos:line="5363" pos:column="1">#<cpp:directive pos:line="5363" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5363" pos:column="5">defined</name><argument_list pos:line="5363" pos:column="12">(<argument><expr><name pos:line="5363" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5363" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5363" pos:column="29">!</op:operator><call><name pos:line="5363" pos:column="30">defined</name><argument_list pos:line="5363" pos:column="37">(<argument><expr><name pos:line="5363" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5365" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5365" pos:column="19">(<argument pos:line="5365" pos:column="20">"35187E2A-E5F6-4F89-A4CE-DA254640855B"</argument>)</argument_list></macro>
    <label><name pos:line="5366" pos:column="5">CodeAttribute2</name> :</label> <expr_stmt><expr pos:line="5366" pos:column="22">public <name pos:line="5366" pos:column="29">CodeAttribute</name>
    <block pos:line="5367" pos:column="5">{
    <expr pos:line="5368" pos:column="5">public<op:operator pos:line="5368" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="5369" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="5369" pos:column="81">HRESULT</name> <name pos:line="5369" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="5369" pos:column="107">get_Target</name><argument_list pos:line="5369" pos:column="117">( 
            <comment type="block" pos:line="5370" pos:column="13">/* [retval][out] */</comment> <argument pos:line="5370" pos:column="33">__RPC__deref_out_opt BSTR *Target</argument>)</argument_list></macro> <op:operator pos:line="5370" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="5370" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="5372" pos:column="9">virtual <comment type="block" pos:line="5372" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="5372" pos:column="81">HRESULT</name> <name pos:line="5372" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="5372" pos:column="107">put_Target</name><argument_list pos:line="5372" pos:column="117">( 
            <argument pos:line="5373" pos:column="13">__RPC__in BSTR Target</argument>)</argument_list></macro> <op:operator pos:line="5373" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="5373" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="5375" pos:column="9">virtual <comment type="block" pos:line="5375" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="5375" pos:column="72">HRESULT</name> <name pos:line="5375" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="5375" pos:column="98">AddArgument</name><argument_list pos:line="5375" pos:column="109">( 
            <argument pos:line="5376" pos:column="13">__RPC__in BSTR Value</argument>,
            <comment type="block" pos:line="5377" pos:column="13">/* [optional][in] */</comment> <argument pos:line="5377" pos:column="34">VARIANT Name</argument>,
            <comment type="block" pos:line="5378" pos:column="13">/* [optional][in] */</comment> <argument pos:line="5378" pos:column="34">VARIANT Position</argument>,
            <comment type="block" pos:line="5379" pos:column="13">/* [retval][out] */</comment> <argument pos:line="5379" pos:column="33">__RPC__deref_out_opt CodeAttributeArgument **Argument</argument>)</argument_list></macro> <op:operator pos:line="5379" pos:column="88">=</op:operator> <lit:literal type="number" pos:line="5379" pos:column="90">0</lit:literal></expr>;
        
        <expr pos:line="5381" pos:column="9">virtual <comment type="block" pos:line="5381" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="5381" pos:column="49">HRESULT</name> <name pos:line="5381" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="5381" pos:column="75">get_Arguments</name><argument_list pos:line="5381" pos:column="88">( 
            <comment type="block" pos:line="5382" pos:column="13">/* [retval][out] */</comment> <argument pos:line="5382" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="5382" pos:column="54">/* external definition not present */</comment> CodeElements **ppCodeAttributeArguments</argument>)</argument_list></macro> <op:operator pos:line="5382" pos:column="133">=</op:operator> <lit:literal type="number" pos:line="5382" pos:column="135">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5386" pos:column="1">#<cpp:directive pos:line="5386" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5386" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5388" pos:column="5">typedef <type><struct pos:line="5388" pos:column="13">struct <name pos:line="5388" pos:column="20">CodeAttribute2Vtbl</name>
    <block pos:line="5389" pos:column="5">{<public type="default" pos:line="5389" pos:column="6">
        <decl_stmt><decl><type><name pos:line="5390" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="5392" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="5392" pos:column="46">HRESULT</name></type> ( <name pos:line="5392" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="5392" pos:column="74">*</type:modifier><name pos:line="5392" pos:column="75">QueryInterface</name> )<parameter_list pos:line="5392" pos:column="91">( 
            <param><decl><type><name pos:line="5393" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5393" pos:column="28">*</type:modifier></type> <name pos:line="5393" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5394" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="5394" pos:column="47">struct <name pos:line="5394" pos:column="54">GUID</name> <type:modifier pos:line="5394" pos:column="59">*</type:modifier></type><name pos:line="5394" pos:column="60">riid</name></decl><op:operator pos:line="5394" pos:column="64">,</op:operator>
            <comment type="block" pos:line="5395" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="5395" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="5395" pos:column="59">void</name> <type:modifier pos:line="5395" pos:column="64">*</type:modifier><type:modifier pos:line="5395" pos:column="65">*</type:modifier><name pos:line="5395" pos:column="66">ppvObj</name><op:operator pos:line="5395" pos:column="72">,</op:operator>
            <comment type="block" pos:line="5396" pos:column="13">/* [retval][out] */</comment> <name pos:line="5396" pos:column="33">__RPC__out</name> <name pos:line="5396" pos:column="44">void</name> <type:modifier pos:line="5396" pos:column="49">*</type:modifier><name pos:line="5396" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="5398" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="5398" pos:column="46">HRESULT</name></type> ( <name pos:line="5398" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="5398" pos:column="74">*</type:modifier><name pos:line="5398" pos:column="75">AddRef</name> )<parameter_list pos:line="5398" pos:column="83">( 
            <param><decl><type><name pos:line="5399" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5399" pos:column="28">*</type:modifier></type> <name pos:line="5399" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5400" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5400" pos:column="33">__RPC__out</name> <name pos:line="5400" pos:column="44">unsigned</name> <name pos:line="5400" pos:column="53">long</name> <type:modifier pos:line="5400" pos:column="58">*</type:modifier></type><name pos:line="5400" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5402" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="5402" pos:column="46">HRESULT</name></type> ( <name pos:line="5402" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="5402" pos:column="74">*</type:modifier><name pos:line="5402" pos:column="75">Release</name> )<parameter_list pos:line="5402" pos:column="84">( 
            <param><decl><type><name pos:line="5403" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5403" pos:column="28">*</type:modifier></type> <name pos:line="5403" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5404" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5404" pos:column="33">__RPC__out</name> <name pos:line="5404" pos:column="44">unsigned</name> <name pos:line="5404" pos:column="53">long</name> <type:modifier pos:line="5404" pos:column="58">*</type:modifier></type><name pos:line="5404" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5406" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="5406" pos:column="46">HRESULT</name></type> ( <name pos:line="5406" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="5406" pos:column="74">*</type:modifier><name pos:line="5406" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="5406" pos:column="93">( 
            <param><decl><type><name pos:line="5407" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5407" pos:column="28">*</type:modifier></type> <name pos:line="5407" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5408" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="5408" pos:column="38">__RPC__out</name> <name pos:line="5408" pos:column="49">unsigned</name> <name pos:line="5408" pos:column="58">UINT</name> <type:modifier pos:line="5408" pos:column="63">*</type:modifier></type><name pos:line="5408" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="5409" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5409" pos:column="33">__RPC__out</name> <name pos:line="5409" pos:column="44">void</name> <type:modifier pos:line="5409" pos:column="49">*</type:modifier></type><name pos:line="5409" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5411" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="5411" pos:column="46">HRESULT</name></type> ( <name pos:line="5411" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="5411" pos:column="74">*</type:modifier><name pos:line="5411" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="5411" pos:column="88">( 
            <param><decl><type><name pos:line="5412" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5412" pos:column="28">*</type:modifier></type> <name pos:line="5412" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5413" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="5413" pos:column="37">unsigned</name> <name pos:line="5413" pos:column="46">UINT</name></type> <name pos:line="5413" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="5414" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="5414" pos:column="37">unsigned</name> <name pos:line="5414" pos:column="46">long</name></type> <name pos:line="5414" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="5415" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="5415" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="5415" pos:column="59">void</name> <type:modifier pos:line="5415" pos:column="64">*</type:modifier><type:modifier pos:line="5415" pos:column="65">*</type:modifier></type><name pos:line="5415" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="5416" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5416" pos:column="33">__RPC__out</name> <name pos:line="5416" pos:column="44">void</name> <type:modifier pos:line="5416" pos:column="49">*</type:modifier></type><name pos:line="5416" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5418" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="5418" pos:column="46">HRESULT</name> <argument_list pos:line="5418" pos:column="54">( <argument pos:line="5418" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5418" pos:column="90">(</op:operator> 
            <name pos:line="5419" pos:column="13">CodeAttribute2</name> <op:operator pos:line="5419" pos:column="28">*</op:operator> <name pos:line="5419" pos:column="30">This</name><op:operator pos:line="5419" pos:column="34">,</op:operator>
            <comment type="block" pos:line="5420" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5420" pos:column="37">__RPC__in</name> struct <name pos:line="5420" pos:column="54">GUID</name> <op:operator pos:line="5420" pos:column="59">*</op:operator><name pos:line="5420" pos:column="60">riid</name><op:operator pos:line="5420" pos:column="64">,</op:operator>
            <comment type="block" pos:line="5421" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5421" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="5421" pos:column="57">signed</name> <name pos:line="5421" pos:column="64">char</name> <op:operator pos:line="5421" pos:column="69">*</op:operator><op:operator pos:line="5421" pos:column="70">*</op:operator><name pos:line="5421" pos:column="71">rgszNames</name><op:operator pos:line="5421" pos:column="80">,</op:operator>
            <comment type="block" pos:line="5422" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5422" pos:column="37">unsigned</name> <name pos:line="5422" pos:column="46">UINT</name> <name pos:line="5422" pos:column="51">cNames</name><op:operator pos:line="5422" pos:column="57">,</op:operator>
            <comment type="block" pos:line="5423" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5423" pos:column="37">unsigned</name> <name pos:line="5423" pos:column="46">long</name> <name pos:line="5423" pos:column="51">lcid</name><op:operator pos:line="5423" pos:column="55">,</op:operator>
            <comment type="block" pos:line="5424" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="5424" pos:column="38">__RPC__out</name> <name pos:line="5424" pos:column="49">signed</name> <name pos:line="5424" pos:column="56">long</name> <op:operator pos:line="5424" pos:column="61">*</op:operator><name pos:line="5424" pos:column="62">rgdispid</name><op:operator pos:line="5424" pos:column="70">,</op:operator>
            <comment type="block" pos:line="5425" pos:column="13">/* [retval][out] */</comment> <name pos:line="5425" pos:column="33">__RPC__out</name> <name pos:line="5425" pos:column="44">void</name> <op:operator pos:line="5425" pos:column="49">*</op:operator><name pos:line="5425" pos:column="50">retval</name><op:operator pos:line="5425" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5427" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="5427" pos:column="46">HRESULT</name> <argument_list pos:line="5427" pos:column="54">( <argument pos:line="5427" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5427" pos:column="83">(</op:operator> 
            <name pos:line="5428" pos:column="13">CodeAttribute2</name> <op:operator pos:line="5428" pos:column="28">*</op:operator> <name pos:line="5428" pos:column="30">This</name><op:operator pos:line="5428" pos:column="34">,</op:operator>
            <comment type="block" pos:line="5429" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5429" pos:column="37">signed</name> <name pos:line="5429" pos:column="44">long</name> <name pos:line="5429" pos:column="49">dispidMember</name><op:operator pos:line="5429" pos:column="61">,</op:operator>
            <comment type="block" pos:line="5430" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5430" pos:column="37">__RPC__in</name> struct <name pos:line="5430" pos:column="54">GUID</name> <op:operator pos:line="5430" pos:column="59">*</op:operator><name pos:line="5430" pos:column="60">riid</name><op:operator pos:line="5430" pos:column="64">,</op:operator>
            <comment type="block" pos:line="5431" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5431" pos:column="37">unsigned</name> <name pos:line="5431" pos:column="46">long</name> <name pos:line="5431" pos:column="51">lcid</name><op:operator pos:line="5431" pos:column="55">,</op:operator>
            <comment type="block" pos:line="5432" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5432" pos:column="37">unsigned</name> <name pos:line="5432" pos:column="46">short</name> <name pos:line="5432" pos:column="52">wFlags</name><op:operator pos:line="5432" pos:column="58">,</op:operator>
            <comment type="block" pos:line="5433" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5433" pos:column="37">__RPC__in</name> struct <name pos:line="5433" pos:column="54">DISPPARAMS</name> <op:operator pos:line="5433" pos:column="65">*</op:operator><name pos:line="5433" pos:column="66">pdispparams</name><op:operator pos:line="5433" pos:column="77">,</op:operator>
            <comment type="block" pos:line="5434" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="5434" pos:column="38">__RPC__out</name> <name pos:line="5434" pos:column="49">VARIANT</name> <op:operator pos:line="5434" pos:column="57">*</op:operator><name pos:line="5434" pos:column="58">pvarResult</name><op:operator pos:line="5434" pos:column="68">,</op:operator>
            <comment type="block" pos:line="5435" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="5435" pos:column="38">__RPC__out</name> struct <name pos:line="5435" pos:column="56">EXCEPINFO</name> <op:operator pos:line="5435" pos:column="66">*</op:operator><name pos:line="5435" pos:column="67">pexcepinfo</name><op:operator pos:line="5435" pos:column="77">,</op:operator>
            <comment type="block" pos:line="5436" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="5436" pos:column="38">__RPC__out</name> <name pos:line="5436" pos:column="49">unsigned</name> <name pos:line="5436" pos:column="58">UINT</name> <op:operator pos:line="5436" pos:column="63">*</op:operator><name pos:line="5436" pos:column="64">puArgErr</name><op:operator pos:line="5436" pos:column="72">,</op:operator>
            <comment type="block" pos:line="5437" pos:column="13">/* [retval][out] */</comment> <name pos:line="5437" pos:column="33">__RPC__out</name> <name pos:line="5437" pos:column="44">void</name> <op:operator pos:line="5437" pos:column="49">*</op:operator><name pos:line="5437" pos:column="50">retval</name><op:operator pos:line="5437" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5439" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5439" pos:column="43">HRESULT</name></type> ( <name pos:line="5439" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5439" pos:column="71">*</type:modifier><name pos:line="5439" pos:column="72">get_DTE</name> )<parameter_list pos:line="5439" pos:column="81">( 
            <param><decl><type><name pos:line="5440" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5440" pos:column="28">*</type:modifier></type> <name pos:line="5440" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5441" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5441" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="5441" pos:column="54">*</type:modifier><type:modifier pos:line="5441" pos:column="55">*</type:modifier></type><name pos:line="5441" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5443" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5443" pos:column="43">HRESULT</name></type> ( <name pos:line="5443" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5443" pos:column="71">*</type:modifier><name pos:line="5443" pos:column="72">get_Collection</name> )<parameter_list pos:line="5443" pos:column="88">( 
            <param><decl><type><name pos:line="5444" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5444" pos:column="28">*</type:modifier></type> <name pos:line="5444" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5445" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5445" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5445" pos:column="54">CodeElements</name> <type:modifier pos:line="5445" pos:column="67">*</type:modifier><type:modifier pos:line="5445" pos:column="68">*</type:modifier></type><name pos:line="5445" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5447" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5447" pos:column="43">HRESULT</name></type> ( <name pos:line="5447" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5447" pos:column="71">*</type:modifier><name pos:line="5447" pos:column="72">get_Name</name> )<parameter_list pos:line="5447" pos:column="82">( 
            <param><decl><type><name pos:line="5448" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5448" pos:column="28">*</type:modifier></type> <name pos:line="5448" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5449" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5449" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5449" pos:column="54">BSTR</name> <type:modifier pos:line="5449" pos:column="59">*</type:modifier></type><name pos:line="5449" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5451" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5451" pos:column="43">HRESULT</name></type> ( <name pos:line="5451" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5451" pos:column="71">*</type:modifier><name pos:line="5451" pos:column="72">put_Name</name> )<parameter_list pos:line="5451" pos:column="82">( 
            <param><decl><type><name pos:line="5452" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5452" pos:column="28">*</type:modifier></type> <name pos:line="5452" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5453" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5453" pos:column="33">__RPC__in</name> <name pos:line="5453" pos:column="43">BSTR</name></type> <name pos:line="5453" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="5454" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5454" pos:column="33">__RPC__out</name> <name pos:line="5454" pos:column="44">void</name> <type:modifier pos:line="5454" pos:column="49">*</type:modifier></type><name pos:line="5454" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5456" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5456" pos:column="43">HRESULT</name></type> ( <name pos:line="5456" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5456" pos:column="71">*</type:modifier><name pos:line="5456" pos:column="72">get_FullName</name> )<parameter_list pos:line="5456" pos:column="86">( 
            <param><decl><type><name pos:line="5457" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5457" pos:column="28">*</type:modifier></type> <name pos:line="5457" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5458" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5458" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5458" pos:column="54">BSTR</name> <type:modifier pos:line="5458" pos:column="59">*</type:modifier></type><name pos:line="5458" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5460" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5460" pos:column="43">HRESULT</name></type> ( <name pos:line="5460" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5460" pos:column="71">*</type:modifier><name pos:line="5460" pos:column="72">get_ProjectItem</name> )<parameter_list pos:line="5460" pos:column="89">( 
            <param><decl><type><name pos:line="5461" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5461" pos:column="28">*</type:modifier></type> <name pos:line="5461" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5462" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5462" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5462" pos:column="54">ProjectItem</name> <type:modifier pos:line="5462" pos:column="66">*</type:modifier><type:modifier pos:line="5462" pos:column="67">*</type:modifier></type><name pos:line="5462" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5464" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="5464" pos:column="43">HRESULT</name> <argument_list pos:line="5464" pos:column="51">( <argument pos:line="5464" pos:column="53">STDMETHODCALLTYPE *get_Kind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5464" pos:column="82">(</op:operator> 
            <name pos:line="5465" pos:column="13">CodeAttribute2</name> <op:operator pos:line="5465" pos:column="28">*</op:operator> <name pos:line="5465" pos:column="30">This</name><op:operator pos:line="5465" pos:column="34">,</op:operator>
            <comment type="block" pos:line="5466" pos:column="13">/* [retval][out] */</comment> <name pos:line="5466" pos:column="33">__RPC__out</name> enum <name pos:line="5466" pos:column="49">vsCMElement</name> <op:operator pos:line="5466" pos:column="61">*</op:operator><name pos:line="5466" pos:column="62">retval</name><op:operator pos:line="5466" pos:column="68">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5468" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5468" pos:column="43">HRESULT</name></type> ( <name pos:line="5468" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5468" pos:column="71">*</type:modifier><name pos:line="5468" pos:column="72">get_IsCodeType</name> )<parameter_list pos:line="5468" pos:column="88">( 
            <param><decl><type><name pos:line="5469" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5469" pos:column="28">*</type:modifier></type> <name pos:line="5469" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5470" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5470" pos:column="33">__RPC__out</name> <name pos:line="5470" pos:column="44">BOOLEAN</name> <type:modifier pos:line="5470" pos:column="52">*</type:modifier></type><name pos:line="5470" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5472" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="5472" pos:column="43">HRESULT</name> <argument_list pos:line="5472" pos:column="51">( <argument pos:line="5472" pos:column="53">STDMETHODCALLTYPE *get_InfoLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5472" pos:column="90">(</op:operator> 
            <name pos:line="5473" pos:column="13">CodeAttribute2</name> <op:operator pos:line="5473" pos:column="28">*</op:operator> <name pos:line="5473" pos:column="30">This</name><op:operator pos:line="5473" pos:column="34">,</op:operator>
            <comment type="block" pos:line="5474" pos:column="13">/* [retval][out] */</comment> <name pos:line="5474" pos:column="33">__RPC__out</name> enum <name pos:line="5474" pos:column="49">vsCMInfoLocation</name> <op:operator pos:line="5474" pos:column="66">*</op:operator><name pos:line="5474" pos:column="67">retval</name><op:operator pos:line="5474" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5476" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5476" pos:column="43">HRESULT</name></type> ( <name pos:line="5476" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5476" pos:column="71">*</type:modifier><name pos:line="5476" pos:column="72">get_Children</name> )<parameter_list pos:line="5476" pos:column="86">( 
            <param><decl><type><name pos:line="5477" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5477" pos:column="28">*</type:modifier></type> <name pos:line="5477" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5478" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5478" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5478" pos:column="54">CodeElements</name> <type:modifier pos:line="5478" pos:column="67">*</type:modifier><type:modifier pos:line="5478" pos:column="68">*</type:modifier></type><name pos:line="5478" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5480" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5480" pos:column="43">HRESULT</name></type> ( <name pos:line="5480" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5480" pos:column="71">*</type:modifier><name pos:line="5480" pos:column="72">get_Language</name> )<parameter_list pos:line="5480" pos:column="86">( 
            <param><decl><type><name pos:line="5481" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5481" pos:column="28">*</type:modifier></type> <name pos:line="5481" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5482" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5482" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5482" pos:column="54">BSTR</name> <type:modifier pos:line="5482" pos:column="59">*</type:modifier></type><name pos:line="5482" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5484" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5484" pos:column="43">HRESULT</name></type> ( <name pos:line="5484" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5484" pos:column="71">*</type:modifier><name pos:line="5484" pos:column="72">get_StartPoint</name> )<parameter_list pos:line="5484" pos:column="88">( 
            <param><decl><type><name pos:line="5485" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5485" pos:column="28">*</type:modifier></type> <name pos:line="5485" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5486" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5486" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5486" pos:column="54">TextPoint</name> <type:modifier pos:line="5486" pos:column="64">*</type:modifier><type:modifier pos:line="5486" pos:column="65">*</type:modifier></type><name pos:line="5486" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5488" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5488" pos:column="43">HRESULT</name></type> ( <name pos:line="5488" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5488" pos:column="71">*</type:modifier><name pos:line="5488" pos:column="72">get_EndPoint</name> )<parameter_list pos:line="5488" pos:column="86">( 
            <param><decl><type><name pos:line="5489" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5489" pos:column="28">*</type:modifier></type> <name pos:line="5489" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5490" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5490" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5490" pos:column="54">TextPoint</name> <type:modifier pos:line="5490" pos:column="64">*</type:modifier><type:modifier pos:line="5490" pos:column="65">*</type:modifier></type><name pos:line="5490" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5492" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5492" pos:column="43">HRESULT</name></type> ( <name pos:line="5492" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5492" pos:column="71">*</type:modifier><name pos:line="5492" pos:column="72">get_ExtenderNames</name> )<parameter_list pos:line="5492" pos:column="91">( 
            <param><decl><type><name pos:line="5493" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5493" pos:column="28">*</type:modifier></type> <name pos:line="5493" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5494" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5494" pos:column="33">__RPC__out</name> <name pos:line="5494" pos:column="44">VARIANT</name> <type:modifier pos:line="5494" pos:column="52">*</type:modifier></type><name pos:line="5494" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5496" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5496" pos:column="43">HRESULT</name></type> ( <name pos:line="5496" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5496" pos:column="71">*</type:modifier><name pos:line="5496" pos:column="72">get_Extender</name> )<parameter_list pos:line="5496" pos:column="86">( 
            <param><decl><type><name pos:line="5497" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5497" pos:column="28">*</type:modifier></type> <name pos:line="5497" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5498" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5498" pos:column="33">__RPC__in</name> <name pos:line="5498" pos:column="43">BSTR</name></type> <name pos:line="5498" pos:column="48">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="5499" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5499" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5499" pos:column="54">IDispatch</name> <type:modifier pos:line="5499" pos:column="64">*</type:modifier><type:modifier pos:line="5499" pos:column="65">*</type:modifier></type><name pos:line="5499" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5501" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5501" pos:column="43">HRESULT</name></type> ( <name pos:line="5501" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5501" pos:column="71">*</type:modifier><name pos:line="5501" pos:column="72">get_ExtenderCATID</name> )<parameter_list pos:line="5501" pos:column="91">( 
            <param><decl><type><name pos:line="5502" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5502" pos:column="28">*</type:modifier></type> <name pos:line="5502" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5503" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5503" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5503" pos:column="54">BSTR</name> <type:modifier pos:line="5503" pos:column="59">*</type:modifier></type><name pos:line="5503" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5505" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="5505" pos:column="34">HRESULT</name> <argument_list pos:line="5505" pos:column="42">( <argument pos:line="5505" pos:column="44">STDMETHODCALLTYPE *GetStartPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5505" pos:column="78">(</op:operator> 
            <name pos:line="5506" pos:column="13">CodeAttribute2</name> <op:operator pos:line="5506" pos:column="28">*</op:operator> <name pos:line="5506" pos:column="30">This</name><op:operator pos:line="5506" pos:column="34">,</op:operator>
            <comment type="block" pos:line="5507" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="5507" pos:column="42">vsCMPart</name> <name pos:line="5507" pos:column="51">Part</name><op:operator pos:line="5507" pos:column="55">,</op:operator>
            <comment type="block" pos:line="5508" pos:column="13">/* [retval][out] */</comment> <name pos:line="5508" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5508" pos:column="54">TextPoint</name> <op:operator pos:line="5508" pos:column="64">*</op:operator><op:operator pos:line="5508" pos:column="65">*</op:operator><name pos:line="5508" pos:column="66">retval</name><op:operator pos:line="5508" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5510" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="5510" pos:column="34">HRESULT</name> <argument_list pos:line="5510" pos:column="42">( <argument pos:line="5510" pos:column="44">STDMETHODCALLTYPE *GetEndPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5510" pos:column="76">(</op:operator> 
            <name pos:line="5511" pos:column="13">CodeAttribute2</name> <op:operator pos:line="5511" pos:column="28">*</op:operator> <name pos:line="5511" pos:column="30">This</name><op:operator pos:line="5511" pos:column="34">,</op:operator>
            <comment type="block" pos:line="5512" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="5512" pos:column="42">vsCMPart</name> <name pos:line="5512" pos:column="51">Part</name><op:operator pos:line="5512" pos:column="55">,</op:operator>
            <comment type="block" pos:line="5513" pos:column="13">/* [retval][out] */</comment> <name pos:line="5513" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5513" pos:column="54">TextPoint</name> <op:operator pos:line="5513" pos:column="64">*</op:operator><op:operator pos:line="5513" pos:column="65">*</op:operator><name pos:line="5513" pos:column="66">retval</name><op:operator pos:line="5513" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5515" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5515" pos:column="43">HRESULT</name></type> ( <name pos:line="5515" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5515" pos:column="71">*</type:modifier><name pos:line="5515" pos:column="72">get_Parent</name> )<parameter_list pos:line="5515" pos:column="84">( 
            <param><decl><type><name pos:line="5516" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5516" pos:column="28">*</type:modifier></type> <name pos:line="5516" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5517" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5517" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5517" pos:column="54">IDispatch</name> <type:modifier pos:line="5517" pos:column="64">*</type:modifier><type:modifier pos:line="5517" pos:column="65">*</type:modifier></type><name pos:line="5517" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5519" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5519" pos:column="43">HRESULT</name></type> ( <name pos:line="5519" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5519" pos:column="71">*</type:modifier><name pos:line="5519" pos:column="72">get_Value</name> )<parameter_list pos:line="5519" pos:column="83">( 
            <param><decl><type><name pos:line="5520" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5520" pos:column="28">*</type:modifier></type> <name pos:line="5520" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5521" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5521" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5521" pos:column="54">BSTR</name> <type:modifier pos:line="5521" pos:column="59">*</type:modifier></type><name pos:line="5521" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5523" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5523" pos:column="43">HRESULT</name></type> ( <name pos:line="5523" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5523" pos:column="71">*</type:modifier><name pos:line="5523" pos:column="72">put_Value</name> )<parameter_list pos:line="5523" pos:column="83">( 
            <param><decl><type><name pos:line="5524" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5524" pos:column="28">*</type:modifier></type> <name pos:line="5524" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5525" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5525" pos:column="33">__RPC__in</name> <name pos:line="5525" pos:column="43">BSTR</name></type> <name pos:line="5525" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="5526" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5526" pos:column="33">__RPC__out</name> <name pos:line="5526" pos:column="44">void</name> <type:modifier pos:line="5526" pos:column="49">*</type:modifier></type><name pos:line="5526" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5528" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="5528" pos:column="34">HRESULT</name></type> ( <name pos:line="5528" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="5528" pos:column="62">*</type:modifier><name pos:line="5528" pos:column="63">Delete</name> )<parameter_list pos:line="5528" pos:column="71">( 
            <param><decl><type><name pos:line="5529" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5529" pos:column="28">*</type:modifier></type> <name pos:line="5529" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5530" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5530" pos:column="33">__RPC__out</name> <name pos:line="5530" pos:column="44">void</name> <type:modifier pos:line="5530" pos:column="49">*</type:modifier></type><name pos:line="5530" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5532" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="5532" pos:column="73">HRESULT</name></type> ( <name pos:line="5532" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="5532" pos:column="101">*</type:modifier><name pos:line="5532" pos:column="102">get_Target</name> )<parameter_list pos:line="5532" pos:column="114">( 
            <param><decl><type><name pos:line="5533" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5533" pos:column="28">*</type:modifier></type> <name pos:line="5533" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5534" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5534" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5534" pos:column="54">BSTR</name> <type:modifier pos:line="5534" pos:column="59">*</type:modifier></type><name pos:line="5534" pos:column="60">Target</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5536" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="5536" pos:column="73">HRESULT</name></type> ( <name pos:line="5536" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="5536" pos:column="101">*</type:modifier><name pos:line="5536" pos:column="102">put_Target</name> )<parameter_list pos:line="5536" pos:column="114">( 
            <param><decl><type><name pos:line="5537" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5537" pos:column="28">*</type:modifier></type> <name pos:line="5537" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="5538" pos:column="13">__RPC__in</name> <name pos:line="5538" pos:column="23">BSTR</name></type> <name pos:line="5538" pos:column="28">Target</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5540" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="5540" pos:column="64">HRESULT</name></type> ( <name pos:line="5540" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="5540" pos:column="92">*</type:modifier><name pos:line="5540" pos:column="93">AddArgument</name> )<parameter_list pos:line="5540" pos:column="106">( 
            <param><decl><type><name pos:line="5541" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5541" pos:column="28">*</type:modifier></type> <name pos:line="5541" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="5542" pos:column="13">__RPC__in</name> <name pos:line="5542" pos:column="23">BSTR</name></type> <name pos:line="5542" pos:column="28">Value</name></decl></param>,
            <comment type="block" pos:line="5543" pos:column="13">/* [optional][in] */</comment> <param><decl><type><name pos:line="5543" pos:column="34">VARIANT</name></type> <name pos:line="5543" pos:column="42">Name</name></decl></param>,
            <comment type="block" pos:line="5544" pos:column="13">/* [optional][in] */</comment> <param><decl><type><name pos:line="5544" pos:column="34">VARIANT</name></type> <name pos:line="5544" pos:column="42">Position</name></decl></param>,
            <comment type="block" pos:line="5545" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5545" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5545" pos:column="54">CodeAttributeArgument</name> <type:modifier pos:line="5545" pos:column="76">*</type:modifier><type:modifier pos:line="5545" pos:column="77">*</type:modifier></type><name pos:line="5545" pos:column="78">Argument</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5547" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="5547" pos:column="41">HRESULT</name></type> ( <name pos:line="5547" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="5547" pos:column="69">*</type:modifier><name pos:line="5547" pos:column="70">get_Arguments</name> )<parameter_list pos:line="5547" pos:column="85">( 
            <param><decl><type><name pos:line="5548" pos:column="13">CodeAttribute2</name> <type:modifier pos:line="5548" pos:column="28">*</type:modifier></type> <name pos:line="5548" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="5549" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5549" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="5549" pos:column="54">/* external definition not present */</comment> <name pos:line="5549" pos:column="92">CodeElements</name> <type:modifier pos:line="5549" pos:column="105">*</type:modifier><type:modifier pos:line="5549" pos:column="106">*</type:modifier></type><name pos:line="5549" pos:column="107">ppCodeAttributeArguments</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5551" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5552" pos:column="7">CodeAttribute2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5554" pos:column="5">interface</name></type> <name pos:line="5554" pos:column="15">CodeAttribute2</name>
    <argument_list pos:line="5555" pos:column="5">{
        <argument><expr><name pos:line="5556" pos:column="9">CONST_VTBL</name> struct <name pos:line="5556" pos:column="27">CodeAttribute2Vtbl</name> <op:operator pos:line="5556" pos:column="46">*</op:operator><name pos:line="5556" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5561" pos:column="1">#<cpp:directive pos:line="5561" pos:column="2">ifdef</cpp:directive> <name pos:line="5561" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5564" pos:column="1">#<cpp:directive pos:line="5564" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5564" pos:column="9">CodeAttribute2_QueryInterface</name><parameter_list pos:line="5564" pos:column="38">(<param><type><name pos:line="5564" pos:column="39">This</name></type></param>,<param><type><name pos:line="5564" pos:column="44">riid</name></type></param>,<param><type><name pos:line="5564" pos:column="49">ppvObj</name></type></param>,<param><type><name pos:line="5564" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5565" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5567" pos:column="1">#<cpp:directive pos:line="5567" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5567" pos:column="9">CodeAttribute2_AddRef</name><parameter_list pos:line="5567" pos:column="30">(<param><type><name pos:line="5567" pos:column="31">This</name></type></param>,<param><type><name pos:line="5567" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5568" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5570" pos:column="1">#<cpp:directive pos:line="5570" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5570" pos:column="9">CodeAttribute2_Release</name><parameter_list pos:line="5570" pos:column="31">(<param><type><name pos:line="5570" pos:column="32">This</name></type></param>,<param><type><name pos:line="5570" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5571" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5573" pos:column="1">#<cpp:directive pos:line="5573" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5573" pos:column="9">CodeAttribute2_GetTypeInfoCount</name><parameter_list pos:line="5573" pos:column="40">(<param><type><name pos:line="5573" pos:column="41">This</name></type></param>,<param><type><name pos:line="5573" pos:column="46">pctinfo</name></type></param>,<param><type><name pos:line="5573" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5574" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5576" pos:column="1">#<cpp:directive pos:line="5576" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5576" pos:column="9">CodeAttribute2_GetTypeInfo</name><parameter_list pos:line="5576" pos:column="35">(<param><type><name pos:line="5576" pos:column="36">This</name></type></param>,<param><type><name pos:line="5576" pos:column="41">itinfo</name></type></param>,<param><type><name pos:line="5576" pos:column="48">lcid</name></type></param>,<param><type><name pos:line="5576" pos:column="53">pptinfo</name></type></param>,<param><type><name pos:line="5576" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5577" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5579" pos:column="1">#<cpp:directive pos:line="5579" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5579" pos:column="9">CodeAttribute2_GetIDsOfNames</name><parameter_list pos:line="5579" pos:column="37">(<param><type><name pos:line="5579" pos:column="38">This</name></type></param>,<param><type><name pos:line="5579" pos:column="43">riid</name></type></param>,<param><type><name pos:line="5579" pos:column="48">rgszNames</name></type></param>,<param><type><name pos:line="5579" pos:column="58">cNames</name></type></param>,<param><type><name pos:line="5579" pos:column="65">lcid</name></type></param>,<param><type><name pos:line="5579" pos:column="70">rgdispid</name></type></param>,<param><type><name pos:line="5579" pos:column="79">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5580" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5582" pos:column="1">#<cpp:directive pos:line="5582" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5582" pos:column="9">CodeAttribute2_Invoke</name><parameter_list pos:line="5582" pos:column="30">(<param><type><name pos:line="5582" pos:column="31">This</name></type></param>,<param><type><name pos:line="5582" pos:column="36">dispidMember</name></type></param>,<param><type><name pos:line="5582" pos:column="49">riid</name></type></param>,<param><type><name pos:line="5582" pos:column="54">lcid</name></type></param>,<param><type><name pos:line="5582" pos:column="59">wFlags</name></type></param>,<param><type><name pos:line="5582" pos:column="66">pdispparams</name></type></param>,<param><type><name pos:line="5582" pos:column="78">pvarResult</name></type></param>,<param><type><name pos:line="5582" pos:column="89">pexcepinfo</name></type></param>,<param><type><name pos:line="5582" pos:column="100">puArgErr</name></type></param>,<param><type><name pos:line="5582" pos:column="109">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5583" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5585" pos:column="1">#<cpp:directive pos:line="5585" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5585" pos:column="9">CodeAttribute2_get_DTE</name><parameter_list pos:line="5585" pos:column="31">(<param><type><name pos:line="5585" pos:column="32">This</name></type></param>,<param><type><name pos:line="5585" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5586" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5588" pos:column="1">#<cpp:directive pos:line="5588" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5588" pos:column="9">CodeAttribute2_get_Collection</name><parameter_list pos:line="5588" pos:column="38">(<param><type><name pos:line="5588" pos:column="39">This</name></type></param>,<param><type><name pos:line="5588" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5589" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5591" pos:column="1">#<cpp:directive pos:line="5591" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5591" pos:column="9">CodeAttribute2_get_Name</name><parameter_list pos:line="5591" pos:column="32">(<param><type><name pos:line="5591" pos:column="33">This</name></type></param>,<param><type><name pos:line="5591" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5592" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5594" pos:column="1">#<cpp:directive pos:line="5594" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5594" pos:column="9">CodeAttribute2_put_Name</name><parameter_list pos:line="5594" pos:column="32">(<param><type><name pos:line="5594" pos:column="33">This</name></type></param>,<param><type><name pos:line="5594" pos:column="38">noname</name></type></param>,<param><type><name pos:line="5594" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5595" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5597" pos:column="1">#<cpp:directive pos:line="5597" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5597" pos:column="9">CodeAttribute2_get_FullName</name><parameter_list pos:line="5597" pos:column="36">(<param><type><name pos:line="5597" pos:column="37">This</name></type></param>,<param><type><name pos:line="5597" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5598" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5600" pos:column="1">#<cpp:directive pos:line="5600" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5600" pos:column="9">CodeAttribute2_get_ProjectItem</name><parameter_list pos:line="5600" pos:column="39">(<param><type><name pos:line="5600" pos:column="40">This</name></type></param>,<param><type><name pos:line="5600" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5601" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItem(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5603" pos:column="1">#<cpp:directive pos:line="5603" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5603" pos:column="9">CodeAttribute2_get_Kind</name><parameter_list pos:line="5603" pos:column="32">(<param><type><name pos:line="5603" pos:column="33">This</name></type></param>,<param><type><name pos:line="5603" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5604" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Kind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5606" pos:column="1">#<cpp:directive pos:line="5606" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5606" pos:column="9">CodeAttribute2_get_IsCodeType</name><parameter_list pos:line="5606" pos:column="38">(<param><type><name pos:line="5606" pos:column="39">This</name></type></param>,<param><type><name pos:line="5606" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5607" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsCodeType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5609" pos:column="1">#<cpp:directive pos:line="5609" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5609" pos:column="9">CodeAttribute2_get_InfoLocation</name><parameter_list pos:line="5609" pos:column="40">(<param><type><name pos:line="5609" pos:column="41">This</name></type></param>,<param><type><name pos:line="5609" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5610" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InfoLocation(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5612" pos:column="1">#<cpp:directive pos:line="5612" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5612" pos:column="9">CodeAttribute2_get_Children</name><parameter_list pos:line="5612" pos:column="36">(<param><type><name pos:line="5612" pos:column="37">This</name></type></param>,<param><type><name pos:line="5612" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5613" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Children(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5615" pos:column="1">#<cpp:directive pos:line="5615" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5615" pos:column="9">CodeAttribute2_get_Language</name><parameter_list pos:line="5615" pos:column="36">(<param><type><name pos:line="5615" pos:column="37">This</name></type></param>,<param><type><name pos:line="5615" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5616" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5618" pos:column="1">#<cpp:directive pos:line="5618" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5618" pos:column="9">CodeAttribute2_get_StartPoint</name><parameter_list pos:line="5618" pos:column="38">(<param><type><name pos:line="5618" pos:column="39">This</name></type></param>,<param><type><name pos:line="5618" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5619" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5621" pos:column="1">#<cpp:directive pos:line="5621" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5621" pos:column="9">CodeAttribute2_get_EndPoint</name><parameter_list pos:line="5621" pos:column="36">(<param><type><name pos:line="5621" pos:column="37">This</name></type></param>,<param><type><name pos:line="5621" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5622" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_EndPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5624" pos:column="1">#<cpp:directive pos:line="5624" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5624" pos:column="9">CodeAttribute2_get_ExtenderNames</name><parameter_list pos:line="5624" pos:column="41">(<param><type><name pos:line="5624" pos:column="42">This</name></type></param>,<param><type><name pos:line="5624" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5625" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5627" pos:column="1">#<cpp:directive pos:line="5627" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5627" pos:column="9">CodeAttribute2_get_Extender</name><parameter_list pos:line="5627" pos:column="36">(<param><type><name pos:line="5627" pos:column="37">This</name></type></param>,<param><type><name pos:line="5627" pos:column="42">ExtenderName</name></type></param>,<param><type><name pos:line="5627" pos:column="55">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5628" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5630" pos:column="1">#<cpp:directive pos:line="5630" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5630" pos:column="9">CodeAttribute2_get_ExtenderCATID</name><parameter_list pos:line="5630" pos:column="41">(<param><type><name pos:line="5630" pos:column="42">This</name></type></param>,<param><type><name pos:line="5630" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5631" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5633" pos:column="1">#<cpp:directive pos:line="5633" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5633" pos:column="9">CodeAttribute2_GetStartPoint</name><parameter_list pos:line="5633" pos:column="37">(<param><type><name pos:line="5633" pos:column="38">This</name></type></param>,<param><type><name pos:line="5633" pos:column="43">Part</name></type></param>,<param><type><name pos:line="5633" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5634" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStartPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5636" pos:column="1">#<cpp:directive pos:line="5636" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5636" pos:column="9">CodeAttribute2_GetEndPoint</name><parameter_list pos:line="5636" pos:column="35">(<param><type><name pos:line="5636" pos:column="36">This</name></type></param>,<param><type><name pos:line="5636" pos:column="41">Part</name></type></param>,<param><type><name pos:line="5636" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5637" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5639" pos:column="1">#<cpp:directive pos:line="5639" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5639" pos:column="9">CodeAttribute2_get_Parent</name><parameter_list pos:line="5639" pos:column="34">(<param><type><name pos:line="5639" pos:column="35">This</name></type></param>,<param><type><name pos:line="5639" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5640" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5642" pos:column="1">#<cpp:directive pos:line="5642" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5642" pos:column="9">CodeAttribute2_get_Value</name><parameter_list pos:line="5642" pos:column="33">(<param><type><name pos:line="5642" pos:column="34">This</name></type></param>,<param><type><name pos:line="5642" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5643" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Value(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5645" pos:column="1">#<cpp:directive pos:line="5645" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5645" pos:column="9">CodeAttribute2_put_Value</name><parameter_list pos:line="5645" pos:column="33">(<param><type><name pos:line="5645" pos:column="34">This</name></type></param>,<param><type><name pos:line="5645" pos:column="39">noname</name></type></param>,<param><type><name pos:line="5645" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5646" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Value(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5648" pos:column="1">#<cpp:directive pos:line="5648" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5648" pos:column="9">CodeAttribute2_Delete</name><parameter_list pos:line="5648" pos:column="30">(<param><type><name pos:line="5648" pos:column="31">This</name></type></param>,<param><type><name pos:line="5648" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5649" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="5652" pos:column="1">#<cpp:directive pos:line="5652" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5652" pos:column="9">CodeAttribute2_get_Target</name><parameter_list pos:line="5652" pos:column="34">(<param><type><name pos:line="5652" pos:column="35">This</name></type></param>,<param><type><name pos:line="5652" pos:column="40">Target</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5653" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Target(This,Target) )</cpp:value></cpp:define> 

<cpp:define pos:line="5655" pos:column="1">#<cpp:directive pos:line="5655" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5655" pos:column="9">CodeAttribute2_put_Target</name><parameter_list pos:line="5655" pos:column="34">(<param><type><name pos:line="5655" pos:column="35">This</name></type></param>,<param><type><name pos:line="5655" pos:column="40">Target</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5656" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Target(This,Target) )</cpp:value></cpp:define> 

<cpp:define pos:line="5658" pos:column="1">#<cpp:directive pos:line="5658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5658" pos:column="9">CodeAttribute2_AddArgument</name><parameter_list pos:line="5658" pos:column="35">(<param><type><name pos:line="5658" pos:column="36">This</name></type></param>,<param><type><name pos:line="5658" pos:column="41">Value</name></type></param>,<param><type><name pos:line="5658" pos:column="47">Name</name></type></param>,<param><type><name pos:line="5658" pos:column="52">Position</name></type></param>,<param><type><name pos:line="5658" pos:column="61">Argument</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5659" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddArgument(This,Value,Name,Position,Argument) )</cpp:value></cpp:define> 

<cpp:define pos:line="5661" pos:column="1">#<cpp:directive pos:line="5661" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5661" pos:column="9">CodeAttribute2_get_Arguments</name><parameter_list pos:line="5661" pos:column="37">(<param><type><name pos:line="5661" pos:column="38">This</name></type></param>,<param><type><name pos:line="5661" pos:column="43">ppCodeAttributeArguments</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5662" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Arguments(This,ppCodeAttributeArguments) )</cpp:value></cpp:define> 

<cpp:endif pos:line="5664" pos:column="1">#<cpp:directive pos:line="5664" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="5664" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="5667" pos:column="1">#<cpp:directive pos:line="5667" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5667" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="5672" pos:column="1">#<cpp:directive pos:line="5672" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="5672" pos:column="9">/* __CodeAttribute2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="5675" pos:column="1">#<cpp:directive pos:line="5675" pos:column="2">ifndef</cpp:directive> <name pos:line="5675" pos:column="9">__CodeVariable2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="5676" pos:column="1">#<cpp:directive pos:line="5676" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5676" pos:column="9">__CodeVariable2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="5678" pos:column="1">/* interface CodeVariable2 */</comment>
<comment type="block" pos:line="5679" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="5682" pos:column="1">EXTERN_C</name> <specifier pos:line="5682" pos:column="10">const</specifier> <name pos:line="5682" pos:column="16">IID</name></type> <name pos:line="5682" pos:column="20">IID_CodeVariable2</name></decl>;</decl_stmt>

<cpp:if pos:line="5684" pos:column="1">#<cpp:directive pos:line="5684" pos:column="2">if</cpp:directive> <expr><call><name pos:line="5684" pos:column="5">defined</name><argument_list pos:line="5684" pos:column="12">(<argument><expr><name pos:line="5684" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="5684" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="5684" pos:column="29">!</op:operator><call><name pos:line="5684" pos:column="30">defined</name><argument_list pos:line="5684" pos:column="37">(<argument><expr><name pos:line="5684" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="5686" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="5686" pos:column="19">(<argument pos:line="5686" pos:column="20">"F747A8A0-01B1-4DA2-9259-0D5A0CB4C049"</argument>)</argument_list></macro>
    <label><name pos:line="5687" pos:column="5">CodeVariable2</name> :</label> <expr_stmt><expr pos:line="5687" pos:column="21">public <name pos:line="5687" pos:column="28">CodeVariable</name>
    <block pos:line="5688" pos:column="5">{
    <expr pos:line="5689" pos:column="5">public<op:operator pos:line="5689" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="5690" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="5690" pos:column="81">HRESULT</name> <name pos:line="5690" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="5690" pos:column="107">get_ConstKind</name><argument_list pos:line="5690" pos:column="120">( 
            <comment type="block" pos:line="5691" pos:column="13">/* [retval][out] */</comment> <argument pos:line="5691" pos:column="33">__RPC__out vsCMConstKind *Kind</argument>)</argument_list></macro> <op:operator pos:line="5691" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="5691" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="5693" pos:column="9">virtual <comment type="block" pos:line="5693" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="5693" pos:column="81">HRESULT</name> <name pos:line="5693" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="5693" pos:column="107">put_ConstKind</name><argument_list pos:line="5693" pos:column="120">( 
            <argument pos:line="5694" pos:column="13">vsCMConstKind Kind</argument>)</argument_list></macro> <op:operator pos:line="5694" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="5694" pos:column="35">0</lit:literal></expr>;
        
        <expr pos:line="5696" pos:column="9">virtual <comment type="block" pos:line="5696" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="5696" pos:column="49">HRESULT</name> <name pos:line="5696" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="5696" pos:column="75">get_IsGeneric</name><argument_list pos:line="5696" pos:column="88">( 
            <comment type="block" pos:line="5697" pos:column="13">/* [retval][out] */</comment> <argument pos:line="5697" pos:column="33">__RPC__out VARIANT_BOOL *pIsGeneric</argument>)</argument_list></macro> <op:operator pos:line="5697" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="5697" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="5701" pos:column="1">#<cpp:directive pos:line="5701" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="5701" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="5703" pos:column="5">typedef <type><struct pos:line="5703" pos:column="13">struct <name pos:line="5703" pos:column="20">CodeVariable2Vtbl</name>
    <block pos:line="5704" pos:column="5">{<public type="default" pos:line="5704" pos:column="6">
        <decl_stmt><decl><type><name pos:line="5705" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="5707" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="5707" pos:column="46">HRESULT</name></type> ( <name pos:line="5707" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="5707" pos:column="74">*</type:modifier><name pos:line="5707" pos:column="75">QueryInterface</name> )<parameter_list pos:line="5707" pos:column="91">( 
            <param><decl><type><name pos:line="5708" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5708" pos:column="27">*</type:modifier></type> <name pos:line="5708" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5709" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="5709" pos:column="47">struct <name pos:line="5709" pos:column="54">GUID</name> <type:modifier pos:line="5709" pos:column="59">*</type:modifier></type><name pos:line="5709" pos:column="60">riid</name></decl><op:operator pos:line="5709" pos:column="64">,</op:operator>
            <comment type="block" pos:line="5710" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="5710" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="5710" pos:column="59">void</name> <type:modifier pos:line="5710" pos:column="64">*</type:modifier><type:modifier pos:line="5710" pos:column="65">*</type:modifier><name pos:line="5710" pos:column="66">ppvObj</name><op:operator pos:line="5710" pos:column="72">,</op:operator>
            <comment type="block" pos:line="5711" pos:column="13">/* [retval][out] */</comment> <name pos:line="5711" pos:column="33">__RPC__out</name> <name pos:line="5711" pos:column="44">void</name> <type:modifier pos:line="5711" pos:column="49">*</type:modifier><name pos:line="5711" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="5713" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="5713" pos:column="46">HRESULT</name></type> ( <name pos:line="5713" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="5713" pos:column="74">*</type:modifier><name pos:line="5713" pos:column="75">AddRef</name> )<parameter_list pos:line="5713" pos:column="83">( 
            <param><decl><type><name pos:line="5714" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5714" pos:column="27">*</type:modifier></type> <name pos:line="5714" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5715" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5715" pos:column="33">__RPC__out</name> <name pos:line="5715" pos:column="44">unsigned</name> <name pos:line="5715" pos:column="53">long</name> <type:modifier pos:line="5715" pos:column="58">*</type:modifier></type><name pos:line="5715" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5717" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="5717" pos:column="46">HRESULT</name></type> ( <name pos:line="5717" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="5717" pos:column="74">*</type:modifier><name pos:line="5717" pos:column="75">Release</name> )<parameter_list pos:line="5717" pos:column="84">( 
            <param><decl><type><name pos:line="5718" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5718" pos:column="27">*</type:modifier></type> <name pos:line="5718" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5719" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5719" pos:column="33">__RPC__out</name> <name pos:line="5719" pos:column="44">unsigned</name> <name pos:line="5719" pos:column="53">long</name> <type:modifier pos:line="5719" pos:column="58">*</type:modifier></type><name pos:line="5719" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5721" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="5721" pos:column="46">HRESULT</name></type> ( <name pos:line="5721" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="5721" pos:column="74">*</type:modifier><name pos:line="5721" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="5721" pos:column="93">( 
            <param><decl><type><name pos:line="5722" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5722" pos:column="27">*</type:modifier></type> <name pos:line="5722" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5723" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="5723" pos:column="38">__RPC__out</name> <name pos:line="5723" pos:column="49">unsigned</name> <name pos:line="5723" pos:column="58">UINT</name> <type:modifier pos:line="5723" pos:column="63">*</type:modifier></type><name pos:line="5723" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="5724" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5724" pos:column="33">__RPC__out</name> <name pos:line="5724" pos:column="44">void</name> <type:modifier pos:line="5724" pos:column="49">*</type:modifier></type><name pos:line="5724" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5726" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="5726" pos:column="46">HRESULT</name></type> ( <name pos:line="5726" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="5726" pos:column="74">*</type:modifier><name pos:line="5726" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="5726" pos:column="88">( 
            <param><decl><type><name pos:line="5727" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5727" pos:column="27">*</type:modifier></type> <name pos:line="5727" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5728" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="5728" pos:column="37">unsigned</name> <name pos:line="5728" pos:column="46">UINT</name></type> <name pos:line="5728" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="5729" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="5729" pos:column="37">unsigned</name> <name pos:line="5729" pos:column="46">long</name></type> <name pos:line="5729" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="5730" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="5730" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="5730" pos:column="59">void</name> <type:modifier pos:line="5730" pos:column="64">*</type:modifier><type:modifier pos:line="5730" pos:column="65">*</type:modifier></type><name pos:line="5730" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="5731" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5731" pos:column="33">__RPC__out</name> <name pos:line="5731" pos:column="44">void</name> <type:modifier pos:line="5731" pos:column="49">*</type:modifier></type><name pos:line="5731" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5733" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="5733" pos:column="46">HRESULT</name> <argument_list pos:line="5733" pos:column="54">( <argument pos:line="5733" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5733" pos:column="90">(</op:operator> 
            <name pos:line="5734" pos:column="13">CodeVariable2</name> <op:operator pos:line="5734" pos:column="27">*</op:operator> <name pos:line="5734" pos:column="29">This</name><op:operator pos:line="5734" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5735" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5735" pos:column="37">__RPC__in</name> struct <name pos:line="5735" pos:column="54">GUID</name> <op:operator pos:line="5735" pos:column="59">*</op:operator><name pos:line="5735" pos:column="60">riid</name><op:operator pos:line="5735" pos:column="64">,</op:operator>
            <comment type="block" pos:line="5736" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5736" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="5736" pos:column="57">signed</name> <name pos:line="5736" pos:column="64">char</name> <op:operator pos:line="5736" pos:column="69">*</op:operator><op:operator pos:line="5736" pos:column="70">*</op:operator><name pos:line="5736" pos:column="71">rgszNames</name><op:operator pos:line="5736" pos:column="80">,</op:operator>
            <comment type="block" pos:line="5737" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5737" pos:column="37">unsigned</name> <name pos:line="5737" pos:column="46">UINT</name> <name pos:line="5737" pos:column="51">cNames</name><op:operator pos:line="5737" pos:column="57">,</op:operator>
            <comment type="block" pos:line="5738" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5738" pos:column="37">unsigned</name> <name pos:line="5738" pos:column="46">long</name> <name pos:line="5738" pos:column="51">lcid</name><op:operator pos:line="5738" pos:column="55">,</op:operator>
            <comment type="block" pos:line="5739" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="5739" pos:column="38">__RPC__out</name> <name pos:line="5739" pos:column="49">signed</name> <name pos:line="5739" pos:column="56">long</name> <op:operator pos:line="5739" pos:column="61">*</op:operator><name pos:line="5739" pos:column="62">rgdispid</name><op:operator pos:line="5739" pos:column="70">,</op:operator>
            <comment type="block" pos:line="5740" pos:column="13">/* [retval][out] */</comment> <name pos:line="5740" pos:column="33">__RPC__out</name> <name pos:line="5740" pos:column="44">void</name> <op:operator pos:line="5740" pos:column="49">*</op:operator><name pos:line="5740" pos:column="50">retval</name><op:operator pos:line="5740" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5742" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="5742" pos:column="46">HRESULT</name> <argument_list pos:line="5742" pos:column="54">( <argument pos:line="5742" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5742" pos:column="83">(</op:operator> 
            <name pos:line="5743" pos:column="13">CodeVariable2</name> <op:operator pos:line="5743" pos:column="27">*</op:operator> <name pos:line="5743" pos:column="29">This</name><op:operator pos:line="5743" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5744" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5744" pos:column="37">signed</name> <name pos:line="5744" pos:column="44">long</name> <name pos:line="5744" pos:column="49">dispidMember</name><op:operator pos:line="5744" pos:column="61">,</op:operator>
            <comment type="block" pos:line="5745" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5745" pos:column="37">__RPC__in</name> struct <name pos:line="5745" pos:column="54">GUID</name> <op:operator pos:line="5745" pos:column="59">*</op:operator><name pos:line="5745" pos:column="60">riid</name><op:operator pos:line="5745" pos:column="64">,</op:operator>
            <comment type="block" pos:line="5746" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5746" pos:column="37">unsigned</name> <name pos:line="5746" pos:column="46">long</name> <name pos:line="5746" pos:column="51">lcid</name><op:operator pos:line="5746" pos:column="55">,</op:operator>
            <comment type="block" pos:line="5747" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5747" pos:column="37">unsigned</name> <name pos:line="5747" pos:column="46">short</name> <name pos:line="5747" pos:column="52">wFlags</name><op:operator pos:line="5747" pos:column="58">,</op:operator>
            <comment type="block" pos:line="5748" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="5748" pos:column="37">__RPC__in</name> struct <name pos:line="5748" pos:column="54">DISPPARAMS</name> <op:operator pos:line="5748" pos:column="65">*</op:operator><name pos:line="5748" pos:column="66">pdispparams</name><op:operator pos:line="5748" pos:column="77">,</op:operator>
            <comment type="block" pos:line="5749" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="5749" pos:column="38">__RPC__out</name> <name pos:line="5749" pos:column="49">VARIANT</name> <op:operator pos:line="5749" pos:column="57">*</op:operator><name pos:line="5749" pos:column="58">pvarResult</name><op:operator pos:line="5749" pos:column="68">,</op:operator>
            <comment type="block" pos:line="5750" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="5750" pos:column="38">__RPC__out</name> struct <name pos:line="5750" pos:column="56">EXCEPINFO</name> <op:operator pos:line="5750" pos:column="66">*</op:operator><name pos:line="5750" pos:column="67">pexcepinfo</name><op:operator pos:line="5750" pos:column="77">,</op:operator>
            <comment type="block" pos:line="5751" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="5751" pos:column="38">__RPC__out</name> <name pos:line="5751" pos:column="49">unsigned</name> <name pos:line="5751" pos:column="58">UINT</name> <op:operator pos:line="5751" pos:column="63">*</op:operator><name pos:line="5751" pos:column="64">puArgErr</name><op:operator pos:line="5751" pos:column="72">,</op:operator>
            <comment type="block" pos:line="5752" pos:column="13">/* [retval][out] */</comment> <name pos:line="5752" pos:column="33">__RPC__out</name> <name pos:line="5752" pos:column="44">void</name> <op:operator pos:line="5752" pos:column="49">*</op:operator><name pos:line="5752" pos:column="50">retval</name><op:operator pos:line="5752" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5754" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5754" pos:column="43">HRESULT</name></type> ( <name pos:line="5754" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5754" pos:column="71">*</type:modifier><name pos:line="5754" pos:column="72">get_DTE</name> )<parameter_list pos:line="5754" pos:column="81">( 
            <param><decl><type><name pos:line="5755" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5755" pos:column="27">*</type:modifier></type> <name pos:line="5755" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5756" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5756" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="5756" pos:column="54">*</type:modifier><type:modifier pos:line="5756" pos:column="55">*</type:modifier></type><name pos:line="5756" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5758" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5758" pos:column="43">HRESULT</name></type> ( <name pos:line="5758" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5758" pos:column="71">*</type:modifier><name pos:line="5758" pos:column="72">get_Collection</name> )<parameter_list pos:line="5758" pos:column="88">( 
            <param><decl><type><name pos:line="5759" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5759" pos:column="27">*</type:modifier></type> <name pos:line="5759" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5760" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5760" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5760" pos:column="54">CodeElements</name> <type:modifier pos:line="5760" pos:column="67">*</type:modifier><type:modifier pos:line="5760" pos:column="68">*</type:modifier></type><name pos:line="5760" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5762" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5762" pos:column="43">HRESULT</name></type> ( <name pos:line="5762" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5762" pos:column="71">*</type:modifier><name pos:line="5762" pos:column="72">get_Name</name> )<parameter_list pos:line="5762" pos:column="82">( 
            <param><decl><type><name pos:line="5763" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5763" pos:column="27">*</type:modifier></type> <name pos:line="5763" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5764" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5764" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5764" pos:column="54">BSTR</name> <type:modifier pos:line="5764" pos:column="59">*</type:modifier></type><name pos:line="5764" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5766" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5766" pos:column="43">HRESULT</name></type> ( <name pos:line="5766" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5766" pos:column="71">*</type:modifier><name pos:line="5766" pos:column="72">put_Name</name> )<parameter_list pos:line="5766" pos:column="82">( 
            <param><decl><type><name pos:line="5767" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5767" pos:column="27">*</type:modifier></type> <name pos:line="5767" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5768" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5768" pos:column="33">__RPC__in</name> <name pos:line="5768" pos:column="43">BSTR</name></type> <name pos:line="5768" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="5769" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5769" pos:column="33">__RPC__out</name> <name pos:line="5769" pos:column="44">void</name> <type:modifier pos:line="5769" pos:column="49">*</type:modifier></type><name pos:line="5769" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5771" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5771" pos:column="43">HRESULT</name></type> ( <name pos:line="5771" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5771" pos:column="71">*</type:modifier><name pos:line="5771" pos:column="72">get_FullName</name> )<parameter_list pos:line="5771" pos:column="86">( 
            <param><decl><type><name pos:line="5772" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5772" pos:column="27">*</type:modifier></type> <name pos:line="5772" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5773" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5773" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5773" pos:column="54">BSTR</name> <type:modifier pos:line="5773" pos:column="59">*</type:modifier></type><name pos:line="5773" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5775" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5775" pos:column="43">HRESULT</name></type> ( <name pos:line="5775" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5775" pos:column="71">*</type:modifier><name pos:line="5775" pos:column="72">get_ProjectItem</name> )<parameter_list pos:line="5775" pos:column="89">( 
            <param><decl><type><name pos:line="5776" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5776" pos:column="27">*</type:modifier></type> <name pos:line="5776" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5777" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5777" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5777" pos:column="54">ProjectItem</name> <type:modifier pos:line="5777" pos:column="66">*</type:modifier><type:modifier pos:line="5777" pos:column="67">*</type:modifier></type><name pos:line="5777" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5779" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="5779" pos:column="43">HRESULT</name> <argument_list pos:line="5779" pos:column="51">( <argument pos:line="5779" pos:column="53">STDMETHODCALLTYPE *get_Kind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5779" pos:column="82">(</op:operator> 
            <name pos:line="5780" pos:column="13">CodeVariable2</name> <op:operator pos:line="5780" pos:column="27">*</op:operator> <name pos:line="5780" pos:column="29">This</name><op:operator pos:line="5780" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5781" pos:column="13">/* [retval][out] */</comment> <name pos:line="5781" pos:column="33">__RPC__out</name> enum <name pos:line="5781" pos:column="49">vsCMElement</name> <op:operator pos:line="5781" pos:column="61">*</op:operator><name pos:line="5781" pos:column="62">retval</name><op:operator pos:line="5781" pos:column="68">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5783" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5783" pos:column="43">HRESULT</name></type> ( <name pos:line="5783" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5783" pos:column="71">*</type:modifier><name pos:line="5783" pos:column="72">get_IsCodeType</name> )<parameter_list pos:line="5783" pos:column="88">( 
            <param><decl><type><name pos:line="5784" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5784" pos:column="27">*</type:modifier></type> <name pos:line="5784" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5785" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5785" pos:column="33">__RPC__out</name> <name pos:line="5785" pos:column="44">BOOLEAN</name> <type:modifier pos:line="5785" pos:column="52">*</type:modifier></type><name pos:line="5785" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5787" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="5787" pos:column="43">HRESULT</name> <argument_list pos:line="5787" pos:column="51">( <argument pos:line="5787" pos:column="53">STDMETHODCALLTYPE *get_InfoLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5787" pos:column="90">(</op:operator> 
            <name pos:line="5788" pos:column="13">CodeVariable2</name> <op:operator pos:line="5788" pos:column="27">*</op:operator> <name pos:line="5788" pos:column="29">This</name><op:operator pos:line="5788" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5789" pos:column="13">/* [retval][out] */</comment> <name pos:line="5789" pos:column="33">__RPC__out</name> enum <name pos:line="5789" pos:column="49">vsCMInfoLocation</name> <op:operator pos:line="5789" pos:column="66">*</op:operator><name pos:line="5789" pos:column="67">retval</name><op:operator pos:line="5789" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5791" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5791" pos:column="43">HRESULT</name></type> ( <name pos:line="5791" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5791" pos:column="71">*</type:modifier><name pos:line="5791" pos:column="72">get_Children</name> )<parameter_list pos:line="5791" pos:column="86">( 
            <param><decl><type><name pos:line="5792" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5792" pos:column="27">*</type:modifier></type> <name pos:line="5792" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5793" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5793" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5793" pos:column="54">CodeElements</name> <type:modifier pos:line="5793" pos:column="67">*</type:modifier><type:modifier pos:line="5793" pos:column="68">*</type:modifier></type><name pos:line="5793" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5795" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5795" pos:column="43">HRESULT</name></type> ( <name pos:line="5795" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5795" pos:column="71">*</type:modifier><name pos:line="5795" pos:column="72">get_Language</name> )<parameter_list pos:line="5795" pos:column="86">( 
            <param><decl><type><name pos:line="5796" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5796" pos:column="27">*</type:modifier></type> <name pos:line="5796" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5797" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5797" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5797" pos:column="54">BSTR</name> <type:modifier pos:line="5797" pos:column="59">*</type:modifier></type><name pos:line="5797" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5799" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5799" pos:column="43">HRESULT</name></type> ( <name pos:line="5799" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5799" pos:column="71">*</type:modifier><name pos:line="5799" pos:column="72">get_StartPoint</name> )<parameter_list pos:line="5799" pos:column="88">( 
            <param><decl><type><name pos:line="5800" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5800" pos:column="27">*</type:modifier></type> <name pos:line="5800" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5801" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5801" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5801" pos:column="54">TextPoint</name> <type:modifier pos:line="5801" pos:column="64">*</type:modifier><type:modifier pos:line="5801" pos:column="65">*</type:modifier></type><name pos:line="5801" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5803" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5803" pos:column="43">HRESULT</name></type> ( <name pos:line="5803" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5803" pos:column="71">*</type:modifier><name pos:line="5803" pos:column="72">get_EndPoint</name> )<parameter_list pos:line="5803" pos:column="86">( 
            <param><decl><type><name pos:line="5804" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5804" pos:column="27">*</type:modifier></type> <name pos:line="5804" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5805" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5805" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5805" pos:column="54">TextPoint</name> <type:modifier pos:line="5805" pos:column="64">*</type:modifier><type:modifier pos:line="5805" pos:column="65">*</type:modifier></type><name pos:line="5805" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5807" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5807" pos:column="43">HRESULT</name></type> ( <name pos:line="5807" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5807" pos:column="71">*</type:modifier><name pos:line="5807" pos:column="72">get_ExtenderNames</name> )<parameter_list pos:line="5807" pos:column="91">( 
            <param><decl><type><name pos:line="5808" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5808" pos:column="27">*</type:modifier></type> <name pos:line="5808" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5809" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5809" pos:column="33">__RPC__out</name> <name pos:line="5809" pos:column="44">VARIANT</name> <type:modifier pos:line="5809" pos:column="52">*</type:modifier></type><name pos:line="5809" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5811" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5811" pos:column="43">HRESULT</name></type> ( <name pos:line="5811" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5811" pos:column="71">*</type:modifier><name pos:line="5811" pos:column="72">get_Extender</name> )<parameter_list pos:line="5811" pos:column="86">( 
            <param><decl><type><name pos:line="5812" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5812" pos:column="27">*</type:modifier></type> <name pos:line="5812" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5813" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5813" pos:column="33">__RPC__in</name> <name pos:line="5813" pos:column="43">BSTR</name></type> <name pos:line="5813" pos:column="48">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="5814" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5814" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5814" pos:column="54">IDispatch</name> <type:modifier pos:line="5814" pos:column="64">*</type:modifier><type:modifier pos:line="5814" pos:column="65">*</type:modifier></type><name pos:line="5814" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5816" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5816" pos:column="43">HRESULT</name></type> ( <name pos:line="5816" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5816" pos:column="71">*</type:modifier><name pos:line="5816" pos:column="72">get_ExtenderCATID</name> )<parameter_list pos:line="5816" pos:column="91">( 
            <param><decl><type><name pos:line="5817" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5817" pos:column="27">*</type:modifier></type> <name pos:line="5817" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5818" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5818" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5818" pos:column="54">BSTR</name> <type:modifier pos:line="5818" pos:column="59">*</type:modifier></type><name pos:line="5818" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5820" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="5820" pos:column="34">HRESULT</name> <argument_list pos:line="5820" pos:column="42">( <argument pos:line="5820" pos:column="44">STDMETHODCALLTYPE *GetStartPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5820" pos:column="78">(</op:operator> 
            <name pos:line="5821" pos:column="13">CodeVariable2</name> <op:operator pos:line="5821" pos:column="27">*</op:operator> <name pos:line="5821" pos:column="29">This</name><op:operator pos:line="5821" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5822" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="5822" pos:column="42">vsCMPart</name> <name pos:line="5822" pos:column="51">Part</name><op:operator pos:line="5822" pos:column="55">,</op:operator>
            <comment type="block" pos:line="5823" pos:column="13">/* [retval][out] */</comment> <name pos:line="5823" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5823" pos:column="54">TextPoint</name> <op:operator pos:line="5823" pos:column="64">*</op:operator><op:operator pos:line="5823" pos:column="65">*</op:operator><name pos:line="5823" pos:column="66">retval</name><op:operator pos:line="5823" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5825" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="5825" pos:column="34">HRESULT</name> <argument_list pos:line="5825" pos:column="42">( <argument pos:line="5825" pos:column="44">STDMETHODCALLTYPE *GetEndPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5825" pos:column="76">(</op:operator> 
            <name pos:line="5826" pos:column="13">CodeVariable2</name> <op:operator pos:line="5826" pos:column="27">*</op:operator> <name pos:line="5826" pos:column="29">This</name><op:operator pos:line="5826" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5827" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="5827" pos:column="42">vsCMPart</name> <name pos:line="5827" pos:column="51">Part</name><op:operator pos:line="5827" pos:column="55">,</op:operator>
            <comment type="block" pos:line="5828" pos:column="13">/* [retval][out] */</comment> <name pos:line="5828" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5828" pos:column="54">TextPoint</name> <op:operator pos:line="5828" pos:column="64">*</op:operator><op:operator pos:line="5828" pos:column="65">*</op:operator><name pos:line="5828" pos:column="66">retval</name><op:operator pos:line="5828" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5830" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5830" pos:column="43">HRESULT</name></type> ( <name pos:line="5830" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5830" pos:column="71">*</type:modifier><name pos:line="5830" pos:column="72">get_Parent</name> )<parameter_list pos:line="5830" pos:column="84">( 
            <param><decl><type><name pos:line="5831" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5831" pos:column="27">*</type:modifier></type> <name pos:line="5831" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5832" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5832" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5832" pos:column="54">IDispatch</name> <type:modifier pos:line="5832" pos:column="64">*</type:modifier><type:modifier pos:line="5832" pos:column="65">*</type:modifier></type><name pos:line="5832" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5834" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5834" pos:column="43">HRESULT</name></type> ( <name pos:line="5834" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5834" pos:column="71">*</type:modifier><name pos:line="5834" pos:column="72">get_InitExpression</name> )<parameter_list pos:line="5834" pos:column="92">( 
            <param><decl><type><name pos:line="5835" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5835" pos:column="27">*</type:modifier></type> <name pos:line="5835" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5836" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5836" pos:column="33">__RPC__out</name> <name pos:line="5836" pos:column="44">VARIANT</name> <type:modifier pos:line="5836" pos:column="52">*</type:modifier></type><name pos:line="5836" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5838" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5838" pos:column="43">HRESULT</name></type> ( <name pos:line="5838" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5838" pos:column="71">*</type:modifier><name pos:line="5838" pos:column="72">put_InitExpression</name> )<parameter_list pos:line="5838" pos:column="92">( 
            <param><decl><type><name pos:line="5839" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5839" pos:column="27">*</type:modifier></type> <name pos:line="5839" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5840" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5840" pos:column="33">VARIANT</name></type> <name pos:line="5840" pos:column="41">noname</name></decl></param>,
            <comment type="block" pos:line="5841" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5841" pos:column="33">__RPC__out</name> <name pos:line="5841" pos:column="44">void</name> <type:modifier pos:line="5841" pos:column="49">*</type:modifier></type><name pos:line="5841" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5843" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5843" pos:column="43">HRESULT</name></type> ( <name pos:line="5843" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5843" pos:column="71">*</type:modifier><name pos:line="5843" pos:column="72">get_Prototype</name> )<parameter_list pos:line="5843" pos:column="87">( 
            <param><decl><type><name pos:line="5844" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5844" pos:column="27">*</type:modifier></type> <name pos:line="5844" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5845" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="5845" pos:column="37">signed</name> <name pos:line="5845" pos:column="44">long</name></type> <name pos:line="5845" pos:column="49">Flags</name></decl></param>,
            <comment type="block" pos:line="5846" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5846" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5846" pos:column="54">BSTR</name> <type:modifier pos:line="5846" pos:column="59">*</type:modifier></type><name pos:line="5846" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5848" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5848" pos:column="43">HRESULT</name></type> ( <name pos:line="5848" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5848" pos:column="71">*</type:modifier><name pos:line="5848" pos:column="72">put_Type</name> )<parameter_list pos:line="5848" pos:column="82">( 
            <param><decl><type><name pos:line="5849" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5849" pos:column="27">*</type:modifier></type> <name pos:line="5849" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5850" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5850" pos:column="33">__RPC__in_opt</name> <name pos:line="5850" pos:column="47">CodeTypeRef</name> <type:modifier pos:line="5850" pos:column="59">*</type:modifier></type><name pos:line="5850" pos:column="60">noname</name></decl></param>,
            <comment type="block" pos:line="5851" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5851" pos:column="33">__RPC__out</name> <name pos:line="5851" pos:column="44">void</name> <type:modifier pos:line="5851" pos:column="49">*</type:modifier></type><name pos:line="5851" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5853" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5853" pos:column="43">HRESULT</name></type> ( <name pos:line="5853" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5853" pos:column="71">*</type:modifier><name pos:line="5853" pos:column="72">get_Type</name> )<parameter_list pos:line="5853" pos:column="82">( 
            <param><decl><type><name pos:line="5854" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5854" pos:column="27">*</type:modifier></type> <name pos:line="5854" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5855" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5855" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5855" pos:column="54">CodeTypeRef</name> <type:modifier pos:line="5855" pos:column="66">*</type:modifier><type:modifier pos:line="5855" pos:column="67">*</type:modifier></type><name pos:line="5855" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5857" pos:column="9">/* [id][propput][funcdescattr] */</comment> <macro><name pos:line="5857" pos:column="43">HRESULT</name> <argument_list pos:line="5857" pos:column="51">( <argument pos:line="5857" pos:column="53">STDMETHODCALLTYPE *put_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5857" pos:column="84">(</op:operator> 
            <name pos:line="5858" pos:column="13">CodeVariable2</name> <op:operator pos:line="5858" pos:column="27">*</op:operator> <name pos:line="5858" pos:column="29">This</name><op:operator pos:line="5858" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5859" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="5859" pos:column="38">vsCMAccess</name> <name pos:line="5859" pos:column="49">noname</name><op:operator pos:line="5859" pos:column="55">,</op:operator>
            <comment type="block" pos:line="5860" pos:column="13">/* [retval][out] */</comment> <name pos:line="5860" pos:column="33">__RPC__out</name> <name pos:line="5860" pos:column="44">void</name> <op:operator pos:line="5860" pos:column="49">*</op:operator><name pos:line="5860" pos:column="50">retval</name><op:operator pos:line="5860" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5862" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="5862" pos:column="43">HRESULT</name> <argument_list pos:line="5862" pos:column="51">( <argument pos:line="5862" pos:column="53">STDMETHODCALLTYPE *get_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="5862" pos:column="84">(</op:operator> 
            <name pos:line="5863" pos:column="13">CodeVariable2</name> <op:operator pos:line="5863" pos:column="27">*</op:operator> <name pos:line="5863" pos:column="29">This</name><op:operator pos:line="5863" pos:column="33">,</op:operator>
            <comment type="block" pos:line="5864" pos:column="13">/* [retval][out] */</comment> <name pos:line="5864" pos:column="33">__RPC__out</name> enum <name pos:line="5864" pos:column="49">vsCMAccess</name> <op:operator pos:line="5864" pos:column="60">*</op:operator><name pos:line="5864" pos:column="61">retval</name><op:operator pos:line="5864" pos:column="67">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="5866" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5866" pos:column="43">HRESULT</name></type> ( <name pos:line="5866" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5866" pos:column="71">*</type:modifier><name pos:line="5866" pos:column="72">get_IsConstant</name> )<parameter_list pos:line="5866" pos:column="88">( 
            <param><decl><type><name pos:line="5867" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5867" pos:column="27">*</type:modifier></type> <name pos:line="5867" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5868" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5868" pos:column="33">__RPC__out</name> <name pos:line="5868" pos:column="44">BOOLEAN</name> <type:modifier pos:line="5868" pos:column="52">*</type:modifier></type><name pos:line="5868" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5870" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5870" pos:column="43">HRESULT</name></type> ( <name pos:line="5870" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5870" pos:column="71">*</type:modifier><name pos:line="5870" pos:column="72">put_IsConstant</name> )<parameter_list pos:line="5870" pos:column="88">( 
            <param><decl><type><name pos:line="5871" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5871" pos:column="27">*</type:modifier></type> <name pos:line="5871" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5872" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5872" pos:column="33">BOOLEAN</name></type> <name pos:line="5872" pos:column="41">noname</name></decl></param>,
            <comment type="block" pos:line="5873" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5873" pos:column="33">__RPC__out</name> <name pos:line="5873" pos:column="44">void</name> <type:modifier pos:line="5873" pos:column="49">*</type:modifier></type><name pos:line="5873" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5875" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5875" pos:column="43">HRESULT</name></type> ( <name pos:line="5875" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5875" pos:column="71">*</type:modifier><name pos:line="5875" pos:column="72">get_Attributes</name> )<parameter_list pos:line="5875" pos:column="88">( 
            <param><decl><type><name pos:line="5876" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5876" pos:column="27">*</type:modifier></type> <name pos:line="5876" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5877" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5877" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5877" pos:column="54">CodeElements</name> <type:modifier pos:line="5877" pos:column="67">*</type:modifier><type:modifier pos:line="5877" pos:column="68">*</type:modifier></type><name pos:line="5877" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5879" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5879" pos:column="43">HRESULT</name></type> ( <name pos:line="5879" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5879" pos:column="71">*</type:modifier><name pos:line="5879" pos:column="72">get_DocComment</name> )<parameter_list pos:line="5879" pos:column="88">( 
            <param><decl><type><name pos:line="5880" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5880" pos:column="27">*</type:modifier></type> <name pos:line="5880" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5881" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5881" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5881" pos:column="54">BSTR</name> <type:modifier pos:line="5881" pos:column="59">*</type:modifier></type><name pos:line="5881" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5883" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5883" pos:column="43">HRESULT</name></type> ( <name pos:line="5883" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5883" pos:column="71">*</type:modifier><name pos:line="5883" pos:column="72">put_DocComment</name> )<parameter_list pos:line="5883" pos:column="88">( 
            <param><decl><type><name pos:line="5884" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5884" pos:column="27">*</type:modifier></type> <name pos:line="5884" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5885" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5885" pos:column="33">__RPC__in</name> <name pos:line="5885" pos:column="43">BSTR</name></type> <name pos:line="5885" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="5886" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5886" pos:column="33">__RPC__out</name> <name pos:line="5886" pos:column="44">void</name> <type:modifier pos:line="5886" pos:column="49">*</type:modifier></type><name pos:line="5886" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5888" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5888" pos:column="43">HRESULT</name></type> ( <name pos:line="5888" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5888" pos:column="71">*</type:modifier><name pos:line="5888" pos:column="72">get_Comment</name> )<parameter_list pos:line="5888" pos:column="85">( 
            <param><decl><type><name pos:line="5889" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5889" pos:column="27">*</type:modifier></type> <name pos:line="5889" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5890" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5890" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5890" pos:column="54">BSTR</name> <type:modifier pos:line="5890" pos:column="59">*</type:modifier></type><name pos:line="5890" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5892" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5892" pos:column="43">HRESULT</name></type> ( <name pos:line="5892" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5892" pos:column="71">*</type:modifier><name pos:line="5892" pos:column="72">put_Comment</name> )<parameter_list pos:line="5892" pos:column="85">( 
            <param><decl><type><name pos:line="5893" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5893" pos:column="27">*</type:modifier></type> <name pos:line="5893" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5894" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5894" pos:column="33">__RPC__in</name> <name pos:line="5894" pos:column="43">BSTR</name></type> <name pos:line="5894" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="5895" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5895" pos:column="33">__RPC__out</name> <name pos:line="5895" pos:column="44">void</name> <type:modifier pos:line="5895" pos:column="49">*</type:modifier></type><name pos:line="5895" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5897" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="5897" pos:column="34">HRESULT</name></type> ( <name pos:line="5897" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="5897" pos:column="62">*</type:modifier><name pos:line="5897" pos:column="63">AddAttribute</name> )<parameter_list pos:line="5897" pos:column="77">( 
            <param><decl><type><name pos:line="5898" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5898" pos:column="27">*</type:modifier></type> <name pos:line="5898" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5899" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5899" pos:column="33">__RPC__in</name> <name pos:line="5899" pos:column="43">BSTR</name></type> <name pos:line="5899" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="5900" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5900" pos:column="33">__RPC__in</name> <name pos:line="5900" pos:column="43">BSTR</name></type> <name pos:line="5900" pos:column="48">Value</name></decl></param>,
            <comment type="block" pos:line="5901" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="5901" pos:column="43">VARIANT</name></type> <name pos:line="5901" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="5902" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5902" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="5902" pos:column="54">CodeAttribute</name> <type:modifier pos:line="5902" pos:column="68">*</type:modifier><type:modifier pos:line="5902" pos:column="69">*</type:modifier></type><name pos:line="5902" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5904" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="5904" pos:column="43">HRESULT</name></type> ( <name pos:line="5904" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5904" pos:column="71">*</type:modifier><name pos:line="5904" pos:column="72">get_IsShared</name> )<parameter_list pos:line="5904" pos:column="86">( 
            <param><decl><type><name pos:line="5905" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5905" pos:column="27">*</type:modifier></type> <name pos:line="5905" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5906" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5906" pos:column="33">__RPC__out</name> <name pos:line="5906" pos:column="44">BOOLEAN</name> <type:modifier pos:line="5906" pos:column="52">*</type:modifier></type><name pos:line="5906" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5908" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="5908" pos:column="43">HRESULT</name></type> ( <name pos:line="5908" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="5908" pos:column="71">*</type:modifier><name pos:line="5908" pos:column="72">put_IsShared</name> )<parameter_list pos:line="5908" pos:column="86">( 
            <param><decl><type><name pos:line="5909" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5909" pos:column="27">*</type:modifier></type> <name pos:line="5909" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5910" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="5910" pos:column="33">BOOLEAN</name></type> <name pos:line="5910" pos:column="41">noname</name></decl></param>,
            <comment type="block" pos:line="5911" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5911" pos:column="33">__RPC__out</name> <name pos:line="5911" pos:column="44">void</name> <type:modifier pos:line="5911" pos:column="49">*</type:modifier></type><name pos:line="5911" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5913" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="5913" pos:column="73">HRESULT</name></type> ( <name pos:line="5913" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="5913" pos:column="101">*</type:modifier><name pos:line="5913" pos:column="102">get_ConstKind</name> )<parameter_list pos:line="5913" pos:column="117">( 
            <param><decl><type><name pos:line="5914" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5914" pos:column="27">*</type:modifier></type> <name pos:line="5914" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5915" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5915" pos:column="33">__RPC__out</name> <name pos:line="5915" pos:column="44">vsCMConstKind</name> <type:modifier pos:line="5915" pos:column="58">*</type:modifier></type><name pos:line="5915" pos:column="59">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5917" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="5917" pos:column="73">HRESULT</name></type> ( <name pos:line="5917" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="5917" pos:column="101">*</type:modifier><name pos:line="5917" pos:column="102">put_ConstKind</name> )<parameter_list pos:line="5917" pos:column="117">( 
            <param><decl><type><name pos:line="5918" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5918" pos:column="27">*</type:modifier></type> <name pos:line="5918" pos:column="29">This</name></decl></param>,
            <param><decl><type><name pos:line="5919" pos:column="13">vsCMConstKind</name></type> <name pos:line="5919" pos:column="27">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="5921" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="5921" pos:column="41">HRESULT</name></type> ( <name pos:line="5921" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="5921" pos:column="69">*</type:modifier><name pos:line="5921" pos:column="70">get_IsGeneric</name> )<parameter_list pos:line="5921" pos:column="85">( 
            <param><decl><type><name pos:line="5922" pos:column="13">CodeVariable2</name> <type:modifier pos:line="5922" pos:column="27">*</type:modifier></type> <name pos:line="5922" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="5923" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="5923" pos:column="33">__RPC__out</name> <name pos:line="5923" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="5923" pos:column="57">*</type:modifier></type><name pos:line="5923" pos:column="58">pIsGeneric</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="5925" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="5926" pos:column="7">CodeVariable2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="5928" pos:column="5">interface</name></type> <name pos:line="5928" pos:column="15">CodeVariable2</name>
    <argument_list pos:line="5929" pos:column="5">{
        <argument><expr><name pos:line="5930" pos:column="9">CONST_VTBL</name> struct <name pos:line="5930" pos:column="27">CodeVariable2Vtbl</name> <op:operator pos:line="5930" pos:column="45">*</op:operator><name pos:line="5930" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="5935" pos:column="1">#<cpp:directive pos:line="5935" pos:column="2">ifdef</cpp:directive> <name pos:line="5935" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="5938" pos:column="1">#<cpp:directive pos:line="5938" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5938" pos:column="9">CodeVariable2_QueryInterface</name><parameter_list pos:line="5938" pos:column="37">(<param><type><name pos:line="5938" pos:column="38">This</name></type></param>,<param><type><name pos:line="5938" pos:column="43">riid</name></type></param>,<param><type><name pos:line="5938" pos:column="48">ppvObj</name></type></param>,<param><type><name pos:line="5938" pos:column="55">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5939" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5941" pos:column="1">#<cpp:directive pos:line="5941" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5941" pos:column="9">CodeVariable2_AddRef</name><parameter_list pos:line="5941" pos:column="29">(<param><type><name pos:line="5941" pos:column="30">This</name></type></param>,<param><type><name pos:line="5941" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5942" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5944" pos:column="1">#<cpp:directive pos:line="5944" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5944" pos:column="9">CodeVariable2_Release</name><parameter_list pos:line="5944" pos:column="30">(<param><type><name pos:line="5944" pos:column="31">This</name></type></param>,<param><type><name pos:line="5944" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5945" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5947" pos:column="1">#<cpp:directive pos:line="5947" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5947" pos:column="9">CodeVariable2_GetTypeInfoCount</name><parameter_list pos:line="5947" pos:column="39">(<param><type><name pos:line="5947" pos:column="40">This</name></type></param>,<param><type><name pos:line="5947" pos:column="45">pctinfo</name></type></param>,<param><type><name pos:line="5947" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5948" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5950" pos:column="1">#<cpp:directive pos:line="5950" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5950" pos:column="9">CodeVariable2_GetTypeInfo</name><parameter_list pos:line="5950" pos:column="34">(<param><type><name pos:line="5950" pos:column="35">This</name></type></param>,<param><type><name pos:line="5950" pos:column="40">itinfo</name></type></param>,<param><type><name pos:line="5950" pos:column="47">lcid</name></type></param>,<param><type><name pos:line="5950" pos:column="52">pptinfo</name></type></param>,<param><type><name pos:line="5950" pos:column="60">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5951" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5953" pos:column="1">#<cpp:directive pos:line="5953" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5953" pos:column="9">CodeVariable2_GetIDsOfNames</name><parameter_list pos:line="5953" pos:column="36">(<param><type><name pos:line="5953" pos:column="37">This</name></type></param>,<param><type><name pos:line="5953" pos:column="42">riid</name></type></param>,<param><type><name pos:line="5953" pos:column="47">rgszNames</name></type></param>,<param><type><name pos:line="5953" pos:column="57">cNames</name></type></param>,<param><type><name pos:line="5953" pos:column="64">lcid</name></type></param>,<param><type><name pos:line="5953" pos:column="69">rgdispid</name></type></param>,<param><type><name pos:line="5953" pos:column="78">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5954" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5956" pos:column="1">#<cpp:directive pos:line="5956" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5956" pos:column="9">CodeVariable2_Invoke</name><parameter_list pos:line="5956" pos:column="29">(<param><type><name pos:line="5956" pos:column="30">This</name></type></param>,<param><type><name pos:line="5956" pos:column="35">dispidMember</name></type></param>,<param><type><name pos:line="5956" pos:column="48">riid</name></type></param>,<param><type><name pos:line="5956" pos:column="53">lcid</name></type></param>,<param><type><name pos:line="5956" pos:column="58">wFlags</name></type></param>,<param><type><name pos:line="5956" pos:column="65">pdispparams</name></type></param>,<param><type><name pos:line="5956" pos:column="77">pvarResult</name></type></param>,<param><type><name pos:line="5956" pos:column="88">pexcepinfo</name></type></param>,<param><type><name pos:line="5956" pos:column="99">puArgErr</name></type></param>,<param><type><name pos:line="5956" pos:column="108">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5957" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5959" pos:column="1">#<cpp:directive pos:line="5959" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5959" pos:column="9">CodeVariable2_get_DTE</name><parameter_list pos:line="5959" pos:column="30">(<param><type><name pos:line="5959" pos:column="31">This</name></type></param>,<param><type><name pos:line="5959" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5960" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5962" pos:column="1">#<cpp:directive pos:line="5962" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5962" pos:column="9">CodeVariable2_get_Collection</name><parameter_list pos:line="5962" pos:column="37">(<param><type><name pos:line="5962" pos:column="38">This</name></type></param>,<param><type><name pos:line="5962" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5963" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5965" pos:column="1">#<cpp:directive pos:line="5965" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5965" pos:column="9">CodeVariable2_get_Name</name><parameter_list pos:line="5965" pos:column="31">(<param><type><name pos:line="5965" pos:column="32">This</name></type></param>,<param><type><name pos:line="5965" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5966" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5968" pos:column="1">#<cpp:directive pos:line="5968" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5968" pos:column="9">CodeVariable2_put_Name</name><parameter_list pos:line="5968" pos:column="31">(<param><type><name pos:line="5968" pos:column="32">This</name></type></param>,<param><type><name pos:line="5968" pos:column="37">noname</name></type></param>,<param><type><name pos:line="5968" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5969" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5971" pos:column="1">#<cpp:directive pos:line="5971" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5971" pos:column="9">CodeVariable2_get_FullName</name><parameter_list pos:line="5971" pos:column="35">(<param><type><name pos:line="5971" pos:column="36">This</name></type></param>,<param><type><name pos:line="5971" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5972" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5974" pos:column="1">#<cpp:directive pos:line="5974" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5974" pos:column="9">CodeVariable2_get_ProjectItem</name><parameter_list pos:line="5974" pos:column="38">(<param><type><name pos:line="5974" pos:column="39">This</name></type></param>,<param><type><name pos:line="5974" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5975" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItem(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5977" pos:column="1">#<cpp:directive pos:line="5977" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5977" pos:column="9">CodeVariable2_get_Kind</name><parameter_list pos:line="5977" pos:column="31">(<param><type><name pos:line="5977" pos:column="32">This</name></type></param>,<param><type><name pos:line="5977" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5978" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Kind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5980" pos:column="1">#<cpp:directive pos:line="5980" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5980" pos:column="9">CodeVariable2_get_IsCodeType</name><parameter_list pos:line="5980" pos:column="37">(<param><type><name pos:line="5980" pos:column="38">This</name></type></param>,<param><type><name pos:line="5980" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5981" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsCodeType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5983" pos:column="1">#<cpp:directive pos:line="5983" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5983" pos:column="9">CodeVariable2_get_InfoLocation</name><parameter_list pos:line="5983" pos:column="39">(<param><type><name pos:line="5983" pos:column="40">This</name></type></param>,<param><type><name pos:line="5983" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5984" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InfoLocation(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5986" pos:column="1">#<cpp:directive pos:line="5986" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5986" pos:column="9">CodeVariable2_get_Children</name><parameter_list pos:line="5986" pos:column="35">(<param><type><name pos:line="5986" pos:column="36">This</name></type></param>,<param><type><name pos:line="5986" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5987" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Children(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5989" pos:column="1">#<cpp:directive pos:line="5989" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5989" pos:column="9">CodeVariable2_get_Language</name><parameter_list pos:line="5989" pos:column="35">(<param><type><name pos:line="5989" pos:column="36">This</name></type></param>,<param><type><name pos:line="5989" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5990" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5992" pos:column="1">#<cpp:directive pos:line="5992" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5992" pos:column="9">CodeVariable2_get_StartPoint</name><parameter_list pos:line="5992" pos:column="37">(<param><type><name pos:line="5992" pos:column="38">This</name></type></param>,<param><type><name pos:line="5992" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5993" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5995" pos:column="1">#<cpp:directive pos:line="5995" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5995" pos:column="9">CodeVariable2_get_EndPoint</name><parameter_list pos:line="5995" pos:column="35">(<param><type><name pos:line="5995" pos:column="36">This</name></type></param>,<param><type><name pos:line="5995" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5996" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_EndPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="5998" pos:column="1">#<cpp:directive pos:line="5998" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5998" pos:column="9">CodeVariable2_get_ExtenderNames</name><parameter_list pos:line="5998" pos:column="40">(<param><type><name pos:line="5998" pos:column="41">This</name></type></param>,<param><type><name pos:line="5998" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="5999" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6001" pos:column="1">#<cpp:directive pos:line="6001" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6001" pos:column="9">CodeVariable2_get_Extender</name><parameter_list pos:line="6001" pos:column="35">(<param><type><name pos:line="6001" pos:column="36">This</name></type></param>,<param><type><name pos:line="6001" pos:column="41">ExtenderName</name></type></param>,<param><type><name pos:line="6001" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6002" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6004" pos:column="1">#<cpp:directive pos:line="6004" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6004" pos:column="9">CodeVariable2_get_ExtenderCATID</name><parameter_list pos:line="6004" pos:column="40">(<param><type><name pos:line="6004" pos:column="41">This</name></type></param>,<param><type><name pos:line="6004" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6005" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6007" pos:column="1">#<cpp:directive pos:line="6007" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6007" pos:column="9">CodeVariable2_GetStartPoint</name><parameter_list pos:line="6007" pos:column="36">(<param><type><name pos:line="6007" pos:column="37">This</name></type></param>,<param><type><name pos:line="6007" pos:column="42">Part</name></type></param>,<param><type><name pos:line="6007" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6008" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStartPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6010" pos:column="1">#<cpp:directive pos:line="6010" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6010" pos:column="9">CodeVariable2_GetEndPoint</name><parameter_list pos:line="6010" pos:column="34">(<param><type><name pos:line="6010" pos:column="35">This</name></type></param>,<param><type><name pos:line="6010" pos:column="40">Part</name></type></param>,<param><type><name pos:line="6010" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6011" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6013" pos:column="1">#<cpp:directive pos:line="6013" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6013" pos:column="9">CodeVariable2_get_Parent</name><parameter_list pos:line="6013" pos:column="33">(<param><type><name pos:line="6013" pos:column="34">This</name></type></param>,<param><type><name pos:line="6013" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6014" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6016" pos:column="1">#<cpp:directive pos:line="6016" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6016" pos:column="9">CodeVariable2_get_InitExpression</name><parameter_list pos:line="6016" pos:column="41">(<param><type><name pos:line="6016" pos:column="42">This</name></type></param>,<param><type><name pos:line="6016" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6017" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InitExpression(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6019" pos:column="1">#<cpp:directive pos:line="6019" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6019" pos:column="9">CodeVariable2_put_InitExpression</name><parameter_list pos:line="6019" pos:column="41">(<param><type><name pos:line="6019" pos:column="42">This</name></type></param>,<param><type><name pos:line="6019" pos:column="47">noname</name></type></param>,<param><type><name pos:line="6019" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6020" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_InitExpression(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6022" pos:column="1">#<cpp:directive pos:line="6022" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6022" pos:column="9">CodeVariable2_get_Prototype</name><parameter_list pos:line="6022" pos:column="36">(<param><type><name pos:line="6022" pos:column="37">This</name></type></param>,<param><type><name pos:line="6022" pos:column="42">Flags</name></type></param>,<param><type><name pos:line="6022" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6023" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Prototype(This,Flags,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6025" pos:column="1">#<cpp:directive pos:line="6025" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6025" pos:column="9">CodeVariable2_put_Type</name><parameter_list pos:line="6025" pos:column="31">(<param><type><name pos:line="6025" pos:column="32">This</name></type></param>,<param><type><name pos:line="6025" pos:column="37">noname</name></type></param>,<param><type><name pos:line="6025" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6026" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Type(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6028" pos:column="1">#<cpp:directive pos:line="6028" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6028" pos:column="9">CodeVariable2_get_Type</name><parameter_list pos:line="6028" pos:column="31">(<param><type><name pos:line="6028" pos:column="32">This</name></type></param>,<param><type><name pos:line="6028" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6029" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Type(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6031" pos:column="1">#<cpp:directive pos:line="6031" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6031" pos:column="9">CodeVariable2_put_Access</name><parameter_list pos:line="6031" pos:column="33">(<param><type><name pos:line="6031" pos:column="34">This</name></type></param>,<param><type><name pos:line="6031" pos:column="39">noname</name></type></param>,<param><type><name pos:line="6031" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6032" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Access(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6034" pos:column="1">#<cpp:directive pos:line="6034" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6034" pos:column="9">CodeVariable2_get_Access</name><parameter_list pos:line="6034" pos:column="33">(<param><type><name pos:line="6034" pos:column="34">This</name></type></param>,<param><type><name pos:line="6034" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6035" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Access(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6037" pos:column="1">#<cpp:directive pos:line="6037" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6037" pos:column="9">CodeVariable2_get_IsConstant</name><parameter_list pos:line="6037" pos:column="37">(<param><type><name pos:line="6037" pos:column="38">This</name></type></param>,<param><type><name pos:line="6037" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6038" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsConstant(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6040" pos:column="1">#<cpp:directive pos:line="6040" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6040" pos:column="9">CodeVariable2_put_IsConstant</name><parameter_list pos:line="6040" pos:column="37">(<param><type><name pos:line="6040" pos:column="38">This</name></type></param>,<param><type><name pos:line="6040" pos:column="43">noname</name></type></param>,<param><type><name pos:line="6040" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6041" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_IsConstant(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6043" pos:column="1">#<cpp:directive pos:line="6043" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6043" pos:column="9">CodeVariable2_get_Attributes</name><parameter_list pos:line="6043" pos:column="37">(<param><type><name pos:line="6043" pos:column="38">This</name></type></param>,<param><type><name pos:line="6043" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6044" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Attributes(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6046" pos:column="1">#<cpp:directive pos:line="6046" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6046" pos:column="9">CodeVariable2_get_DocComment</name><parameter_list pos:line="6046" pos:column="37">(<param><type><name pos:line="6046" pos:column="38">This</name></type></param>,<param><type><name pos:line="6046" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6047" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DocComment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6049" pos:column="1">#<cpp:directive pos:line="6049" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6049" pos:column="9">CodeVariable2_put_DocComment</name><parameter_list pos:line="6049" pos:column="37">(<param><type><name pos:line="6049" pos:column="38">This</name></type></param>,<param><type><name pos:line="6049" pos:column="43">noname</name></type></param>,<param><type><name pos:line="6049" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6050" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DocComment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6052" pos:column="1">#<cpp:directive pos:line="6052" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6052" pos:column="9">CodeVariable2_get_Comment</name><parameter_list pos:line="6052" pos:column="34">(<param><type><name pos:line="6052" pos:column="35">This</name></type></param>,<param><type><name pos:line="6052" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6053" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Comment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6055" pos:column="1">#<cpp:directive pos:line="6055" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6055" pos:column="9">CodeVariable2_put_Comment</name><parameter_list pos:line="6055" pos:column="34">(<param><type><name pos:line="6055" pos:column="35">This</name></type></param>,<param><type><name pos:line="6055" pos:column="40">noname</name></type></param>,<param><type><name pos:line="6055" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6056" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Comment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6058" pos:column="1">#<cpp:directive pos:line="6058" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6058" pos:column="9">CodeVariable2_AddAttribute</name><parameter_list pos:line="6058" pos:column="35">(<param><type><name pos:line="6058" pos:column="36">This</name></type></param>,<param><type><name pos:line="6058" pos:column="41">Name</name></type></param>,<param><type><name pos:line="6058" pos:column="46">Value</name></type></param>,<param><type><name pos:line="6058" pos:column="52">Position</name></type></param>,<param><type><name pos:line="6058" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6059" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddAttribute(This,Name,Value,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6061" pos:column="1">#<cpp:directive pos:line="6061" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6061" pos:column="9">CodeVariable2_get_IsShared</name><parameter_list pos:line="6061" pos:column="35">(<param><type><name pos:line="6061" pos:column="36">This</name></type></param>,<param><type><name pos:line="6061" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6062" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsShared(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6064" pos:column="1">#<cpp:directive pos:line="6064" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6064" pos:column="9">CodeVariable2_put_IsShared</name><parameter_list pos:line="6064" pos:column="35">(<param><type><name pos:line="6064" pos:column="36">This</name></type></param>,<param><type><name pos:line="6064" pos:column="41">noname</name></type></param>,<param><type><name pos:line="6064" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6065" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_IsShared(This,noname,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="6068" pos:column="1">#<cpp:directive pos:line="6068" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6068" pos:column="9">CodeVariable2_get_ConstKind</name><parameter_list pos:line="6068" pos:column="36">(<param><type><name pos:line="6068" pos:column="37">This</name></type></param>,<param><type><name pos:line="6068" pos:column="42">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6069" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ConstKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="6071" pos:column="1">#<cpp:directive pos:line="6071" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6071" pos:column="9">CodeVariable2_put_ConstKind</name><parameter_list pos:line="6071" pos:column="36">(<param><type><name pos:line="6071" pos:column="37">This</name></type></param>,<param><type><name pos:line="6071" pos:column="42">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6072" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_ConstKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="6074" pos:column="1">#<cpp:directive pos:line="6074" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6074" pos:column="9">CodeVariable2_get_IsGeneric</name><parameter_list pos:line="6074" pos:column="36">(<param><type><name pos:line="6074" pos:column="37">This</name></type></param>,<param><type><name pos:line="6074" pos:column="42">pIsGeneric</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6075" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsGeneric(This,pIsGeneric) )</cpp:value></cpp:define> 

<cpp:endif pos:line="6077" pos:column="1">#<cpp:directive pos:line="6077" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6077" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6080" pos:column="1">#<cpp:directive pos:line="6080" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6080" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6085" pos:column="1">#<cpp:directive pos:line="6085" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6085" pos:column="9">/* __CodeVariable2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6088" pos:column="1">#<cpp:directive pos:line="6088" pos:column="2">ifndef</cpp:directive> <name pos:line="6088" pos:column="9">__CodeDelegate2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6089" pos:column="1">#<cpp:directive pos:line="6089" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6089" pos:column="9">__CodeDelegate2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6091" pos:column="1">/* interface CodeDelegate2 */</comment>
<comment type="block" pos:line="6092" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="6095" pos:column="1">EXTERN_C</name> <specifier pos:line="6095" pos:column="10">const</specifier> <name pos:line="6095" pos:column="16">IID</name></type> <name pos:line="6095" pos:column="20">IID_CodeDelegate2</name></decl>;</decl_stmt>

<cpp:if pos:line="6097" pos:column="1">#<cpp:directive pos:line="6097" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6097" pos:column="5">defined</name><argument_list pos:line="6097" pos:column="12">(<argument><expr><name pos:line="6097" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6097" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6097" pos:column="29">!</op:operator><call><name pos:line="6097" pos:column="30">defined</name><argument_list pos:line="6097" pos:column="37">(<argument><expr><name pos:line="6097" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6099" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6099" pos:column="19">(<argument pos:line="6099" pos:column="20">"3b1b24ef-dd8e-4c98-8799-4efac80080e9"</argument>)</argument_list></macro>
    <label><name pos:line="6100" pos:column="5">CodeDelegate2</name> :</label> <expr_stmt><expr pos:line="6100" pos:column="21">public <name pos:line="6100" pos:column="28">CodeDelegate</name>
    <block pos:line="6101" pos:column="5">{
    <expr pos:line="6102" pos:column="5">public<op:operator pos:line="6102" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="6103" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="6103" pos:column="49">HRESULT</name> <name pos:line="6103" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="6103" pos:column="75">get_IsGeneric</name><argument_list pos:line="6103" pos:column="88">( 
            <comment type="block" pos:line="6104" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6104" pos:column="33">__RPC__out VARIANT_BOOL *pIsGeneric</argument>)</argument_list></macro> <op:operator pos:line="6104" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="6104" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6108" pos:column="1">#<cpp:directive pos:line="6108" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6108" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6110" pos:column="5">typedef <type><struct pos:line="6110" pos:column="13">struct <name pos:line="6110" pos:column="20">CodeDelegate2Vtbl</name>
    <block pos:line="6111" pos:column="5">{<public type="default" pos:line="6111" pos:column="6">
        <decl_stmt><decl><type><name pos:line="6112" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="6114" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="6114" pos:column="46">HRESULT</name></type> ( <name pos:line="6114" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="6114" pos:column="74">*</type:modifier><name pos:line="6114" pos:column="75">QueryInterface</name> )<parameter_list pos:line="6114" pos:column="91">( 
            <param><decl><type><name pos:line="6115" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6115" pos:column="27">*</type:modifier></type> <name pos:line="6115" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6116" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="6116" pos:column="47">struct <name pos:line="6116" pos:column="54">GUID</name> <type:modifier pos:line="6116" pos:column="59">*</type:modifier></type><name pos:line="6116" pos:column="60">riid</name></decl><op:operator pos:line="6116" pos:column="64">,</op:operator>
            <comment type="block" pos:line="6117" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="6117" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="6117" pos:column="59">void</name> <type:modifier pos:line="6117" pos:column="64">*</type:modifier><type:modifier pos:line="6117" pos:column="65">*</type:modifier><name pos:line="6117" pos:column="66">ppvObj</name><op:operator pos:line="6117" pos:column="72">,</op:operator>
            <comment type="block" pos:line="6118" pos:column="13">/* [retval][out] */</comment> <name pos:line="6118" pos:column="33">__RPC__out</name> <name pos:line="6118" pos:column="44">void</name> <type:modifier pos:line="6118" pos:column="49">*</type:modifier><name pos:line="6118" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="6120" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="6120" pos:column="46">HRESULT</name></type> ( <name pos:line="6120" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="6120" pos:column="74">*</type:modifier><name pos:line="6120" pos:column="75">AddRef</name> )<parameter_list pos:line="6120" pos:column="83">( 
            <param><decl><type><name pos:line="6121" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6121" pos:column="27">*</type:modifier></type> <name pos:line="6121" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6122" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6122" pos:column="33">__RPC__out</name> <name pos:line="6122" pos:column="44">unsigned</name> <name pos:line="6122" pos:column="53">long</name> <type:modifier pos:line="6122" pos:column="58">*</type:modifier></type><name pos:line="6122" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6124" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="6124" pos:column="46">HRESULT</name></type> ( <name pos:line="6124" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="6124" pos:column="74">*</type:modifier><name pos:line="6124" pos:column="75">Release</name> )<parameter_list pos:line="6124" pos:column="84">( 
            <param><decl><type><name pos:line="6125" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6125" pos:column="27">*</type:modifier></type> <name pos:line="6125" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6126" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6126" pos:column="33">__RPC__out</name> <name pos:line="6126" pos:column="44">unsigned</name> <name pos:line="6126" pos:column="53">long</name> <type:modifier pos:line="6126" pos:column="58">*</type:modifier></type><name pos:line="6126" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6128" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="6128" pos:column="46">HRESULT</name></type> ( <name pos:line="6128" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="6128" pos:column="74">*</type:modifier><name pos:line="6128" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="6128" pos:column="93">( 
            <param><decl><type><name pos:line="6129" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6129" pos:column="27">*</type:modifier></type> <name pos:line="6129" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6130" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="6130" pos:column="38">__RPC__out</name> <name pos:line="6130" pos:column="49">unsigned</name> <name pos:line="6130" pos:column="58">UINT</name> <type:modifier pos:line="6130" pos:column="63">*</type:modifier></type><name pos:line="6130" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="6131" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6131" pos:column="33">__RPC__out</name> <name pos:line="6131" pos:column="44">void</name> <type:modifier pos:line="6131" pos:column="49">*</type:modifier></type><name pos:line="6131" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6133" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="6133" pos:column="46">HRESULT</name></type> ( <name pos:line="6133" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="6133" pos:column="74">*</type:modifier><name pos:line="6133" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="6133" pos:column="88">( 
            <param><decl><type><name pos:line="6134" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6134" pos:column="27">*</type:modifier></type> <name pos:line="6134" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6135" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="6135" pos:column="37">unsigned</name> <name pos:line="6135" pos:column="46">UINT</name></type> <name pos:line="6135" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="6136" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="6136" pos:column="37">unsigned</name> <name pos:line="6136" pos:column="46">long</name></type> <name pos:line="6136" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="6137" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="6137" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="6137" pos:column="59">void</name> <type:modifier pos:line="6137" pos:column="64">*</type:modifier><type:modifier pos:line="6137" pos:column="65">*</type:modifier></type><name pos:line="6137" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="6138" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6138" pos:column="33">__RPC__out</name> <name pos:line="6138" pos:column="44">void</name> <type:modifier pos:line="6138" pos:column="49">*</type:modifier></type><name pos:line="6138" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6140" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="6140" pos:column="46">HRESULT</name> <argument_list pos:line="6140" pos:column="54">( <argument pos:line="6140" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6140" pos:column="90">(</op:operator> 
            <name pos:line="6141" pos:column="13">CodeDelegate2</name> <op:operator pos:line="6141" pos:column="27">*</op:operator> <name pos:line="6141" pos:column="29">This</name><op:operator pos:line="6141" pos:column="33">,</op:operator>
            <comment type="block" pos:line="6142" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6142" pos:column="37">__RPC__in</name> struct <name pos:line="6142" pos:column="54">GUID</name> <op:operator pos:line="6142" pos:column="59">*</op:operator><name pos:line="6142" pos:column="60">riid</name><op:operator pos:line="6142" pos:column="64">,</op:operator>
            <comment type="block" pos:line="6143" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6143" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="6143" pos:column="57">signed</name> <name pos:line="6143" pos:column="64">char</name> <op:operator pos:line="6143" pos:column="69">*</op:operator><op:operator pos:line="6143" pos:column="70">*</op:operator><name pos:line="6143" pos:column="71">rgszNames</name><op:operator pos:line="6143" pos:column="80">,</op:operator>
            <comment type="block" pos:line="6144" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6144" pos:column="37">unsigned</name> <name pos:line="6144" pos:column="46">UINT</name> <name pos:line="6144" pos:column="51">cNames</name><op:operator pos:line="6144" pos:column="57">,</op:operator>
            <comment type="block" pos:line="6145" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6145" pos:column="37">unsigned</name> <name pos:line="6145" pos:column="46">long</name> <name pos:line="6145" pos:column="51">lcid</name><op:operator pos:line="6145" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6146" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="6146" pos:column="38">__RPC__out</name> <name pos:line="6146" pos:column="49">signed</name> <name pos:line="6146" pos:column="56">long</name> <op:operator pos:line="6146" pos:column="61">*</op:operator><name pos:line="6146" pos:column="62">rgdispid</name><op:operator pos:line="6146" pos:column="70">,</op:operator>
            <comment type="block" pos:line="6147" pos:column="13">/* [retval][out] */</comment> <name pos:line="6147" pos:column="33">__RPC__out</name> <name pos:line="6147" pos:column="44">void</name> <op:operator pos:line="6147" pos:column="49">*</op:operator><name pos:line="6147" pos:column="50">retval</name><op:operator pos:line="6147" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6149" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="6149" pos:column="46">HRESULT</name> <argument_list pos:line="6149" pos:column="54">( <argument pos:line="6149" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6149" pos:column="83">(</op:operator> 
            <name pos:line="6150" pos:column="13">CodeDelegate2</name> <op:operator pos:line="6150" pos:column="27">*</op:operator> <name pos:line="6150" pos:column="29">This</name><op:operator pos:line="6150" pos:column="33">,</op:operator>
            <comment type="block" pos:line="6151" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6151" pos:column="37">signed</name> <name pos:line="6151" pos:column="44">long</name> <name pos:line="6151" pos:column="49">dispidMember</name><op:operator pos:line="6151" pos:column="61">,</op:operator>
            <comment type="block" pos:line="6152" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6152" pos:column="37">__RPC__in</name> struct <name pos:line="6152" pos:column="54">GUID</name> <op:operator pos:line="6152" pos:column="59">*</op:operator><name pos:line="6152" pos:column="60">riid</name><op:operator pos:line="6152" pos:column="64">,</op:operator>
            <comment type="block" pos:line="6153" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6153" pos:column="37">unsigned</name> <name pos:line="6153" pos:column="46">long</name> <name pos:line="6153" pos:column="51">lcid</name><op:operator pos:line="6153" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6154" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6154" pos:column="37">unsigned</name> <name pos:line="6154" pos:column="46">short</name> <name pos:line="6154" pos:column="52">wFlags</name><op:operator pos:line="6154" pos:column="58">,</op:operator>
            <comment type="block" pos:line="6155" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6155" pos:column="37">__RPC__in</name> struct <name pos:line="6155" pos:column="54">DISPPARAMS</name> <op:operator pos:line="6155" pos:column="65">*</op:operator><name pos:line="6155" pos:column="66">pdispparams</name><op:operator pos:line="6155" pos:column="77">,</op:operator>
            <comment type="block" pos:line="6156" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="6156" pos:column="38">__RPC__out</name> <name pos:line="6156" pos:column="49">VARIANT</name> <op:operator pos:line="6156" pos:column="57">*</op:operator><name pos:line="6156" pos:column="58">pvarResult</name><op:operator pos:line="6156" pos:column="68">,</op:operator>
            <comment type="block" pos:line="6157" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="6157" pos:column="38">__RPC__out</name> struct <name pos:line="6157" pos:column="56">EXCEPINFO</name> <op:operator pos:line="6157" pos:column="66">*</op:operator><name pos:line="6157" pos:column="67">pexcepinfo</name><op:operator pos:line="6157" pos:column="77">,</op:operator>
            <comment type="block" pos:line="6158" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="6158" pos:column="38">__RPC__out</name> <name pos:line="6158" pos:column="49">unsigned</name> <name pos:line="6158" pos:column="58">UINT</name> <op:operator pos:line="6158" pos:column="63">*</op:operator><name pos:line="6158" pos:column="64">puArgErr</name><op:operator pos:line="6158" pos:column="72">,</op:operator>
            <comment type="block" pos:line="6159" pos:column="13">/* [retval][out] */</comment> <name pos:line="6159" pos:column="33">__RPC__out</name> <name pos:line="6159" pos:column="44">void</name> <op:operator pos:line="6159" pos:column="49">*</op:operator><name pos:line="6159" pos:column="50">retval</name><op:operator pos:line="6159" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6161" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6161" pos:column="43">HRESULT</name></type> ( <name pos:line="6161" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6161" pos:column="71">*</type:modifier><name pos:line="6161" pos:column="72">get_DTE</name> )<parameter_list pos:line="6161" pos:column="81">( 
            <param><decl><type><name pos:line="6162" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6162" pos:column="27">*</type:modifier></type> <name pos:line="6162" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6163" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6163" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="6163" pos:column="54">*</type:modifier><type:modifier pos:line="6163" pos:column="55">*</type:modifier></type><name pos:line="6163" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6165" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6165" pos:column="43">HRESULT</name></type> ( <name pos:line="6165" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6165" pos:column="71">*</type:modifier><name pos:line="6165" pos:column="72">get_Collection</name> )<parameter_list pos:line="6165" pos:column="88">( 
            <param><decl><type><name pos:line="6166" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6166" pos:column="27">*</type:modifier></type> <name pos:line="6166" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6167" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6167" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6167" pos:column="54">CodeElements</name> <type:modifier pos:line="6167" pos:column="67">*</type:modifier><type:modifier pos:line="6167" pos:column="68">*</type:modifier></type><name pos:line="6167" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6169" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6169" pos:column="43">HRESULT</name></type> ( <name pos:line="6169" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6169" pos:column="71">*</type:modifier><name pos:line="6169" pos:column="72">get_Name</name> )<parameter_list pos:line="6169" pos:column="82">( 
            <param><decl><type><name pos:line="6170" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6170" pos:column="27">*</type:modifier></type> <name pos:line="6170" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6171" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6171" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6171" pos:column="54">BSTR</name> <type:modifier pos:line="6171" pos:column="59">*</type:modifier></type><name pos:line="6171" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6173" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="6173" pos:column="43">HRESULT</name></type> ( <name pos:line="6173" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6173" pos:column="71">*</type:modifier><name pos:line="6173" pos:column="72">put_Name</name> )<parameter_list pos:line="6173" pos:column="82">( 
            <param><decl><type><name pos:line="6174" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6174" pos:column="27">*</type:modifier></type> <name pos:line="6174" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6175" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6175" pos:column="33">__RPC__in</name> <name pos:line="6175" pos:column="43">BSTR</name></type> <name pos:line="6175" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="6176" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6176" pos:column="33">__RPC__out</name> <name pos:line="6176" pos:column="44">void</name> <type:modifier pos:line="6176" pos:column="49">*</type:modifier></type><name pos:line="6176" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6178" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6178" pos:column="43">HRESULT</name></type> ( <name pos:line="6178" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6178" pos:column="71">*</type:modifier><name pos:line="6178" pos:column="72">get_FullName</name> )<parameter_list pos:line="6178" pos:column="86">( 
            <param><decl><type><name pos:line="6179" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6179" pos:column="27">*</type:modifier></type> <name pos:line="6179" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6180" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6180" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6180" pos:column="54">BSTR</name> <type:modifier pos:line="6180" pos:column="59">*</type:modifier></type><name pos:line="6180" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6182" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6182" pos:column="43">HRESULT</name></type> ( <name pos:line="6182" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6182" pos:column="71">*</type:modifier><name pos:line="6182" pos:column="72">get_ProjectItem</name> )<parameter_list pos:line="6182" pos:column="89">( 
            <param><decl><type><name pos:line="6183" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6183" pos:column="27">*</type:modifier></type> <name pos:line="6183" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6184" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6184" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6184" pos:column="54">ProjectItem</name> <type:modifier pos:line="6184" pos:column="66">*</type:modifier><type:modifier pos:line="6184" pos:column="67">*</type:modifier></type><name pos:line="6184" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6186" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="6186" pos:column="43">HRESULT</name> <argument_list pos:line="6186" pos:column="51">( <argument pos:line="6186" pos:column="53">STDMETHODCALLTYPE *get_Kind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6186" pos:column="82">(</op:operator> 
            <name pos:line="6187" pos:column="13">CodeDelegate2</name> <op:operator pos:line="6187" pos:column="27">*</op:operator> <name pos:line="6187" pos:column="29">This</name><op:operator pos:line="6187" pos:column="33">,</op:operator>
            <comment type="block" pos:line="6188" pos:column="13">/* [retval][out] */</comment> <name pos:line="6188" pos:column="33">__RPC__out</name> enum <name pos:line="6188" pos:column="49">vsCMElement</name> <op:operator pos:line="6188" pos:column="61">*</op:operator><name pos:line="6188" pos:column="62">retval</name><op:operator pos:line="6188" pos:column="68">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6190" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6190" pos:column="43">HRESULT</name></type> ( <name pos:line="6190" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6190" pos:column="71">*</type:modifier><name pos:line="6190" pos:column="72">get_IsCodeType</name> )<parameter_list pos:line="6190" pos:column="88">( 
            <param><decl><type><name pos:line="6191" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6191" pos:column="27">*</type:modifier></type> <name pos:line="6191" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6192" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6192" pos:column="33">__RPC__out</name> <name pos:line="6192" pos:column="44">BOOLEAN</name> <type:modifier pos:line="6192" pos:column="52">*</type:modifier></type><name pos:line="6192" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6194" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="6194" pos:column="43">HRESULT</name> <argument_list pos:line="6194" pos:column="51">( <argument pos:line="6194" pos:column="53">STDMETHODCALLTYPE *get_InfoLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6194" pos:column="90">(</op:operator> 
            <name pos:line="6195" pos:column="13">CodeDelegate2</name> <op:operator pos:line="6195" pos:column="27">*</op:operator> <name pos:line="6195" pos:column="29">This</name><op:operator pos:line="6195" pos:column="33">,</op:operator>
            <comment type="block" pos:line="6196" pos:column="13">/* [retval][out] */</comment> <name pos:line="6196" pos:column="33">__RPC__out</name> enum <name pos:line="6196" pos:column="49">vsCMInfoLocation</name> <op:operator pos:line="6196" pos:column="66">*</op:operator><name pos:line="6196" pos:column="67">retval</name><op:operator pos:line="6196" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6198" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6198" pos:column="43">HRESULT</name></type> ( <name pos:line="6198" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6198" pos:column="71">*</type:modifier><name pos:line="6198" pos:column="72">get_Children</name> )<parameter_list pos:line="6198" pos:column="86">( 
            <param><decl><type><name pos:line="6199" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6199" pos:column="27">*</type:modifier></type> <name pos:line="6199" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6200" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6200" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6200" pos:column="54">CodeElements</name> <type:modifier pos:line="6200" pos:column="67">*</type:modifier><type:modifier pos:line="6200" pos:column="68">*</type:modifier></type><name pos:line="6200" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6202" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6202" pos:column="43">HRESULT</name></type> ( <name pos:line="6202" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6202" pos:column="71">*</type:modifier><name pos:line="6202" pos:column="72">get_Language</name> )<parameter_list pos:line="6202" pos:column="86">( 
            <param><decl><type><name pos:line="6203" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6203" pos:column="27">*</type:modifier></type> <name pos:line="6203" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6204" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6204" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6204" pos:column="54">BSTR</name> <type:modifier pos:line="6204" pos:column="59">*</type:modifier></type><name pos:line="6204" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6206" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6206" pos:column="43">HRESULT</name></type> ( <name pos:line="6206" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6206" pos:column="71">*</type:modifier><name pos:line="6206" pos:column="72">get_StartPoint</name> )<parameter_list pos:line="6206" pos:column="88">( 
            <param><decl><type><name pos:line="6207" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6207" pos:column="27">*</type:modifier></type> <name pos:line="6207" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6208" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6208" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6208" pos:column="54">TextPoint</name> <type:modifier pos:line="6208" pos:column="64">*</type:modifier><type:modifier pos:line="6208" pos:column="65">*</type:modifier></type><name pos:line="6208" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6210" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6210" pos:column="43">HRESULT</name></type> ( <name pos:line="6210" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6210" pos:column="71">*</type:modifier><name pos:line="6210" pos:column="72">get_EndPoint</name> )<parameter_list pos:line="6210" pos:column="86">( 
            <param><decl><type><name pos:line="6211" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6211" pos:column="27">*</type:modifier></type> <name pos:line="6211" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6212" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6212" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6212" pos:column="54">TextPoint</name> <type:modifier pos:line="6212" pos:column="64">*</type:modifier><type:modifier pos:line="6212" pos:column="65">*</type:modifier></type><name pos:line="6212" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6214" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6214" pos:column="43">HRESULT</name></type> ( <name pos:line="6214" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6214" pos:column="71">*</type:modifier><name pos:line="6214" pos:column="72">get_ExtenderNames</name> )<parameter_list pos:line="6214" pos:column="91">( 
            <param><decl><type><name pos:line="6215" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6215" pos:column="27">*</type:modifier></type> <name pos:line="6215" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6216" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6216" pos:column="33">__RPC__out</name> <name pos:line="6216" pos:column="44">VARIANT</name> <type:modifier pos:line="6216" pos:column="52">*</type:modifier></type><name pos:line="6216" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6218" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6218" pos:column="43">HRESULT</name></type> ( <name pos:line="6218" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6218" pos:column="71">*</type:modifier><name pos:line="6218" pos:column="72">get_Extender</name> )<parameter_list pos:line="6218" pos:column="86">( 
            <param><decl><type><name pos:line="6219" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6219" pos:column="27">*</type:modifier></type> <name pos:line="6219" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6220" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6220" pos:column="33">__RPC__in</name> <name pos:line="6220" pos:column="43">BSTR</name></type> <name pos:line="6220" pos:column="48">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="6221" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6221" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6221" pos:column="54">IDispatch</name> <type:modifier pos:line="6221" pos:column="64">*</type:modifier><type:modifier pos:line="6221" pos:column="65">*</type:modifier></type><name pos:line="6221" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6223" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6223" pos:column="43">HRESULT</name></type> ( <name pos:line="6223" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6223" pos:column="71">*</type:modifier><name pos:line="6223" pos:column="72">get_ExtenderCATID</name> )<parameter_list pos:line="6223" pos:column="91">( 
            <param><decl><type><name pos:line="6224" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6224" pos:column="27">*</type:modifier></type> <name pos:line="6224" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6225" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6225" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6225" pos:column="54">BSTR</name> <type:modifier pos:line="6225" pos:column="59">*</type:modifier></type><name pos:line="6225" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6227" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="6227" pos:column="34">HRESULT</name> <argument_list pos:line="6227" pos:column="42">( <argument pos:line="6227" pos:column="44">STDMETHODCALLTYPE *GetStartPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6227" pos:column="78">(</op:operator> 
            <name pos:line="6228" pos:column="13">CodeDelegate2</name> <op:operator pos:line="6228" pos:column="27">*</op:operator> <name pos:line="6228" pos:column="29">This</name><op:operator pos:line="6228" pos:column="33">,</op:operator>
            <comment type="block" pos:line="6229" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="6229" pos:column="42">vsCMPart</name> <name pos:line="6229" pos:column="51">Part</name><op:operator pos:line="6229" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6230" pos:column="13">/* [retval][out] */</comment> <name pos:line="6230" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6230" pos:column="54">TextPoint</name> <op:operator pos:line="6230" pos:column="64">*</op:operator><op:operator pos:line="6230" pos:column="65">*</op:operator><name pos:line="6230" pos:column="66">retval</name><op:operator pos:line="6230" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6232" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="6232" pos:column="34">HRESULT</name> <argument_list pos:line="6232" pos:column="42">( <argument pos:line="6232" pos:column="44">STDMETHODCALLTYPE *GetEndPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6232" pos:column="76">(</op:operator> 
            <name pos:line="6233" pos:column="13">CodeDelegate2</name> <op:operator pos:line="6233" pos:column="27">*</op:operator> <name pos:line="6233" pos:column="29">This</name><op:operator pos:line="6233" pos:column="33">,</op:operator>
            <comment type="block" pos:line="6234" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="6234" pos:column="42">vsCMPart</name> <name pos:line="6234" pos:column="51">Part</name><op:operator pos:line="6234" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6235" pos:column="13">/* [retval][out] */</comment> <name pos:line="6235" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6235" pos:column="54">TextPoint</name> <op:operator pos:line="6235" pos:column="64">*</op:operator><op:operator pos:line="6235" pos:column="65">*</op:operator><name pos:line="6235" pos:column="66">retval</name><op:operator pos:line="6235" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6237" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6237" pos:column="43">HRESULT</name></type> ( <name pos:line="6237" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6237" pos:column="71">*</type:modifier><name pos:line="6237" pos:column="72">get_Parent</name> )<parameter_list pos:line="6237" pos:column="84">( 
            <param><decl><type><name pos:line="6238" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6238" pos:column="27">*</type:modifier></type> <name pos:line="6238" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6239" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6239" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6239" pos:column="54">IDispatch</name> <type:modifier pos:line="6239" pos:column="64">*</type:modifier><type:modifier pos:line="6239" pos:column="65">*</type:modifier></type><name pos:line="6239" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6241" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6241" pos:column="43">HRESULT</name></type> ( <name pos:line="6241" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6241" pos:column="71">*</type:modifier><name pos:line="6241" pos:column="72">get_Namespace</name> )<parameter_list pos:line="6241" pos:column="87">( 
            <param><decl><type><name pos:line="6242" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6242" pos:column="27">*</type:modifier></type> <name pos:line="6242" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6243" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6243" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6243" pos:column="54">CodeNamespace</name> <type:modifier pos:line="6243" pos:column="68">*</type:modifier><type:modifier pos:line="6243" pos:column="69">*</type:modifier></type><name pos:line="6243" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6245" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6245" pos:column="43">HRESULT</name></type> ( <name pos:line="6245" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6245" pos:column="71">*</type:modifier><name pos:line="6245" pos:column="72">get_Bases</name> )<parameter_list pos:line="6245" pos:column="83">( 
            <param><decl><type><name pos:line="6246" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6246" pos:column="27">*</type:modifier></type> <name pos:line="6246" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6247" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6247" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6247" pos:column="54">CodeElements</name> <type:modifier pos:line="6247" pos:column="67">*</type:modifier><type:modifier pos:line="6247" pos:column="68">*</type:modifier></type><name pos:line="6247" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6249" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6249" pos:column="43">HRESULT</name></type> ( <name pos:line="6249" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6249" pos:column="71">*</type:modifier><name pos:line="6249" pos:column="72">get_Members</name> )<parameter_list pos:line="6249" pos:column="85">( 
            <param><decl><type><name pos:line="6250" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6250" pos:column="27">*</type:modifier></type> <name pos:line="6250" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6251" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6251" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6251" pos:column="54">CodeElements</name> <type:modifier pos:line="6251" pos:column="67">*</type:modifier><type:modifier pos:line="6251" pos:column="68">*</type:modifier></type><name pos:line="6251" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6253" pos:column="9">/* [id][propput][funcdescattr] */</comment> <macro><name pos:line="6253" pos:column="43">HRESULT</name> <argument_list pos:line="6253" pos:column="51">( <argument pos:line="6253" pos:column="53">STDMETHODCALLTYPE *put_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6253" pos:column="84">(</op:operator> 
            <name pos:line="6254" pos:column="13">CodeDelegate2</name> <op:operator pos:line="6254" pos:column="27">*</op:operator> <name pos:line="6254" pos:column="29">This</name><op:operator pos:line="6254" pos:column="33">,</op:operator>
            <comment type="block" pos:line="6255" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="6255" pos:column="38">vsCMAccess</name> <name pos:line="6255" pos:column="49">noname</name><op:operator pos:line="6255" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6256" pos:column="13">/* [retval][out] */</comment> <name pos:line="6256" pos:column="33">__RPC__out</name> <name pos:line="6256" pos:column="44">void</name> <op:operator pos:line="6256" pos:column="49">*</op:operator><name pos:line="6256" pos:column="50">retval</name><op:operator pos:line="6256" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6258" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="6258" pos:column="43">HRESULT</name> <argument_list pos:line="6258" pos:column="51">( <argument pos:line="6258" pos:column="53">STDMETHODCALLTYPE *get_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6258" pos:column="84">(</op:operator> 
            <name pos:line="6259" pos:column="13">CodeDelegate2</name> <op:operator pos:line="6259" pos:column="27">*</op:operator> <name pos:line="6259" pos:column="29">This</name><op:operator pos:line="6259" pos:column="33">,</op:operator>
            <comment type="block" pos:line="6260" pos:column="13">/* [retval][out] */</comment> <name pos:line="6260" pos:column="33">__RPC__out</name> enum <name pos:line="6260" pos:column="49">vsCMAccess</name> <op:operator pos:line="6260" pos:column="60">*</op:operator><name pos:line="6260" pos:column="61">retval</name><op:operator pos:line="6260" pos:column="67">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6262" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6262" pos:column="43">HRESULT</name></type> ( <name pos:line="6262" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6262" pos:column="71">*</type:modifier><name pos:line="6262" pos:column="72">get_Attributes</name> )<parameter_list pos:line="6262" pos:column="88">( 
            <param><decl><type><name pos:line="6263" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6263" pos:column="27">*</type:modifier></type> <name pos:line="6263" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6264" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6264" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6264" pos:column="54">CodeElements</name> <type:modifier pos:line="6264" pos:column="67">*</type:modifier><type:modifier pos:line="6264" pos:column="68">*</type:modifier></type><name pos:line="6264" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6266" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6266" pos:column="43">HRESULT</name></type> ( <name pos:line="6266" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6266" pos:column="71">*</type:modifier><name pos:line="6266" pos:column="72">get_DocComment</name> )<parameter_list pos:line="6266" pos:column="88">( 
            <param><decl><type><name pos:line="6267" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6267" pos:column="27">*</type:modifier></type> <name pos:line="6267" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6268" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6268" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6268" pos:column="54">BSTR</name> <type:modifier pos:line="6268" pos:column="59">*</type:modifier></type><name pos:line="6268" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6270" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="6270" pos:column="43">HRESULT</name></type> ( <name pos:line="6270" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6270" pos:column="71">*</type:modifier><name pos:line="6270" pos:column="72">put_DocComment</name> )<parameter_list pos:line="6270" pos:column="88">( 
            <param><decl><type><name pos:line="6271" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6271" pos:column="27">*</type:modifier></type> <name pos:line="6271" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6272" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6272" pos:column="33">__RPC__in</name> <name pos:line="6272" pos:column="43">BSTR</name></type> <name pos:line="6272" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="6273" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6273" pos:column="33">__RPC__out</name> <name pos:line="6273" pos:column="44">void</name> <type:modifier pos:line="6273" pos:column="49">*</type:modifier></type><name pos:line="6273" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6275" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6275" pos:column="43">HRESULT</name></type> ( <name pos:line="6275" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6275" pos:column="71">*</type:modifier><name pos:line="6275" pos:column="72">get_Comment</name> )<parameter_list pos:line="6275" pos:column="85">( 
            <param><decl><type><name pos:line="6276" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6276" pos:column="27">*</type:modifier></type> <name pos:line="6276" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6277" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6277" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6277" pos:column="54">BSTR</name> <type:modifier pos:line="6277" pos:column="59">*</type:modifier></type><name pos:line="6277" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6279" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="6279" pos:column="43">HRESULT</name></type> ( <name pos:line="6279" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6279" pos:column="71">*</type:modifier><name pos:line="6279" pos:column="72">put_Comment</name> )<parameter_list pos:line="6279" pos:column="85">( 
            <param><decl><type><name pos:line="6280" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6280" pos:column="27">*</type:modifier></type> <name pos:line="6280" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6281" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6281" pos:column="33">__RPC__in</name> <name pos:line="6281" pos:column="43">BSTR</name></type> <name pos:line="6281" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="6282" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6282" pos:column="33">__RPC__out</name> <name pos:line="6282" pos:column="44">void</name> <type:modifier pos:line="6282" pos:column="49">*</type:modifier></type><name pos:line="6282" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6284" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="6284" pos:column="34">HRESULT</name></type> ( <name pos:line="6284" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="6284" pos:column="62">*</type:modifier><name pos:line="6284" pos:column="63">AddBase</name> )<parameter_list pos:line="6284" pos:column="72">( 
            <param><decl><type><name pos:line="6285" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6285" pos:column="27">*</type:modifier></type> <name pos:line="6285" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6286" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6286" pos:column="33">VARIANT</name></type> <name pos:line="6286" pos:column="41">Base</name></decl></param>,
            <comment type="block" pos:line="6287" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="6287" pos:column="43">VARIANT</name></type> <name pos:line="6287" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="6288" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6288" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6288" pos:column="54">CodeElement</name> <type:modifier pos:line="6288" pos:column="66">*</type:modifier><type:modifier pos:line="6288" pos:column="67">*</type:modifier></type><name pos:line="6288" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6290" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="6290" pos:column="34">HRESULT</name></type> ( <name pos:line="6290" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="6290" pos:column="62">*</type:modifier><name pos:line="6290" pos:column="63">AddAttribute</name> )<parameter_list pos:line="6290" pos:column="77">( 
            <param><decl><type><name pos:line="6291" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6291" pos:column="27">*</type:modifier></type> <name pos:line="6291" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6292" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6292" pos:column="33">__RPC__in</name> <name pos:line="6292" pos:column="43">BSTR</name></type> <name pos:line="6292" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="6293" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6293" pos:column="33">__RPC__in</name> <name pos:line="6293" pos:column="43">BSTR</name></type> <name pos:line="6293" pos:column="48">Value</name></decl></param>,
            <comment type="block" pos:line="6294" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="6294" pos:column="43">VARIANT</name></type> <name pos:line="6294" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="6295" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6295" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6295" pos:column="54">CodeAttribute</name> <type:modifier pos:line="6295" pos:column="68">*</type:modifier><type:modifier pos:line="6295" pos:column="69">*</type:modifier></type><name pos:line="6295" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6297" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="6297" pos:column="34">HRESULT</name></type> ( <name pos:line="6297" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="6297" pos:column="62">*</type:modifier><name pos:line="6297" pos:column="63">RemoveBase</name> )<parameter_list pos:line="6297" pos:column="75">( 
            <param><decl><type><name pos:line="6298" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6298" pos:column="27">*</type:modifier></type> <name pos:line="6298" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6299" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6299" pos:column="33">VARIANT</name></type> <name pos:line="6299" pos:column="41">Element</name></decl></param>,
            <comment type="block" pos:line="6300" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6300" pos:column="33">__RPC__out</name> <name pos:line="6300" pos:column="44">void</name> <type:modifier pos:line="6300" pos:column="49">*</type:modifier></type><name pos:line="6300" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6302" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="6302" pos:column="34">HRESULT</name></type> ( <name pos:line="6302" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="6302" pos:column="62">*</type:modifier><name pos:line="6302" pos:column="63">RemoveMember</name> )<parameter_list pos:line="6302" pos:column="77">( 
            <param><decl><type><name pos:line="6303" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6303" pos:column="27">*</type:modifier></type> <name pos:line="6303" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6304" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6304" pos:column="33">VARIANT</name></type> <name pos:line="6304" pos:column="41">Element</name></decl></param>,
            <comment type="block" pos:line="6305" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6305" pos:column="33">__RPC__out</name> <name pos:line="6305" pos:column="44">void</name> <type:modifier pos:line="6305" pos:column="49">*</type:modifier></type><name pos:line="6305" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6307" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6307" pos:column="43">HRESULT</name></type> ( <name pos:line="6307" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6307" pos:column="71">*</type:modifier><name pos:line="6307" pos:column="72">get_IsDerivedFrom</name> )<parameter_list pos:line="6307" pos:column="91">( 
            <param><decl><type><name pos:line="6308" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6308" pos:column="27">*</type:modifier></type> <name pos:line="6308" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6309" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6309" pos:column="33">__RPC__in</name> <name pos:line="6309" pos:column="43">BSTR</name></type> <name pos:line="6309" pos:column="48">FullName</name></decl></param>,
            <comment type="block" pos:line="6310" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6310" pos:column="33">__RPC__out</name> <name pos:line="6310" pos:column="44">BOOLEAN</name> <type:modifier pos:line="6310" pos:column="52">*</type:modifier></type><name pos:line="6310" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6312" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6312" pos:column="43">HRESULT</name></type> ( <name pos:line="6312" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6312" pos:column="71">*</type:modifier><name pos:line="6312" pos:column="72">get_DerivedTypes</name> )<parameter_list pos:line="6312" pos:column="90">( 
            <param><decl><type><name pos:line="6313" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6313" pos:column="27">*</type:modifier></type> <name pos:line="6313" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6314" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6314" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6314" pos:column="54">CodeElements</name> <type:modifier pos:line="6314" pos:column="67">*</type:modifier><type:modifier pos:line="6314" pos:column="68">*</type:modifier></type><name pos:line="6314" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6316" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6316" pos:column="43">HRESULT</name></type> ( <name pos:line="6316" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6316" pos:column="71">*</type:modifier><name pos:line="6316" pos:column="72">get_BaseClass</name> )<parameter_list pos:line="6316" pos:column="87">( 
            <param><decl><type><name pos:line="6317" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6317" pos:column="27">*</type:modifier></type> <name pos:line="6317" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6318" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6318" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6318" pos:column="54">CodeClass</name> <type:modifier pos:line="6318" pos:column="64">*</type:modifier><type:modifier pos:line="6318" pos:column="65">*</type:modifier></type><name pos:line="6318" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6320" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6320" pos:column="43">HRESULT</name></type> ( <name pos:line="6320" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6320" pos:column="71">*</type:modifier><name pos:line="6320" pos:column="72">get_Prototype</name> )<parameter_list pos:line="6320" pos:column="87">( 
            <param><decl><type><name pos:line="6321" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6321" pos:column="27">*</type:modifier></type> <name pos:line="6321" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6322" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6322" pos:column="33">signed</name> <name pos:line="6322" pos:column="40">long</name></type> <name pos:line="6322" pos:column="45">Flags</name></decl></param>,
            <comment type="block" pos:line="6323" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6323" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6323" pos:column="54">BSTR</name> <type:modifier pos:line="6323" pos:column="59">*</type:modifier></type><name pos:line="6323" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6325" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6325" pos:column="43">HRESULT</name></type> ( <name pos:line="6325" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6325" pos:column="71">*</type:modifier><name pos:line="6325" pos:column="72">get_Type</name> )<parameter_list pos:line="6325" pos:column="82">( 
            <param><decl><type><name pos:line="6326" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6326" pos:column="27">*</type:modifier></type> <name pos:line="6326" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6327" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6327" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6327" pos:column="54">CodeTypeRef</name> <type:modifier pos:line="6327" pos:column="66">*</type:modifier><type:modifier pos:line="6327" pos:column="67">*</type:modifier></type><name pos:line="6327" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6329" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="6329" pos:column="43">HRESULT</name></type> ( <name pos:line="6329" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6329" pos:column="71">*</type:modifier><name pos:line="6329" pos:column="72">put_Type</name> )<parameter_list pos:line="6329" pos:column="82">( 
            <param><decl><type><name pos:line="6330" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6330" pos:column="27">*</type:modifier></type> <name pos:line="6330" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6331" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6331" pos:column="33">__RPC__in_opt</name> <name pos:line="6331" pos:column="47">CodeTypeRef</name> <type:modifier pos:line="6331" pos:column="59">*</type:modifier></type><name pos:line="6331" pos:column="60">noname</name></decl></param>,
            <comment type="block" pos:line="6332" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6332" pos:column="33">__RPC__out</name> <name pos:line="6332" pos:column="44">void</name> <type:modifier pos:line="6332" pos:column="49">*</type:modifier></type><name pos:line="6332" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6334" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6334" pos:column="43">HRESULT</name></type> ( <name pos:line="6334" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6334" pos:column="71">*</type:modifier><name pos:line="6334" pos:column="72">get_Parameters</name> )<parameter_list pos:line="6334" pos:column="88">( 
            <param><decl><type><name pos:line="6335" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6335" pos:column="27">*</type:modifier></type> <name pos:line="6335" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6336" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6336" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6336" pos:column="54">CodeElements</name> <type:modifier pos:line="6336" pos:column="67">*</type:modifier><type:modifier pos:line="6336" pos:column="68">*</type:modifier></type><name pos:line="6336" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6338" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="6338" pos:column="34">HRESULT</name></type> ( <name pos:line="6338" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="6338" pos:column="62">*</type:modifier><name pos:line="6338" pos:column="63">AddParameter</name> )<parameter_list pos:line="6338" pos:column="77">( 
            <param><decl><type><name pos:line="6339" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6339" pos:column="27">*</type:modifier></type> <name pos:line="6339" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6340" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6340" pos:column="33">__RPC__in</name> <name pos:line="6340" pos:column="43">BSTR</name></type> <name pos:line="6340" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="6341" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6341" pos:column="33">VARIANT</name></type> <name pos:line="6341" pos:column="41">Type</name></decl></param>,
            <comment type="block" pos:line="6342" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="6342" pos:column="43">VARIANT</name></type> <name pos:line="6342" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="6343" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6343" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6343" pos:column="54">CodeParameter</name> <type:modifier pos:line="6343" pos:column="68">*</type:modifier><type:modifier pos:line="6343" pos:column="69">*</type:modifier></type><name pos:line="6343" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6345" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="6345" pos:column="34">HRESULT</name></type> ( <name pos:line="6345" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="6345" pos:column="62">*</type:modifier><name pos:line="6345" pos:column="63">RemoveParameter</name> )<parameter_list pos:line="6345" pos:column="80">( 
            <param><decl><type><name pos:line="6346" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6346" pos:column="27">*</type:modifier></type> <name pos:line="6346" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6347" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6347" pos:column="33">VARIANT</name></type> <name pos:line="6347" pos:column="41">Element</name></decl></param>,
            <comment type="block" pos:line="6348" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6348" pos:column="33">__RPC__out</name> <name pos:line="6348" pos:column="44">void</name> <type:modifier pos:line="6348" pos:column="49">*</type:modifier></type><name pos:line="6348" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6350" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="6350" pos:column="41">HRESULT</name></type> ( <name pos:line="6350" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="6350" pos:column="69">*</type:modifier><name pos:line="6350" pos:column="70">get_IsGeneric</name> )<parameter_list pos:line="6350" pos:column="85">( 
            <param><decl><type><name pos:line="6351" pos:column="13">CodeDelegate2</name> <type:modifier pos:line="6351" pos:column="27">*</type:modifier></type> <name pos:line="6351" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="6352" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6352" pos:column="33">__RPC__out</name> <name pos:line="6352" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="6352" pos:column="57">*</type:modifier></type><name pos:line="6352" pos:column="58">pIsGeneric</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6354" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6355" pos:column="7">CodeDelegate2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6357" pos:column="5">interface</name></type> <name pos:line="6357" pos:column="15">CodeDelegate2</name>
    <argument_list pos:line="6358" pos:column="5">{
        <argument><expr><name pos:line="6359" pos:column="9">CONST_VTBL</name> struct <name pos:line="6359" pos:column="27">CodeDelegate2Vtbl</name> <op:operator pos:line="6359" pos:column="45">*</op:operator><name pos:line="6359" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6364" pos:column="1">#<cpp:directive pos:line="6364" pos:column="2">ifdef</cpp:directive> <name pos:line="6364" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6367" pos:column="1">#<cpp:directive pos:line="6367" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6367" pos:column="9">CodeDelegate2_QueryInterface</name><parameter_list pos:line="6367" pos:column="37">(<param><type><name pos:line="6367" pos:column="38">This</name></type></param>,<param><type><name pos:line="6367" pos:column="43">riid</name></type></param>,<param><type><name pos:line="6367" pos:column="48">ppvObj</name></type></param>,<param><type><name pos:line="6367" pos:column="55">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6368" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6370" pos:column="1">#<cpp:directive pos:line="6370" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6370" pos:column="9">CodeDelegate2_AddRef</name><parameter_list pos:line="6370" pos:column="29">(<param><type><name pos:line="6370" pos:column="30">This</name></type></param>,<param><type><name pos:line="6370" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6371" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6373" pos:column="1">#<cpp:directive pos:line="6373" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6373" pos:column="9">CodeDelegate2_Release</name><parameter_list pos:line="6373" pos:column="30">(<param><type><name pos:line="6373" pos:column="31">This</name></type></param>,<param><type><name pos:line="6373" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6374" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6376" pos:column="1">#<cpp:directive pos:line="6376" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6376" pos:column="9">CodeDelegate2_GetTypeInfoCount</name><parameter_list pos:line="6376" pos:column="39">(<param><type><name pos:line="6376" pos:column="40">This</name></type></param>,<param><type><name pos:line="6376" pos:column="45">pctinfo</name></type></param>,<param><type><name pos:line="6376" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6377" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6379" pos:column="1">#<cpp:directive pos:line="6379" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6379" pos:column="9">CodeDelegate2_GetTypeInfo</name><parameter_list pos:line="6379" pos:column="34">(<param><type><name pos:line="6379" pos:column="35">This</name></type></param>,<param><type><name pos:line="6379" pos:column="40">itinfo</name></type></param>,<param><type><name pos:line="6379" pos:column="47">lcid</name></type></param>,<param><type><name pos:line="6379" pos:column="52">pptinfo</name></type></param>,<param><type><name pos:line="6379" pos:column="60">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6380" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6382" pos:column="1">#<cpp:directive pos:line="6382" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6382" pos:column="9">CodeDelegate2_GetIDsOfNames</name><parameter_list pos:line="6382" pos:column="36">(<param><type><name pos:line="6382" pos:column="37">This</name></type></param>,<param><type><name pos:line="6382" pos:column="42">riid</name></type></param>,<param><type><name pos:line="6382" pos:column="47">rgszNames</name></type></param>,<param><type><name pos:line="6382" pos:column="57">cNames</name></type></param>,<param><type><name pos:line="6382" pos:column="64">lcid</name></type></param>,<param><type><name pos:line="6382" pos:column="69">rgdispid</name></type></param>,<param><type><name pos:line="6382" pos:column="78">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6383" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6385" pos:column="1">#<cpp:directive pos:line="6385" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6385" pos:column="9">CodeDelegate2_Invoke</name><parameter_list pos:line="6385" pos:column="29">(<param><type><name pos:line="6385" pos:column="30">This</name></type></param>,<param><type><name pos:line="6385" pos:column="35">dispidMember</name></type></param>,<param><type><name pos:line="6385" pos:column="48">riid</name></type></param>,<param><type><name pos:line="6385" pos:column="53">lcid</name></type></param>,<param><type><name pos:line="6385" pos:column="58">wFlags</name></type></param>,<param><type><name pos:line="6385" pos:column="65">pdispparams</name></type></param>,<param><type><name pos:line="6385" pos:column="77">pvarResult</name></type></param>,<param><type><name pos:line="6385" pos:column="88">pexcepinfo</name></type></param>,<param><type><name pos:line="6385" pos:column="99">puArgErr</name></type></param>,<param><type><name pos:line="6385" pos:column="108">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6386" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6388" pos:column="1">#<cpp:directive pos:line="6388" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6388" pos:column="9">CodeDelegate2_get_DTE</name><parameter_list pos:line="6388" pos:column="30">(<param><type><name pos:line="6388" pos:column="31">This</name></type></param>,<param><type><name pos:line="6388" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6389" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6391" pos:column="1">#<cpp:directive pos:line="6391" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6391" pos:column="9">CodeDelegate2_get_Collection</name><parameter_list pos:line="6391" pos:column="37">(<param><type><name pos:line="6391" pos:column="38">This</name></type></param>,<param><type><name pos:line="6391" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6392" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6394" pos:column="1">#<cpp:directive pos:line="6394" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6394" pos:column="9">CodeDelegate2_get_Name</name><parameter_list pos:line="6394" pos:column="31">(<param><type><name pos:line="6394" pos:column="32">This</name></type></param>,<param><type><name pos:line="6394" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6395" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6397" pos:column="1">#<cpp:directive pos:line="6397" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6397" pos:column="9">CodeDelegate2_put_Name</name><parameter_list pos:line="6397" pos:column="31">(<param><type><name pos:line="6397" pos:column="32">This</name></type></param>,<param><type><name pos:line="6397" pos:column="37">noname</name></type></param>,<param><type><name pos:line="6397" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6398" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6400" pos:column="1">#<cpp:directive pos:line="6400" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6400" pos:column="9">CodeDelegate2_get_FullName</name><parameter_list pos:line="6400" pos:column="35">(<param><type><name pos:line="6400" pos:column="36">This</name></type></param>,<param><type><name pos:line="6400" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6401" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6403" pos:column="1">#<cpp:directive pos:line="6403" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6403" pos:column="9">CodeDelegate2_get_ProjectItem</name><parameter_list pos:line="6403" pos:column="38">(<param><type><name pos:line="6403" pos:column="39">This</name></type></param>,<param><type><name pos:line="6403" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6404" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItem(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6406" pos:column="1">#<cpp:directive pos:line="6406" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6406" pos:column="9">CodeDelegate2_get_Kind</name><parameter_list pos:line="6406" pos:column="31">(<param><type><name pos:line="6406" pos:column="32">This</name></type></param>,<param><type><name pos:line="6406" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6407" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Kind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6409" pos:column="1">#<cpp:directive pos:line="6409" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6409" pos:column="9">CodeDelegate2_get_IsCodeType</name><parameter_list pos:line="6409" pos:column="37">(<param><type><name pos:line="6409" pos:column="38">This</name></type></param>,<param><type><name pos:line="6409" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6410" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsCodeType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6412" pos:column="1">#<cpp:directive pos:line="6412" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6412" pos:column="9">CodeDelegate2_get_InfoLocation</name><parameter_list pos:line="6412" pos:column="39">(<param><type><name pos:line="6412" pos:column="40">This</name></type></param>,<param><type><name pos:line="6412" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6413" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InfoLocation(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6415" pos:column="1">#<cpp:directive pos:line="6415" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6415" pos:column="9">CodeDelegate2_get_Children</name><parameter_list pos:line="6415" pos:column="35">(<param><type><name pos:line="6415" pos:column="36">This</name></type></param>,<param><type><name pos:line="6415" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6416" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Children(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6418" pos:column="1">#<cpp:directive pos:line="6418" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6418" pos:column="9">CodeDelegate2_get_Language</name><parameter_list pos:line="6418" pos:column="35">(<param><type><name pos:line="6418" pos:column="36">This</name></type></param>,<param><type><name pos:line="6418" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6419" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6421" pos:column="1">#<cpp:directive pos:line="6421" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6421" pos:column="9">CodeDelegate2_get_StartPoint</name><parameter_list pos:line="6421" pos:column="37">(<param><type><name pos:line="6421" pos:column="38">This</name></type></param>,<param><type><name pos:line="6421" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6422" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6424" pos:column="1">#<cpp:directive pos:line="6424" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6424" pos:column="9">CodeDelegate2_get_EndPoint</name><parameter_list pos:line="6424" pos:column="35">(<param><type><name pos:line="6424" pos:column="36">This</name></type></param>,<param><type><name pos:line="6424" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6425" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_EndPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6427" pos:column="1">#<cpp:directive pos:line="6427" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6427" pos:column="9">CodeDelegate2_get_ExtenderNames</name><parameter_list pos:line="6427" pos:column="40">(<param><type><name pos:line="6427" pos:column="41">This</name></type></param>,<param><type><name pos:line="6427" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6428" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6430" pos:column="1">#<cpp:directive pos:line="6430" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6430" pos:column="9">CodeDelegate2_get_Extender</name><parameter_list pos:line="6430" pos:column="35">(<param><type><name pos:line="6430" pos:column="36">This</name></type></param>,<param><type><name pos:line="6430" pos:column="41">ExtenderName</name></type></param>,<param><type><name pos:line="6430" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6431" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6433" pos:column="1">#<cpp:directive pos:line="6433" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6433" pos:column="9">CodeDelegate2_get_ExtenderCATID</name><parameter_list pos:line="6433" pos:column="40">(<param><type><name pos:line="6433" pos:column="41">This</name></type></param>,<param><type><name pos:line="6433" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6434" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6436" pos:column="1">#<cpp:directive pos:line="6436" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6436" pos:column="9">CodeDelegate2_GetStartPoint</name><parameter_list pos:line="6436" pos:column="36">(<param><type><name pos:line="6436" pos:column="37">This</name></type></param>,<param><type><name pos:line="6436" pos:column="42">Part</name></type></param>,<param><type><name pos:line="6436" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6437" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStartPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6439" pos:column="1">#<cpp:directive pos:line="6439" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6439" pos:column="9">CodeDelegate2_GetEndPoint</name><parameter_list pos:line="6439" pos:column="34">(<param><type><name pos:line="6439" pos:column="35">This</name></type></param>,<param><type><name pos:line="6439" pos:column="40">Part</name></type></param>,<param><type><name pos:line="6439" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6440" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6442" pos:column="1">#<cpp:directive pos:line="6442" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6442" pos:column="9">CodeDelegate2_get_Parent</name><parameter_list pos:line="6442" pos:column="33">(<param><type><name pos:line="6442" pos:column="34">This</name></type></param>,<param><type><name pos:line="6442" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6443" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6445" pos:column="1">#<cpp:directive pos:line="6445" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6445" pos:column="9">CodeDelegate2_get_Namespace</name><parameter_list pos:line="6445" pos:column="36">(<param><type><name pos:line="6445" pos:column="37">This</name></type></param>,<param><type><name pos:line="6445" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6446" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Namespace(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6448" pos:column="1">#<cpp:directive pos:line="6448" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6448" pos:column="9">CodeDelegate2_get_Bases</name><parameter_list pos:line="6448" pos:column="32">(<param><type><name pos:line="6448" pos:column="33">This</name></type></param>,<param><type><name pos:line="6448" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6449" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Bases(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6451" pos:column="1">#<cpp:directive pos:line="6451" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6451" pos:column="9">CodeDelegate2_get_Members</name><parameter_list pos:line="6451" pos:column="34">(<param><type><name pos:line="6451" pos:column="35">This</name></type></param>,<param><type><name pos:line="6451" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6452" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Members(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6454" pos:column="1">#<cpp:directive pos:line="6454" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6454" pos:column="9">CodeDelegate2_put_Access</name><parameter_list pos:line="6454" pos:column="33">(<param><type><name pos:line="6454" pos:column="34">This</name></type></param>,<param><type><name pos:line="6454" pos:column="39">noname</name></type></param>,<param><type><name pos:line="6454" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6455" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Access(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6457" pos:column="1">#<cpp:directive pos:line="6457" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6457" pos:column="9">CodeDelegate2_get_Access</name><parameter_list pos:line="6457" pos:column="33">(<param><type><name pos:line="6457" pos:column="34">This</name></type></param>,<param><type><name pos:line="6457" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6458" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Access(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6460" pos:column="1">#<cpp:directive pos:line="6460" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6460" pos:column="9">CodeDelegate2_get_Attributes</name><parameter_list pos:line="6460" pos:column="37">(<param><type><name pos:line="6460" pos:column="38">This</name></type></param>,<param><type><name pos:line="6460" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6461" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Attributes(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6463" pos:column="1">#<cpp:directive pos:line="6463" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6463" pos:column="9">CodeDelegate2_get_DocComment</name><parameter_list pos:line="6463" pos:column="37">(<param><type><name pos:line="6463" pos:column="38">This</name></type></param>,<param><type><name pos:line="6463" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6464" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DocComment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6466" pos:column="1">#<cpp:directive pos:line="6466" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6466" pos:column="9">CodeDelegate2_put_DocComment</name><parameter_list pos:line="6466" pos:column="37">(<param><type><name pos:line="6466" pos:column="38">This</name></type></param>,<param><type><name pos:line="6466" pos:column="43">noname</name></type></param>,<param><type><name pos:line="6466" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6467" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DocComment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6469" pos:column="1">#<cpp:directive pos:line="6469" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6469" pos:column="9">CodeDelegate2_get_Comment</name><parameter_list pos:line="6469" pos:column="34">(<param><type><name pos:line="6469" pos:column="35">This</name></type></param>,<param><type><name pos:line="6469" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6470" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Comment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6472" pos:column="1">#<cpp:directive pos:line="6472" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6472" pos:column="9">CodeDelegate2_put_Comment</name><parameter_list pos:line="6472" pos:column="34">(<param><type><name pos:line="6472" pos:column="35">This</name></type></param>,<param><type><name pos:line="6472" pos:column="40">noname</name></type></param>,<param><type><name pos:line="6472" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6473" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Comment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6475" pos:column="1">#<cpp:directive pos:line="6475" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6475" pos:column="9">CodeDelegate2_AddBase</name><parameter_list pos:line="6475" pos:column="30">(<param><type><name pos:line="6475" pos:column="31">This</name></type></param>,<param><type><name pos:line="6475" pos:column="36">Base</name></type></param>,<param><type><name pos:line="6475" pos:column="41">Position</name></type></param>,<param><type><name pos:line="6475" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6476" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddBase(This,Base,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6478" pos:column="1">#<cpp:directive pos:line="6478" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6478" pos:column="9">CodeDelegate2_AddAttribute</name><parameter_list pos:line="6478" pos:column="35">(<param><type><name pos:line="6478" pos:column="36">This</name></type></param>,<param><type><name pos:line="6478" pos:column="41">Name</name></type></param>,<param><type><name pos:line="6478" pos:column="46">Value</name></type></param>,<param><type><name pos:line="6478" pos:column="52">Position</name></type></param>,<param><type><name pos:line="6478" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6479" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddAttribute(This,Name,Value,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6481" pos:column="1">#<cpp:directive pos:line="6481" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6481" pos:column="9">CodeDelegate2_RemoveBase</name><parameter_list pos:line="6481" pos:column="33">(<param><type><name pos:line="6481" pos:column="34">This</name></type></param>,<param><type><name pos:line="6481" pos:column="39">Element</name></type></param>,<param><type><name pos:line="6481" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6482" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveBase(This,Element,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6484" pos:column="1">#<cpp:directive pos:line="6484" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6484" pos:column="9">CodeDelegate2_RemoveMember</name><parameter_list pos:line="6484" pos:column="35">(<param><type><name pos:line="6484" pos:column="36">This</name></type></param>,<param><type><name pos:line="6484" pos:column="41">Element</name></type></param>,<param><type><name pos:line="6484" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6485" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveMember(This,Element,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6487" pos:column="1">#<cpp:directive pos:line="6487" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6487" pos:column="9">CodeDelegate2_get_IsDerivedFrom</name><parameter_list pos:line="6487" pos:column="40">(<param><type><name pos:line="6487" pos:column="41">This</name></type></param>,<param><type><name pos:line="6487" pos:column="46">FullName</name></type></param>,<param><type><name pos:line="6487" pos:column="55">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6488" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsDerivedFrom(This,FullName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6490" pos:column="1">#<cpp:directive pos:line="6490" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6490" pos:column="9">CodeDelegate2_get_DerivedTypes</name><parameter_list pos:line="6490" pos:column="39">(<param><type><name pos:line="6490" pos:column="40">This</name></type></param>,<param><type><name pos:line="6490" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6491" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DerivedTypes(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6493" pos:column="1">#<cpp:directive pos:line="6493" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6493" pos:column="9">CodeDelegate2_get_BaseClass</name><parameter_list pos:line="6493" pos:column="36">(<param><type><name pos:line="6493" pos:column="37">This</name></type></param>,<param><type><name pos:line="6493" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6494" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_BaseClass(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6496" pos:column="1">#<cpp:directive pos:line="6496" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6496" pos:column="9">CodeDelegate2_get_Prototype</name><parameter_list pos:line="6496" pos:column="36">(<param><type><name pos:line="6496" pos:column="37">This</name></type></param>,<param><type><name pos:line="6496" pos:column="42">Flags</name></type></param>,<param><type><name pos:line="6496" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6497" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Prototype(This,Flags,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6499" pos:column="1">#<cpp:directive pos:line="6499" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6499" pos:column="9">CodeDelegate2_get_Type</name><parameter_list pos:line="6499" pos:column="31">(<param><type><name pos:line="6499" pos:column="32">This</name></type></param>,<param><type><name pos:line="6499" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6500" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Type(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6502" pos:column="1">#<cpp:directive pos:line="6502" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6502" pos:column="9">CodeDelegate2_put_Type</name><parameter_list pos:line="6502" pos:column="31">(<param><type><name pos:line="6502" pos:column="32">This</name></type></param>,<param><type><name pos:line="6502" pos:column="37">noname</name></type></param>,<param><type><name pos:line="6502" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6503" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Type(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6505" pos:column="1">#<cpp:directive pos:line="6505" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6505" pos:column="9">CodeDelegate2_get_Parameters</name><parameter_list pos:line="6505" pos:column="37">(<param><type><name pos:line="6505" pos:column="38">This</name></type></param>,<param><type><name pos:line="6505" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6506" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parameters(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6508" pos:column="1">#<cpp:directive pos:line="6508" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6508" pos:column="9">CodeDelegate2_AddParameter</name><parameter_list pos:line="6508" pos:column="35">(<param><type><name pos:line="6508" pos:column="36">This</name></type></param>,<param><type><name pos:line="6508" pos:column="41">Name</name></type></param>,<param><type><name pos:line="6508" pos:column="46">Type</name></type></param>,<param><type><name pos:line="6508" pos:column="51">Position</name></type></param>,<param><type><name pos:line="6508" pos:column="60">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6509" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddParameter(This,Name,Type,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6511" pos:column="1">#<cpp:directive pos:line="6511" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6511" pos:column="9">CodeDelegate2_RemoveParameter</name><parameter_list pos:line="6511" pos:column="38">(<param><type><name pos:line="6511" pos:column="39">This</name></type></param>,<param><type><name pos:line="6511" pos:column="44">Element</name></type></param>,<param><type><name pos:line="6511" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6512" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveParameter(This,Element,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="6515" pos:column="1">#<cpp:directive pos:line="6515" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6515" pos:column="9">CodeDelegate2_get_IsGeneric</name><parameter_list pos:line="6515" pos:column="36">(<param><type><name pos:line="6515" pos:column="37">This</name></type></param>,<param><type><name pos:line="6515" pos:column="42">pIsGeneric</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6516" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsGeneric(This,pIsGeneric) )</cpp:value></cpp:define> 

<cpp:endif pos:line="6518" pos:column="1">#<cpp:directive pos:line="6518" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="6518" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="6521" pos:column="1">#<cpp:directive pos:line="6521" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6521" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="6526" pos:column="1">#<cpp:directive pos:line="6526" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="6526" pos:column="9">/* __CodeDelegate2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="6529" pos:column="1">#<cpp:directive pos:line="6529" pos:column="2">ifndef</cpp:directive> <name pos:line="6529" pos:column="9">__CodeStruct2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="6530" pos:column="1">#<cpp:directive pos:line="6530" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6530" pos:column="9">__CodeStruct2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="6532" pos:column="1">/* interface CodeStruct2 */</comment>
<comment type="block" pos:line="6533" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="6536" pos:column="1">EXTERN_C</name> <specifier pos:line="6536" pos:column="10">const</specifier> <name pos:line="6536" pos:column="16">IID</name></type> <name pos:line="6536" pos:column="20">IID_CodeStruct2</name></decl>;</decl_stmt>

<cpp:if pos:line="6538" pos:column="1">#<cpp:directive pos:line="6538" pos:column="2">if</cpp:directive> <expr><call><name pos:line="6538" pos:column="5">defined</name><argument_list pos:line="6538" pos:column="12">(<argument><expr><name pos:line="6538" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="6538" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="6538" pos:column="29">!</op:operator><call><name pos:line="6538" pos:column="30">defined</name><argument_list pos:line="6538" pos:column="37">(<argument><expr><name pos:line="6538" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="6540" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="6540" pos:column="19">(<argument pos:line="6540" pos:column="20">"f6dc1a01-e65a-404b-8b6d-9cdd603db4ed"</argument>)</argument_list></macro>
    <label><name pos:line="6541" pos:column="5">CodeStruct2</name> :</label> <expr_stmt><expr pos:line="6541" pos:column="19">public <name pos:line="6541" pos:column="26">CodeStruct</name>
    <block pos:line="6542" pos:column="5">{
    <expr pos:line="6543" pos:column="5">public<op:operator pos:line="6543" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="6544" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="6544" pos:column="49">HRESULT</name> <name pos:line="6544" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="6544" pos:column="75">get_IsGeneric</name><argument_list pos:line="6544" pos:column="88">( 
            <comment type="block" pos:line="6545" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6545" pos:column="33">__RPC__out VARIANT_BOOL *pIsGeneric</argument>)</argument_list></macro> <op:operator pos:line="6545" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="6545" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="6547" pos:column="9">virtual <comment type="block" pos:line="6547" pos:column="17">/* [helpstring][id] */</comment> <name pos:line="6547" pos:column="40">HRESULT</name> <name pos:line="6547" pos:column="48">STDMETHODCALLTYPE</name> <macro><name pos:line="6547" pos:column="66">AddEvent</name><argument_list pos:line="6547" pos:column="74">( 
            <argument pos:line="6548" pos:column="13">__RPC__in BSTR Name</argument>,
            <argument pos:line="6549" pos:column="13">__RPC__in BSTR FullDelegateName</argument>,
            <comment type="block" pos:line="6550" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="6550" pos:column="38">VARIANT_BOOL CreatePropertyStyleEvent</argument>,
            <comment type="block" pos:line="6551" pos:column="13">/* [optional] */</comment> <argument pos:line="6551" pos:column="30">VARIANT Position</argument>,
            <comment type="block" pos:line="6552" pos:column="13">/* [defaultvalue] */</comment> <argument pos:line="6552" pos:column="34">enum <comment type="block" pos:line="6552" pos:column="39">/* external definition not present */</comment> vsCMAccess Access</argument>,
            <comment type="block" pos:line="6553" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6553" pos:column="33">__RPC__deref_out_opt CodeEvent **ppEvent</argument>)</argument_list></macro> <op:operator pos:line="6553" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="6553" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="6555" pos:column="9">virtual <comment type="block" pos:line="6555" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="6555" pos:column="81">HRESULT</name> <name pos:line="6555" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="6555" pos:column="107">get_DataTypeKind</name><argument_list pos:line="6555" pos:column="123">( 
            <comment type="block" pos:line="6556" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6556" pos:column="33">__RPC__out vsCMDataTypeKind *Kind</argument>)</argument_list></macro> <op:operator pos:line="6556" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="6556" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="6558" pos:column="9">virtual <comment type="block" pos:line="6558" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="6558" pos:column="81">HRESULT</name> <name pos:line="6558" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="6558" pos:column="107">put_DataTypeKind</name><argument_list pos:line="6558" pos:column="123">( 
            <argument pos:line="6559" pos:column="13">vsCMDataTypeKind Kind</argument>)</argument_list></macro> <op:operator pos:line="6559" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="6559" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="6561" pos:column="9">virtual <comment type="block" pos:line="6561" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="6561" pos:column="81">HRESULT</name> <name pos:line="6561" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="6561" pos:column="107">get_Parts</name><argument_list pos:line="6561" pos:column="116">( 
            <comment type="block" pos:line="6562" pos:column="13">/* [retval][out] */</comment> <argument pos:line="6562" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="6562" pos:column="54">/* external definition not present */</comment> CodeElements **Elements</argument>)</argument_list></macro> <op:operator pos:line="6562" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="6562" pos:column="119">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="6566" pos:column="1">#<cpp:directive pos:line="6566" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="6566" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="6568" pos:column="5">typedef <type><struct pos:line="6568" pos:column="13">struct <name pos:line="6568" pos:column="20">CodeStruct2Vtbl</name>
    <block pos:line="6569" pos:column="5">{<public type="default" pos:line="6569" pos:column="6">
        <decl_stmt><decl><type><name pos:line="6570" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="6572" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="6572" pos:column="46">HRESULT</name></type> ( <name pos:line="6572" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="6572" pos:column="74">*</type:modifier><name pos:line="6572" pos:column="75">QueryInterface</name> )<parameter_list pos:line="6572" pos:column="91">( 
            <param><decl><type><name pos:line="6573" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6573" pos:column="25">*</type:modifier></type> <name pos:line="6573" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6574" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="6574" pos:column="47">struct <name pos:line="6574" pos:column="54">GUID</name> <type:modifier pos:line="6574" pos:column="59">*</type:modifier></type><name pos:line="6574" pos:column="60">riid</name></decl><op:operator pos:line="6574" pos:column="64">,</op:operator>
            <comment type="block" pos:line="6575" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="6575" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="6575" pos:column="59">void</name> <type:modifier pos:line="6575" pos:column="64">*</type:modifier><type:modifier pos:line="6575" pos:column="65">*</type:modifier><name pos:line="6575" pos:column="66">ppvObj</name><op:operator pos:line="6575" pos:column="72">,</op:operator>
            <comment type="block" pos:line="6576" pos:column="13">/* [retval][out] */</comment> <name pos:line="6576" pos:column="33">__RPC__out</name> <name pos:line="6576" pos:column="44">void</name> <type:modifier pos:line="6576" pos:column="49">*</type:modifier><name pos:line="6576" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="6578" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="6578" pos:column="46">HRESULT</name></type> ( <name pos:line="6578" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="6578" pos:column="74">*</type:modifier><name pos:line="6578" pos:column="75">AddRef</name> )<parameter_list pos:line="6578" pos:column="83">( 
            <param><decl><type><name pos:line="6579" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6579" pos:column="25">*</type:modifier></type> <name pos:line="6579" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6580" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6580" pos:column="33">__RPC__out</name> <name pos:line="6580" pos:column="44">unsigned</name> <name pos:line="6580" pos:column="53">long</name> <type:modifier pos:line="6580" pos:column="58">*</type:modifier></type><name pos:line="6580" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6582" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="6582" pos:column="46">HRESULT</name></type> ( <name pos:line="6582" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="6582" pos:column="74">*</type:modifier><name pos:line="6582" pos:column="75">Release</name> )<parameter_list pos:line="6582" pos:column="84">( 
            <param><decl><type><name pos:line="6583" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6583" pos:column="25">*</type:modifier></type> <name pos:line="6583" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6584" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6584" pos:column="33">__RPC__out</name> <name pos:line="6584" pos:column="44">unsigned</name> <name pos:line="6584" pos:column="53">long</name> <type:modifier pos:line="6584" pos:column="58">*</type:modifier></type><name pos:line="6584" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6586" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="6586" pos:column="46">HRESULT</name></type> ( <name pos:line="6586" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="6586" pos:column="74">*</type:modifier><name pos:line="6586" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="6586" pos:column="93">( 
            <param><decl><type><name pos:line="6587" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6587" pos:column="25">*</type:modifier></type> <name pos:line="6587" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6588" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="6588" pos:column="38">__RPC__out</name> <name pos:line="6588" pos:column="49">unsigned</name> <name pos:line="6588" pos:column="58">UINT</name> <type:modifier pos:line="6588" pos:column="63">*</type:modifier></type><name pos:line="6588" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="6589" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6589" pos:column="33">__RPC__out</name> <name pos:line="6589" pos:column="44">void</name> <type:modifier pos:line="6589" pos:column="49">*</type:modifier></type><name pos:line="6589" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6591" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="6591" pos:column="46">HRESULT</name></type> ( <name pos:line="6591" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="6591" pos:column="74">*</type:modifier><name pos:line="6591" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="6591" pos:column="88">( 
            <param><decl><type><name pos:line="6592" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6592" pos:column="25">*</type:modifier></type> <name pos:line="6592" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6593" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="6593" pos:column="37">unsigned</name> <name pos:line="6593" pos:column="46">UINT</name></type> <name pos:line="6593" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="6594" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="6594" pos:column="37">unsigned</name> <name pos:line="6594" pos:column="46">long</name></type> <name pos:line="6594" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="6595" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="6595" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="6595" pos:column="59">void</name> <type:modifier pos:line="6595" pos:column="64">*</type:modifier><type:modifier pos:line="6595" pos:column="65">*</type:modifier></type><name pos:line="6595" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="6596" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6596" pos:column="33">__RPC__out</name> <name pos:line="6596" pos:column="44">void</name> <type:modifier pos:line="6596" pos:column="49">*</type:modifier></type><name pos:line="6596" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6598" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="6598" pos:column="46">HRESULT</name> <argument_list pos:line="6598" pos:column="54">( <argument pos:line="6598" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6598" pos:column="90">(</op:operator> 
            <name pos:line="6599" pos:column="13">CodeStruct2</name> <op:operator pos:line="6599" pos:column="25">*</op:operator> <name pos:line="6599" pos:column="27">This</name><op:operator pos:line="6599" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6600" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6600" pos:column="37">__RPC__in</name> struct <name pos:line="6600" pos:column="54">GUID</name> <op:operator pos:line="6600" pos:column="59">*</op:operator><name pos:line="6600" pos:column="60">riid</name><op:operator pos:line="6600" pos:column="64">,</op:operator>
            <comment type="block" pos:line="6601" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6601" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="6601" pos:column="57">signed</name> <name pos:line="6601" pos:column="64">char</name> <op:operator pos:line="6601" pos:column="69">*</op:operator><op:operator pos:line="6601" pos:column="70">*</op:operator><name pos:line="6601" pos:column="71">rgszNames</name><op:operator pos:line="6601" pos:column="80">,</op:operator>
            <comment type="block" pos:line="6602" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6602" pos:column="37">unsigned</name> <name pos:line="6602" pos:column="46">UINT</name> <name pos:line="6602" pos:column="51">cNames</name><op:operator pos:line="6602" pos:column="57">,</op:operator>
            <comment type="block" pos:line="6603" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6603" pos:column="37">unsigned</name> <name pos:line="6603" pos:column="46">long</name> <name pos:line="6603" pos:column="51">lcid</name><op:operator pos:line="6603" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6604" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="6604" pos:column="38">__RPC__out</name> <name pos:line="6604" pos:column="49">signed</name> <name pos:line="6604" pos:column="56">long</name> <op:operator pos:line="6604" pos:column="61">*</op:operator><name pos:line="6604" pos:column="62">rgdispid</name><op:operator pos:line="6604" pos:column="70">,</op:operator>
            <comment type="block" pos:line="6605" pos:column="13">/* [retval][out] */</comment> <name pos:line="6605" pos:column="33">__RPC__out</name> <name pos:line="6605" pos:column="44">void</name> <op:operator pos:line="6605" pos:column="49">*</op:operator><name pos:line="6605" pos:column="50">retval</name><op:operator pos:line="6605" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6607" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="6607" pos:column="46">HRESULT</name> <argument_list pos:line="6607" pos:column="54">( <argument pos:line="6607" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6607" pos:column="83">(</op:operator> 
            <name pos:line="6608" pos:column="13">CodeStruct2</name> <op:operator pos:line="6608" pos:column="25">*</op:operator> <name pos:line="6608" pos:column="27">This</name><op:operator pos:line="6608" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6609" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6609" pos:column="37">signed</name> <name pos:line="6609" pos:column="44">long</name> <name pos:line="6609" pos:column="49">dispidMember</name><op:operator pos:line="6609" pos:column="61">,</op:operator>
            <comment type="block" pos:line="6610" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6610" pos:column="37">__RPC__in</name> struct <name pos:line="6610" pos:column="54">GUID</name> <op:operator pos:line="6610" pos:column="59">*</op:operator><name pos:line="6610" pos:column="60">riid</name><op:operator pos:line="6610" pos:column="64">,</op:operator>
            <comment type="block" pos:line="6611" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6611" pos:column="37">unsigned</name> <name pos:line="6611" pos:column="46">long</name> <name pos:line="6611" pos:column="51">lcid</name><op:operator pos:line="6611" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6612" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6612" pos:column="37">unsigned</name> <name pos:line="6612" pos:column="46">short</name> <name pos:line="6612" pos:column="52">wFlags</name><op:operator pos:line="6612" pos:column="58">,</op:operator>
            <comment type="block" pos:line="6613" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="6613" pos:column="37">__RPC__in</name> struct <name pos:line="6613" pos:column="54">DISPPARAMS</name> <op:operator pos:line="6613" pos:column="65">*</op:operator><name pos:line="6613" pos:column="66">pdispparams</name><op:operator pos:line="6613" pos:column="77">,</op:operator>
            <comment type="block" pos:line="6614" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="6614" pos:column="38">__RPC__out</name> <name pos:line="6614" pos:column="49">VARIANT</name> <op:operator pos:line="6614" pos:column="57">*</op:operator><name pos:line="6614" pos:column="58">pvarResult</name><op:operator pos:line="6614" pos:column="68">,</op:operator>
            <comment type="block" pos:line="6615" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="6615" pos:column="38">__RPC__out</name> struct <name pos:line="6615" pos:column="56">EXCEPINFO</name> <op:operator pos:line="6615" pos:column="66">*</op:operator><name pos:line="6615" pos:column="67">pexcepinfo</name><op:operator pos:line="6615" pos:column="77">,</op:operator>
            <comment type="block" pos:line="6616" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="6616" pos:column="38">__RPC__out</name> <name pos:line="6616" pos:column="49">unsigned</name> <name pos:line="6616" pos:column="58">UINT</name> <op:operator pos:line="6616" pos:column="63">*</op:operator><name pos:line="6616" pos:column="64">puArgErr</name><op:operator pos:line="6616" pos:column="72">,</op:operator>
            <comment type="block" pos:line="6617" pos:column="13">/* [retval][out] */</comment> <name pos:line="6617" pos:column="33">__RPC__out</name> <name pos:line="6617" pos:column="44">void</name> <op:operator pos:line="6617" pos:column="49">*</op:operator><name pos:line="6617" pos:column="50">retval</name><op:operator pos:line="6617" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6619" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6619" pos:column="43">HRESULT</name></type> ( <name pos:line="6619" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6619" pos:column="71">*</type:modifier><name pos:line="6619" pos:column="72">get_DTE</name> )<parameter_list pos:line="6619" pos:column="81">( 
            <param><decl><type><name pos:line="6620" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6620" pos:column="25">*</type:modifier></type> <name pos:line="6620" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6621" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6621" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="6621" pos:column="54">*</type:modifier><type:modifier pos:line="6621" pos:column="55">*</type:modifier></type><name pos:line="6621" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6623" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6623" pos:column="43">HRESULT</name></type> ( <name pos:line="6623" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6623" pos:column="71">*</type:modifier><name pos:line="6623" pos:column="72">get_Collection</name> )<parameter_list pos:line="6623" pos:column="88">( 
            <param><decl><type><name pos:line="6624" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6624" pos:column="25">*</type:modifier></type> <name pos:line="6624" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6625" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6625" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6625" pos:column="54">CodeElements</name> <type:modifier pos:line="6625" pos:column="67">*</type:modifier><type:modifier pos:line="6625" pos:column="68">*</type:modifier></type><name pos:line="6625" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6627" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6627" pos:column="43">HRESULT</name></type> ( <name pos:line="6627" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6627" pos:column="71">*</type:modifier><name pos:line="6627" pos:column="72">get_Name</name> )<parameter_list pos:line="6627" pos:column="82">( 
            <param><decl><type><name pos:line="6628" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6628" pos:column="25">*</type:modifier></type> <name pos:line="6628" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6629" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6629" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6629" pos:column="54">BSTR</name> <type:modifier pos:line="6629" pos:column="59">*</type:modifier></type><name pos:line="6629" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6631" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="6631" pos:column="43">HRESULT</name></type> ( <name pos:line="6631" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6631" pos:column="71">*</type:modifier><name pos:line="6631" pos:column="72">put_Name</name> )<parameter_list pos:line="6631" pos:column="82">( 
            <param><decl><type><name pos:line="6632" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6632" pos:column="25">*</type:modifier></type> <name pos:line="6632" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6633" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6633" pos:column="33">__RPC__in</name> <name pos:line="6633" pos:column="43">BSTR</name></type> <name pos:line="6633" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="6634" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6634" pos:column="33">__RPC__out</name> <name pos:line="6634" pos:column="44">void</name> <type:modifier pos:line="6634" pos:column="49">*</type:modifier></type><name pos:line="6634" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6636" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6636" pos:column="43">HRESULT</name></type> ( <name pos:line="6636" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6636" pos:column="71">*</type:modifier><name pos:line="6636" pos:column="72">get_FullName</name> )<parameter_list pos:line="6636" pos:column="86">( 
            <param><decl><type><name pos:line="6637" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6637" pos:column="25">*</type:modifier></type> <name pos:line="6637" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6638" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6638" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6638" pos:column="54">BSTR</name> <type:modifier pos:line="6638" pos:column="59">*</type:modifier></type><name pos:line="6638" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6640" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6640" pos:column="43">HRESULT</name></type> ( <name pos:line="6640" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6640" pos:column="71">*</type:modifier><name pos:line="6640" pos:column="72">get_ProjectItem</name> )<parameter_list pos:line="6640" pos:column="89">( 
            <param><decl><type><name pos:line="6641" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6641" pos:column="25">*</type:modifier></type> <name pos:line="6641" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6642" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6642" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6642" pos:column="54">ProjectItem</name> <type:modifier pos:line="6642" pos:column="66">*</type:modifier><type:modifier pos:line="6642" pos:column="67">*</type:modifier></type><name pos:line="6642" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6644" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="6644" pos:column="43">HRESULT</name> <argument_list pos:line="6644" pos:column="51">( <argument pos:line="6644" pos:column="53">STDMETHODCALLTYPE *get_Kind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6644" pos:column="82">(</op:operator> 
            <name pos:line="6645" pos:column="13">CodeStruct2</name> <op:operator pos:line="6645" pos:column="25">*</op:operator> <name pos:line="6645" pos:column="27">This</name><op:operator pos:line="6645" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6646" pos:column="13">/* [retval][out] */</comment> <name pos:line="6646" pos:column="33">__RPC__out</name> enum <name pos:line="6646" pos:column="49">vsCMElement</name> <op:operator pos:line="6646" pos:column="61">*</op:operator><name pos:line="6646" pos:column="62">retval</name><op:operator pos:line="6646" pos:column="68">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6648" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6648" pos:column="43">HRESULT</name></type> ( <name pos:line="6648" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6648" pos:column="71">*</type:modifier><name pos:line="6648" pos:column="72">get_IsCodeType</name> )<parameter_list pos:line="6648" pos:column="88">( 
            <param><decl><type><name pos:line="6649" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6649" pos:column="25">*</type:modifier></type> <name pos:line="6649" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6650" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6650" pos:column="33">__RPC__out</name> <name pos:line="6650" pos:column="44">BOOLEAN</name> <type:modifier pos:line="6650" pos:column="52">*</type:modifier></type><name pos:line="6650" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6652" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="6652" pos:column="43">HRESULT</name> <argument_list pos:line="6652" pos:column="51">( <argument pos:line="6652" pos:column="53">STDMETHODCALLTYPE *get_InfoLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6652" pos:column="90">(</op:operator> 
            <name pos:line="6653" pos:column="13">CodeStruct2</name> <op:operator pos:line="6653" pos:column="25">*</op:operator> <name pos:line="6653" pos:column="27">This</name><op:operator pos:line="6653" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6654" pos:column="13">/* [retval][out] */</comment> <name pos:line="6654" pos:column="33">__RPC__out</name> enum <name pos:line="6654" pos:column="49">vsCMInfoLocation</name> <op:operator pos:line="6654" pos:column="66">*</op:operator><name pos:line="6654" pos:column="67">retval</name><op:operator pos:line="6654" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6656" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6656" pos:column="43">HRESULT</name></type> ( <name pos:line="6656" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6656" pos:column="71">*</type:modifier><name pos:line="6656" pos:column="72">get_Children</name> )<parameter_list pos:line="6656" pos:column="86">( 
            <param><decl><type><name pos:line="6657" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6657" pos:column="25">*</type:modifier></type> <name pos:line="6657" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6658" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6658" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6658" pos:column="54">CodeElements</name> <type:modifier pos:line="6658" pos:column="67">*</type:modifier><type:modifier pos:line="6658" pos:column="68">*</type:modifier></type><name pos:line="6658" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6660" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6660" pos:column="43">HRESULT</name></type> ( <name pos:line="6660" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6660" pos:column="71">*</type:modifier><name pos:line="6660" pos:column="72">get_Language</name> )<parameter_list pos:line="6660" pos:column="86">( 
            <param><decl><type><name pos:line="6661" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6661" pos:column="25">*</type:modifier></type> <name pos:line="6661" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6662" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6662" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6662" pos:column="54">BSTR</name> <type:modifier pos:line="6662" pos:column="59">*</type:modifier></type><name pos:line="6662" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6664" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6664" pos:column="43">HRESULT</name></type> ( <name pos:line="6664" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6664" pos:column="71">*</type:modifier><name pos:line="6664" pos:column="72">get_StartPoint</name> )<parameter_list pos:line="6664" pos:column="88">( 
            <param><decl><type><name pos:line="6665" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6665" pos:column="25">*</type:modifier></type> <name pos:line="6665" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6666" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6666" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6666" pos:column="54">TextPoint</name> <type:modifier pos:line="6666" pos:column="64">*</type:modifier><type:modifier pos:line="6666" pos:column="65">*</type:modifier></type><name pos:line="6666" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6668" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6668" pos:column="43">HRESULT</name></type> ( <name pos:line="6668" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6668" pos:column="71">*</type:modifier><name pos:line="6668" pos:column="72">get_EndPoint</name> )<parameter_list pos:line="6668" pos:column="86">( 
            <param><decl><type><name pos:line="6669" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6669" pos:column="25">*</type:modifier></type> <name pos:line="6669" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6670" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6670" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6670" pos:column="54">TextPoint</name> <type:modifier pos:line="6670" pos:column="64">*</type:modifier><type:modifier pos:line="6670" pos:column="65">*</type:modifier></type><name pos:line="6670" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6672" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6672" pos:column="43">HRESULT</name></type> ( <name pos:line="6672" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6672" pos:column="71">*</type:modifier><name pos:line="6672" pos:column="72">get_ExtenderNames</name> )<parameter_list pos:line="6672" pos:column="91">( 
            <param><decl><type><name pos:line="6673" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6673" pos:column="25">*</type:modifier></type> <name pos:line="6673" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6674" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6674" pos:column="33">__RPC__out</name> <name pos:line="6674" pos:column="44">VARIANT</name> <type:modifier pos:line="6674" pos:column="52">*</type:modifier></type><name pos:line="6674" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6676" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6676" pos:column="43">HRESULT</name></type> ( <name pos:line="6676" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6676" pos:column="71">*</type:modifier><name pos:line="6676" pos:column="72">get_Extender</name> )<parameter_list pos:line="6676" pos:column="86">( 
            <param><decl><type><name pos:line="6677" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6677" pos:column="25">*</type:modifier></type> <name pos:line="6677" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6678" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6678" pos:column="33">__RPC__in</name> <name pos:line="6678" pos:column="43">BSTR</name></type> <name pos:line="6678" pos:column="48">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="6679" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6679" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6679" pos:column="54">IDispatch</name> <type:modifier pos:line="6679" pos:column="64">*</type:modifier><type:modifier pos:line="6679" pos:column="65">*</type:modifier></type><name pos:line="6679" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6681" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6681" pos:column="43">HRESULT</name></type> ( <name pos:line="6681" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6681" pos:column="71">*</type:modifier><name pos:line="6681" pos:column="72">get_ExtenderCATID</name> )<parameter_list pos:line="6681" pos:column="91">( 
            <param><decl><type><name pos:line="6682" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6682" pos:column="25">*</type:modifier></type> <name pos:line="6682" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6683" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6683" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6683" pos:column="54">BSTR</name> <type:modifier pos:line="6683" pos:column="59">*</type:modifier></type><name pos:line="6683" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6685" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="6685" pos:column="34">HRESULT</name> <argument_list pos:line="6685" pos:column="42">( <argument pos:line="6685" pos:column="44">STDMETHODCALLTYPE *GetStartPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6685" pos:column="78">(</op:operator> 
            <name pos:line="6686" pos:column="13">CodeStruct2</name> <op:operator pos:line="6686" pos:column="25">*</op:operator> <name pos:line="6686" pos:column="27">This</name><op:operator pos:line="6686" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6687" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="6687" pos:column="42">vsCMPart</name> <name pos:line="6687" pos:column="51">Part</name><op:operator pos:line="6687" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6688" pos:column="13">/* [retval][out] */</comment> <name pos:line="6688" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6688" pos:column="54">TextPoint</name> <op:operator pos:line="6688" pos:column="64">*</op:operator><op:operator pos:line="6688" pos:column="65">*</op:operator><name pos:line="6688" pos:column="66">retval</name><op:operator pos:line="6688" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6690" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="6690" pos:column="34">HRESULT</name> <argument_list pos:line="6690" pos:column="42">( <argument pos:line="6690" pos:column="44">STDMETHODCALLTYPE *GetEndPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6690" pos:column="76">(</op:operator> 
            <name pos:line="6691" pos:column="13">CodeStruct2</name> <op:operator pos:line="6691" pos:column="25">*</op:operator> <name pos:line="6691" pos:column="27">This</name><op:operator pos:line="6691" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6692" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="6692" pos:column="42">vsCMPart</name> <name pos:line="6692" pos:column="51">Part</name><op:operator pos:line="6692" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6693" pos:column="13">/* [retval][out] */</comment> <name pos:line="6693" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6693" pos:column="54">TextPoint</name> <op:operator pos:line="6693" pos:column="64">*</op:operator><op:operator pos:line="6693" pos:column="65">*</op:operator><name pos:line="6693" pos:column="66">retval</name><op:operator pos:line="6693" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6695" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6695" pos:column="43">HRESULT</name></type> ( <name pos:line="6695" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6695" pos:column="71">*</type:modifier><name pos:line="6695" pos:column="72">get_Parent</name> )<parameter_list pos:line="6695" pos:column="84">( 
            <param><decl><type><name pos:line="6696" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6696" pos:column="25">*</type:modifier></type> <name pos:line="6696" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6697" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6697" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6697" pos:column="54">IDispatch</name> <type:modifier pos:line="6697" pos:column="64">*</type:modifier><type:modifier pos:line="6697" pos:column="65">*</type:modifier></type><name pos:line="6697" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6699" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6699" pos:column="43">HRESULT</name></type> ( <name pos:line="6699" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6699" pos:column="71">*</type:modifier><name pos:line="6699" pos:column="72">get_Namespace</name> )<parameter_list pos:line="6699" pos:column="87">( 
            <param><decl><type><name pos:line="6700" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6700" pos:column="25">*</type:modifier></type> <name pos:line="6700" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6701" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6701" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6701" pos:column="54">CodeNamespace</name> <type:modifier pos:line="6701" pos:column="68">*</type:modifier><type:modifier pos:line="6701" pos:column="69">*</type:modifier></type><name pos:line="6701" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6703" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6703" pos:column="43">HRESULT</name></type> ( <name pos:line="6703" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6703" pos:column="71">*</type:modifier><name pos:line="6703" pos:column="72">get_Bases</name> )<parameter_list pos:line="6703" pos:column="83">( 
            <param><decl><type><name pos:line="6704" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6704" pos:column="25">*</type:modifier></type> <name pos:line="6704" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6705" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6705" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6705" pos:column="54">CodeElements</name> <type:modifier pos:line="6705" pos:column="67">*</type:modifier><type:modifier pos:line="6705" pos:column="68">*</type:modifier></type><name pos:line="6705" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6707" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6707" pos:column="43">HRESULT</name></type> ( <name pos:line="6707" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6707" pos:column="71">*</type:modifier><name pos:line="6707" pos:column="72">get_Members</name> )<parameter_list pos:line="6707" pos:column="85">( 
            <param><decl><type><name pos:line="6708" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6708" pos:column="25">*</type:modifier></type> <name pos:line="6708" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6709" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6709" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6709" pos:column="54">CodeElements</name> <type:modifier pos:line="6709" pos:column="67">*</type:modifier><type:modifier pos:line="6709" pos:column="68">*</type:modifier></type><name pos:line="6709" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6711" pos:column="9">/* [id][propput][funcdescattr] */</comment> <macro><name pos:line="6711" pos:column="43">HRESULT</name> <argument_list pos:line="6711" pos:column="51">( <argument pos:line="6711" pos:column="53">STDMETHODCALLTYPE *put_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6711" pos:column="84">(</op:operator> 
            <name pos:line="6712" pos:column="13">CodeStruct2</name> <op:operator pos:line="6712" pos:column="25">*</op:operator> <name pos:line="6712" pos:column="27">This</name><op:operator pos:line="6712" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6713" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="6713" pos:column="38">vsCMAccess</name> <name pos:line="6713" pos:column="49">noname</name><op:operator pos:line="6713" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6714" pos:column="13">/* [retval][out] */</comment> <name pos:line="6714" pos:column="33">__RPC__out</name> <name pos:line="6714" pos:column="44">void</name> <op:operator pos:line="6714" pos:column="49">*</op:operator><name pos:line="6714" pos:column="50">retval</name><op:operator pos:line="6714" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6716" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="6716" pos:column="43">HRESULT</name> <argument_list pos:line="6716" pos:column="51">( <argument pos:line="6716" pos:column="53">STDMETHODCALLTYPE *get_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6716" pos:column="84">(</op:operator> 
            <name pos:line="6717" pos:column="13">CodeStruct2</name> <op:operator pos:line="6717" pos:column="25">*</op:operator> <name pos:line="6717" pos:column="27">This</name><op:operator pos:line="6717" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6718" pos:column="13">/* [retval][out] */</comment> <name pos:line="6718" pos:column="33">__RPC__out</name> enum <name pos:line="6718" pos:column="49">vsCMAccess</name> <op:operator pos:line="6718" pos:column="60">*</op:operator><name pos:line="6718" pos:column="61">retval</name><op:operator pos:line="6718" pos:column="67">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6720" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6720" pos:column="43">HRESULT</name></type> ( <name pos:line="6720" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6720" pos:column="71">*</type:modifier><name pos:line="6720" pos:column="72">get_Attributes</name> )<parameter_list pos:line="6720" pos:column="88">( 
            <param><decl><type><name pos:line="6721" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6721" pos:column="25">*</type:modifier></type> <name pos:line="6721" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6722" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6722" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6722" pos:column="54">CodeElements</name> <type:modifier pos:line="6722" pos:column="67">*</type:modifier><type:modifier pos:line="6722" pos:column="68">*</type:modifier></type><name pos:line="6722" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6724" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6724" pos:column="43">HRESULT</name></type> ( <name pos:line="6724" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6724" pos:column="71">*</type:modifier><name pos:line="6724" pos:column="72">get_DocComment</name> )<parameter_list pos:line="6724" pos:column="88">( 
            <param><decl><type><name pos:line="6725" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6725" pos:column="25">*</type:modifier></type> <name pos:line="6725" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6726" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6726" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6726" pos:column="54">BSTR</name> <type:modifier pos:line="6726" pos:column="59">*</type:modifier></type><name pos:line="6726" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6728" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="6728" pos:column="43">HRESULT</name></type> ( <name pos:line="6728" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6728" pos:column="71">*</type:modifier><name pos:line="6728" pos:column="72">put_DocComment</name> )<parameter_list pos:line="6728" pos:column="88">( 
            <param><decl><type><name pos:line="6729" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6729" pos:column="25">*</type:modifier></type> <name pos:line="6729" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6730" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6730" pos:column="33">__RPC__in</name> <name pos:line="6730" pos:column="43">BSTR</name></type> <name pos:line="6730" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="6731" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6731" pos:column="33">__RPC__out</name> <name pos:line="6731" pos:column="44">void</name> <type:modifier pos:line="6731" pos:column="49">*</type:modifier></type><name pos:line="6731" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6733" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6733" pos:column="43">HRESULT</name></type> ( <name pos:line="6733" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6733" pos:column="71">*</type:modifier><name pos:line="6733" pos:column="72">get_Comment</name> )<parameter_list pos:line="6733" pos:column="85">( 
            <param><decl><type><name pos:line="6734" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6734" pos:column="25">*</type:modifier></type> <name pos:line="6734" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6735" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6735" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6735" pos:column="54">BSTR</name> <type:modifier pos:line="6735" pos:column="59">*</type:modifier></type><name pos:line="6735" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6737" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="6737" pos:column="43">HRESULT</name></type> ( <name pos:line="6737" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6737" pos:column="71">*</type:modifier><name pos:line="6737" pos:column="72">put_Comment</name> )<parameter_list pos:line="6737" pos:column="85">( 
            <param><decl><type><name pos:line="6738" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6738" pos:column="25">*</type:modifier></type> <name pos:line="6738" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6739" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6739" pos:column="33">__RPC__in</name> <name pos:line="6739" pos:column="43">BSTR</name></type> <name pos:line="6739" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="6740" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6740" pos:column="33">__RPC__out</name> <name pos:line="6740" pos:column="44">void</name> <type:modifier pos:line="6740" pos:column="49">*</type:modifier></type><name pos:line="6740" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6742" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="6742" pos:column="34">HRESULT</name></type> ( <name pos:line="6742" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="6742" pos:column="62">*</type:modifier><name pos:line="6742" pos:column="63">AddBase</name> )<parameter_list pos:line="6742" pos:column="72">( 
            <param><decl><type><name pos:line="6743" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6743" pos:column="25">*</type:modifier></type> <name pos:line="6743" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6744" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6744" pos:column="33">VARIANT</name></type> <name pos:line="6744" pos:column="41">Base</name></decl></param>,
            <comment type="block" pos:line="6745" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="6745" pos:column="43">VARIANT</name></type> <name pos:line="6745" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="6746" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6746" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6746" pos:column="54">CodeElement</name> <type:modifier pos:line="6746" pos:column="66">*</type:modifier><type:modifier pos:line="6746" pos:column="67">*</type:modifier></type><name pos:line="6746" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6748" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="6748" pos:column="34">HRESULT</name></type> ( <name pos:line="6748" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="6748" pos:column="62">*</type:modifier><name pos:line="6748" pos:column="63">AddAttribute</name> )<parameter_list pos:line="6748" pos:column="77">( 
            <param><decl><type><name pos:line="6749" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6749" pos:column="25">*</type:modifier></type> <name pos:line="6749" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6750" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6750" pos:column="33">__RPC__in</name> <name pos:line="6750" pos:column="43">BSTR</name></type> <name pos:line="6750" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="6751" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6751" pos:column="33">__RPC__in</name> <name pos:line="6751" pos:column="43">BSTR</name></type> <name pos:line="6751" pos:column="48">Value</name></decl></param>,
            <comment type="block" pos:line="6752" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="6752" pos:column="43">VARIANT</name></type> <name pos:line="6752" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="6753" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6753" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6753" pos:column="54">CodeAttribute</name> <type:modifier pos:line="6753" pos:column="68">*</type:modifier><type:modifier pos:line="6753" pos:column="69">*</type:modifier></type><name pos:line="6753" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6755" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="6755" pos:column="34">HRESULT</name></type> ( <name pos:line="6755" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="6755" pos:column="62">*</type:modifier><name pos:line="6755" pos:column="63">RemoveBase</name> )<parameter_list pos:line="6755" pos:column="75">( 
            <param><decl><type><name pos:line="6756" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6756" pos:column="25">*</type:modifier></type> <name pos:line="6756" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6757" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6757" pos:column="33">VARIANT</name></type> <name pos:line="6757" pos:column="41">Element</name></decl></param>,
            <comment type="block" pos:line="6758" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6758" pos:column="33">__RPC__out</name> <name pos:line="6758" pos:column="44">void</name> <type:modifier pos:line="6758" pos:column="49">*</type:modifier></type><name pos:line="6758" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6760" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="6760" pos:column="34">HRESULT</name></type> ( <name pos:line="6760" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="6760" pos:column="62">*</type:modifier><name pos:line="6760" pos:column="63">RemoveMember</name> )<parameter_list pos:line="6760" pos:column="77">( 
            <param><decl><type><name pos:line="6761" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6761" pos:column="25">*</type:modifier></type> <name pos:line="6761" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6762" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6762" pos:column="33">VARIANT</name></type> <name pos:line="6762" pos:column="41">Element</name></decl></param>,
            <comment type="block" pos:line="6763" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6763" pos:column="33">__RPC__out</name> <name pos:line="6763" pos:column="44">void</name> <type:modifier pos:line="6763" pos:column="49">*</type:modifier></type><name pos:line="6763" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6765" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6765" pos:column="43">HRESULT</name></type> ( <name pos:line="6765" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6765" pos:column="71">*</type:modifier><name pos:line="6765" pos:column="72">get_IsDerivedFrom</name> )<parameter_list pos:line="6765" pos:column="91">( 
            <param><decl><type><name pos:line="6766" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6766" pos:column="25">*</type:modifier></type> <name pos:line="6766" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6767" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6767" pos:column="33">__RPC__in</name> <name pos:line="6767" pos:column="43">BSTR</name></type> <name pos:line="6767" pos:column="48">FullName</name></decl></param>,
            <comment type="block" pos:line="6768" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6768" pos:column="33">__RPC__out</name> <name pos:line="6768" pos:column="44">BOOLEAN</name> <type:modifier pos:line="6768" pos:column="52">*</type:modifier></type><name pos:line="6768" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6770" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6770" pos:column="43">HRESULT</name></type> ( <name pos:line="6770" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6770" pos:column="71">*</type:modifier><name pos:line="6770" pos:column="72">get_DerivedTypes</name> )<parameter_list pos:line="6770" pos:column="90">( 
            <param><decl><type><name pos:line="6771" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6771" pos:column="25">*</type:modifier></type> <name pos:line="6771" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6772" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6772" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6772" pos:column="54">CodeElements</name> <type:modifier pos:line="6772" pos:column="67">*</type:modifier><type:modifier pos:line="6772" pos:column="68">*</type:modifier></type><name pos:line="6772" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6774" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6774" pos:column="43">HRESULT</name></type> ( <name pos:line="6774" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6774" pos:column="71">*</type:modifier><name pos:line="6774" pos:column="72">get_ImplementedInterfaces</name> )<parameter_list pos:line="6774" pos:column="99">( 
            <param><decl><type><name pos:line="6775" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6775" pos:column="25">*</type:modifier></type> <name pos:line="6775" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6776" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6776" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6776" pos:column="54">CodeElements</name> <type:modifier pos:line="6776" pos:column="67">*</type:modifier><type:modifier pos:line="6776" pos:column="68">*</type:modifier></type><name pos:line="6776" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6778" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="6778" pos:column="43">HRESULT</name></type> ( <name pos:line="6778" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6778" pos:column="71">*</type:modifier><name pos:line="6778" pos:column="72">get_IsAbstract</name> )<parameter_list pos:line="6778" pos:column="88">( 
            <param><decl><type><name pos:line="6779" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6779" pos:column="25">*</type:modifier></type> <name pos:line="6779" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6780" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6780" pos:column="33">__RPC__out</name> <name pos:line="6780" pos:column="44">BOOLEAN</name> <type:modifier pos:line="6780" pos:column="52">*</type:modifier></type><name pos:line="6780" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6782" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="6782" pos:column="43">HRESULT</name></type> ( <name pos:line="6782" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="6782" pos:column="71">*</type:modifier><name pos:line="6782" pos:column="72">put_IsAbstract</name> )<parameter_list pos:line="6782" pos:column="88">( 
            <param><decl><type><name pos:line="6783" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6783" pos:column="25">*</type:modifier></type> <name pos:line="6783" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6784" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6784" pos:column="33">BOOLEAN</name></type> <name pos:line="6784" pos:column="41">noname</name></decl></param>,
            <comment type="block" pos:line="6785" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6785" pos:column="33">__RPC__out</name> <name pos:line="6785" pos:column="44">void</name> <type:modifier pos:line="6785" pos:column="49">*</type:modifier></type><name pos:line="6785" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6787" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="6787" pos:column="34">HRESULT</name></type> ( <name pos:line="6787" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="6787" pos:column="62">*</type:modifier><name pos:line="6787" pos:column="63">AddImplementedInterface</name> )<parameter_list pos:line="6787" pos:column="88">( 
            <param><decl><type><name pos:line="6788" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6788" pos:column="25">*</type:modifier></type> <name pos:line="6788" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6789" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6789" pos:column="33">VARIANT</name></type> <name pos:line="6789" pos:column="41">Base</name></decl></param>,
            <comment type="block" pos:line="6790" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="6790" pos:column="43">VARIANT</name></type> <name pos:line="6790" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="6791" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6791" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6791" pos:column="54">CodeInterface</name> <type:modifier pos:line="6791" pos:column="68">*</type:modifier><type:modifier pos:line="6791" pos:column="69">*</type:modifier></type><name pos:line="6791" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6793" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="6793" pos:column="34">HRESULT</name> <argument_list pos:line="6793" pos:column="42">( <argument pos:line="6793" pos:column="44">STDMETHODCALLTYPE *AddFunction</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6793" pos:column="76">(</op:operator> 
            <name pos:line="6794" pos:column="13">CodeStruct2</name> <op:operator pos:line="6794" pos:column="25">*</op:operator> <name pos:line="6794" pos:column="27">This</name><op:operator pos:line="6794" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6795" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6795" pos:column="33">__RPC__in</name> <name pos:line="6795" pos:column="43">BSTR</name> <name pos:line="6795" pos:column="48">Name</name><op:operator pos:line="6795" pos:column="52">,</op:operator>
            <comment type="block" pos:line="6796" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="6796" pos:column="38">vsCMFunction</name> <name pos:line="6796" pos:column="51">Kind</name><op:operator pos:line="6796" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6797" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6797" pos:column="33">VARIANT</name> <name pos:line="6797" pos:column="41">Type</name><op:operator pos:line="6797" pos:column="45">,</op:operator>
            <comment type="block" pos:line="6798" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6798" pos:column="33">VARIANT</name> <name pos:line="6798" pos:column="41">Position</name><op:operator pos:line="6798" pos:column="49">,</op:operator>
            <comment type="block" pos:line="6799" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="6799" pos:column="38">vsCMAccess</name> <name pos:line="6799" pos:column="49">Access</name><op:operator pos:line="6799" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6800" pos:column="13">/* [optional][idldescattr] */</comment> <name pos:line="6800" pos:column="43">VARIANT</name> <name pos:line="6800" pos:column="51">Location</name><op:operator pos:line="6800" pos:column="59">,</op:operator>
            <comment type="block" pos:line="6801" pos:column="13">/* [retval][out] */</comment> <name pos:line="6801" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6801" pos:column="54">CodeFunction</name> <op:operator pos:line="6801" pos:column="67">*</op:operator><op:operator pos:line="6801" pos:column="68">*</op:operator><name pos:line="6801" pos:column="69">retval</name><op:operator pos:line="6801" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6803" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="6803" pos:column="34">HRESULT</name> <argument_list pos:line="6803" pos:column="42">( <argument pos:line="6803" pos:column="44">STDMETHODCALLTYPE *AddVariable</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6803" pos:column="76">(</op:operator> 
            <name pos:line="6804" pos:column="13">CodeStruct2</name> <op:operator pos:line="6804" pos:column="25">*</op:operator> <name pos:line="6804" pos:column="27">This</name><op:operator pos:line="6804" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6805" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6805" pos:column="33">__RPC__in</name> <name pos:line="6805" pos:column="43">BSTR</name> <name pos:line="6805" pos:column="48">Name</name><op:operator pos:line="6805" pos:column="52">,</op:operator>
            <comment type="block" pos:line="6806" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6806" pos:column="33">VARIANT</name> <name pos:line="6806" pos:column="41">Type</name><op:operator pos:line="6806" pos:column="45">,</op:operator>
            <comment type="block" pos:line="6807" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6807" pos:column="33">VARIANT</name> <name pos:line="6807" pos:column="41">Position</name><op:operator pos:line="6807" pos:column="49">,</op:operator>
            <comment type="block" pos:line="6808" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="6808" pos:column="38">vsCMAccess</name> <name pos:line="6808" pos:column="49">Access</name><op:operator pos:line="6808" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6809" pos:column="13">/* [optional][idldescattr] */</comment> <name pos:line="6809" pos:column="43">VARIANT</name> <name pos:line="6809" pos:column="51">Location</name><op:operator pos:line="6809" pos:column="59">,</op:operator>
            <comment type="block" pos:line="6810" pos:column="13">/* [retval][out] */</comment> <name pos:line="6810" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6810" pos:column="54">CodeVariable</name> <op:operator pos:line="6810" pos:column="67">*</op:operator><op:operator pos:line="6810" pos:column="68">*</op:operator><name pos:line="6810" pos:column="69">retval</name><op:operator pos:line="6810" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6812" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="6812" pos:column="34">HRESULT</name> <argument_list pos:line="6812" pos:column="42">( <argument pos:line="6812" pos:column="44">STDMETHODCALLTYPE *AddProperty</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6812" pos:column="76">(</op:operator> 
            <name pos:line="6813" pos:column="13">CodeStruct2</name> <op:operator pos:line="6813" pos:column="25">*</op:operator> <name pos:line="6813" pos:column="27">This</name><op:operator pos:line="6813" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6814" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6814" pos:column="33">__RPC__in</name> <name pos:line="6814" pos:column="43">BSTR</name> <name pos:line="6814" pos:column="48">GetterName</name><op:operator pos:line="6814" pos:column="58">,</op:operator>
            <comment type="block" pos:line="6815" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6815" pos:column="33">__RPC__in</name> <name pos:line="6815" pos:column="43">BSTR</name> <name pos:line="6815" pos:column="48">PutterName</name><op:operator pos:line="6815" pos:column="58">,</op:operator>
            <comment type="block" pos:line="6816" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6816" pos:column="33">VARIANT</name> <name pos:line="6816" pos:column="41">Type</name><op:operator pos:line="6816" pos:column="45">,</op:operator>
            <comment type="block" pos:line="6817" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6817" pos:column="33">VARIANT</name> <name pos:line="6817" pos:column="41">Position</name><op:operator pos:line="6817" pos:column="49">,</op:operator>
            <comment type="block" pos:line="6818" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="6818" pos:column="38">vsCMAccess</name> <name pos:line="6818" pos:column="49">Access</name><op:operator pos:line="6818" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6819" pos:column="13">/* [optional][idldescattr] */</comment> <name pos:line="6819" pos:column="43">VARIANT</name> <name pos:line="6819" pos:column="51">Location</name><op:operator pos:line="6819" pos:column="59">,</op:operator>
            <comment type="block" pos:line="6820" pos:column="13">/* [retval][out] */</comment> <name pos:line="6820" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6820" pos:column="54">CodeProperty</name> <op:operator pos:line="6820" pos:column="67">*</op:operator><op:operator pos:line="6820" pos:column="68">*</op:operator><name pos:line="6820" pos:column="69">retval</name><op:operator pos:line="6820" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6822" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="6822" pos:column="34">HRESULT</name> <argument_list pos:line="6822" pos:column="42">( <argument pos:line="6822" pos:column="44">STDMETHODCALLTYPE *AddClass</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6822" pos:column="73">(</op:operator> 
            <name pos:line="6823" pos:column="13">CodeStruct2</name> <op:operator pos:line="6823" pos:column="25">*</op:operator> <name pos:line="6823" pos:column="27">This</name><op:operator pos:line="6823" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6824" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6824" pos:column="33">__RPC__in</name> <name pos:line="6824" pos:column="43">BSTR</name> <name pos:line="6824" pos:column="48">Name</name><op:operator pos:line="6824" pos:column="52">,</op:operator>
            <comment type="block" pos:line="6825" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6825" pos:column="33">VARIANT</name> <name pos:line="6825" pos:column="41">Position</name><op:operator pos:line="6825" pos:column="49">,</op:operator>
            <comment type="block" pos:line="6826" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6826" pos:column="33">VARIANT</name> <name pos:line="6826" pos:column="41">Bases</name><op:operator pos:line="6826" pos:column="46">,</op:operator>
            <comment type="block" pos:line="6827" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6827" pos:column="33">VARIANT</name> <name pos:line="6827" pos:column="41">ImplementedInterfaces</name><op:operator pos:line="6827" pos:column="62">,</op:operator>
            <comment type="block" pos:line="6828" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="6828" pos:column="38">vsCMAccess</name> <name pos:line="6828" pos:column="49">Access</name><op:operator pos:line="6828" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6829" pos:column="13">/* [retval][out] */</comment> <name pos:line="6829" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6829" pos:column="54">CodeClass</name> <op:operator pos:line="6829" pos:column="64">*</op:operator><op:operator pos:line="6829" pos:column="65">*</op:operator><name pos:line="6829" pos:column="66">retval</name><op:operator pos:line="6829" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6831" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="6831" pos:column="34">HRESULT</name> <argument_list pos:line="6831" pos:column="42">( <argument pos:line="6831" pos:column="44">STDMETHODCALLTYPE *AddStruct</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6831" pos:column="74">(</op:operator> 
            <name pos:line="6832" pos:column="13">CodeStruct2</name> <op:operator pos:line="6832" pos:column="25">*</op:operator> <name pos:line="6832" pos:column="27">This</name><op:operator pos:line="6832" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6833" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6833" pos:column="33">__RPC__in</name> <name pos:line="6833" pos:column="43">BSTR</name> <name pos:line="6833" pos:column="48">Name</name><op:operator pos:line="6833" pos:column="52">,</op:operator>
            <comment type="block" pos:line="6834" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6834" pos:column="33">VARIANT</name> <name pos:line="6834" pos:column="41">Position</name><op:operator pos:line="6834" pos:column="49">,</op:operator>
            <comment type="block" pos:line="6835" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6835" pos:column="33">VARIANT</name> <name pos:line="6835" pos:column="41">Bases</name><op:operator pos:line="6835" pos:column="46">,</op:operator>
            <comment type="block" pos:line="6836" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6836" pos:column="33">VARIANT</name> <name pos:line="6836" pos:column="41">ImplementedInterfaces</name><op:operator pos:line="6836" pos:column="62">,</op:operator>
            <comment type="block" pos:line="6837" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="6837" pos:column="38">vsCMAccess</name> <name pos:line="6837" pos:column="49">Access</name><op:operator pos:line="6837" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6838" pos:column="13">/* [retval][out] */</comment> <name pos:line="6838" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6838" pos:column="54">CodeStruct</name> <op:operator pos:line="6838" pos:column="65">*</op:operator><op:operator pos:line="6838" pos:column="66">*</op:operator><name pos:line="6838" pos:column="67">retval</name><op:operator pos:line="6838" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6840" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="6840" pos:column="34">HRESULT</name> <argument_list pos:line="6840" pos:column="42">( <argument pos:line="6840" pos:column="44">STDMETHODCALLTYPE *AddEnum</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6840" pos:column="72">(</op:operator> 
            <name pos:line="6841" pos:column="13">CodeStruct2</name> <op:operator pos:line="6841" pos:column="25">*</op:operator> <name pos:line="6841" pos:column="27">This</name><op:operator pos:line="6841" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6842" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6842" pos:column="33">__RPC__in</name> <name pos:line="6842" pos:column="43">BSTR</name> <name pos:line="6842" pos:column="48">Name</name><op:operator pos:line="6842" pos:column="52">,</op:operator>
            <comment type="block" pos:line="6843" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6843" pos:column="33">VARIANT</name> <name pos:line="6843" pos:column="41">Position</name><op:operator pos:line="6843" pos:column="49">,</op:operator>
            <comment type="block" pos:line="6844" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6844" pos:column="33">VARIANT</name> <name pos:line="6844" pos:column="41">Bases</name><op:operator pos:line="6844" pos:column="46">,</op:operator>
            <comment type="block" pos:line="6845" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="6845" pos:column="38">vsCMAccess</name> <name pos:line="6845" pos:column="49">Access</name><op:operator pos:line="6845" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6846" pos:column="13">/* [retval][out] */</comment> <name pos:line="6846" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6846" pos:column="54">CodeEnum</name> <op:operator pos:line="6846" pos:column="63">*</op:operator><op:operator pos:line="6846" pos:column="64">*</op:operator><name pos:line="6846" pos:column="65">retval</name><op:operator pos:line="6846" pos:column="71">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6848" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="6848" pos:column="34">HRESULT</name> <argument_list pos:line="6848" pos:column="42">( <argument pos:line="6848" pos:column="44">STDMETHODCALLTYPE *AddDelegate</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6848" pos:column="76">(</op:operator> 
            <name pos:line="6849" pos:column="13">CodeStruct2</name> <op:operator pos:line="6849" pos:column="25">*</op:operator> <name pos:line="6849" pos:column="27">This</name><op:operator pos:line="6849" pos:column="31">,</op:operator>
            <comment type="block" pos:line="6850" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6850" pos:column="33">__RPC__in</name> <name pos:line="6850" pos:column="43">BSTR</name> <name pos:line="6850" pos:column="48">Name</name><op:operator pos:line="6850" pos:column="52">,</op:operator>
            <comment type="block" pos:line="6851" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6851" pos:column="33">VARIANT</name> <name pos:line="6851" pos:column="41">Type</name><op:operator pos:line="6851" pos:column="45">,</op:operator>
            <comment type="block" pos:line="6852" pos:column="13">/* [idldescattr] */</comment> <name pos:line="6852" pos:column="33">VARIANT</name> <name pos:line="6852" pos:column="41">Position</name><op:operator pos:line="6852" pos:column="49">,</op:operator>
            <comment type="block" pos:line="6853" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="6853" pos:column="38">vsCMAccess</name> <name pos:line="6853" pos:column="49">Access</name><op:operator pos:line="6853" pos:column="55">,</op:operator>
            <comment type="block" pos:line="6854" pos:column="13">/* [retval][out] */</comment> <name pos:line="6854" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6854" pos:column="54">CodeDelegate</name> <op:operator pos:line="6854" pos:column="67">*</op:operator><op:operator pos:line="6854" pos:column="68">*</op:operator><name pos:line="6854" pos:column="69">retval</name><op:operator pos:line="6854" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6856" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="6856" pos:column="34">HRESULT</name></type> ( <name pos:line="6856" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="6856" pos:column="62">*</type:modifier><name pos:line="6856" pos:column="63">RemoveInterface</name> )<parameter_list pos:line="6856" pos:column="80">( 
            <param><decl><type><name pos:line="6857" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6857" pos:column="25">*</type:modifier></type> <name pos:line="6857" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6858" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="6858" pos:column="33">VARIANT</name></type> <name pos:line="6858" pos:column="41">Element</name></decl></param>,
            <comment type="block" pos:line="6859" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6859" pos:column="33">__RPC__out</name> <name pos:line="6859" pos:column="44">void</name> <type:modifier pos:line="6859" pos:column="49">*</type:modifier></type><name pos:line="6859" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6861" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="6861" pos:column="41">HRESULT</name></type> ( <name pos:line="6861" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="6861" pos:column="69">*</type:modifier><name pos:line="6861" pos:column="70">get_IsGeneric</name> )<parameter_list pos:line="6861" pos:column="85">( 
            <param><decl><type><name pos:line="6862" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6862" pos:column="25">*</type:modifier></type> <name pos:line="6862" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6863" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6863" pos:column="33">__RPC__out</name> <name pos:line="6863" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="6863" pos:column="57">*</type:modifier></type><name pos:line="6863" pos:column="58">pIsGeneric</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6865" pos:column="9">/* [helpstring][id] */</comment> <macro><name pos:line="6865" pos:column="32">HRESULT</name> <argument_list pos:line="6865" pos:column="40">( <argument pos:line="6865" pos:column="42">STDMETHODCALLTYPE *AddEvent</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="6865" pos:column="71">(</op:operator> 
            <name pos:line="6866" pos:column="13">CodeStruct2</name> <op:operator pos:line="6866" pos:column="25">*</op:operator> <name pos:line="6866" pos:column="27">This</name><op:operator pos:line="6866" pos:column="31">,</op:operator>
            <name pos:line="6867" pos:column="13">__RPC__in</name> <name pos:line="6867" pos:column="23">BSTR</name> <name pos:line="6867" pos:column="28">Name</name><op:operator pos:line="6867" pos:column="32">,</op:operator>
            <name pos:line="6868" pos:column="13">__RPC__in</name> <name pos:line="6868" pos:column="23">BSTR</name> <name pos:line="6868" pos:column="28">FullDelegateName</name><op:operator pos:line="6868" pos:column="44">,</op:operator>
            <comment type="block" pos:line="6869" pos:column="13">/* [defaultvalue][in] */</comment> <name pos:line="6869" pos:column="38">VARIANT_BOOL</name> <name pos:line="6869" pos:column="51">CreatePropertyStyleEvent</name><op:operator pos:line="6869" pos:column="75">,</op:operator>
            <comment type="block" pos:line="6870" pos:column="13">/* [optional] */</comment> <name pos:line="6870" pos:column="30">VARIANT</name> <name pos:line="6870" pos:column="38">Position</name><op:operator pos:line="6870" pos:column="46">,</op:operator>
            <comment type="block" pos:line="6871" pos:column="13">/* [defaultvalue] */</comment> enum <comment type="block" pos:line="6871" pos:column="39">/* external definition not present */</comment> <name pos:line="6871" pos:column="77">vsCMAccess</name> <name pos:line="6871" pos:column="88">Access</name><op:operator pos:line="6871" pos:column="94">,</op:operator>
            <comment type="block" pos:line="6872" pos:column="13">/* [retval][out] */</comment> <name pos:line="6872" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="6872" pos:column="54">CodeEvent</name> <op:operator pos:line="6872" pos:column="64">*</op:operator><op:operator pos:line="6872" pos:column="65">*</op:operator><name pos:line="6872" pos:column="66">ppEvent</name><op:operator pos:line="6872" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="6874" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="6874" pos:column="73">HRESULT</name></type> ( <name pos:line="6874" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="6874" pos:column="101">*</type:modifier><name pos:line="6874" pos:column="102">get_DataTypeKind</name> )<parameter_list pos:line="6874" pos:column="120">( 
            <param><decl><type><name pos:line="6875" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6875" pos:column="25">*</type:modifier></type> <name pos:line="6875" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6876" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6876" pos:column="33">__RPC__out</name> <name pos:line="6876" pos:column="44">vsCMDataTypeKind</name> <type:modifier pos:line="6876" pos:column="61">*</type:modifier></type><name pos:line="6876" pos:column="62">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6878" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="6878" pos:column="73">HRESULT</name></type> ( <name pos:line="6878" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="6878" pos:column="101">*</type:modifier><name pos:line="6878" pos:column="102">put_DataTypeKind</name> )<parameter_list pos:line="6878" pos:column="120">( 
            <param><decl><type><name pos:line="6879" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6879" pos:column="25">*</type:modifier></type> <name pos:line="6879" pos:column="27">This</name></decl></param>,
            <param><decl><type><name pos:line="6880" pos:column="13">vsCMDataTypeKind</name></type> <name pos:line="6880" pos:column="30">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="6882" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="6882" pos:column="73">HRESULT</name></type> ( <name pos:line="6882" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="6882" pos:column="101">*</type:modifier><name pos:line="6882" pos:column="102">get_Parts</name> )<parameter_list pos:line="6882" pos:column="113">( 
            <param><decl><type><name pos:line="6883" pos:column="13">CodeStruct2</name> <type:modifier pos:line="6883" pos:column="25">*</type:modifier></type> <name pos:line="6883" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="6884" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="6884" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="6884" pos:column="54">/* external definition not present */</comment> <name pos:line="6884" pos:column="92">CodeElements</name> <type:modifier pos:line="6884" pos:column="105">*</type:modifier><type:modifier pos:line="6884" pos:column="106">*</type:modifier></type><name pos:line="6884" pos:column="107">Elements</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="6886" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="6887" pos:column="7">CodeStruct2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="6889" pos:column="5">interface</name></type> <name pos:line="6889" pos:column="15">CodeStruct2</name>
    <argument_list pos:line="6890" pos:column="5">{
        <argument><expr><name pos:line="6891" pos:column="9">CONST_VTBL</name> struct <name pos:line="6891" pos:column="27">CodeStruct2Vtbl</name> <op:operator pos:line="6891" pos:column="43">*</op:operator><name pos:line="6891" pos:column="44">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="6896" pos:column="1">#<cpp:directive pos:line="6896" pos:column="2">ifdef</cpp:directive> <name pos:line="6896" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="6899" pos:column="1">#<cpp:directive pos:line="6899" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6899" pos:column="9">CodeStruct2_QueryInterface</name><parameter_list pos:line="6899" pos:column="35">(<param><type><name pos:line="6899" pos:column="36">This</name></type></param>,<param><type><name pos:line="6899" pos:column="41">riid</name></type></param>,<param><type><name pos:line="6899" pos:column="46">ppvObj</name></type></param>,<param><type><name pos:line="6899" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6900" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6902" pos:column="1">#<cpp:directive pos:line="6902" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6902" pos:column="9">CodeStruct2_AddRef</name><parameter_list pos:line="6902" pos:column="27">(<param><type><name pos:line="6902" pos:column="28">This</name></type></param>,<param><type><name pos:line="6902" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6903" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6905" pos:column="1">#<cpp:directive pos:line="6905" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6905" pos:column="9">CodeStruct2_Release</name><parameter_list pos:line="6905" pos:column="28">(<param><type><name pos:line="6905" pos:column="29">This</name></type></param>,<param><type><name pos:line="6905" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6906" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6908" pos:column="1">#<cpp:directive pos:line="6908" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6908" pos:column="9">CodeStruct2_GetTypeInfoCount</name><parameter_list pos:line="6908" pos:column="37">(<param><type><name pos:line="6908" pos:column="38">This</name></type></param>,<param><type><name pos:line="6908" pos:column="43">pctinfo</name></type></param>,<param><type><name pos:line="6908" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6909" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6911" pos:column="1">#<cpp:directive pos:line="6911" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6911" pos:column="9">CodeStruct2_GetTypeInfo</name><parameter_list pos:line="6911" pos:column="32">(<param><type><name pos:line="6911" pos:column="33">This</name></type></param>,<param><type><name pos:line="6911" pos:column="38">itinfo</name></type></param>,<param><type><name pos:line="6911" pos:column="45">lcid</name></type></param>,<param><type><name pos:line="6911" pos:column="50">pptinfo</name></type></param>,<param><type><name pos:line="6911" pos:column="58">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6912" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6914" pos:column="1">#<cpp:directive pos:line="6914" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6914" pos:column="9">CodeStruct2_GetIDsOfNames</name><parameter_list pos:line="6914" pos:column="34">(<param><type><name pos:line="6914" pos:column="35">This</name></type></param>,<param><type><name pos:line="6914" pos:column="40">riid</name></type></param>,<param><type><name pos:line="6914" pos:column="45">rgszNames</name></type></param>,<param><type><name pos:line="6914" pos:column="55">cNames</name></type></param>,<param><type><name pos:line="6914" pos:column="62">lcid</name></type></param>,<param><type><name pos:line="6914" pos:column="67">rgdispid</name></type></param>,<param><type><name pos:line="6914" pos:column="76">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6915" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6917" pos:column="1">#<cpp:directive pos:line="6917" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6917" pos:column="9">CodeStruct2_Invoke</name><parameter_list pos:line="6917" pos:column="27">(<param><type><name pos:line="6917" pos:column="28">This</name></type></param>,<param><type><name pos:line="6917" pos:column="33">dispidMember</name></type></param>,<param><type><name pos:line="6917" pos:column="46">riid</name></type></param>,<param><type><name pos:line="6917" pos:column="51">lcid</name></type></param>,<param><type><name pos:line="6917" pos:column="56">wFlags</name></type></param>,<param><type><name pos:line="6917" pos:column="63">pdispparams</name></type></param>,<param><type><name pos:line="6917" pos:column="75">pvarResult</name></type></param>,<param><type><name pos:line="6917" pos:column="86">pexcepinfo</name></type></param>,<param><type><name pos:line="6917" pos:column="97">puArgErr</name></type></param>,<param><type><name pos:line="6917" pos:column="106">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6918" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6920" pos:column="1">#<cpp:directive pos:line="6920" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6920" pos:column="9">CodeStruct2_get_DTE</name><parameter_list pos:line="6920" pos:column="28">(<param><type><name pos:line="6920" pos:column="29">This</name></type></param>,<param><type><name pos:line="6920" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6921" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6923" pos:column="1">#<cpp:directive pos:line="6923" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6923" pos:column="9">CodeStruct2_get_Collection</name><parameter_list pos:line="6923" pos:column="35">(<param><type><name pos:line="6923" pos:column="36">This</name></type></param>,<param><type><name pos:line="6923" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6924" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6926" pos:column="1">#<cpp:directive pos:line="6926" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6926" pos:column="9">CodeStruct2_get_Name</name><parameter_list pos:line="6926" pos:column="29">(<param><type><name pos:line="6926" pos:column="30">This</name></type></param>,<param><type><name pos:line="6926" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6927" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6929" pos:column="1">#<cpp:directive pos:line="6929" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6929" pos:column="9">CodeStruct2_put_Name</name><parameter_list pos:line="6929" pos:column="29">(<param><type><name pos:line="6929" pos:column="30">This</name></type></param>,<param><type><name pos:line="6929" pos:column="35">noname</name></type></param>,<param><type><name pos:line="6929" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6930" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6932" pos:column="1">#<cpp:directive pos:line="6932" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6932" pos:column="9">CodeStruct2_get_FullName</name><parameter_list pos:line="6932" pos:column="33">(<param><type><name pos:line="6932" pos:column="34">This</name></type></param>,<param><type><name pos:line="6932" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6933" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6935" pos:column="1">#<cpp:directive pos:line="6935" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6935" pos:column="9">CodeStruct2_get_ProjectItem</name><parameter_list pos:line="6935" pos:column="36">(<param><type><name pos:line="6935" pos:column="37">This</name></type></param>,<param><type><name pos:line="6935" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6936" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItem(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6938" pos:column="1">#<cpp:directive pos:line="6938" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6938" pos:column="9">CodeStruct2_get_Kind</name><parameter_list pos:line="6938" pos:column="29">(<param><type><name pos:line="6938" pos:column="30">This</name></type></param>,<param><type><name pos:line="6938" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6939" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Kind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6941" pos:column="1">#<cpp:directive pos:line="6941" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6941" pos:column="9">CodeStruct2_get_IsCodeType</name><parameter_list pos:line="6941" pos:column="35">(<param><type><name pos:line="6941" pos:column="36">This</name></type></param>,<param><type><name pos:line="6941" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6942" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsCodeType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6944" pos:column="1">#<cpp:directive pos:line="6944" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6944" pos:column="9">CodeStruct2_get_InfoLocation</name><parameter_list pos:line="6944" pos:column="37">(<param><type><name pos:line="6944" pos:column="38">This</name></type></param>,<param><type><name pos:line="6944" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6945" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InfoLocation(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6947" pos:column="1">#<cpp:directive pos:line="6947" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6947" pos:column="9">CodeStruct2_get_Children</name><parameter_list pos:line="6947" pos:column="33">(<param><type><name pos:line="6947" pos:column="34">This</name></type></param>,<param><type><name pos:line="6947" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6948" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Children(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6950" pos:column="1">#<cpp:directive pos:line="6950" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6950" pos:column="9">CodeStruct2_get_Language</name><parameter_list pos:line="6950" pos:column="33">(<param><type><name pos:line="6950" pos:column="34">This</name></type></param>,<param><type><name pos:line="6950" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6951" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6953" pos:column="1">#<cpp:directive pos:line="6953" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6953" pos:column="9">CodeStruct2_get_StartPoint</name><parameter_list pos:line="6953" pos:column="35">(<param><type><name pos:line="6953" pos:column="36">This</name></type></param>,<param><type><name pos:line="6953" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6954" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6956" pos:column="1">#<cpp:directive pos:line="6956" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6956" pos:column="9">CodeStruct2_get_EndPoint</name><parameter_list pos:line="6956" pos:column="33">(<param><type><name pos:line="6956" pos:column="34">This</name></type></param>,<param><type><name pos:line="6956" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6957" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_EndPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6959" pos:column="1">#<cpp:directive pos:line="6959" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6959" pos:column="9">CodeStruct2_get_ExtenderNames</name><parameter_list pos:line="6959" pos:column="38">(<param><type><name pos:line="6959" pos:column="39">This</name></type></param>,<param><type><name pos:line="6959" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6960" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6962" pos:column="1">#<cpp:directive pos:line="6962" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6962" pos:column="9">CodeStruct2_get_Extender</name><parameter_list pos:line="6962" pos:column="33">(<param><type><name pos:line="6962" pos:column="34">This</name></type></param>,<param><type><name pos:line="6962" pos:column="39">ExtenderName</name></type></param>,<param><type><name pos:line="6962" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6963" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6965" pos:column="1">#<cpp:directive pos:line="6965" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6965" pos:column="9">CodeStruct2_get_ExtenderCATID</name><parameter_list pos:line="6965" pos:column="38">(<param><type><name pos:line="6965" pos:column="39">This</name></type></param>,<param><type><name pos:line="6965" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6966" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6968" pos:column="1">#<cpp:directive pos:line="6968" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6968" pos:column="9">CodeStruct2_GetStartPoint</name><parameter_list pos:line="6968" pos:column="34">(<param><type><name pos:line="6968" pos:column="35">This</name></type></param>,<param><type><name pos:line="6968" pos:column="40">Part</name></type></param>,<param><type><name pos:line="6968" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6969" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStartPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6971" pos:column="1">#<cpp:directive pos:line="6971" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6971" pos:column="9">CodeStruct2_GetEndPoint</name><parameter_list pos:line="6971" pos:column="32">(<param><type><name pos:line="6971" pos:column="33">This</name></type></param>,<param><type><name pos:line="6971" pos:column="38">Part</name></type></param>,<param><type><name pos:line="6971" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6972" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6974" pos:column="1">#<cpp:directive pos:line="6974" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6974" pos:column="9">CodeStruct2_get_Parent</name><parameter_list pos:line="6974" pos:column="31">(<param><type><name pos:line="6974" pos:column="32">This</name></type></param>,<param><type><name pos:line="6974" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6975" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6977" pos:column="1">#<cpp:directive pos:line="6977" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6977" pos:column="9">CodeStruct2_get_Namespace</name><parameter_list pos:line="6977" pos:column="34">(<param><type><name pos:line="6977" pos:column="35">This</name></type></param>,<param><type><name pos:line="6977" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6978" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Namespace(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6980" pos:column="1">#<cpp:directive pos:line="6980" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6980" pos:column="9">CodeStruct2_get_Bases</name><parameter_list pos:line="6980" pos:column="30">(<param><type><name pos:line="6980" pos:column="31">This</name></type></param>,<param><type><name pos:line="6980" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6981" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Bases(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6983" pos:column="1">#<cpp:directive pos:line="6983" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6983" pos:column="9">CodeStruct2_get_Members</name><parameter_list pos:line="6983" pos:column="32">(<param><type><name pos:line="6983" pos:column="33">This</name></type></param>,<param><type><name pos:line="6983" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6984" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Members(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6986" pos:column="1">#<cpp:directive pos:line="6986" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6986" pos:column="9">CodeStruct2_put_Access</name><parameter_list pos:line="6986" pos:column="31">(<param><type><name pos:line="6986" pos:column="32">This</name></type></param>,<param><type><name pos:line="6986" pos:column="37">noname</name></type></param>,<param><type><name pos:line="6986" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6987" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Access(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6989" pos:column="1">#<cpp:directive pos:line="6989" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6989" pos:column="9">CodeStruct2_get_Access</name><parameter_list pos:line="6989" pos:column="31">(<param><type><name pos:line="6989" pos:column="32">This</name></type></param>,<param><type><name pos:line="6989" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6990" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Access(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6992" pos:column="1">#<cpp:directive pos:line="6992" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6992" pos:column="9">CodeStruct2_get_Attributes</name><parameter_list pos:line="6992" pos:column="35">(<param><type><name pos:line="6992" pos:column="36">This</name></type></param>,<param><type><name pos:line="6992" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6993" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Attributes(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6995" pos:column="1">#<cpp:directive pos:line="6995" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6995" pos:column="9">CodeStruct2_get_DocComment</name><parameter_list pos:line="6995" pos:column="35">(<param><type><name pos:line="6995" pos:column="36">This</name></type></param>,<param><type><name pos:line="6995" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6996" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DocComment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="6998" pos:column="1">#<cpp:directive pos:line="6998" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6998" pos:column="9">CodeStruct2_put_DocComment</name><parameter_list pos:line="6998" pos:column="35">(<param><type><name pos:line="6998" pos:column="36">This</name></type></param>,<param><type><name pos:line="6998" pos:column="41">noname</name></type></param>,<param><type><name pos:line="6998" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="6999" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DocComment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7001" pos:column="1">#<cpp:directive pos:line="7001" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7001" pos:column="9">CodeStruct2_get_Comment</name><parameter_list pos:line="7001" pos:column="32">(<param><type><name pos:line="7001" pos:column="33">This</name></type></param>,<param><type><name pos:line="7001" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7002" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Comment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7004" pos:column="1">#<cpp:directive pos:line="7004" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7004" pos:column="9">CodeStruct2_put_Comment</name><parameter_list pos:line="7004" pos:column="32">(<param><type><name pos:line="7004" pos:column="33">This</name></type></param>,<param><type><name pos:line="7004" pos:column="38">noname</name></type></param>,<param><type><name pos:line="7004" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7005" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Comment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7007" pos:column="1">#<cpp:directive pos:line="7007" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7007" pos:column="9">CodeStruct2_AddBase</name><parameter_list pos:line="7007" pos:column="28">(<param><type><name pos:line="7007" pos:column="29">This</name></type></param>,<param><type><name pos:line="7007" pos:column="34">Base</name></type></param>,<param><type><name pos:line="7007" pos:column="39">Position</name></type></param>,<param><type><name pos:line="7007" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7008" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddBase(This,Base,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7010" pos:column="1">#<cpp:directive pos:line="7010" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7010" pos:column="9">CodeStruct2_AddAttribute</name><parameter_list pos:line="7010" pos:column="33">(<param><type><name pos:line="7010" pos:column="34">This</name></type></param>,<param><type><name pos:line="7010" pos:column="39">Name</name></type></param>,<param><type><name pos:line="7010" pos:column="44">Value</name></type></param>,<param><type><name pos:line="7010" pos:column="50">Position</name></type></param>,<param><type><name pos:line="7010" pos:column="59">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7011" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddAttribute(This,Name,Value,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7013" pos:column="1">#<cpp:directive pos:line="7013" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7013" pos:column="9">CodeStruct2_RemoveBase</name><parameter_list pos:line="7013" pos:column="31">(<param><type><name pos:line="7013" pos:column="32">This</name></type></param>,<param><type><name pos:line="7013" pos:column="37">Element</name></type></param>,<param><type><name pos:line="7013" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7014" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveBase(This,Element,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7016" pos:column="1">#<cpp:directive pos:line="7016" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7016" pos:column="9">CodeStruct2_RemoveMember</name><parameter_list pos:line="7016" pos:column="33">(<param><type><name pos:line="7016" pos:column="34">This</name></type></param>,<param><type><name pos:line="7016" pos:column="39">Element</name></type></param>,<param><type><name pos:line="7016" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7017" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveMember(This,Element,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7019" pos:column="1">#<cpp:directive pos:line="7019" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7019" pos:column="9">CodeStruct2_get_IsDerivedFrom</name><parameter_list pos:line="7019" pos:column="38">(<param><type><name pos:line="7019" pos:column="39">This</name></type></param>,<param><type><name pos:line="7019" pos:column="44">FullName</name></type></param>,<param><type><name pos:line="7019" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7020" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsDerivedFrom(This,FullName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7022" pos:column="1">#<cpp:directive pos:line="7022" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7022" pos:column="9">CodeStruct2_get_DerivedTypes</name><parameter_list pos:line="7022" pos:column="37">(<param><type><name pos:line="7022" pos:column="38">This</name></type></param>,<param><type><name pos:line="7022" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7023" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DerivedTypes(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7025" pos:column="1">#<cpp:directive pos:line="7025" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7025" pos:column="9">CodeStruct2_get_ImplementedInterfaces</name><parameter_list pos:line="7025" pos:column="46">(<param><type><name pos:line="7025" pos:column="47">This</name></type></param>,<param><type><name pos:line="7025" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7026" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ImplementedInterfaces(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7028" pos:column="1">#<cpp:directive pos:line="7028" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7028" pos:column="9">CodeStruct2_get_IsAbstract</name><parameter_list pos:line="7028" pos:column="35">(<param><type><name pos:line="7028" pos:column="36">This</name></type></param>,<param><type><name pos:line="7028" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7029" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsAbstract(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7031" pos:column="1">#<cpp:directive pos:line="7031" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7031" pos:column="9">CodeStruct2_put_IsAbstract</name><parameter_list pos:line="7031" pos:column="35">(<param><type><name pos:line="7031" pos:column="36">This</name></type></param>,<param><type><name pos:line="7031" pos:column="41">noname</name></type></param>,<param><type><name pos:line="7031" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7032" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_IsAbstract(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7034" pos:column="1">#<cpp:directive pos:line="7034" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7034" pos:column="9">CodeStruct2_AddImplementedInterface</name><parameter_list pos:line="7034" pos:column="44">(<param><type><name pos:line="7034" pos:column="45">This</name></type></param>,<param><type><name pos:line="7034" pos:column="50">Base</name></type></param>,<param><type><name pos:line="7034" pos:column="55">Position</name></type></param>,<param><type><name pos:line="7034" pos:column="64">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7035" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddImplementedInterface(This,Base,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7037" pos:column="1">#<cpp:directive pos:line="7037" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7037" pos:column="9">CodeStruct2_AddFunction</name><parameter_list pos:line="7037" pos:column="32">(<param><type><name pos:line="7037" pos:column="33">This</name></type></param>,<param><type><name pos:line="7037" pos:column="38">Name</name></type></param>,<param><type><name pos:line="7037" pos:column="43">Kind</name></type></param>,<param><type><name pos:line="7037" pos:column="48">Type</name></type></param>,<param><type><name pos:line="7037" pos:column="53">Position</name></type></param>,<param><type><name pos:line="7037" pos:column="62">Access</name></type></param>,<param><type><name pos:line="7037" pos:column="69">Location</name></type></param>,<param><type><name pos:line="7037" pos:column="78">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7038" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddFunction(This,Name,Kind,Type,Position,Access,Location,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7040" pos:column="1">#<cpp:directive pos:line="7040" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7040" pos:column="9">CodeStruct2_AddVariable</name><parameter_list pos:line="7040" pos:column="32">(<param><type><name pos:line="7040" pos:column="33">This</name></type></param>,<param><type><name pos:line="7040" pos:column="38">Name</name></type></param>,<param><type><name pos:line="7040" pos:column="43">Type</name></type></param>,<param><type><name pos:line="7040" pos:column="48">Position</name></type></param>,<param><type><name pos:line="7040" pos:column="57">Access</name></type></param>,<param><type><name pos:line="7040" pos:column="64">Location</name></type></param>,<param><type><name pos:line="7040" pos:column="73">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7041" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddVariable(This,Name,Type,Position,Access,Location,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7043" pos:column="1">#<cpp:directive pos:line="7043" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7043" pos:column="9">CodeStruct2_AddProperty</name><parameter_list pos:line="7043" pos:column="32">(<param><type><name pos:line="7043" pos:column="33">This</name></type></param>,<param><type><name pos:line="7043" pos:column="38">GetterName</name></type></param>,<param><type><name pos:line="7043" pos:column="49">PutterName</name></type></param>,<param><type><name pos:line="7043" pos:column="60">Type</name></type></param>,<param><type><name pos:line="7043" pos:column="65">Position</name></type></param>,<param><type><name pos:line="7043" pos:column="74">Access</name></type></param>,<param><type><name pos:line="7043" pos:column="81">Location</name></type></param>,<param><type><name pos:line="7043" pos:column="90">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7044" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddProperty(This,GetterName,PutterName,Type,Position,Access,Location,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7046" pos:column="1">#<cpp:directive pos:line="7046" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7046" pos:column="9">CodeStruct2_AddClass</name><parameter_list pos:line="7046" pos:column="29">(<param><type><name pos:line="7046" pos:column="30">This</name></type></param>,<param><type><name pos:line="7046" pos:column="35">Name</name></type></param>,<param><type><name pos:line="7046" pos:column="40">Position</name></type></param>,<param><type><name pos:line="7046" pos:column="49">Bases</name></type></param>,<param><type><name pos:line="7046" pos:column="55">ImplementedInterfaces</name></type></param>,<param><type><name pos:line="7046" pos:column="77">Access</name></type></param>,<param><type><name pos:line="7046" pos:column="84">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7047" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddClass(This,Name,Position,Bases,ImplementedInterfaces,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7049" pos:column="1">#<cpp:directive pos:line="7049" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7049" pos:column="9">CodeStruct2_AddStruct</name><parameter_list pos:line="7049" pos:column="30">(<param><type><name pos:line="7049" pos:column="31">This</name></type></param>,<param><type><name pos:line="7049" pos:column="36">Name</name></type></param>,<param><type><name pos:line="7049" pos:column="41">Position</name></type></param>,<param><type><name pos:line="7049" pos:column="50">Bases</name></type></param>,<param><type><name pos:line="7049" pos:column="56">ImplementedInterfaces</name></type></param>,<param><type><name pos:line="7049" pos:column="78">Access</name></type></param>,<param><type><name pos:line="7049" pos:column="85">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7050" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddStruct(This,Name,Position,Bases,ImplementedInterfaces,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7052" pos:column="1">#<cpp:directive pos:line="7052" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7052" pos:column="9">CodeStruct2_AddEnum</name><parameter_list pos:line="7052" pos:column="28">(<param><type><name pos:line="7052" pos:column="29">This</name></type></param>,<param><type><name pos:line="7052" pos:column="34">Name</name></type></param>,<param><type><name pos:line="7052" pos:column="39">Position</name></type></param>,<param><type><name pos:line="7052" pos:column="48">Bases</name></type></param>,<param><type><name pos:line="7052" pos:column="54">Access</name></type></param>,<param><type><name pos:line="7052" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7053" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddEnum(This,Name,Position,Bases,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7055" pos:column="1">#<cpp:directive pos:line="7055" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7055" pos:column="9">CodeStruct2_AddDelegate</name><parameter_list pos:line="7055" pos:column="32">(<param><type><name pos:line="7055" pos:column="33">This</name></type></param>,<param><type><name pos:line="7055" pos:column="38">Name</name></type></param>,<param><type><name pos:line="7055" pos:column="43">Type</name></type></param>,<param><type><name pos:line="7055" pos:column="48">Position</name></type></param>,<param><type><name pos:line="7055" pos:column="57">Access</name></type></param>,<param><type><name pos:line="7055" pos:column="64">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7056" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddDelegate(This,Name,Type,Position,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7058" pos:column="1">#<cpp:directive pos:line="7058" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7058" pos:column="9">CodeStruct2_RemoveInterface</name><parameter_list pos:line="7058" pos:column="36">(<param><type><name pos:line="7058" pos:column="37">This</name></type></param>,<param><type><name pos:line="7058" pos:column="42">Element</name></type></param>,<param><type><name pos:line="7058" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7059" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveInterface(This,Element,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="7062" pos:column="1">#<cpp:directive pos:line="7062" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7062" pos:column="9">CodeStruct2_get_IsGeneric</name><parameter_list pos:line="7062" pos:column="34">(<param><type><name pos:line="7062" pos:column="35">This</name></type></param>,<param><type><name pos:line="7062" pos:column="40">pIsGeneric</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7063" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsGeneric(This,pIsGeneric) )</cpp:value></cpp:define> 

<cpp:define pos:line="7065" pos:column="1">#<cpp:directive pos:line="7065" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7065" pos:column="9">CodeStruct2_AddEvent</name><parameter_list pos:line="7065" pos:column="29">(<param><type><name pos:line="7065" pos:column="30">This</name></type></param>,<param><type><name pos:line="7065" pos:column="35">Name</name></type></param>,<param><type><name pos:line="7065" pos:column="40">FullDelegateName</name></type></param>,<param><type><name pos:line="7065" pos:column="57">CreatePropertyStyleEvent</name></type></param>,<param><type><name pos:line="7065" pos:column="82">Position</name></type></param>,<param><type><name pos:line="7065" pos:column="91">Access</name></type></param>,<param><type><name pos:line="7065" pos:column="98">ppEvent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7066" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddEvent(This,Name,FullDelegateName,CreatePropertyStyleEvent,Position,Access,ppEvent) )</cpp:value></cpp:define> 

<cpp:define pos:line="7068" pos:column="1">#<cpp:directive pos:line="7068" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7068" pos:column="9">CodeStruct2_get_DataTypeKind</name><parameter_list pos:line="7068" pos:column="37">(<param><type><name pos:line="7068" pos:column="38">This</name></type></param>,<param><type><name pos:line="7068" pos:column="43">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7069" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DataTypeKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="7071" pos:column="1">#<cpp:directive pos:line="7071" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7071" pos:column="9">CodeStruct2_put_DataTypeKind</name><parameter_list pos:line="7071" pos:column="37">(<param><type><name pos:line="7071" pos:column="38">This</name></type></param>,<param><type><name pos:line="7071" pos:column="43">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7072" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DataTypeKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="7074" pos:column="1">#<cpp:directive pos:line="7074" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7074" pos:column="9">CodeStruct2_get_Parts</name><parameter_list pos:line="7074" pos:column="30">(<param><type><name pos:line="7074" pos:column="31">This</name></type></param>,<param><type><name pos:line="7074" pos:column="36">Elements</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7075" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parts(This,Elements) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7077" pos:column="1">#<cpp:directive pos:line="7077" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7077" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7080" pos:column="1">#<cpp:directive pos:line="7080" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7080" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7085" pos:column="1">#<cpp:directive pos:line="7085" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7085" pos:column="9">/* __CodeStruct2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7088" pos:column="1">#<cpp:directive pos:line="7088" pos:column="2">ifndef</cpp:directive> <name pos:line="7088" pos:column="9">__CodeInterface2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7089" pos:column="1">#<cpp:directive pos:line="7089" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7089" pos:column="9">__CodeInterface2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7091" pos:column="1">/* interface CodeInterface2 */</comment>
<comment type="block" pos:line="7092" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="7095" pos:column="1">EXTERN_C</name> <specifier pos:line="7095" pos:column="10">const</specifier> <name pos:line="7095" pos:column="16">IID</name></type> <name pos:line="7095" pos:column="20">IID_CodeInterface2</name></decl>;</decl_stmt>

<cpp:if pos:line="7097" pos:column="1">#<cpp:directive pos:line="7097" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7097" pos:column="5">defined</name><argument_list pos:line="7097" pos:column="12">(<argument><expr><name pos:line="7097" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7097" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7097" pos:column="29">!</op:operator><call><name pos:line="7097" pos:column="30">defined</name><argument_list pos:line="7097" pos:column="37">(<argument><expr><name pos:line="7097" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7099" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7099" pos:column="19">(<argument pos:line="7099" pos:column="20">"860ab609-8af2-4434-b4dd-a43dee31b017"</argument>)</argument_list></macro>
    <label><name pos:line="7100" pos:column="5">CodeInterface2</name> :</label> <expr_stmt><expr pos:line="7100" pos:column="22">public <name pos:line="7100" pos:column="29">CodeInterface</name>
    <block pos:line="7101" pos:column="5">{
    <expr pos:line="7102" pos:column="5">public<op:operator pos:line="7102" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="7103" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="7103" pos:column="49">HRESULT</name> <name pos:line="7103" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="7103" pos:column="75">get_IsGeneric</name><argument_list pos:line="7103" pos:column="88">( 
            <comment type="block" pos:line="7104" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7104" pos:column="33">__RPC__out VARIANT_BOOL *pIsGeneric</argument>)</argument_list></macro> <op:operator pos:line="7104" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="7104" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="7106" pos:column="9">virtual <comment type="block" pos:line="7106" pos:column="17">/* [helpstring][id] */</comment> <name pos:line="7106" pos:column="40">HRESULT</name> <name pos:line="7106" pos:column="48">STDMETHODCALLTYPE</name> <macro><name pos:line="7106" pos:column="66">AddEvent</name><argument_list pos:line="7106" pos:column="74">( 
            <argument pos:line="7107" pos:column="13">__RPC__in BSTR Name</argument>,
            <argument pos:line="7108" pos:column="13">__RPC__in BSTR FullDelegateName</argument>,
            <comment type="block" pos:line="7109" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="7109" pos:column="38">VARIANT_BOOL CreatePropertyStyleEvent</argument>,
            <comment type="block" pos:line="7110" pos:column="13">/* [optional] */</comment> <argument pos:line="7110" pos:column="30">VARIANT Position</argument>,
            <comment type="block" pos:line="7111" pos:column="13">/* [defaultvalue] */</comment> <argument pos:line="7111" pos:column="34">enum <comment type="block" pos:line="7111" pos:column="39">/* external definition not present */</comment> vsCMAccess Access</argument>,
            <comment type="block" pos:line="7112" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7112" pos:column="33">__RPC__deref_out_opt CodeEvent **ppEvent</argument>)</argument_list></macro> <op:operator pos:line="7112" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="7112" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="7114" pos:column="9">virtual <comment type="block" pos:line="7114" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="7114" pos:column="81">HRESULT</name> <name pos:line="7114" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="7114" pos:column="107">get_DataTypeKind</name><argument_list pos:line="7114" pos:column="123">( 
            <comment type="block" pos:line="7115" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7115" pos:column="33">__RPC__out vsCMDataTypeKind *Kind</argument>)</argument_list></macro> <op:operator pos:line="7115" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="7115" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="7117" pos:column="9">virtual <comment type="block" pos:line="7117" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="7117" pos:column="81">HRESULT</name> <name pos:line="7117" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="7117" pos:column="107">put_DataTypeKind</name><argument_list pos:line="7117" pos:column="123">( 
            <argument pos:line="7118" pos:column="13">vsCMDataTypeKind Kind</argument>)</argument_list></macro> <op:operator pos:line="7118" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="7118" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="7120" pos:column="9">virtual <comment type="block" pos:line="7120" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="7120" pos:column="81">HRESULT</name> <name pos:line="7120" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="7120" pos:column="107">get_Parts</name><argument_list pos:line="7120" pos:column="116">( 
            <comment type="block" pos:line="7121" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7121" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="7121" pos:column="54">/* external definition not present */</comment> CodeElements **Elements</argument>)</argument_list></macro> <op:operator pos:line="7121" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="7121" pos:column="119">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7125" pos:column="1">#<cpp:directive pos:line="7125" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7125" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7127" pos:column="5">typedef <type><struct pos:line="7127" pos:column="13">struct <name pos:line="7127" pos:column="20">CodeInterface2Vtbl</name>
    <block pos:line="7128" pos:column="5">{<public type="default" pos:line="7128" pos:column="6">
        <decl_stmt><decl><type><name pos:line="7129" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="7131" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="7131" pos:column="46">HRESULT</name></type> ( <name pos:line="7131" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7131" pos:column="74">*</type:modifier><name pos:line="7131" pos:column="75">QueryInterface</name> )<parameter_list pos:line="7131" pos:column="91">( 
            <param><decl><type><name pos:line="7132" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7132" pos:column="28">*</type:modifier></type> <name pos:line="7132" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7133" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="7133" pos:column="47">struct <name pos:line="7133" pos:column="54">GUID</name> <type:modifier pos:line="7133" pos:column="59">*</type:modifier></type><name pos:line="7133" pos:column="60">riid</name></decl><op:operator pos:line="7133" pos:column="64">,</op:operator>
            <comment type="block" pos:line="7134" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7134" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="7134" pos:column="59">void</name> <type:modifier pos:line="7134" pos:column="64">*</type:modifier><type:modifier pos:line="7134" pos:column="65">*</type:modifier><name pos:line="7134" pos:column="66">ppvObj</name><op:operator pos:line="7134" pos:column="72">,</op:operator>
            <comment type="block" pos:line="7135" pos:column="13">/* [retval][out] */</comment> <name pos:line="7135" pos:column="33">__RPC__out</name> <name pos:line="7135" pos:column="44">void</name> <type:modifier pos:line="7135" pos:column="49">*</type:modifier><name pos:line="7135" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="7137" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="7137" pos:column="46">HRESULT</name></type> ( <name pos:line="7137" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7137" pos:column="74">*</type:modifier><name pos:line="7137" pos:column="75">AddRef</name> )<parameter_list pos:line="7137" pos:column="83">( 
            <param><decl><type><name pos:line="7138" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7138" pos:column="28">*</type:modifier></type> <name pos:line="7138" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7139" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7139" pos:column="33">__RPC__out</name> <name pos:line="7139" pos:column="44">unsigned</name> <name pos:line="7139" pos:column="53">long</name> <type:modifier pos:line="7139" pos:column="58">*</type:modifier></type><name pos:line="7139" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7141" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="7141" pos:column="46">HRESULT</name></type> ( <name pos:line="7141" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7141" pos:column="74">*</type:modifier><name pos:line="7141" pos:column="75">Release</name> )<parameter_list pos:line="7141" pos:column="84">( 
            <param><decl><type><name pos:line="7142" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7142" pos:column="28">*</type:modifier></type> <name pos:line="7142" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7143" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7143" pos:column="33">__RPC__out</name> <name pos:line="7143" pos:column="44">unsigned</name> <name pos:line="7143" pos:column="53">long</name> <type:modifier pos:line="7143" pos:column="58">*</type:modifier></type><name pos:line="7143" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7145" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="7145" pos:column="46">HRESULT</name></type> ( <name pos:line="7145" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7145" pos:column="74">*</type:modifier><name pos:line="7145" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="7145" pos:column="93">( 
            <param><decl><type><name pos:line="7146" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7146" pos:column="28">*</type:modifier></type> <name pos:line="7146" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7147" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="7147" pos:column="38">__RPC__out</name> <name pos:line="7147" pos:column="49">unsigned</name> <name pos:line="7147" pos:column="58">UINT</name> <type:modifier pos:line="7147" pos:column="63">*</type:modifier></type><name pos:line="7147" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="7148" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7148" pos:column="33">__RPC__out</name> <name pos:line="7148" pos:column="44">void</name> <type:modifier pos:line="7148" pos:column="49">*</type:modifier></type><name pos:line="7148" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7150" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="7150" pos:column="46">HRESULT</name></type> ( <name pos:line="7150" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7150" pos:column="74">*</type:modifier><name pos:line="7150" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="7150" pos:column="88">( 
            <param><decl><type><name pos:line="7151" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7151" pos:column="28">*</type:modifier></type> <name pos:line="7151" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7152" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="7152" pos:column="37">unsigned</name> <name pos:line="7152" pos:column="46">UINT</name></type> <name pos:line="7152" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="7153" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="7153" pos:column="37">unsigned</name> <name pos:line="7153" pos:column="46">long</name></type> <name pos:line="7153" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="7154" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="7154" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="7154" pos:column="59">void</name> <type:modifier pos:line="7154" pos:column="64">*</type:modifier><type:modifier pos:line="7154" pos:column="65">*</type:modifier></type><name pos:line="7154" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="7155" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7155" pos:column="33">__RPC__out</name> <name pos:line="7155" pos:column="44">void</name> <type:modifier pos:line="7155" pos:column="49">*</type:modifier></type><name pos:line="7155" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7157" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="7157" pos:column="46">HRESULT</name> <argument_list pos:line="7157" pos:column="54">( <argument pos:line="7157" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7157" pos:column="90">(</op:operator> 
            <name pos:line="7158" pos:column="13">CodeInterface2</name> <op:operator pos:line="7158" pos:column="28">*</op:operator> <name pos:line="7158" pos:column="30">This</name><op:operator pos:line="7158" pos:column="34">,</op:operator>
            <comment type="block" pos:line="7159" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7159" pos:column="37">__RPC__in</name> struct <name pos:line="7159" pos:column="54">GUID</name> <op:operator pos:line="7159" pos:column="59">*</op:operator><name pos:line="7159" pos:column="60">riid</name><op:operator pos:line="7159" pos:column="64">,</op:operator>
            <comment type="block" pos:line="7160" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7160" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="7160" pos:column="57">signed</name> <name pos:line="7160" pos:column="64">char</name> <op:operator pos:line="7160" pos:column="69">*</op:operator><op:operator pos:line="7160" pos:column="70">*</op:operator><name pos:line="7160" pos:column="71">rgszNames</name><op:operator pos:line="7160" pos:column="80">,</op:operator>
            <comment type="block" pos:line="7161" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7161" pos:column="37">unsigned</name> <name pos:line="7161" pos:column="46">UINT</name> <name pos:line="7161" pos:column="51">cNames</name><op:operator pos:line="7161" pos:column="57">,</op:operator>
            <comment type="block" pos:line="7162" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7162" pos:column="37">unsigned</name> <name pos:line="7162" pos:column="46">long</name> <name pos:line="7162" pos:column="51">lcid</name><op:operator pos:line="7162" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7163" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7163" pos:column="38">__RPC__out</name> <name pos:line="7163" pos:column="49">signed</name> <name pos:line="7163" pos:column="56">long</name> <op:operator pos:line="7163" pos:column="61">*</op:operator><name pos:line="7163" pos:column="62">rgdispid</name><op:operator pos:line="7163" pos:column="70">,</op:operator>
            <comment type="block" pos:line="7164" pos:column="13">/* [retval][out] */</comment> <name pos:line="7164" pos:column="33">__RPC__out</name> <name pos:line="7164" pos:column="44">void</name> <op:operator pos:line="7164" pos:column="49">*</op:operator><name pos:line="7164" pos:column="50">retval</name><op:operator pos:line="7164" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7166" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="7166" pos:column="46">HRESULT</name> <argument_list pos:line="7166" pos:column="54">( <argument pos:line="7166" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7166" pos:column="83">(</op:operator> 
            <name pos:line="7167" pos:column="13">CodeInterface2</name> <op:operator pos:line="7167" pos:column="28">*</op:operator> <name pos:line="7167" pos:column="30">This</name><op:operator pos:line="7167" pos:column="34">,</op:operator>
            <comment type="block" pos:line="7168" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7168" pos:column="37">signed</name> <name pos:line="7168" pos:column="44">long</name> <name pos:line="7168" pos:column="49">dispidMember</name><op:operator pos:line="7168" pos:column="61">,</op:operator>
            <comment type="block" pos:line="7169" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7169" pos:column="37">__RPC__in</name> struct <name pos:line="7169" pos:column="54">GUID</name> <op:operator pos:line="7169" pos:column="59">*</op:operator><name pos:line="7169" pos:column="60">riid</name><op:operator pos:line="7169" pos:column="64">,</op:operator>
            <comment type="block" pos:line="7170" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7170" pos:column="37">unsigned</name> <name pos:line="7170" pos:column="46">long</name> <name pos:line="7170" pos:column="51">lcid</name><op:operator pos:line="7170" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7171" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7171" pos:column="37">unsigned</name> <name pos:line="7171" pos:column="46">short</name> <name pos:line="7171" pos:column="52">wFlags</name><op:operator pos:line="7171" pos:column="58">,</op:operator>
            <comment type="block" pos:line="7172" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7172" pos:column="37">__RPC__in</name> struct <name pos:line="7172" pos:column="54">DISPPARAMS</name> <op:operator pos:line="7172" pos:column="65">*</op:operator><name pos:line="7172" pos:column="66">pdispparams</name><op:operator pos:line="7172" pos:column="77">,</op:operator>
            <comment type="block" pos:line="7173" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7173" pos:column="38">__RPC__out</name> <name pos:line="7173" pos:column="49">VARIANT</name> <op:operator pos:line="7173" pos:column="57">*</op:operator><name pos:line="7173" pos:column="58">pvarResult</name><op:operator pos:line="7173" pos:column="68">,</op:operator>
            <comment type="block" pos:line="7174" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7174" pos:column="38">__RPC__out</name> struct <name pos:line="7174" pos:column="56">EXCEPINFO</name> <op:operator pos:line="7174" pos:column="66">*</op:operator><name pos:line="7174" pos:column="67">pexcepinfo</name><op:operator pos:line="7174" pos:column="77">,</op:operator>
            <comment type="block" pos:line="7175" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7175" pos:column="38">__RPC__out</name> <name pos:line="7175" pos:column="49">unsigned</name> <name pos:line="7175" pos:column="58">UINT</name> <op:operator pos:line="7175" pos:column="63">*</op:operator><name pos:line="7175" pos:column="64">puArgErr</name><op:operator pos:line="7175" pos:column="72">,</op:operator>
            <comment type="block" pos:line="7176" pos:column="13">/* [retval][out] */</comment> <name pos:line="7176" pos:column="33">__RPC__out</name> <name pos:line="7176" pos:column="44">void</name> <op:operator pos:line="7176" pos:column="49">*</op:operator><name pos:line="7176" pos:column="50">retval</name><op:operator pos:line="7176" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7178" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7178" pos:column="43">HRESULT</name></type> ( <name pos:line="7178" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7178" pos:column="71">*</type:modifier><name pos:line="7178" pos:column="72">get_DTE</name> )<parameter_list pos:line="7178" pos:column="81">( 
            <param><decl><type><name pos:line="7179" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7179" pos:column="28">*</type:modifier></type> <name pos:line="7179" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7180" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7180" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="7180" pos:column="54">*</type:modifier><type:modifier pos:line="7180" pos:column="55">*</type:modifier></type><name pos:line="7180" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7182" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7182" pos:column="43">HRESULT</name></type> ( <name pos:line="7182" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7182" pos:column="71">*</type:modifier><name pos:line="7182" pos:column="72">get_Collection</name> )<parameter_list pos:line="7182" pos:column="88">( 
            <param><decl><type><name pos:line="7183" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7183" pos:column="28">*</type:modifier></type> <name pos:line="7183" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7184" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7184" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7184" pos:column="54">CodeElements</name> <type:modifier pos:line="7184" pos:column="67">*</type:modifier><type:modifier pos:line="7184" pos:column="68">*</type:modifier></type><name pos:line="7184" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7186" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7186" pos:column="43">HRESULT</name></type> ( <name pos:line="7186" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7186" pos:column="71">*</type:modifier><name pos:line="7186" pos:column="72">get_Name</name> )<parameter_list pos:line="7186" pos:column="82">( 
            <param><decl><type><name pos:line="7187" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7187" pos:column="28">*</type:modifier></type> <name pos:line="7187" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7188" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7188" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7188" pos:column="54">BSTR</name> <type:modifier pos:line="7188" pos:column="59">*</type:modifier></type><name pos:line="7188" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7190" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="7190" pos:column="43">HRESULT</name></type> ( <name pos:line="7190" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7190" pos:column="71">*</type:modifier><name pos:line="7190" pos:column="72">put_Name</name> )<parameter_list pos:line="7190" pos:column="82">( 
            <param><decl><type><name pos:line="7191" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7191" pos:column="28">*</type:modifier></type> <name pos:line="7191" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7192" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7192" pos:column="33">__RPC__in</name> <name pos:line="7192" pos:column="43">BSTR</name></type> <name pos:line="7192" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="7193" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7193" pos:column="33">__RPC__out</name> <name pos:line="7193" pos:column="44">void</name> <type:modifier pos:line="7193" pos:column="49">*</type:modifier></type><name pos:line="7193" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7195" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7195" pos:column="43">HRESULT</name></type> ( <name pos:line="7195" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7195" pos:column="71">*</type:modifier><name pos:line="7195" pos:column="72">get_FullName</name> )<parameter_list pos:line="7195" pos:column="86">( 
            <param><decl><type><name pos:line="7196" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7196" pos:column="28">*</type:modifier></type> <name pos:line="7196" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7197" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7197" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7197" pos:column="54">BSTR</name> <type:modifier pos:line="7197" pos:column="59">*</type:modifier></type><name pos:line="7197" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7199" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7199" pos:column="43">HRESULT</name></type> ( <name pos:line="7199" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7199" pos:column="71">*</type:modifier><name pos:line="7199" pos:column="72">get_ProjectItem</name> )<parameter_list pos:line="7199" pos:column="89">( 
            <param><decl><type><name pos:line="7200" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7200" pos:column="28">*</type:modifier></type> <name pos:line="7200" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7201" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7201" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7201" pos:column="54">ProjectItem</name> <type:modifier pos:line="7201" pos:column="66">*</type:modifier><type:modifier pos:line="7201" pos:column="67">*</type:modifier></type><name pos:line="7201" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7203" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="7203" pos:column="43">HRESULT</name> <argument_list pos:line="7203" pos:column="51">( <argument pos:line="7203" pos:column="53">STDMETHODCALLTYPE *get_Kind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7203" pos:column="82">(</op:operator> 
            <name pos:line="7204" pos:column="13">CodeInterface2</name> <op:operator pos:line="7204" pos:column="28">*</op:operator> <name pos:line="7204" pos:column="30">This</name><op:operator pos:line="7204" pos:column="34">,</op:operator>
            <comment type="block" pos:line="7205" pos:column="13">/* [retval][out] */</comment> <name pos:line="7205" pos:column="33">__RPC__out</name> enum <name pos:line="7205" pos:column="49">vsCMElement</name> <op:operator pos:line="7205" pos:column="61">*</op:operator><name pos:line="7205" pos:column="62">retval</name><op:operator pos:line="7205" pos:column="68">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7207" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7207" pos:column="43">HRESULT</name></type> ( <name pos:line="7207" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7207" pos:column="71">*</type:modifier><name pos:line="7207" pos:column="72">get_IsCodeType</name> )<parameter_list pos:line="7207" pos:column="88">( 
            <param><decl><type><name pos:line="7208" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7208" pos:column="28">*</type:modifier></type> <name pos:line="7208" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7209" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7209" pos:column="33">__RPC__out</name> <name pos:line="7209" pos:column="44">BOOLEAN</name> <type:modifier pos:line="7209" pos:column="52">*</type:modifier></type><name pos:line="7209" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7211" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="7211" pos:column="43">HRESULT</name> <argument_list pos:line="7211" pos:column="51">( <argument pos:line="7211" pos:column="53">STDMETHODCALLTYPE *get_InfoLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7211" pos:column="90">(</op:operator> 
            <name pos:line="7212" pos:column="13">CodeInterface2</name> <op:operator pos:line="7212" pos:column="28">*</op:operator> <name pos:line="7212" pos:column="30">This</name><op:operator pos:line="7212" pos:column="34">,</op:operator>
            <comment type="block" pos:line="7213" pos:column="13">/* [retval][out] */</comment> <name pos:line="7213" pos:column="33">__RPC__out</name> enum <name pos:line="7213" pos:column="49">vsCMInfoLocation</name> <op:operator pos:line="7213" pos:column="66">*</op:operator><name pos:line="7213" pos:column="67">retval</name><op:operator pos:line="7213" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7215" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7215" pos:column="43">HRESULT</name></type> ( <name pos:line="7215" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7215" pos:column="71">*</type:modifier><name pos:line="7215" pos:column="72">get_Children</name> )<parameter_list pos:line="7215" pos:column="86">( 
            <param><decl><type><name pos:line="7216" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7216" pos:column="28">*</type:modifier></type> <name pos:line="7216" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7217" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7217" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7217" pos:column="54">CodeElements</name> <type:modifier pos:line="7217" pos:column="67">*</type:modifier><type:modifier pos:line="7217" pos:column="68">*</type:modifier></type><name pos:line="7217" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7219" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7219" pos:column="43">HRESULT</name></type> ( <name pos:line="7219" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7219" pos:column="71">*</type:modifier><name pos:line="7219" pos:column="72">get_Language</name> )<parameter_list pos:line="7219" pos:column="86">( 
            <param><decl><type><name pos:line="7220" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7220" pos:column="28">*</type:modifier></type> <name pos:line="7220" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7221" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7221" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7221" pos:column="54">BSTR</name> <type:modifier pos:line="7221" pos:column="59">*</type:modifier></type><name pos:line="7221" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7223" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7223" pos:column="43">HRESULT</name></type> ( <name pos:line="7223" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7223" pos:column="71">*</type:modifier><name pos:line="7223" pos:column="72">get_StartPoint</name> )<parameter_list pos:line="7223" pos:column="88">( 
            <param><decl><type><name pos:line="7224" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7224" pos:column="28">*</type:modifier></type> <name pos:line="7224" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7225" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7225" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7225" pos:column="54">TextPoint</name> <type:modifier pos:line="7225" pos:column="64">*</type:modifier><type:modifier pos:line="7225" pos:column="65">*</type:modifier></type><name pos:line="7225" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7227" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7227" pos:column="43">HRESULT</name></type> ( <name pos:line="7227" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7227" pos:column="71">*</type:modifier><name pos:line="7227" pos:column="72">get_EndPoint</name> )<parameter_list pos:line="7227" pos:column="86">( 
            <param><decl><type><name pos:line="7228" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7228" pos:column="28">*</type:modifier></type> <name pos:line="7228" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7229" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7229" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7229" pos:column="54">TextPoint</name> <type:modifier pos:line="7229" pos:column="64">*</type:modifier><type:modifier pos:line="7229" pos:column="65">*</type:modifier></type><name pos:line="7229" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7231" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7231" pos:column="43">HRESULT</name></type> ( <name pos:line="7231" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7231" pos:column="71">*</type:modifier><name pos:line="7231" pos:column="72">get_ExtenderNames</name> )<parameter_list pos:line="7231" pos:column="91">( 
            <param><decl><type><name pos:line="7232" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7232" pos:column="28">*</type:modifier></type> <name pos:line="7232" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7233" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7233" pos:column="33">__RPC__out</name> <name pos:line="7233" pos:column="44">VARIANT</name> <type:modifier pos:line="7233" pos:column="52">*</type:modifier></type><name pos:line="7233" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7235" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7235" pos:column="43">HRESULT</name></type> ( <name pos:line="7235" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7235" pos:column="71">*</type:modifier><name pos:line="7235" pos:column="72">get_Extender</name> )<parameter_list pos:line="7235" pos:column="86">( 
            <param><decl><type><name pos:line="7236" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7236" pos:column="28">*</type:modifier></type> <name pos:line="7236" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7237" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7237" pos:column="33">__RPC__in</name> <name pos:line="7237" pos:column="43">BSTR</name></type> <name pos:line="7237" pos:column="48">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="7238" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7238" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7238" pos:column="54">IDispatch</name> <type:modifier pos:line="7238" pos:column="64">*</type:modifier><type:modifier pos:line="7238" pos:column="65">*</type:modifier></type><name pos:line="7238" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7240" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7240" pos:column="43">HRESULT</name></type> ( <name pos:line="7240" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7240" pos:column="71">*</type:modifier><name pos:line="7240" pos:column="72">get_ExtenderCATID</name> )<parameter_list pos:line="7240" pos:column="91">( 
            <param><decl><type><name pos:line="7241" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7241" pos:column="28">*</type:modifier></type> <name pos:line="7241" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7242" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7242" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7242" pos:column="54">BSTR</name> <type:modifier pos:line="7242" pos:column="59">*</type:modifier></type><name pos:line="7242" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7244" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="7244" pos:column="34">HRESULT</name> <argument_list pos:line="7244" pos:column="42">( <argument pos:line="7244" pos:column="44">STDMETHODCALLTYPE *GetStartPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7244" pos:column="78">(</op:operator> 
            <name pos:line="7245" pos:column="13">CodeInterface2</name> <op:operator pos:line="7245" pos:column="28">*</op:operator> <name pos:line="7245" pos:column="30">This</name><op:operator pos:line="7245" pos:column="34">,</op:operator>
            <comment type="block" pos:line="7246" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="7246" pos:column="42">vsCMPart</name> <name pos:line="7246" pos:column="51">Part</name><op:operator pos:line="7246" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7247" pos:column="13">/* [retval][out] */</comment> <name pos:line="7247" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7247" pos:column="54">TextPoint</name> <op:operator pos:line="7247" pos:column="64">*</op:operator><op:operator pos:line="7247" pos:column="65">*</op:operator><name pos:line="7247" pos:column="66">retval</name><op:operator pos:line="7247" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7249" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="7249" pos:column="34">HRESULT</name> <argument_list pos:line="7249" pos:column="42">( <argument pos:line="7249" pos:column="44">STDMETHODCALLTYPE *GetEndPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7249" pos:column="76">(</op:operator> 
            <name pos:line="7250" pos:column="13">CodeInterface2</name> <op:operator pos:line="7250" pos:column="28">*</op:operator> <name pos:line="7250" pos:column="30">This</name><op:operator pos:line="7250" pos:column="34">,</op:operator>
            <comment type="block" pos:line="7251" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="7251" pos:column="42">vsCMPart</name> <name pos:line="7251" pos:column="51">Part</name><op:operator pos:line="7251" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7252" pos:column="13">/* [retval][out] */</comment> <name pos:line="7252" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7252" pos:column="54">TextPoint</name> <op:operator pos:line="7252" pos:column="64">*</op:operator><op:operator pos:line="7252" pos:column="65">*</op:operator><name pos:line="7252" pos:column="66">retval</name><op:operator pos:line="7252" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7254" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7254" pos:column="43">HRESULT</name></type> ( <name pos:line="7254" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7254" pos:column="71">*</type:modifier><name pos:line="7254" pos:column="72">get_Parent</name> )<parameter_list pos:line="7254" pos:column="84">( 
            <param><decl><type><name pos:line="7255" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7255" pos:column="28">*</type:modifier></type> <name pos:line="7255" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7256" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7256" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7256" pos:column="54">IDispatch</name> <type:modifier pos:line="7256" pos:column="64">*</type:modifier><type:modifier pos:line="7256" pos:column="65">*</type:modifier></type><name pos:line="7256" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7258" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7258" pos:column="43">HRESULT</name></type> ( <name pos:line="7258" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7258" pos:column="71">*</type:modifier><name pos:line="7258" pos:column="72">get_Namespace</name> )<parameter_list pos:line="7258" pos:column="87">( 
            <param><decl><type><name pos:line="7259" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7259" pos:column="28">*</type:modifier></type> <name pos:line="7259" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7260" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7260" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7260" pos:column="54">CodeNamespace</name> <type:modifier pos:line="7260" pos:column="68">*</type:modifier><type:modifier pos:line="7260" pos:column="69">*</type:modifier></type><name pos:line="7260" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7262" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7262" pos:column="43">HRESULT</name></type> ( <name pos:line="7262" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7262" pos:column="71">*</type:modifier><name pos:line="7262" pos:column="72">get_Bases</name> )<parameter_list pos:line="7262" pos:column="83">( 
            <param><decl><type><name pos:line="7263" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7263" pos:column="28">*</type:modifier></type> <name pos:line="7263" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7264" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7264" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7264" pos:column="54">CodeElements</name> <type:modifier pos:line="7264" pos:column="67">*</type:modifier><type:modifier pos:line="7264" pos:column="68">*</type:modifier></type><name pos:line="7264" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7266" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7266" pos:column="43">HRESULT</name></type> ( <name pos:line="7266" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7266" pos:column="71">*</type:modifier><name pos:line="7266" pos:column="72">get_Members</name> )<parameter_list pos:line="7266" pos:column="85">( 
            <param><decl><type><name pos:line="7267" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7267" pos:column="28">*</type:modifier></type> <name pos:line="7267" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7268" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7268" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7268" pos:column="54">CodeElements</name> <type:modifier pos:line="7268" pos:column="67">*</type:modifier><type:modifier pos:line="7268" pos:column="68">*</type:modifier></type><name pos:line="7268" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7270" pos:column="9">/* [id][propput][funcdescattr] */</comment> <macro><name pos:line="7270" pos:column="43">HRESULT</name> <argument_list pos:line="7270" pos:column="51">( <argument pos:line="7270" pos:column="53">STDMETHODCALLTYPE *put_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7270" pos:column="84">(</op:operator> 
            <name pos:line="7271" pos:column="13">CodeInterface2</name> <op:operator pos:line="7271" pos:column="28">*</op:operator> <name pos:line="7271" pos:column="30">This</name><op:operator pos:line="7271" pos:column="34">,</op:operator>
            <comment type="block" pos:line="7272" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="7272" pos:column="38">vsCMAccess</name> <name pos:line="7272" pos:column="49">noname</name><op:operator pos:line="7272" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7273" pos:column="13">/* [retval][out] */</comment> <name pos:line="7273" pos:column="33">__RPC__out</name> <name pos:line="7273" pos:column="44">void</name> <op:operator pos:line="7273" pos:column="49">*</op:operator><name pos:line="7273" pos:column="50">retval</name><op:operator pos:line="7273" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7275" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="7275" pos:column="43">HRESULT</name> <argument_list pos:line="7275" pos:column="51">( <argument pos:line="7275" pos:column="53">STDMETHODCALLTYPE *get_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7275" pos:column="84">(</op:operator> 
            <name pos:line="7276" pos:column="13">CodeInterface2</name> <op:operator pos:line="7276" pos:column="28">*</op:operator> <name pos:line="7276" pos:column="30">This</name><op:operator pos:line="7276" pos:column="34">,</op:operator>
            <comment type="block" pos:line="7277" pos:column="13">/* [retval][out] */</comment> <name pos:line="7277" pos:column="33">__RPC__out</name> enum <name pos:line="7277" pos:column="49">vsCMAccess</name> <op:operator pos:line="7277" pos:column="60">*</op:operator><name pos:line="7277" pos:column="61">retval</name><op:operator pos:line="7277" pos:column="67">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7279" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7279" pos:column="43">HRESULT</name></type> ( <name pos:line="7279" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7279" pos:column="71">*</type:modifier><name pos:line="7279" pos:column="72">get_Attributes</name> )<parameter_list pos:line="7279" pos:column="88">( 
            <param><decl><type><name pos:line="7280" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7280" pos:column="28">*</type:modifier></type> <name pos:line="7280" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7281" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7281" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7281" pos:column="54">CodeElements</name> <type:modifier pos:line="7281" pos:column="67">*</type:modifier><type:modifier pos:line="7281" pos:column="68">*</type:modifier></type><name pos:line="7281" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7283" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7283" pos:column="43">HRESULT</name></type> ( <name pos:line="7283" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7283" pos:column="71">*</type:modifier><name pos:line="7283" pos:column="72">get_DocComment</name> )<parameter_list pos:line="7283" pos:column="88">( 
            <param><decl><type><name pos:line="7284" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7284" pos:column="28">*</type:modifier></type> <name pos:line="7284" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7285" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7285" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7285" pos:column="54">BSTR</name> <type:modifier pos:line="7285" pos:column="59">*</type:modifier></type><name pos:line="7285" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7287" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="7287" pos:column="43">HRESULT</name></type> ( <name pos:line="7287" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7287" pos:column="71">*</type:modifier><name pos:line="7287" pos:column="72">put_DocComment</name> )<parameter_list pos:line="7287" pos:column="88">( 
            <param><decl><type><name pos:line="7288" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7288" pos:column="28">*</type:modifier></type> <name pos:line="7288" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7289" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7289" pos:column="33">__RPC__in</name> <name pos:line="7289" pos:column="43">BSTR</name></type> <name pos:line="7289" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="7290" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7290" pos:column="33">__RPC__out</name> <name pos:line="7290" pos:column="44">void</name> <type:modifier pos:line="7290" pos:column="49">*</type:modifier></type><name pos:line="7290" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7292" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7292" pos:column="43">HRESULT</name></type> ( <name pos:line="7292" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7292" pos:column="71">*</type:modifier><name pos:line="7292" pos:column="72">get_Comment</name> )<parameter_list pos:line="7292" pos:column="85">( 
            <param><decl><type><name pos:line="7293" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7293" pos:column="28">*</type:modifier></type> <name pos:line="7293" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7294" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7294" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7294" pos:column="54">BSTR</name> <type:modifier pos:line="7294" pos:column="59">*</type:modifier></type><name pos:line="7294" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7296" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="7296" pos:column="43">HRESULT</name></type> ( <name pos:line="7296" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7296" pos:column="71">*</type:modifier><name pos:line="7296" pos:column="72">put_Comment</name> )<parameter_list pos:line="7296" pos:column="85">( 
            <param><decl><type><name pos:line="7297" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7297" pos:column="28">*</type:modifier></type> <name pos:line="7297" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7298" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7298" pos:column="33">__RPC__in</name> <name pos:line="7298" pos:column="43">BSTR</name></type> <name pos:line="7298" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="7299" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7299" pos:column="33">__RPC__out</name> <name pos:line="7299" pos:column="44">void</name> <type:modifier pos:line="7299" pos:column="49">*</type:modifier></type><name pos:line="7299" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7301" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="7301" pos:column="34">HRESULT</name></type> ( <name pos:line="7301" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="7301" pos:column="62">*</type:modifier><name pos:line="7301" pos:column="63">AddBase</name> )<parameter_list pos:line="7301" pos:column="72">( 
            <param><decl><type><name pos:line="7302" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7302" pos:column="28">*</type:modifier></type> <name pos:line="7302" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7303" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7303" pos:column="33">VARIANT</name></type> <name pos:line="7303" pos:column="41">Base</name></decl></param>,
            <comment type="block" pos:line="7304" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="7304" pos:column="43">VARIANT</name></type> <name pos:line="7304" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="7305" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7305" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7305" pos:column="54">CodeElement</name> <type:modifier pos:line="7305" pos:column="66">*</type:modifier><type:modifier pos:line="7305" pos:column="67">*</type:modifier></type><name pos:line="7305" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7307" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="7307" pos:column="34">HRESULT</name></type> ( <name pos:line="7307" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="7307" pos:column="62">*</type:modifier><name pos:line="7307" pos:column="63">AddAttribute</name> )<parameter_list pos:line="7307" pos:column="77">( 
            <param><decl><type><name pos:line="7308" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7308" pos:column="28">*</type:modifier></type> <name pos:line="7308" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7309" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7309" pos:column="33">__RPC__in</name> <name pos:line="7309" pos:column="43">BSTR</name></type> <name pos:line="7309" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="7310" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7310" pos:column="33">__RPC__in</name> <name pos:line="7310" pos:column="43">BSTR</name></type> <name pos:line="7310" pos:column="48">Value</name></decl></param>,
            <comment type="block" pos:line="7311" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="7311" pos:column="43">VARIANT</name></type> <name pos:line="7311" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="7312" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7312" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7312" pos:column="54">CodeAttribute</name> <type:modifier pos:line="7312" pos:column="68">*</type:modifier><type:modifier pos:line="7312" pos:column="69">*</type:modifier></type><name pos:line="7312" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7314" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="7314" pos:column="34">HRESULT</name></type> ( <name pos:line="7314" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="7314" pos:column="62">*</type:modifier><name pos:line="7314" pos:column="63">RemoveBase</name> )<parameter_list pos:line="7314" pos:column="75">( 
            <param><decl><type><name pos:line="7315" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7315" pos:column="28">*</type:modifier></type> <name pos:line="7315" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7316" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7316" pos:column="33">VARIANT</name></type> <name pos:line="7316" pos:column="41">Element</name></decl></param>,
            <comment type="block" pos:line="7317" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7317" pos:column="33">__RPC__out</name> <name pos:line="7317" pos:column="44">void</name> <type:modifier pos:line="7317" pos:column="49">*</type:modifier></type><name pos:line="7317" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7319" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="7319" pos:column="34">HRESULT</name></type> ( <name pos:line="7319" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="7319" pos:column="62">*</type:modifier><name pos:line="7319" pos:column="63">RemoveMember</name> )<parameter_list pos:line="7319" pos:column="77">( 
            <param><decl><type><name pos:line="7320" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7320" pos:column="28">*</type:modifier></type> <name pos:line="7320" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7321" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7321" pos:column="33">VARIANT</name></type> <name pos:line="7321" pos:column="41">Element</name></decl></param>,
            <comment type="block" pos:line="7322" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7322" pos:column="33">__RPC__out</name> <name pos:line="7322" pos:column="44">void</name> <type:modifier pos:line="7322" pos:column="49">*</type:modifier></type><name pos:line="7322" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7324" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7324" pos:column="43">HRESULT</name></type> ( <name pos:line="7324" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7324" pos:column="71">*</type:modifier><name pos:line="7324" pos:column="72">get_IsDerivedFrom</name> )<parameter_list pos:line="7324" pos:column="91">( 
            <param><decl><type><name pos:line="7325" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7325" pos:column="28">*</type:modifier></type> <name pos:line="7325" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7326" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7326" pos:column="33">__RPC__in</name> <name pos:line="7326" pos:column="43">BSTR</name></type> <name pos:line="7326" pos:column="48">FullName</name></decl></param>,
            <comment type="block" pos:line="7327" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7327" pos:column="33">__RPC__out</name> <name pos:line="7327" pos:column="44">BOOLEAN</name> <type:modifier pos:line="7327" pos:column="52">*</type:modifier></type><name pos:line="7327" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7329" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7329" pos:column="43">HRESULT</name></type> ( <name pos:line="7329" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7329" pos:column="71">*</type:modifier><name pos:line="7329" pos:column="72">get_DerivedTypes</name> )<parameter_list pos:line="7329" pos:column="90">( 
            <param><decl><type><name pos:line="7330" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7330" pos:column="28">*</type:modifier></type> <name pos:line="7330" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7331" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7331" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7331" pos:column="54">CodeElements</name> <type:modifier pos:line="7331" pos:column="67">*</type:modifier><type:modifier pos:line="7331" pos:column="68">*</type:modifier></type><name pos:line="7331" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7333" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="7333" pos:column="34">HRESULT</name> <argument_list pos:line="7333" pos:column="42">( <argument pos:line="7333" pos:column="44">STDMETHODCALLTYPE *AddFunction</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7333" pos:column="76">(</op:operator> 
            <name pos:line="7334" pos:column="13">CodeInterface2</name> <op:operator pos:line="7334" pos:column="28">*</op:operator> <name pos:line="7334" pos:column="30">This</name><op:operator pos:line="7334" pos:column="34">,</op:operator>
            <comment type="block" pos:line="7335" pos:column="13">/* [idldescattr] */</comment> <name pos:line="7335" pos:column="33">__RPC__in</name> <name pos:line="7335" pos:column="43">BSTR</name> <name pos:line="7335" pos:column="48">Name</name><op:operator pos:line="7335" pos:column="52">,</op:operator>
            <comment type="block" pos:line="7336" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="7336" pos:column="38">vsCMFunction</name> <name pos:line="7336" pos:column="51">Kind</name><op:operator pos:line="7336" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7337" pos:column="13">/* [idldescattr] */</comment> <name pos:line="7337" pos:column="33">VARIANT</name> <name pos:line="7337" pos:column="41">Type</name><op:operator pos:line="7337" pos:column="45">,</op:operator>
            <comment type="block" pos:line="7338" pos:column="13">/* [idldescattr] */</comment> <name pos:line="7338" pos:column="33">VARIANT</name> <name pos:line="7338" pos:column="41">Position</name><op:operator pos:line="7338" pos:column="49">,</op:operator>
            <comment type="block" pos:line="7339" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="7339" pos:column="38">vsCMAccess</name> <name pos:line="7339" pos:column="49">Access</name><op:operator pos:line="7339" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7340" pos:column="13">/* [retval][out] */</comment> <name pos:line="7340" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7340" pos:column="54">CodeFunction</name> <op:operator pos:line="7340" pos:column="67">*</op:operator><op:operator pos:line="7340" pos:column="68">*</op:operator><name pos:line="7340" pos:column="69">retval</name><op:operator pos:line="7340" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7342" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="7342" pos:column="34">HRESULT</name> <argument_list pos:line="7342" pos:column="42">( <argument pos:line="7342" pos:column="44">STDMETHODCALLTYPE *AddProperty</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7342" pos:column="76">(</op:operator> 
            <name pos:line="7343" pos:column="13">CodeInterface2</name> <op:operator pos:line="7343" pos:column="28">*</op:operator> <name pos:line="7343" pos:column="30">This</name><op:operator pos:line="7343" pos:column="34">,</op:operator>
            <comment type="block" pos:line="7344" pos:column="13">/* [idldescattr] */</comment> <name pos:line="7344" pos:column="33">__RPC__in</name> <name pos:line="7344" pos:column="43">BSTR</name> <name pos:line="7344" pos:column="48">GetterName</name><op:operator pos:line="7344" pos:column="58">,</op:operator>
            <comment type="block" pos:line="7345" pos:column="13">/* [idldescattr] */</comment> <name pos:line="7345" pos:column="33">__RPC__in</name> <name pos:line="7345" pos:column="43">BSTR</name> <name pos:line="7345" pos:column="48">PutterName</name><op:operator pos:line="7345" pos:column="58">,</op:operator>
            <comment type="block" pos:line="7346" pos:column="13">/* [idldescattr] */</comment> <name pos:line="7346" pos:column="33">VARIANT</name> <name pos:line="7346" pos:column="41">Type</name><op:operator pos:line="7346" pos:column="45">,</op:operator>
            <comment type="block" pos:line="7347" pos:column="13">/* [idldescattr] */</comment> <name pos:line="7347" pos:column="33">VARIANT</name> <name pos:line="7347" pos:column="41">Position</name><op:operator pos:line="7347" pos:column="49">,</op:operator>
            <comment type="block" pos:line="7348" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="7348" pos:column="38">vsCMAccess</name> <name pos:line="7348" pos:column="49">Access</name><op:operator pos:line="7348" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7349" pos:column="13">/* [optional][idldescattr] */</comment> <name pos:line="7349" pos:column="43">VARIANT</name> <name pos:line="7349" pos:column="51">Location</name><op:operator pos:line="7349" pos:column="59">,</op:operator>
            <comment type="block" pos:line="7350" pos:column="13">/* [retval][out] */</comment> <name pos:line="7350" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7350" pos:column="54">CodeProperty</name> <op:operator pos:line="7350" pos:column="67">*</op:operator><op:operator pos:line="7350" pos:column="68">*</op:operator><name pos:line="7350" pos:column="69">retval</name><op:operator pos:line="7350" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7352" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="7352" pos:column="41">HRESULT</name></type> ( <name pos:line="7352" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="7352" pos:column="69">*</type:modifier><name pos:line="7352" pos:column="70">get_IsGeneric</name> )<parameter_list pos:line="7352" pos:column="85">( 
            <param><decl><type><name pos:line="7353" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7353" pos:column="28">*</type:modifier></type> <name pos:line="7353" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7354" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7354" pos:column="33">__RPC__out</name> <name pos:line="7354" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="7354" pos:column="57">*</type:modifier></type><name pos:line="7354" pos:column="58">pIsGeneric</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7356" pos:column="9">/* [helpstring][id] */</comment> <macro><name pos:line="7356" pos:column="32">HRESULT</name> <argument_list pos:line="7356" pos:column="40">( <argument pos:line="7356" pos:column="42">STDMETHODCALLTYPE *AddEvent</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7356" pos:column="71">(</op:operator> 
            <name pos:line="7357" pos:column="13">CodeInterface2</name> <op:operator pos:line="7357" pos:column="28">*</op:operator> <name pos:line="7357" pos:column="30">This</name><op:operator pos:line="7357" pos:column="34">,</op:operator>
            <name pos:line="7358" pos:column="13">__RPC__in</name> <name pos:line="7358" pos:column="23">BSTR</name> <name pos:line="7358" pos:column="28">Name</name><op:operator pos:line="7358" pos:column="32">,</op:operator>
            <name pos:line="7359" pos:column="13">__RPC__in</name> <name pos:line="7359" pos:column="23">BSTR</name> <name pos:line="7359" pos:column="28">FullDelegateName</name><op:operator pos:line="7359" pos:column="44">,</op:operator>
            <comment type="block" pos:line="7360" pos:column="13">/* [defaultvalue][in] */</comment> <name pos:line="7360" pos:column="38">VARIANT_BOOL</name> <name pos:line="7360" pos:column="51">CreatePropertyStyleEvent</name><op:operator pos:line="7360" pos:column="75">,</op:operator>
            <comment type="block" pos:line="7361" pos:column="13">/* [optional] */</comment> <name pos:line="7361" pos:column="30">VARIANT</name> <name pos:line="7361" pos:column="38">Position</name><op:operator pos:line="7361" pos:column="46">,</op:operator>
            <comment type="block" pos:line="7362" pos:column="13">/* [defaultvalue] */</comment> enum <comment type="block" pos:line="7362" pos:column="39">/* external definition not present */</comment> <name pos:line="7362" pos:column="77">vsCMAccess</name> <name pos:line="7362" pos:column="88">Access</name><op:operator pos:line="7362" pos:column="94">,</op:operator>
            <comment type="block" pos:line="7363" pos:column="13">/* [retval][out] */</comment> <name pos:line="7363" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7363" pos:column="54">CodeEvent</name> <op:operator pos:line="7363" pos:column="64">*</op:operator><op:operator pos:line="7363" pos:column="65">*</op:operator><name pos:line="7363" pos:column="66">ppEvent</name><op:operator pos:line="7363" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7365" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="7365" pos:column="73">HRESULT</name></type> ( <name pos:line="7365" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="7365" pos:column="101">*</type:modifier><name pos:line="7365" pos:column="102">get_DataTypeKind</name> )<parameter_list pos:line="7365" pos:column="120">( 
            <param><decl><type><name pos:line="7366" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7366" pos:column="28">*</type:modifier></type> <name pos:line="7366" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7367" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7367" pos:column="33">__RPC__out</name> <name pos:line="7367" pos:column="44">vsCMDataTypeKind</name> <type:modifier pos:line="7367" pos:column="61">*</type:modifier></type><name pos:line="7367" pos:column="62">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7369" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="7369" pos:column="73">HRESULT</name></type> ( <name pos:line="7369" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="7369" pos:column="101">*</type:modifier><name pos:line="7369" pos:column="102">put_DataTypeKind</name> )<parameter_list pos:line="7369" pos:column="120">( 
            <param><decl><type><name pos:line="7370" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7370" pos:column="28">*</type:modifier></type> <name pos:line="7370" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="7371" pos:column="13">vsCMDataTypeKind</name></type> <name pos:line="7371" pos:column="30">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7373" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="7373" pos:column="73">HRESULT</name></type> ( <name pos:line="7373" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="7373" pos:column="101">*</type:modifier><name pos:line="7373" pos:column="102">get_Parts</name> )<parameter_list pos:line="7373" pos:column="113">( 
            <param><decl><type><name pos:line="7374" pos:column="13">CodeInterface2</name> <type:modifier pos:line="7374" pos:column="28">*</type:modifier></type> <name pos:line="7374" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="7375" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7375" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="7375" pos:column="54">/* external definition not present */</comment> <name pos:line="7375" pos:column="92">CodeElements</name> <type:modifier pos:line="7375" pos:column="105">*</type:modifier><type:modifier pos:line="7375" pos:column="106">*</type:modifier></type><name pos:line="7375" pos:column="107">Elements</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7377" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7378" pos:column="7">CodeInterface2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7380" pos:column="5">interface</name></type> <name pos:line="7380" pos:column="15">CodeInterface2</name>
    <argument_list pos:line="7381" pos:column="5">{
        <argument><expr><name pos:line="7382" pos:column="9">CONST_VTBL</name> struct <name pos:line="7382" pos:column="27">CodeInterface2Vtbl</name> <op:operator pos:line="7382" pos:column="46">*</op:operator><name pos:line="7382" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7387" pos:column="1">#<cpp:directive pos:line="7387" pos:column="2">ifdef</cpp:directive> <name pos:line="7387" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7390" pos:column="1">#<cpp:directive pos:line="7390" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7390" pos:column="9">CodeInterface2_QueryInterface</name><parameter_list pos:line="7390" pos:column="38">(<param><type><name pos:line="7390" pos:column="39">This</name></type></param>,<param><type><name pos:line="7390" pos:column="44">riid</name></type></param>,<param><type><name pos:line="7390" pos:column="49">ppvObj</name></type></param>,<param><type><name pos:line="7390" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7391" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7393" pos:column="1">#<cpp:directive pos:line="7393" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7393" pos:column="9">CodeInterface2_AddRef</name><parameter_list pos:line="7393" pos:column="30">(<param><type><name pos:line="7393" pos:column="31">This</name></type></param>,<param><type><name pos:line="7393" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7394" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7396" pos:column="1">#<cpp:directive pos:line="7396" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7396" pos:column="9">CodeInterface2_Release</name><parameter_list pos:line="7396" pos:column="31">(<param><type><name pos:line="7396" pos:column="32">This</name></type></param>,<param><type><name pos:line="7396" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7397" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7399" pos:column="1">#<cpp:directive pos:line="7399" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7399" pos:column="9">CodeInterface2_GetTypeInfoCount</name><parameter_list pos:line="7399" pos:column="40">(<param><type><name pos:line="7399" pos:column="41">This</name></type></param>,<param><type><name pos:line="7399" pos:column="46">pctinfo</name></type></param>,<param><type><name pos:line="7399" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7400" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7402" pos:column="1">#<cpp:directive pos:line="7402" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7402" pos:column="9">CodeInterface2_GetTypeInfo</name><parameter_list pos:line="7402" pos:column="35">(<param><type><name pos:line="7402" pos:column="36">This</name></type></param>,<param><type><name pos:line="7402" pos:column="41">itinfo</name></type></param>,<param><type><name pos:line="7402" pos:column="48">lcid</name></type></param>,<param><type><name pos:line="7402" pos:column="53">pptinfo</name></type></param>,<param><type><name pos:line="7402" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7403" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7405" pos:column="1">#<cpp:directive pos:line="7405" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7405" pos:column="9">CodeInterface2_GetIDsOfNames</name><parameter_list pos:line="7405" pos:column="37">(<param><type><name pos:line="7405" pos:column="38">This</name></type></param>,<param><type><name pos:line="7405" pos:column="43">riid</name></type></param>,<param><type><name pos:line="7405" pos:column="48">rgszNames</name></type></param>,<param><type><name pos:line="7405" pos:column="58">cNames</name></type></param>,<param><type><name pos:line="7405" pos:column="65">lcid</name></type></param>,<param><type><name pos:line="7405" pos:column="70">rgdispid</name></type></param>,<param><type><name pos:line="7405" pos:column="79">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7406" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7408" pos:column="1">#<cpp:directive pos:line="7408" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7408" pos:column="9">CodeInterface2_Invoke</name><parameter_list pos:line="7408" pos:column="30">(<param><type><name pos:line="7408" pos:column="31">This</name></type></param>,<param><type><name pos:line="7408" pos:column="36">dispidMember</name></type></param>,<param><type><name pos:line="7408" pos:column="49">riid</name></type></param>,<param><type><name pos:line="7408" pos:column="54">lcid</name></type></param>,<param><type><name pos:line="7408" pos:column="59">wFlags</name></type></param>,<param><type><name pos:line="7408" pos:column="66">pdispparams</name></type></param>,<param><type><name pos:line="7408" pos:column="78">pvarResult</name></type></param>,<param><type><name pos:line="7408" pos:column="89">pexcepinfo</name></type></param>,<param><type><name pos:line="7408" pos:column="100">puArgErr</name></type></param>,<param><type><name pos:line="7408" pos:column="109">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7409" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7411" pos:column="1">#<cpp:directive pos:line="7411" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7411" pos:column="9">CodeInterface2_get_DTE</name><parameter_list pos:line="7411" pos:column="31">(<param><type><name pos:line="7411" pos:column="32">This</name></type></param>,<param><type><name pos:line="7411" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7412" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7414" pos:column="1">#<cpp:directive pos:line="7414" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7414" pos:column="9">CodeInterface2_get_Collection</name><parameter_list pos:line="7414" pos:column="38">(<param><type><name pos:line="7414" pos:column="39">This</name></type></param>,<param><type><name pos:line="7414" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7415" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7417" pos:column="1">#<cpp:directive pos:line="7417" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7417" pos:column="9">CodeInterface2_get_Name</name><parameter_list pos:line="7417" pos:column="32">(<param><type><name pos:line="7417" pos:column="33">This</name></type></param>,<param><type><name pos:line="7417" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7418" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7420" pos:column="1">#<cpp:directive pos:line="7420" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7420" pos:column="9">CodeInterface2_put_Name</name><parameter_list pos:line="7420" pos:column="32">(<param><type><name pos:line="7420" pos:column="33">This</name></type></param>,<param><type><name pos:line="7420" pos:column="38">noname</name></type></param>,<param><type><name pos:line="7420" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7421" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7423" pos:column="1">#<cpp:directive pos:line="7423" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7423" pos:column="9">CodeInterface2_get_FullName</name><parameter_list pos:line="7423" pos:column="36">(<param><type><name pos:line="7423" pos:column="37">This</name></type></param>,<param><type><name pos:line="7423" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7424" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7426" pos:column="1">#<cpp:directive pos:line="7426" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7426" pos:column="9">CodeInterface2_get_ProjectItem</name><parameter_list pos:line="7426" pos:column="39">(<param><type><name pos:line="7426" pos:column="40">This</name></type></param>,<param><type><name pos:line="7426" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7427" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItem(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7429" pos:column="1">#<cpp:directive pos:line="7429" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7429" pos:column="9">CodeInterface2_get_Kind</name><parameter_list pos:line="7429" pos:column="32">(<param><type><name pos:line="7429" pos:column="33">This</name></type></param>,<param><type><name pos:line="7429" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7430" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Kind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7432" pos:column="1">#<cpp:directive pos:line="7432" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7432" pos:column="9">CodeInterface2_get_IsCodeType</name><parameter_list pos:line="7432" pos:column="38">(<param><type><name pos:line="7432" pos:column="39">This</name></type></param>,<param><type><name pos:line="7432" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7433" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsCodeType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7435" pos:column="1">#<cpp:directive pos:line="7435" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7435" pos:column="9">CodeInterface2_get_InfoLocation</name><parameter_list pos:line="7435" pos:column="40">(<param><type><name pos:line="7435" pos:column="41">This</name></type></param>,<param><type><name pos:line="7435" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7436" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InfoLocation(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7438" pos:column="1">#<cpp:directive pos:line="7438" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7438" pos:column="9">CodeInterface2_get_Children</name><parameter_list pos:line="7438" pos:column="36">(<param><type><name pos:line="7438" pos:column="37">This</name></type></param>,<param><type><name pos:line="7438" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7439" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Children(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7441" pos:column="1">#<cpp:directive pos:line="7441" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7441" pos:column="9">CodeInterface2_get_Language</name><parameter_list pos:line="7441" pos:column="36">(<param><type><name pos:line="7441" pos:column="37">This</name></type></param>,<param><type><name pos:line="7441" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7442" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7444" pos:column="1">#<cpp:directive pos:line="7444" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7444" pos:column="9">CodeInterface2_get_StartPoint</name><parameter_list pos:line="7444" pos:column="38">(<param><type><name pos:line="7444" pos:column="39">This</name></type></param>,<param><type><name pos:line="7444" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7445" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7447" pos:column="1">#<cpp:directive pos:line="7447" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7447" pos:column="9">CodeInterface2_get_EndPoint</name><parameter_list pos:line="7447" pos:column="36">(<param><type><name pos:line="7447" pos:column="37">This</name></type></param>,<param><type><name pos:line="7447" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7448" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_EndPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7450" pos:column="1">#<cpp:directive pos:line="7450" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7450" pos:column="9">CodeInterface2_get_ExtenderNames</name><parameter_list pos:line="7450" pos:column="41">(<param><type><name pos:line="7450" pos:column="42">This</name></type></param>,<param><type><name pos:line="7450" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7451" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7453" pos:column="1">#<cpp:directive pos:line="7453" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7453" pos:column="9">CodeInterface2_get_Extender</name><parameter_list pos:line="7453" pos:column="36">(<param><type><name pos:line="7453" pos:column="37">This</name></type></param>,<param><type><name pos:line="7453" pos:column="42">ExtenderName</name></type></param>,<param><type><name pos:line="7453" pos:column="55">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7454" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7456" pos:column="1">#<cpp:directive pos:line="7456" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7456" pos:column="9">CodeInterface2_get_ExtenderCATID</name><parameter_list pos:line="7456" pos:column="41">(<param><type><name pos:line="7456" pos:column="42">This</name></type></param>,<param><type><name pos:line="7456" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7457" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7459" pos:column="1">#<cpp:directive pos:line="7459" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7459" pos:column="9">CodeInterface2_GetStartPoint</name><parameter_list pos:line="7459" pos:column="37">(<param><type><name pos:line="7459" pos:column="38">This</name></type></param>,<param><type><name pos:line="7459" pos:column="43">Part</name></type></param>,<param><type><name pos:line="7459" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7460" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStartPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7462" pos:column="1">#<cpp:directive pos:line="7462" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7462" pos:column="9">CodeInterface2_GetEndPoint</name><parameter_list pos:line="7462" pos:column="35">(<param><type><name pos:line="7462" pos:column="36">This</name></type></param>,<param><type><name pos:line="7462" pos:column="41">Part</name></type></param>,<param><type><name pos:line="7462" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7463" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7465" pos:column="1">#<cpp:directive pos:line="7465" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7465" pos:column="9">CodeInterface2_get_Parent</name><parameter_list pos:line="7465" pos:column="34">(<param><type><name pos:line="7465" pos:column="35">This</name></type></param>,<param><type><name pos:line="7465" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7466" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7468" pos:column="1">#<cpp:directive pos:line="7468" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7468" pos:column="9">CodeInterface2_get_Namespace</name><parameter_list pos:line="7468" pos:column="37">(<param><type><name pos:line="7468" pos:column="38">This</name></type></param>,<param><type><name pos:line="7468" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7469" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Namespace(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7471" pos:column="1">#<cpp:directive pos:line="7471" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7471" pos:column="9">CodeInterface2_get_Bases</name><parameter_list pos:line="7471" pos:column="33">(<param><type><name pos:line="7471" pos:column="34">This</name></type></param>,<param><type><name pos:line="7471" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7472" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Bases(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7474" pos:column="1">#<cpp:directive pos:line="7474" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7474" pos:column="9">CodeInterface2_get_Members</name><parameter_list pos:line="7474" pos:column="35">(<param><type><name pos:line="7474" pos:column="36">This</name></type></param>,<param><type><name pos:line="7474" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7475" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Members(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7477" pos:column="1">#<cpp:directive pos:line="7477" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7477" pos:column="9">CodeInterface2_put_Access</name><parameter_list pos:line="7477" pos:column="34">(<param><type><name pos:line="7477" pos:column="35">This</name></type></param>,<param><type><name pos:line="7477" pos:column="40">noname</name></type></param>,<param><type><name pos:line="7477" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7478" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Access(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7480" pos:column="1">#<cpp:directive pos:line="7480" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7480" pos:column="9">CodeInterface2_get_Access</name><parameter_list pos:line="7480" pos:column="34">(<param><type><name pos:line="7480" pos:column="35">This</name></type></param>,<param><type><name pos:line="7480" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7481" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Access(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7483" pos:column="1">#<cpp:directive pos:line="7483" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7483" pos:column="9">CodeInterface2_get_Attributes</name><parameter_list pos:line="7483" pos:column="38">(<param><type><name pos:line="7483" pos:column="39">This</name></type></param>,<param><type><name pos:line="7483" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7484" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Attributes(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7486" pos:column="1">#<cpp:directive pos:line="7486" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7486" pos:column="9">CodeInterface2_get_DocComment</name><parameter_list pos:line="7486" pos:column="38">(<param><type><name pos:line="7486" pos:column="39">This</name></type></param>,<param><type><name pos:line="7486" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7487" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DocComment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7489" pos:column="1">#<cpp:directive pos:line="7489" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7489" pos:column="9">CodeInterface2_put_DocComment</name><parameter_list pos:line="7489" pos:column="38">(<param><type><name pos:line="7489" pos:column="39">This</name></type></param>,<param><type><name pos:line="7489" pos:column="44">noname</name></type></param>,<param><type><name pos:line="7489" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7490" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DocComment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7492" pos:column="1">#<cpp:directive pos:line="7492" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7492" pos:column="9">CodeInterface2_get_Comment</name><parameter_list pos:line="7492" pos:column="35">(<param><type><name pos:line="7492" pos:column="36">This</name></type></param>,<param><type><name pos:line="7492" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7493" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Comment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7495" pos:column="1">#<cpp:directive pos:line="7495" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7495" pos:column="9">CodeInterface2_put_Comment</name><parameter_list pos:line="7495" pos:column="35">(<param><type><name pos:line="7495" pos:column="36">This</name></type></param>,<param><type><name pos:line="7495" pos:column="41">noname</name></type></param>,<param><type><name pos:line="7495" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7496" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Comment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7498" pos:column="1">#<cpp:directive pos:line="7498" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7498" pos:column="9">CodeInterface2_AddBase</name><parameter_list pos:line="7498" pos:column="31">(<param><type><name pos:line="7498" pos:column="32">This</name></type></param>,<param><type><name pos:line="7498" pos:column="37">Base</name></type></param>,<param><type><name pos:line="7498" pos:column="42">Position</name></type></param>,<param><type><name pos:line="7498" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7499" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddBase(This,Base,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7501" pos:column="1">#<cpp:directive pos:line="7501" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7501" pos:column="9">CodeInterface2_AddAttribute</name><parameter_list pos:line="7501" pos:column="36">(<param><type><name pos:line="7501" pos:column="37">This</name></type></param>,<param><type><name pos:line="7501" pos:column="42">Name</name></type></param>,<param><type><name pos:line="7501" pos:column="47">Value</name></type></param>,<param><type><name pos:line="7501" pos:column="53">Position</name></type></param>,<param><type><name pos:line="7501" pos:column="62">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7502" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddAttribute(This,Name,Value,Position,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7504" pos:column="1">#<cpp:directive pos:line="7504" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7504" pos:column="9">CodeInterface2_RemoveBase</name><parameter_list pos:line="7504" pos:column="34">(<param><type><name pos:line="7504" pos:column="35">This</name></type></param>,<param><type><name pos:line="7504" pos:column="40">Element</name></type></param>,<param><type><name pos:line="7504" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7505" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveBase(This,Element,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7507" pos:column="1">#<cpp:directive pos:line="7507" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7507" pos:column="9">CodeInterface2_RemoveMember</name><parameter_list pos:line="7507" pos:column="36">(<param><type><name pos:line="7507" pos:column="37">This</name></type></param>,<param><type><name pos:line="7507" pos:column="42">Element</name></type></param>,<param><type><name pos:line="7507" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7508" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveMember(This,Element,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7510" pos:column="1">#<cpp:directive pos:line="7510" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7510" pos:column="9">CodeInterface2_get_IsDerivedFrom</name><parameter_list pos:line="7510" pos:column="41">(<param><type><name pos:line="7510" pos:column="42">This</name></type></param>,<param><type><name pos:line="7510" pos:column="47">FullName</name></type></param>,<param><type><name pos:line="7510" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7511" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsDerivedFrom(This,FullName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7513" pos:column="1">#<cpp:directive pos:line="7513" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7513" pos:column="9">CodeInterface2_get_DerivedTypes</name><parameter_list pos:line="7513" pos:column="40">(<param><type><name pos:line="7513" pos:column="41">This</name></type></param>,<param><type><name pos:line="7513" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7514" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DerivedTypes(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7516" pos:column="1">#<cpp:directive pos:line="7516" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7516" pos:column="9">CodeInterface2_AddFunction</name><parameter_list pos:line="7516" pos:column="35">(<param><type><name pos:line="7516" pos:column="36">This</name></type></param>,<param><type><name pos:line="7516" pos:column="41">Name</name></type></param>,<param><type><name pos:line="7516" pos:column="46">Kind</name></type></param>,<param><type><name pos:line="7516" pos:column="51">Type</name></type></param>,<param><type><name pos:line="7516" pos:column="56">Position</name></type></param>,<param><type><name pos:line="7516" pos:column="65">Access</name></type></param>,<param><type><name pos:line="7516" pos:column="72">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7517" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddFunction(This,Name,Kind,Type,Position,Access,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7519" pos:column="1">#<cpp:directive pos:line="7519" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7519" pos:column="9">CodeInterface2_AddProperty</name><parameter_list pos:line="7519" pos:column="35">(<param><type><name pos:line="7519" pos:column="36">This</name></type></param>,<param><type><name pos:line="7519" pos:column="41">GetterName</name></type></param>,<param><type><name pos:line="7519" pos:column="52">PutterName</name></type></param>,<param><type><name pos:line="7519" pos:column="63">Type</name></type></param>,<param><type><name pos:line="7519" pos:column="68">Position</name></type></param>,<param><type><name pos:line="7519" pos:column="77">Access</name></type></param>,<param><type><name pos:line="7519" pos:column="84">Location</name></type></param>,<param><type><name pos:line="7519" pos:column="93">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7520" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddProperty(This,GetterName,PutterName,Type,Position,Access,Location,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="7523" pos:column="1">#<cpp:directive pos:line="7523" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7523" pos:column="9">CodeInterface2_get_IsGeneric</name><parameter_list pos:line="7523" pos:column="37">(<param><type><name pos:line="7523" pos:column="38">This</name></type></param>,<param><type><name pos:line="7523" pos:column="43">pIsGeneric</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7524" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsGeneric(This,pIsGeneric) )</cpp:value></cpp:define> 

<cpp:define pos:line="7526" pos:column="1">#<cpp:directive pos:line="7526" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7526" pos:column="9">CodeInterface2_AddEvent</name><parameter_list pos:line="7526" pos:column="32">(<param><type><name pos:line="7526" pos:column="33">This</name></type></param>,<param><type><name pos:line="7526" pos:column="38">Name</name></type></param>,<param><type><name pos:line="7526" pos:column="43">FullDelegateName</name></type></param>,<param><type><name pos:line="7526" pos:column="60">CreatePropertyStyleEvent</name></type></param>,<param><type><name pos:line="7526" pos:column="85">Position</name></type></param>,<param><type><name pos:line="7526" pos:column="94">Access</name></type></param>,<param><type><name pos:line="7526" pos:column="101">ppEvent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7527" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddEvent(This,Name,FullDelegateName,CreatePropertyStyleEvent,Position,Access,ppEvent) )</cpp:value></cpp:define> 

<cpp:define pos:line="7529" pos:column="1">#<cpp:directive pos:line="7529" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7529" pos:column="9">CodeInterface2_get_DataTypeKind</name><parameter_list pos:line="7529" pos:column="40">(<param><type><name pos:line="7529" pos:column="41">This</name></type></param>,<param><type><name pos:line="7529" pos:column="46">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7530" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DataTypeKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="7532" pos:column="1">#<cpp:directive pos:line="7532" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7532" pos:column="9">CodeInterface2_put_DataTypeKind</name><parameter_list pos:line="7532" pos:column="40">(<param><type><name pos:line="7532" pos:column="41">This</name></type></param>,<param><type><name pos:line="7532" pos:column="46">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7533" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DataTypeKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="7535" pos:column="1">#<cpp:directive pos:line="7535" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7535" pos:column="9">CodeInterface2_get_Parts</name><parameter_list pos:line="7535" pos:column="33">(<param><type><name pos:line="7535" pos:column="34">This</name></type></param>,<param><type><name pos:line="7535" pos:column="39">Elements</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7536" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parts(This,Elements) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7538" pos:column="1">#<cpp:directive pos:line="7538" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7538" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7541" pos:column="1">#<cpp:directive pos:line="7541" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7541" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7546" pos:column="1">#<cpp:directive pos:line="7546" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7546" pos:column="9">/* __CodeInterface2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7549" pos:column="1">#<cpp:directive pos:line="7549" pos:column="2">ifndef</cpp:directive> <name pos:line="7549" pos:column="9">__CodeTypeRef2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7550" pos:column="1">#<cpp:directive pos:line="7550" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7550" pos:column="9">__CodeTypeRef2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7552" pos:column="1">/* interface CodeTypeRef2 */</comment>
<comment type="block" pos:line="7553" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="7556" pos:column="1">EXTERN_C</name> <specifier pos:line="7556" pos:column="10">const</specifier> <name pos:line="7556" pos:column="16">IID</name></type> <name pos:line="7556" pos:column="20">IID_CodeTypeRef2</name></decl>;</decl_stmt>

<cpp:if pos:line="7558" pos:column="1">#<cpp:directive pos:line="7558" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7558" pos:column="5">defined</name><argument_list pos:line="7558" pos:column="12">(<argument><expr><name pos:line="7558" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7558" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7558" pos:column="29">!</op:operator><call><name pos:line="7558" pos:column="30">defined</name><argument_list pos:line="7558" pos:column="37">(<argument><expr><name pos:line="7558" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7560" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7560" pos:column="19">(<argument pos:line="7560" pos:column="20">"9883c07a-fa07-4ce7-bd8e-01e1a3f3a3f7"</argument>)</argument_list></macro>
    <label><name pos:line="7561" pos:column="5">CodeTypeRef2</name> :</label> <expr_stmt><expr pos:line="7561" pos:column="20">public <name pos:line="7561" pos:column="27">CodeTypeRef</name>
    <block pos:line="7562" pos:column="5">{
    <expr pos:line="7563" pos:column="5">public<op:operator pos:line="7563" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="7564" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="7564" pos:column="49">HRESULT</name> <name pos:line="7564" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="7564" pos:column="75">get_IsGeneric</name><argument_list pos:line="7564" pos:column="88">( 
            <comment type="block" pos:line="7565" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7565" pos:column="33">__RPC__out VARIANT_BOOL *pIsGeneric</argument>)</argument_list></macro> <op:operator pos:line="7565" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="7565" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7569" pos:column="1">#<cpp:directive pos:line="7569" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7569" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7571" pos:column="5">typedef <type><struct pos:line="7571" pos:column="13">struct <name pos:line="7571" pos:column="20">CodeTypeRef2Vtbl</name>
    <block pos:line="7572" pos:column="5">{<public type="default" pos:line="7572" pos:column="6">
        <decl_stmt><decl><type><name pos:line="7573" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="7575" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="7575" pos:column="46">HRESULT</name></type> ( <name pos:line="7575" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7575" pos:column="74">*</type:modifier><name pos:line="7575" pos:column="75">QueryInterface</name> )<parameter_list pos:line="7575" pos:column="91">( 
            <param><decl><type><name pos:line="7576" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7576" pos:column="26">*</type:modifier></type> <name pos:line="7576" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7577" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="7577" pos:column="47">struct <name pos:line="7577" pos:column="54">GUID</name> <type:modifier pos:line="7577" pos:column="59">*</type:modifier></type><name pos:line="7577" pos:column="60">riid</name></decl><op:operator pos:line="7577" pos:column="64">,</op:operator>
            <comment type="block" pos:line="7578" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7578" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="7578" pos:column="59">void</name> <type:modifier pos:line="7578" pos:column="64">*</type:modifier><type:modifier pos:line="7578" pos:column="65">*</type:modifier><name pos:line="7578" pos:column="66">ppvObj</name><op:operator pos:line="7578" pos:column="72">,</op:operator>
            <comment type="block" pos:line="7579" pos:column="13">/* [retval][out] */</comment> <name pos:line="7579" pos:column="33">__RPC__out</name> <name pos:line="7579" pos:column="44">void</name> <type:modifier pos:line="7579" pos:column="49">*</type:modifier><name pos:line="7579" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="7581" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="7581" pos:column="46">HRESULT</name></type> ( <name pos:line="7581" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7581" pos:column="74">*</type:modifier><name pos:line="7581" pos:column="75">AddRef</name> )<parameter_list pos:line="7581" pos:column="83">( 
            <param><decl><type><name pos:line="7582" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7582" pos:column="26">*</type:modifier></type> <name pos:line="7582" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7583" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7583" pos:column="33">__RPC__out</name> <name pos:line="7583" pos:column="44">unsigned</name> <name pos:line="7583" pos:column="53">long</name> <type:modifier pos:line="7583" pos:column="58">*</type:modifier></type><name pos:line="7583" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7585" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="7585" pos:column="46">HRESULT</name></type> ( <name pos:line="7585" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7585" pos:column="74">*</type:modifier><name pos:line="7585" pos:column="75">Release</name> )<parameter_list pos:line="7585" pos:column="84">( 
            <param><decl><type><name pos:line="7586" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7586" pos:column="26">*</type:modifier></type> <name pos:line="7586" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7587" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7587" pos:column="33">__RPC__out</name> <name pos:line="7587" pos:column="44">unsigned</name> <name pos:line="7587" pos:column="53">long</name> <type:modifier pos:line="7587" pos:column="58">*</type:modifier></type><name pos:line="7587" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7589" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="7589" pos:column="46">HRESULT</name></type> ( <name pos:line="7589" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7589" pos:column="74">*</type:modifier><name pos:line="7589" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="7589" pos:column="93">( 
            <param><decl><type><name pos:line="7590" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7590" pos:column="26">*</type:modifier></type> <name pos:line="7590" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7591" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="7591" pos:column="38">__RPC__out</name> <name pos:line="7591" pos:column="49">unsigned</name> <name pos:line="7591" pos:column="58">UINT</name> <type:modifier pos:line="7591" pos:column="63">*</type:modifier></type><name pos:line="7591" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="7592" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7592" pos:column="33">__RPC__out</name> <name pos:line="7592" pos:column="44">void</name> <type:modifier pos:line="7592" pos:column="49">*</type:modifier></type><name pos:line="7592" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7594" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="7594" pos:column="46">HRESULT</name></type> ( <name pos:line="7594" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7594" pos:column="74">*</type:modifier><name pos:line="7594" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="7594" pos:column="88">( 
            <param><decl><type><name pos:line="7595" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7595" pos:column="26">*</type:modifier></type> <name pos:line="7595" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7596" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="7596" pos:column="37">unsigned</name> <name pos:line="7596" pos:column="46">UINT</name></type> <name pos:line="7596" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="7597" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="7597" pos:column="37">unsigned</name> <name pos:line="7597" pos:column="46">long</name></type> <name pos:line="7597" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="7598" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="7598" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="7598" pos:column="59">void</name> <type:modifier pos:line="7598" pos:column="64">*</type:modifier><type:modifier pos:line="7598" pos:column="65">*</type:modifier></type><name pos:line="7598" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="7599" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7599" pos:column="33">__RPC__out</name> <name pos:line="7599" pos:column="44">void</name> <type:modifier pos:line="7599" pos:column="49">*</type:modifier></type><name pos:line="7599" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7601" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="7601" pos:column="46">HRESULT</name> <argument_list pos:line="7601" pos:column="54">( <argument pos:line="7601" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7601" pos:column="90">(</op:operator> 
            <name pos:line="7602" pos:column="13">CodeTypeRef2</name> <op:operator pos:line="7602" pos:column="26">*</op:operator> <name pos:line="7602" pos:column="28">This</name><op:operator pos:line="7602" pos:column="32">,</op:operator>
            <comment type="block" pos:line="7603" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7603" pos:column="37">__RPC__in</name> struct <name pos:line="7603" pos:column="54">GUID</name> <op:operator pos:line="7603" pos:column="59">*</op:operator><name pos:line="7603" pos:column="60">riid</name><op:operator pos:line="7603" pos:column="64">,</op:operator>
            <comment type="block" pos:line="7604" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7604" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="7604" pos:column="57">signed</name> <name pos:line="7604" pos:column="64">char</name> <op:operator pos:line="7604" pos:column="69">*</op:operator><op:operator pos:line="7604" pos:column="70">*</op:operator><name pos:line="7604" pos:column="71">rgszNames</name><op:operator pos:line="7604" pos:column="80">,</op:operator>
            <comment type="block" pos:line="7605" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7605" pos:column="37">unsigned</name> <name pos:line="7605" pos:column="46">UINT</name> <name pos:line="7605" pos:column="51">cNames</name><op:operator pos:line="7605" pos:column="57">,</op:operator>
            <comment type="block" pos:line="7606" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7606" pos:column="37">unsigned</name> <name pos:line="7606" pos:column="46">long</name> <name pos:line="7606" pos:column="51">lcid</name><op:operator pos:line="7606" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7607" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7607" pos:column="38">__RPC__out</name> <name pos:line="7607" pos:column="49">signed</name> <name pos:line="7607" pos:column="56">long</name> <op:operator pos:line="7607" pos:column="61">*</op:operator><name pos:line="7607" pos:column="62">rgdispid</name><op:operator pos:line="7607" pos:column="70">,</op:operator>
            <comment type="block" pos:line="7608" pos:column="13">/* [retval][out] */</comment> <name pos:line="7608" pos:column="33">__RPC__out</name> <name pos:line="7608" pos:column="44">void</name> <op:operator pos:line="7608" pos:column="49">*</op:operator><name pos:line="7608" pos:column="50">retval</name><op:operator pos:line="7608" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7610" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="7610" pos:column="46">HRESULT</name> <argument_list pos:line="7610" pos:column="54">( <argument pos:line="7610" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7610" pos:column="83">(</op:operator> 
            <name pos:line="7611" pos:column="13">CodeTypeRef2</name> <op:operator pos:line="7611" pos:column="26">*</op:operator> <name pos:line="7611" pos:column="28">This</name><op:operator pos:line="7611" pos:column="32">,</op:operator>
            <comment type="block" pos:line="7612" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7612" pos:column="37">signed</name> <name pos:line="7612" pos:column="44">long</name> <name pos:line="7612" pos:column="49">dispidMember</name><op:operator pos:line="7612" pos:column="61">,</op:operator>
            <comment type="block" pos:line="7613" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7613" pos:column="37">__RPC__in</name> struct <name pos:line="7613" pos:column="54">GUID</name> <op:operator pos:line="7613" pos:column="59">*</op:operator><name pos:line="7613" pos:column="60">riid</name><op:operator pos:line="7613" pos:column="64">,</op:operator>
            <comment type="block" pos:line="7614" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7614" pos:column="37">unsigned</name> <name pos:line="7614" pos:column="46">long</name> <name pos:line="7614" pos:column="51">lcid</name><op:operator pos:line="7614" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7615" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7615" pos:column="37">unsigned</name> <name pos:line="7615" pos:column="46">short</name> <name pos:line="7615" pos:column="52">wFlags</name><op:operator pos:line="7615" pos:column="58">,</op:operator>
            <comment type="block" pos:line="7616" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7616" pos:column="37">__RPC__in</name> struct <name pos:line="7616" pos:column="54">DISPPARAMS</name> <op:operator pos:line="7616" pos:column="65">*</op:operator><name pos:line="7616" pos:column="66">pdispparams</name><op:operator pos:line="7616" pos:column="77">,</op:operator>
            <comment type="block" pos:line="7617" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7617" pos:column="38">__RPC__out</name> <name pos:line="7617" pos:column="49">VARIANT</name> <op:operator pos:line="7617" pos:column="57">*</op:operator><name pos:line="7617" pos:column="58">pvarResult</name><op:operator pos:line="7617" pos:column="68">,</op:operator>
            <comment type="block" pos:line="7618" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7618" pos:column="38">__RPC__out</name> struct <name pos:line="7618" pos:column="56">EXCEPINFO</name> <op:operator pos:line="7618" pos:column="66">*</op:operator><name pos:line="7618" pos:column="67">pexcepinfo</name><op:operator pos:line="7618" pos:column="77">,</op:operator>
            <comment type="block" pos:line="7619" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7619" pos:column="38">__RPC__out</name> <name pos:line="7619" pos:column="49">unsigned</name> <name pos:line="7619" pos:column="58">UINT</name> <op:operator pos:line="7619" pos:column="63">*</op:operator><name pos:line="7619" pos:column="64">puArgErr</name><op:operator pos:line="7619" pos:column="72">,</op:operator>
            <comment type="block" pos:line="7620" pos:column="13">/* [retval][out] */</comment> <name pos:line="7620" pos:column="33">__RPC__out</name> <name pos:line="7620" pos:column="44">void</name> <op:operator pos:line="7620" pos:column="49">*</op:operator><name pos:line="7620" pos:column="50">retval</name><op:operator pos:line="7620" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7622" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7622" pos:column="43">HRESULT</name></type> ( <name pos:line="7622" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7622" pos:column="71">*</type:modifier><name pos:line="7622" pos:column="72">get_DTE</name> )<parameter_list pos:line="7622" pos:column="81">( 
            <param><decl><type><name pos:line="7623" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7623" pos:column="26">*</type:modifier></type> <name pos:line="7623" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7624" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7624" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="7624" pos:column="54">*</type:modifier><type:modifier pos:line="7624" pos:column="55">*</type:modifier></type><name pos:line="7624" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7626" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7626" pos:column="43">HRESULT</name></type> ( <name pos:line="7626" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7626" pos:column="71">*</type:modifier><name pos:line="7626" pos:column="72">get_Parent</name> )<parameter_list pos:line="7626" pos:column="84">( 
            <param><decl><type><name pos:line="7627" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7627" pos:column="26">*</type:modifier></type> <name pos:line="7627" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7628" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7628" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7628" pos:column="54">IDispatch</name> <type:modifier pos:line="7628" pos:column="64">*</type:modifier><type:modifier pos:line="7628" pos:column="65">*</type:modifier></type><name pos:line="7628" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7630" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="7630" pos:column="43">HRESULT</name> <argument_list pos:line="7630" pos:column="51">( <argument pos:line="7630" pos:column="53">STDMETHODCALLTYPE *get_TypeKind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7630" pos:column="86">(</op:operator> 
            <name pos:line="7631" pos:column="13">CodeTypeRef2</name> <op:operator pos:line="7631" pos:column="26">*</op:operator> <name pos:line="7631" pos:column="28">This</name><op:operator pos:line="7631" pos:column="32">,</op:operator>
            <comment type="block" pos:line="7632" pos:column="13">/* [retval][out] */</comment> <name pos:line="7632" pos:column="33">__RPC__out</name> enum <name pos:line="7632" pos:column="49">vsCMTypeRef</name> <op:operator pos:line="7632" pos:column="61">*</op:operator><name pos:line="7632" pos:column="62">retval</name><op:operator pos:line="7632" pos:column="68">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7634" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7634" pos:column="43">HRESULT</name></type> ( <name pos:line="7634" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7634" pos:column="71">*</type:modifier><name pos:line="7634" pos:column="72">get_CodeType</name> )<parameter_list pos:line="7634" pos:column="86">( 
            <param><decl><type><name pos:line="7635" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7635" pos:column="26">*</type:modifier></type> <name pos:line="7635" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7636" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7636" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7636" pos:column="54">CodeType</name> <type:modifier pos:line="7636" pos:column="63">*</type:modifier><type:modifier pos:line="7636" pos:column="64">*</type:modifier></type><name pos:line="7636" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7638" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="7638" pos:column="43">HRESULT</name></type> ( <name pos:line="7638" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7638" pos:column="71">*</type:modifier><name pos:line="7638" pos:column="72">put_CodeType</name> )<parameter_list pos:line="7638" pos:column="86">( 
            <param><decl><type><name pos:line="7639" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7639" pos:column="26">*</type:modifier></type> <name pos:line="7639" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7640" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7640" pos:column="33">__RPC__in_opt</name> <name pos:line="7640" pos:column="47">CodeType</name> <type:modifier pos:line="7640" pos:column="56">*</type:modifier></type><name pos:line="7640" pos:column="57">noname</name></decl></param>,
            <comment type="block" pos:line="7641" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7641" pos:column="33">__RPC__out</name> <name pos:line="7641" pos:column="44">void</name> <type:modifier pos:line="7641" pos:column="49">*</type:modifier></type><name pos:line="7641" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7643" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7643" pos:column="43">HRESULT</name></type> ( <name pos:line="7643" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7643" pos:column="71">*</type:modifier><name pos:line="7643" pos:column="72">get_ElementType</name> )<parameter_list pos:line="7643" pos:column="89">( 
            <param><decl><type><name pos:line="7644" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7644" pos:column="26">*</type:modifier></type> <name pos:line="7644" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7645" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7645" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7645" pos:column="54">CodeTypeRef</name> <type:modifier pos:line="7645" pos:column="66">*</type:modifier><type:modifier pos:line="7645" pos:column="67">*</type:modifier></type><name pos:line="7645" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7647" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="7647" pos:column="43">HRESULT</name></type> ( <name pos:line="7647" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7647" pos:column="71">*</type:modifier><name pos:line="7647" pos:column="72">put_ElementType</name> )<parameter_list pos:line="7647" pos:column="89">( 
            <param><decl><type><name pos:line="7648" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7648" pos:column="26">*</type:modifier></type> <name pos:line="7648" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7649" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7649" pos:column="33">__RPC__in_opt</name> <name pos:line="7649" pos:column="47">CodeTypeRef</name> <type:modifier pos:line="7649" pos:column="59">*</type:modifier></type><name pos:line="7649" pos:column="60">noname</name></decl></param>,
            <comment type="block" pos:line="7650" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7650" pos:column="33">__RPC__out</name> <name pos:line="7650" pos:column="44">void</name> <type:modifier pos:line="7650" pos:column="49">*</type:modifier></type><name pos:line="7650" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7652" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7652" pos:column="43">HRESULT</name></type> ( <name pos:line="7652" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7652" pos:column="71">*</type:modifier><name pos:line="7652" pos:column="72">get_AsString</name> )<parameter_list pos:line="7652" pos:column="86">( 
            <param><decl><type><name pos:line="7653" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7653" pos:column="26">*</type:modifier></type> <name pos:line="7653" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7654" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7654" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7654" pos:column="54">BSTR</name> <type:modifier pos:line="7654" pos:column="59">*</type:modifier></type><name pos:line="7654" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7656" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7656" pos:column="43">HRESULT</name></type> ( <name pos:line="7656" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7656" pos:column="71">*</type:modifier><name pos:line="7656" pos:column="72">get_AsFullName</name> )<parameter_list pos:line="7656" pos:column="88">( 
            <param><decl><type><name pos:line="7657" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7657" pos:column="26">*</type:modifier></type> <name pos:line="7657" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7658" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7658" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7658" pos:column="54">BSTR</name> <type:modifier pos:line="7658" pos:column="59">*</type:modifier></type><name pos:line="7658" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7660" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7660" pos:column="43">HRESULT</name></type> ( <name pos:line="7660" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7660" pos:column="71">*</type:modifier><name pos:line="7660" pos:column="72">get_Rank</name> )<parameter_list pos:line="7660" pos:column="82">( 
            <param><decl><type><name pos:line="7661" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7661" pos:column="26">*</type:modifier></type> <name pos:line="7661" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7662" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7662" pos:column="33">__RPC__out</name> <name pos:line="7662" pos:column="44">signed</name> <name pos:line="7662" pos:column="51">long</name> <type:modifier pos:line="7662" pos:column="56">*</type:modifier></type><name pos:line="7662" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7664" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="7664" pos:column="43">HRESULT</name></type> ( <name pos:line="7664" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7664" pos:column="71">*</type:modifier><name pos:line="7664" pos:column="72">put_Rank</name> )<parameter_list pos:line="7664" pos:column="82">( 
            <param><decl><type><name pos:line="7665" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7665" pos:column="26">*</type:modifier></type> <name pos:line="7665" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7666" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7666" pos:column="33">signed</name> <name pos:line="7666" pos:column="40">long</name></type> <name pos:line="7666" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="7667" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7667" pos:column="33">__RPC__out</name> <name pos:line="7667" pos:column="44">void</name> <type:modifier pos:line="7667" pos:column="49">*</type:modifier></type><name pos:line="7667" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7669" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="7669" pos:column="34">HRESULT</name></type> ( <name pos:line="7669" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="7669" pos:column="62">*</type:modifier><name pos:line="7669" pos:column="63">CreateArrayType</name> )<parameter_list pos:line="7669" pos:column="80">( 
            <param><decl><type><name pos:line="7670" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7670" pos:column="26">*</type:modifier></type> <name pos:line="7670" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7671" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7671" pos:column="33">signed</name> <name pos:line="7671" pos:column="40">long</name></type> <name pos:line="7671" pos:column="45">Rank</name></decl></param>,
            <comment type="block" pos:line="7672" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7672" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7672" pos:column="54">CodeTypeRef</name> <type:modifier pos:line="7672" pos:column="66">*</type:modifier><type:modifier pos:line="7672" pos:column="67">*</type:modifier></type><name pos:line="7672" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7674" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="7674" pos:column="41">HRESULT</name></type> ( <name pos:line="7674" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="7674" pos:column="69">*</type:modifier><name pos:line="7674" pos:column="70">get_IsGeneric</name> )<parameter_list pos:line="7674" pos:column="85">( 
            <param><decl><type><name pos:line="7675" pos:column="13">CodeTypeRef2</name> <type:modifier pos:line="7675" pos:column="26">*</type:modifier></type> <name pos:line="7675" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="7676" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7676" pos:column="33">__RPC__out</name> <name pos:line="7676" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="7676" pos:column="57">*</type:modifier></type><name pos:line="7676" pos:column="58">pIsGeneric</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="7678" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="7679" pos:column="7">CodeTypeRef2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="7681" pos:column="5">interface</name></type> <name pos:line="7681" pos:column="15">CodeTypeRef2</name>
    <argument_list pos:line="7682" pos:column="5">{
        <argument><expr><name pos:line="7683" pos:column="9">CONST_VTBL</name> struct <name pos:line="7683" pos:column="27">CodeTypeRef2Vtbl</name> <op:operator pos:line="7683" pos:column="44">*</op:operator><name pos:line="7683" pos:column="45">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="7688" pos:column="1">#<cpp:directive pos:line="7688" pos:column="2">ifdef</cpp:directive> <name pos:line="7688" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="7691" pos:column="1">#<cpp:directive pos:line="7691" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7691" pos:column="9">CodeTypeRef2_QueryInterface</name><parameter_list pos:line="7691" pos:column="36">(<param><type><name pos:line="7691" pos:column="37">This</name></type></param>,<param><type><name pos:line="7691" pos:column="42">riid</name></type></param>,<param><type><name pos:line="7691" pos:column="47">ppvObj</name></type></param>,<param><type><name pos:line="7691" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7692" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7694" pos:column="1">#<cpp:directive pos:line="7694" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7694" pos:column="9">CodeTypeRef2_AddRef</name><parameter_list pos:line="7694" pos:column="28">(<param><type><name pos:line="7694" pos:column="29">This</name></type></param>,<param><type><name pos:line="7694" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7695" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7697" pos:column="1">#<cpp:directive pos:line="7697" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7697" pos:column="9">CodeTypeRef2_Release</name><parameter_list pos:line="7697" pos:column="29">(<param><type><name pos:line="7697" pos:column="30">This</name></type></param>,<param><type><name pos:line="7697" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7698" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7700" pos:column="1">#<cpp:directive pos:line="7700" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7700" pos:column="9">CodeTypeRef2_GetTypeInfoCount</name><parameter_list pos:line="7700" pos:column="38">(<param><type><name pos:line="7700" pos:column="39">This</name></type></param>,<param><type><name pos:line="7700" pos:column="44">pctinfo</name></type></param>,<param><type><name pos:line="7700" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7701" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7703" pos:column="1">#<cpp:directive pos:line="7703" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7703" pos:column="9">CodeTypeRef2_GetTypeInfo</name><parameter_list pos:line="7703" pos:column="33">(<param><type><name pos:line="7703" pos:column="34">This</name></type></param>,<param><type><name pos:line="7703" pos:column="39">itinfo</name></type></param>,<param><type><name pos:line="7703" pos:column="46">lcid</name></type></param>,<param><type><name pos:line="7703" pos:column="51">pptinfo</name></type></param>,<param><type><name pos:line="7703" pos:column="59">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7704" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7706" pos:column="1">#<cpp:directive pos:line="7706" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7706" pos:column="9">CodeTypeRef2_GetIDsOfNames</name><parameter_list pos:line="7706" pos:column="35">(<param><type><name pos:line="7706" pos:column="36">This</name></type></param>,<param><type><name pos:line="7706" pos:column="41">riid</name></type></param>,<param><type><name pos:line="7706" pos:column="46">rgszNames</name></type></param>,<param><type><name pos:line="7706" pos:column="56">cNames</name></type></param>,<param><type><name pos:line="7706" pos:column="63">lcid</name></type></param>,<param><type><name pos:line="7706" pos:column="68">rgdispid</name></type></param>,<param><type><name pos:line="7706" pos:column="77">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7707" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7709" pos:column="1">#<cpp:directive pos:line="7709" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7709" pos:column="9">CodeTypeRef2_Invoke</name><parameter_list pos:line="7709" pos:column="28">(<param><type><name pos:line="7709" pos:column="29">This</name></type></param>,<param><type><name pos:line="7709" pos:column="34">dispidMember</name></type></param>,<param><type><name pos:line="7709" pos:column="47">riid</name></type></param>,<param><type><name pos:line="7709" pos:column="52">lcid</name></type></param>,<param><type><name pos:line="7709" pos:column="57">wFlags</name></type></param>,<param><type><name pos:line="7709" pos:column="64">pdispparams</name></type></param>,<param><type><name pos:line="7709" pos:column="76">pvarResult</name></type></param>,<param><type><name pos:line="7709" pos:column="87">pexcepinfo</name></type></param>,<param><type><name pos:line="7709" pos:column="98">puArgErr</name></type></param>,<param><type><name pos:line="7709" pos:column="107">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7710" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7712" pos:column="1">#<cpp:directive pos:line="7712" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7712" pos:column="9">CodeTypeRef2_get_DTE</name><parameter_list pos:line="7712" pos:column="29">(<param><type><name pos:line="7712" pos:column="30">This</name></type></param>,<param><type><name pos:line="7712" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7713" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7715" pos:column="1">#<cpp:directive pos:line="7715" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7715" pos:column="9">CodeTypeRef2_get_Parent</name><parameter_list pos:line="7715" pos:column="32">(<param><type><name pos:line="7715" pos:column="33">This</name></type></param>,<param><type><name pos:line="7715" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7716" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7718" pos:column="1">#<cpp:directive pos:line="7718" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7718" pos:column="9">CodeTypeRef2_get_TypeKind</name><parameter_list pos:line="7718" pos:column="34">(<param><type><name pos:line="7718" pos:column="35">This</name></type></param>,<param><type><name pos:line="7718" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7719" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_TypeKind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7721" pos:column="1">#<cpp:directive pos:line="7721" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7721" pos:column="9">CodeTypeRef2_get_CodeType</name><parameter_list pos:line="7721" pos:column="34">(<param><type><name pos:line="7721" pos:column="35">This</name></type></param>,<param><type><name pos:line="7721" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7722" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CodeType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7724" pos:column="1">#<cpp:directive pos:line="7724" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7724" pos:column="9">CodeTypeRef2_put_CodeType</name><parameter_list pos:line="7724" pos:column="34">(<param><type><name pos:line="7724" pos:column="35">This</name></type></param>,<param><type><name pos:line="7724" pos:column="40">noname</name></type></param>,<param><type><name pos:line="7724" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7725" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_CodeType(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7727" pos:column="1">#<cpp:directive pos:line="7727" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7727" pos:column="9">CodeTypeRef2_get_ElementType</name><parameter_list pos:line="7727" pos:column="37">(<param><type><name pos:line="7727" pos:column="38">This</name></type></param>,<param><type><name pos:line="7727" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7728" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ElementType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7730" pos:column="1">#<cpp:directive pos:line="7730" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7730" pos:column="9">CodeTypeRef2_put_ElementType</name><parameter_list pos:line="7730" pos:column="37">(<param><type><name pos:line="7730" pos:column="38">This</name></type></param>,<param><type><name pos:line="7730" pos:column="43">noname</name></type></param>,<param><type><name pos:line="7730" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7731" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_ElementType(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7733" pos:column="1">#<cpp:directive pos:line="7733" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7733" pos:column="9">CodeTypeRef2_get_AsString</name><parameter_list pos:line="7733" pos:column="34">(<param><type><name pos:line="7733" pos:column="35">This</name></type></param>,<param><type><name pos:line="7733" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7734" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_AsString(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7736" pos:column="1">#<cpp:directive pos:line="7736" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7736" pos:column="9">CodeTypeRef2_get_AsFullName</name><parameter_list pos:line="7736" pos:column="36">(<param><type><name pos:line="7736" pos:column="37">This</name></type></param>,<param><type><name pos:line="7736" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7737" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_AsFullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7739" pos:column="1">#<cpp:directive pos:line="7739" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7739" pos:column="9">CodeTypeRef2_get_Rank</name><parameter_list pos:line="7739" pos:column="30">(<param><type><name pos:line="7739" pos:column="31">This</name></type></param>,<param><type><name pos:line="7739" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7740" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Rank(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7742" pos:column="1">#<cpp:directive pos:line="7742" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7742" pos:column="9">CodeTypeRef2_put_Rank</name><parameter_list pos:line="7742" pos:column="30">(<param><type><name pos:line="7742" pos:column="31">This</name></type></param>,<param><type><name pos:line="7742" pos:column="36">noname</name></type></param>,<param><type><name pos:line="7742" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7743" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Rank(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="7745" pos:column="1">#<cpp:directive pos:line="7745" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7745" pos:column="9">CodeTypeRef2_CreateArrayType</name><parameter_list pos:line="7745" pos:column="37">(<param><type><name pos:line="7745" pos:column="38">This</name></type></param>,<param><type><name pos:line="7745" pos:column="43">Rank</name></type></param>,<param><type><name pos:line="7745" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7746" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateArrayType(This,Rank,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="7749" pos:column="1">#<cpp:directive pos:line="7749" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7749" pos:column="9">CodeTypeRef2_get_IsGeneric</name><parameter_list pos:line="7749" pos:column="35">(<param><type><name pos:line="7749" pos:column="36">This</name></type></param>,<param><type><name pos:line="7749" pos:column="41">pIsGeneric</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="7750" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsGeneric(This,pIsGeneric) )</cpp:value></cpp:define> 

<cpp:endif pos:line="7752" pos:column="1">#<cpp:directive pos:line="7752" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="7752" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="7755" pos:column="1">#<cpp:directive pos:line="7755" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7755" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="7760" pos:column="1">#<cpp:directive pos:line="7760" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="7760" pos:column="9">/* __CodeTypeRef2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="7763" pos:column="1">#<cpp:directive pos:line="7763" pos:column="2">ifndef</cpp:directive> <name pos:line="7763" pos:column="9">__CodeProperty2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="7764" pos:column="1">#<cpp:directive pos:line="7764" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7764" pos:column="9">__CodeProperty2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="7766" pos:column="1">/* interface CodeProperty2 */</comment>
<comment type="block" pos:line="7767" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="7770" pos:column="1">EXTERN_C</name> <specifier pos:line="7770" pos:column="10">const</specifier> <name pos:line="7770" pos:column="16">IID</name></type> <name pos:line="7770" pos:column="20">IID_CodeProperty2</name></decl>;</decl_stmt>

<cpp:if pos:line="7772" pos:column="1">#<cpp:directive pos:line="7772" pos:column="2">if</cpp:directive> <expr><call><name pos:line="7772" pos:column="5">defined</name><argument_list pos:line="7772" pos:column="12">(<argument><expr><name pos:line="7772" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="7772" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="7772" pos:column="29">!</op:operator><call><name pos:line="7772" pos:column="30">defined</name><argument_list pos:line="7772" pos:column="37">(<argument><expr><name pos:line="7772" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="7774" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="7774" pos:column="19">(<argument pos:line="7774" pos:column="20">"33770C02-21B7-4224-A577-6877BDBA60EA"</argument>)</argument_list></macro>
    <label><name pos:line="7775" pos:column="5">CodeProperty2</name> :</label> <expr_stmt><expr pos:line="7775" pos:column="21">public <name pos:line="7775" pos:column="28">CodeProperty</name>
    <block pos:line="7776" pos:column="5">{
    <expr pos:line="7777" pos:column="5">public<op:operator pos:line="7777" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="7778" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="7778" pos:column="81">HRESULT</name> <name pos:line="7778" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="7778" pos:column="107">get_Parameters</name><argument_list pos:line="7778" pos:column="121">( 
            <comment type="block" pos:line="7779" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7779" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="7779" pos:column="54">/* external definition not present */</comment> CodeElements **ppMembers</argument>)</argument_list></macro> <op:operator pos:line="7779" pos:column="118">=</op:operator> <lit:literal type="number" pos:line="7779" pos:column="120">0</lit:literal></expr>;
        
        <expr pos:line="7781" pos:column="9">virtual <comment type="block" pos:line="7781" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="7781" pos:column="72">HRESULT</name> <name pos:line="7781" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="7781" pos:column="98">AddParameter</name><argument_list pos:line="7781" pos:column="110">( 
            <argument pos:line="7782" pos:column="13">__RPC__in BSTR Name</argument>,
            <argument pos:line="7783" pos:column="13">VARIANT Type</argument>,
            <comment type="block" pos:line="7784" pos:column="13">/* [optional] */</comment> <argument pos:line="7784" pos:column="30">VARIANT Position</argument>,
            <comment type="block" pos:line="7785" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7785" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="7785" pos:column="54">/* external definition not present */</comment> CodeParameter **ppCodeParameter</argument>)</argument_list></macro> <op:operator pos:line="7785" pos:column="125">=</op:operator> <lit:literal type="number" pos:line="7785" pos:column="127">0</lit:literal></expr>;
        
        <expr pos:line="7787" pos:column="9">virtual <comment type="block" pos:line="7787" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="7787" pos:column="49">HRESULT</name> <name pos:line="7787" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="7787" pos:column="75">get_IsGeneric</name><argument_list pos:line="7787" pos:column="88">( 
            <comment type="block" pos:line="7788" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7788" pos:column="33">__RPC__out VARIANT_BOOL *pIsGeneric</argument>)</argument_list></macro> <op:operator pos:line="7788" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="7788" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="7790" pos:column="9">virtual <comment type="block" pos:line="7790" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="7790" pos:column="81">HRESULT</name> <name pos:line="7790" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="7790" pos:column="107">get_OverrideKind</name><argument_list pos:line="7790" pos:column="123">( 
            <comment type="block" pos:line="7791" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7791" pos:column="33">__RPC__out vsCMOverrideKind *Kind</argument>)</argument_list></macro> <op:operator pos:line="7791" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="7791" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="7793" pos:column="9">virtual <comment type="block" pos:line="7793" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="7793" pos:column="81">HRESULT</name> <name pos:line="7793" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="7793" pos:column="107">put_OverrideKind</name><argument_list pos:line="7793" pos:column="123">( 
            <argument pos:line="7794" pos:column="13">vsCMOverrideKind Kind</argument>)</argument_list></macro> <op:operator pos:line="7794" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="7794" pos:column="38">0</lit:literal></expr>;
        
        <expr pos:line="7796" pos:column="9">virtual <comment type="block" pos:line="7796" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="7796" pos:column="81">HRESULT</name> <name pos:line="7796" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="7796" pos:column="107">get_IsShared</name><argument_list pos:line="7796" pos:column="119">( 
            <comment type="block" pos:line="7797" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7797" pos:column="33">__RPC__out VARIANT_BOOL *pIsShared</argument>)</argument_list></macro> <op:operator pos:line="7797" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="7797" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="7799" pos:column="9">virtual <comment type="block" pos:line="7799" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="7799" pos:column="81">HRESULT</name> <name pos:line="7799" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="7799" pos:column="107">put_IsShared</name><argument_list pos:line="7799" pos:column="119">( 
            <argument pos:line="7800" pos:column="13">VARIANT_BOOL Shared</argument>)</argument_list></macro> <op:operator pos:line="7800" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="7800" pos:column="36">0</lit:literal></expr>;
        
        <expr pos:line="7802" pos:column="9">virtual <comment type="block" pos:line="7802" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="7802" pos:column="49">HRESULT</name> <name pos:line="7802" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="7802" pos:column="75">get_IsDefault</name><argument_list pos:line="7802" pos:column="88">( 
            <comment type="block" pos:line="7803" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7803" pos:column="33">__RPC__out VARIANT_BOOL *pIsDefault</argument>)</argument_list></macro> <op:operator pos:line="7803" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="7803" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="7805" pos:column="9">virtual <comment type="block" pos:line="7805" pos:column="17">/* [helpstring][propput][id] */</comment> <name pos:line="7805" pos:column="49">HRESULT</name> <name pos:line="7805" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="7805" pos:column="75">put_IsDefault</name><argument_list pos:line="7805" pos:column="88">( 
            <argument pos:line="7806" pos:column="13">VARIANT_BOOL Default</argument>)</argument_list></macro> <op:operator pos:line="7806" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="7806" pos:column="37">0</lit:literal></expr>;
        
        <expr pos:line="7808" pos:column="9">virtual <comment type="block" pos:line="7808" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="7808" pos:column="81">HRESULT</name> <name pos:line="7808" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="7808" pos:column="107">get_Parent2</name><argument_list pos:line="7808" pos:column="118">( 
            <comment type="block" pos:line="7809" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7809" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="7809" pos:column="54">/* external definition not present */</comment> CodeElement **pParent</argument>)</argument_list></macro> <op:operator pos:line="7809" pos:column="115">=</op:operator> <lit:literal type="number" pos:line="7809" pos:column="117">0</lit:literal></expr>;
        
        <expr pos:line="7811" pos:column="9">virtual <comment type="block" pos:line="7811" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="7811" pos:column="72">HRESULT</name> <name pos:line="7811" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="7811" pos:column="98">RemoveParameter</name><argument_list pos:line="7811" pos:column="113">( 
            <argument pos:line="7812" pos:column="13">VARIANT Element</argument>)</argument_list></macro> <op:operator pos:line="7812" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="7812" pos:column="32">0</lit:literal></expr>;
        
        <expr pos:line="7814" pos:column="9">virtual <comment type="block" pos:line="7814" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="7814" pos:column="49">HRESULT</name> <name pos:line="7814" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="7814" pos:column="75">get_ReadWrite</name><argument_list pos:line="7814" pos:column="88">( 
            <comment type="block" pos:line="7815" pos:column="13">/* [retval][out] */</comment> <argument pos:line="7815" pos:column="33">__RPC__out vsCMPropertyKind *pPropertyKind</argument>)</argument_list></macro> <op:operator pos:line="7815" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="7815" pos:column="79">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="7819" pos:column="1">#<cpp:directive pos:line="7819" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="7819" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="7821" pos:column="5">typedef <type><struct pos:line="7821" pos:column="13">struct <name pos:line="7821" pos:column="20">CodeProperty2Vtbl</name>
    <block pos:line="7822" pos:column="5">{<public type="default" pos:line="7822" pos:column="6">
        <decl_stmt><decl><type><name pos:line="7823" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="7825" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="7825" pos:column="46">HRESULT</name></type> ( <name pos:line="7825" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7825" pos:column="74">*</type:modifier><name pos:line="7825" pos:column="75">QueryInterface</name> )<parameter_list pos:line="7825" pos:column="91">( 
            <param><decl><type><name pos:line="7826" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7826" pos:column="27">*</type:modifier></type> <name pos:line="7826" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7827" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="7827" pos:column="47">struct <name pos:line="7827" pos:column="54">GUID</name> <type:modifier pos:line="7827" pos:column="59">*</type:modifier></type><name pos:line="7827" pos:column="60">riid</name></decl><op:operator pos:line="7827" pos:column="64">,</op:operator>
            <comment type="block" pos:line="7828" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7828" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="7828" pos:column="59">void</name> <type:modifier pos:line="7828" pos:column="64">*</type:modifier><type:modifier pos:line="7828" pos:column="65">*</type:modifier><name pos:line="7828" pos:column="66">ppvObj</name><op:operator pos:line="7828" pos:column="72">,</op:operator>
            <comment type="block" pos:line="7829" pos:column="13">/* [retval][out] */</comment> <name pos:line="7829" pos:column="33">__RPC__out</name> <name pos:line="7829" pos:column="44">void</name> <type:modifier pos:line="7829" pos:column="49">*</type:modifier><name pos:line="7829" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="7831" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="7831" pos:column="46">HRESULT</name></type> ( <name pos:line="7831" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7831" pos:column="74">*</type:modifier><name pos:line="7831" pos:column="75">AddRef</name> )<parameter_list pos:line="7831" pos:column="83">( 
            <param><decl><type><name pos:line="7832" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7832" pos:column="27">*</type:modifier></type> <name pos:line="7832" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7833" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7833" pos:column="33">__RPC__out</name> <name pos:line="7833" pos:column="44">unsigned</name> <name pos:line="7833" pos:column="53">long</name> <type:modifier pos:line="7833" pos:column="58">*</type:modifier></type><name pos:line="7833" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7835" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="7835" pos:column="46">HRESULT</name></type> ( <name pos:line="7835" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7835" pos:column="74">*</type:modifier><name pos:line="7835" pos:column="75">Release</name> )<parameter_list pos:line="7835" pos:column="84">( 
            <param><decl><type><name pos:line="7836" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7836" pos:column="27">*</type:modifier></type> <name pos:line="7836" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7837" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7837" pos:column="33">__RPC__out</name> <name pos:line="7837" pos:column="44">unsigned</name> <name pos:line="7837" pos:column="53">long</name> <type:modifier pos:line="7837" pos:column="58">*</type:modifier></type><name pos:line="7837" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7839" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="7839" pos:column="46">HRESULT</name></type> ( <name pos:line="7839" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7839" pos:column="74">*</type:modifier><name pos:line="7839" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="7839" pos:column="93">( 
            <param><decl><type><name pos:line="7840" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7840" pos:column="27">*</type:modifier></type> <name pos:line="7840" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7841" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="7841" pos:column="38">__RPC__out</name> <name pos:line="7841" pos:column="49">unsigned</name> <name pos:line="7841" pos:column="58">UINT</name> <type:modifier pos:line="7841" pos:column="63">*</type:modifier></type><name pos:line="7841" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="7842" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7842" pos:column="33">__RPC__out</name> <name pos:line="7842" pos:column="44">void</name> <type:modifier pos:line="7842" pos:column="49">*</type:modifier></type><name pos:line="7842" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7844" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="7844" pos:column="46">HRESULT</name></type> ( <name pos:line="7844" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="7844" pos:column="74">*</type:modifier><name pos:line="7844" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="7844" pos:column="88">( 
            <param><decl><type><name pos:line="7845" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7845" pos:column="27">*</type:modifier></type> <name pos:line="7845" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7846" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="7846" pos:column="37">unsigned</name> <name pos:line="7846" pos:column="46">UINT</name></type> <name pos:line="7846" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="7847" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="7847" pos:column="37">unsigned</name> <name pos:line="7847" pos:column="46">long</name></type> <name pos:line="7847" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="7848" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="7848" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="7848" pos:column="59">void</name> <type:modifier pos:line="7848" pos:column="64">*</type:modifier><type:modifier pos:line="7848" pos:column="65">*</type:modifier></type><name pos:line="7848" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="7849" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7849" pos:column="33">__RPC__out</name> <name pos:line="7849" pos:column="44">void</name> <type:modifier pos:line="7849" pos:column="49">*</type:modifier></type><name pos:line="7849" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7851" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="7851" pos:column="46">HRESULT</name> <argument_list pos:line="7851" pos:column="54">( <argument pos:line="7851" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7851" pos:column="90">(</op:operator> 
            <name pos:line="7852" pos:column="13">CodeProperty2</name> <op:operator pos:line="7852" pos:column="27">*</op:operator> <name pos:line="7852" pos:column="29">This</name><op:operator pos:line="7852" pos:column="33">,</op:operator>
            <comment type="block" pos:line="7853" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7853" pos:column="37">__RPC__in</name> struct <name pos:line="7853" pos:column="54">GUID</name> <op:operator pos:line="7853" pos:column="59">*</op:operator><name pos:line="7853" pos:column="60">riid</name><op:operator pos:line="7853" pos:column="64">,</op:operator>
            <comment type="block" pos:line="7854" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7854" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="7854" pos:column="57">signed</name> <name pos:line="7854" pos:column="64">char</name> <op:operator pos:line="7854" pos:column="69">*</op:operator><op:operator pos:line="7854" pos:column="70">*</op:operator><name pos:line="7854" pos:column="71">rgszNames</name><op:operator pos:line="7854" pos:column="80">,</op:operator>
            <comment type="block" pos:line="7855" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7855" pos:column="37">unsigned</name> <name pos:line="7855" pos:column="46">UINT</name> <name pos:line="7855" pos:column="51">cNames</name><op:operator pos:line="7855" pos:column="57">,</op:operator>
            <comment type="block" pos:line="7856" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7856" pos:column="37">unsigned</name> <name pos:line="7856" pos:column="46">long</name> <name pos:line="7856" pos:column="51">lcid</name><op:operator pos:line="7856" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7857" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7857" pos:column="38">__RPC__out</name> <name pos:line="7857" pos:column="49">signed</name> <name pos:line="7857" pos:column="56">long</name> <op:operator pos:line="7857" pos:column="61">*</op:operator><name pos:line="7857" pos:column="62">rgdispid</name><op:operator pos:line="7857" pos:column="70">,</op:operator>
            <comment type="block" pos:line="7858" pos:column="13">/* [retval][out] */</comment> <name pos:line="7858" pos:column="33">__RPC__out</name> <name pos:line="7858" pos:column="44">void</name> <op:operator pos:line="7858" pos:column="49">*</op:operator><name pos:line="7858" pos:column="50">retval</name><op:operator pos:line="7858" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7860" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="7860" pos:column="46">HRESULT</name> <argument_list pos:line="7860" pos:column="54">( <argument pos:line="7860" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7860" pos:column="83">(</op:operator> 
            <name pos:line="7861" pos:column="13">CodeProperty2</name> <op:operator pos:line="7861" pos:column="27">*</op:operator> <name pos:line="7861" pos:column="29">This</name><op:operator pos:line="7861" pos:column="33">,</op:operator>
            <comment type="block" pos:line="7862" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7862" pos:column="37">signed</name> <name pos:line="7862" pos:column="44">long</name> <name pos:line="7862" pos:column="49">dispidMember</name><op:operator pos:line="7862" pos:column="61">,</op:operator>
            <comment type="block" pos:line="7863" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7863" pos:column="37">__RPC__in</name> struct <name pos:line="7863" pos:column="54">GUID</name> <op:operator pos:line="7863" pos:column="59">*</op:operator><name pos:line="7863" pos:column="60">riid</name><op:operator pos:line="7863" pos:column="64">,</op:operator>
            <comment type="block" pos:line="7864" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7864" pos:column="37">unsigned</name> <name pos:line="7864" pos:column="46">long</name> <name pos:line="7864" pos:column="51">lcid</name><op:operator pos:line="7864" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7865" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7865" pos:column="37">unsigned</name> <name pos:line="7865" pos:column="46">short</name> <name pos:line="7865" pos:column="52">wFlags</name><op:operator pos:line="7865" pos:column="58">,</op:operator>
            <comment type="block" pos:line="7866" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="7866" pos:column="37">__RPC__in</name> struct <name pos:line="7866" pos:column="54">DISPPARAMS</name> <op:operator pos:line="7866" pos:column="65">*</op:operator><name pos:line="7866" pos:column="66">pdispparams</name><op:operator pos:line="7866" pos:column="77">,</op:operator>
            <comment type="block" pos:line="7867" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7867" pos:column="38">__RPC__out</name> <name pos:line="7867" pos:column="49">VARIANT</name> <op:operator pos:line="7867" pos:column="57">*</op:operator><name pos:line="7867" pos:column="58">pvarResult</name><op:operator pos:line="7867" pos:column="68">,</op:operator>
            <comment type="block" pos:line="7868" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7868" pos:column="38">__RPC__out</name> struct <name pos:line="7868" pos:column="56">EXCEPINFO</name> <op:operator pos:line="7868" pos:column="66">*</op:operator><name pos:line="7868" pos:column="67">pexcepinfo</name><op:operator pos:line="7868" pos:column="77">,</op:operator>
            <comment type="block" pos:line="7869" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="7869" pos:column="38">__RPC__out</name> <name pos:line="7869" pos:column="49">unsigned</name> <name pos:line="7869" pos:column="58">UINT</name> <op:operator pos:line="7869" pos:column="63">*</op:operator><name pos:line="7869" pos:column="64">puArgErr</name><op:operator pos:line="7869" pos:column="72">,</op:operator>
            <comment type="block" pos:line="7870" pos:column="13">/* [retval][out] */</comment> <name pos:line="7870" pos:column="33">__RPC__out</name> <name pos:line="7870" pos:column="44">void</name> <op:operator pos:line="7870" pos:column="49">*</op:operator><name pos:line="7870" pos:column="50">retval</name><op:operator pos:line="7870" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7872" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7872" pos:column="43">HRESULT</name></type> ( <name pos:line="7872" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7872" pos:column="71">*</type:modifier><name pos:line="7872" pos:column="72">get_DTE</name> )<parameter_list pos:line="7872" pos:column="81">( 
            <param><decl><type><name pos:line="7873" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7873" pos:column="27">*</type:modifier></type> <name pos:line="7873" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7874" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7874" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="7874" pos:column="54">*</type:modifier><type:modifier pos:line="7874" pos:column="55">*</type:modifier></type><name pos:line="7874" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7876" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7876" pos:column="43">HRESULT</name></type> ( <name pos:line="7876" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7876" pos:column="71">*</type:modifier><name pos:line="7876" pos:column="72">get_Collection</name> )<parameter_list pos:line="7876" pos:column="88">( 
            <param><decl><type><name pos:line="7877" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7877" pos:column="27">*</type:modifier></type> <name pos:line="7877" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7878" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7878" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7878" pos:column="54">CodeElements</name> <type:modifier pos:line="7878" pos:column="67">*</type:modifier><type:modifier pos:line="7878" pos:column="68">*</type:modifier></type><name pos:line="7878" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7880" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7880" pos:column="43">HRESULT</name></type> ( <name pos:line="7880" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7880" pos:column="71">*</type:modifier><name pos:line="7880" pos:column="72">get_Name</name> )<parameter_list pos:line="7880" pos:column="82">( 
            <param><decl><type><name pos:line="7881" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7881" pos:column="27">*</type:modifier></type> <name pos:line="7881" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7882" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7882" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7882" pos:column="54">BSTR</name> <type:modifier pos:line="7882" pos:column="59">*</type:modifier></type><name pos:line="7882" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7884" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="7884" pos:column="43">HRESULT</name></type> ( <name pos:line="7884" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7884" pos:column="71">*</type:modifier><name pos:line="7884" pos:column="72">put_Name</name> )<parameter_list pos:line="7884" pos:column="82">( 
            <param><decl><type><name pos:line="7885" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7885" pos:column="27">*</type:modifier></type> <name pos:line="7885" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7886" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7886" pos:column="33">__RPC__in</name> <name pos:line="7886" pos:column="43">BSTR</name></type> <name pos:line="7886" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="7887" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7887" pos:column="33">__RPC__out</name> <name pos:line="7887" pos:column="44">void</name> <type:modifier pos:line="7887" pos:column="49">*</type:modifier></type><name pos:line="7887" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7889" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7889" pos:column="43">HRESULT</name></type> ( <name pos:line="7889" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7889" pos:column="71">*</type:modifier><name pos:line="7889" pos:column="72">get_FullName</name> )<parameter_list pos:line="7889" pos:column="86">( 
            <param><decl><type><name pos:line="7890" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7890" pos:column="27">*</type:modifier></type> <name pos:line="7890" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7891" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7891" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7891" pos:column="54">BSTR</name> <type:modifier pos:line="7891" pos:column="59">*</type:modifier></type><name pos:line="7891" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7893" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7893" pos:column="43">HRESULT</name></type> ( <name pos:line="7893" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7893" pos:column="71">*</type:modifier><name pos:line="7893" pos:column="72">get_ProjectItem</name> )<parameter_list pos:line="7893" pos:column="89">( 
            <param><decl><type><name pos:line="7894" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7894" pos:column="27">*</type:modifier></type> <name pos:line="7894" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7895" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7895" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7895" pos:column="54">ProjectItem</name> <type:modifier pos:line="7895" pos:column="66">*</type:modifier><type:modifier pos:line="7895" pos:column="67">*</type:modifier></type><name pos:line="7895" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7897" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="7897" pos:column="43">HRESULT</name> <argument_list pos:line="7897" pos:column="51">( <argument pos:line="7897" pos:column="53">STDMETHODCALLTYPE *get_Kind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7897" pos:column="82">(</op:operator> 
            <name pos:line="7898" pos:column="13">CodeProperty2</name> <op:operator pos:line="7898" pos:column="27">*</op:operator> <name pos:line="7898" pos:column="29">This</name><op:operator pos:line="7898" pos:column="33">,</op:operator>
            <comment type="block" pos:line="7899" pos:column="13">/* [retval][out] */</comment> <name pos:line="7899" pos:column="33">__RPC__out</name> enum <name pos:line="7899" pos:column="49">vsCMElement</name> <op:operator pos:line="7899" pos:column="61">*</op:operator><name pos:line="7899" pos:column="62">retval</name><op:operator pos:line="7899" pos:column="68">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7901" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7901" pos:column="43">HRESULT</name></type> ( <name pos:line="7901" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7901" pos:column="71">*</type:modifier><name pos:line="7901" pos:column="72">get_IsCodeType</name> )<parameter_list pos:line="7901" pos:column="88">( 
            <param><decl><type><name pos:line="7902" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7902" pos:column="27">*</type:modifier></type> <name pos:line="7902" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7903" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7903" pos:column="33">__RPC__out</name> <name pos:line="7903" pos:column="44">BOOLEAN</name> <type:modifier pos:line="7903" pos:column="52">*</type:modifier></type><name pos:line="7903" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7905" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="7905" pos:column="43">HRESULT</name> <argument_list pos:line="7905" pos:column="51">( <argument pos:line="7905" pos:column="53">STDMETHODCALLTYPE *get_InfoLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7905" pos:column="90">(</op:operator> 
            <name pos:line="7906" pos:column="13">CodeProperty2</name> <op:operator pos:line="7906" pos:column="27">*</op:operator> <name pos:line="7906" pos:column="29">This</name><op:operator pos:line="7906" pos:column="33">,</op:operator>
            <comment type="block" pos:line="7907" pos:column="13">/* [retval][out] */</comment> <name pos:line="7907" pos:column="33">__RPC__out</name> enum <name pos:line="7907" pos:column="49">vsCMInfoLocation</name> <op:operator pos:line="7907" pos:column="66">*</op:operator><name pos:line="7907" pos:column="67">retval</name><op:operator pos:line="7907" pos:column="73">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7909" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7909" pos:column="43">HRESULT</name></type> ( <name pos:line="7909" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7909" pos:column="71">*</type:modifier><name pos:line="7909" pos:column="72">get_Children</name> )<parameter_list pos:line="7909" pos:column="86">( 
            <param><decl><type><name pos:line="7910" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7910" pos:column="27">*</type:modifier></type> <name pos:line="7910" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7911" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7911" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7911" pos:column="54">CodeElements</name> <type:modifier pos:line="7911" pos:column="67">*</type:modifier><type:modifier pos:line="7911" pos:column="68">*</type:modifier></type><name pos:line="7911" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7913" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7913" pos:column="43">HRESULT</name></type> ( <name pos:line="7913" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7913" pos:column="71">*</type:modifier><name pos:line="7913" pos:column="72">get_Language</name> )<parameter_list pos:line="7913" pos:column="86">( 
            <param><decl><type><name pos:line="7914" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7914" pos:column="27">*</type:modifier></type> <name pos:line="7914" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7915" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7915" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7915" pos:column="54">BSTR</name> <type:modifier pos:line="7915" pos:column="59">*</type:modifier></type><name pos:line="7915" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7917" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7917" pos:column="43">HRESULT</name></type> ( <name pos:line="7917" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7917" pos:column="71">*</type:modifier><name pos:line="7917" pos:column="72">get_StartPoint</name> )<parameter_list pos:line="7917" pos:column="88">( 
            <param><decl><type><name pos:line="7918" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7918" pos:column="27">*</type:modifier></type> <name pos:line="7918" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7919" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7919" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7919" pos:column="54">TextPoint</name> <type:modifier pos:line="7919" pos:column="64">*</type:modifier><type:modifier pos:line="7919" pos:column="65">*</type:modifier></type><name pos:line="7919" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7921" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7921" pos:column="43">HRESULT</name></type> ( <name pos:line="7921" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7921" pos:column="71">*</type:modifier><name pos:line="7921" pos:column="72">get_EndPoint</name> )<parameter_list pos:line="7921" pos:column="86">( 
            <param><decl><type><name pos:line="7922" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7922" pos:column="27">*</type:modifier></type> <name pos:line="7922" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7923" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7923" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7923" pos:column="54">TextPoint</name> <type:modifier pos:line="7923" pos:column="64">*</type:modifier><type:modifier pos:line="7923" pos:column="65">*</type:modifier></type><name pos:line="7923" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7925" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7925" pos:column="43">HRESULT</name></type> ( <name pos:line="7925" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7925" pos:column="71">*</type:modifier><name pos:line="7925" pos:column="72">get_ExtenderNames</name> )<parameter_list pos:line="7925" pos:column="91">( 
            <param><decl><type><name pos:line="7926" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7926" pos:column="27">*</type:modifier></type> <name pos:line="7926" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7927" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7927" pos:column="33">__RPC__out</name> <name pos:line="7927" pos:column="44">VARIANT</name> <type:modifier pos:line="7927" pos:column="52">*</type:modifier></type><name pos:line="7927" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7929" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7929" pos:column="43">HRESULT</name></type> ( <name pos:line="7929" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7929" pos:column="71">*</type:modifier><name pos:line="7929" pos:column="72">get_Extender</name> )<parameter_list pos:line="7929" pos:column="86">( 
            <param><decl><type><name pos:line="7930" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7930" pos:column="27">*</type:modifier></type> <name pos:line="7930" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7931" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7931" pos:column="33">__RPC__in</name> <name pos:line="7931" pos:column="43">BSTR</name></type> <name pos:line="7931" pos:column="48">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="7932" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7932" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7932" pos:column="54">IDispatch</name> <type:modifier pos:line="7932" pos:column="64">*</type:modifier><type:modifier pos:line="7932" pos:column="65">*</type:modifier></type><name pos:line="7932" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7934" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7934" pos:column="43">HRESULT</name></type> ( <name pos:line="7934" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7934" pos:column="71">*</type:modifier><name pos:line="7934" pos:column="72">get_ExtenderCATID</name> )<parameter_list pos:line="7934" pos:column="91">( 
            <param><decl><type><name pos:line="7935" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7935" pos:column="27">*</type:modifier></type> <name pos:line="7935" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7936" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7936" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7936" pos:column="54">BSTR</name> <type:modifier pos:line="7936" pos:column="59">*</type:modifier></type><name pos:line="7936" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7938" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="7938" pos:column="34">HRESULT</name> <argument_list pos:line="7938" pos:column="42">( <argument pos:line="7938" pos:column="44">STDMETHODCALLTYPE *GetStartPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7938" pos:column="78">(</op:operator> 
            <name pos:line="7939" pos:column="13">CodeProperty2</name> <op:operator pos:line="7939" pos:column="27">*</op:operator> <name pos:line="7939" pos:column="29">This</name><op:operator pos:line="7939" pos:column="33">,</op:operator>
            <comment type="block" pos:line="7940" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="7940" pos:column="42">vsCMPart</name> <name pos:line="7940" pos:column="51">Part</name><op:operator pos:line="7940" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7941" pos:column="13">/* [retval][out] */</comment> <name pos:line="7941" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7941" pos:column="54">TextPoint</name> <op:operator pos:line="7941" pos:column="64">*</op:operator><op:operator pos:line="7941" pos:column="65">*</op:operator><name pos:line="7941" pos:column="66">retval</name><op:operator pos:line="7941" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7943" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="7943" pos:column="34">HRESULT</name> <argument_list pos:line="7943" pos:column="42">( <argument pos:line="7943" pos:column="44">STDMETHODCALLTYPE *GetEndPoint</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7943" pos:column="76">(</op:operator> 
            <name pos:line="7944" pos:column="13">CodeProperty2</name> <op:operator pos:line="7944" pos:column="27">*</op:operator> <name pos:line="7944" pos:column="29">This</name><op:operator pos:line="7944" pos:column="33">,</op:operator>
            <comment type="block" pos:line="7945" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="7945" pos:column="42">vsCMPart</name> <name pos:line="7945" pos:column="51">Part</name><op:operator pos:line="7945" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7946" pos:column="13">/* [retval][out] */</comment> <name pos:line="7946" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7946" pos:column="54">TextPoint</name> <op:operator pos:line="7946" pos:column="64">*</op:operator><op:operator pos:line="7946" pos:column="65">*</op:operator><name pos:line="7946" pos:column="66">retval</name><op:operator pos:line="7946" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7948" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7948" pos:column="43">HRESULT</name></type> ( <name pos:line="7948" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7948" pos:column="71">*</type:modifier><name pos:line="7948" pos:column="72">get_Parent</name> )<parameter_list pos:line="7948" pos:column="84">( 
            <param><decl><type><name pos:line="7949" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7949" pos:column="27">*</type:modifier></type> <name pos:line="7949" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7950" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7950" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7950" pos:column="54">CodeClass</name> <type:modifier pos:line="7950" pos:column="64">*</type:modifier><type:modifier pos:line="7950" pos:column="65">*</type:modifier></type><name pos:line="7950" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7952" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7952" pos:column="43">HRESULT</name></type> ( <name pos:line="7952" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7952" pos:column="71">*</type:modifier><name pos:line="7952" pos:column="72">get_Prototype</name> )<parameter_list pos:line="7952" pos:column="87">( 
            <param><decl><type><name pos:line="7953" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7953" pos:column="27">*</type:modifier></type> <name pos:line="7953" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7954" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="7954" pos:column="37">signed</name> <name pos:line="7954" pos:column="44">long</name></type> <name pos:line="7954" pos:column="49">Flags</name></decl></param>,
            <comment type="block" pos:line="7955" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7955" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7955" pos:column="54">BSTR</name> <type:modifier pos:line="7955" pos:column="59">*</type:modifier></type><name pos:line="7955" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7957" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="7957" pos:column="43">HRESULT</name></type> ( <name pos:line="7957" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7957" pos:column="71">*</type:modifier><name pos:line="7957" pos:column="72">put_Type</name> )<parameter_list pos:line="7957" pos:column="82">( 
            <param><decl><type><name pos:line="7958" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7958" pos:column="27">*</type:modifier></type> <name pos:line="7958" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7959" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7959" pos:column="33">__RPC__in_opt</name> <name pos:line="7959" pos:column="47">CodeTypeRef</name> <type:modifier pos:line="7959" pos:column="59">*</type:modifier></type><name pos:line="7959" pos:column="60">noname</name></decl></param>,
            <comment type="block" pos:line="7960" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7960" pos:column="33">__RPC__out</name> <name pos:line="7960" pos:column="44">void</name> <type:modifier pos:line="7960" pos:column="49">*</type:modifier></type><name pos:line="7960" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7962" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7962" pos:column="43">HRESULT</name></type> ( <name pos:line="7962" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7962" pos:column="71">*</type:modifier><name pos:line="7962" pos:column="72">get_Type</name> )<parameter_list pos:line="7962" pos:column="82">( 
            <param><decl><type><name pos:line="7963" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7963" pos:column="27">*</type:modifier></type> <name pos:line="7963" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7964" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7964" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7964" pos:column="54">CodeTypeRef</name> <type:modifier pos:line="7964" pos:column="66">*</type:modifier><type:modifier pos:line="7964" pos:column="67">*</type:modifier></type><name pos:line="7964" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7966" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7966" pos:column="43">HRESULT</name></type> ( <name pos:line="7966" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7966" pos:column="71">*</type:modifier><name pos:line="7966" pos:column="72">get_Getter</name> )<parameter_list pos:line="7966" pos:column="84">( 
            <param><decl><type><name pos:line="7967" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7967" pos:column="27">*</type:modifier></type> <name pos:line="7967" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7968" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7968" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7968" pos:column="54">CodeFunction</name> <type:modifier pos:line="7968" pos:column="67">*</type:modifier><type:modifier pos:line="7968" pos:column="68">*</type:modifier></type><name pos:line="7968" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7970" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="7970" pos:column="43">HRESULT</name></type> ( <name pos:line="7970" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7970" pos:column="71">*</type:modifier><name pos:line="7970" pos:column="72">put_Getter</name> )<parameter_list pos:line="7970" pos:column="84">( 
            <param><decl><type><name pos:line="7971" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7971" pos:column="27">*</type:modifier></type> <name pos:line="7971" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7972" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7972" pos:column="33">__RPC__in_opt</name> <name pos:line="7972" pos:column="47">CodeFunction</name> <type:modifier pos:line="7972" pos:column="60">*</type:modifier></type><name pos:line="7972" pos:column="61">noname</name></decl></param>,
            <comment type="block" pos:line="7973" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7973" pos:column="33">__RPC__out</name> <name pos:line="7973" pos:column="44">void</name> <type:modifier pos:line="7973" pos:column="49">*</type:modifier></type><name pos:line="7973" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7975" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7975" pos:column="43">HRESULT</name></type> ( <name pos:line="7975" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7975" pos:column="71">*</type:modifier><name pos:line="7975" pos:column="72">get_Setter</name> )<parameter_list pos:line="7975" pos:column="84">( 
            <param><decl><type><name pos:line="7976" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7976" pos:column="27">*</type:modifier></type> <name pos:line="7976" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7977" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7977" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7977" pos:column="54">CodeFunction</name> <type:modifier pos:line="7977" pos:column="67">*</type:modifier><type:modifier pos:line="7977" pos:column="68">*</type:modifier></type><name pos:line="7977" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7979" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="7979" pos:column="43">HRESULT</name></type> ( <name pos:line="7979" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7979" pos:column="71">*</type:modifier><name pos:line="7979" pos:column="72">put_Setter</name> )<parameter_list pos:line="7979" pos:column="84">( 
            <param><decl><type><name pos:line="7980" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7980" pos:column="27">*</type:modifier></type> <name pos:line="7980" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7981" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="7981" pos:column="33">__RPC__in_opt</name> <name pos:line="7981" pos:column="47">CodeFunction</name> <type:modifier pos:line="7981" pos:column="60">*</type:modifier></type><name pos:line="7981" pos:column="61">noname</name></decl></param>,
            <comment type="block" pos:line="7982" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7982" pos:column="33">__RPC__out</name> <name pos:line="7982" pos:column="44">void</name> <type:modifier pos:line="7982" pos:column="49">*</type:modifier></type><name pos:line="7982" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7984" pos:column="9">/* [id][propput][funcdescattr] */</comment> <macro><name pos:line="7984" pos:column="43">HRESULT</name> <argument_list pos:line="7984" pos:column="51">( <argument pos:line="7984" pos:column="53">STDMETHODCALLTYPE *put_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7984" pos:column="84">(</op:operator> 
            <name pos:line="7985" pos:column="13">CodeProperty2</name> <op:operator pos:line="7985" pos:column="27">*</op:operator> <name pos:line="7985" pos:column="29">This</name><op:operator pos:line="7985" pos:column="33">,</op:operator>
            <comment type="block" pos:line="7986" pos:column="13">/* [idldescattr] */</comment> enum <name pos:line="7986" pos:column="38">vsCMAccess</name> <name pos:line="7986" pos:column="49">noname</name><op:operator pos:line="7986" pos:column="55">,</op:operator>
            <comment type="block" pos:line="7987" pos:column="13">/* [retval][out] */</comment> <name pos:line="7987" pos:column="33">__RPC__out</name> <name pos:line="7987" pos:column="44">void</name> <op:operator pos:line="7987" pos:column="49">*</op:operator><name pos:line="7987" pos:column="50">retval</name><op:operator pos:line="7987" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7989" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="7989" pos:column="43">HRESULT</name> <argument_list pos:line="7989" pos:column="51">( <argument pos:line="7989" pos:column="53">STDMETHODCALLTYPE *get_Access</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="7989" pos:column="84">(</op:operator> 
            <name pos:line="7990" pos:column="13">CodeProperty2</name> <op:operator pos:line="7990" pos:column="27">*</op:operator> <name pos:line="7990" pos:column="29">This</name><op:operator pos:line="7990" pos:column="33">,</op:operator>
            <comment type="block" pos:line="7991" pos:column="13">/* [retval][out] */</comment> <name pos:line="7991" pos:column="33">__RPC__out</name> enum <name pos:line="7991" pos:column="49">vsCMAccess</name> <op:operator pos:line="7991" pos:column="60">*</op:operator><name pos:line="7991" pos:column="61">retval</name><op:operator pos:line="7991" pos:column="67">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="7993" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7993" pos:column="43">HRESULT</name></type> ( <name pos:line="7993" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7993" pos:column="71">*</type:modifier><name pos:line="7993" pos:column="72">get_Attributes</name> )<parameter_list pos:line="7993" pos:column="88">( 
            <param><decl><type><name pos:line="7994" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7994" pos:column="27">*</type:modifier></type> <name pos:line="7994" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7995" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7995" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7995" pos:column="54">CodeElements</name> <type:modifier pos:line="7995" pos:column="67">*</type:modifier><type:modifier pos:line="7995" pos:column="68">*</type:modifier></type><name pos:line="7995" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="7997" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="7997" pos:column="43">HRESULT</name></type> ( <name pos:line="7997" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="7997" pos:column="71">*</type:modifier><name pos:line="7997" pos:column="72">get_DocComment</name> )<parameter_list pos:line="7997" pos:column="88">( 
            <param><decl><type><name pos:line="7998" pos:column="13">CodeProperty2</name> <type:modifier pos:line="7998" pos:column="27">*</type:modifier></type> <name pos:line="7998" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="7999" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="7999" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="7999" pos:column="54">BSTR</name> <type:modifier pos:line="7999" pos:column="59">*</type:modifier></type><name pos:line="7999" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8001" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="8001" pos:column="43">HRESULT</name></type> ( <name pos:line="8001" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8001" pos:column="71">*</type:modifier><name pos:line="8001" pos:column="72">put_DocComment</name> )<parameter_list pos:line="8001" pos:column="88">( 
            <param><decl><type><name pos:line="8002" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8002" pos:column="27">*</type:modifier></type> <name pos:line="8002" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="8003" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="8003" pos:column="33">__RPC__in</name> <name pos:line="8003" pos:column="43">BSTR</name></type> <name pos:line="8003" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="8004" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8004" pos:column="33">__RPC__out</name> <name pos:line="8004" pos:column="44">void</name> <type:modifier pos:line="8004" pos:column="49">*</type:modifier></type><name pos:line="8004" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8006" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8006" pos:column="43">HRESULT</name></type> ( <name pos:line="8006" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8006" pos:column="71">*</type:modifier><name pos:line="8006" pos:column="72">get_Comment</name> )<parameter_list pos:line="8006" pos:column="85">( 
            <param><decl><type><name pos:line="8007" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8007" pos:column="27">*</type:modifier></type> <name pos:line="8007" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="8008" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8008" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8008" pos:column="54">BSTR</name> <type:modifier pos:line="8008" pos:column="59">*</type:modifier></type><name pos:line="8008" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8010" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="8010" pos:column="43">HRESULT</name></type> ( <name pos:line="8010" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8010" pos:column="71">*</type:modifier><name pos:line="8010" pos:column="72">put_Comment</name> )<parameter_list pos:line="8010" pos:column="85">( 
            <param><decl><type><name pos:line="8011" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8011" pos:column="27">*</type:modifier></type> <name pos:line="8011" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="8012" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="8012" pos:column="33">__RPC__in</name> <name pos:line="8012" pos:column="43">BSTR</name></type> <name pos:line="8012" pos:column="48">noname</name></decl></param>,
            <comment type="block" pos:line="8013" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8013" pos:column="33">__RPC__out</name> <name pos:line="8013" pos:column="44">void</name> <type:modifier pos:line="8013" pos:column="49">*</type:modifier></type><name pos:line="8013" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8015" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="8015" pos:column="34">HRESULT</name></type> ( <name pos:line="8015" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="8015" pos:column="62">*</type:modifier><name pos:line="8015" pos:column="63">AddAttribute</name> )<parameter_list pos:line="8015" pos:column="77">( 
            <param><decl><type><name pos:line="8016" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8016" pos:column="27">*</type:modifier></type> <name pos:line="8016" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="8017" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="8017" pos:column="33">__RPC__in</name> <name pos:line="8017" pos:column="43">BSTR</name></type> <name pos:line="8017" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="8018" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="8018" pos:column="33">__RPC__in</name> <name pos:line="8018" pos:column="43">BSTR</name></type> <name pos:line="8018" pos:column="48">Value</name></decl></param>,
            <comment type="block" pos:line="8019" pos:column="13">/* [optional][idldescattr] */</comment> <param><decl><type><name pos:line="8019" pos:column="43">VARIANT</name></type> <name pos:line="8019" pos:column="51">Position</name></decl></param>,
            <comment type="block" pos:line="8020" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8020" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8020" pos:column="54">CodeAttribute</name> <type:modifier pos:line="8020" pos:column="68">*</type:modifier><type:modifier pos:line="8020" pos:column="69">*</type:modifier></type><name pos:line="8020" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8022" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="8022" pos:column="73">HRESULT</name></type> ( <name pos:line="8022" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="8022" pos:column="101">*</type:modifier><name pos:line="8022" pos:column="102">get_Parameters</name> )<parameter_list pos:line="8022" pos:column="118">( 
            <param><decl><type><name pos:line="8023" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8023" pos:column="27">*</type:modifier></type> <name pos:line="8023" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="8024" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8024" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="8024" pos:column="54">/* external definition not present */</comment> <name pos:line="8024" pos:column="92">CodeElements</name> <type:modifier pos:line="8024" pos:column="105">*</type:modifier><type:modifier pos:line="8024" pos:column="106">*</type:modifier></type><name pos:line="8024" pos:column="107">ppMembers</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8026" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="8026" pos:column="64">HRESULT</name></type> ( <name pos:line="8026" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="8026" pos:column="92">*</type:modifier><name pos:line="8026" pos:column="93">AddParameter</name> )<parameter_list pos:line="8026" pos:column="107">( 
            <param><decl><type><name pos:line="8027" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8027" pos:column="27">*</type:modifier></type> <name pos:line="8027" pos:column="29">This</name></decl></param>,
            <param><decl><type><name pos:line="8028" pos:column="13">__RPC__in</name> <name pos:line="8028" pos:column="23">BSTR</name></type> <name pos:line="8028" pos:column="28">Name</name></decl></param>,
            <param><decl><type><name pos:line="8029" pos:column="13">VARIANT</name></type> <name pos:line="8029" pos:column="21">Type</name></decl></param>,
            <comment type="block" pos:line="8030" pos:column="13">/* [optional] */</comment> <param><decl><type><name pos:line="8030" pos:column="30">VARIANT</name></type> <name pos:line="8030" pos:column="38">Position</name></decl></param>,
            <comment type="block" pos:line="8031" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8031" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="8031" pos:column="54">/* external definition not present */</comment> <name pos:line="8031" pos:column="92">CodeParameter</name> <type:modifier pos:line="8031" pos:column="106">*</type:modifier><type:modifier pos:line="8031" pos:column="107">*</type:modifier></type><name pos:line="8031" pos:column="108">ppCodeParameter</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8033" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="8033" pos:column="41">HRESULT</name></type> ( <name pos:line="8033" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="8033" pos:column="69">*</type:modifier><name pos:line="8033" pos:column="70">get_IsGeneric</name> )<parameter_list pos:line="8033" pos:column="85">( 
            <param><decl><type><name pos:line="8034" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8034" pos:column="27">*</type:modifier></type> <name pos:line="8034" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="8035" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8035" pos:column="33">__RPC__out</name> <name pos:line="8035" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="8035" pos:column="57">*</type:modifier></type><name pos:line="8035" pos:column="58">pIsGeneric</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8037" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="8037" pos:column="73">HRESULT</name></type> ( <name pos:line="8037" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="8037" pos:column="101">*</type:modifier><name pos:line="8037" pos:column="102">get_OverrideKind</name> )<parameter_list pos:line="8037" pos:column="120">( 
            <param><decl><type><name pos:line="8038" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8038" pos:column="27">*</type:modifier></type> <name pos:line="8038" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="8039" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8039" pos:column="33">__RPC__out</name> <name pos:line="8039" pos:column="44">vsCMOverrideKind</name> <type:modifier pos:line="8039" pos:column="61">*</type:modifier></type><name pos:line="8039" pos:column="62">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8041" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="8041" pos:column="73">HRESULT</name></type> ( <name pos:line="8041" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="8041" pos:column="101">*</type:modifier><name pos:line="8041" pos:column="102">put_OverrideKind</name> )<parameter_list pos:line="8041" pos:column="120">( 
            <param><decl><type><name pos:line="8042" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8042" pos:column="27">*</type:modifier></type> <name pos:line="8042" pos:column="29">This</name></decl></param>,
            <param><decl><type><name pos:line="8043" pos:column="13">vsCMOverrideKind</name></type> <name pos:line="8043" pos:column="30">Kind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8045" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="8045" pos:column="73">HRESULT</name></type> ( <name pos:line="8045" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="8045" pos:column="101">*</type:modifier><name pos:line="8045" pos:column="102">get_IsShared</name> )<parameter_list pos:line="8045" pos:column="116">( 
            <param><decl><type><name pos:line="8046" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8046" pos:column="27">*</type:modifier></type> <name pos:line="8046" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="8047" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8047" pos:column="33">__RPC__out</name> <name pos:line="8047" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="8047" pos:column="57">*</type:modifier></type><name pos:line="8047" pos:column="58">pIsShared</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8049" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="8049" pos:column="73">HRESULT</name></type> ( <name pos:line="8049" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="8049" pos:column="101">*</type:modifier><name pos:line="8049" pos:column="102">put_IsShared</name> )<parameter_list pos:line="8049" pos:column="116">( 
            <param><decl><type><name pos:line="8050" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8050" pos:column="27">*</type:modifier></type> <name pos:line="8050" pos:column="29">This</name></decl></param>,
            <param><decl><type><name pos:line="8051" pos:column="13">VARIANT_BOOL</name></type> <name pos:line="8051" pos:column="26">Shared</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8053" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="8053" pos:column="41">HRESULT</name></type> ( <name pos:line="8053" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="8053" pos:column="69">*</type:modifier><name pos:line="8053" pos:column="70">get_IsDefault</name> )<parameter_list pos:line="8053" pos:column="85">( 
            <param><decl><type><name pos:line="8054" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8054" pos:column="27">*</type:modifier></type> <name pos:line="8054" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="8055" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8055" pos:column="33">__RPC__out</name> <name pos:line="8055" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="8055" pos:column="57">*</type:modifier></type><name pos:line="8055" pos:column="58">pIsDefault</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8057" pos:column="9">/* [helpstring][propput][id] */</comment> <function_decl><type><name pos:line="8057" pos:column="41">HRESULT</name></type> ( <name pos:line="8057" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="8057" pos:column="69">*</type:modifier><name pos:line="8057" pos:column="70">put_IsDefault</name> )<parameter_list pos:line="8057" pos:column="85">( 
            <param><decl><type><name pos:line="8058" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8058" pos:column="27">*</type:modifier></type> <name pos:line="8058" pos:column="29">This</name></decl></param>,
            <param><decl><type><name pos:line="8059" pos:column="13">VARIANT_BOOL</name></type> <name pos:line="8059" pos:column="26">Default</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8061" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="8061" pos:column="73">HRESULT</name></type> ( <name pos:line="8061" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="8061" pos:column="101">*</type:modifier><name pos:line="8061" pos:column="102">get_Parent2</name> )<parameter_list pos:line="8061" pos:column="115">( 
            <param><decl><type><name pos:line="8062" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8062" pos:column="27">*</type:modifier></type> <name pos:line="8062" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="8063" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8063" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="8063" pos:column="54">/* external definition not present */</comment> <name pos:line="8063" pos:column="92">CodeElement</name> <type:modifier pos:line="8063" pos:column="104">*</type:modifier><type:modifier pos:line="8063" pos:column="105">*</type:modifier></type><name pos:line="8063" pos:column="106">pParent</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8065" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="8065" pos:column="64">HRESULT</name></type> ( <name pos:line="8065" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="8065" pos:column="92">*</type:modifier><name pos:line="8065" pos:column="93">RemoveParameter</name> )<parameter_list pos:line="8065" pos:column="110">( 
            <param><decl><type><name pos:line="8066" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8066" pos:column="27">*</type:modifier></type> <name pos:line="8066" pos:column="29">This</name></decl></param>,
            <param><decl><type><name pos:line="8067" pos:column="13">VARIANT</name></type> <name pos:line="8067" pos:column="21">Element</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8069" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="8069" pos:column="41">HRESULT</name></type> ( <name pos:line="8069" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="8069" pos:column="69">*</type:modifier><name pos:line="8069" pos:column="70">get_ReadWrite</name> )<parameter_list pos:line="8069" pos:column="85">( 
            <param><decl><type><name pos:line="8070" pos:column="13">CodeProperty2</name> <type:modifier pos:line="8070" pos:column="27">*</type:modifier></type> <name pos:line="8070" pos:column="29">This</name></decl></param>,
            <comment type="block" pos:line="8071" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8071" pos:column="33">__RPC__out</name> <name pos:line="8071" pos:column="44">vsCMPropertyKind</name> <type:modifier pos:line="8071" pos:column="61">*</type:modifier></type><name pos:line="8071" pos:column="62">pPropertyKind</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8073" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8074" pos:column="7">CodeProperty2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8076" pos:column="5">interface</name></type> <name pos:line="8076" pos:column="15">CodeProperty2</name>
    <argument_list pos:line="8077" pos:column="5">{
        <argument><expr><name pos:line="8078" pos:column="9">CONST_VTBL</name> struct <name pos:line="8078" pos:column="27">CodeProperty2Vtbl</name> <op:operator pos:line="8078" pos:column="45">*</op:operator><name pos:line="8078" pos:column="46">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8083" pos:column="1">#<cpp:directive pos:line="8083" pos:column="2">ifdef</cpp:directive> <name pos:line="8083" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8086" pos:column="1">#<cpp:directive pos:line="8086" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8086" pos:column="9">CodeProperty2_QueryInterface</name><parameter_list pos:line="8086" pos:column="37">(<param><type><name pos:line="8086" pos:column="38">This</name></type></param>,<param><type><name pos:line="8086" pos:column="43">riid</name></type></param>,<param><type><name pos:line="8086" pos:column="48">ppvObj</name></type></param>,<param><type><name pos:line="8086" pos:column="55">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8087" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8089" pos:column="1">#<cpp:directive pos:line="8089" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8089" pos:column="9">CodeProperty2_AddRef</name><parameter_list pos:line="8089" pos:column="29">(<param><type><name pos:line="8089" pos:column="30">This</name></type></param>,<param><type><name pos:line="8089" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8090" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8092" pos:column="1">#<cpp:directive pos:line="8092" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8092" pos:column="9">CodeProperty2_Release</name><parameter_list pos:line="8092" pos:column="30">(<param><type><name pos:line="8092" pos:column="31">This</name></type></param>,<param><type><name pos:line="8092" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8093" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8095" pos:column="1">#<cpp:directive pos:line="8095" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8095" pos:column="9">CodeProperty2_GetTypeInfoCount</name><parameter_list pos:line="8095" pos:column="39">(<param><type><name pos:line="8095" pos:column="40">This</name></type></param>,<param><type><name pos:line="8095" pos:column="45">pctinfo</name></type></param>,<param><type><name pos:line="8095" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8096" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8098" pos:column="1">#<cpp:directive pos:line="8098" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8098" pos:column="9">CodeProperty2_GetTypeInfo</name><parameter_list pos:line="8098" pos:column="34">(<param><type><name pos:line="8098" pos:column="35">This</name></type></param>,<param><type><name pos:line="8098" pos:column="40">itinfo</name></type></param>,<param><type><name pos:line="8098" pos:column="47">lcid</name></type></param>,<param><type><name pos:line="8098" pos:column="52">pptinfo</name></type></param>,<param><type><name pos:line="8098" pos:column="60">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8099" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8101" pos:column="1">#<cpp:directive pos:line="8101" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8101" pos:column="9">CodeProperty2_GetIDsOfNames</name><parameter_list pos:line="8101" pos:column="36">(<param><type><name pos:line="8101" pos:column="37">This</name></type></param>,<param><type><name pos:line="8101" pos:column="42">riid</name></type></param>,<param><type><name pos:line="8101" pos:column="47">rgszNames</name></type></param>,<param><type><name pos:line="8101" pos:column="57">cNames</name></type></param>,<param><type><name pos:line="8101" pos:column="64">lcid</name></type></param>,<param><type><name pos:line="8101" pos:column="69">rgdispid</name></type></param>,<param><type><name pos:line="8101" pos:column="78">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8102" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8104" pos:column="1">#<cpp:directive pos:line="8104" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8104" pos:column="9">CodeProperty2_Invoke</name><parameter_list pos:line="8104" pos:column="29">(<param><type><name pos:line="8104" pos:column="30">This</name></type></param>,<param><type><name pos:line="8104" pos:column="35">dispidMember</name></type></param>,<param><type><name pos:line="8104" pos:column="48">riid</name></type></param>,<param><type><name pos:line="8104" pos:column="53">lcid</name></type></param>,<param><type><name pos:line="8104" pos:column="58">wFlags</name></type></param>,<param><type><name pos:line="8104" pos:column="65">pdispparams</name></type></param>,<param><type><name pos:line="8104" pos:column="77">pvarResult</name></type></param>,<param><type><name pos:line="8104" pos:column="88">pexcepinfo</name></type></param>,<param><type><name pos:line="8104" pos:column="99">puArgErr</name></type></param>,<param><type><name pos:line="8104" pos:column="108">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8105" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8107" pos:column="1">#<cpp:directive pos:line="8107" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8107" pos:column="9">CodeProperty2_get_DTE</name><parameter_list pos:line="8107" pos:column="30">(<param><type><name pos:line="8107" pos:column="31">This</name></type></param>,<param><type><name pos:line="8107" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8108" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8110" pos:column="1">#<cpp:directive pos:line="8110" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8110" pos:column="9">CodeProperty2_get_Collection</name><parameter_list pos:line="8110" pos:column="37">(<param><type><name pos:line="8110" pos:column="38">This</name></type></param>,<param><type><name pos:line="8110" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8111" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8113" pos:column="1">#<cpp:directive pos:line="8113" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8113" pos:column="9">CodeProperty2_get_Name</name><parameter_list pos:line="8113" pos:column="31">(<param><type><name pos:line="8113" pos:column="32">This</name></type></param>,<param><type><name pos:line="8113" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8114" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8116" pos:column="1">#<cpp:directive pos:line="8116" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8116" pos:column="9">CodeProperty2_put_Name</name><parameter_list pos:line="8116" pos:column="31">(<param><type><name pos:line="8116" pos:column="32">This</name></type></param>,<param><type><name pos:line="8116" pos:column="37">noname</name></type></param>,<param><type><name pos:line="8116" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8117" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8119" pos:column="1">#<cpp:directive pos:line="8119" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8119" pos:column="9">CodeProperty2_get_FullName</name><parameter_list pos:line="8119" pos:column="35">(<param><type><name pos:line="8119" pos:column="36">This</name></type></param>,<param><type><name pos:line="8119" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8120" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8122" pos:column="1">#<cpp:directive pos:line="8122" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8122" pos:column="9">CodeProperty2_get_ProjectItem</name><parameter_list pos:line="8122" pos:column="38">(<param><type><name pos:line="8122" pos:column="39">This</name></type></param>,<param><type><name pos:line="8122" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8123" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItem(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8125" pos:column="1">#<cpp:directive pos:line="8125" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8125" pos:column="9">CodeProperty2_get_Kind</name><parameter_list pos:line="8125" pos:column="31">(<param><type><name pos:line="8125" pos:column="32">This</name></type></param>,<param><type><name pos:line="8125" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8126" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Kind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8128" pos:column="1">#<cpp:directive pos:line="8128" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8128" pos:column="9">CodeProperty2_get_IsCodeType</name><parameter_list pos:line="8128" pos:column="37">(<param><type><name pos:line="8128" pos:column="38">This</name></type></param>,<param><type><name pos:line="8128" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8129" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsCodeType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8131" pos:column="1">#<cpp:directive pos:line="8131" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8131" pos:column="9">CodeProperty2_get_InfoLocation</name><parameter_list pos:line="8131" pos:column="39">(<param><type><name pos:line="8131" pos:column="40">This</name></type></param>,<param><type><name pos:line="8131" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8132" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_InfoLocation(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8134" pos:column="1">#<cpp:directive pos:line="8134" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8134" pos:column="9">CodeProperty2_get_Children</name><parameter_list pos:line="8134" pos:column="35">(<param><type><name pos:line="8134" pos:column="36">This</name></type></param>,<param><type><name pos:line="8134" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8135" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Children(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8137" pos:column="1">#<cpp:directive pos:line="8137" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8137" pos:column="9">CodeProperty2_get_Language</name><parameter_list pos:line="8137" pos:column="35">(<param><type><name pos:line="8137" pos:column="36">This</name></type></param>,<param><type><name pos:line="8137" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8138" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8140" pos:column="1">#<cpp:directive pos:line="8140" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8140" pos:column="9">CodeProperty2_get_StartPoint</name><parameter_list pos:line="8140" pos:column="37">(<param><type><name pos:line="8140" pos:column="38">This</name></type></param>,<param><type><name pos:line="8140" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8141" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8143" pos:column="1">#<cpp:directive pos:line="8143" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8143" pos:column="9">CodeProperty2_get_EndPoint</name><parameter_list pos:line="8143" pos:column="35">(<param><type><name pos:line="8143" pos:column="36">This</name></type></param>,<param><type><name pos:line="8143" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8144" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_EndPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8146" pos:column="1">#<cpp:directive pos:line="8146" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8146" pos:column="9">CodeProperty2_get_ExtenderNames</name><parameter_list pos:line="8146" pos:column="40">(<param><type><name pos:line="8146" pos:column="41">This</name></type></param>,<param><type><name pos:line="8146" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8147" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8149" pos:column="1">#<cpp:directive pos:line="8149" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8149" pos:column="9">CodeProperty2_get_Extender</name><parameter_list pos:line="8149" pos:column="35">(<param><type><name pos:line="8149" pos:column="36">This</name></type></param>,<param><type><name pos:line="8149" pos:column="41">ExtenderName</name></type></param>,<param><type><name pos:line="8149" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8150" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8152" pos:column="1">#<cpp:directive pos:line="8152" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8152" pos:column="9">CodeProperty2_get_ExtenderCATID</name><parameter_list pos:line="8152" pos:column="40">(<param><type><name pos:line="8152" pos:column="41">This</name></type></param>,<param><type><name pos:line="8152" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8153" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8155" pos:column="1">#<cpp:directive pos:line="8155" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8155" pos:column="9">CodeProperty2_GetStartPoint</name><parameter_list pos:line="8155" pos:column="36">(<param><type><name pos:line="8155" pos:column="37">This</name></type></param>,<param><type><name pos:line="8155" pos:column="42">Part</name></type></param>,<param><type><name pos:line="8155" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8156" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetStartPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8158" pos:column="1">#<cpp:directive pos:line="8158" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8158" pos:column="9">CodeProperty2_GetEndPoint</name><parameter_list pos:line="8158" pos:column="34">(<param><type><name pos:line="8158" pos:column="35">This</name></type></param>,<param><type><name pos:line="8158" pos:column="40">Part</name></type></param>,<param><type><name pos:line="8158" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8159" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetEndPoint(This,Part,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8161" pos:column="1">#<cpp:directive pos:line="8161" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8161" pos:column="9">CodeProperty2_get_Parent</name><parameter_list pos:line="8161" pos:column="33">(<param><type><name pos:line="8161" pos:column="34">This</name></type></param>,<param><type><name pos:line="8161" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8162" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8164" pos:column="1">#<cpp:directive pos:line="8164" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8164" pos:column="9">CodeProperty2_get_Prototype</name><parameter_list pos:line="8164" pos:column="36">(<param><type><name pos:line="8164" pos:column="37">This</name></type></param>,<param><type><name pos:line="8164" pos:column="42">Flags</name></type></param>,<param><type><name pos:line="8164" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8165" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Prototype(This,Flags,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8167" pos:column="1">#<cpp:directive pos:line="8167" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8167" pos:column="9">CodeProperty2_put_Type</name><parameter_list pos:line="8167" pos:column="31">(<param><type><name pos:line="8167" pos:column="32">This</name></type></param>,<param><type><name pos:line="8167" pos:column="37">noname</name></type></param>,<param><type><name pos:line="8167" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8168" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Type(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8170" pos:column="1">#<cpp:directive pos:line="8170" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8170" pos:column="9">CodeProperty2_get_Type</name><parameter_list pos:line="8170" pos:column="31">(<param><type><name pos:line="8170" pos:column="32">This</name></type></param>,<param><type><name pos:line="8170" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8171" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Type(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8173" pos:column="1">#<cpp:directive pos:line="8173" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8173" pos:column="9">CodeProperty2_get_Getter</name><parameter_list pos:line="8173" pos:column="33">(<param><type><name pos:line="8173" pos:column="34">This</name></type></param>,<param><type><name pos:line="8173" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8174" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Getter(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8176" pos:column="1">#<cpp:directive pos:line="8176" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8176" pos:column="9">CodeProperty2_put_Getter</name><parameter_list pos:line="8176" pos:column="33">(<param><type><name pos:line="8176" pos:column="34">This</name></type></param>,<param><type><name pos:line="8176" pos:column="39">noname</name></type></param>,<param><type><name pos:line="8176" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8177" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Getter(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8179" pos:column="1">#<cpp:directive pos:line="8179" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8179" pos:column="9">CodeProperty2_get_Setter</name><parameter_list pos:line="8179" pos:column="33">(<param><type><name pos:line="8179" pos:column="34">This</name></type></param>,<param><type><name pos:line="8179" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8180" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Setter(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8182" pos:column="1">#<cpp:directive pos:line="8182" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8182" pos:column="9">CodeProperty2_put_Setter</name><parameter_list pos:line="8182" pos:column="33">(<param><type><name pos:line="8182" pos:column="34">This</name></type></param>,<param><type><name pos:line="8182" pos:column="39">noname</name></type></param>,<param><type><name pos:line="8182" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8183" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Setter(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8185" pos:column="1">#<cpp:directive pos:line="8185" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8185" pos:column="9">CodeProperty2_put_Access</name><parameter_list pos:line="8185" pos:column="33">(<param><type><name pos:line="8185" pos:column="34">This</name></type></param>,<param><type><name pos:line="8185" pos:column="39">noname</name></type></param>,<param><type><name pos:line="8185" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8186" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Access(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8188" pos:column="1">#<cpp:directive pos:line="8188" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8188" pos:column="9">CodeProperty2_get_Access</name><parameter_list pos:line="8188" pos:column="33">(<param><type><name pos:line="8188" pos:column="34">This</name></type></param>,<param><type><name pos:line="8188" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8189" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Access(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8191" pos:column="1">#<cpp:directive pos:line="8191" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8191" pos:column="9">CodeProperty2_get_Attributes</name><parameter_list pos:line="8191" pos:column="37">(<param><type><name pos:line="8191" pos:column="38">This</name></type></param>,<param><type><name pos:line="8191" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8192" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Attributes(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8194" pos:column="1">#<cpp:directive pos:line="8194" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8194" pos:column="9">CodeProperty2_get_DocComment</name><parameter_list pos:line="8194" pos:column="37">(<param><type><name pos:line="8194" pos:column="38">This</name></type></param>,<param><type><name pos:line="8194" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8195" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DocComment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8197" pos:column="1">#<cpp:directive pos:line="8197" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8197" pos:column="9">CodeProperty2_put_DocComment</name><parameter_list pos:line="8197" pos:column="37">(<param><type><name pos:line="8197" pos:column="38">This</name></type></param>,<param><type><name pos:line="8197" pos:column="43">noname</name></type></param>,<param><type><name pos:line="8197" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8198" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DocComment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8200" pos:column="1">#<cpp:directive pos:line="8200" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8200" pos:column="9">CodeProperty2_get_Comment</name><parameter_list pos:line="8200" pos:column="34">(<param><type><name pos:line="8200" pos:column="35">This</name></type></param>,<param><type><name pos:line="8200" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8201" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Comment(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8203" pos:column="1">#<cpp:directive pos:line="8203" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8203" pos:column="9">CodeProperty2_put_Comment</name><parameter_list pos:line="8203" pos:column="34">(<param><type><name pos:line="8203" pos:column="35">This</name></type></param>,<param><type><name pos:line="8203" pos:column="40">noname</name></type></param>,<param><type><name pos:line="8203" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8204" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Comment(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8206" pos:column="1">#<cpp:directive pos:line="8206" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8206" pos:column="9">CodeProperty2_AddAttribute</name><parameter_list pos:line="8206" pos:column="35">(<param><type><name pos:line="8206" pos:column="36">This</name></type></param>,<param><type><name pos:line="8206" pos:column="41">Name</name></type></param>,<param><type><name pos:line="8206" pos:column="46">Value</name></type></param>,<param><type><name pos:line="8206" pos:column="52">Position</name></type></param>,<param><type><name pos:line="8206" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8207" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddAttribute(This,Name,Value,Position,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="8210" pos:column="1">#<cpp:directive pos:line="8210" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8210" pos:column="9">CodeProperty2_get_Parameters</name><parameter_list pos:line="8210" pos:column="37">(<param><type><name pos:line="8210" pos:column="38">This</name></type></param>,<param><type><name pos:line="8210" pos:column="43">ppMembers</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8211" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parameters(This,ppMembers) )</cpp:value></cpp:define> 

<cpp:define pos:line="8213" pos:column="1">#<cpp:directive pos:line="8213" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8213" pos:column="9">CodeProperty2_AddParameter</name><parameter_list pos:line="8213" pos:column="35">(<param><type><name pos:line="8213" pos:column="36">This</name></type></param>,<param><type><name pos:line="8213" pos:column="41">Name</name></type></param>,<param><type><name pos:line="8213" pos:column="46">Type</name></type></param>,<param><type><name pos:line="8213" pos:column="51">Position</name></type></param>,<param><type><name pos:line="8213" pos:column="60">ppCodeParameter</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8214" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddParameter(This,Name,Type,Position,ppCodeParameter) )</cpp:value></cpp:define> 

<cpp:define pos:line="8216" pos:column="1">#<cpp:directive pos:line="8216" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8216" pos:column="9">CodeProperty2_get_IsGeneric</name><parameter_list pos:line="8216" pos:column="36">(<param><type><name pos:line="8216" pos:column="37">This</name></type></param>,<param><type><name pos:line="8216" pos:column="42">pIsGeneric</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8217" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsGeneric(This,pIsGeneric) )</cpp:value></cpp:define> 

<cpp:define pos:line="8219" pos:column="1">#<cpp:directive pos:line="8219" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8219" pos:column="9">CodeProperty2_get_OverrideKind</name><parameter_list pos:line="8219" pos:column="39">(<param><type><name pos:line="8219" pos:column="40">This</name></type></param>,<param><type><name pos:line="8219" pos:column="45">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8220" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_OverrideKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="8222" pos:column="1">#<cpp:directive pos:line="8222" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8222" pos:column="9">CodeProperty2_put_OverrideKind</name><parameter_list pos:line="8222" pos:column="39">(<param><type><name pos:line="8222" pos:column="40">This</name></type></param>,<param><type><name pos:line="8222" pos:column="45">Kind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8223" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_OverrideKind(This,Kind) )</cpp:value></cpp:define> 

<cpp:define pos:line="8225" pos:column="1">#<cpp:directive pos:line="8225" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8225" pos:column="9">CodeProperty2_get_IsShared</name><parameter_list pos:line="8225" pos:column="35">(<param><type><name pos:line="8225" pos:column="36">This</name></type></param>,<param><type><name pos:line="8225" pos:column="41">pIsShared</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8226" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsShared(This,pIsShared) )</cpp:value></cpp:define> 

<cpp:define pos:line="8228" pos:column="1">#<cpp:directive pos:line="8228" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8228" pos:column="9">CodeProperty2_put_IsShared</name><parameter_list pos:line="8228" pos:column="35">(<param><type><name pos:line="8228" pos:column="36">This</name></type></param>,<param><type><name pos:line="8228" pos:column="41">Shared</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8229" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_IsShared(This,Shared) )</cpp:value></cpp:define> 

<cpp:define pos:line="8231" pos:column="1">#<cpp:directive pos:line="8231" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8231" pos:column="9">CodeProperty2_get_IsDefault</name><parameter_list pos:line="8231" pos:column="36">(<param><type><name pos:line="8231" pos:column="37">This</name></type></param>,<param><type><name pos:line="8231" pos:column="42">pIsDefault</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8232" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsDefault(This,pIsDefault) )</cpp:value></cpp:define> 

<cpp:define pos:line="8234" pos:column="1">#<cpp:directive pos:line="8234" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8234" pos:column="9">CodeProperty2_put_IsDefault</name><parameter_list pos:line="8234" pos:column="36">(<param><type><name pos:line="8234" pos:column="37">This</name></type></param>,<param><type><name pos:line="8234" pos:column="42">Default</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8235" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_IsDefault(This,Default) )</cpp:value></cpp:define> 

<cpp:define pos:line="8237" pos:column="1">#<cpp:directive pos:line="8237" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8237" pos:column="9">CodeProperty2_get_Parent2</name><parameter_list pos:line="8237" pos:column="34">(<param><type><name pos:line="8237" pos:column="35">This</name></type></param>,<param><type><name pos:line="8237" pos:column="40">pParent</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8238" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent2(This,pParent) )</cpp:value></cpp:define> 

<cpp:define pos:line="8240" pos:column="1">#<cpp:directive pos:line="8240" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8240" pos:column="9">CodeProperty2_RemoveParameter</name><parameter_list pos:line="8240" pos:column="38">(<param><type><name pos:line="8240" pos:column="39">This</name></type></param>,<param><type><name pos:line="8240" pos:column="44">Element</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8241" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveParameter(This,Element) )</cpp:value></cpp:define> 

<cpp:define pos:line="8243" pos:column="1">#<cpp:directive pos:line="8243" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8243" pos:column="9">CodeProperty2_get_ReadWrite</name><parameter_list pos:line="8243" pos:column="36">(<param><type><name pos:line="8243" pos:column="37">This</name></type></param>,<param><type><name pos:line="8243" pos:column="42">pPropertyKind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8244" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ReadWrite(This,pPropertyKind) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8246" pos:column="1">#<cpp:directive pos:line="8246" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8246" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8249" pos:column="1">#<cpp:directive pos:line="8249" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8249" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8254" pos:column="1">#<cpp:directive pos:line="8254" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8254" pos:column="9">/* __CodeProperty2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8257" pos:column="1">#<cpp:directive pos:line="8257" pos:column="2">ifndef</cpp:directive> <name pos:line="8257" pos:column="9">___dispCodeModelEvents_DISPINTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8258" pos:column="1">#<cpp:directive pos:line="8258" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8258" pos:column="9">___dispCodeModelEvents_DISPINTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8260" pos:column="1">/* dispinterface _dispCodeModelEvents */</comment>
<comment type="block" pos:line="8261" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="8264" pos:column="1">EXTERN_C</name> <specifier pos:line="8264" pos:column="10">const</specifier> <name pos:line="8264" pos:column="16">IID</name></type> <name pos:line="8264" pos:column="20">DIID__dispCodeModelEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="8266" pos:column="1">#<cpp:directive pos:line="8266" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8266" pos:column="5">defined</name><argument_list pos:line="8266" pos:column="12">(<argument><expr><name pos:line="8266" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8266" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8266" pos:column="29">!</op:operator><call><name pos:line="8266" pos:column="30">defined</name><argument_list pos:line="8266" pos:column="37">(<argument><expr><name pos:line="8266" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <macro><name pos:line="8268" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8268" pos:column="19">(<argument pos:line="8268" pos:column="20">"4EA8090E-D289-4D56-98CD-C48DD2853B2E"</argument>)</argument_list></macro>
    <label><name pos:line="8269" pos:column="5">_dispCodeModelEvents</name> :</label> <expr_stmt><expr pos:line="8269" pos:column="28">public <name pos:line="8269" pos:column="35">IDispatch</name>
    <block pos:line="8270" pos:column="5">{
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8273" pos:column="1">#<cpp:directive pos:line="8273" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8273" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8275" pos:column="5">typedef <type><struct pos:line="8275" pos:column="13">struct <name pos:line="8275" pos:column="20">_dispCodeModelEventsVtbl</name>
    <block pos:line="8276" pos:column="5">{<public type="default" pos:line="8276" pos:column="6">
        <function_decl><type><name pos:line="8277" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8279" pos:column="9">HRESULT</name></type> ( <name pos:line="8279" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8279" pos:column="37">*</type:modifier><name pos:line="8279" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8279" pos:column="54">( 
            <param><decl><type><name pos:line="8280" pos:column="13">_dispCodeModelEvents</name> <type:modifier pos:line="8280" pos:column="34">*</type:modifier></type> <name pos:line="8280" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="8281" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8281" pos:column="24">__RPC__in</name> <name pos:line="8281" pos:column="34">REFIID</name></type> <name pos:line="8281" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8282" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8283" pos:column="13">__RPC__deref_out</name>  <name pos:line="8283" pos:column="31">void</name> <type:modifier pos:line="8283" pos:column="36">*</type:modifier><type:modifier pos:line="8283" pos:column="37">*</type:modifier></type><name pos:line="8283" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8285" pos:column="9">ULONG</name></type> ( <name pos:line="8285" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8285" pos:column="35">*</type:modifier><name pos:line="8285" pos:column="36">AddRef</name> )<parameter_list pos:line="8285" pos:column="44">( 
            <param><decl><type><name pos:line="8286" pos:column="13">_dispCodeModelEvents</name> <type:modifier pos:line="8286" pos:column="34">*</type:modifier></type> <name pos:line="8286" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8288" pos:column="9">ULONG</name></type> ( <name pos:line="8288" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8288" pos:column="35">*</type:modifier><name pos:line="8288" pos:column="36">Release</name> )<parameter_list pos:line="8288" pos:column="45">( 
            <param><decl><type><name pos:line="8289" pos:column="13">_dispCodeModelEvents</name> <type:modifier pos:line="8289" pos:column="34">*</type:modifier></type> <name pos:line="8289" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8291" pos:column="9">HRESULT</name></type> ( <name pos:line="8291" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8291" pos:column="37">*</type:modifier><name pos:line="8291" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="8291" pos:column="56">( 
            <param><decl><type><name pos:line="8292" pos:column="13">_dispCodeModelEvents</name> <type:modifier pos:line="8292" pos:column="34">*</type:modifier></type> <name pos:line="8292" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="8293" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8293" pos:column="25">__RPC__out</name> <name pos:line="8293" pos:column="36">UINT</name> <type:modifier pos:line="8293" pos:column="41">*</type:modifier></type><name pos:line="8293" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8295" pos:column="9">HRESULT</name></type> ( <name pos:line="8295" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8295" pos:column="37">*</type:modifier><name pos:line="8295" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="8295" pos:column="51">( 
            <param><decl><type><name pos:line="8296" pos:column="13">_dispCodeModelEvents</name> <type:modifier pos:line="8296" pos:column="34">*</type:modifier></type> <name pos:line="8296" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="8297" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8297" pos:column="24">UINT</name></type> <name pos:line="8297" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="8298" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8298" pos:column="24">LCID</name></type> <name pos:line="8298" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="8299" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8299" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="8299" pos:column="46">ITypeInfo</name> <type:modifier pos:line="8299" pos:column="56">*</type:modifier><type:modifier pos:line="8299" pos:column="57">*</type:modifier></type><name pos:line="8299" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8301" pos:column="9">HRESULT</name> <argument_list pos:line="8301" pos:column="17">( <argument pos:line="8301" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="8301" pos:column="53">(</op:operator> 
            <name pos:line="8302" pos:column="13">_dispCodeModelEvents</name> <op:operator pos:line="8302" pos:column="34">*</op:operator> <name pos:line="8302" pos:column="36">This</name><op:operator pos:line="8302" pos:column="40">,</op:operator>
            <comment type="block" pos:line="8303" pos:column="13">/* [in] */</comment> <name pos:line="8303" pos:column="24">__RPC__in</name> <name pos:line="8303" pos:column="34">REFIID</name> <name pos:line="8303" pos:column="41">riid</name><op:operator pos:line="8303" pos:column="45">,</op:operator>
            <comment type="block" pos:line="8304" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="8304" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="8304" pos:column="54">(<argument pos:line="8304" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="8304" pos:column="63">LPOLESTR</name> <op:operator pos:line="8304" pos:column="72">*</op:operator><name pos:line="8304" pos:column="73">rgszNames</name><op:operator pos:line="8304" pos:column="82">,</op:operator>
            <comment type="block" pos:line="8305" pos:column="13">/* [range][in] */</comment> <name pos:line="8305" pos:column="31">UINT</name> <name pos:line="8305" pos:column="36">cNames</name><op:operator pos:line="8305" pos:column="42">,</op:operator>
            <comment type="block" pos:line="8306" pos:column="13">/* [in] */</comment> <name pos:line="8306" pos:column="24">LCID</name> <name pos:line="8306" pos:column="29">lcid</name><op:operator pos:line="8306" pos:column="33">,</op:operator>
            <comment type="block" pos:line="8307" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="8307" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="8307" pos:column="56">(<argument pos:line="8307" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="8307" pos:column="65">DISPID</name> <op:operator pos:line="8307" pos:column="72">*</op:operator><name pos:line="8307" pos:column="73">rgDispId</name><op:operator pos:line="8307" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="8309" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="8309" pos:column="23">HRESULT</name></type> ( <name pos:line="8309" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="8309" pos:column="51">*</type:modifier><name pos:line="8309" pos:column="52">Invoke</name> )<parameter_list pos:line="8309" pos:column="60">( 
            <param><decl><type><name pos:line="8310" pos:column="13">_dispCodeModelEvents</name> <type:modifier pos:line="8310" pos:column="34">*</type:modifier></type> <name pos:line="8310" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="8311" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8311" pos:column="24">DISPID</name></type> <name pos:line="8311" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="8312" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8312" pos:column="24">REFIID</name></type> <name pos:line="8312" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="8313" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8313" pos:column="24">LCID</name></type> <name pos:line="8313" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="8314" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8314" pos:column="24">WORD</name></type> <name pos:line="8314" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="8315" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="8315" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="8315" pos:column="40">*</type:modifier></type><name pos:line="8315" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="8316" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8316" pos:column="25">VARIANT</name> <type:modifier pos:line="8316" pos:column="33">*</type:modifier></type><name pos:line="8316" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="8317" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8317" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="8317" pos:column="35">*</type:modifier></type><name pos:line="8317" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="8318" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8318" pos:column="25">UINT</name> <type:modifier pos:line="8318" pos:column="30">*</type:modifier></type><name pos:line="8318" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8320" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8321" pos:column="7">_dispCodeModelEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8323" pos:column="5">interface</name></type> <name pos:line="8323" pos:column="15">_dispCodeModelEvents</name>
    <argument_list pos:line="8324" pos:column="5">{
        <argument><expr><name pos:line="8325" pos:column="9">CONST_VTBL</name> struct <name pos:line="8325" pos:column="27">_dispCodeModelEventsVtbl</name> <op:operator pos:line="8325" pos:column="52">*</op:operator><name pos:line="8325" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8330" pos:column="1">#<cpp:directive pos:line="8330" pos:column="2">ifdef</cpp:directive> <name pos:line="8330" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8333" pos:column="1">#<cpp:directive pos:line="8333" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8333" pos:column="9">_dispCodeModelEvents_QueryInterface</name><parameter_list pos:line="8333" pos:column="44">(<param><type><name pos:line="8333" pos:column="45">This</name></type></param>,<param><type><name pos:line="8333" pos:column="50">riid</name></type></param>,<param><type><name pos:line="8333" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8334" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8336" pos:column="1">#<cpp:directive pos:line="8336" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8336" pos:column="9">_dispCodeModelEvents_AddRef</name><parameter_list pos:line="8336" pos:column="36">(<param><type><name pos:line="8336" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8337" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8339" pos:column="1">#<cpp:directive pos:line="8339" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8339" pos:column="9">_dispCodeModelEvents_Release</name><parameter_list pos:line="8339" pos:column="37">(<param><type><name pos:line="8339" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8340" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8343" pos:column="1">#<cpp:directive pos:line="8343" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8343" pos:column="9">_dispCodeModelEvents_GetTypeInfoCount</name><parameter_list pos:line="8343" pos:column="46">(<param><type><name pos:line="8343" pos:column="47">This</name></type></param>,<param><type><name pos:line="8343" pos:column="52">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8344" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="8346" pos:column="1">#<cpp:directive pos:line="8346" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8346" pos:column="9">_dispCodeModelEvents_GetTypeInfo</name><parameter_list pos:line="8346" pos:column="41">(<param><type><name pos:line="8346" pos:column="42">This</name></type></param>,<param><type><name pos:line="8346" pos:column="47">iTInfo</name></type></param>,<param><type><name pos:line="8346" pos:column="54">lcid</name></type></param>,<param><type><name pos:line="8346" pos:column="59">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8347" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="8349" pos:column="1">#<cpp:directive pos:line="8349" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8349" pos:column="9">_dispCodeModelEvents_GetIDsOfNames</name><parameter_list pos:line="8349" pos:column="43">(<param><type><name pos:line="8349" pos:column="44">This</name></type></param>,<param><type><name pos:line="8349" pos:column="49">riid</name></type></param>,<param><type><name pos:line="8349" pos:column="54">rgszNames</name></type></param>,<param><type><name pos:line="8349" pos:column="64">cNames</name></type></param>,<param><type><name pos:line="8349" pos:column="71">lcid</name></type></param>,<param><type><name pos:line="8349" pos:column="76">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8350" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="8352" pos:column="1">#<cpp:directive pos:line="8352" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8352" pos:column="9">_dispCodeModelEvents_Invoke</name><parameter_list pos:line="8352" pos:column="36">(<param><type><name pos:line="8352" pos:column="37">This</name></type></param>,<param><type><name pos:line="8352" pos:column="42">dispIdMember</name></type></param>,<param><type><name pos:line="8352" pos:column="55">riid</name></type></param>,<param><type><name pos:line="8352" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="8352" pos:column="65">wFlags</name></type></param>,<param><type><name pos:line="8352" pos:column="72">pDispParams</name></type></param>,<param><type><name pos:line="8352" pos:column="84">pVarResult</name></type></param>,<param><type><name pos:line="8352" pos:column="95">pExcepInfo</name></type></param>,<param><type><name pos:line="8352" pos:column="106">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8353" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8355" pos:column="1">#<cpp:directive pos:line="8355" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8355" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8358" pos:column="1">#<cpp:directive pos:line="8358" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8358" pos:column="9">/* C style interface */</comment>


<cpp:endif pos:line="8361" pos:column="1">#<cpp:directive pos:line="8361" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8361" pos:column="9">/* ___dispCodeModelEvents_DISPINTERFACE_DEFINED__ */</comment>


<decl_stmt><decl><type><name pos:line="8364" pos:column="1">EXTERN_C</name> <specifier pos:line="8364" pos:column="10">const</specifier> <name pos:line="8364" pos:column="16">CLSID</name></type> <name pos:line="8364" pos:column="22">CLSID_CodeModelEvents</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="8366" pos:column="1">#<cpp:directive pos:line="8366" pos:column="2">ifdef</cpp:directive> <name pos:line="8366" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="8368" pos:column="1">class</type> <name pos:line="8368" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="8368" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="8368" pos:column="21">"B2FA9979-35EB-4CA2-B467-7370152E53B7"</lit:literal></expr></argument>)</argument_list>
<name pos:line="8369" pos:column="1">CodeModelEvents</name></decl>;</decl_stmt>
<cpp:endif pos:line="8370" pos:column="1">#<cpp:directive pos:line="8370" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:ifndef pos:line="8372" pos:column="1">#<cpp:directive pos:line="8372" pos:column="2">ifndef</cpp:directive> <name pos:line="8372" pos:column="9">___CodeModelEventsRoot_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8373" pos:column="1">#<cpp:directive pos:line="8373" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8373" pos:column="9">___CodeModelEventsRoot_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8375" pos:column="1">/* interface _CodeModelEventsRoot */</comment>
<comment type="block" pos:line="8376" pos:column="1">/* [hidden][object][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="8379" pos:column="1">EXTERN_C</name> <specifier pos:line="8379" pos:column="10">const</specifier> <name pos:line="8379" pos:column="16">IID</name></type> <name pos:line="8379" pos:column="20">IID__CodeModelEventsRoot</name></decl>;</decl_stmt>

<cpp:if pos:line="8381" pos:column="1">#<cpp:directive pos:line="8381" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8381" pos:column="5">defined</name><argument_list pos:line="8381" pos:column="12">(<argument><expr><name pos:line="8381" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8381" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8381" pos:column="29">!</op:operator><call><name pos:line="8381" pos:column="30">defined</name><argument_list pos:line="8381" pos:column="37">(<argument><expr><name pos:line="8381" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8383" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8383" pos:column="19">(<argument pos:line="8383" pos:column="20">"c6e28776-b7ff-421f-8c18-57f82e447704"</argument>)</argument_list></macro>
    <label><name pos:line="8384" pos:column="5">_CodeModelEventsRoot</name> :</label> <expr_stmt><expr pos:line="8384" pos:column="28">public <name pos:line="8384" pos:column="35">IDispatch</name>
    <block pos:line="8385" pos:column="5">{
    <expr pos:line="8386" pos:column="5">public<op:operator pos:line="8386" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="8387" pos:column="17">/* [hidden][propget][id] */</comment> <name pos:line="8387" pos:column="45">HRESULT</name> <name pos:line="8387" pos:column="53">__stdcall</name> <macro><name pos:line="8387" pos:column="63">get_CodeModelEvents</name><argument_list pos:line="8387" pos:column="82">( 
            <comment type="block" pos:line="8388" pos:column="13">/* [in] */</comment> <argument pos:line="8388" pos:column="24">__RPC__in <comment type="block" pos:line="8388" pos:column="34">/* external definition not present */</comment> CodeElement *CodeElementFilter</argument>,
            <comment type="block" pos:line="8389" pos:column="13">/* [retval][out] */</comment> <argument pos:line="8389" pos:column="33">__RPC__deref_out_opt IDispatch **ppdisp</argument>)</argument_list></macro> <op:operator pos:line="8389" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="8389" pos:column="76">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8393" pos:column="1">#<cpp:directive pos:line="8393" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8393" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8395" pos:column="5">typedef <type><struct pos:line="8395" pos:column="13">struct <name pos:line="8395" pos:column="20">_CodeModelEventsRootVtbl</name>
    <block pos:line="8396" pos:column="5">{<public type="default" pos:line="8396" pos:column="6">
        <function_decl><type><name pos:line="8397" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8399" pos:column="9">HRESULT</name></type> ( <name pos:line="8399" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8399" pos:column="37">*</type:modifier><name pos:line="8399" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8399" pos:column="54">( 
            <param><decl><type><name pos:line="8400" pos:column="13">_CodeModelEventsRoot</name> <type:modifier pos:line="8400" pos:column="34">*</type:modifier></type> <name pos:line="8400" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="8401" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8401" pos:column="24">__RPC__in</name> <name pos:line="8401" pos:column="34">REFIID</name></type> <name pos:line="8401" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8402" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8403" pos:column="13">__RPC__deref_out</name>  <name pos:line="8403" pos:column="31">void</name> <type:modifier pos:line="8403" pos:column="36">*</type:modifier><type:modifier pos:line="8403" pos:column="37">*</type:modifier></type><name pos:line="8403" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8405" pos:column="9">ULONG</name></type> ( <name pos:line="8405" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8405" pos:column="35">*</type:modifier><name pos:line="8405" pos:column="36">AddRef</name> )<parameter_list pos:line="8405" pos:column="44">( 
            <param><decl><type><name pos:line="8406" pos:column="13">_CodeModelEventsRoot</name> <type:modifier pos:line="8406" pos:column="34">*</type:modifier></type> <name pos:line="8406" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8408" pos:column="9">ULONG</name></type> ( <name pos:line="8408" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8408" pos:column="35">*</type:modifier><name pos:line="8408" pos:column="36">Release</name> )<parameter_list pos:line="8408" pos:column="45">( 
            <param><decl><type><name pos:line="8409" pos:column="13">_CodeModelEventsRoot</name> <type:modifier pos:line="8409" pos:column="34">*</type:modifier></type> <name pos:line="8409" pos:column="36">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8411" pos:column="9">HRESULT</name></type> ( <name pos:line="8411" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8411" pos:column="37">*</type:modifier><name pos:line="8411" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="8411" pos:column="56">( 
            <param><decl><type><name pos:line="8412" pos:column="13">_CodeModelEventsRoot</name> <type:modifier pos:line="8412" pos:column="34">*</type:modifier></type> <name pos:line="8412" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="8413" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8413" pos:column="25">__RPC__out</name> <name pos:line="8413" pos:column="36">UINT</name> <type:modifier pos:line="8413" pos:column="41">*</type:modifier></type><name pos:line="8413" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8415" pos:column="9">HRESULT</name></type> ( <name pos:line="8415" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8415" pos:column="37">*</type:modifier><name pos:line="8415" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="8415" pos:column="51">( 
            <param><decl><type><name pos:line="8416" pos:column="13">_CodeModelEventsRoot</name> <type:modifier pos:line="8416" pos:column="34">*</type:modifier></type> <name pos:line="8416" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="8417" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8417" pos:column="24">UINT</name></type> <name pos:line="8417" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="8418" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8418" pos:column="24">LCID</name></type> <name pos:line="8418" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="8419" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8419" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="8419" pos:column="46">ITypeInfo</name> <type:modifier pos:line="8419" pos:column="56">*</type:modifier><type:modifier pos:line="8419" pos:column="57">*</type:modifier></type><name pos:line="8419" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8421" pos:column="9">HRESULT</name> <argument_list pos:line="8421" pos:column="17">( <argument pos:line="8421" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="8421" pos:column="53">(</op:operator> 
            <name pos:line="8422" pos:column="13">_CodeModelEventsRoot</name> <op:operator pos:line="8422" pos:column="34">*</op:operator> <name pos:line="8422" pos:column="36">This</name><op:operator pos:line="8422" pos:column="40">,</op:operator>
            <comment type="block" pos:line="8423" pos:column="13">/* [in] */</comment> <name pos:line="8423" pos:column="24">__RPC__in</name> <name pos:line="8423" pos:column="34">REFIID</name> <name pos:line="8423" pos:column="41">riid</name><op:operator pos:line="8423" pos:column="45">,</op:operator>
            <comment type="block" pos:line="8424" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="8424" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="8424" pos:column="54">(<argument pos:line="8424" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="8424" pos:column="63">LPOLESTR</name> <op:operator pos:line="8424" pos:column="72">*</op:operator><name pos:line="8424" pos:column="73">rgszNames</name><op:operator pos:line="8424" pos:column="82">,</op:operator>
            <comment type="block" pos:line="8425" pos:column="13">/* [range][in] */</comment> <name pos:line="8425" pos:column="31">UINT</name> <name pos:line="8425" pos:column="36">cNames</name><op:operator pos:line="8425" pos:column="42">,</op:operator>
            <comment type="block" pos:line="8426" pos:column="13">/* [in] */</comment> <name pos:line="8426" pos:column="24">LCID</name> <name pos:line="8426" pos:column="29">lcid</name><op:operator pos:line="8426" pos:column="33">,</op:operator>
            <comment type="block" pos:line="8427" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="8427" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="8427" pos:column="56">(<argument pos:line="8427" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="8427" pos:column="65">DISPID</name> <op:operator pos:line="8427" pos:column="72">*</op:operator><name pos:line="8427" pos:column="73">rgDispId</name><op:operator pos:line="8427" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="8429" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="8429" pos:column="23">HRESULT</name></type> ( <name pos:line="8429" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="8429" pos:column="51">*</type:modifier><name pos:line="8429" pos:column="52">Invoke</name> )<parameter_list pos:line="8429" pos:column="60">( 
            <param><decl><type><name pos:line="8430" pos:column="13">_CodeModelEventsRoot</name> <type:modifier pos:line="8430" pos:column="34">*</type:modifier></type> <name pos:line="8430" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="8431" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8431" pos:column="24">DISPID</name></type> <name pos:line="8431" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="8432" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8432" pos:column="24">REFIID</name></type> <name pos:line="8432" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="8433" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8433" pos:column="24">LCID</name></type> <name pos:line="8433" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="8434" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8434" pos:column="24">WORD</name></type> <name pos:line="8434" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="8435" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="8435" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="8435" pos:column="40">*</type:modifier></type><name pos:line="8435" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="8436" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8436" pos:column="25">VARIANT</name> <type:modifier pos:line="8436" pos:column="33">*</type:modifier></type><name pos:line="8436" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="8437" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8437" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="8437" pos:column="35">*</type:modifier></type><name pos:line="8437" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="8438" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8438" pos:column="25">UINT</name> <type:modifier pos:line="8438" pos:column="30">*</type:modifier></type><name pos:line="8438" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8440" pos:column="9">/* [hidden][propget][id] */</comment> <function_decl><type><name pos:line="8440" pos:column="37">HRESULT</name></type> ( <name pos:line="8440" pos:column="47">__stdcall</name> <type:modifier pos:line="8440" pos:column="57">*</type:modifier><name pos:line="8440" pos:column="58">get_CodeModelEvents</name> )<parameter_list pos:line="8440" pos:column="79">( 
            <param><decl><type><name pos:line="8441" pos:column="13">_CodeModelEventsRoot</name> <type:modifier pos:line="8441" pos:column="34">*</type:modifier></type> <name pos:line="8441" pos:column="36">This</name></decl></param>,
            <comment type="block" pos:line="8442" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8442" pos:column="24">__RPC__in</name> <comment type="block" pos:line="8442" pos:column="34">/* external definition not present */</comment> <name pos:line="8442" pos:column="72">CodeElement</name> <type:modifier pos:line="8442" pos:column="84">*</type:modifier></type><name pos:line="8442" pos:column="85">CodeElementFilter</name></decl></param>,
            <comment type="block" pos:line="8443" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8443" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8443" pos:column="54">IDispatch</name> <type:modifier pos:line="8443" pos:column="64">*</type:modifier><type:modifier pos:line="8443" pos:column="65">*</type:modifier></type><name pos:line="8443" pos:column="66">ppdisp</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8445" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8446" pos:column="7">_CodeModelEventsRootVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8448" pos:column="5">interface</name></type> <name pos:line="8448" pos:column="15">_CodeModelEventsRoot</name>
    <argument_list pos:line="8449" pos:column="5">{
        <argument><expr><name pos:line="8450" pos:column="9">CONST_VTBL</name> struct <name pos:line="8450" pos:column="27">_CodeModelEventsRootVtbl</name> <op:operator pos:line="8450" pos:column="52">*</op:operator><name pos:line="8450" pos:column="53">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8455" pos:column="1">#<cpp:directive pos:line="8455" pos:column="2">ifdef</cpp:directive> <name pos:line="8455" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8458" pos:column="1">#<cpp:directive pos:line="8458" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8458" pos:column="9">_CodeModelEventsRoot_QueryInterface</name><parameter_list pos:line="8458" pos:column="44">(<param><type><name pos:line="8458" pos:column="45">This</name></type></param>,<param><type><name pos:line="8458" pos:column="50">riid</name></type></param>,<param><type><name pos:line="8458" pos:column="55">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8459" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8461" pos:column="1">#<cpp:directive pos:line="8461" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8461" pos:column="9">_CodeModelEventsRoot_AddRef</name><parameter_list pos:line="8461" pos:column="36">(<param><type><name pos:line="8461" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8462" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8464" pos:column="1">#<cpp:directive pos:line="8464" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8464" pos:column="9">_CodeModelEventsRoot_Release</name><parameter_list pos:line="8464" pos:column="37">(<param><type><name pos:line="8464" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8465" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8468" pos:column="1">#<cpp:directive pos:line="8468" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8468" pos:column="9">_CodeModelEventsRoot_GetTypeInfoCount</name><parameter_list pos:line="8468" pos:column="46">(<param><type><name pos:line="8468" pos:column="47">This</name></type></param>,<param><type><name pos:line="8468" pos:column="52">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8469" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="8471" pos:column="1">#<cpp:directive pos:line="8471" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8471" pos:column="9">_CodeModelEventsRoot_GetTypeInfo</name><parameter_list pos:line="8471" pos:column="41">(<param><type><name pos:line="8471" pos:column="42">This</name></type></param>,<param><type><name pos:line="8471" pos:column="47">iTInfo</name></type></param>,<param><type><name pos:line="8471" pos:column="54">lcid</name></type></param>,<param><type><name pos:line="8471" pos:column="59">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8472" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="8474" pos:column="1">#<cpp:directive pos:line="8474" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8474" pos:column="9">_CodeModelEventsRoot_GetIDsOfNames</name><parameter_list pos:line="8474" pos:column="43">(<param><type><name pos:line="8474" pos:column="44">This</name></type></param>,<param><type><name pos:line="8474" pos:column="49">riid</name></type></param>,<param><type><name pos:line="8474" pos:column="54">rgszNames</name></type></param>,<param><type><name pos:line="8474" pos:column="64">cNames</name></type></param>,<param><type><name pos:line="8474" pos:column="71">lcid</name></type></param>,<param><type><name pos:line="8474" pos:column="76">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8475" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="8477" pos:column="1">#<cpp:directive pos:line="8477" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8477" pos:column="9">_CodeModelEventsRoot_Invoke</name><parameter_list pos:line="8477" pos:column="36">(<param><type><name pos:line="8477" pos:column="37">This</name></type></param>,<param><type><name pos:line="8477" pos:column="42">dispIdMember</name></type></param>,<param><type><name pos:line="8477" pos:column="55">riid</name></type></param>,<param><type><name pos:line="8477" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="8477" pos:column="65">wFlags</name></type></param>,<param><type><name pos:line="8477" pos:column="72">pDispParams</name></type></param>,<param><type><name pos:line="8477" pos:column="84">pVarResult</name></type></param>,<param><type><name pos:line="8477" pos:column="95">pExcepInfo</name></type></param>,<param><type><name pos:line="8477" pos:column="106">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8478" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="8481" pos:column="1">#<cpp:directive pos:line="8481" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8481" pos:column="9">_CodeModelEventsRoot_get_CodeModelEvents</name><parameter_list pos:line="8481" pos:column="49">(<param><type><name pos:line="8481" pos:column="50">This</name></type></param>,<param><type><name pos:line="8481" pos:column="55">CodeElementFilter</name></type></param>,<param><type><name pos:line="8481" pos:column="73">ppdisp</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8482" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CodeModelEvents(This,CodeElementFilter,ppdisp) )</cpp:value></cpp:define> 

<cpp:endif pos:line="8484" pos:column="1">#<cpp:directive pos:line="8484" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8484" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8487" pos:column="1">#<cpp:directive pos:line="8487" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8487" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8492" pos:column="1">#<cpp:directive pos:line="8492" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8492" pos:column="9">/* ___CodeModelEventsRoot_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8495" pos:column="1">#<cpp:directive pos:line="8495" pos:column="2">ifndef</cpp:directive> <name pos:line="8495" pos:column="9">___CodeModelEvents_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8496" pos:column="1">#<cpp:directive pos:line="8496" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8496" pos:column="9">___CodeModelEvents_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8498" pos:column="1">/* interface _CodeModelEvents */</comment>
<comment type="block" pos:line="8499" pos:column="1">/* [object][oleautomation][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="8502" pos:column="1">EXTERN_C</name> <specifier pos:line="8502" pos:column="10">const</specifier> <name pos:line="8502" pos:column="16">IID</name></type> <name pos:line="8502" pos:column="20">IID__CodeModelEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="8504" pos:column="1">#<cpp:directive pos:line="8504" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8504" pos:column="5">defined</name><argument_list pos:line="8504" pos:column="12">(<argument><expr><name pos:line="8504" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8504" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8504" pos:column="29">!</op:operator><call><name pos:line="8504" pos:column="30">defined</name><argument_list pos:line="8504" pos:column="37">(<argument><expr><name pos:line="8504" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8506" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8506" pos:column="19">(<argument pos:line="8506" pos:column="20">"66adc510-0ca2-475d-a343-57192bce38bf"</argument>)</argument_list></macro>
    <label><name pos:line="8507" pos:column="5">_CodeModelEvents</name> :</label> <expr_stmt><expr pos:line="8507" pos:column="24">public <name pos:line="8507" pos:column="31">IDispatch</name>
    <block pos:line="8508" pos:column="5">{
    <expr pos:line="8509" pos:column="5">public<op:operator pos:line="8509" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8512" pos:column="1">#<cpp:directive pos:line="8512" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8512" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8514" pos:column="5">typedef <type><struct pos:line="8514" pos:column="13">struct <name pos:line="8514" pos:column="20">_CodeModelEventsVtbl</name>
    <block pos:line="8515" pos:column="5">{<public type="default" pos:line="8515" pos:column="6">
        <function_decl><type><name pos:line="8516" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="8518" pos:column="9">HRESULT</name></type> ( <name pos:line="8518" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8518" pos:column="37">*</type:modifier><name pos:line="8518" pos:column="38">QueryInterface</name> )<parameter_list pos:line="8518" pos:column="54">( 
            <param><decl><type><name pos:line="8519" pos:column="13">_CodeModelEvents</name> <type:modifier pos:line="8519" pos:column="30">*</type:modifier></type> <name pos:line="8519" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="8520" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8520" pos:column="24">__RPC__in</name> <name pos:line="8520" pos:column="34">REFIID</name></type> <name pos:line="8520" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="8521" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="8522" pos:column="13">__RPC__deref_out</name>  <name pos:line="8522" pos:column="31">void</name> <type:modifier pos:line="8522" pos:column="36">*</type:modifier><type:modifier pos:line="8522" pos:column="37">*</type:modifier></type><name pos:line="8522" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8524" pos:column="9">ULONG</name></type> ( <name pos:line="8524" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8524" pos:column="35">*</type:modifier><name pos:line="8524" pos:column="36">AddRef</name> )<parameter_list pos:line="8524" pos:column="44">( 
            <param><decl><type><name pos:line="8525" pos:column="13">_CodeModelEvents</name> <type:modifier pos:line="8525" pos:column="30">*</type:modifier></type> <name pos:line="8525" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8527" pos:column="9">ULONG</name></type> ( <name pos:line="8527" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="8527" pos:column="35">*</type:modifier><name pos:line="8527" pos:column="36">Release</name> )<parameter_list pos:line="8527" pos:column="45">( 
            <param><decl><type><name pos:line="8528" pos:column="13">_CodeModelEvents</name> <type:modifier pos:line="8528" pos:column="30">*</type:modifier></type> <name pos:line="8528" pos:column="32">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8530" pos:column="9">HRESULT</name></type> ( <name pos:line="8530" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8530" pos:column="37">*</type:modifier><name pos:line="8530" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="8530" pos:column="56">( 
            <param><decl><type><name pos:line="8531" pos:column="13">_CodeModelEvents</name> <type:modifier pos:line="8531" pos:column="30">*</type:modifier></type> <name pos:line="8531" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="8532" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8532" pos:column="25">__RPC__out</name> <name pos:line="8532" pos:column="36">UINT</name> <type:modifier pos:line="8532" pos:column="41">*</type:modifier></type><name pos:line="8532" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="8534" pos:column="9">HRESULT</name></type> ( <name pos:line="8534" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="8534" pos:column="37">*</type:modifier><name pos:line="8534" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="8534" pos:column="51">( 
            <param><decl><type><name pos:line="8535" pos:column="13">_CodeModelEvents</name> <type:modifier pos:line="8535" pos:column="30">*</type:modifier></type> <name pos:line="8535" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="8536" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8536" pos:column="24">UINT</name></type> <name pos:line="8536" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="8537" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8537" pos:column="24">LCID</name></type> <name pos:line="8537" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="8538" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8538" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="8538" pos:column="46">ITypeInfo</name> <type:modifier pos:line="8538" pos:column="56">*</type:modifier><type:modifier pos:line="8538" pos:column="57">*</type:modifier></type><name pos:line="8538" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8540" pos:column="9">HRESULT</name> <argument_list pos:line="8540" pos:column="17">( <argument pos:line="8540" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="8540" pos:column="53">(</op:operator> 
            <name pos:line="8541" pos:column="13">_CodeModelEvents</name> <op:operator pos:line="8541" pos:column="30">*</op:operator> <name pos:line="8541" pos:column="32">This</name><op:operator pos:line="8541" pos:column="36">,</op:operator>
            <comment type="block" pos:line="8542" pos:column="13">/* [in] */</comment> <name pos:line="8542" pos:column="24">__RPC__in</name> <name pos:line="8542" pos:column="34">REFIID</name> <name pos:line="8542" pos:column="41">riid</name><op:operator pos:line="8542" pos:column="45">,</op:operator>
            <comment type="block" pos:line="8543" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="8543" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="8543" pos:column="54">(<argument pos:line="8543" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="8543" pos:column="63">LPOLESTR</name> <op:operator pos:line="8543" pos:column="72">*</op:operator><name pos:line="8543" pos:column="73">rgszNames</name><op:operator pos:line="8543" pos:column="82">,</op:operator>
            <comment type="block" pos:line="8544" pos:column="13">/* [range][in] */</comment> <name pos:line="8544" pos:column="31">UINT</name> <name pos:line="8544" pos:column="36">cNames</name><op:operator pos:line="8544" pos:column="42">,</op:operator>
            <comment type="block" pos:line="8545" pos:column="13">/* [in] */</comment> <name pos:line="8545" pos:column="24">LCID</name> <name pos:line="8545" pos:column="29">lcid</name><op:operator pos:line="8545" pos:column="33">,</op:operator>
            <comment type="block" pos:line="8546" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="8546" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="8546" pos:column="56">(<argument pos:line="8546" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="8546" pos:column="65">DISPID</name> <op:operator pos:line="8546" pos:column="72">*</op:operator><name pos:line="8546" pos:column="73">rgDispId</name><op:operator pos:line="8546" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="8548" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="8548" pos:column="23">HRESULT</name></type> ( <name pos:line="8548" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="8548" pos:column="51">*</type:modifier><name pos:line="8548" pos:column="52">Invoke</name> )<parameter_list pos:line="8548" pos:column="60">( 
            <param><decl><type><name pos:line="8549" pos:column="13">_CodeModelEvents</name> <type:modifier pos:line="8549" pos:column="30">*</type:modifier></type> <name pos:line="8549" pos:column="32">This</name></decl></param>,
            <comment type="block" pos:line="8550" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8550" pos:column="24">DISPID</name></type> <name pos:line="8550" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="8551" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8551" pos:column="24">REFIID</name></type> <name pos:line="8551" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="8552" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8552" pos:column="24">LCID</name></type> <name pos:line="8552" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="8553" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8553" pos:column="24">WORD</name></type> <name pos:line="8553" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="8554" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="8554" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="8554" pos:column="40">*</type:modifier></type><name pos:line="8554" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="8555" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8555" pos:column="25">VARIANT</name> <type:modifier pos:line="8555" pos:column="33">*</type:modifier></type><name pos:line="8555" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="8556" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8556" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="8556" pos:column="35">*</type:modifier></type><name pos:line="8556" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="8557" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="8557" pos:column="25">UINT</name> <type:modifier pos:line="8557" pos:column="30">*</type:modifier></type><name pos:line="8557" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8559" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8560" pos:column="7">_CodeModelEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8562" pos:column="5">interface</name></type> <name pos:line="8562" pos:column="15">_CodeModelEvents</name>
    <argument_list pos:line="8563" pos:column="5">{
        <argument><expr><name pos:line="8564" pos:column="9">CONST_VTBL</name> struct <name pos:line="8564" pos:column="27">_CodeModelEventsVtbl</name> <op:operator pos:line="8564" pos:column="48">*</op:operator><name pos:line="8564" pos:column="49">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8569" pos:column="1">#<cpp:directive pos:line="8569" pos:column="2">ifdef</cpp:directive> <name pos:line="8569" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8572" pos:column="1">#<cpp:directive pos:line="8572" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8572" pos:column="9">_CodeModelEvents_QueryInterface</name><parameter_list pos:line="8572" pos:column="40">(<param><type><name pos:line="8572" pos:column="41">This</name></type></param>,<param><type><name pos:line="8572" pos:column="46">riid</name></type></param>,<param><type><name pos:line="8572" pos:column="51">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8573" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="8575" pos:column="1">#<cpp:directive pos:line="8575" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8575" pos:column="9">_CodeModelEvents_AddRef</name><parameter_list pos:line="8575" pos:column="32">(<param><type><name pos:line="8575" pos:column="33">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8576" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="8578" pos:column="1">#<cpp:directive pos:line="8578" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8578" pos:column="9">_CodeModelEvents_Release</name><parameter_list pos:line="8578" pos:column="33">(<param><type><name pos:line="8578" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8579" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="8582" pos:column="1">#<cpp:directive pos:line="8582" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8582" pos:column="9">_CodeModelEvents_GetTypeInfoCount</name><parameter_list pos:line="8582" pos:column="42">(<param><type><name pos:line="8582" pos:column="43">This</name></type></param>,<param><type><name pos:line="8582" pos:column="48">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8583" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="8585" pos:column="1">#<cpp:directive pos:line="8585" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8585" pos:column="9">_CodeModelEvents_GetTypeInfo</name><parameter_list pos:line="8585" pos:column="37">(<param><type><name pos:line="8585" pos:column="38">This</name></type></param>,<param><type><name pos:line="8585" pos:column="43">iTInfo</name></type></param>,<param><type><name pos:line="8585" pos:column="50">lcid</name></type></param>,<param><type><name pos:line="8585" pos:column="55">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8586" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="8588" pos:column="1">#<cpp:directive pos:line="8588" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8588" pos:column="9">_CodeModelEvents_GetIDsOfNames</name><parameter_list pos:line="8588" pos:column="39">(<param><type><name pos:line="8588" pos:column="40">This</name></type></param>,<param><type><name pos:line="8588" pos:column="45">riid</name></type></param>,<param><type><name pos:line="8588" pos:column="50">rgszNames</name></type></param>,<param><type><name pos:line="8588" pos:column="60">cNames</name></type></param>,<param><type><name pos:line="8588" pos:column="67">lcid</name></type></param>,<param><type><name pos:line="8588" pos:column="72">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8589" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="8591" pos:column="1">#<cpp:directive pos:line="8591" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8591" pos:column="9">_CodeModelEvents_Invoke</name><parameter_list pos:line="8591" pos:column="32">(<param><type><name pos:line="8591" pos:column="33">This</name></type></param>,<param><type><name pos:line="8591" pos:column="38">dispIdMember</name></type></param>,<param><type><name pos:line="8591" pos:column="51">riid</name></type></param>,<param><type><name pos:line="8591" pos:column="56">lcid</name></type></param>,<param><type><name pos:line="8591" pos:column="61">wFlags</name></type></param>,<param><type><name pos:line="8591" pos:column="68">pDispParams</name></type></param>,<param><type><name pos:line="8591" pos:column="80">pVarResult</name></type></param>,<param><type><name pos:line="8591" pos:column="91">pExcepInfo</name></type></param>,<param><type><name pos:line="8591" pos:column="102">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8592" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:endif pos:line="8595" pos:column="1">#<cpp:directive pos:line="8595" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="8595" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="8598" pos:column="1">#<cpp:directive pos:line="8598" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8598" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="8603" pos:column="1">#<cpp:directive pos:line="8603" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="8603" pos:column="9">/* ___CodeModelEvents_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="8606" pos:column="1">#<cpp:directive pos:line="8606" pos:column="2">ifndef</cpp:directive> <name pos:line="8606" pos:column="9">__Debugger2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="8607" pos:column="1">#<cpp:directive pos:line="8607" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8607" pos:column="9">__Debugger2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="8609" pos:column="1">/* interface Debugger2 */</comment>
<comment type="block" pos:line="8610" pos:column="1">/* [object][version][helpstringcontext][helpstring][helpcontext][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="8613" pos:column="1">EXTERN_C</name> <specifier pos:line="8613" pos:column="10">const</specifier> <name pos:line="8613" pos:column="16">IID</name></type> <name pos:line="8613" pos:column="20">IID_Debugger2</name></decl>;</decl_stmt>

<cpp:if pos:line="8615" pos:column="1">#<cpp:directive pos:line="8615" pos:column="2">if</cpp:directive> <expr><call><name pos:line="8615" pos:column="5">defined</name><argument_list pos:line="8615" pos:column="12">(<argument><expr><name pos:line="8615" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="8615" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="8615" pos:column="29">!</op:operator><call><name pos:line="8615" pos:column="30">defined</name><argument_list pos:line="8615" pos:column="37">(<argument><expr><name pos:line="8615" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="8617" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="8617" pos:column="19">(<argument pos:line="8617" pos:column="20">"8B5E2BFD-4642-4efe-8AF4-0B2DA9AAA23C"</argument>)</argument_list></macro>
    <label><name pos:line="8618" pos:column="5">Debugger2</name> :</label> <expr_stmt><expr pos:line="8618" pos:column="17">public <name pos:line="8618" pos:column="24">Debugger</name>
    <block pos:line="8619" pos:column="5">{
    <expr pos:line="8620" pos:column="5">public<op:operator pos:line="8620" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="8621" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="8621" pos:column="72">HRESULT</name> <name pos:line="8621" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="8621" pos:column="98">WriteMinidump</name><argument_list pos:line="8621" pos:column="111">( 
            <comment type="block" pos:line="8622" pos:column="13">/* [in] */</comment> <argument pos:line="8622" pos:column="24">__RPC__in BSTR FileName</argument>,
            <comment type="block" pos:line="8623" pos:column="13">/* [in] */</comment> <argument pos:line="8623" pos:column="24">dbgMinidumpOption Option</argument>)</argument_list></macro> <op:operator pos:line="8623" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="8623" pos:column="52">0</lit:literal></expr>;
        
        <expr pos:line="8625" pos:column="9">virtual <comment type="block" pos:line="8625" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="8625" pos:column="72">HRESULT</name> <name pos:line="8625" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="8625" pos:column="98">GetProcesses</name><argument_list pos:line="8625" pos:column="110">( 
            <comment type="block" pos:line="8626" pos:column="13">/* [in] */</comment> <argument pos:line="8626" pos:column="24">__RPC__in_opt Transport *pTransport</argument>,
            <comment type="block" pos:line="8627" pos:column="13">/* [in] */</comment> <argument pos:line="8627" pos:column="24">__RPC__in BSTR TransportQualifier</argument>,
            <comment type="block" pos:line="8628" pos:column="13">/* [retval][out] */</comment> <argument pos:line="8628" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="8628" pos:column="54">/* external definition not present */</comment> Processes **Processes</argument>)</argument_list></macro> <op:operator pos:line="8628" pos:column="115">=</op:operator> <lit:literal type="number" pos:line="8628" pos:column="117">0</lit:literal></expr>;
        
        <expr pos:line="8630" pos:column="9">virtual <comment type="block" pos:line="8630" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="8630" pos:column="72">HRESULT</name> <name pos:line="8630" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="8630" pos:column="98">GetExpression2</name><argument_list pos:line="8630" pos:column="112">( 
            <comment type="block" pos:line="8631" pos:column="13">/* [in] */</comment> <argument pos:line="8631" pos:column="24">__RPC__in BSTR ExpressionText</argument>,
            <comment type="block" pos:line="8632" pos:column="13">/* [defaultvalue][optional][in] */</comment> <argument pos:line="8632" pos:column="48">VARIANT_BOOL UseAutoExpandRules</argument>,
            <comment type="block" pos:line="8633" pos:column="13">/* [defaultvalue][optional][in] */</comment> <argument pos:line="8633" pos:column="48">VARIANT_BOOL TreatAsStatement</argument>,
            <comment type="block" pos:line="8634" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="8634" pos:column="38">long Timeout</argument>,
            <comment type="block" pos:line="8635" pos:column="13">/* [retval][out] */</comment> <argument pos:line="8635" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="8635" pos:column="54">/* external definition not present */</comment> Expression **Expression</argument>)</argument_list></macro> <op:operator pos:line="8635" pos:column="117">=</op:operator> <lit:literal type="number" pos:line="8635" pos:column="119">0</lit:literal></expr>;
        
        <expr pos:line="8637" pos:column="9">virtual <comment type="block" pos:line="8637" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="8637" pos:column="81">HRESULT</name> <name pos:line="8637" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="8637" pos:column="107">get_Transports</name><argument_list pos:line="8637" pos:column="121">( 
            <comment type="block" pos:line="8638" pos:column="13">/* [retval][out] */</comment> <argument pos:line="8638" pos:column="33">__RPC__deref_out_opt Transports **Transports</argument>)</argument_list></macro> <op:operator pos:line="8638" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="8638" pos:column="81">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="8642" pos:column="1">#<cpp:directive pos:line="8642" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="8642" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="8644" pos:column="5">typedef <type><struct pos:line="8644" pos:column="13">struct <name pos:line="8644" pos:column="20">Debugger2Vtbl</name>
    <block pos:line="8645" pos:column="5">{<public type="default" pos:line="8645" pos:column="6">
        <decl_stmt><decl><type><name pos:line="8646" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="8648" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="8648" pos:column="46">HRESULT</name></type> ( <name pos:line="8648" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="8648" pos:column="74">*</type:modifier><name pos:line="8648" pos:column="75">QueryInterface</name> )<parameter_list pos:line="8648" pos:column="91">( 
            <param><decl><type><name pos:line="8649" pos:column="13">Debugger2</name> <type:modifier pos:line="8649" pos:column="23">*</type:modifier></type> <name pos:line="8649" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8650" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="8650" pos:column="47">struct <name pos:line="8650" pos:column="54">GUID</name> <type:modifier pos:line="8650" pos:column="59">*</type:modifier></type><name pos:line="8650" pos:column="60">riid</name></decl><op:operator pos:line="8650" pos:column="64">,</op:operator>
            <comment type="block" pos:line="8651" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="8651" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="8651" pos:column="59">void</name> <type:modifier pos:line="8651" pos:column="64">*</type:modifier><type:modifier pos:line="8651" pos:column="65">*</type:modifier><name pos:line="8651" pos:column="66">ppvObj</name><op:operator pos:line="8651" pos:column="72">,</op:operator>
            <comment type="block" pos:line="8652" pos:column="13">/* [retval][out] */</comment> <name pos:line="8652" pos:column="33">__RPC__out</name> <name pos:line="8652" pos:column="44">void</name> <type:modifier pos:line="8652" pos:column="49">*</type:modifier><name pos:line="8652" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="8654" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="8654" pos:column="46">HRESULT</name></type> ( <name pos:line="8654" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="8654" pos:column="74">*</type:modifier><name pos:line="8654" pos:column="75">AddRef</name> )<parameter_list pos:line="8654" pos:column="83">( 
            <param><decl><type><name pos:line="8655" pos:column="13">Debugger2</name> <type:modifier pos:line="8655" pos:column="23">*</type:modifier></type> <name pos:line="8655" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8656" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8656" pos:column="33">__RPC__out</name> <name pos:line="8656" pos:column="44">unsigned</name> <name pos:line="8656" pos:column="53">long</name> <type:modifier pos:line="8656" pos:column="58">*</type:modifier></type><name pos:line="8656" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8658" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="8658" pos:column="46">HRESULT</name></type> ( <name pos:line="8658" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="8658" pos:column="74">*</type:modifier><name pos:line="8658" pos:column="75">Release</name> )<parameter_list pos:line="8658" pos:column="84">( 
            <param><decl><type><name pos:line="8659" pos:column="13">Debugger2</name> <type:modifier pos:line="8659" pos:column="23">*</type:modifier></type> <name pos:line="8659" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8660" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8660" pos:column="33">__RPC__out</name> <name pos:line="8660" pos:column="44">unsigned</name> <name pos:line="8660" pos:column="53">long</name> <type:modifier pos:line="8660" pos:column="58">*</type:modifier></type><name pos:line="8660" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8662" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="8662" pos:column="46">HRESULT</name></type> ( <name pos:line="8662" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="8662" pos:column="74">*</type:modifier><name pos:line="8662" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="8662" pos:column="93">( 
            <param><decl><type><name pos:line="8663" pos:column="13">Debugger2</name> <type:modifier pos:line="8663" pos:column="23">*</type:modifier></type> <name pos:line="8663" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8664" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="8664" pos:column="38">__RPC__out</name> <name pos:line="8664" pos:column="49">unsigned</name> <name pos:line="8664" pos:column="58">UINT</name> <type:modifier pos:line="8664" pos:column="63">*</type:modifier></type><name pos:line="8664" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="8665" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8665" pos:column="33">__RPC__out</name> <name pos:line="8665" pos:column="44">void</name> <type:modifier pos:line="8665" pos:column="49">*</type:modifier></type><name pos:line="8665" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8667" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="8667" pos:column="46">HRESULT</name></type> ( <name pos:line="8667" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="8667" pos:column="74">*</type:modifier><name pos:line="8667" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="8667" pos:column="88">( 
            <param><decl><type><name pos:line="8668" pos:column="13">Debugger2</name> <type:modifier pos:line="8668" pos:column="23">*</type:modifier></type> <name pos:line="8668" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8669" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8669" pos:column="37">unsigned</name> <name pos:line="8669" pos:column="46">UINT</name></type> <name pos:line="8669" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="8670" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8670" pos:column="37">unsigned</name> <name pos:line="8670" pos:column="46">long</name></type> <name pos:line="8670" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="8671" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="8671" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="8671" pos:column="59">void</name> <type:modifier pos:line="8671" pos:column="64">*</type:modifier><type:modifier pos:line="8671" pos:column="65">*</type:modifier></type><name pos:line="8671" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="8672" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8672" pos:column="33">__RPC__out</name> <name pos:line="8672" pos:column="44">void</name> <type:modifier pos:line="8672" pos:column="49">*</type:modifier></type><name pos:line="8672" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8674" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="8674" pos:column="46">HRESULT</name> <argument_list pos:line="8674" pos:column="54">( <argument pos:line="8674" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="8674" pos:column="90">(</op:operator> 
            <name pos:line="8675" pos:column="13">Debugger2</name> <op:operator pos:line="8675" pos:column="23">*</op:operator> <name pos:line="8675" pos:column="25">This</name><op:operator pos:line="8675" pos:column="29">,</op:operator>
            <comment type="block" pos:line="8676" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="8676" pos:column="37">__RPC__in</name> struct <name pos:line="8676" pos:column="54">GUID</name> <op:operator pos:line="8676" pos:column="59">*</op:operator><name pos:line="8676" pos:column="60">riid</name><op:operator pos:line="8676" pos:column="64">,</op:operator>
            <comment type="block" pos:line="8677" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="8677" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="8677" pos:column="57">signed</name> <name pos:line="8677" pos:column="64">char</name> <op:operator pos:line="8677" pos:column="69">*</op:operator><op:operator pos:line="8677" pos:column="70">*</op:operator><name pos:line="8677" pos:column="71">rgszNames</name><op:operator pos:line="8677" pos:column="80">,</op:operator>
            <comment type="block" pos:line="8678" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="8678" pos:column="37">unsigned</name> <name pos:line="8678" pos:column="46">UINT</name> <name pos:line="8678" pos:column="51">cNames</name><op:operator pos:line="8678" pos:column="57">,</op:operator>
            <comment type="block" pos:line="8679" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="8679" pos:column="37">unsigned</name> <name pos:line="8679" pos:column="46">long</name> <name pos:line="8679" pos:column="51">lcid</name><op:operator pos:line="8679" pos:column="55">,</op:operator>
            <comment type="block" pos:line="8680" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="8680" pos:column="38">__RPC__out</name> <name pos:line="8680" pos:column="49">signed</name> <name pos:line="8680" pos:column="56">long</name> <op:operator pos:line="8680" pos:column="61">*</op:operator><name pos:line="8680" pos:column="62">rgdispid</name><op:operator pos:line="8680" pos:column="70">,</op:operator>
            <comment type="block" pos:line="8681" pos:column="13">/* [retval][out] */</comment> <name pos:line="8681" pos:column="33">__RPC__out</name> <name pos:line="8681" pos:column="44">void</name> <op:operator pos:line="8681" pos:column="49">*</op:operator><name pos:line="8681" pos:column="50">retval</name><op:operator pos:line="8681" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="8683" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="8683" pos:column="46">HRESULT</name> <argument_list pos:line="8683" pos:column="54">( <argument pos:line="8683" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="8683" pos:column="83">(</op:operator> 
            <name pos:line="8684" pos:column="13">Debugger2</name> <op:operator pos:line="8684" pos:column="23">*</op:operator> <name pos:line="8684" pos:column="25">This</name><op:operator pos:line="8684" pos:column="29">,</op:operator>
            <comment type="block" pos:line="8685" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="8685" pos:column="37">signed</name> <name pos:line="8685" pos:column="44">long</name> <name pos:line="8685" pos:column="49">dispidMember</name><op:operator pos:line="8685" pos:column="61">,</op:operator>
            <comment type="block" pos:line="8686" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="8686" pos:column="37">__RPC__in</name> struct <name pos:line="8686" pos:column="54">GUID</name> <op:operator pos:line="8686" pos:column="59">*</op:operator><name pos:line="8686" pos:column="60">riid</name><op:operator pos:line="8686" pos:column="64">,</op:operator>
            <comment type="block" pos:line="8687" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="8687" pos:column="37">unsigned</name> <name pos:line="8687" pos:column="46">long</name> <name pos:line="8687" pos:column="51">lcid</name><op:operator pos:line="8687" pos:column="55">,</op:operator>
            <comment type="block" pos:line="8688" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="8688" pos:column="37">unsigned</name> <name pos:line="8688" pos:column="46">short</name> <name pos:line="8688" pos:column="52">wFlags</name><op:operator pos:line="8688" pos:column="58">,</op:operator>
            <comment type="block" pos:line="8689" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="8689" pos:column="37">__RPC__in</name> struct <name pos:line="8689" pos:column="54">DISPPARAMS</name> <op:operator pos:line="8689" pos:column="65">*</op:operator><name pos:line="8689" pos:column="66">pdispparams</name><op:operator pos:line="8689" pos:column="77">,</op:operator>
            <comment type="block" pos:line="8690" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="8690" pos:column="38">__RPC__out</name> <name pos:line="8690" pos:column="49">VARIANT</name> <op:operator pos:line="8690" pos:column="57">*</op:operator><name pos:line="8690" pos:column="58">pvarResult</name><op:operator pos:line="8690" pos:column="68">,</op:operator>
            <comment type="block" pos:line="8691" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="8691" pos:column="38">__RPC__out</name> struct <name pos:line="8691" pos:column="56">EXCEPINFO</name> <op:operator pos:line="8691" pos:column="66">*</op:operator><name pos:line="8691" pos:column="67">pexcepinfo</name><op:operator pos:line="8691" pos:column="77">,</op:operator>
            <comment type="block" pos:line="8692" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="8692" pos:column="38">__RPC__out</name> <name pos:line="8692" pos:column="49">unsigned</name> <name pos:line="8692" pos:column="58">UINT</name> <op:operator pos:line="8692" pos:column="63">*</op:operator><name pos:line="8692" pos:column="64">puArgErr</name><op:operator pos:line="8692" pos:column="72">,</op:operator>
            <comment type="block" pos:line="8693" pos:column="13">/* [retval][out] */</comment> <name pos:line="8693" pos:column="33">__RPC__out</name> <name pos:line="8693" pos:column="44">void</name> <op:operator pos:line="8693" pos:column="49">*</op:operator><name pos:line="8693" pos:column="50">retval</name><op:operator pos:line="8693" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="8695" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="8695" pos:column="34">HRESULT</name></type> ( <name pos:line="8695" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="8695" pos:column="62">*</type:modifier><name pos:line="8695" pos:column="63">GetExpression</name> )<parameter_list pos:line="8695" pos:column="78">( 
            <param><decl><type><name pos:line="8696" pos:column="13">Debugger2</name> <type:modifier pos:line="8696" pos:column="23">*</type:modifier></type> <name pos:line="8696" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8697" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8697" pos:column="37">__RPC__in</name> <name pos:line="8697" pos:column="47">BSTR</name></type> <name pos:line="8697" pos:column="52">ExpressionText</name></decl></param>,
            <comment type="block" pos:line="8698" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8698" pos:column="37">BOOLEAN</name></type> <name pos:line="8698" pos:column="45">UseAutoExpandRules</name></decl></param>,
            <comment type="block" pos:line="8699" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8699" pos:column="37">signed</name> <name pos:line="8699" pos:column="44">long</name></type> <name pos:line="8699" pos:column="49">Timeout</name></decl></param>,
            <comment type="block" pos:line="8700" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8700" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8700" pos:column="54">Expression</name> <type:modifier pos:line="8700" pos:column="65">*</type:modifier><type:modifier pos:line="8700" pos:column="66">*</type:modifier></type><name pos:line="8700" pos:column="67">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8702" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="8702" pos:column="34">HRESULT</name></type> ( <name pos:line="8702" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="8702" pos:column="62">*</type:modifier><name pos:line="8702" pos:column="63">DetachAll</name> )<parameter_list pos:line="8702" pos:column="74">( 
            <param><decl><type><name pos:line="8703" pos:column="13">Debugger2</name> <type:modifier pos:line="8703" pos:column="23">*</type:modifier></type> <name pos:line="8703" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8704" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8704" pos:column="33">__RPC__out</name> <name pos:line="8704" pos:column="44">void</name> <type:modifier pos:line="8704" pos:column="49">*</type:modifier></type><name pos:line="8704" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8706" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="8706" pos:column="34">HRESULT</name></type> ( <name pos:line="8706" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="8706" pos:column="62">*</type:modifier><name pos:line="8706" pos:column="63">StepInto</name> )<parameter_list pos:line="8706" pos:column="73">( 
            <param><decl><type><name pos:line="8707" pos:column="13">Debugger2</name> <type:modifier pos:line="8707" pos:column="23">*</type:modifier></type> <name pos:line="8707" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8708" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8708" pos:column="37">BOOLEAN</name></type> <name pos:line="8708" pos:column="45">WaitForBreakOrEnd</name></decl></param>,
            <comment type="block" pos:line="8709" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8709" pos:column="33">__RPC__out</name> <name pos:line="8709" pos:column="44">void</name> <type:modifier pos:line="8709" pos:column="49">*</type:modifier></type><name pos:line="8709" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8711" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="8711" pos:column="34">HRESULT</name></type> ( <name pos:line="8711" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="8711" pos:column="62">*</type:modifier><name pos:line="8711" pos:column="63">StepOver</name> )<parameter_list pos:line="8711" pos:column="73">( 
            <param><decl><type><name pos:line="8712" pos:column="13">Debugger2</name> <type:modifier pos:line="8712" pos:column="23">*</type:modifier></type> <name pos:line="8712" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8713" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8713" pos:column="37">BOOLEAN</name></type> <name pos:line="8713" pos:column="45">WaitForBreakOrEnd</name></decl></param>,
            <comment type="block" pos:line="8714" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8714" pos:column="33">__RPC__out</name> <name pos:line="8714" pos:column="44">void</name> <type:modifier pos:line="8714" pos:column="49">*</type:modifier></type><name pos:line="8714" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8716" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="8716" pos:column="34">HRESULT</name></type> ( <name pos:line="8716" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="8716" pos:column="62">*</type:modifier><name pos:line="8716" pos:column="63">StepOut</name> )<parameter_list pos:line="8716" pos:column="72">( 
            <param><decl><type><name pos:line="8717" pos:column="13">Debugger2</name> <type:modifier pos:line="8717" pos:column="23">*</type:modifier></type> <name pos:line="8717" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8718" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8718" pos:column="37">BOOLEAN</name></type> <name pos:line="8718" pos:column="45">WaitForBreakOrEnd</name></decl></param>,
            <comment type="block" pos:line="8719" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8719" pos:column="33">__RPC__out</name> <name pos:line="8719" pos:column="44">void</name> <type:modifier pos:line="8719" pos:column="49">*</type:modifier></type><name pos:line="8719" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8721" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="8721" pos:column="34">HRESULT</name></type> ( <name pos:line="8721" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="8721" pos:column="62">*</type:modifier><name pos:line="8721" pos:column="63">Go</name> )<parameter_list pos:line="8721" pos:column="67">( 
            <param><decl><type><name pos:line="8722" pos:column="13">Debugger2</name> <type:modifier pos:line="8722" pos:column="23">*</type:modifier></type> <name pos:line="8722" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8723" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8723" pos:column="37">BOOLEAN</name></type> <name pos:line="8723" pos:column="45">WaitForBreakOrEnd</name></decl></param>,
            <comment type="block" pos:line="8724" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8724" pos:column="33">__RPC__out</name> <name pos:line="8724" pos:column="44">void</name> <type:modifier pos:line="8724" pos:column="49">*</type:modifier></type><name pos:line="8724" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8726" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="8726" pos:column="34">HRESULT</name></type> ( <name pos:line="8726" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="8726" pos:column="62">*</type:modifier><name pos:line="8726" pos:column="63">Break</name> )<parameter_list pos:line="8726" pos:column="70">( 
            <param><decl><type><name pos:line="8727" pos:column="13">Debugger2</name> <type:modifier pos:line="8727" pos:column="23">*</type:modifier></type> <name pos:line="8727" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8728" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8728" pos:column="37">BOOLEAN</name></type> <name pos:line="8728" pos:column="45">WaitForBreakMode</name></decl></param>,
            <comment type="block" pos:line="8729" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8729" pos:column="33">__RPC__out</name> <name pos:line="8729" pos:column="44">void</name> <type:modifier pos:line="8729" pos:column="49">*</type:modifier></type><name pos:line="8729" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8731" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="8731" pos:column="34">HRESULT</name></type> ( <name pos:line="8731" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="8731" pos:column="62">*</type:modifier><name pos:line="8731" pos:column="63">Stop</name> )<parameter_list pos:line="8731" pos:column="69">( 
            <param><decl><type><name pos:line="8732" pos:column="13">Debugger2</name> <type:modifier pos:line="8732" pos:column="23">*</type:modifier></type> <name pos:line="8732" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8733" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8733" pos:column="37">BOOLEAN</name></type> <name pos:line="8733" pos:column="45">WaitForDesignMode</name></decl></param>,
            <comment type="block" pos:line="8734" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8734" pos:column="33">__RPC__out</name> <name pos:line="8734" pos:column="44">void</name> <type:modifier pos:line="8734" pos:column="49">*</type:modifier></type><name pos:line="8734" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8736" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="8736" pos:column="34">HRESULT</name></type> ( <name pos:line="8736" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="8736" pos:column="62">*</type:modifier><name pos:line="8736" pos:column="63">SetNextStatement</name> )<parameter_list pos:line="8736" pos:column="81">( 
            <param><decl><type><name pos:line="8737" pos:column="13">Debugger2</name> <type:modifier pos:line="8737" pos:column="23">*</type:modifier></type> <name pos:line="8737" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8738" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8738" pos:column="33">__RPC__out</name> <name pos:line="8738" pos:column="44">void</name> <type:modifier pos:line="8738" pos:column="49">*</type:modifier></type><name pos:line="8738" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8740" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="8740" pos:column="34">HRESULT</name></type> ( <name pos:line="8740" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="8740" pos:column="62">*</type:modifier><name pos:line="8740" pos:column="63">RunToCursor</name> )<parameter_list pos:line="8740" pos:column="76">( 
            <param><decl><type><name pos:line="8741" pos:column="13">Debugger2</name> <type:modifier pos:line="8741" pos:column="23">*</type:modifier></type> <name pos:line="8741" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8742" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8742" pos:column="37">BOOLEAN</name></type> <name pos:line="8742" pos:column="45">WaitForBreakOrEnd</name></decl></param>,
            <comment type="block" pos:line="8743" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8743" pos:column="33">__RPC__out</name> <name pos:line="8743" pos:column="44">void</name> <type:modifier pos:line="8743" pos:column="49">*</type:modifier></type><name pos:line="8743" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8745" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="8745" pos:column="34">HRESULT</name></type> ( <name pos:line="8745" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="8745" pos:column="62">*</type:modifier><name pos:line="8745" pos:column="63">ExecuteStatement</name> )<parameter_list pos:line="8745" pos:column="81">( 
            <param><decl><type><name pos:line="8746" pos:column="13">Debugger2</name> <type:modifier pos:line="8746" pos:column="23">*</type:modifier></type> <name pos:line="8746" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8747" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8747" pos:column="37">__RPC__in</name> <name pos:line="8747" pos:column="47">BSTR</name></type> <name pos:line="8747" pos:column="52">Statement</name></decl></param>,
            <comment type="block" pos:line="8748" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8748" pos:column="37">signed</name> <name pos:line="8748" pos:column="44">long</name></type> <name pos:line="8748" pos:column="49">Timeout</name></decl></param>,
            <comment type="block" pos:line="8749" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8749" pos:column="37">BOOLEAN</name></type> <name pos:line="8749" pos:column="45">TreatAsExpression</name></decl></param>,
            <comment type="block" pos:line="8750" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8750" pos:column="33">__RPC__out</name> <name pos:line="8750" pos:column="44">void</name> <type:modifier pos:line="8750" pos:column="49">*</type:modifier></type><name pos:line="8750" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8752" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8752" pos:column="43">HRESULT</name></type> ( <name pos:line="8752" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8752" pos:column="71">*</type:modifier><name pos:line="8752" pos:column="72">get_Breakpoints</name> )<parameter_list pos:line="8752" pos:column="89">( 
            <param><decl><type><name pos:line="8753" pos:column="13">Debugger2</name> <type:modifier pos:line="8753" pos:column="23">*</type:modifier></type> <name pos:line="8753" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8754" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8754" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8754" pos:column="54">Breakpoints</name> <type:modifier pos:line="8754" pos:column="66">*</type:modifier><type:modifier pos:line="8754" pos:column="67">*</type:modifier></type><name pos:line="8754" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8756" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8756" pos:column="43">HRESULT</name></type> ( <name pos:line="8756" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8756" pos:column="71">*</type:modifier><name pos:line="8756" pos:column="72">get_Languages</name> )<parameter_list pos:line="8756" pos:column="87">( 
            <param><decl><type><name pos:line="8757" pos:column="13">Debugger2</name> <type:modifier pos:line="8757" pos:column="23">*</type:modifier></type> <name pos:line="8757" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8758" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8758" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8758" pos:column="54">Languages</name> <type:modifier pos:line="8758" pos:column="64">*</type:modifier><type:modifier pos:line="8758" pos:column="65">*</type:modifier></type><name pos:line="8758" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8760" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="8760" pos:column="43">HRESULT</name> <argument_list pos:line="8760" pos:column="51">( <argument pos:line="8760" pos:column="53">STDMETHODCALLTYPE *get_CurrentMode</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="8760" pos:column="89">(</op:operator> 
            <name pos:line="8761" pos:column="13">Debugger2</name> <op:operator pos:line="8761" pos:column="23">*</op:operator> <name pos:line="8761" pos:column="25">This</name><op:operator pos:line="8761" pos:column="29">,</op:operator>
            <comment type="block" pos:line="8762" pos:column="13">/* [retval][out] */</comment> <name pos:line="8762" pos:column="33">__RPC__out</name> enum <name pos:line="8762" pos:column="49">dbgDebugMode</name> <op:operator pos:line="8762" pos:column="62">*</op:operator><name pos:line="8762" pos:column="63">retval</name><op:operator pos:line="8762" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="8764" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8764" pos:column="43">HRESULT</name></type> ( <name pos:line="8764" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8764" pos:column="71">*</type:modifier><name pos:line="8764" pos:column="72">get_CurrentProcess</name> )<parameter_list pos:line="8764" pos:column="92">( 
            <param><decl><type><name pos:line="8765" pos:column="13">Debugger2</name> <type:modifier pos:line="8765" pos:column="23">*</type:modifier></type> <name pos:line="8765" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8766" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8766" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8766" pos:column="54">Process</name> <type:modifier pos:line="8766" pos:column="62">*</type:modifier><type:modifier pos:line="8766" pos:column="63">*</type:modifier></type><name pos:line="8766" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8768" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="8768" pos:column="43">HRESULT</name></type> ( <name pos:line="8768" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8768" pos:column="71">*</type:modifier><name pos:line="8768" pos:column="72">put_CurrentProcess</name> )<parameter_list pos:line="8768" pos:column="92">( 
            <param><decl><type><name pos:line="8769" pos:column="13">Debugger2</name> <type:modifier pos:line="8769" pos:column="23">*</type:modifier></type> <name pos:line="8769" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8770" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8770" pos:column="37">__RPC__in_opt</name> <name pos:line="8770" pos:column="51">Process</name> <type:modifier pos:line="8770" pos:column="59">*</type:modifier></type><name pos:line="8770" pos:column="60">noname</name></decl></param>,
            <comment type="block" pos:line="8771" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8771" pos:column="33">__RPC__out</name> <name pos:line="8771" pos:column="44">void</name> <type:modifier pos:line="8771" pos:column="49">*</type:modifier></type><name pos:line="8771" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8773" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8773" pos:column="43">HRESULT</name></type> ( <name pos:line="8773" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8773" pos:column="71">*</type:modifier><name pos:line="8773" pos:column="72">get_CurrentProgram</name> )<parameter_list pos:line="8773" pos:column="92">( 
            <param><decl><type><name pos:line="8774" pos:column="13">Debugger2</name> <type:modifier pos:line="8774" pos:column="23">*</type:modifier></type> <name pos:line="8774" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8775" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8775" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8775" pos:column="54">Program</name> <type:modifier pos:line="8775" pos:column="62">*</type:modifier><type:modifier pos:line="8775" pos:column="63">*</type:modifier></type><name pos:line="8775" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8777" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="8777" pos:column="43">HRESULT</name></type> ( <name pos:line="8777" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8777" pos:column="71">*</type:modifier><name pos:line="8777" pos:column="72">put_CurrentProgram</name> )<parameter_list pos:line="8777" pos:column="92">( 
            <param><decl><type><name pos:line="8778" pos:column="13">Debugger2</name> <type:modifier pos:line="8778" pos:column="23">*</type:modifier></type> <name pos:line="8778" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8779" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8779" pos:column="37">__RPC__in_opt</name> <name pos:line="8779" pos:column="51">Program</name> <type:modifier pos:line="8779" pos:column="59">*</type:modifier></type><name pos:line="8779" pos:column="60">noname</name></decl></param>,
            <comment type="block" pos:line="8780" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8780" pos:column="33">__RPC__out</name> <name pos:line="8780" pos:column="44">void</name> <type:modifier pos:line="8780" pos:column="49">*</type:modifier></type><name pos:line="8780" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8782" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8782" pos:column="43">HRESULT</name></type> ( <name pos:line="8782" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8782" pos:column="71">*</type:modifier><name pos:line="8782" pos:column="72">get_CurrentThread</name> )<parameter_list pos:line="8782" pos:column="91">( 
            <param><decl><type><name pos:line="8783" pos:column="13">Debugger2</name> <type:modifier pos:line="8783" pos:column="23">*</type:modifier></type> <name pos:line="8783" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8784" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8784" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8784" pos:column="54">Thread</name> <type:modifier pos:line="8784" pos:column="61">*</type:modifier><type:modifier pos:line="8784" pos:column="62">*</type:modifier></type><name pos:line="8784" pos:column="63">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8786" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="8786" pos:column="43">HRESULT</name></type> ( <name pos:line="8786" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8786" pos:column="71">*</type:modifier><name pos:line="8786" pos:column="72">put_CurrentThread</name> )<parameter_list pos:line="8786" pos:column="91">( 
            <param><decl><type><name pos:line="8787" pos:column="13">Debugger2</name> <type:modifier pos:line="8787" pos:column="23">*</type:modifier></type> <name pos:line="8787" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8788" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8788" pos:column="37">__RPC__in_opt</name> <name pos:line="8788" pos:column="51">Thread</name> <type:modifier pos:line="8788" pos:column="58">*</type:modifier></type><name pos:line="8788" pos:column="59">noname</name></decl></param>,
            <comment type="block" pos:line="8789" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8789" pos:column="33">__RPC__out</name> <name pos:line="8789" pos:column="44">void</name> <type:modifier pos:line="8789" pos:column="49">*</type:modifier></type><name pos:line="8789" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8791" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8791" pos:column="43">HRESULT</name></type> ( <name pos:line="8791" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8791" pos:column="71">*</type:modifier><name pos:line="8791" pos:column="72">get_CurrentStackFrame</name> )<parameter_list pos:line="8791" pos:column="95">( 
            <param><decl><type><name pos:line="8792" pos:column="13">Debugger2</name> <type:modifier pos:line="8792" pos:column="23">*</type:modifier></type> <name pos:line="8792" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8793" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8793" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8793" pos:column="54">StackFrame</name> <type:modifier pos:line="8793" pos:column="65">*</type:modifier><type:modifier pos:line="8793" pos:column="66">*</type:modifier></type><name pos:line="8793" pos:column="67">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8795" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="8795" pos:column="43">HRESULT</name></type> ( <name pos:line="8795" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8795" pos:column="71">*</type:modifier><name pos:line="8795" pos:column="72">put_CurrentStackFrame</name> )<parameter_list pos:line="8795" pos:column="95">( 
            <param><decl><type><name pos:line="8796" pos:column="13">Debugger2</name> <type:modifier pos:line="8796" pos:column="23">*</type:modifier></type> <name pos:line="8796" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8797" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8797" pos:column="37">__RPC__in_opt</name> <name pos:line="8797" pos:column="51">StackFrame</name> <type:modifier pos:line="8797" pos:column="62">*</type:modifier></type><name pos:line="8797" pos:column="63">noname</name></decl></param>,
            <comment type="block" pos:line="8798" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8798" pos:column="33">__RPC__out</name> <name pos:line="8798" pos:column="44">void</name> <type:modifier pos:line="8798" pos:column="49">*</type:modifier></type><name pos:line="8798" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8800" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8800" pos:column="43">HRESULT</name></type> ( <name pos:line="8800" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8800" pos:column="71">*</type:modifier><name pos:line="8800" pos:column="72">get_HexDisplayMode</name> )<parameter_list pos:line="8800" pos:column="92">( 
            <param><decl><type><name pos:line="8801" pos:column="13">Debugger2</name> <type:modifier pos:line="8801" pos:column="23">*</type:modifier></type> <name pos:line="8801" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8802" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8802" pos:column="33">__RPC__out</name> <name pos:line="8802" pos:column="44">BOOLEAN</name> <type:modifier pos:line="8802" pos:column="52">*</type:modifier></type><name pos:line="8802" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8804" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="8804" pos:column="43">HRESULT</name></type> ( <name pos:line="8804" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8804" pos:column="71">*</type:modifier><name pos:line="8804" pos:column="72">put_HexDisplayMode</name> )<parameter_list pos:line="8804" pos:column="92">( 
            <param><decl><type><name pos:line="8805" pos:column="13">Debugger2</name> <type:modifier pos:line="8805" pos:column="23">*</type:modifier></type> <name pos:line="8805" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8806" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8806" pos:column="37">BOOLEAN</name></type> <name pos:line="8806" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="8807" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8807" pos:column="33">__RPC__out</name> <name pos:line="8807" pos:column="44">void</name> <type:modifier pos:line="8807" pos:column="49">*</type:modifier></type><name pos:line="8807" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8809" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8809" pos:column="43">HRESULT</name></type> ( <name pos:line="8809" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8809" pos:column="71">*</type:modifier><name pos:line="8809" pos:column="72">get_HexInputMode</name> )<parameter_list pos:line="8809" pos:column="90">( 
            <param><decl><type><name pos:line="8810" pos:column="13">Debugger2</name> <type:modifier pos:line="8810" pos:column="23">*</type:modifier></type> <name pos:line="8810" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8811" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8811" pos:column="33">__RPC__out</name> <name pos:line="8811" pos:column="44">BOOLEAN</name> <type:modifier pos:line="8811" pos:column="52">*</type:modifier></type><name pos:line="8811" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8813" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="8813" pos:column="43">HRESULT</name></type> ( <name pos:line="8813" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8813" pos:column="71">*</type:modifier><name pos:line="8813" pos:column="72">put_HexInputMode</name> )<parameter_list pos:line="8813" pos:column="90">( 
            <param><decl><type><name pos:line="8814" pos:column="13">Debugger2</name> <type:modifier pos:line="8814" pos:column="23">*</type:modifier></type> <name pos:line="8814" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8815" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="8815" pos:column="37">BOOLEAN</name></type> <name pos:line="8815" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="8816" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8816" pos:column="33">__RPC__out</name> <name pos:line="8816" pos:column="44">void</name> <type:modifier pos:line="8816" pos:column="49">*</type:modifier></type><name pos:line="8816" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8818" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="8818" pos:column="43">HRESULT</name> <argument_list pos:line="8818" pos:column="51">( <argument pos:line="8818" pos:column="53">STDMETHODCALLTYPE *get_LastBreakReason</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="8818" pos:column="93">(</op:operator> 
            <name pos:line="8819" pos:column="13">Debugger2</name> <op:operator pos:line="8819" pos:column="23">*</op:operator> <name pos:line="8819" pos:column="25">This</name><op:operator pos:line="8819" pos:column="29">,</op:operator>
            <comment type="block" pos:line="8820" pos:column="13">/* [retval][out] */</comment> <name pos:line="8820" pos:column="33">__RPC__out</name> enum <name pos:line="8820" pos:column="49">dbgEventReason</name> <op:operator pos:line="8820" pos:column="64">*</op:operator><name pos:line="8820" pos:column="65">retval</name><op:operator pos:line="8820" pos:column="71">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="8822" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8822" pos:column="43">HRESULT</name></type> ( <name pos:line="8822" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8822" pos:column="71">*</type:modifier><name pos:line="8822" pos:column="72">get_BreakpointLastHit</name> )<parameter_list pos:line="8822" pos:column="95">( 
            <param><decl><type><name pos:line="8823" pos:column="13">Debugger2</name> <type:modifier pos:line="8823" pos:column="23">*</type:modifier></type> <name pos:line="8823" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8824" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8824" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8824" pos:column="54">Breakpoint</name> <type:modifier pos:line="8824" pos:column="65">*</type:modifier><type:modifier pos:line="8824" pos:column="66">*</type:modifier></type><name pos:line="8824" pos:column="67">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8826" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8826" pos:column="43">HRESULT</name></type> ( <name pos:line="8826" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8826" pos:column="71">*</type:modifier><name pos:line="8826" pos:column="72">get_AllBreakpointsLastHit</name> )<parameter_list pos:line="8826" pos:column="99">( 
            <param><decl><type><name pos:line="8827" pos:column="13">Debugger2</name> <type:modifier pos:line="8827" pos:column="23">*</type:modifier></type> <name pos:line="8827" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8828" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8828" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8828" pos:column="54">Breakpoints</name> <type:modifier pos:line="8828" pos:column="66">*</type:modifier><type:modifier pos:line="8828" pos:column="67">*</type:modifier></type><name pos:line="8828" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8830" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8830" pos:column="43">HRESULT</name></type> ( <name pos:line="8830" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8830" pos:column="71">*</type:modifier><name pos:line="8830" pos:column="72">get_DebuggedProcesses</name> )<parameter_list pos:line="8830" pos:column="95">( 
            <param><decl><type><name pos:line="8831" pos:column="13">Debugger2</name> <type:modifier pos:line="8831" pos:column="23">*</type:modifier></type> <name pos:line="8831" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8832" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8832" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8832" pos:column="54">Processes</name> <type:modifier pos:line="8832" pos:column="64">*</type:modifier><type:modifier pos:line="8832" pos:column="65">*</type:modifier></type><name pos:line="8832" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8834" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8834" pos:column="43">HRESULT</name></type> ( <name pos:line="8834" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8834" pos:column="71">*</type:modifier><name pos:line="8834" pos:column="72">get_LocalProcesses</name> )<parameter_list pos:line="8834" pos:column="92">( 
            <param><decl><type><name pos:line="8835" pos:column="13">Debugger2</name> <type:modifier pos:line="8835" pos:column="23">*</type:modifier></type> <name pos:line="8835" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8836" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8836" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8836" pos:column="54">Processes</name> <type:modifier pos:line="8836" pos:column="64">*</type:modifier><type:modifier pos:line="8836" pos:column="65">*</type:modifier></type><name pos:line="8836" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8838" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8838" pos:column="43">HRESULT</name></type> ( <name pos:line="8838" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8838" pos:column="71">*</type:modifier><name pos:line="8838" pos:column="72">get_DTE</name> )<parameter_list pos:line="8838" pos:column="81">( 
            <param><decl><type><name pos:line="8839" pos:column="13">Debugger2</name> <type:modifier pos:line="8839" pos:column="23">*</type:modifier></type> <name pos:line="8839" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8840" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8840" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="8840" pos:column="54">*</type:modifier><type:modifier pos:line="8840" pos:column="55">*</type:modifier></type><name pos:line="8840" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8842" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="8842" pos:column="43">HRESULT</name></type> ( <name pos:line="8842" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="8842" pos:column="71">*</type:modifier><name pos:line="8842" pos:column="72">get_Parent</name> )<parameter_list pos:line="8842" pos:column="84">( 
            <param><decl><type><name pos:line="8843" pos:column="13">Debugger2</name> <type:modifier pos:line="8843" pos:column="23">*</type:modifier></type> <name pos:line="8843" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8844" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8844" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="8844" pos:column="54">*</type:modifier><type:modifier pos:line="8844" pos:column="55">*</type:modifier></type><name pos:line="8844" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8846" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="8846" pos:column="34">HRESULT</name></type> ( <name pos:line="8846" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="8846" pos:column="62">*</type:modifier><name pos:line="8846" pos:column="63">TerminateAll</name> )<parameter_list pos:line="8846" pos:column="77">( 
            <param><decl><type><name pos:line="8847" pos:column="13">Debugger2</name> <type:modifier pos:line="8847" pos:column="23">*</type:modifier></type> <name pos:line="8847" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8848" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8848" pos:column="33">__RPC__out</name> <name pos:line="8848" pos:column="44">void</name> <type:modifier pos:line="8848" pos:column="49">*</type:modifier></type><name pos:line="8848" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8850" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="8850" pos:column="64">HRESULT</name></type> ( <name pos:line="8850" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="8850" pos:column="92">*</type:modifier><name pos:line="8850" pos:column="93">WriteMinidump</name> )<parameter_list pos:line="8850" pos:column="108">( 
            <param><decl><type><name pos:line="8851" pos:column="13">Debugger2</name> <type:modifier pos:line="8851" pos:column="23">*</type:modifier></type> <name pos:line="8851" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8852" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8852" pos:column="24">__RPC__in</name> <name pos:line="8852" pos:column="34">BSTR</name></type> <name pos:line="8852" pos:column="39">FileName</name></decl></param>,
            <comment type="block" pos:line="8853" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8853" pos:column="24">dbgMinidumpOption</name></type> <name pos:line="8853" pos:column="42">Option</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8855" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="8855" pos:column="64">HRESULT</name></type> ( <name pos:line="8855" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="8855" pos:column="92">*</type:modifier><name pos:line="8855" pos:column="93">GetProcesses</name> )<parameter_list pos:line="8855" pos:column="107">( 
            <param><decl><type><name pos:line="8856" pos:column="13">Debugger2</name> <type:modifier pos:line="8856" pos:column="23">*</type:modifier></type> <name pos:line="8856" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8857" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8857" pos:column="24">__RPC__in_opt</name> <name pos:line="8857" pos:column="38">Transport</name> <type:modifier pos:line="8857" pos:column="48">*</type:modifier></type><name pos:line="8857" pos:column="49">pTransport</name></decl></param>,
            <comment type="block" pos:line="8858" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8858" pos:column="24">__RPC__in</name> <name pos:line="8858" pos:column="34">BSTR</name></type> <name pos:line="8858" pos:column="39">TransportQualifier</name></decl></param>,
            <comment type="block" pos:line="8859" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8859" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="8859" pos:column="54">/* external definition not present */</comment> <name pos:line="8859" pos:column="92">Processes</name> <type:modifier pos:line="8859" pos:column="102">*</type:modifier><type:modifier pos:line="8859" pos:column="103">*</type:modifier></type><name pos:line="8859" pos:column="104">Processes</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8861" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="8861" pos:column="64">HRESULT</name></type> ( <name pos:line="8861" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="8861" pos:column="92">*</type:modifier><name pos:line="8861" pos:column="93">GetExpression2</name> )<parameter_list pos:line="8861" pos:column="109">( 
            <param><decl><type><name pos:line="8862" pos:column="13">Debugger2</name> <type:modifier pos:line="8862" pos:column="23">*</type:modifier></type> <name pos:line="8862" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8863" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="8863" pos:column="24">__RPC__in</name> <name pos:line="8863" pos:column="34">BSTR</name></type> <name pos:line="8863" pos:column="39">ExpressionText</name></decl></param>,
            <comment type="block" pos:line="8864" pos:column="13">/* [defaultvalue][optional][in] */</comment> <param><decl><type><name pos:line="8864" pos:column="48">VARIANT_BOOL</name></type> <name pos:line="8864" pos:column="61">UseAutoExpandRules</name></decl></param>,
            <comment type="block" pos:line="8865" pos:column="13">/* [defaultvalue][optional][in] */</comment> <param><decl><type><name pos:line="8865" pos:column="48">VARIANT_BOOL</name></type> <name pos:line="8865" pos:column="61">TreatAsStatement</name></decl></param>,
            <comment type="block" pos:line="8866" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="8866" pos:column="38">long</name></type> <name pos:line="8866" pos:column="43">Timeout</name></decl></param>,
            <comment type="block" pos:line="8867" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8867" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="8867" pos:column="54">/* external definition not present */</comment> <name pos:line="8867" pos:column="92">Expression</name> <type:modifier pos:line="8867" pos:column="103">*</type:modifier><type:modifier pos:line="8867" pos:column="104">*</type:modifier></type><name pos:line="8867" pos:column="105">Expression</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="8869" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="8869" pos:column="73">HRESULT</name></type> ( <name pos:line="8869" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="8869" pos:column="101">*</type:modifier><name pos:line="8869" pos:column="102">get_Transports</name> )<parameter_list pos:line="8869" pos:column="118">( 
            <param><decl><type><name pos:line="8870" pos:column="13">Debugger2</name> <type:modifier pos:line="8870" pos:column="23">*</type:modifier></type> <name pos:line="8870" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="8871" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="8871" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="8871" pos:column="54">Transports</name> <type:modifier pos:line="8871" pos:column="65">*</type:modifier><type:modifier pos:line="8871" pos:column="66">*</type:modifier></type><name pos:line="8871" pos:column="67">Transports</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="8873" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="8874" pos:column="7">Debugger2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="8876" pos:column="5">interface</name></type> <name pos:line="8876" pos:column="15">Debugger2</name>
    <argument_list pos:line="8877" pos:column="5">{
        <argument><expr><name pos:line="8878" pos:column="9">CONST_VTBL</name> struct <name pos:line="8878" pos:column="27">Debugger2Vtbl</name> <op:operator pos:line="8878" pos:column="41">*</op:operator><name pos:line="8878" pos:column="42">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="8883" pos:column="1">#<cpp:directive pos:line="8883" pos:column="2">ifdef</cpp:directive> <name pos:line="8883" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="8886" pos:column="1">#<cpp:directive pos:line="8886" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8886" pos:column="9">Debugger2_QueryInterface</name><parameter_list pos:line="8886" pos:column="33">(<param><type><name pos:line="8886" pos:column="34">This</name></type></param>,<param><type><name pos:line="8886" pos:column="39">riid</name></type></param>,<param><type><name pos:line="8886" pos:column="44">ppvObj</name></type></param>,<param><type><name pos:line="8886" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8887" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8889" pos:column="1">#<cpp:directive pos:line="8889" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8889" pos:column="9">Debugger2_AddRef</name><parameter_list pos:line="8889" pos:column="25">(<param><type><name pos:line="8889" pos:column="26">This</name></type></param>,<param><type><name pos:line="8889" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8890" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8892" pos:column="1">#<cpp:directive pos:line="8892" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8892" pos:column="9">Debugger2_Release</name><parameter_list pos:line="8892" pos:column="26">(<param><type><name pos:line="8892" pos:column="27">This</name></type></param>,<param><type><name pos:line="8892" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8893" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8895" pos:column="1">#<cpp:directive pos:line="8895" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8895" pos:column="9">Debugger2_GetTypeInfoCount</name><parameter_list pos:line="8895" pos:column="35">(<param><type><name pos:line="8895" pos:column="36">This</name></type></param>,<param><type><name pos:line="8895" pos:column="41">pctinfo</name></type></param>,<param><type><name pos:line="8895" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8896" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8898" pos:column="1">#<cpp:directive pos:line="8898" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8898" pos:column="9">Debugger2_GetTypeInfo</name><parameter_list pos:line="8898" pos:column="30">(<param><type><name pos:line="8898" pos:column="31">This</name></type></param>,<param><type><name pos:line="8898" pos:column="36">itinfo</name></type></param>,<param><type><name pos:line="8898" pos:column="43">lcid</name></type></param>,<param><type><name pos:line="8898" pos:column="48">pptinfo</name></type></param>,<param><type><name pos:line="8898" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8899" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8901" pos:column="1">#<cpp:directive pos:line="8901" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8901" pos:column="9">Debugger2_GetIDsOfNames</name><parameter_list pos:line="8901" pos:column="32">(<param><type><name pos:line="8901" pos:column="33">This</name></type></param>,<param><type><name pos:line="8901" pos:column="38">riid</name></type></param>,<param><type><name pos:line="8901" pos:column="43">rgszNames</name></type></param>,<param><type><name pos:line="8901" pos:column="53">cNames</name></type></param>,<param><type><name pos:line="8901" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="8901" pos:column="65">rgdispid</name></type></param>,<param><type><name pos:line="8901" pos:column="74">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8902" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8904" pos:column="1">#<cpp:directive pos:line="8904" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8904" pos:column="9">Debugger2_Invoke</name><parameter_list pos:line="8904" pos:column="25">(<param><type><name pos:line="8904" pos:column="26">This</name></type></param>,<param><type><name pos:line="8904" pos:column="31">dispidMember</name></type></param>,<param><type><name pos:line="8904" pos:column="44">riid</name></type></param>,<param><type><name pos:line="8904" pos:column="49">lcid</name></type></param>,<param><type><name pos:line="8904" pos:column="54">wFlags</name></type></param>,<param><type><name pos:line="8904" pos:column="61">pdispparams</name></type></param>,<param><type><name pos:line="8904" pos:column="73">pvarResult</name></type></param>,<param><type><name pos:line="8904" pos:column="84">pexcepinfo</name></type></param>,<param><type><name pos:line="8904" pos:column="95">puArgErr</name></type></param>,<param><type><name pos:line="8904" pos:column="104">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8905" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8907" pos:column="1">#<cpp:directive pos:line="8907" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8907" pos:column="9">Debugger2_GetExpression</name><parameter_list pos:line="8907" pos:column="32">(<param><type><name pos:line="8907" pos:column="33">This</name></type></param>,<param><type><name pos:line="8907" pos:column="38">ExpressionText</name></type></param>,<param><type><name pos:line="8907" pos:column="53">UseAutoExpandRules</name></type></param>,<param><type><name pos:line="8907" pos:column="72">Timeout</name></type></param>,<param><type><name pos:line="8907" pos:column="80">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8908" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExpression(This,ExpressionText,UseAutoExpandRules,Timeout,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8910" pos:column="1">#<cpp:directive pos:line="8910" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8910" pos:column="9">Debugger2_DetachAll</name><parameter_list pos:line="8910" pos:column="28">(<param><type><name pos:line="8910" pos:column="29">This</name></type></param>,<param><type><name pos:line="8910" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8911" pos:column="5">( (This)-&gt;lpVtbl -&gt; DetachAll(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8913" pos:column="1">#<cpp:directive pos:line="8913" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8913" pos:column="9">Debugger2_StepInto</name><parameter_list pos:line="8913" pos:column="27">(<param><type><name pos:line="8913" pos:column="28">This</name></type></param>,<param><type><name pos:line="8913" pos:column="33">WaitForBreakOrEnd</name></type></param>,<param><type><name pos:line="8913" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8914" pos:column="5">( (This)-&gt;lpVtbl -&gt; StepInto(This,WaitForBreakOrEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8916" pos:column="1">#<cpp:directive pos:line="8916" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8916" pos:column="9">Debugger2_StepOver</name><parameter_list pos:line="8916" pos:column="27">(<param><type><name pos:line="8916" pos:column="28">This</name></type></param>,<param><type><name pos:line="8916" pos:column="33">WaitForBreakOrEnd</name></type></param>,<param><type><name pos:line="8916" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8917" pos:column="5">( (This)-&gt;lpVtbl -&gt; StepOver(This,WaitForBreakOrEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8919" pos:column="1">#<cpp:directive pos:line="8919" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8919" pos:column="9">Debugger2_StepOut</name><parameter_list pos:line="8919" pos:column="26">(<param><type><name pos:line="8919" pos:column="27">This</name></type></param>,<param><type><name pos:line="8919" pos:column="32">WaitForBreakOrEnd</name></type></param>,<param><type><name pos:line="8919" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8920" pos:column="5">( (This)-&gt;lpVtbl -&gt; StepOut(This,WaitForBreakOrEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8922" pos:column="1">#<cpp:directive pos:line="8922" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8922" pos:column="9">Debugger2_Go</name><parameter_list pos:line="8922" pos:column="21">(<param><type><name pos:line="8922" pos:column="22">This</name></type></param>,<param><type><name pos:line="8922" pos:column="27">WaitForBreakOrEnd</name></type></param>,<param><type><name pos:line="8922" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8923" pos:column="5">( (This)-&gt;lpVtbl -&gt; Go(This,WaitForBreakOrEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8925" pos:column="1">#<cpp:directive pos:line="8925" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8925" pos:column="9">Debugger2_Break</name><parameter_list pos:line="8925" pos:column="24">(<param><type><name pos:line="8925" pos:column="25">This</name></type></param>,<param><type><name pos:line="8925" pos:column="30">WaitForBreakMode</name></type></param>,<param><type><name pos:line="8925" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8926" pos:column="5">( (This)-&gt;lpVtbl -&gt; Break(This,WaitForBreakMode,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8928" pos:column="1">#<cpp:directive pos:line="8928" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8928" pos:column="9">Debugger2_Stop</name><parameter_list pos:line="8928" pos:column="23">(<param><type><name pos:line="8928" pos:column="24">This</name></type></param>,<param><type><name pos:line="8928" pos:column="29">WaitForDesignMode</name></type></param>,<param><type><name pos:line="8928" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8929" pos:column="5">( (This)-&gt;lpVtbl -&gt; Stop(This,WaitForDesignMode,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8931" pos:column="1">#<cpp:directive pos:line="8931" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8931" pos:column="9">Debugger2_SetNextStatement</name><parameter_list pos:line="8931" pos:column="35">(<param><type><name pos:line="8931" pos:column="36">This</name></type></param>,<param><type><name pos:line="8931" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8932" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetNextStatement(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8934" pos:column="1">#<cpp:directive pos:line="8934" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8934" pos:column="9">Debugger2_RunToCursor</name><parameter_list pos:line="8934" pos:column="30">(<param><type><name pos:line="8934" pos:column="31">This</name></type></param>,<param><type><name pos:line="8934" pos:column="36">WaitForBreakOrEnd</name></type></param>,<param><type><name pos:line="8934" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8935" pos:column="5">( (This)-&gt;lpVtbl -&gt; RunToCursor(This,WaitForBreakOrEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8937" pos:column="1">#<cpp:directive pos:line="8937" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8937" pos:column="9">Debugger2_ExecuteStatement</name><parameter_list pos:line="8937" pos:column="35">(<param><type><name pos:line="8937" pos:column="36">This</name></type></param>,<param><type><name pos:line="8937" pos:column="41">Statement</name></type></param>,<param><type><name pos:line="8937" pos:column="51">Timeout</name></type></param>,<param><type><name pos:line="8937" pos:column="59">TreatAsExpression</name></type></param>,<param><type><name pos:line="8937" pos:column="77">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8938" pos:column="5">( (This)-&gt;lpVtbl -&gt; ExecuteStatement(This,Statement,Timeout,TreatAsExpression,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8940" pos:column="1">#<cpp:directive pos:line="8940" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8940" pos:column="9">Debugger2_get_Breakpoints</name><parameter_list pos:line="8940" pos:column="34">(<param><type><name pos:line="8940" pos:column="35">This</name></type></param>,<param><type><name pos:line="8940" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8941" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Breakpoints(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8943" pos:column="1">#<cpp:directive pos:line="8943" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8943" pos:column="9">Debugger2_get_Languages</name><parameter_list pos:line="8943" pos:column="32">(<param><type><name pos:line="8943" pos:column="33">This</name></type></param>,<param><type><name pos:line="8943" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8944" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Languages(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8946" pos:column="1">#<cpp:directive pos:line="8946" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8946" pos:column="9">Debugger2_get_CurrentMode</name><parameter_list pos:line="8946" pos:column="34">(<param><type><name pos:line="8946" pos:column="35">This</name></type></param>,<param><type><name pos:line="8946" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8947" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CurrentMode(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8949" pos:column="1">#<cpp:directive pos:line="8949" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8949" pos:column="9">Debugger2_get_CurrentProcess</name><parameter_list pos:line="8949" pos:column="37">(<param><type><name pos:line="8949" pos:column="38">This</name></type></param>,<param><type><name pos:line="8949" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8950" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CurrentProcess(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8952" pos:column="1">#<cpp:directive pos:line="8952" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8952" pos:column="9">Debugger2_put_CurrentProcess</name><parameter_list pos:line="8952" pos:column="37">(<param><type><name pos:line="8952" pos:column="38">This</name></type></param>,<param><type><name pos:line="8952" pos:column="43">noname</name></type></param>,<param><type><name pos:line="8952" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8953" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_CurrentProcess(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8955" pos:column="1">#<cpp:directive pos:line="8955" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8955" pos:column="9">Debugger2_get_CurrentProgram</name><parameter_list pos:line="8955" pos:column="37">(<param><type><name pos:line="8955" pos:column="38">This</name></type></param>,<param><type><name pos:line="8955" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8956" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CurrentProgram(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8958" pos:column="1">#<cpp:directive pos:line="8958" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8958" pos:column="9">Debugger2_put_CurrentProgram</name><parameter_list pos:line="8958" pos:column="37">(<param><type><name pos:line="8958" pos:column="38">This</name></type></param>,<param><type><name pos:line="8958" pos:column="43">noname</name></type></param>,<param><type><name pos:line="8958" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8959" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_CurrentProgram(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8961" pos:column="1">#<cpp:directive pos:line="8961" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8961" pos:column="9">Debugger2_get_CurrentThread</name><parameter_list pos:line="8961" pos:column="36">(<param><type><name pos:line="8961" pos:column="37">This</name></type></param>,<param><type><name pos:line="8961" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8962" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CurrentThread(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8964" pos:column="1">#<cpp:directive pos:line="8964" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8964" pos:column="9">Debugger2_put_CurrentThread</name><parameter_list pos:line="8964" pos:column="36">(<param><type><name pos:line="8964" pos:column="37">This</name></type></param>,<param><type><name pos:line="8964" pos:column="42">noname</name></type></param>,<param><type><name pos:line="8964" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8965" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_CurrentThread(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8967" pos:column="1">#<cpp:directive pos:line="8967" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8967" pos:column="9">Debugger2_get_CurrentStackFrame</name><parameter_list pos:line="8967" pos:column="40">(<param><type><name pos:line="8967" pos:column="41">This</name></type></param>,<param><type><name pos:line="8967" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8968" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CurrentStackFrame(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8970" pos:column="1">#<cpp:directive pos:line="8970" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8970" pos:column="9">Debugger2_put_CurrentStackFrame</name><parameter_list pos:line="8970" pos:column="40">(<param><type><name pos:line="8970" pos:column="41">This</name></type></param>,<param><type><name pos:line="8970" pos:column="46">noname</name></type></param>,<param><type><name pos:line="8970" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8971" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_CurrentStackFrame(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8973" pos:column="1">#<cpp:directive pos:line="8973" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8973" pos:column="9">Debugger2_get_HexDisplayMode</name><parameter_list pos:line="8973" pos:column="37">(<param><type><name pos:line="8973" pos:column="38">This</name></type></param>,<param><type><name pos:line="8973" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8974" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_HexDisplayMode(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8976" pos:column="1">#<cpp:directive pos:line="8976" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8976" pos:column="9">Debugger2_put_HexDisplayMode</name><parameter_list pos:line="8976" pos:column="37">(<param><type><name pos:line="8976" pos:column="38">This</name></type></param>,<param><type><name pos:line="8976" pos:column="43">noname</name></type></param>,<param><type><name pos:line="8976" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8977" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_HexDisplayMode(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8979" pos:column="1">#<cpp:directive pos:line="8979" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8979" pos:column="9">Debugger2_get_HexInputMode</name><parameter_list pos:line="8979" pos:column="35">(<param><type><name pos:line="8979" pos:column="36">This</name></type></param>,<param><type><name pos:line="8979" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8980" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_HexInputMode(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8982" pos:column="1">#<cpp:directive pos:line="8982" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8982" pos:column="9">Debugger2_put_HexInputMode</name><parameter_list pos:line="8982" pos:column="35">(<param><type><name pos:line="8982" pos:column="36">This</name></type></param>,<param><type><name pos:line="8982" pos:column="41">noname</name></type></param>,<param><type><name pos:line="8982" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8983" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_HexInputMode(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8985" pos:column="1">#<cpp:directive pos:line="8985" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8985" pos:column="9">Debugger2_get_LastBreakReason</name><parameter_list pos:line="8985" pos:column="38">(<param><type><name pos:line="8985" pos:column="39">This</name></type></param>,<param><type><name pos:line="8985" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8986" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_LastBreakReason(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8988" pos:column="1">#<cpp:directive pos:line="8988" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8988" pos:column="9">Debugger2_get_BreakpointLastHit</name><parameter_list pos:line="8988" pos:column="40">(<param><type><name pos:line="8988" pos:column="41">This</name></type></param>,<param><type><name pos:line="8988" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8989" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_BreakpointLastHit(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8991" pos:column="1">#<cpp:directive pos:line="8991" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8991" pos:column="9">Debugger2_get_AllBreakpointsLastHit</name><parameter_list pos:line="8991" pos:column="44">(<param><type><name pos:line="8991" pos:column="45">This</name></type></param>,<param><type><name pos:line="8991" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8992" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_AllBreakpointsLastHit(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8994" pos:column="1">#<cpp:directive pos:line="8994" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8994" pos:column="9">Debugger2_get_DebuggedProcesses</name><parameter_list pos:line="8994" pos:column="40">(<param><type><name pos:line="8994" pos:column="41">This</name></type></param>,<param><type><name pos:line="8994" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8995" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DebuggedProcesses(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="8997" pos:column="1">#<cpp:directive pos:line="8997" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8997" pos:column="9">Debugger2_get_LocalProcesses</name><parameter_list pos:line="8997" pos:column="37">(<param><type><name pos:line="8997" pos:column="38">This</name></type></param>,<param><type><name pos:line="8997" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="8998" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_LocalProcesses(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9000" pos:column="1">#<cpp:directive pos:line="9000" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9000" pos:column="9">Debugger2_get_DTE</name><parameter_list pos:line="9000" pos:column="26">(<param><type><name pos:line="9000" pos:column="27">This</name></type></param>,<param><type><name pos:line="9000" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9001" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9003" pos:column="1">#<cpp:directive pos:line="9003" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9003" pos:column="9">Debugger2_get_Parent</name><parameter_list pos:line="9003" pos:column="29">(<param><type><name pos:line="9003" pos:column="30">This</name></type></param>,<param><type><name pos:line="9003" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9004" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9006" pos:column="1">#<cpp:directive pos:line="9006" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9006" pos:column="9">Debugger2_TerminateAll</name><parameter_list pos:line="9006" pos:column="31">(<param><type><name pos:line="9006" pos:column="32">This</name></type></param>,<param><type><name pos:line="9006" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9007" pos:column="5">( (This)-&gt;lpVtbl -&gt; TerminateAll(This,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="9010" pos:column="1">#<cpp:directive pos:line="9010" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9010" pos:column="9">Debugger2_WriteMinidump</name><parameter_list pos:line="9010" pos:column="32">(<param><type><name pos:line="9010" pos:column="33">This</name></type></param>,<param><type><name pos:line="9010" pos:column="38">FileName</name></type></param>,<param><type><name pos:line="9010" pos:column="47">Option</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9011" pos:column="5">( (This)-&gt;lpVtbl -&gt; WriteMinidump(This,FileName,Option) )</cpp:value></cpp:define> 

<cpp:define pos:line="9013" pos:column="1">#<cpp:directive pos:line="9013" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9013" pos:column="9">Debugger2_GetProcesses</name><parameter_list pos:line="9013" pos:column="31">(<param><type><name pos:line="9013" pos:column="32">This</name></type></param>,<param><type><name pos:line="9013" pos:column="37">pTransport</name></type></param>,<param><type><name pos:line="9013" pos:column="48">TransportQualifier</name></type></param>,<param><type><name pos:line="9013" pos:column="67">Processes</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9014" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProcesses(This,pTransport,TransportQualifier,Processes) )</cpp:value></cpp:define> 

<cpp:define pos:line="9016" pos:column="1">#<cpp:directive pos:line="9016" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9016" pos:column="9">Debugger2_GetExpression2</name><parameter_list pos:line="9016" pos:column="33">(<param><type><name pos:line="9016" pos:column="34">This</name></type></param>,<param><type><name pos:line="9016" pos:column="39">ExpressionText</name></type></param>,<param><type><name pos:line="9016" pos:column="54">UseAutoExpandRules</name></type></param>,<param><type><name pos:line="9016" pos:column="73">TreatAsStatement</name></type></param>,<param><type><name pos:line="9016" pos:column="90">Timeout</name></type></param>,<param><type><name pos:line="9016" pos:column="98">Expression</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9017" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExpression2(This,ExpressionText,UseAutoExpandRules,TreatAsStatement,Timeout,Expression) )</cpp:value></cpp:define> 

<cpp:define pos:line="9019" pos:column="1">#<cpp:directive pos:line="9019" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9019" pos:column="9">Debugger2_get_Transports</name><parameter_list pos:line="9019" pos:column="33">(<param><type><name pos:line="9019" pos:column="34">This</name></type></param>,<param><type><name pos:line="9019" pos:column="39">Transports</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9020" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Transports(This,Transports) )</cpp:value></cpp:define> 

<cpp:endif pos:line="9022" pos:column="1">#<cpp:directive pos:line="9022" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="9022" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="9025" pos:column="1">#<cpp:directive pos:line="9025" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9025" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="9030" pos:column="1">#<cpp:directive pos:line="9030" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9030" pos:column="9">/* __Debugger2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="9033" pos:column="1">#<cpp:directive pos:line="9033" pos:column="2">ifndef</cpp:directive> <name pos:line="9033" pos:column="9">__Process2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="9034" pos:column="1">#<cpp:directive pos:line="9034" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9034" pos:column="9">__Process2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="9036" pos:column="1">/* interface Process2 */</comment>
<comment type="block" pos:line="9037" pos:column="1">/* [object][version][helpstringcontext][helpstring][helpcontext][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="9040" pos:column="1">EXTERN_C</name> <specifier pos:line="9040" pos:column="10">const</specifier> <name pos:line="9040" pos:column="16">IID</name></type> <name pos:line="9040" pos:column="20">IID_Process2</name></decl>;</decl_stmt>

<cpp:if pos:line="9042" pos:column="1">#<cpp:directive pos:line="9042" pos:column="2">if</cpp:directive> <expr><call><name pos:line="9042" pos:column="5">defined</name><argument_list pos:line="9042" pos:column="12">(<argument><expr><name pos:line="9042" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="9042" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="9042" pos:column="29">!</op:operator><call><name pos:line="9042" pos:column="30">defined</name><argument_list pos:line="9042" pos:column="37">(<argument><expr><name pos:line="9042" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="9044" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="9044" pos:column="19">(<argument pos:line="9044" pos:column="20">"95AC1923-6EAA-427c-B43E-6274A8CA6C95"</argument>)</argument_list></macro>
    <label><name pos:line="9045" pos:column="5">Process2</name> :</label> <expr_stmt><expr pos:line="9045" pos:column="16">public <name pos:line="9045" pos:column="23">Process</name>
    <block pos:line="9046" pos:column="5">{
    <expr pos:line="9047" pos:column="5">public<op:operator pos:line="9047" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="9048" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="9048" pos:column="72">HRESULT</name> <name pos:line="9048" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="9048" pos:column="98">Attach2</name><argument_list pos:line="9048" pos:column="105">( 
            <comment type="block" pos:line="9049" pos:column="13">/* [optional][defaultvalue][in] */</comment> <argument pos:line="9049" pos:column="48">VARIANT Engines</argument>)</argument_list></macro> <op:operator pos:line="9049" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="9049" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="9051" pos:column="9">virtual <comment type="block" pos:line="9051" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9051" pos:column="81">HRESULT</name> <name pos:line="9051" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9051" pos:column="107">get_Transport</name><argument_list pos:line="9051" pos:column="120">( 
            <comment type="block" pos:line="9052" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9052" pos:column="33">__RPC__deref_out_opt Transport **Transport</argument>)</argument_list></macro> <op:operator pos:line="9052" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="9052" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="9054" pos:column="9">virtual <comment type="block" pos:line="9054" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9054" pos:column="81">HRESULT</name> <name pos:line="9054" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9054" pos:column="107">get_TransportQualifier</name><argument_list pos:line="9054" pos:column="129">( 
            <comment type="block" pos:line="9055" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9055" pos:column="33">__RPC__deref_out_opt BSTR *TransportQualifier</argument>)</argument_list></macro> <op:operator pos:line="9055" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="9055" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="9057" pos:column="9">virtual <comment type="block" pos:line="9057" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9057" pos:column="81">HRESULT</name> <name pos:line="9057" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9057" pos:column="107">get_Threads</name><argument_list pos:line="9057" pos:column="118">( 
            <comment type="block" pos:line="9058" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9058" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="9058" pos:column="54">/* external definition not present */</comment> Threads **Threads</argument>)</argument_list></macro> <op:operator pos:line="9058" pos:column="111">=</op:operator> <lit:literal type="number" pos:line="9058" pos:column="113">0</lit:literal></expr>;
        
        <expr pos:line="9060" pos:column="9">virtual <comment type="block" pos:line="9060" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9060" pos:column="81">HRESULT</name> <name pos:line="9060" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9060" pos:column="107">get_IsBeingDebugged</name><argument_list pos:line="9060" pos:column="126">( 
            <comment type="block" pos:line="9061" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9061" pos:column="33">__RPC__out VARIANT_BOOL *IsBeingDebugged</argument>)</argument_list></macro> <op:operator pos:line="9061" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="9061" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="9063" pos:column="9">virtual <comment type="block" pos:line="9063" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9063" pos:column="81">HRESULT</name> <name pos:line="9063" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9063" pos:column="107">get_UserName</name><argument_list pos:line="9063" pos:column="119">( 
            <comment type="block" pos:line="9064" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9064" pos:column="33">__RPC__deref_out_opt BSTR *UserName</argument>)</argument_list></macro> <op:operator pos:line="9064" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="9064" pos:column="72">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="9068" pos:column="1">#<cpp:directive pos:line="9068" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="9068" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="9070" pos:column="5">typedef <type><struct pos:line="9070" pos:column="13">struct <name pos:line="9070" pos:column="20">Process2Vtbl</name>
    <block pos:line="9071" pos:column="5">{<public type="default" pos:line="9071" pos:column="6">
        <decl_stmt><decl><type><name pos:line="9072" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="9074" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="9074" pos:column="46">HRESULT</name></type> ( <name pos:line="9074" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="9074" pos:column="74">*</type:modifier><name pos:line="9074" pos:column="75">QueryInterface</name> )<parameter_list pos:line="9074" pos:column="91">( 
            <param><decl><type><name pos:line="9075" pos:column="13">Process2</name> <type:modifier pos:line="9075" pos:column="22">*</type:modifier></type> <name pos:line="9075" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9076" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="9076" pos:column="47">struct <name pos:line="9076" pos:column="54">GUID</name> <type:modifier pos:line="9076" pos:column="59">*</type:modifier></type><name pos:line="9076" pos:column="60">riid</name></decl><op:operator pos:line="9076" pos:column="64">,</op:operator>
            <comment type="block" pos:line="9077" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="9077" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="9077" pos:column="59">void</name> <type:modifier pos:line="9077" pos:column="64">*</type:modifier><type:modifier pos:line="9077" pos:column="65">*</type:modifier><name pos:line="9077" pos:column="66">ppvObj</name><op:operator pos:line="9077" pos:column="72">,</op:operator>
            <comment type="block" pos:line="9078" pos:column="13">/* [retval][out] */</comment> <name pos:line="9078" pos:column="33">__RPC__out</name> <name pos:line="9078" pos:column="44">void</name> <type:modifier pos:line="9078" pos:column="49">*</type:modifier><name pos:line="9078" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="9080" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="9080" pos:column="46">HRESULT</name></type> ( <name pos:line="9080" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="9080" pos:column="74">*</type:modifier><name pos:line="9080" pos:column="75">AddRef</name> )<parameter_list pos:line="9080" pos:column="83">( 
            <param><decl><type><name pos:line="9081" pos:column="13">Process2</name> <type:modifier pos:line="9081" pos:column="22">*</type:modifier></type> <name pos:line="9081" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9082" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9082" pos:column="33">__RPC__out</name> <name pos:line="9082" pos:column="44">unsigned</name> <name pos:line="9082" pos:column="53">long</name> <type:modifier pos:line="9082" pos:column="58">*</type:modifier></type><name pos:line="9082" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9084" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="9084" pos:column="46">HRESULT</name></type> ( <name pos:line="9084" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="9084" pos:column="74">*</type:modifier><name pos:line="9084" pos:column="75">Release</name> )<parameter_list pos:line="9084" pos:column="84">( 
            <param><decl><type><name pos:line="9085" pos:column="13">Process2</name> <type:modifier pos:line="9085" pos:column="22">*</type:modifier></type> <name pos:line="9085" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9086" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9086" pos:column="33">__RPC__out</name> <name pos:line="9086" pos:column="44">unsigned</name> <name pos:line="9086" pos:column="53">long</name> <type:modifier pos:line="9086" pos:column="58">*</type:modifier></type><name pos:line="9086" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9088" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="9088" pos:column="46">HRESULT</name></type> ( <name pos:line="9088" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="9088" pos:column="74">*</type:modifier><name pos:line="9088" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="9088" pos:column="93">( 
            <param><decl><type><name pos:line="9089" pos:column="13">Process2</name> <type:modifier pos:line="9089" pos:column="22">*</type:modifier></type> <name pos:line="9089" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9090" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="9090" pos:column="38">__RPC__out</name> <name pos:line="9090" pos:column="49">unsigned</name> <name pos:line="9090" pos:column="58">UINT</name> <type:modifier pos:line="9090" pos:column="63">*</type:modifier></type><name pos:line="9090" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="9091" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9091" pos:column="33">__RPC__out</name> <name pos:line="9091" pos:column="44">void</name> <type:modifier pos:line="9091" pos:column="49">*</type:modifier></type><name pos:line="9091" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9093" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="9093" pos:column="46">HRESULT</name></type> ( <name pos:line="9093" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="9093" pos:column="74">*</type:modifier><name pos:line="9093" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="9093" pos:column="88">( 
            <param><decl><type><name pos:line="9094" pos:column="13">Process2</name> <type:modifier pos:line="9094" pos:column="22">*</type:modifier></type> <name pos:line="9094" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9095" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="9095" pos:column="37">unsigned</name> <name pos:line="9095" pos:column="46">UINT</name></type> <name pos:line="9095" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="9096" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="9096" pos:column="37">unsigned</name> <name pos:line="9096" pos:column="46">long</name></type> <name pos:line="9096" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="9097" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="9097" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="9097" pos:column="59">void</name> <type:modifier pos:line="9097" pos:column="64">*</type:modifier><type:modifier pos:line="9097" pos:column="65">*</type:modifier></type><name pos:line="9097" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="9098" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9098" pos:column="33">__RPC__out</name> <name pos:line="9098" pos:column="44">void</name> <type:modifier pos:line="9098" pos:column="49">*</type:modifier></type><name pos:line="9098" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9100" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="9100" pos:column="46">HRESULT</name> <argument_list pos:line="9100" pos:column="54">( <argument pos:line="9100" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="9100" pos:column="90">(</op:operator> 
            <name pos:line="9101" pos:column="13">Process2</name> <op:operator pos:line="9101" pos:column="22">*</op:operator> <name pos:line="9101" pos:column="24">This</name><op:operator pos:line="9101" pos:column="28">,</op:operator>
            <comment type="block" pos:line="9102" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9102" pos:column="37">__RPC__in</name> struct <name pos:line="9102" pos:column="54">GUID</name> <op:operator pos:line="9102" pos:column="59">*</op:operator><name pos:line="9102" pos:column="60">riid</name><op:operator pos:line="9102" pos:column="64">,</op:operator>
            <comment type="block" pos:line="9103" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9103" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="9103" pos:column="57">signed</name> <name pos:line="9103" pos:column="64">char</name> <op:operator pos:line="9103" pos:column="69">*</op:operator><op:operator pos:line="9103" pos:column="70">*</op:operator><name pos:line="9103" pos:column="71">rgszNames</name><op:operator pos:line="9103" pos:column="80">,</op:operator>
            <comment type="block" pos:line="9104" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9104" pos:column="37">unsigned</name> <name pos:line="9104" pos:column="46">UINT</name> <name pos:line="9104" pos:column="51">cNames</name><op:operator pos:line="9104" pos:column="57">,</op:operator>
            <comment type="block" pos:line="9105" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9105" pos:column="37">unsigned</name> <name pos:line="9105" pos:column="46">long</name> <name pos:line="9105" pos:column="51">lcid</name><op:operator pos:line="9105" pos:column="55">,</op:operator>
            <comment type="block" pos:line="9106" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="9106" pos:column="38">__RPC__out</name> <name pos:line="9106" pos:column="49">signed</name> <name pos:line="9106" pos:column="56">long</name> <op:operator pos:line="9106" pos:column="61">*</op:operator><name pos:line="9106" pos:column="62">rgdispid</name><op:operator pos:line="9106" pos:column="70">,</op:operator>
            <comment type="block" pos:line="9107" pos:column="13">/* [retval][out] */</comment> <name pos:line="9107" pos:column="33">__RPC__out</name> <name pos:line="9107" pos:column="44">void</name> <op:operator pos:line="9107" pos:column="49">*</op:operator><name pos:line="9107" pos:column="50">retval</name><op:operator pos:line="9107" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="9109" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="9109" pos:column="46">HRESULT</name> <argument_list pos:line="9109" pos:column="54">( <argument pos:line="9109" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="9109" pos:column="83">(</op:operator> 
            <name pos:line="9110" pos:column="13">Process2</name> <op:operator pos:line="9110" pos:column="22">*</op:operator> <name pos:line="9110" pos:column="24">This</name><op:operator pos:line="9110" pos:column="28">,</op:operator>
            <comment type="block" pos:line="9111" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9111" pos:column="37">signed</name> <name pos:line="9111" pos:column="44">long</name> <name pos:line="9111" pos:column="49">dispidMember</name><op:operator pos:line="9111" pos:column="61">,</op:operator>
            <comment type="block" pos:line="9112" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9112" pos:column="37">__RPC__in</name> struct <name pos:line="9112" pos:column="54">GUID</name> <op:operator pos:line="9112" pos:column="59">*</op:operator><name pos:line="9112" pos:column="60">riid</name><op:operator pos:line="9112" pos:column="64">,</op:operator>
            <comment type="block" pos:line="9113" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9113" pos:column="37">unsigned</name> <name pos:line="9113" pos:column="46">long</name> <name pos:line="9113" pos:column="51">lcid</name><op:operator pos:line="9113" pos:column="55">,</op:operator>
            <comment type="block" pos:line="9114" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9114" pos:column="37">unsigned</name> <name pos:line="9114" pos:column="46">short</name> <name pos:line="9114" pos:column="52">wFlags</name><op:operator pos:line="9114" pos:column="58">,</op:operator>
            <comment type="block" pos:line="9115" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9115" pos:column="37">__RPC__in</name> struct <name pos:line="9115" pos:column="54">DISPPARAMS</name> <op:operator pos:line="9115" pos:column="65">*</op:operator><name pos:line="9115" pos:column="66">pdispparams</name><op:operator pos:line="9115" pos:column="77">,</op:operator>
            <comment type="block" pos:line="9116" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="9116" pos:column="38">__RPC__out</name> <name pos:line="9116" pos:column="49">VARIANT</name> <op:operator pos:line="9116" pos:column="57">*</op:operator><name pos:line="9116" pos:column="58">pvarResult</name><op:operator pos:line="9116" pos:column="68">,</op:operator>
            <comment type="block" pos:line="9117" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="9117" pos:column="38">__RPC__out</name> struct <name pos:line="9117" pos:column="56">EXCEPINFO</name> <op:operator pos:line="9117" pos:column="66">*</op:operator><name pos:line="9117" pos:column="67">pexcepinfo</name><op:operator pos:line="9117" pos:column="77">,</op:operator>
            <comment type="block" pos:line="9118" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="9118" pos:column="38">__RPC__out</name> <name pos:line="9118" pos:column="49">unsigned</name> <name pos:line="9118" pos:column="58">UINT</name> <op:operator pos:line="9118" pos:column="63">*</op:operator><name pos:line="9118" pos:column="64">puArgErr</name><op:operator pos:line="9118" pos:column="72">,</op:operator>
            <comment type="block" pos:line="9119" pos:column="13">/* [retval][out] */</comment> <name pos:line="9119" pos:column="33">__RPC__out</name> <name pos:line="9119" pos:column="44">void</name> <op:operator pos:line="9119" pos:column="49">*</op:operator><name pos:line="9119" pos:column="50">retval</name><op:operator pos:line="9119" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="9121" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="9121" pos:column="34">HRESULT</name></type> ( <name pos:line="9121" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="9121" pos:column="62">*</type:modifier><name pos:line="9121" pos:column="63">Attach</name> )<parameter_list pos:line="9121" pos:column="71">( 
            <param><decl><type><name pos:line="9122" pos:column="13">Process2</name> <type:modifier pos:line="9122" pos:column="22">*</type:modifier></type> <name pos:line="9122" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9123" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9123" pos:column="33">__RPC__out</name> <name pos:line="9123" pos:column="44">void</name> <type:modifier pos:line="9123" pos:column="49">*</type:modifier></type><name pos:line="9123" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9125" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="9125" pos:column="34">HRESULT</name></type> ( <name pos:line="9125" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="9125" pos:column="62">*</type:modifier><name pos:line="9125" pos:column="63">Detach</name> )<parameter_list pos:line="9125" pos:column="71">( 
            <param><decl><type><name pos:line="9126" pos:column="13">Process2</name> <type:modifier pos:line="9126" pos:column="22">*</type:modifier></type> <name pos:line="9126" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9127" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="9127" pos:column="37">BOOLEAN</name></type> <name pos:line="9127" pos:column="45">WaitForBreakOrEnd</name></decl></param>,
            <comment type="block" pos:line="9128" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9128" pos:column="33">__RPC__out</name> <name pos:line="9128" pos:column="44">void</name> <type:modifier pos:line="9128" pos:column="49">*</type:modifier></type><name pos:line="9128" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9130" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="9130" pos:column="34">HRESULT</name></type> ( <name pos:line="9130" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="9130" pos:column="62">*</type:modifier><name pos:line="9130" pos:column="63">Break</name> )<parameter_list pos:line="9130" pos:column="70">( 
            <param><decl><type><name pos:line="9131" pos:column="13">Process2</name> <type:modifier pos:line="9131" pos:column="22">*</type:modifier></type> <name pos:line="9131" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9132" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="9132" pos:column="37">BOOLEAN</name></type> <name pos:line="9132" pos:column="45">WaitForBreakMode</name></decl></param>,
            <comment type="block" pos:line="9133" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9133" pos:column="33">__RPC__out</name> <name pos:line="9133" pos:column="44">void</name> <type:modifier pos:line="9133" pos:column="49">*</type:modifier></type><name pos:line="9133" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9135" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="9135" pos:column="34">HRESULT</name></type> ( <name pos:line="9135" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="9135" pos:column="62">*</type:modifier><name pos:line="9135" pos:column="63">Terminate</name> )<parameter_list pos:line="9135" pos:column="74">( 
            <param><decl><type><name pos:line="9136" pos:column="13">Process2</name> <type:modifier pos:line="9136" pos:column="22">*</type:modifier></type> <name pos:line="9136" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9137" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="9137" pos:column="37">BOOLEAN</name></type> <name pos:line="9137" pos:column="45">WaitForBreakOrEnd</name></decl></param>,
            <comment type="block" pos:line="9138" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9138" pos:column="33">__RPC__out</name> <name pos:line="9138" pos:column="44">void</name> <type:modifier pos:line="9138" pos:column="49">*</type:modifier></type><name pos:line="9138" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9140" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9140" pos:column="43">HRESULT</name></type> ( <name pos:line="9140" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9140" pos:column="71">*</type:modifier><name pos:line="9140" pos:column="72">get_Name</name> )<parameter_list pos:line="9140" pos:column="82">( 
            <param><decl><type><name pos:line="9141" pos:column="13">Process2</name> <type:modifier pos:line="9141" pos:column="22">*</type:modifier></type> <name pos:line="9141" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9142" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9142" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9142" pos:column="54">BSTR</name> <type:modifier pos:line="9142" pos:column="59">*</type:modifier></type><name pos:line="9142" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9144" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9144" pos:column="43">HRESULT</name></type> ( <name pos:line="9144" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9144" pos:column="71">*</type:modifier><name pos:line="9144" pos:column="72">get_ProcessID</name> )<parameter_list pos:line="9144" pos:column="87">( 
            <param><decl><type><name pos:line="9145" pos:column="13">Process2</name> <type:modifier pos:line="9145" pos:column="22">*</type:modifier></type> <name pos:line="9145" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9146" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9146" pos:column="33">__RPC__out</name> <name pos:line="9146" pos:column="44">signed</name> <name pos:line="9146" pos:column="51">long</name> <type:modifier pos:line="9146" pos:column="56">*</type:modifier></type><name pos:line="9146" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9148" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9148" pos:column="43">HRESULT</name></type> ( <name pos:line="9148" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9148" pos:column="71">*</type:modifier><name pos:line="9148" pos:column="72">get_Programs</name> )<parameter_list pos:line="9148" pos:column="86">( 
            <param><decl><type><name pos:line="9149" pos:column="13">Process2</name> <type:modifier pos:line="9149" pos:column="22">*</type:modifier></type> <name pos:line="9149" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9150" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9150" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9150" pos:column="54">Programs</name> <type:modifier pos:line="9150" pos:column="63">*</type:modifier><type:modifier pos:line="9150" pos:column="64">*</type:modifier></type><name pos:line="9150" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9152" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9152" pos:column="43">HRESULT</name></type> ( <name pos:line="9152" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9152" pos:column="71">*</type:modifier><name pos:line="9152" pos:column="72">get_DTE</name> )<parameter_list pos:line="9152" pos:column="81">( 
            <param><decl><type><name pos:line="9153" pos:column="13">Process2</name> <type:modifier pos:line="9153" pos:column="22">*</type:modifier></type> <name pos:line="9153" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9154" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9154" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="9154" pos:column="54">*</type:modifier><type:modifier pos:line="9154" pos:column="55">*</type:modifier></type><name pos:line="9154" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9156" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9156" pos:column="43">HRESULT</name></type> ( <name pos:line="9156" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9156" pos:column="71">*</type:modifier><name pos:line="9156" pos:column="72">get_Parent</name> )<parameter_list pos:line="9156" pos:column="84">( 
            <param><decl><type><name pos:line="9157" pos:column="13">Process2</name> <type:modifier pos:line="9157" pos:column="22">*</type:modifier></type> <name pos:line="9157" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9158" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9158" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9158" pos:column="54">Debugger</name> <type:modifier pos:line="9158" pos:column="63">*</type:modifier><type:modifier pos:line="9158" pos:column="64">*</type:modifier></type><name pos:line="9158" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9160" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9160" pos:column="43">HRESULT</name></type> ( <name pos:line="9160" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9160" pos:column="71">*</type:modifier><name pos:line="9160" pos:column="72">get_Collection</name> )<parameter_list pos:line="9160" pos:column="88">( 
            <param><decl><type><name pos:line="9161" pos:column="13">Process2</name> <type:modifier pos:line="9161" pos:column="22">*</type:modifier></type> <name pos:line="9161" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9162" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9162" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9162" pos:column="54">Processes</name> <type:modifier pos:line="9162" pos:column="64">*</type:modifier><type:modifier pos:line="9162" pos:column="65">*</type:modifier></type><name pos:line="9162" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9164" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="9164" pos:column="64">HRESULT</name></type> ( <name pos:line="9164" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="9164" pos:column="92">*</type:modifier><name pos:line="9164" pos:column="93">Attach2</name> )<parameter_list pos:line="9164" pos:column="102">( 
            <param><decl><type><name pos:line="9165" pos:column="13">Process2</name> <type:modifier pos:line="9165" pos:column="22">*</type:modifier></type> <name pos:line="9165" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9166" pos:column="13">/* [optional][defaultvalue][in] */</comment> <param><decl><type><name pos:line="9166" pos:column="48">VARIANT</name></type> <name pos:line="9166" pos:column="56">Engines</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9168" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9168" pos:column="73">HRESULT</name></type> ( <name pos:line="9168" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9168" pos:column="101">*</type:modifier><name pos:line="9168" pos:column="102">get_Transport</name> )<parameter_list pos:line="9168" pos:column="117">( 
            <param><decl><type><name pos:line="9169" pos:column="13">Process2</name> <type:modifier pos:line="9169" pos:column="22">*</type:modifier></type> <name pos:line="9169" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9170" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9170" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9170" pos:column="54">Transport</name> <type:modifier pos:line="9170" pos:column="64">*</type:modifier><type:modifier pos:line="9170" pos:column="65">*</type:modifier></type><name pos:line="9170" pos:column="66">Transport</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9172" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9172" pos:column="73">HRESULT</name></type> ( <name pos:line="9172" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9172" pos:column="101">*</type:modifier><name pos:line="9172" pos:column="102">get_TransportQualifier</name> )<parameter_list pos:line="9172" pos:column="126">( 
            <param><decl><type><name pos:line="9173" pos:column="13">Process2</name> <type:modifier pos:line="9173" pos:column="22">*</type:modifier></type> <name pos:line="9173" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9174" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9174" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9174" pos:column="54">BSTR</name> <type:modifier pos:line="9174" pos:column="59">*</type:modifier></type><name pos:line="9174" pos:column="60">TransportQualifier</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9176" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9176" pos:column="73">HRESULT</name></type> ( <name pos:line="9176" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9176" pos:column="101">*</type:modifier><name pos:line="9176" pos:column="102">get_Threads</name> )<parameter_list pos:line="9176" pos:column="115">( 
            <param><decl><type><name pos:line="9177" pos:column="13">Process2</name> <type:modifier pos:line="9177" pos:column="22">*</type:modifier></type> <name pos:line="9177" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9178" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9178" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="9178" pos:column="54">/* external definition not present */</comment> <name pos:line="9178" pos:column="92">Threads</name> <type:modifier pos:line="9178" pos:column="100">*</type:modifier><type:modifier pos:line="9178" pos:column="101">*</type:modifier></type><name pos:line="9178" pos:column="102">Threads</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9180" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9180" pos:column="73">HRESULT</name></type> ( <name pos:line="9180" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9180" pos:column="101">*</type:modifier><name pos:line="9180" pos:column="102">get_IsBeingDebugged</name> )<parameter_list pos:line="9180" pos:column="123">( 
            <param><decl><type><name pos:line="9181" pos:column="13">Process2</name> <type:modifier pos:line="9181" pos:column="22">*</type:modifier></type> <name pos:line="9181" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9182" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9182" pos:column="33">__RPC__out</name> <name pos:line="9182" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="9182" pos:column="57">*</type:modifier></type><name pos:line="9182" pos:column="58">IsBeingDebugged</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9184" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9184" pos:column="73">HRESULT</name></type> ( <name pos:line="9184" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9184" pos:column="101">*</type:modifier><name pos:line="9184" pos:column="102">get_UserName</name> )<parameter_list pos:line="9184" pos:column="116">( 
            <param><decl><type><name pos:line="9185" pos:column="13">Process2</name> <type:modifier pos:line="9185" pos:column="22">*</type:modifier></type> <name pos:line="9185" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="9186" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9186" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9186" pos:column="54">BSTR</name> <type:modifier pos:line="9186" pos:column="59">*</type:modifier></type><name pos:line="9186" pos:column="60">UserName</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9188" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="9189" pos:column="7">Process2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="9191" pos:column="5">interface</name></type> <name pos:line="9191" pos:column="15">Process2</name>
    <argument_list pos:line="9192" pos:column="5">{
        <argument><expr><name pos:line="9193" pos:column="9">CONST_VTBL</name> struct <name pos:line="9193" pos:column="27">Process2Vtbl</name> <op:operator pos:line="9193" pos:column="40">*</op:operator><name pos:line="9193" pos:column="41">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="9198" pos:column="1">#<cpp:directive pos:line="9198" pos:column="2">ifdef</cpp:directive> <name pos:line="9198" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="9201" pos:column="1">#<cpp:directive pos:line="9201" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9201" pos:column="9">Process2_QueryInterface</name><parameter_list pos:line="9201" pos:column="32">(<param><type><name pos:line="9201" pos:column="33">This</name></type></param>,<param><type><name pos:line="9201" pos:column="38">riid</name></type></param>,<param><type><name pos:line="9201" pos:column="43">ppvObj</name></type></param>,<param><type><name pos:line="9201" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9202" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9204" pos:column="1">#<cpp:directive pos:line="9204" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9204" pos:column="9">Process2_AddRef</name><parameter_list pos:line="9204" pos:column="24">(<param><type><name pos:line="9204" pos:column="25">This</name></type></param>,<param><type><name pos:line="9204" pos:column="30">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9205" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9207" pos:column="1">#<cpp:directive pos:line="9207" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9207" pos:column="9">Process2_Release</name><parameter_list pos:line="9207" pos:column="25">(<param><type><name pos:line="9207" pos:column="26">This</name></type></param>,<param><type><name pos:line="9207" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9208" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9210" pos:column="1">#<cpp:directive pos:line="9210" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9210" pos:column="9">Process2_GetTypeInfoCount</name><parameter_list pos:line="9210" pos:column="34">(<param><type><name pos:line="9210" pos:column="35">This</name></type></param>,<param><type><name pos:line="9210" pos:column="40">pctinfo</name></type></param>,<param><type><name pos:line="9210" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9211" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9213" pos:column="1">#<cpp:directive pos:line="9213" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9213" pos:column="9">Process2_GetTypeInfo</name><parameter_list pos:line="9213" pos:column="29">(<param><type><name pos:line="9213" pos:column="30">This</name></type></param>,<param><type><name pos:line="9213" pos:column="35">itinfo</name></type></param>,<param><type><name pos:line="9213" pos:column="42">lcid</name></type></param>,<param><type><name pos:line="9213" pos:column="47">pptinfo</name></type></param>,<param><type><name pos:line="9213" pos:column="55">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9214" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9216" pos:column="1">#<cpp:directive pos:line="9216" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9216" pos:column="9">Process2_GetIDsOfNames</name><parameter_list pos:line="9216" pos:column="31">(<param><type><name pos:line="9216" pos:column="32">This</name></type></param>,<param><type><name pos:line="9216" pos:column="37">riid</name></type></param>,<param><type><name pos:line="9216" pos:column="42">rgszNames</name></type></param>,<param><type><name pos:line="9216" pos:column="52">cNames</name></type></param>,<param><type><name pos:line="9216" pos:column="59">lcid</name></type></param>,<param><type><name pos:line="9216" pos:column="64">rgdispid</name></type></param>,<param><type><name pos:line="9216" pos:column="73">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9217" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9219" pos:column="1">#<cpp:directive pos:line="9219" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9219" pos:column="9">Process2_Invoke</name><parameter_list pos:line="9219" pos:column="24">(<param><type><name pos:line="9219" pos:column="25">This</name></type></param>,<param><type><name pos:line="9219" pos:column="30">dispidMember</name></type></param>,<param><type><name pos:line="9219" pos:column="43">riid</name></type></param>,<param><type><name pos:line="9219" pos:column="48">lcid</name></type></param>,<param><type><name pos:line="9219" pos:column="53">wFlags</name></type></param>,<param><type><name pos:line="9219" pos:column="60">pdispparams</name></type></param>,<param><type><name pos:line="9219" pos:column="72">pvarResult</name></type></param>,<param><type><name pos:line="9219" pos:column="83">pexcepinfo</name></type></param>,<param><type><name pos:line="9219" pos:column="94">puArgErr</name></type></param>,<param><type><name pos:line="9219" pos:column="103">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9220" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9222" pos:column="1">#<cpp:directive pos:line="9222" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9222" pos:column="9">Process2_Attach</name><parameter_list pos:line="9222" pos:column="24">(<param><type><name pos:line="9222" pos:column="25">This</name></type></param>,<param><type><name pos:line="9222" pos:column="30">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9223" pos:column="5">( (This)-&gt;lpVtbl -&gt; Attach(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9225" pos:column="1">#<cpp:directive pos:line="9225" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9225" pos:column="9">Process2_Detach</name><parameter_list pos:line="9225" pos:column="24">(<param><type><name pos:line="9225" pos:column="25">This</name></type></param>,<param><type><name pos:line="9225" pos:column="30">WaitForBreakOrEnd</name></type></param>,<param><type><name pos:line="9225" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9226" pos:column="5">( (This)-&gt;lpVtbl -&gt; Detach(This,WaitForBreakOrEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9228" pos:column="1">#<cpp:directive pos:line="9228" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9228" pos:column="9">Process2_Break</name><parameter_list pos:line="9228" pos:column="23">(<param><type><name pos:line="9228" pos:column="24">This</name></type></param>,<param><type><name pos:line="9228" pos:column="29">WaitForBreakMode</name></type></param>,<param><type><name pos:line="9228" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9229" pos:column="5">( (This)-&gt;lpVtbl -&gt; Break(This,WaitForBreakMode,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9231" pos:column="1">#<cpp:directive pos:line="9231" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9231" pos:column="9">Process2_Terminate</name><parameter_list pos:line="9231" pos:column="27">(<param><type><name pos:line="9231" pos:column="28">This</name></type></param>,<param><type><name pos:line="9231" pos:column="33">WaitForBreakOrEnd</name></type></param>,<param><type><name pos:line="9231" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9232" pos:column="5">( (This)-&gt;lpVtbl -&gt; Terminate(This,WaitForBreakOrEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9234" pos:column="1">#<cpp:directive pos:line="9234" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9234" pos:column="9">Process2_get_Name</name><parameter_list pos:line="9234" pos:column="26">(<param><type><name pos:line="9234" pos:column="27">This</name></type></param>,<param><type><name pos:line="9234" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9235" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9237" pos:column="1">#<cpp:directive pos:line="9237" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9237" pos:column="9">Process2_get_ProcessID</name><parameter_list pos:line="9237" pos:column="31">(<param><type><name pos:line="9237" pos:column="32">This</name></type></param>,<param><type><name pos:line="9237" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9238" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProcessID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9240" pos:column="1">#<cpp:directive pos:line="9240" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9240" pos:column="9">Process2_get_Programs</name><parameter_list pos:line="9240" pos:column="30">(<param><type><name pos:line="9240" pos:column="31">This</name></type></param>,<param><type><name pos:line="9240" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9241" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Programs(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9243" pos:column="1">#<cpp:directive pos:line="9243" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9243" pos:column="9">Process2_get_DTE</name><parameter_list pos:line="9243" pos:column="25">(<param><type><name pos:line="9243" pos:column="26">This</name></type></param>,<param><type><name pos:line="9243" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9244" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9246" pos:column="1">#<cpp:directive pos:line="9246" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9246" pos:column="9">Process2_get_Parent</name><parameter_list pos:line="9246" pos:column="28">(<param><type><name pos:line="9246" pos:column="29">This</name></type></param>,<param><type><name pos:line="9246" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9247" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9249" pos:column="1">#<cpp:directive pos:line="9249" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9249" pos:column="9">Process2_get_Collection</name><parameter_list pos:line="9249" pos:column="32">(<param><type><name pos:line="9249" pos:column="33">This</name></type></param>,<param><type><name pos:line="9249" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9250" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="9253" pos:column="1">#<cpp:directive pos:line="9253" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9253" pos:column="9">Process2_Attach2</name><parameter_list pos:line="9253" pos:column="25">(<param><type><name pos:line="9253" pos:column="26">This</name></type></param>,<param><type><name pos:line="9253" pos:column="31">Engines</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9254" pos:column="5">( (This)-&gt;lpVtbl -&gt; Attach2(This,Engines) )</cpp:value></cpp:define> 

<cpp:define pos:line="9256" pos:column="1">#<cpp:directive pos:line="9256" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9256" pos:column="9">Process2_get_Transport</name><parameter_list pos:line="9256" pos:column="31">(<param><type><name pos:line="9256" pos:column="32">This</name></type></param>,<param><type><name pos:line="9256" pos:column="37">Transport</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9257" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Transport(This,Transport) )</cpp:value></cpp:define> 

<cpp:define pos:line="9259" pos:column="1">#<cpp:directive pos:line="9259" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9259" pos:column="9">Process2_get_TransportQualifier</name><parameter_list pos:line="9259" pos:column="40">(<param><type><name pos:line="9259" pos:column="41">This</name></type></param>,<param><type><name pos:line="9259" pos:column="46">TransportQualifier</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9260" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_TransportQualifier(This,TransportQualifier) )</cpp:value></cpp:define> 

<cpp:define pos:line="9262" pos:column="1">#<cpp:directive pos:line="9262" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9262" pos:column="9">Process2_get_Threads</name><parameter_list pos:line="9262" pos:column="29">(<param><type><name pos:line="9262" pos:column="30">This</name></type></param>,<param><type><name pos:line="9262" pos:column="35">Threads</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9263" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Threads(This,Threads) )</cpp:value></cpp:define> 

<cpp:define pos:line="9265" pos:column="1">#<cpp:directive pos:line="9265" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9265" pos:column="9">Process2_get_IsBeingDebugged</name><parameter_list pos:line="9265" pos:column="37">(<param><type><name pos:line="9265" pos:column="38">This</name></type></param>,<param><type><name pos:line="9265" pos:column="43">IsBeingDebugged</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9266" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsBeingDebugged(This,IsBeingDebugged) )</cpp:value></cpp:define> 

<cpp:define pos:line="9268" pos:column="1">#<cpp:directive pos:line="9268" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9268" pos:column="9">Process2_get_UserName</name><parameter_list pos:line="9268" pos:column="30">(<param><type><name pos:line="9268" pos:column="31">This</name></type></param>,<param><type><name pos:line="9268" pos:column="36">UserName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9269" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_UserName(This,UserName) )</cpp:value></cpp:define> 

<cpp:endif pos:line="9271" pos:column="1">#<cpp:directive pos:line="9271" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="9271" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="9274" pos:column="1">#<cpp:directive pos:line="9274" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9274" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="9279" pos:column="1">#<cpp:directive pos:line="9279" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9279" pos:column="9">/* __Process2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="9282" pos:column="1">#<cpp:directive pos:line="9282" pos:column="2">ifndef</cpp:directive> <name pos:line="9282" pos:column="9">__Breakpoint2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="9283" pos:column="1">#<cpp:directive pos:line="9283" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9283" pos:column="9">__Breakpoint2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="9285" pos:column="1">/* interface Breakpoint2 */</comment>
<comment type="block" pos:line="9286" pos:column="1">/* [object][version][helpstringcontext][helpstring][helpcontext][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="9289" pos:column="1">EXTERN_C</name> <specifier pos:line="9289" pos:column="10">const</specifier> <name pos:line="9289" pos:column="16">IID</name></type> <name pos:line="9289" pos:column="20">IID_Breakpoint2</name></decl>;</decl_stmt>

<cpp:if pos:line="9291" pos:column="1">#<cpp:directive pos:line="9291" pos:column="2">if</cpp:directive> <expr><call><name pos:line="9291" pos:column="5">defined</name><argument_list pos:line="9291" pos:column="12">(<argument><expr><name pos:line="9291" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="9291" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="9291" pos:column="29">!</op:operator><call><name pos:line="9291" pos:column="30">defined</name><argument_list pos:line="9291" pos:column="37">(<argument><expr><name pos:line="9291" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="9293" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="9293" pos:column="19">(<argument pos:line="9293" pos:column="20">"FBC8D85A-E449-4cb3-B026-F7808DEB7792"</argument>)</argument_list></macro>
    <label><name pos:line="9294" pos:column="5">Breakpoint2</name> :</label> <expr_stmt><expr pos:line="9294" pos:column="19">public <name pos:line="9294" pos:column="26">Breakpoint</name>
    <block pos:line="9295" pos:column="5">{
    <expr pos:line="9296" pos:column="5">public<op:operator pos:line="9296" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="9297" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9297" pos:column="81">HRESULT</name> <name pos:line="9297" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9297" pos:column="107">get_Process</name><argument_list pos:line="9297" pos:column="118">( 
            <comment type="block" pos:line="9298" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9298" pos:column="33">__RPC__deref_out_opt Process2 **ppProcess</argument>)</argument_list></macro> <op:operator pos:line="9298" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="9298" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="9300" pos:column="9">virtual <comment type="block" pos:line="9300" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9300" pos:column="81">HRESULT</name> <name pos:line="9300" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9300" pos:column="107">get_BreakWhenHit</name><argument_list pos:line="9300" pos:column="123">( 
            <comment type="block" pos:line="9301" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9301" pos:column="33">__RPC__out VARIANT_BOOL *BreakWhenHit</argument>)</argument_list></macro> <op:operator pos:line="9301" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="9301" pos:column="74">0</lit:literal></expr>;
        
        <expr pos:line="9303" pos:column="9">virtual <comment type="block" pos:line="9303" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="9303" pos:column="81">HRESULT</name> <name pos:line="9303" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9303" pos:column="107">put_BreakWhenHit</name><argument_list pos:line="9303" pos:column="123">( 
            <comment type="block" pos:line="9304" pos:column="13">/* [in] */</comment> <argument pos:line="9304" pos:column="24">VARIANT_BOOL BreakWhenHit</argument>)</argument_list></macro> <op:operator pos:line="9304" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="9304" pos:column="53">0</lit:literal></expr>;
        
        <expr pos:line="9306" pos:column="9">virtual <comment type="block" pos:line="9306" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9306" pos:column="81">HRESULT</name> <name pos:line="9306" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9306" pos:column="107">get_Message</name><argument_list pos:line="9306" pos:column="118">( 
            <comment type="block" pos:line="9307" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9307" pos:column="33">__RPC__deref_out_opt BSTR *Message</argument>)</argument_list></macro> <op:operator pos:line="9307" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="9307" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="9309" pos:column="9">virtual <comment type="block" pos:line="9309" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="9309" pos:column="81">HRESULT</name> <name pos:line="9309" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9309" pos:column="107">put_Message</name><argument_list pos:line="9309" pos:column="118">( 
            <comment type="block" pos:line="9310" pos:column="13">/* [in] */</comment> <argument pos:line="9310" pos:column="24">__RPC__in BSTR Message</argument>)</argument_list></macro> <op:operator pos:line="9310" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="9310" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="9312" pos:column="9">virtual <comment type="block" pos:line="9312" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9312" pos:column="81">HRESULT</name> <name pos:line="9312" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9312" pos:column="107">get_Macro</name><argument_list pos:line="9312" pos:column="116">( 
            <comment type="block" pos:line="9313" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9313" pos:column="33">__RPC__deref_out_opt BSTR *Macro</argument>)</argument_list></macro> <op:operator pos:line="9313" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="9313" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="9315" pos:column="9">virtual <comment type="block" pos:line="9315" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="9315" pos:column="81">HRESULT</name> <name pos:line="9315" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9315" pos:column="107">put_Macro</name><argument_list pos:line="9315" pos:column="116">( 
            <comment type="block" pos:line="9316" pos:column="13">/* [in] */</comment> <argument pos:line="9316" pos:column="24">__RPC__in BSTR Macro</argument>)</argument_list></macro> <op:operator pos:line="9316" pos:column="46">=</op:operator> <lit:literal type="number" pos:line="9316" pos:column="48">0</lit:literal></expr>;
        
        <expr pos:line="9318" pos:column="9">virtual <comment type="block" pos:line="9318" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9318" pos:column="81">HRESULT</name> <name pos:line="9318" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9318" pos:column="107">get_FilterBy</name><argument_list pos:line="9318" pos:column="119">( 
            <comment type="block" pos:line="9319" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9319" pos:column="33">__RPC__deref_out_opt BSTR *FilterBy</argument>)</argument_list></macro> <op:operator pos:line="9319" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="9319" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="9321" pos:column="9">virtual <comment type="block" pos:line="9321" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="9321" pos:column="81">HRESULT</name> <name pos:line="9321" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9321" pos:column="107">put_FilterBy</name><argument_list pos:line="9321" pos:column="119">( 
            <comment type="block" pos:line="9322" pos:column="13">/* [in] */</comment> <argument pos:line="9322" pos:column="24">__RPC__in BSTR FilterBy</argument>)</argument_list></macro> <op:operator pos:line="9322" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="9322" pos:column="51">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="9326" pos:column="1">#<cpp:directive pos:line="9326" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="9326" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="9328" pos:column="5">typedef <type><struct pos:line="9328" pos:column="13">struct <name pos:line="9328" pos:column="20">Breakpoint2Vtbl</name>
    <block pos:line="9329" pos:column="5">{<public type="default" pos:line="9329" pos:column="6">
        <decl_stmt><decl><type><name pos:line="9330" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="9332" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="9332" pos:column="46">HRESULT</name></type> ( <name pos:line="9332" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="9332" pos:column="74">*</type:modifier><name pos:line="9332" pos:column="75">QueryInterface</name> )<parameter_list pos:line="9332" pos:column="91">( 
            <param><decl><type><name pos:line="9333" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9333" pos:column="25">*</type:modifier></type> <name pos:line="9333" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9334" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="9334" pos:column="47">struct <name pos:line="9334" pos:column="54">GUID</name> <type:modifier pos:line="9334" pos:column="59">*</type:modifier></type><name pos:line="9334" pos:column="60">riid</name></decl><op:operator pos:line="9334" pos:column="64">,</op:operator>
            <comment type="block" pos:line="9335" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="9335" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="9335" pos:column="59">void</name> <type:modifier pos:line="9335" pos:column="64">*</type:modifier><type:modifier pos:line="9335" pos:column="65">*</type:modifier><name pos:line="9335" pos:column="66">ppvObj</name><op:operator pos:line="9335" pos:column="72">,</op:operator>
            <comment type="block" pos:line="9336" pos:column="13">/* [retval][out] */</comment> <name pos:line="9336" pos:column="33">__RPC__out</name> <name pos:line="9336" pos:column="44">void</name> <type:modifier pos:line="9336" pos:column="49">*</type:modifier><name pos:line="9336" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="9338" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="9338" pos:column="46">HRESULT</name></type> ( <name pos:line="9338" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="9338" pos:column="74">*</type:modifier><name pos:line="9338" pos:column="75">AddRef</name> )<parameter_list pos:line="9338" pos:column="83">( 
            <param><decl><type><name pos:line="9339" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9339" pos:column="25">*</type:modifier></type> <name pos:line="9339" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9340" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9340" pos:column="33">__RPC__out</name> <name pos:line="9340" pos:column="44">unsigned</name> <name pos:line="9340" pos:column="53">long</name> <type:modifier pos:line="9340" pos:column="58">*</type:modifier></type><name pos:line="9340" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9342" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="9342" pos:column="46">HRESULT</name></type> ( <name pos:line="9342" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="9342" pos:column="74">*</type:modifier><name pos:line="9342" pos:column="75">Release</name> )<parameter_list pos:line="9342" pos:column="84">( 
            <param><decl><type><name pos:line="9343" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9343" pos:column="25">*</type:modifier></type> <name pos:line="9343" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9344" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9344" pos:column="33">__RPC__out</name> <name pos:line="9344" pos:column="44">unsigned</name> <name pos:line="9344" pos:column="53">long</name> <type:modifier pos:line="9344" pos:column="58">*</type:modifier></type><name pos:line="9344" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9346" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="9346" pos:column="46">HRESULT</name></type> ( <name pos:line="9346" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="9346" pos:column="74">*</type:modifier><name pos:line="9346" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="9346" pos:column="93">( 
            <param><decl><type><name pos:line="9347" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9347" pos:column="25">*</type:modifier></type> <name pos:line="9347" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9348" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="9348" pos:column="38">__RPC__out</name> <name pos:line="9348" pos:column="49">unsigned</name> <name pos:line="9348" pos:column="58">UINT</name> <type:modifier pos:line="9348" pos:column="63">*</type:modifier></type><name pos:line="9348" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="9349" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9349" pos:column="33">__RPC__out</name> <name pos:line="9349" pos:column="44">void</name> <type:modifier pos:line="9349" pos:column="49">*</type:modifier></type><name pos:line="9349" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9351" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="9351" pos:column="46">HRESULT</name></type> ( <name pos:line="9351" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="9351" pos:column="74">*</type:modifier><name pos:line="9351" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="9351" pos:column="88">( 
            <param><decl><type><name pos:line="9352" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9352" pos:column="25">*</type:modifier></type> <name pos:line="9352" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9353" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="9353" pos:column="37">unsigned</name> <name pos:line="9353" pos:column="46">UINT</name></type> <name pos:line="9353" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="9354" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="9354" pos:column="37">unsigned</name> <name pos:line="9354" pos:column="46">long</name></type> <name pos:line="9354" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="9355" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="9355" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="9355" pos:column="59">void</name> <type:modifier pos:line="9355" pos:column="64">*</type:modifier><type:modifier pos:line="9355" pos:column="65">*</type:modifier></type><name pos:line="9355" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="9356" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9356" pos:column="33">__RPC__out</name> <name pos:line="9356" pos:column="44">void</name> <type:modifier pos:line="9356" pos:column="49">*</type:modifier></type><name pos:line="9356" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9358" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="9358" pos:column="46">HRESULT</name> <argument_list pos:line="9358" pos:column="54">( <argument pos:line="9358" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="9358" pos:column="90">(</op:operator> 
            <name pos:line="9359" pos:column="13">Breakpoint2</name> <op:operator pos:line="9359" pos:column="25">*</op:operator> <name pos:line="9359" pos:column="27">This</name><op:operator pos:line="9359" pos:column="31">,</op:operator>
            <comment type="block" pos:line="9360" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9360" pos:column="37">__RPC__in</name> struct <name pos:line="9360" pos:column="54">GUID</name> <op:operator pos:line="9360" pos:column="59">*</op:operator><name pos:line="9360" pos:column="60">riid</name><op:operator pos:line="9360" pos:column="64">,</op:operator>
            <comment type="block" pos:line="9361" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9361" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="9361" pos:column="57">signed</name> <name pos:line="9361" pos:column="64">char</name> <op:operator pos:line="9361" pos:column="69">*</op:operator><op:operator pos:line="9361" pos:column="70">*</op:operator><name pos:line="9361" pos:column="71">rgszNames</name><op:operator pos:line="9361" pos:column="80">,</op:operator>
            <comment type="block" pos:line="9362" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9362" pos:column="37">unsigned</name> <name pos:line="9362" pos:column="46">UINT</name> <name pos:line="9362" pos:column="51">cNames</name><op:operator pos:line="9362" pos:column="57">,</op:operator>
            <comment type="block" pos:line="9363" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9363" pos:column="37">unsigned</name> <name pos:line="9363" pos:column="46">long</name> <name pos:line="9363" pos:column="51">lcid</name><op:operator pos:line="9363" pos:column="55">,</op:operator>
            <comment type="block" pos:line="9364" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="9364" pos:column="38">__RPC__out</name> <name pos:line="9364" pos:column="49">signed</name> <name pos:line="9364" pos:column="56">long</name> <op:operator pos:line="9364" pos:column="61">*</op:operator><name pos:line="9364" pos:column="62">rgdispid</name><op:operator pos:line="9364" pos:column="70">,</op:operator>
            <comment type="block" pos:line="9365" pos:column="13">/* [retval][out] */</comment> <name pos:line="9365" pos:column="33">__RPC__out</name> <name pos:line="9365" pos:column="44">void</name> <op:operator pos:line="9365" pos:column="49">*</op:operator><name pos:line="9365" pos:column="50">retval</name><op:operator pos:line="9365" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="9367" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="9367" pos:column="46">HRESULT</name> <argument_list pos:line="9367" pos:column="54">( <argument pos:line="9367" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="9367" pos:column="83">(</op:operator> 
            <name pos:line="9368" pos:column="13">Breakpoint2</name> <op:operator pos:line="9368" pos:column="25">*</op:operator> <name pos:line="9368" pos:column="27">This</name><op:operator pos:line="9368" pos:column="31">,</op:operator>
            <comment type="block" pos:line="9369" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9369" pos:column="37">signed</name> <name pos:line="9369" pos:column="44">long</name> <name pos:line="9369" pos:column="49">dispidMember</name><op:operator pos:line="9369" pos:column="61">,</op:operator>
            <comment type="block" pos:line="9370" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9370" pos:column="37">__RPC__in</name> struct <name pos:line="9370" pos:column="54">GUID</name> <op:operator pos:line="9370" pos:column="59">*</op:operator><name pos:line="9370" pos:column="60">riid</name><op:operator pos:line="9370" pos:column="64">,</op:operator>
            <comment type="block" pos:line="9371" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9371" pos:column="37">unsigned</name> <name pos:line="9371" pos:column="46">long</name> <name pos:line="9371" pos:column="51">lcid</name><op:operator pos:line="9371" pos:column="55">,</op:operator>
            <comment type="block" pos:line="9372" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9372" pos:column="37">unsigned</name> <name pos:line="9372" pos:column="46">short</name> <name pos:line="9372" pos:column="52">wFlags</name><op:operator pos:line="9372" pos:column="58">,</op:operator>
            <comment type="block" pos:line="9373" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="9373" pos:column="37">__RPC__in</name> struct <name pos:line="9373" pos:column="54">DISPPARAMS</name> <op:operator pos:line="9373" pos:column="65">*</op:operator><name pos:line="9373" pos:column="66">pdispparams</name><op:operator pos:line="9373" pos:column="77">,</op:operator>
            <comment type="block" pos:line="9374" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="9374" pos:column="38">__RPC__out</name> <name pos:line="9374" pos:column="49">VARIANT</name> <op:operator pos:line="9374" pos:column="57">*</op:operator><name pos:line="9374" pos:column="58">pvarResult</name><op:operator pos:line="9374" pos:column="68">,</op:operator>
            <comment type="block" pos:line="9375" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="9375" pos:column="38">__RPC__out</name> struct <name pos:line="9375" pos:column="56">EXCEPINFO</name> <op:operator pos:line="9375" pos:column="66">*</op:operator><name pos:line="9375" pos:column="67">pexcepinfo</name><op:operator pos:line="9375" pos:column="77">,</op:operator>
            <comment type="block" pos:line="9376" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="9376" pos:column="38">__RPC__out</name> <name pos:line="9376" pos:column="49">unsigned</name> <name pos:line="9376" pos:column="58">UINT</name> <op:operator pos:line="9376" pos:column="63">*</op:operator><name pos:line="9376" pos:column="64">puArgErr</name><op:operator pos:line="9376" pos:column="72">,</op:operator>
            <comment type="block" pos:line="9377" pos:column="13">/* [retval][out] */</comment> <name pos:line="9377" pos:column="33">__RPC__out</name> <name pos:line="9377" pos:column="44">void</name> <op:operator pos:line="9377" pos:column="49">*</op:operator><name pos:line="9377" pos:column="50">retval</name><op:operator pos:line="9377" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="9379" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="9379" pos:column="34">HRESULT</name></type> ( <name pos:line="9379" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="9379" pos:column="62">*</type:modifier><name pos:line="9379" pos:column="63">Delete</name> )<parameter_list pos:line="9379" pos:column="71">( 
            <param><decl><type><name pos:line="9380" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9380" pos:column="25">*</type:modifier></type> <name pos:line="9380" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9381" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9381" pos:column="33">__RPC__out</name> <name pos:line="9381" pos:column="44">void</name> <type:modifier pos:line="9381" pos:column="49">*</type:modifier></type><name pos:line="9381" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9383" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="9383" pos:column="43">HRESULT</name> <argument_list pos:line="9383" pos:column="51">( <argument pos:line="9383" pos:column="53">STDMETHODCALLTYPE *get_Type</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="9383" pos:column="82">(</op:operator> 
            <name pos:line="9384" pos:column="13">Breakpoint2</name> <op:operator pos:line="9384" pos:column="25">*</op:operator> <name pos:line="9384" pos:column="27">This</name><op:operator pos:line="9384" pos:column="31">,</op:operator>
            <comment type="block" pos:line="9385" pos:column="13">/* [retval][out] */</comment> <name pos:line="9385" pos:column="33">__RPC__out</name> enum <name pos:line="9385" pos:column="49">dbgBreakpointType</name> <op:operator pos:line="9385" pos:column="67">*</op:operator><name pos:line="9385" pos:column="68">retval</name><op:operator pos:line="9385" pos:column="74">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="9387" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9387" pos:column="43">HRESULT</name></type> ( <name pos:line="9387" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9387" pos:column="71">*</type:modifier><name pos:line="9387" pos:column="72">get_Name</name> )<parameter_list pos:line="9387" pos:column="82">( 
            <param><decl><type><name pos:line="9388" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9388" pos:column="25">*</type:modifier></type> <name pos:line="9388" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9389" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9389" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9389" pos:column="54">BSTR</name> <type:modifier pos:line="9389" pos:column="59">*</type:modifier></type><name pos:line="9389" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9391" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="9391" pos:column="43">HRESULT</name></type> ( <name pos:line="9391" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9391" pos:column="71">*</type:modifier><name pos:line="9391" pos:column="72">put_Name</name> )<parameter_list pos:line="9391" pos:column="82">( 
            <param><decl><type><name pos:line="9392" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9392" pos:column="25">*</type:modifier></type> <name pos:line="9392" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9393" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="9393" pos:column="37">__RPC__in</name> <name pos:line="9393" pos:column="47">BSTR</name></type> <name pos:line="9393" pos:column="52">noname</name></decl></param>,
            <comment type="block" pos:line="9394" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9394" pos:column="33">__RPC__out</name> <name pos:line="9394" pos:column="44">void</name> <type:modifier pos:line="9394" pos:column="49">*</type:modifier></type><name pos:line="9394" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9396" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="9396" pos:column="43">HRESULT</name> <argument_list pos:line="9396" pos:column="51">( <argument pos:line="9396" pos:column="53">STDMETHODCALLTYPE *get_LocationType</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="9396" pos:column="90">(</op:operator> 
            <name pos:line="9397" pos:column="13">Breakpoint2</name> <op:operator pos:line="9397" pos:column="25">*</op:operator> <name pos:line="9397" pos:column="27">This</name><op:operator pos:line="9397" pos:column="31">,</op:operator>
            <comment type="block" pos:line="9398" pos:column="13">/* [retval][out] */</comment> <name pos:line="9398" pos:column="33">__RPC__out</name> enum <name pos:line="9398" pos:column="49">dbgBreakpointLocationType</name> <op:operator pos:line="9398" pos:column="75">*</op:operator><name pos:line="9398" pos:column="76">retval</name><op:operator pos:line="9398" pos:column="82">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="9400" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9400" pos:column="43">HRESULT</name></type> ( <name pos:line="9400" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9400" pos:column="71">*</type:modifier><name pos:line="9400" pos:column="72">get_FunctionName</name> )<parameter_list pos:line="9400" pos:column="90">( 
            <param><decl><type><name pos:line="9401" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9401" pos:column="25">*</type:modifier></type> <name pos:line="9401" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9402" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9402" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9402" pos:column="54">BSTR</name> <type:modifier pos:line="9402" pos:column="59">*</type:modifier></type><name pos:line="9402" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9404" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9404" pos:column="43">HRESULT</name></type> ( <name pos:line="9404" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9404" pos:column="71">*</type:modifier><name pos:line="9404" pos:column="72">get_FunctionLineOffset</name> )<parameter_list pos:line="9404" pos:column="96">( 
            <param><decl><type><name pos:line="9405" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9405" pos:column="25">*</type:modifier></type> <name pos:line="9405" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9406" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9406" pos:column="33">__RPC__out</name> <name pos:line="9406" pos:column="44">signed</name> <name pos:line="9406" pos:column="51">long</name> <type:modifier pos:line="9406" pos:column="56">*</type:modifier></type><name pos:line="9406" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9408" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9408" pos:column="43">HRESULT</name></type> ( <name pos:line="9408" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9408" pos:column="71">*</type:modifier><name pos:line="9408" pos:column="72">get_FunctionColumnOffset</name> )<parameter_list pos:line="9408" pos:column="98">( 
            <param><decl><type><name pos:line="9409" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9409" pos:column="25">*</type:modifier></type> <name pos:line="9409" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9410" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9410" pos:column="33">__RPC__out</name> <name pos:line="9410" pos:column="44">signed</name> <name pos:line="9410" pos:column="51">long</name> <type:modifier pos:line="9410" pos:column="56">*</type:modifier></type><name pos:line="9410" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9412" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9412" pos:column="43">HRESULT</name></type> ( <name pos:line="9412" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9412" pos:column="71">*</type:modifier><name pos:line="9412" pos:column="72">get_File</name> )<parameter_list pos:line="9412" pos:column="82">( 
            <param><decl><type><name pos:line="9413" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9413" pos:column="25">*</type:modifier></type> <name pos:line="9413" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9414" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9414" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9414" pos:column="54">BSTR</name> <type:modifier pos:line="9414" pos:column="59">*</type:modifier></type><name pos:line="9414" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9416" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9416" pos:column="43">HRESULT</name></type> ( <name pos:line="9416" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9416" pos:column="71">*</type:modifier><name pos:line="9416" pos:column="72">get_FileLine</name> )<parameter_list pos:line="9416" pos:column="86">( 
            <param><decl><type><name pos:line="9417" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9417" pos:column="25">*</type:modifier></type> <name pos:line="9417" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9418" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9418" pos:column="33">__RPC__out</name> <name pos:line="9418" pos:column="44">signed</name> <name pos:line="9418" pos:column="51">long</name> <type:modifier pos:line="9418" pos:column="56">*</type:modifier></type><name pos:line="9418" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9420" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9420" pos:column="43">HRESULT</name></type> ( <name pos:line="9420" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9420" pos:column="71">*</type:modifier><name pos:line="9420" pos:column="72">get_FileColumn</name> )<parameter_list pos:line="9420" pos:column="88">( 
            <param><decl><type><name pos:line="9421" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9421" pos:column="25">*</type:modifier></type> <name pos:line="9421" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9422" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9422" pos:column="33">__RPC__out</name> <name pos:line="9422" pos:column="44">signed</name> <name pos:line="9422" pos:column="51">long</name> <type:modifier pos:line="9422" pos:column="56">*</type:modifier></type><name pos:line="9422" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9424" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="9424" pos:column="43">HRESULT</name> <argument_list pos:line="9424" pos:column="51">( <argument pos:line="9424" pos:column="53">STDMETHODCALLTYPE *get_ConditionType</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="9424" pos:column="91">(</op:operator> 
            <name pos:line="9425" pos:column="13">Breakpoint2</name> <op:operator pos:line="9425" pos:column="25">*</op:operator> <name pos:line="9425" pos:column="27">This</name><op:operator pos:line="9425" pos:column="31">,</op:operator>
            <comment type="block" pos:line="9426" pos:column="13">/* [retval][out] */</comment> <name pos:line="9426" pos:column="33">__RPC__out</name> enum <name pos:line="9426" pos:column="49">dbgBreakpointConditionType</name> <op:operator pos:line="9426" pos:column="76">*</op:operator><name pos:line="9426" pos:column="77">retval</name><op:operator pos:line="9426" pos:column="83">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="9428" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9428" pos:column="43">HRESULT</name></type> ( <name pos:line="9428" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9428" pos:column="71">*</type:modifier><name pos:line="9428" pos:column="72">get_Condition</name> )<parameter_list pos:line="9428" pos:column="87">( 
            <param><decl><type><name pos:line="9429" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9429" pos:column="25">*</type:modifier></type> <name pos:line="9429" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9430" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9430" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9430" pos:column="54">BSTR</name> <type:modifier pos:line="9430" pos:column="59">*</type:modifier></type><name pos:line="9430" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9432" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9432" pos:column="43">HRESULT</name></type> ( <name pos:line="9432" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9432" pos:column="71">*</type:modifier><name pos:line="9432" pos:column="72">get_Language</name> )<parameter_list pos:line="9432" pos:column="86">( 
            <param><decl><type><name pos:line="9433" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9433" pos:column="25">*</type:modifier></type> <name pos:line="9433" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9434" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9434" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9434" pos:column="54">BSTR</name> <type:modifier pos:line="9434" pos:column="59">*</type:modifier></type><name pos:line="9434" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9436" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="9436" pos:column="43">HRESULT</name> <argument_list pos:line="9436" pos:column="51">( <argument pos:line="9436" pos:column="53">STDMETHODCALLTYPE *get_HitCountType</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="9436" pos:column="90">(</op:operator> 
            <name pos:line="9437" pos:column="13">Breakpoint2</name> <op:operator pos:line="9437" pos:column="25">*</op:operator> <name pos:line="9437" pos:column="27">This</name><op:operator pos:line="9437" pos:column="31">,</op:operator>
            <comment type="block" pos:line="9438" pos:column="13">/* [retval][out] */</comment> <name pos:line="9438" pos:column="33">__RPC__out</name> enum <name pos:line="9438" pos:column="49">dbgHitCountType</name> <op:operator pos:line="9438" pos:column="65">*</op:operator><name pos:line="9438" pos:column="66">retval</name><op:operator pos:line="9438" pos:column="72">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="9440" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9440" pos:column="43">HRESULT</name></type> ( <name pos:line="9440" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9440" pos:column="71">*</type:modifier><name pos:line="9440" pos:column="72">get_HitCountTarget</name> )<parameter_list pos:line="9440" pos:column="92">( 
            <param><decl><type><name pos:line="9441" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9441" pos:column="25">*</type:modifier></type> <name pos:line="9441" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9442" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9442" pos:column="33">__RPC__out</name> <name pos:line="9442" pos:column="44">signed</name> <name pos:line="9442" pos:column="51">long</name> <type:modifier pos:line="9442" pos:column="56">*</type:modifier></type><name pos:line="9442" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9444" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9444" pos:column="43">HRESULT</name></type> ( <name pos:line="9444" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9444" pos:column="71">*</type:modifier><name pos:line="9444" pos:column="72">get_Enabled</name> )<parameter_list pos:line="9444" pos:column="85">( 
            <param><decl><type><name pos:line="9445" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9445" pos:column="25">*</type:modifier></type> <name pos:line="9445" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9446" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9446" pos:column="33">__RPC__out</name> <name pos:line="9446" pos:column="44">BOOLEAN</name> <type:modifier pos:line="9446" pos:column="52">*</type:modifier></type><name pos:line="9446" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9448" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="9448" pos:column="43">HRESULT</name></type> ( <name pos:line="9448" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9448" pos:column="71">*</type:modifier><name pos:line="9448" pos:column="72">put_Enabled</name> )<parameter_list pos:line="9448" pos:column="85">( 
            <param><decl><type><name pos:line="9449" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9449" pos:column="25">*</type:modifier></type> <name pos:line="9449" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9450" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="9450" pos:column="37">BOOLEAN</name></type> <name pos:line="9450" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="9451" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9451" pos:column="33">__RPC__out</name> <name pos:line="9451" pos:column="44">void</name> <type:modifier pos:line="9451" pos:column="49">*</type:modifier></type><name pos:line="9451" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9453" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9453" pos:column="43">HRESULT</name></type> ( <name pos:line="9453" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9453" pos:column="71">*</type:modifier><name pos:line="9453" pos:column="72">get_Tag</name> )<parameter_list pos:line="9453" pos:column="81">( 
            <param><decl><type><name pos:line="9454" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9454" pos:column="25">*</type:modifier></type> <name pos:line="9454" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9455" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9455" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9455" pos:column="54">BSTR</name> <type:modifier pos:line="9455" pos:column="59">*</type:modifier></type><name pos:line="9455" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9457" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="9457" pos:column="43">HRESULT</name></type> ( <name pos:line="9457" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9457" pos:column="71">*</type:modifier><name pos:line="9457" pos:column="72">put_Tag</name> )<parameter_list pos:line="9457" pos:column="81">( 
            <param><decl><type><name pos:line="9458" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9458" pos:column="25">*</type:modifier></type> <name pos:line="9458" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9459" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="9459" pos:column="37">__RPC__in</name> <name pos:line="9459" pos:column="47">BSTR</name></type> <name pos:line="9459" pos:column="52">noname</name></decl></param>,
            <comment type="block" pos:line="9460" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9460" pos:column="33">__RPC__out</name> <name pos:line="9460" pos:column="44">void</name> <type:modifier pos:line="9460" pos:column="49">*</type:modifier></type><name pos:line="9460" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9462" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9462" pos:column="43">HRESULT</name></type> ( <name pos:line="9462" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9462" pos:column="71">*</type:modifier><name pos:line="9462" pos:column="72">get_CurrentHits</name> )<parameter_list pos:line="9462" pos:column="89">( 
            <param><decl><type><name pos:line="9463" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9463" pos:column="25">*</type:modifier></type> <name pos:line="9463" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9464" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9464" pos:column="33">__RPC__out</name> <name pos:line="9464" pos:column="44">signed</name> <name pos:line="9464" pos:column="51">long</name> <type:modifier pos:line="9464" pos:column="56">*</type:modifier></type><name pos:line="9464" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9466" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9466" pos:column="43">HRESULT</name></type> ( <name pos:line="9466" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9466" pos:column="71">*</type:modifier><name pos:line="9466" pos:column="72">get_Program</name> )<parameter_list pos:line="9466" pos:column="85">( 
            <param><decl><type><name pos:line="9467" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9467" pos:column="25">*</type:modifier></type> <name pos:line="9467" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9468" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9468" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9468" pos:column="54">Program</name> <type:modifier pos:line="9468" pos:column="62">*</type:modifier><type:modifier pos:line="9468" pos:column="63">*</type:modifier></type><name pos:line="9468" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9470" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9470" pos:column="43">HRESULT</name></type> ( <name pos:line="9470" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9470" pos:column="71">*</type:modifier><name pos:line="9470" pos:column="72">get_DTE</name> )<parameter_list pos:line="9470" pos:column="81">( 
            <param><decl><type><name pos:line="9471" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9471" pos:column="25">*</type:modifier></type> <name pos:line="9471" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9472" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9472" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="9472" pos:column="54">*</type:modifier><type:modifier pos:line="9472" pos:column="55">*</type:modifier></type><name pos:line="9472" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9474" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9474" pos:column="43">HRESULT</name></type> ( <name pos:line="9474" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9474" pos:column="71">*</type:modifier><name pos:line="9474" pos:column="72">get_Parent</name> )<parameter_list pos:line="9474" pos:column="84">( 
            <param><decl><type><name pos:line="9475" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9475" pos:column="25">*</type:modifier></type> <name pos:line="9475" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9476" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9476" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9476" pos:column="54">Breakpoint</name> <type:modifier pos:line="9476" pos:column="65">*</type:modifier><type:modifier pos:line="9476" pos:column="66">*</type:modifier></type><name pos:line="9476" pos:column="67">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9478" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9478" pos:column="43">HRESULT</name></type> ( <name pos:line="9478" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9478" pos:column="71">*</type:modifier><name pos:line="9478" pos:column="72">get_Collection</name> )<parameter_list pos:line="9478" pos:column="88">( 
            <param><decl><type><name pos:line="9479" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9479" pos:column="25">*</type:modifier></type> <name pos:line="9479" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9480" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9480" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9480" pos:column="54">Breakpoints</name> <type:modifier pos:line="9480" pos:column="66">*</type:modifier><type:modifier pos:line="9480" pos:column="67">*</type:modifier></type><name pos:line="9480" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9482" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="9482" pos:column="43">HRESULT</name></type> ( <name pos:line="9482" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="9482" pos:column="71">*</type:modifier><name pos:line="9482" pos:column="72">get_Children</name> )<parameter_list pos:line="9482" pos:column="86">( 
            <param><decl><type><name pos:line="9483" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9483" pos:column="25">*</type:modifier></type> <name pos:line="9483" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9484" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9484" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9484" pos:column="54">Breakpoints</name> <type:modifier pos:line="9484" pos:column="66">*</type:modifier><type:modifier pos:line="9484" pos:column="67">*</type:modifier></type><name pos:line="9484" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9486" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="9486" pos:column="34">HRESULT</name></type> ( <name pos:line="9486" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="9486" pos:column="62">*</type:modifier><name pos:line="9486" pos:column="63">ResetHitCount</name> )<parameter_list pos:line="9486" pos:column="78">( 
            <param><decl><type><name pos:line="9487" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9487" pos:column="25">*</type:modifier></type> <name pos:line="9487" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9488" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9488" pos:column="33">__RPC__out</name> <name pos:line="9488" pos:column="44">void</name> <type:modifier pos:line="9488" pos:column="49">*</type:modifier></type><name pos:line="9488" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9490" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9490" pos:column="73">HRESULT</name></type> ( <name pos:line="9490" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9490" pos:column="101">*</type:modifier><name pos:line="9490" pos:column="102">get_Process</name> )<parameter_list pos:line="9490" pos:column="115">( 
            <param><decl><type><name pos:line="9491" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9491" pos:column="25">*</type:modifier></type> <name pos:line="9491" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9492" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9492" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9492" pos:column="54">Process2</name> <type:modifier pos:line="9492" pos:column="63">*</type:modifier><type:modifier pos:line="9492" pos:column="64">*</type:modifier></type><name pos:line="9492" pos:column="65">ppProcess</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9494" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9494" pos:column="73">HRESULT</name></type> ( <name pos:line="9494" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9494" pos:column="101">*</type:modifier><name pos:line="9494" pos:column="102">get_BreakWhenHit</name> )<parameter_list pos:line="9494" pos:column="120">( 
            <param><decl><type><name pos:line="9495" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9495" pos:column="25">*</type:modifier></type> <name pos:line="9495" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9496" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9496" pos:column="33">__RPC__out</name> <name pos:line="9496" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="9496" pos:column="57">*</type:modifier></type><name pos:line="9496" pos:column="58">BreakWhenHit</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9498" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="9498" pos:column="73">HRESULT</name></type> ( <name pos:line="9498" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9498" pos:column="101">*</type:modifier><name pos:line="9498" pos:column="102">put_BreakWhenHit</name> )<parameter_list pos:line="9498" pos:column="120">( 
            <param><decl><type><name pos:line="9499" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9499" pos:column="25">*</type:modifier></type> <name pos:line="9499" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9500" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9500" pos:column="24">VARIANT_BOOL</name></type> <name pos:line="9500" pos:column="37">BreakWhenHit</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9502" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9502" pos:column="73">HRESULT</name></type> ( <name pos:line="9502" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9502" pos:column="101">*</type:modifier><name pos:line="9502" pos:column="102">get_Message</name> )<parameter_list pos:line="9502" pos:column="115">( 
            <param><decl><type><name pos:line="9503" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9503" pos:column="25">*</type:modifier></type> <name pos:line="9503" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9504" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9504" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9504" pos:column="54">BSTR</name> <type:modifier pos:line="9504" pos:column="59">*</type:modifier></type><name pos:line="9504" pos:column="60">Message</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9506" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="9506" pos:column="73">HRESULT</name></type> ( <name pos:line="9506" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9506" pos:column="101">*</type:modifier><name pos:line="9506" pos:column="102">put_Message</name> )<parameter_list pos:line="9506" pos:column="115">( 
            <param><decl><type><name pos:line="9507" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9507" pos:column="25">*</type:modifier></type> <name pos:line="9507" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9508" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9508" pos:column="24">__RPC__in</name> <name pos:line="9508" pos:column="34">BSTR</name></type> <name pos:line="9508" pos:column="39">Message</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9510" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9510" pos:column="73">HRESULT</name></type> ( <name pos:line="9510" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9510" pos:column="101">*</type:modifier><name pos:line="9510" pos:column="102">get_Macro</name> )<parameter_list pos:line="9510" pos:column="113">( 
            <param><decl><type><name pos:line="9511" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9511" pos:column="25">*</type:modifier></type> <name pos:line="9511" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9512" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9512" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9512" pos:column="54">BSTR</name> <type:modifier pos:line="9512" pos:column="59">*</type:modifier></type><name pos:line="9512" pos:column="60">Macro</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9514" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="9514" pos:column="73">HRESULT</name></type> ( <name pos:line="9514" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9514" pos:column="101">*</type:modifier><name pos:line="9514" pos:column="102">put_Macro</name> )<parameter_list pos:line="9514" pos:column="113">( 
            <param><decl><type><name pos:line="9515" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9515" pos:column="25">*</type:modifier></type> <name pos:line="9515" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9516" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9516" pos:column="24">__RPC__in</name> <name pos:line="9516" pos:column="34">BSTR</name></type> <name pos:line="9516" pos:column="39">Macro</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9518" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9518" pos:column="73">HRESULT</name></type> ( <name pos:line="9518" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9518" pos:column="101">*</type:modifier><name pos:line="9518" pos:column="102">get_FilterBy</name> )<parameter_list pos:line="9518" pos:column="116">( 
            <param><decl><type><name pos:line="9519" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9519" pos:column="25">*</type:modifier></type> <name pos:line="9519" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9520" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9520" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9520" pos:column="54">BSTR</name> <type:modifier pos:line="9520" pos:column="59">*</type:modifier></type><name pos:line="9520" pos:column="60">FilterBy</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9522" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="9522" pos:column="73">HRESULT</name></type> ( <name pos:line="9522" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9522" pos:column="101">*</type:modifier><name pos:line="9522" pos:column="102">put_FilterBy</name> )<parameter_list pos:line="9522" pos:column="116">( 
            <param><decl><type><name pos:line="9523" pos:column="13">Breakpoint2</name> <type:modifier pos:line="9523" pos:column="25">*</type:modifier></type> <name pos:line="9523" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="9524" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9524" pos:column="24">__RPC__in</name> <name pos:line="9524" pos:column="34">BSTR</name></type> <name pos:line="9524" pos:column="39">FilterBy</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9526" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="9527" pos:column="7">Breakpoint2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="9529" pos:column="5">interface</name></type> <name pos:line="9529" pos:column="15">Breakpoint2</name>
    <argument_list pos:line="9530" pos:column="5">{
        <argument><expr><name pos:line="9531" pos:column="9">CONST_VTBL</name> struct <name pos:line="9531" pos:column="27">Breakpoint2Vtbl</name> <op:operator pos:line="9531" pos:column="43">*</op:operator><name pos:line="9531" pos:column="44">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="9536" pos:column="1">#<cpp:directive pos:line="9536" pos:column="2">ifdef</cpp:directive> <name pos:line="9536" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="9539" pos:column="1">#<cpp:directive pos:line="9539" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9539" pos:column="9">Breakpoint2_QueryInterface</name><parameter_list pos:line="9539" pos:column="35">(<param><type><name pos:line="9539" pos:column="36">This</name></type></param>,<param><type><name pos:line="9539" pos:column="41">riid</name></type></param>,<param><type><name pos:line="9539" pos:column="46">ppvObj</name></type></param>,<param><type><name pos:line="9539" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9540" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9542" pos:column="1">#<cpp:directive pos:line="9542" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9542" pos:column="9">Breakpoint2_AddRef</name><parameter_list pos:line="9542" pos:column="27">(<param><type><name pos:line="9542" pos:column="28">This</name></type></param>,<param><type><name pos:line="9542" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9543" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9545" pos:column="1">#<cpp:directive pos:line="9545" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9545" pos:column="9">Breakpoint2_Release</name><parameter_list pos:line="9545" pos:column="28">(<param><type><name pos:line="9545" pos:column="29">This</name></type></param>,<param><type><name pos:line="9545" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9546" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9548" pos:column="1">#<cpp:directive pos:line="9548" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9548" pos:column="9">Breakpoint2_GetTypeInfoCount</name><parameter_list pos:line="9548" pos:column="37">(<param><type><name pos:line="9548" pos:column="38">This</name></type></param>,<param><type><name pos:line="9548" pos:column="43">pctinfo</name></type></param>,<param><type><name pos:line="9548" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9549" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9551" pos:column="1">#<cpp:directive pos:line="9551" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9551" pos:column="9">Breakpoint2_GetTypeInfo</name><parameter_list pos:line="9551" pos:column="32">(<param><type><name pos:line="9551" pos:column="33">This</name></type></param>,<param><type><name pos:line="9551" pos:column="38">itinfo</name></type></param>,<param><type><name pos:line="9551" pos:column="45">lcid</name></type></param>,<param><type><name pos:line="9551" pos:column="50">pptinfo</name></type></param>,<param><type><name pos:line="9551" pos:column="58">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9552" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9554" pos:column="1">#<cpp:directive pos:line="9554" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9554" pos:column="9">Breakpoint2_GetIDsOfNames</name><parameter_list pos:line="9554" pos:column="34">(<param><type><name pos:line="9554" pos:column="35">This</name></type></param>,<param><type><name pos:line="9554" pos:column="40">riid</name></type></param>,<param><type><name pos:line="9554" pos:column="45">rgszNames</name></type></param>,<param><type><name pos:line="9554" pos:column="55">cNames</name></type></param>,<param><type><name pos:line="9554" pos:column="62">lcid</name></type></param>,<param><type><name pos:line="9554" pos:column="67">rgdispid</name></type></param>,<param><type><name pos:line="9554" pos:column="76">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9555" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9557" pos:column="1">#<cpp:directive pos:line="9557" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9557" pos:column="9">Breakpoint2_Invoke</name><parameter_list pos:line="9557" pos:column="27">(<param><type><name pos:line="9557" pos:column="28">This</name></type></param>,<param><type><name pos:line="9557" pos:column="33">dispidMember</name></type></param>,<param><type><name pos:line="9557" pos:column="46">riid</name></type></param>,<param><type><name pos:line="9557" pos:column="51">lcid</name></type></param>,<param><type><name pos:line="9557" pos:column="56">wFlags</name></type></param>,<param><type><name pos:line="9557" pos:column="63">pdispparams</name></type></param>,<param><type><name pos:line="9557" pos:column="75">pvarResult</name></type></param>,<param><type><name pos:line="9557" pos:column="86">pexcepinfo</name></type></param>,<param><type><name pos:line="9557" pos:column="97">puArgErr</name></type></param>,<param><type><name pos:line="9557" pos:column="106">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9558" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9560" pos:column="1">#<cpp:directive pos:line="9560" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9560" pos:column="9">Breakpoint2_Delete</name><parameter_list pos:line="9560" pos:column="27">(<param><type><name pos:line="9560" pos:column="28">This</name></type></param>,<param><type><name pos:line="9560" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9561" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9563" pos:column="1">#<cpp:directive pos:line="9563" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9563" pos:column="9">Breakpoint2_get_Type</name><parameter_list pos:line="9563" pos:column="29">(<param><type><name pos:line="9563" pos:column="30">This</name></type></param>,<param><type><name pos:line="9563" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9564" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Type(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9566" pos:column="1">#<cpp:directive pos:line="9566" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9566" pos:column="9">Breakpoint2_get_Name</name><parameter_list pos:line="9566" pos:column="29">(<param><type><name pos:line="9566" pos:column="30">This</name></type></param>,<param><type><name pos:line="9566" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9567" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9569" pos:column="1">#<cpp:directive pos:line="9569" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9569" pos:column="9">Breakpoint2_put_Name</name><parameter_list pos:line="9569" pos:column="29">(<param><type><name pos:line="9569" pos:column="30">This</name></type></param>,<param><type><name pos:line="9569" pos:column="35">noname</name></type></param>,<param><type><name pos:line="9569" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9570" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9572" pos:column="1">#<cpp:directive pos:line="9572" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9572" pos:column="9">Breakpoint2_get_LocationType</name><parameter_list pos:line="9572" pos:column="37">(<param><type><name pos:line="9572" pos:column="38">This</name></type></param>,<param><type><name pos:line="9572" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9573" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_LocationType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9575" pos:column="1">#<cpp:directive pos:line="9575" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9575" pos:column="9">Breakpoint2_get_FunctionName</name><parameter_list pos:line="9575" pos:column="37">(<param><type><name pos:line="9575" pos:column="38">This</name></type></param>,<param><type><name pos:line="9575" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9576" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FunctionName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9578" pos:column="1">#<cpp:directive pos:line="9578" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9578" pos:column="9">Breakpoint2_get_FunctionLineOffset</name><parameter_list pos:line="9578" pos:column="43">(<param><type><name pos:line="9578" pos:column="44">This</name></type></param>,<param><type><name pos:line="9578" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9579" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FunctionLineOffset(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9581" pos:column="1">#<cpp:directive pos:line="9581" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9581" pos:column="9">Breakpoint2_get_FunctionColumnOffset</name><parameter_list pos:line="9581" pos:column="45">(<param><type><name pos:line="9581" pos:column="46">This</name></type></param>,<param><type><name pos:line="9581" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9582" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FunctionColumnOffset(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9584" pos:column="1">#<cpp:directive pos:line="9584" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9584" pos:column="9">Breakpoint2_get_File</name><parameter_list pos:line="9584" pos:column="29">(<param><type><name pos:line="9584" pos:column="30">This</name></type></param>,<param><type><name pos:line="9584" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9585" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_File(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9587" pos:column="1">#<cpp:directive pos:line="9587" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9587" pos:column="9">Breakpoint2_get_FileLine</name><parameter_list pos:line="9587" pos:column="33">(<param><type><name pos:line="9587" pos:column="34">This</name></type></param>,<param><type><name pos:line="9587" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9588" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FileLine(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9590" pos:column="1">#<cpp:directive pos:line="9590" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9590" pos:column="9">Breakpoint2_get_FileColumn</name><parameter_list pos:line="9590" pos:column="35">(<param><type><name pos:line="9590" pos:column="36">This</name></type></param>,<param><type><name pos:line="9590" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9591" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FileColumn(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9593" pos:column="1">#<cpp:directive pos:line="9593" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9593" pos:column="9">Breakpoint2_get_ConditionType</name><parameter_list pos:line="9593" pos:column="38">(<param><type><name pos:line="9593" pos:column="39">This</name></type></param>,<param><type><name pos:line="9593" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9594" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ConditionType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9596" pos:column="1">#<cpp:directive pos:line="9596" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9596" pos:column="9">Breakpoint2_get_Condition</name><parameter_list pos:line="9596" pos:column="34">(<param><type><name pos:line="9596" pos:column="35">This</name></type></param>,<param><type><name pos:line="9596" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9597" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Condition(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9599" pos:column="1">#<cpp:directive pos:line="9599" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9599" pos:column="9">Breakpoint2_get_Language</name><parameter_list pos:line="9599" pos:column="33">(<param><type><name pos:line="9599" pos:column="34">This</name></type></param>,<param><type><name pos:line="9599" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9600" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Language(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9602" pos:column="1">#<cpp:directive pos:line="9602" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9602" pos:column="9">Breakpoint2_get_HitCountType</name><parameter_list pos:line="9602" pos:column="37">(<param><type><name pos:line="9602" pos:column="38">This</name></type></param>,<param><type><name pos:line="9602" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9603" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_HitCountType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9605" pos:column="1">#<cpp:directive pos:line="9605" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9605" pos:column="9">Breakpoint2_get_HitCountTarget</name><parameter_list pos:line="9605" pos:column="39">(<param><type><name pos:line="9605" pos:column="40">This</name></type></param>,<param><type><name pos:line="9605" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9606" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_HitCountTarget(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9608" pos:column="1">#<cpp:directive pos:line="9608" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9608" pos:column="9">Breakpoint2_get_Enabled</name><parameter_list pos:line="9608" pos:column="32">(<param><type><name pos:line="9608" pos:column="33">This</name></type></param>,<param><type><name pos:line="9608" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9609" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Enabled(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9611" pos:column="1">#<cpp:directive pos:line="9611" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9611" pos:column="9">Breakpoint2_put_Enabled</name><parameter_list pos:line="9611" pos:column="32">(<param><type><name pos:line="9611" pos:column="33">This</name></type></param>,<param><type><name pos:line="9611" pos:column="38">noname</name></type></param>,<param><type><name pos:line="9611" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9612" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Enabled(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9614" pos:column="1">#<cpp:directive pos:line="9614" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9614" pos:column="9">Breakpoint2_get_Tag</name><parameter_list pos:line="9614" pos:column="28">(<param><type><name pos:line="9614" pos:column="29">This</name></type></param>,<param><type><name pos:line="9614" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9615" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Tag(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9617" pos:column="1">#<cpp:directive pos:line="9617" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9617" pos:column="9">Breakpoint2_put_Tag</name><parameter_list pos:line="9617" pos:column="28">(<param><type><name pos:line="9617" pos:column="29">This</name></type></param>,<param><type><name pos:line="9617" pos:column="34">noname</name></type></param>,<param><type><name pos:line="9617" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9618" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Tag(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9620" pos:column="1">#<cpp:directive pos:line="9620" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9620" pos:column="9">Breakpoint2_get_CurrentHits</name><parameter_list pos:line="9620" pos:column="36">(<param><type><name pos:line="9620" pos:column="37">This</name></type></param>,<param><type><name pos:line="9620" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9621" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CurrentHits(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9623" pos:column="1">#<cpp:directive pos:line="9623" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9623" pos:column="9">Breakpoint2_get_Program</name><parameter_list pos:line="9623" pos:column="32">(<param><type><name pos:line="9623" pos:column="33">This</name></type></param>,<param><type><name pos:line="9623" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9624" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Program(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9626" pos:column="1">#<cpp:directive pos:line="9626" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9626" pos:column="9">Breakpoint2_get_DTE</name><parameter_list pos:line="9626" pos:column="28">(<param><type><name pos:line="9626" pos:column="29">This</name></type></param>,<param><type><name pos:line="9626" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9627" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9629" pos:column="1">#<cpp:directive pos:line="9629" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9629" pos:column="9">Breakpoint2_get_Parent</name><parameter_list pos:line="9629" pos:column="31">(<param><type><name pos:line="9629" pos:column="32">This</name></type></param>,<param><type><name pos:line="9629" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9630" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9632" pos:column="1">#<cpp:directive pos:line="9632" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9632" pos:column="9">Breakpoint2_get_Collection</name><parameter_list pos:line="9632" pos:column="35">(<param><type><name pos:line="9632" pos:column="36">This</name></type></param>,<param><type><name pos:line="9632" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9633" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9635" pos:column="1">#<cpp:directive pos:line="9635" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9635" pos:column="9">Breakpoint2_get_Children</name><parameter_list pos:line="9635" pos:column="33">(<param><type><name pos:line="9635" pos:column="34">This</name></type></param>,<param><type><name pos:line="9635" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9636" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Children(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="9638" pos:column="1">#<cpp:directive pos:line="9638" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9638" pos:column="9">Breakpoint2_ResetHitCount</name><parameter_list pos:line="9638" pos:column="34">(<param><type><name pos:line="9638" pos:column="35">This</name></type></param>,<param><type><name pos:line="9638" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9639" pos:column="5">( (This)-&gt;lpVtbl -&gt; ResetHitCount(This,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="9642" pos:column="1">#<cpp:directive pos:line="9642" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9642" pos:column="9">Breakpoint2_get_Process</name><parameter_list pos:line="9642" pos:column="32">(<param><type><name pos:line="9642" pos:column="33">This</name></type></param>,<param><type><name pos:line="9642" pos:column="38">ppProcess</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9643" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Process(This,ppProcess) )</cpp:value></cpp:define> 

<cpp:define pos:line="9645" pos:column="1">#<cpp:directive pos:line="9645" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9645" pos:column="9">Breakpoint2_get_BreakWhenHit</name><parameter_list pos:line="9645" pos:column="37">(<param><type><name pos:line="9645" pos:column="38">This</name></type></param>,<param><type><name pos:line="9645" pos:column="43">BreakWhenHit</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9646" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_BreakWhenHit(This,BreakWhenHit) )</cpp:value></cpp:define> 

<cpp:define pos:line="9648" pos:column="1">#<cpp:directive pos:line="9648" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9648" pos:column="9">Breakpoint2_put_BreakWhenHit</name><parameter_list pos:line="9648" pos:column="37">(<param><type><name pos:line="9648" pos:column="38">This</name></type></param>,<param><type><name pos:line="9648" pos:column="43">BreakWhenHit</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9649" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_BreakWhenHit(This,BreakWhenHit) )</cpp:value></cpp:define> 

<cpp:define pos:line="9651" pos:column="1">#<cpp:directive pos:line="9651" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9651" pos:column="9">Breakpoint2_get_Message</name><parameter_list pos:line="9651" pos:column="32">(<param><type><name pos:line="9651" pos:column="33">This</name></type></param>,<param><type><name pos:line="9651" pos:column="38">Message</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9652" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Message(This,Message) )</cpp:value></cpp:define> 

<cpp:define pos:line="9654" pos:column="1">#<cpp:directive pos:line="9654" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9654" pos:column="9">Breakpoint2_put_Message</name><parameter_list pos:line="9654" pos:column="32">(<param><type><name pos:line="9654" pos:column="33">This</name></type></param>,<param><type><name pos:line="9654" pos:column="38">Message</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9655" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Message(This,Message) )</cpp:value></cpp:define> 

<cpp:define pos:line="9657" pos:column="1">#<cpp:directive pos:line="9657" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9657" pos:column="9">Breakpoint2_get_Macro</name><parameter_list pos:line="9657" pos:column="30">(<param><type><name pos:line="9657" pos:column="31">This</name></type></param>,<param><type><name pos:line="9657" pos:column="36">Macro</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9658" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Macro(This,Macro) )</cpp:value></cpp:define> 

<cpp:define pos:line="9660" pos:column="1">#<cpp:directive pos:line="9660" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9660" pos:column="9">Breakpoint2_put_Macro</name><parameter_list pos:line="9660" pos:column="30">(<param><type><name pos:line="9660" pos:column="31">This</name></type></param>,<param><type><name pos:line="9660" pos:column="36">Macro</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9661" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Macro(This,Macro) )</cpp:value></cpp:define> 

<cpp:define pos:line="9663" pos:column="1">#<cpp:directive pos:line="9663" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9663" pos:column="9">Breakpoint2_get_FilterBy</name><parameter_list pos:line="9663" pos:column="33">(<param><type><name pos:line="9663" pos:column="34">This</name></type></param>,<param><type><name pos:line="9663" pos:column="39">FilterBy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9664" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FilterBy(This,FilterBy) )</cpp:value></cpp:define> 

<cpp:define pos:line="9666" pos:column="1">#<cpp:directive pos:line="9666" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9666" pos:column="9">Breakpoint2_put_FilterBy</name><parameter_list pos:line="9666" pos:column="33">(<param><type><name pos:line="9666" pos:column="34">This</name></type></param>,<param><type><name pos:line="9666" pos:column="39">FilterBy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9667" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_FilterBy(This,FilterBy) )</cpp:value></cpp:define> 

<cpp:endif pos:line="9669" pos:column="1">#<cpp:directive pos:line="9669" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="9669" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="9672" pos:column="1">#<cpp:directive pos:line="9672" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9672" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="9677" pos:column="1">#<cpp:directive pos:line="9677" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9677" pos:column="9">/* __Breakpoint2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="9680" pos:column="1">#<cpp:directive pos:line="9680" pos:column="2">ifndef</cpp:directive> <name pos:line="9680" pos:column="9">__Engine_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="9681" pos:column="1">#<cpp:directive pos:line="9681" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9681" pos:column="9">__Engine_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="9683" pos:column="1">/* interface Engine */</comment>
<comment type="block" pos:line="9684" pos:column="1">/* [object][version][helpstringcontext][helpstring][helpcontext][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="9687" pos:column="1">EXTERN_C</name> <specifier pos:line="9687" pos:column="10">const</specifier> <name pos:line="9687" pos:column="16">IID</name></type> <name pos:line="9687" pos:column="20">IID_Engine</name></decl>;</decl_stmt>

<cpp:if pos:line="9689" pos:column="1">#<cpp:directive pos:line="9689" pos:column="2">if</cpp:directive> <expr><call><name pos:line="9689" pos:column="5">defined</name><argument_list pos:line="9689" pos:column="12">(<argument><expr><name pos:line="9689" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="9689" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="9689" pos:column="29">!</op:operator><call><name pos:line="9689" pos:column="30">defined</name><argument_list pos:line="9689" pos:column="37">(<argument><expr><name pos:line="9689" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="9691" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="9691" pos:column="19">(<argument pos:line="9691" pos:column="20">"8CEA6D39-EBEE-4de9-B282-B5CECE9C9861"</argument>)</argument_list></macro>
    <label><name pos:line="9692" pos:column="5">Engine</name> :</label> <expr_stmt><expr pos:line="9692" pos:column="14">public <name pos:line="9692" pos:column="21">IDispatch</name>
    <block pos:line="9693" pos:column="5">{
    <expr pos:line="9694" pos:column="5">public<op:operator pos:line="9694" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="9695" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9695" pos:column="81">HRESULT</name> <name pos:line="9695" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9695" pos:column="107">get_Name</name><argument_list pos:line="9695" pos:column="115">( 
            <comment type="block" pos:line="9696" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9696" pos:column="33">__RPC__deref_out_opt BSTR *Name</argument>)</argument_list></macro> <op:operator pos:line="9696" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="9696" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="9698" pos:column="9">virtual <comment type="block" pos:line="9698" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9698" pos:column="81">HRESULT</name> <name pos:line="9698" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9698" pos:column="107">get_ID</name><argument_list pos:line="9698" pos:column="113">( 
            <comment type="block" pos:line="9699" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9699" pos:column="33">__RPC__deref_out_opt BSTR *ID</argument>)</argument_list></macro> <op:operator pos:line="9699" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="9699" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="9701" pos:column="9">virtual <comment type="block" pos:line="9701" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9701" pos:column="81">HRESULT</name> <name pos:line="9701" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9701" pos:column="107">get_AttachResult</name><argument_list pos:line="9701" pos:column="123">( 
            <comment type="block" pos:line="9702" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9702" pos:column="33">__RPC__out HRESULT *Result</argument>)</argument_list></macro> <op:operator pos:line="9702" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="9702" pos:column="63">0</lit:literal></expr>;
        
        <expr pos:line="9704" pos:column="9">virtual <comment type="block" pos:line="9704" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9704" pos:column="81">HRESULT</name> <name pos:line="9704" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9704" pos:column="107">get_DTE</name><argument_list pos:line="9704" pos:column="114">( 
            <comment type="block" pos:line="9705" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9705" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="9705" pos:column="54">/* external definition not present */</comment> DTE **DTE</argument>)</argument_list></macro> <op:operator pos:line="9705" pos:column="103">=</op:operator> <lit:literal type="number" pos:line="9705" pos:column="105">0</lit:literal></expr>;
        
        <expr pos:line="9707" pos:column="9">virtual <comment type="block" pos:line="9707" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9707" pos:column="81">HRESULT</name> <name pos:line="9707" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9707" pos:column="107">get_Parent</name><argument_list pos:line="9707" pos:column="117">( 
            <comment type="block" pos:line="9708" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9708" pos:column="33">__RPC__deref_out_opt Transport **Transport</argument>)</argument_list></macro> <op:operator pos:line="9708" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="9708" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="9710" pos:column="9">virtual <comment type="block" pos:line="9710" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9710" pos:column="81">HRESULT</name> <name pos:line="9710" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9710" pos:column="107">get_Collection</name><argument_list pos:line="9710" pos:column="121">( 
            <comment type="block" pos:line="9711" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9711" pos:column="33">__RPC__deref_out_opt Engines **Engines</argument>)</argument_list></macro> <op:operator pos:line="9711" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="9711" pos:column="75">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="9715" pos:column="1">#<cpp:directive pos:line="9715" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="9715" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="9717" pos:column="5">typedef <type><struct pos:line="9717" pos:column="13">struct <name pos:line="9717" pos:column="20">EngineVtbl</name>
    <block pos:line="9718" pos:column="5">{<public type="default" pos:line="9718" pos:column="6">
        <function_decl><type><name pos:line="9719" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="9721" pos:column="9">HRESULT</name></type> ( <name pos:line="9721" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9721" pos:column="37">*</type:modifier><name pos:line="9721" pos:column="38">QueryInterface</name> )<parameter_list pos:line="9721" pos:column="54">( 
            <param><decl><type><name pos:line="9722" pos:column="13">Engine</name> <type:modifier pos:line="9722" pos:column="20">*</type:modifier></type> <name pos:line="9722" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="9723" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9723" pos:column="24">__RPC__in</name> <name pos:line="9723" pos:column="34">REFIID</name></type> <name pos:line="9723" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="9724" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="9725" pos:column="13">__RPC__deref_out</name>  <name pos:line="9725" pos:column="31">void</name> <type:modifier pos:line="9725" pos:column="36">*</type:modifier><type:modifier pos:line="9725" pos:column="37">*</type:modifier></type><name pos:line="9725" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9727" pos:column="9">ULONG</name></type> ( <name pos:line="9727" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9727" pos:column="35">*</type:modifier><name pos:line="9727" pos:column="36">AddRef</name> )<parameter_list pos:line="9727" pos:column="44">( 
            <param><decl><type><name pos:line="9728" pos:column="13">Engine</name> <type:modifier pos:line="9728" pos:column="20">*</type:modifier></type> <name pos:line="9728" pos:column="22">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9730" pos:column="9">ULONG</name></type> ( <name pos:line="9730" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9730" pos:column="35">*</type:modifier><name pos:line="9730" pos:column="36">Release</name> )<parameter_list pos:line="9730" pos:column="45">( 
            <param><decl><type><name pos:line="9731" pos:column="13">Engine</name> <type:modifier pos:line="9731" pos:column="20">*</type:modifier></type> <name pos:line="9731" pos:column="22">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9733" pos:column="9">HRESULT</name></type> ( <name pos:line="9733" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9733" pos:column="37">*</type:modifier><name pos:line="9733" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="9733" pos:column="56">( 
            <param><decl><type><name pos:line="9734" pos:column="13">Engine</name> <type:modifier pos:line="9734" pos:column="20">*</type:modifier></type> <name pos:line="9734" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="9735" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9735" pos:column="25">__RPC__out</name> <name pos:line="9735" pos:column="36">UINT</name> <type:modifier pos:line="9735" pos:column="41">*</type:modifier></type><name pos:line="9735" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9737" pos:column="9">HRESULT</name></type> ( <name pos:line="9737" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9737" pos:column="37">*</type:modifier><name pos:line="9737" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="9737" pos:column="51">( 
            <param><decl><type><name pos:line="9738" pos:column="13">Engine</name> <type:modifier pos:line="9738" pos:column="20">*</type:modifier></type> <name pos:line="9738" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="9739" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9739" pos:column="24">UINT</name></type> <name pos:line="9739" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="9740" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9740" pos:column="24">LCID</name></type> <name pos:line="9740" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="9741" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9741" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9741" pos:column="46">ITypeInfo</name> <type:modifier pos:line="9741" pos:column="56">*</type:modifier><type:modifier pos:line="9741" pos:column="57">*</type:modifier></type><name pos:line="9741" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9743" pos:column="9">HRESULT</name> <argument_list pos:line="9743" pos:column="17">( <argument pos:line="9743" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="9743" pos:column="53">(</op:operator> 
            <name pos:line="9744" pos:column="13">Engine</name> <op:operator pos:line="9744" pos:column="20">*</op:operator> <name pos:line="9744" pos:column="22">This</name><op:operator pos:line="9744" pos:column="26">,</op:operator>
            <comment type="block" pos:line="9745" pos:column="13">/* [in] */</comment> <name pos:line="9745" pos:column="24">__RPC__in</name> <name pos:line="9745" pos:column="34">REFIID</name> <name pos:line="9745" pos:column="41">riid</name><op:operator pos:line="9745" pos:column="45">,</op:operator>
            <comment type="block" pos:line="9746" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="9746" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="9746" pos:column="54">(<argument pos:line="9746" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="9746" pos:column="63">LPOLESTR</name> <op:operator pos:line="9746" pos:column="72">*</op:operator><name pos:line="9746" pos:column="73">rgszNames</name><op:operator pos:line="9746" pos:column="82">,</op:operator>
            <comment type="block" pos:line="9747" pos:column="13">/* [range][in] */</comment> <name pos:line="9747" pos:column="31">UINT</name> <name pos:line="9747" pos:column="36">cNames</name><op:operator pos:line="9747" pos:column="42">,</op:operator>
            <comment type="block" pos:line="9748" pos:column="13">/* [in] */</comment> <name pos:line="9748" pos:column="24">LCID</name> <name pos:line="9748" pos:column="29">lcid</name><op:operator pos:line="9748" pos:column="33">,</op:operator>
            <comment type="block" pos:line="9749" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="9749" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="9749" pos:column="56">(<argument pos:line="9749" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="9749" pos:column="65">DISPID</name> <op:operator pos:line="9749" pos:column="72">*</op:operator><name pos:line="9749" pos:column="73">rgDispId</name><op:operator pos:line="9749" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="9751" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="9751" pos:column="23">HRESULT</name></type> ( <name pos:line="9751" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="9751" pos:column="51">*</type:modifier><name pos:line="9751" pos:column="52">Invoke</name> )<parameter_list pos:line="9751" pos:column="60">( 
            <param><decl><type><name pos:line="9752" pos:column="13">Engine</name> <type:modifier pos:line="9752" pos:column="20">*</type:modifier></type> <name pos:line="9752" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="9753" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9753" pos:column="24">DISPID</name></type> <name pos:line="9753" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="9754" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9754" pos:column="24">REFIID</name></type> <name pos:line="9754" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="9755" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9755" pos:column="24">LCID</name></type> <name pos:line="9755" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="9756" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9756" pos:column="24">WORD</name></type> <name pos:line="9756" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="9757" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="9757" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="9757" pos:column="40">*</type:modifier></type><name pos:line="9757" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="9758" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9758" pos:column="25">VARIANT</name> <type:modifier pos:line="9758" pos:column="33">*</type:modifier></type><name pos:line="9758" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="9759" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9759" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="9759" pos:column="35">*</type:modifier></type><name pos:line="9759" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="9760" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9760" pos:column="25">UINT</name> <type:modifier pos:line="9760" pos:column="30">*</type:modifier></type><name pos:line="9760" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9762" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9762" pos:column="73">HRESULT</name></type> ( <name pos:line="9762" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9762" pos:column="101">*</type:modifier><name pos:line="9762" pos:column="102">get_Name</name> )<parameter_list pos:line="9762" pos:column="112">( 
            <param><decl><type><name pos:line="9763" pos:column="13">Engine</name> <type:modifier pos:line="9763" pos:column="20">*</type:modifier></type> <name pos:line="9763" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="9764" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9764" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9764" pos:column="54">BSTR</name> <type:modifier pos:line="9764" pos:column="59">*</type:modifier></type><name pos:line="9764" pos:column="60">Name</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9766" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9766" pos:column="73">HRESULT</name></type> ( <name pos:line="9766" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9766" pos:column="101">*</type:modifier><name pos:line="9766" pos:column="102">get_ID</name> )<parameter_list pos:line="9766" pos:column="110">( 
            <param><decl><type><name pos:line="9767" pos:column="13">Engine</name> <type:modifier pos:line="9767" pos:column="20">*</type:modifier></type> <name pos:line="9767" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="9768" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9768" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9768" pos:column="54">BSTR</name> <type:modifier pos:line="9768" pos:column="59">*</type:modifier></type><name pos:line="9768" pos:column="60">ID</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9770" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9770" pos:column="73">HRESULT</name></type> ( <name pos:line="9770" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9770" pos:column="101">*</type:modifier><name pos:line="9770" pos:column="102">get_AttachResult</name> )<parameter_list pos:line="9770" pos:column="120">( 
            <param><decl><type><name pos:line="9771" pos:column="13">Engine</name> <type:modifier pos:line="9771" pos:column="20">*</type:modifier></type> <name pos:line="9771" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="9772" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9772" pos:column="33">__RPC__out</name> <name pos:line="9772" pos:column="44">HRESULT</name> <type:modifier pos:line="9772" pos:column="52">*</type:modifier></type><name pos:line="9772" pos:column="53">Result</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9774" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9774" pos:column="73">HRESULT</name></type> ( <name pos:line="9774" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9774" pos:column="101">*</type:modifier><name pos:line="9774" pos:column="102">get_DTE</name> )<parameter_list pos:line="9774" pos:column="111">( 
            <param><decl><type><name pos:line="9775" pos:column="13">Engine</name> <type:modifier pos:line="9775" pos:column="20">*</type:modifier></type> <name pos:line="9775" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="9776" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9776" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="9776" pos:column="54">/* external definition not present */</comment> <name pos:line="9776" pos:column="92">DTE</name> <type:modifier pos:line="9776" pos:column="96">*</type:modifier><type:modifier pos:line="9776" pos:column="97">*</type:modifier></type><name pos:line="9776" pos:column="98">DTE</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9778" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9778" pos:column="73">HRESULT</name></type> ( <name pos:line="9778" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9778" pos:column="101">*</type:modifier><name pos:line="9778" pos:column="102">get_Parent</name> )<parameter_list pos:line="9778" pos:column="114">( 
            <param><decl><type><name pos:line="9779" pos:column="13">Engine</name> <type:modifier pos:line="9779" pos:column="20">*</type:modifier></type> <name pos:line="9779" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="9780" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9780" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9780" pos:column="54">Transport</name> <type:modifier pos:line="9780" pos:column="64">*</type:modifier><type:modifier pos:line="9780" pos:column="65">*</type:modifier></type><name pos:line="9780" pos:column="66">Transport</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9782" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9782" pos:column="73">HRESULT</name></type> ( <name pos:line="9782" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9782" pos:column="101">*</type:modifier><name pos:line="9782" pos:column="102">get_Collection</name> )<parameter_list pos:line="9782" pos:column="118">( 
            <param><decl><type><name pos:line="9783" pos:column="13">Engine</name> <type:modifier pos:line="9783" pos:column="20">*</type:modifier></type> <name pos:line="9783" pos:column="22">This</name></decl></param>,
            <comment type="block" pos:line="9784" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9784" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9784" pos:column="54">Engines</name> <type:modifier pos:line="9784" pos:column="62">*</type:modifier><type:modifier pos:line="9784" pos:column="63">*</type:modifier></type><name pos:line="9784" pos:column="64">Engines</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9786" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="9787" pos:column="7">EngineVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="9789" pos:column="5">interface</name></type> <name pos:line="9789" pos:column="15">Engine</name>
    <argument_list pos:line="9790" pos:column="5">{
        <argument><expr><name pos:line="9791" pos:column="9">CONST_VTBL</name> struct <name pos:line="9791" pos:column="27">EngineVtbl</name> <op:operator pos:line="9791" pos:column="38">*</op:operator><name pos:line="9791" pos:column="39">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="9796" pos:column="1">#<cpp:directive pos:line="9796" pos:column="2">ifdef</cpp:directive> <name pos:line="9796" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="9799" pos:column="1">#<cpp:directive pos:line="9799" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9799" pos:column="9">Engine_QueryInterface</name><parameter_list pos:line="9799" pos:column="30">(<param><type><name pos:line="9799" pos:column="31">This</name></type></param>,<param><type><name pos:line="9799" pos:column="36">riid</name></type></param>,<param><type><name pos:line="9799" pos:column="41">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9800" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="9802" pos:column="1">#<cpp:directive pos:line="9802" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9802" pos:column="9">Engine_AddRef</name><parameter_list pos:line="9802" pos:column="22">(<param><type><name pos:line="9802" pos:column="23">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9803" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9805" pos:column="1">#<cpp:directive pos:line="9805" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9805" pos:column="9">Engine_Release</name><parameter_list pos:line="9805" pos:column="23">(<param><type><name pos:line="9805" pos:column="24">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9806" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="9809" pos:column="1">#<cpp:directive pos:line="9809" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9809" pos:column="9">Engine_GetTypeInfoCount</name><parameter_list pos:line="9809" pos:column="32">(<param><type><name pos:line="9809" pos:column="33">This</name></type></param>,<param><type><name pos:line="9809" pos:column="38">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9810" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="9812" pos:column="1">#<cpp:directive pos:line="9812" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9812" pos:column="9">Engine_GetTypeInfo</name><parameter_list pos:line="9812" pos:column="27">(<param><type><name pos:line="9812" pos:column="28">This</name></type></param>,<param><type><name pos:line="9812" pos:column="33">iTInfo</name></type></param>,<param><type><name pos:line="9812" pos:column="40">lcid</name></type></param>,<param><type><name pos:line="9812" pos:column="45">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9813" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="9815" pos:column="1">#<cpp:directive pos:line="9815" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9815" pos:column="9">Engine_GetIDsOfNames</name><parameter_list pos:line="9815" pos:column="29">(<param><type><name pos:line="9815" pos:column="30">This</name></type></param>,<param><type><name pos:line="9815" pos:column="35">riid</name></type></param>,<param><type><name pos:line="9815" pos:column="40">rgszNames</name></type></param>,<param><type><name pos:line="9815" pos:column="50">cNames</name></type></param>,<param><type><name pos:line="9815" pos:column="57">lcid</name></type></param>,<param><type><name pos:line="9815" pos:column="62">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9816" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="9818" pos:column="1">#<cpp:directive pos:line="9818" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9818" pos:column="9">Engine_Invoke</name><parameter_list pos:line="9818" pos:column="22">(<param><type><name pos:line="9818" pos:column="23">This</name></type></param>,<param><type><name pos:line="9818" pos:column="28">dispIdMember</name></type></param>,<param><type><name pos:line="9818" pos:column="41">riid</name></type></param>,<param><type><name pos:line="9818" pos:column="46">lcid</name></type></param>,<param><type><name pos:line="9818" pos:column="51">wFlags</name></type></param>,<param><type><name pos:line="9818" pos:column="58">pDispParams</name></type></param>,<param><type><name pos:line="9818" pos:column="70">pVarResult</name></type></param>,<param><type><name pos:line="9818" pos:column="81">pExcepInfo</name></type></param>,<param><type><name pos:line="9818" pos:column="92">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9819" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="9822" pos:column="1">#<cpp:directive pos:line="9822" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9822" pos:column="9">Engine_get_Name</name><parameter_list pos:line="9822" pos:column="24">(<param><type><name pos:line="9822" pos:column="25">This</name></type></param>,<param><type><name pos:line="9822" pos:column="30">Name</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9823" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,Name) )</cpp:value></cpp:define> 

<cpp:define pos:line="9825" pos:column="1">#<cpp:directive pos:line="9825" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9825" pos:column="9">Engine_get_ID</name><parameter_list pos:line="9825" pos:column="22">(<param><type><name pos:line="9825" pos:column="23">This</name></type></param>,<param><type><name pos:line="9825" pos:column="28">ID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9826" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ID(This,ID) )</cpp:value></cpp:define> 

<cpp:define pos:line="9828" pos:column="1">#<cpp:directive pos:line="9828" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9828" pos:column="9">Engine_get_AttachResult</name><parameter_list pos:line="9828" pos:column="32">(<param><type><name pos:line="9828" pos:column="33">This</name></type></param>,<param><type><name pos:line="9828" pos:column="38">Result</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9829" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_AttachResult(This,Result) )</cpp:value></cpp:define> 

<cpp:define pos:line="9831" pos:column="1">#<cpp:directive pos:line="9831" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9831" pos:column="9">Engine_get_DTE</name><parameter_list pos:line="9831" pos:column="23">(<param><type><name pos:line="9831" pos:column="24">This</name></type></param>,<param><type><name pos:line="9831" pos:column="29">DTE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9832" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTE) )</cpp:value></cpp:define> 

<cpp:define pos:line="9834" pos:column="1">#<cpp:directive pos:line="9834" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9834" pos:column="9">Engine_get_Parent</name><parameter_list pos:line="9834" pos:column="26">(<param><type><name pos:line="9834" pos:column="27">This</name></type></param>,<param><type><name pos:line="9834" pos:column="32">Transport</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9835" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,Transport) )</cpp:value></cpp:define> 

<cpp:define pos:line="9837" pos:column="1">#<cpp:directive pos:line="9837" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9837" pos:column="9">Engine_get_Collection</name><parameter_list pos:line="9837" pos:column="30">(<param><type><name pos:line="9837" pos:column="31">This</name></type></param>,<param><type><name pos:line="9837" pos:column="36">Engines</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9838" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,Engines) )</cpp:value></cpp:define> 

<cpp:endif pos:line="9840" pos:column="1">#<cpp:directive pos:line="9840" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="9840" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="9843" pos:column="1">#<cpp:directive pos:line="9843" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9843" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="9848" pos:column="1">#<cpp:directive pos:line="9848" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="9848" pos:column="9">/* __Engine_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="9851" pos:column="1">#<cpp:directive pos:line="9851" pos:column="2">ifndef</cpp:directive> <name pos:line="9851" pos:column="9">__Transport_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="9852" pos:column="1">#<cpp:directive pos:line="9852" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9852" pos:column="9">__Transport_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="9854" pos:column="1">/* interface Transport */</comment>
<comment type="block" pos:line="9855" pos:column="1">/* [object][version][helpstringcontext][helpstring][helpcontext][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="9858" pos:column="1">EXTERN_C</name> <specifier pos:line="9858" pos:column="10">const</specifier> <name pos:line="9858" pos:column="16">IID</name></type> <name pos:line="9858" pos:column="20">IID_Transport</name></decl>;</decl_stmt>

<cpp:if pos:line="9860" pos:column="1">#<cpp:directive pos:line="9860" pos:column="2">if</cpp:directive> <expr><call><name pos:line="9860" pos:column="5">defined</name><argument_list pos:line="9860" pos:column="12">(<argument><expr><name pos:line="9860" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="9860" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="9860" pos:column="29">!</op:operator><call><name pos:line="9860" pos:column="30">defined</name><argument_list pos:line="9860" pos:column="37">(<argument><expr><name pos:line="9860" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="9862" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="9862" pos:column="19">(<argument pos:line="9862" pos:column="20">"C977EAED-9E6C-4122-9D28-9D5EAE2BDC33"</argument>)</argument_list></macro>
    <label><name pos:line="9863" pos:column="5">Transport</name> :</label> <expr_stmt><expr pos:line="9863" pos:column="17">public <name pos:line="9863" pos:column="24">IDispatch</name>
    <block pos:line="9864" pos:column="5">{
    <expr pos:line="9865" pos:column="5">public<op:operator pos:line="9865" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="9866" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9866" pos:column="81">HRESULT</name> <name pos:line="9866" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9866" pos:column="107">get_Name</name><argument_list pos:line="9866" pos:column="115">( 
            <comment type="block" pos:line="9867" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9867" pos:column="33">__RPC__deref_out_opt BSTR *Name</argument>)</argument_list></macro> <op:operator pos:line="9867" pos:column="66">=</op:operator> <lit:literal type="number" pos:line="9867" pos:column="68">0</lit:literal></expr>;
        
        <expr pos:line="9869" pos:column="9">virtual <comment type="block" pos:line="9869" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9869" pos:column="81">HRESULT</name> <name pos:line="9869" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9869" pos:column="107">get_ID</name><argument_list pos:line="9869" pos:column="113">( 
            <comment type="block" pos:line="9870" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9870" pos:column="33">__RPC__deref_out_opt BSTR *ID</argument>)</argument_list></macro> <op:operator pos:line="9870" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="9870" pos:column="66">0</lit:literal></expr>;
        
        <expr pos:line="9872" pos:column="9">virtual <comment type="block" pos:line="9872" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9872" pos:column="81">HRESULT</name> <name pos:line="9872" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9872" pos:column="107">get_Engines</name><argument_list pos:line="9872" pos:column="118">( 
            <comment type="block" pos:line="9873" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9873" pos:column="33">__RPC__deref_out_opt Engines **Engines</argument>)</argument_list></macro> <op:operator pos:line="9873" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="9873" pos:column="75">0</lit:literal></expr>;
        
        <expr pos:line="9875" pos:column="9">virtual <comment type="block" pos:line="9875" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9875" pos:column="81">HRESULT</name> <name pos:line="9875" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9875" pos:column="107">get_DTE</name><argument_list pos:line="9875" pos:column="114">( 
            <comment type="block" pos:line="9876" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9876" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="9876" pos:column="54">/* external definition not present */</comment> DTE **DTE</argument>)</argument_list></macro> <op:operator pos:line="9876" pos:column="103">=</op:operator> <lit:literal type="number" pos:line="9876" pos:column="105">0</lit:literal></expr>;
        
        <expr pos:line="9878" pos:column="9">virtual <comment type="block" pos:line="9878" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9878" pos:column="81">HRESULT</name> <name pos:line="9878" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9878" pos:column="107">get_Parent</name><argument_list pos:line="9878" pos:column="117">( 
            <comment type="block" pos:line="9879" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9879" pos:column="33">__RPC__deref_out_opt Debugger2 **Debugger</argument>)</argument_list></macro> <op:operator pos:line="9879" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="9879" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="9881" pos:column="9">virtual <comment type="block" pos:line="9881" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="9881" pos:column="81">HRESULT</name> <name pos:line="9881" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="9881" pos:column="107">get_Collection</name><argument_list pos:line="9881" pos:column="121">( 
            <comment type="block" pos:line="9882" pos:column="13">/* [retval][out] */</comment> <argument pos:line="9882" pos:column="33">__RPC__deref_out_opt Transports **Transports</argument>)</argument_list></macro> <op:operator pos:line="9882" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="9882" pos:column="81">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="9886" pos:column="1">#<cpp:directive pos:line="9886" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="9886" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="9888" pos:column="5">typedef <type><struct pos:line="9888" pos:column="13">struct <name pos:line="9888" pos:column="20">TransportVtbl</name>
    <block pos:line="9889" pos:column="5">{<public type="default" pos:line="9889" pos:column="6">
        <function_decl><type><name pos:line="9890" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="9892" pos:column="9">HRESULT</name></type> ( <name pos:line="9892" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9892" pos:column="37">*</type:modifier><name pos:line="9892" pos:column="38">QueryInterface</name> )<parameter_list pos:line="9892" pos:column="54">( 
            <param><decl><type><name pos:line="9893" pos:column="13">Transport</name> <type:modifier pos:line="9893" pos:column="23">*</type:modifier></type> <name pos:line="9893" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="9894" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9894" pos:column="24">__RPC__in</name> <name pos:line="9894" pos:column="34">REFIID</name></type> <name pos:line="9894" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="9895" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="9896" pos:column="13">__RPC__deref_out</name>  <name pos:line="9896" pos:column="31">void</name> <type:modifier pos:line="9896" pos:column="36">*</type:modifier><type:modifier pos:line="9896" pos:column="37">*</type:modifier></type><name pos:line="9896" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9898" pos:column="9">ULONG</name></type> ( <name pos:line="9898" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9898" pos:column="35">*</type:modifier><name pos:line="9898" pos:column="36">AddRef</name> )<parameter_list pos:line="9898" pos:column="44">( 
            <param><decl><type><name pos:line="9899" pos:column="13">Transport</name> <type:modifier pos:line="9899" pos:column="23">*</type:modifier></type> <name pos:line="9899" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9901" pos:column="9">ULONG</name></type> ( <name pos:line="9901" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="9901" pos:column="35">*</type:modifier><name pos:line="9901" pos:column="36">Release</name> )<parameter_list pos:line="9901" pos:column="45">( 
            <param><decl><type><name pos:line="9902" pos:column="13">Transport</name> <type:modifier pos:line="9902" pos:column="23">*</type:modifier></type> <name pos:line="9902" pos:column="25">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9904" pos:column="9">HRESULT</name></type> ( <name pos:line="9904" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9904" pos:column="37">*</type:modifier><name pos:line="9904" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="9904" pos:column="56">( 
            <param><decl><type><name pos:line="9905" pos:column="13">Transport</name> <type:modifier pos:line="9905" pos:column="23">*</type:modifier></type> <name pos:line="9905" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="9906" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9906" pos:column="25">__RPC__out</name> <name pos:line="9906" pos:column="36">UINT</name> <type:modifier pos:line="9906" pos:column="41">*</type:modifier></type><name pos:line="9906" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="9908" pos:column="9">HRESULT</name></type> ( <name pos:line="9908" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="9908" pos:column="37">*</type:modifier><name pos:line="9908" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="9908" pos:column="51">( 
            <param><decl><type><name pos:line="9909" pos:column="13">Transport</name> <type:modifier pos:line="9909" pos:column="23">*</type:modifier></type> <name pos:line="9909" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="9910" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9910" pos:column="24">UINT</name></type> <name pos:line="9910" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="9911" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9911" pos:column="24">LCID</name></type> <name pos:line="9911" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="9912" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9912" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="9912" pos:column="46">ITypeInfo</name> <type:modifier pos:line="9912" pos:column="56">*</type:modifier><type:modifier pos:line="9912" pos:column="57">*</type:modifier></type><name pos:line="9912" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9914" pos:column="9">HRESULT</name> <argument_list pos:line="9914" pos:column="17">( <argument pos:line="9914" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="9914" pos:column="53">(</op:operator> 
            <name pos:line="9915" pos:column="13">Transport</name> <op:operator pos:line="9915" pos:column="23">*</op:operator> <name pos:line="9915" pos:column="25">This</name><op:operator pos:line="9915" pos:column="29">,</op:operator>
            <comment type="block" pos:line="9916" pos:column="13">/* [in] */</comment> <name pos:line="9916" pos:column="24">__RPC__in</name> <name pos:line="9916" pos:column="34">REFIID</name> <name pos:line="9916" pos:column="41">riid</name><op:operator pos:line="9916" pos:column="45">,</op:operator>
            <comment type="block" pos:line="9917" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="9917" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="9917" pos:column="54">(<argument pos:line="9917" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="9917" pos:column="63">LPOLESTR</name> <op:operator pos:line="9917" pos:column="72">*</op:operator><name pos:line="9917" pos:column="73">rgszNames</name><op:operator pos:line="9917" pos:column="82">,</op:operator>
            <comment type="block" pos:line="9918" pos:column="13">/* [range][in] */</comment> <name pos:line="9918" pos:column="31">UINT</name> <name pos:line="9918" pos:column="36">cNames</name><op:operator pos:line="9918" pos:column="42">,</op:operator>
            <comment type="block" pos:line="9919" pos:column="13">/* [in] */</comment> <name pos:line="9919" pos:column="24">LCID</name> <name pos:line="9919" pos:column="29">lcid</name><op:operator pos:line="9919" pos:column="33">,</op:operator>
            <comment type="block" pos:line="9920" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="9920" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="9920" pos:column="56">(<argument pos:line="9920" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="9920" pos:column="65">DISPID</name> <op:operator pos:line="9920" pos:column="72">*</op:operator><name pos:line="9920" pos:column="73">rgDispId</name><op:operator pos:line="9920" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="9922" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="9922" pos:column="23">HRESULT</name></type> ( <name pos:line="9922" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="9922" pos:column="51">*</type:modifier><name pos:line="9922" pos:column="52">Invoke</name> )<parameter_list pos:line="9922" pos:column="60">( 
            <param><decl><type><name pos:line="9923" pos:column="13">Transport</name> <type:modifier pos:line="9923" pos:column="23">*</type:modifier></type> <name pos:line="9923" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="9924" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9924" pos:column="24">DISPID</name></type> <name pos:line="9924" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="9925" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9925" pos:column="24">REFIID</name></type> <name pos:line="9925" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="9926" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9926" pos:column="24">LCID</name></type> <name pos:line="9926" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="9927" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="9927" pos:column="24">WORD</name></type> <name pos:line="9927" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="9928" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="9928" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="9928" pos:column="40">*</type:modifier></type><name pos:line="9928" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="9929" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9929" pos:column="25">VARIANT</name> <type:modifier pos:line="9929" pos:column="33">*</type:modifier></type><name pos:line="9929" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="9930" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9930" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="9930" pos:column="35">*</type:modifier></type><name pos:line="9930" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="9931" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="9931" pos:column="25">UINT</name> <type:modifier pos:line="9931" pos:column="30">*</type:modifier></type><name pos:line="9931" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9933" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9933" pos:column="73">HRESULT</name></type> ( <name pos:line="9933" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9933" pos:column="101">*</type:modifier><name pos:line="9933" pos:column="102">get_Name</name> )<parameter_list pos:line="9933" pos:column="112">( 
            <param><decl><type><name pos:line="9934" pos:column="13">Transport</name> <type:modifier pos:line="9934" pos:column="23">*</type:modifier></type> <name pos:line="9934" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="9935" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9935" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9935" pos:column="54">BSTR</name> <type:modifier pos:line="9935" pos:column="59">*</type:modifier></type><name pos:line="9935" pos:column="60">Name</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9937" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9937" pos:column="73">HRESULT</name></type> ( <name pos:line="9937" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9937" pos:column="101">*</type:modifier><name pos:line="9937" pos:column="102">get_ID</name> )<parameter_list pos:line="9937" pos:column="110">( 
            <param><decl><type><name pos:line="9938" pos:column="13">Transport</name> <type:modifier pos:line="9938" pos:column="23">*</type:modifier></type> <name pos:line="9938" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="9939" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9939" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9939" pos:column="54">BSTR</name> <type:modifier pos:line="9939" pos:column="59">*</type:modifier></type><name pos:line="9939" pos:column="60">ID</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9941" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9941" pos:column="73">HRESULT</name></type> ( <name pos:line="9941" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9941" pos:column="101">*</type:modifier><name pos:line="9941" pos:column="102">get_Engines</name> )<parameter_list pos:line="9941" pos:column="115">( 
            <param><decl><type><name pos:line="9942" pos:column="13">Transport</name> <type:modifier pos:line="9942" pos:column="23">*</type:modifier></type> <name pos:line="9942" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="9943" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9943" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9943" pos:column="54">Engines</name> <type:modifier pos:line="9943" pos:column="62">*</type:modifier><type:modifier pos:line="9943" pos:column="63">*</type:modifier></type><name pos:line="9943" pos:column="64">Engines</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9945" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9945" pos:column="73">HRESULT</name></type> ( <name pos:line="9945" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9945" pos:column="101">*</type:modifier><name pos:line="9945" pos:column="102">get_DTE</name> )<parameter_list pos:line="9945" pos:column="111">( 
            <param><decl><type><name pos:line="9946" pos:column="13">Transport</name> <type:modifier pos:line="9946" pos:column="23">*</type:modifier></type> <name pos:line="9946" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="9947" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9947" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="9947" pos:column="54">/* external definition not present */</comment> <name pos:line="9947" pos:column="92">DTE</name> <type:modifier pos:line="9947" pos:column="96">*</type:modifier><type:modifier pos:line="9947" pos:column="97">*</type:modifier></type><name pos:line="9947" pos:column="98">DTE</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9949" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9949" pos:column="73">HRESULT</name></type> ( <name pos:line="9949" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9949" pos:column="101">*</type:modifier><name pos:line="9949" pos:column="102">get_Parent</name> )<parameter_list pos:line="9949" pos:column="114">( 
            <param><decl><type><name pos:line="9950" pos:column="13">Transport</name> <type:modifier pos:line="9950" pos:column="23">*</type:modifier></type> <name pos:line="9950" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="9951" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9951" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9951" pos:column="54">Debugger2</name> <type:modifier pos:line="9951" pos:column="64">*</type:modifier><type:modifier pos:line="9951" pos:column="65">*</type:modifier></type><name pos:line="9951" pos:column="66">Debugger</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="9953" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="9953" pos:column="73">HRESULT</name></type> ( <name pos:line="9953" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="9953" pos:column="101">*</type:modifier><name pos:line="9953" pos:column="102">get_Collection</name> )<parameter_list pos:line="9953" pos:column="118">( 
            <param><decl><type><name pos:line="9954" pos:column="13">Transport</name> <type:modifier pos:line="9954" pos:column="23">*</type:modifier></type> <name pos:line="9954" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="9955" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="9955" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="9955" pos:column="54">Transports</name> <type:modifier pos:line="9955" pos:column="65">*</type:modifier><type:modifier pos:line="9955" pos:column="66">*</type:modifier></type><name pos:line="9955" pos:column="67">Transports</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="9957" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="9958" pos:column="7">TransportVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="9960" pos:column="5">interface</name></type> <name pos:line="9960" pos:column="15">Transport</name>
    <argument_list pos:line="9961" pos:column="5">{
        <argument><expr><name pos:line="9962" pos:column="9">CONST_VTBL</name> struct <name pos:line="9962" pos:column="27">TransportVtbl</name> <op:operator pos:line="9962" pos:column="41">*</op:operator><name pos:line="9962" pos:column="42">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="9967" pos:column="1">#<cpp:directive pos:line="9967" pos:column="2">ifdef</cpp:directive> <name pos:line="9967" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="9970" pos:column="1">#<cpp:directive pos:line="9970" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9970" pos:column="9">Transport_QueryInterface</name><parameter_list pos:line="9970" pos:column="33">(<param><type><name pos:line="9970" pos:column="34">This</name></type></param>,<param><type><name pos:line="9970" pos:column="39">riid</name></type></param>,<param><type><name pos:line="9970" pos:column="44">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9971" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="9973" pos:column="1">#<cpp:directive pos:line="9973" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9973" pos:column="9">Transport_AddRef</name><parameter_list pos:line="9973" pos:column="25">(<param><type><name pos:line="9973" pos:column="26">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9974" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="9976" pos:column="1">#<cpp:directive pos:line="9976" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9976" pos:column="9">Transport_Release</name><parameter_list pos:line="9976" pos:column="26">(<param><type><name pos:line="9976" pos:column="27">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9977" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="9980" pos:column="1">#<cpp:directive pos:line="9980" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9980" pos:column="9">Transport_GetTypeInfoCount</name><parameter_list pos:line="9980" pos:column="35">(<param><type><name pos:line="9980" pos:column="36">This</name></type></param>,<param><type><name pos:line="9980" pos:column="41">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9981" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="9983" pos:column="1">#<cpp:directive pos:line="9983" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9983" pos:column="9">Transport_GetTypeInfo</name><parameter_list pos:line="9983" pos:column="30">(<param><type><name pos:line="9983" pos:column="31">This</name></type></param>,<param><type><name pos:line="9983" pos:column="36">iTInfo</name></type></param>,<param><type><name pos:line="9983" pos:column="43">lcid</name></type></param>,<param><type><name pos:line="9983" pos:column="48">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9984" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="9986" pos:column="1">#<cpp:directive pos:line="9986" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9986" pos:column="9">Transport_GetIDsOfNames</name><parameter_list pos:line="9986" pos:column="32">(<param><type><name pos:line="9986" pos:column="33">This</name></type></param>,<param><type><name pos:line="9986" pos:column="38">riid</name></type></param>,<param><type><name pos:line="9986" pos:column="43">rgszNames</name></type></param>,<param><type><name pos:line="9986" pos:column="53">cNames</name></type></param>,<param><type><name pos:line="9986" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="9986" pos:column="65">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9987" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="9989" pos:column="1">#<cpp:directive pos:line="9989" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9989" pos:column="9">Transport_Invoke</name><parameter_list pos:line="9989" pos:column="25">(<param><type><name pos:line="9989" pos:column="26">This</name></type></param>,<param><type><name pos:line="9989" pos:column="31">dispIdMember</name></type></param>,<param><type><name pos:line="9989" pos:column="44">riid</name></type></param>,<param><type><name pos:line="9989" pos:column="49">lcid</name></type></param>,<param><type><name pos:line="9989" pos:column="54">wFlags</name></type></param>,<param><type><name pos:line="9989" pos:column="61">pDispParams</name></type></param>,<param><type><name pos:line="9989" pos:column="73">pVarResult</name></type></param>,<param><type><name pos:line="9989" pos:column="84">pExcepInfo</name></type></param>,<param><type><name pos:line="9989" pos:column="95">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9990" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="9993" pos:column="1">#<cpp:directive pos:line="9993" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9993" pos:column="9">Transport_get_Name</name><parameter_list pos:line="9993" pos:column="27">(<param><type><name pos:line="9993" pos:column="28">This</name></type></param>,<param><type><name pos:line="9993" pos:column="33">Name</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9994" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,Name) )</cpp:value></cpp:define> 

<cpp:define pos:line="9996" pos:column="1">#<cpp:directive pos:line="9996" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9996" pos:column="9">Transport_get_ID</name><parameter_list pos:line="9996" pos:column="25">(<param><type><name pos:line="9996" pos:column="26">This</name></type></param>,<param><type><name pos:line="9996" pos:column="31">ID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="9997" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ID(This,ID) )</cpp:value></cpp:define> 

<cpp:define pos:line="9999" pos:column="1">#<cpp:directive pos:line="9999" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9999" pos:column="9">Transport_get_Engines</name><parameter_list pos:line="9999" pos:column="30">(<param><type><name pos:line="9999" pos:column="31">This</name></type></param>,<param><type><name pos:line="9999" pos:column="36">Engines</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10000" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Engines(This,Engines) )</cpp:value></cpp:define> 

<cpp:define pos:line="10002" pos:column="1">#<cpp:directive pos:line="10002" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10002" pos:column="9">Transport_get_DTE</name><parameter_list pos:line="10002" pos:column="26">(<param><type><name pos:line="10002" pos:column="27">This</name></type></param>,<param><type><name pos:line="10002" pos:column="32">DTE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10003" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTE) )</cpp:value></cpp:define> 

<cpp:define pos:line="10005" pos:column="1">#<cpp:directive pos:line="10005" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10005" pos:column="9">Transport_get_Parent</name><parameter_list pos:line="10005" pos:column="29">(<param><type><name pos:line="10005" pos:column="30">This</name></type></param>,<param><type><name pos:line="10005" pos:column="35">Debugger</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10006" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,Debugger) )</cpp:value></cpp:define> 

<cpp:define pos:line="10008" pos:column="1">#<cpp:directive pos:line="10008" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10008" pos:column="9">Transport_get_Collection</name><parameter_list pos:line="10008" pos:column="33">(<param><type><name pos:line="10008" pos:column="34">This</name></type></param>,<param><type><name pos:line="10008" pos:column="39">Transports</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10009" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,Transports) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10011" pos:column="1">#<cpp:directive pos:line="10011" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10011" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10014" pos:column="1">#<cpp:directive pos:line="10014" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10014" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10019" pos:column="1">#<cpp:directive pos:line="10019" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10019" pos:column="9">/* __Transport_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10022" pos:column="1">#<cpp:directive pos:line="10022" pos:column="2">ifndef</cpp:directive> <name pos:line="10022" pos:column="9">__Engines_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10023" pos:column="1">#<cpp:directive pos:line="10023" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10023" pos:column="9">__Engines_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10025" pos:column="1">/* interface Engines */</comment>
<comment type="block" pos:line="10026" pos:column="1">/* [object][version][helpstringcontext][helpstring][helpcontext][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="10029" pos:column="1">EXTERN_C</name> <specifier pos:line="10029" pos:column="10">const</specifier> <name pos:line="10029" pos:column="16">IID</name></type> <name pos:line="10029" pos:column="20">IID_Engines</name></decl>;</decl_stmt>

<cpp:if pos:line="10031" pos:column="1">#<cpp:directive pos:line="10031" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10031" pos:column="5">defined</name><argument_list pos:line="10031" pos:column="12">(<argument><expr><name pos:line="10031" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10031" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10031" pos:column="29">!</op:operator><call><name pos:line="10031" pos:column="30">defined</name><argument_list pos:line="10031" pos:column="37">(<argument><expr><name pos:line="10031" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10033" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10033" pos:column="19">(<argument pos:line="10033" pos:column="20">"9F998C5E-549E-4c74-9FD8-B3A93D85A248"</argument>)</argument_list></macro>
    <label><name pos:line="10034" pos:column="5">Engines</name> :</label> <expr_stmt><expr pos:line="10034" pos:column="15">public <name pos:line="10034" pos:column="22">IDispatch</name>
    <block pos:line="10035" pos:column="5">{
    <expr pos:line="10036" pos:column="5">public<op:operator pos:line="10036" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="10037" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="10037" pos:column="72">HRESULT</name> <name pos:line="10037" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="10037" pos:column="98">Item</name><argument_list pos:line="10037" pos:column="102">( 
            <comment type="block" pos:line="10038" pos:column="13">/* [in] */</comment> <argument pos:line="10038" pos:column="24">VARIANT Index</argument>,
            <comment type="block" pos:line="10039" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10039" pos:column="33">__RPC__deref_out_opt Engine **Engine</argument>)</argument_list></macro> <op:operator pos:line="10039" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="10039" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="10041" pos:column="9">virtual <comment type="block" pos:line="10041" pos:column="17">/* [restricted][id] */</comment> <name pos:line="10041" pos:column="40">HRESULT</name> <name pos:line="10041" pos:column="48">STDMETHODCALLTYPE</name> <macro><name pos:line="10041" pos:column="66">_NewEnum</name><argument_list pos:line="10041" pos:column="74">( 
            <comment type="block" pos:line="10042" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10042" pos:column="33">__RPC__deref_out_opt IUnknown **Enumerator</argument>)</argument_list></macro> <op:operator pos:line="10042" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="10042" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="10044" pos:column="9">virtual <comment type="block" pos:line="10044" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="10044" pos:column="81">HRESULT</name> <name pos:line="10044" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="10044" pos:column="107">get_DTE</name><argument_list pos:line="10044" pos:column="114">( 
            <comment type="block" pos:line="10045" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10045" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="10045" pos:column="54">/* external definition not present */</comment> DTE **DTEObject</argument>)</argument_list></macro> <op:operator pos:line="10045" pos:column="109">=</op:operator> <lit:literal type="number" pos:line="10045" pos:column="111">0</lit:literal></expr>;
        
        <expr pos:line="10047" pos:column="9">virtual <comment type="block" pos:line="10047" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="10047" pos:column="81">HRESULT</name> <name pos:line="10047" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="10047" pos:column="107">get_Parent</name><argument_list pos:line="10047" pos:column="117">( 
            <comment type="block" pos:line="10048" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10048" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="10048" pos:column="54">/* external definition not present */</comment> Debugger **Debugger</argument>)</argument_list></macro> <op:operator pos:line="10048" pos:column="113">=</op:operator> <lit:literal type="number" pos:line="10048" pos:column="115">0</lit:literal></expr>;
        
        <expr pos:line="10050" pos:column="9">virtual <comment type="block" pos:line="10050" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="10050" pos:column="81">HRESULT</name> <name pos:line="10050" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="10050" pos:column="107">get_Count</name><argument_list pos:line="10050" pos:column="116">( 
            <comment type="block" pos:line="10051" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10051" pos:column="33">__RPC__out long *Count</argument>)</argument_list></macro> <op:operator pos:line="10051" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="10051" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10055" pos:column="1">#<cpp:directive pos:line="10055" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10055" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10057" pos:column="5">typedef <type><struct pos:line="10057" pos:column="13">struct <name pos:line="10057" pos:column="20">EnginesVtbl</name>
    <block pos:line="10058" pos:column="5">{<public type="default" pos:line="10058" pos:column="6">
        <function_decl><type><name pos:line="10059" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10061" pos:column="9">HRESULT</name></type> ( <name pos:line="10061" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10061" pos:column="37">*</type:modifier><name pos:line="10061" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10061" pos:column="54">( 
            <param><decl><type><name pos:line="10062" pos:column="13">Engines</name> <type:modifier pos:line="10062" pos:column="21">*</type:modifier></type> <name pos:line="10062" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="10063" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10063" pos:column="24">__RPC__in</name> <name pos:line="10063" pos:column="34">REFIID</name></type> <name pos:line="10063" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10064" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10065" pos:column="13">__RPC__deref_out</name>  <name pos:line="10065" pos:column="31">void</name> <type:modifier pos:line="10065" pos:column="36">*</type:modifier><type:modifier pos:line="10065" pos:column="37">*</type:modifier></type><name pos:line="10065" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10067" pos:column="9">ULONG</name></type> ( <name pos:line="10067" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10067" pos:column="35">*</type:modifier><name pos:line="10067" pos:column="36">AddRef</name> )<parameter_list pos:line="10067" pos:column="44">( 
            <param><decl><type><name pos:line="10068" pos:column="13">Engines</name> <type:modifier pos:line="10068" pos:column="21">*</type:modifier></type> <name pos:line="10068" pos:column="23">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10070" pos:column="9">ULONG</name></type> ( <name pos:line="10070" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10070" pos:column="35">*</type:modifier><name pos:line="10070" pos:column="36">Release</name> )<parameter_list pos:line="10070" pos:column="45">( 
            <param><decl><type><name pos:line="10071" pos:column="13">Engines</name> <type:modifier pos:line="10071" pos:column="21">*</type:modifier></type> <name pos:line="10071" pos:column="23">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10073" pos:column="9">HRESULT</name></type> ( <name pos:line="10073" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10073" pos:column="37">*</type:modifier><name pos:line="10073" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="10073" pos:column="56">( 
            <param><decl><type><name pos:line="10074" pos:column="13">Engines</name> <type:modifier pos:line="10074" pos:column="21">*</type:modifier></type> <name pos:line="10074" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="10075" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10075" pos:column="25">__RPC__out</name> <name pos:line="10075" pos:column="36">UINT</name> <type:modifier pos:line="10075" pos:column="41">*</type:modifier></type><name pos:line="10075" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10077" pos:column="9">HRESULT</name></type> ( <name pos:line="10077" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10077" pos:column="37">*</type:modifier><name pos:line="10077" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="10077" pos:column="51">( 
            <param><decl><type><name pos:line="10078" pos:column="13">Engines</name> <type:modifier pos:line="10078" pos:column="21">*</type:modifier></type> <name pos:line="10078" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="10079" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10079" pos:column="24">UINT</name></type> <name pos:line="10079" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="10080" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10080" pos:column="24">LCID</name></type> <name pos:line="10080" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10081" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10081" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10081" pos:column="46">ITypeInfo</name> <type:modifier pos:line="10081" pos:column="56">*</type:modifier><type:modifier pos:line="10081" pos:column="57">*</type:modifier></type><name pos:line="10081" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10083" pos:column="9">HRESULT</name> <argument_list pos:line="10083" pos:column="17">( <argument pos:line="10083" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="10083" pos:column="53">(</op:operator> 
            <name pos:line="10084" pos:column="13">Engines</name> <op:operator pos:line="10084" pos:column="21">*</op:operator> <name pos:line="10084" pos:column="23">This</name><op:operator pos:line="10084" pos:column="27">,</op:operator>
            <comment type="block" pos:line="10085" pos:column="13">/* [in] */</comment> <name pos:line="10085" pos:column="24">__RPC__in</name> <name pos:line="10085" pos:column="34">REFIID</name> <name pos:line="10085" pos:column="41">riid</name><op:operator pos:line="10085" pos:column="45">,</op:operator>
            <comment type="block" pos:line="10086" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="10086" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="10086" pos:column="54">(<argument pos:line="10086" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="10086" pos:column="63">LPOLESTR</name> <op:operator pos:line="10086" pos:column="72">*</op:operator><name pos:line="10086" pos:column="73">rgszNames</name><op:operator pos:line="10086" pos:column="82">,</op:operator>
            <comment type="block" pos:line="10087" pos:column="13">/* [range][in] */</comment> <name pos:line="10087" pos:column="31">UINT</name> <name pos:line="10087" pos:column="36">cNames</name><op:operator pos:line="10087" pos:column="42">,</op:operator>
            <comment type="block" pos:line="10088" pos:column="13">/* [in] */</comment> <name pos:line="10088" pos:column="24">LCID</name> <name pos:line="10088" pos:column="29">lcid</name><op:operator pos:line="10088" pos:column="33">,</op:operator>
            <comment type="block" pos:line="10089" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="10089" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="10089" pos:column="56">(<argument pos:line="10089" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="10089" pos:column="65">DISPID</name> <op:operator pos:line="10089" pos:column="72">*</op:operator><name pos:line="10089" pos:column="73">rgDispId</name><op:operator pos:line="10089" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="10091" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="10091" pos:column="23">HRESULT</name></type> ( <name pos:line="10091" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="10091" pos:column="51">*</type:modifier><name pos:line="10091" pos:column="52">Invoke</name> )<parameter_list pos:line="10091" pos:column="60">( 
            <param><decl><type><name pos:line="10092" pos:column="13">Engines</name> <type:modifier pos:line="10092" pos:column="21">*</type:modifier></type> <name pos:line="10092" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="10093" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10093" pos:column="24">DISPID</name></type> <name pos:line="10093" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="10094" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10094" pos:column="24">REFIID</name></type> <name pos:line="10094" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="10095" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10095" pos:column="24">LCID</name></type> <name pos:line="10095" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10096" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10096" pos:column="24">WORD</name></type> <name pos:line="10096" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="10097" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="10097" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="10097" pos:column="40">*</type:modifier></type><name pos:line="10097" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="10098" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10098" pos:column="25">VARIANT</name> <type:modifier pos:line="10098" pos:column="33">*</type:modifier></type><name pos:line="10098" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="10099" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10099" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="10099" pos:column="35">*</type:modifier></type><name pos:line="10099" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="10100" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10100" pos:column="25">UINT</name> <type:modifier pos:line="10100" pos:column="30">*</type:modifier></type><name pos:line="10100" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="10102" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="10102" pos:column="64">HRESULT</name></type> ( <name pos:line="10102" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="10102" pos:column="92">*</type:modifier><name pos:line="10102" pos:column="93">Item</name> )<parameter_list pos:line="10102" pos:column="99">( 
            <param><decl><type><name pos:line="10103" pos:column="13">Engines</name> <type:modifier pos:line="10103" pos:column="21">*</type:modifier></type> <name pos:line="10103" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="10104" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10104" pos:column="24">VARIANT</name></type> <name pos:line="10104" pos:column="32">Index</name></decl></param>,
            <comment type="block" pos:line="10105" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10105" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="10105" pos:column="54">Engine</name> <type:modifier pos:line="10105" pos:column="61">*</type:modifier><type:modifier pos:line="10105" pos:column="62">*</type:modifier></type><name pos:line="10105" pos:column="63">Engine</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="10107" pos:column="9">/* [restricted][id] */</comment> <function_decl><type><name pos:line="10107" pos:column="32">HRESULT</name></type> ( <name pos:line="10107" pos:column="42">STDMETHODCALLTYPE</name> <type:modifier pos:line="10107" pos:column="60">*</type:modifier><name pos:line="10107" pos:column="61">_NewEnum</name> )<parameter_list pos:line="10107" pos:column="71">( 
            <param><decl><type><name pos:line="10108" pos:column="13">Engines</name> <type:modifier pos:line="10108" pos:column="21">*</type:modifier></type> <name pos:line="10108" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="10109" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10109" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="10109" pos:column="54">IUnknown</name> <type:modifier pos:line="10109" pos:column="63">*</type:modifier><type:modifier pos:line="10109" pos:column="64">*</type:modifier></type><name pos:line="10109" pos:column="65">Enumerator</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="10111" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="10111" pos:column="73">HRESULT</name></type> ( <name pos:line="10111" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="10111" pos:column="101">*</type:modifier><name pos:line="10111" pos:column="102">get_DTE</name> )<parameter_list pos:line="10111" pos:column="111">( 
            <param><decl><type><name pos:line="10112" pos:column="13">Engines</name> <type:modifier pos:line="10112" pos:column="21">*</type:modifier></type> <name pos:line="10112" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="10113" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10113" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="10113" pos:column="54">/* external definition not present */</comment> <name pos:line="10113" pos:column="92">DTE</name> <type:modifier pos:line="10113" pos:column="96">*</type:modifier><type:modifier pos:line="10113" pos:column="97">*</type:modifier></type><name pos:line="10113" pos:column="98">DTEObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="10115" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="10115" pos:column="73">HRESULT</name></type> ( <name pos:line="10115" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="10115" pos:column="101">*</type:modifier><name pos:line="10115" pos:column="102">get_Parent</name> )<parameter_list pos:line="10115" pos:column="114">( 
            <param><decl><type><name pos:line="10116" pos:column="13">Engines</name> <type:modifier pos:line="10116" pos:column="21">*</type:modifier></type> <name pos:line="10116" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="10117" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10117" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="10117" pos:column="54">/* external definition not present */</comment> <name pos:line="10117" pos:column="92">Debugger</name> <type:modifier pos:line="10117" pos:column="101">*</type:modifier><type:modifier pos:line="10117" pos:column="102">*</type:modifier></type><name pos:line="10117" pos:column="103">Debugger</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="10119" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="10119" pos:column="73">HRESULT</name></type> ( <name pos:line="10119" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="10119" pos:column="101">*</type:modifier><name pos:line="10119" pos:column="102">get_Count</name> )<parameter_list pos:line="10119" pos:column="113">( 
            <param><decl><type><name pos:line="10120" pos:column="13">Engines</name> <type:modifier pos:line="10120" pos:column="21">*</type:modifier></type> <name pos:line="10120" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="10121" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10121" pos:column="33">__RPC__out</name> <name pos:line="10121" pos:column="44">long</name> <type:modifier pos:line="10121" pos:column="49">*</type:modifier></type><name pos:line="10121" pos:column="50">Count</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10123" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10124" pos:column="7">EnginesVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10126" pos:column="5">interface</name></type> <name pos:line="10126" pos:column="15">Engines</name>
    <argument_list pos:line="10127" pos:column="5">{
        <argument><expr><name pos:line="10128" pos:column="9">CONST_VTBL</name> struct <name pos:line="10128" pos:column="27">EnginesVtbl</name> <op:operator pos:line="10128" pos:column="39">*</op:operator><name pos:line="10128" pos:column="40">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10133" pos:column="1">#<cpp:directive pos:line="10133" pos:column="2">ifdef</cpp:directive> <name pos:line="10133" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10136" pos:column="1">#<cpp:directive pos:line="10136" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10136" pos:column="9">Engines_QueryInterface</name><parameter_list pos:line="10136" pos:column="31">(<param><type><name pos:line="10136" pos:column="32">This</name></type></param>,<param><type><name pos:line="10136" pos:column="37">riid</name></type></param>,<param><type><name pos:line="10136" pos:column="42">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10137" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10139" pos:column="1">#<cpp:directive pos:line="10139" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10139" pos:column="9">Engines_AddRef</name><parameter_list pos:line="10139" pos:column="23">(<param><type><name pos:line="10139" pos:column="24">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10140" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10142" pos:column="1">#<cpp:directive pos:line="10142" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10142" pos:column="9">Engines_Release</name><parameter_list pos:line="10142" pos:column="24">(<param><type><name pos:line="10142" pos:column="25">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10143" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10146" pos:column="1">#<cpp:directive pos:line="10146" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10146" pos:column="9">Engines_GetTypeInfoCount</name><parameter_list pos:line="10146" pos:column="33">(<param><type><name pos:line="10146" pos:column="34">This</name></type></param>,<param><type><name pos:line="10146" pos:column="39">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10147" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="10149" pos:column="1">#<cpp:directive pos:line="10149" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10149" pos:column="9">Engines_GetTypeInfo</name><parameter_list pos:line="10149" pos:column="28">(<param><type><name pos:line="10149" pos:column="29">This</name></type></param>,<param><type><name pos:line="10149" pos:column="34">iTInfo</name></type></param>,<param><type><name pos:line="10149" pos:column="41">lcid</name></type></param>,<param><type><name pos:line="10149" pos:column="46">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10150" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="10152" pos:column="1">#<cpp:directive pos:line="10152" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10152" pos:column="9">Engines_GetIDsOfNames</name><parameter_list pos:line="10152" pos:column="30">(<param><type><name pos:line="10152" pos:column="31">This</name></type></param>,<param><type><name pos:line="10152" pos:column="36">riid</name></type></param>,<param><type><name pos:line="10152" pos:column="41">rgszNames</name></type></param>,<param><type><name pos:line="10152" pos:column="51">cNames</name></type></param>,<param><type><name pos:line="10152" pos:column="58">lcid</name></type></param>,<param><type><name pos:line="10152" pos:column="63">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10153" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="10155" pos:column="1">#<cpp:directive pos:line="10155" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10155" pos:column="9">Engines_Invoke</name><parameter_list pos:line="10155" pos:column="23">(<param><type><name pos:line="10155" pos:column="24">This</name></type></param>,<param><type><name pos:line="10155" pos:column="29">dispIdMember</name></type></param>,<param><type><name pos:line="10155" pos:column="42">riid</name></type></param>,<param><type><name pos:line="10155" pos:column="47">lcid</name></type></param>,<param><type><name pos:line="10155" pos:column="52">wFlags</name></type></param>,<param><type><name pos:line="10155" pos:column="59">pDispParams</name></type></param>,<param><type><name pos:line="10155" pos:column="71">pVarResult</name></type></param>,<param><type><name pos:line="10155" pos:column="82">pExcepInfo</name></type></param>,<param><type><name pos:line="10155" pos:column="93">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10156" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="10159" pos:column="1">#<cpp:directive pos:line="10159" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10159" pos:column="9">Engines_Item</name><parameter_list pos:line="10159" pos:column="21">(<param><type><name pos:line="10159" pos:column="22">This</name></type></param>,<param><type><name pos:line="10159" pos:column="27">Index</name></type></param>,<param><type><name pos:line="10159" pos:column="33">Engine</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10160" pos:column="5">( (This)-&gt;lpVtbl -&gt; Item(This,Index,Engine) )</cpp:value></cpp:define> 

<cpp:define pos:line="10162" pos:column="1">#<cpp:directive pos:line="10162" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10162" pos:column="9">Engines__NewEnum</name><parameter_list pos:line="10162" pos:column="25">(<param><type><name pos:line="10162" pos:column="26">This</name></type></param>,<param><type><name pos:line="10162" pos:column="31">Enumerator</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10163" pos:column="5">( (This)-&gt;lpVtbl -&gt; _NewEnum(This,Enumerator) )</cpp:value></cpp:define> 

<cpp:define pos:line="10165" pos:column="1">#<cpp:directive pos:line="10165" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10165" pos:column="9">Engines_get_DTE</name><parameter_list pos:line="10165" pos:column="24">(<param><type><name pos:line="10165" pos:column="25">This</name></type></param>,<param><type><name pos:line="10165" pos:column="30">DTEObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10166" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTEObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10168" pos:column="1">#<cpp:directive pos:line="10168" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10168" pos:column="9">Engines_get_Parent</name><parameter_list pos:line="10168" pos:column="27">(<param><type><name pos:line="10168" pos:column="28">This</name></type></param>,<param><type><name pos:line="10168" pos:column="33">Debugger</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10169" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,Debugger) )</cpp:value></cpp:define> 

<cpp:define pos:line="10171" pos:column="1">#<cpp:directive pos:line="10171" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10171" pos:column="9">Engines_get_Count</name><parameter_list pos:line="10171" pos:column="26">(<param><type><name pos:line="10171" pos:column="27">This</name></type></param>,<param><type><name pos:line="10171" pos:column="32">Count</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10172" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Count(This,Count) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10174" pos:column="1">#<cpp:directive pos:line="10174" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10174" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10177" pos:column="1">#<cpp:directive pos:line="10177" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10177" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10182" pos:column="1">#<cpp:directive pos:line="10182" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10182" pos:column="9">/* __Engines_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10185" pos:column="1">#<cpp:directive pos:line="10185" pos:column="2">ifndef</cpp:directive> <name pos:line="10185" pos:column="9">__Transports_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10186" pos:column="1">#<cpp:directive pos:line="10186" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10186" pos:column="9">__Transports_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10188" pos:column="1">/* interface Transports */</comment>
<comment type="block" pos:line="10189" pos:column="1">/* [object][version][helpstringcontext][helpstring][helpcontext][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="10192" pos:column="1">EXTERN_C</name> <specifier pos:line="10192" pos:column="10">const</specifier> <name pos:line="10192" pos:column="16">IID</name></type> <name pos:line="10192" pos:column="20">IID_Transports</name></decl>;</decl_stmt>

<cpp:if pos:line="10194" pos:column="1">#<cpp:directive pos:line="10194" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10194" pos:column="5">defined</name><argument_list pos:line="10194" pos:column="12">(<argument><expr><name pos:line="10194" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10194" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10194" pos:column="29">!</op:operator><call><name pos:line="10194" pos:column="30">defined</name><argument_list pos:line="10194" pos:column="37">(<argument><expr><name pos:line="10194" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10196" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10196" pos:column="19">(<argument pos:line="10196" pos:column="20">"EA47C3D9-FD41-4402-BDC6-7F07D0C8E3FC"</argument>)</argument_list></macro>
    <label><name pos:line="10197" pos:column="5">Transports</name> :</label> <expr_stmt><expr pos:line="10197" pos:column="18">public <name pos:line="10197" pos:column="25">IDispatch</name>
    <block pos:line="10198" pos:column="5">{
    <expr pos:line="10199" pos:column="5">public<op:operator pos:line="10199" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="10200" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="10200" pos:column="72">HRESULT</name> <name pos:line="10200" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="10200" pos:column="98">Item</name><argument_list pos:line="10200" pos:column="102">( 
            <comment type="block" pos:line="10201" pos:column="13">/* [in] */</comment> <argument pos:line="10201" pos:column="24">VARIANT Index</argument>,
            <comment type="block" pos:line="10202" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10202" pos:column="33">__RPC__deref_out_opt Transport **Transport</argument>)</argument_list></macro> <op:operator pos:line="10202" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="10202" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="10204" pos:column="9">virtual <comment type="block" pos:line="10204" pos:column="17">/* [restricted][id] */</comment> <name pos:line="10204" pos:column="40">HRESULT</name> <name pos:line="10204" pos:column="48">STDMETHODCALLTYPE</name> <macro><name pos:line="10204" pos:column="66">_NewEnum</name><argument_list pos:line="10204" pos:column="74">( 
            <comment type="block" pos:line="10205" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10205" pos:column="33">__RPC__deref_out_opt IUnknown **Enumerator</argument>)</argument_list></macro> <op:operator pos:line="10205" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="10205" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="10207" pos:column="9">virtual <comment type="block" pos:line="10207" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="10207" pos:column="81">HRESULT</name> <name pos:line="10207" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="10207" pos:column="107">get_DTE</name><argument_list pos:line="10207" pos:column="114">( 
            <comment type="block" pos:line="10208" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10208" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="10208" pos:column="54">/* external definition not present */</comment> DTE **DTEObject</argument>)</argument_list></macro> <op:operator pos:line="10208" pos:column="109">=</op:operator> <lit:literal type="number" pos:line="10208" pos:column="111">0</lit:literal></expr>;
        
        <expr pos:line="10210" pos:column="9">virtual <comment type="block" pos:line="10210" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="10210" pos:column="81">HRESULT</name> <name pos:line="10210" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="10210" pos:column="107">get_Parent</name><argument_list pos:line="10210" pos:column="117">( 
            <comment type="block" pos:line="10211" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10211" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="10211" pos:column="54">/* external definition not present */</comment> Debugger **Debugger</argument>)</argument_list></macro> <op:operator pos:line="10211" pos:column="113">=</op:operator> <lit:literal type="number" pos:line="10211" pos:column="115">0</lit:literal></expr>;
        
        <expr pos:line="10213" pos:column="9">virtual <comment type="block" pos:line="10213" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="10213" pos:column="81">HRESULT</name> <name pos:line="10213" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="10213" pos:column="107">get_Count</name><argument_list pos:line="10213" pos:column="116">( 
            <comment type="block" pos:line="10214" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10214" pos:column="33">__RPC__out long *Count</argument>)</argument_list></macro> <op:operator pos:line="10214" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="10214" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10218" pos:column="1">#<cpp:directive pos:line="10218" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10218" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10220" pos:column="5">typedef <type><struct pos:line="10220" pos:column="13">struct <name pos:line="10220" pos:column="20">TransportsVtbl</name>
    <block pos:line="10221" pos:column="5">{<public type="default" pos:line="10221" pos:column="6">
        <function_decl><type><name pos:line="10222" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10224" pos:column="9">HRESULT</name></type> ( <name pos:line="10224" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10224" pos:column="37">*</type:modifier><name pos:line="10224" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10224" pos:column="54">( 
            <param><decl><type><name pos:line="10225" pos:column="13">Transports</name> <type:modifier pos:line="10225" pos:column="24">*</type:modifier></type> <name pos:line="10225" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="10226" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10226" pos:column="24">__RPC__in</name> <name pos:line="10226" pos:column="34">REFIID</name></type> <name pos:line="10226" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10227" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10228" pos:column="13">__RPC__deref_out</name>  <name pos:line="10228" pos:column="31">void</name> <type:modifier pos:line="10228" pos:column="36">*</type:modifier><type:modifier pos:line="10228" pos:column="37">*</type:modifier></type><name pos:line="10228" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10230" pos:column="9">ULONG</name></type> ( <name pos:line="10230" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10230" pos:column="35">*</type:modifier><name pos:line="10230" pos:column="36">AddRef</name> )<parameter_list pos:line="10230" pos:column="44">( 
            <param><decl><type><name pos:line="10231" pos:column="13">Transports</name> <type:modifier pos:line="10231" pos:column="24">*</type:modifier></type> <name pos:line="10231" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10233" pos:column="9">ULONG</name></type> ( <name pos:line="10233" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10233" pos:column="35">*</type:modifier><name pos:line="10233" pos:column="36">Release</name> )<parameter_list pos:line="10233" pos:column="45">( 
            <param><decl><type><name pos:line="10234" pos:column="13">Transports</name> <type:modifier pos:line="10234" pos:column="24">*</type:modifier></type> <name pos:line="10234" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10236" pos:column="9">HRESULT</name></type> ( <name pos:line="10236" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10236" pos:column="37">*</type:modifier><name pos:line="10236" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="10236" pos:column="56">( 
            <param><decl><type><name pos:line="10237" pos:column="13">Transports</name> <type:modifier pos:line="10237" pos:column="24">*</type:modifier></type> <name pos:line="10237" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="10238" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10238" pos:column="25">__RPC__out</name> <name pos:line="10238" pos:column="36">UINT</name> <type:modifier pos:line="10238" pos:column="41">*</type:modifier></type><name pos:line="10238" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10240" pos:column="9">HRESULT</name></type> ( <name pos:line="10240" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10240" pos:column="37">*</type:modifier><name pos:line="10240" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="10240" pos:column="51">( 
            <param><decl><type><name pos:line="10241" pos:column="13">Transports</name> <type:modifier pos:line="10241" pos:column="24">*</type:modifier></type> <name pos:line="10241" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="10242" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10242" pos:column="24">UINT</name></type> <name pos:line="10242" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="10243" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10243" pos:column="24">LCID</name></type> <name pos:line="10243" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10244" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10244" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10244" pos:column="46">ITypeInfo</name> <type:modifier pos:line="10244" pos:column="56">*</type:modifier><type:modifier pos:line="10244" pos:column="57">*</type:modifier></type><name pos:line="10244" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10246" pos:column="9">HRESULT</name> <argument_list pos:line="10246" pos:column="17">( <argument pos:line="10246" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="10246" pos:column="53">(</op:operator> 
            <name pos:line="10247" pos:column="13">Transports</name> <op:operator pos:line="10247" pos:column="24">*</op:operator> <name pos:line="10247" pos:column="26">This</name><op:operator pos:line="10247" pos:column="30">,</op:operator>
            <comment type="block" pos:line="10248" pos:column="13">/* [in] */</comment> <name pos:line="10248" pos:column="24">__RPC__in</name> <name pos:line="10248" pos:column="34">REFIID</name> <name pos:line="10248" pos:column="41">riid</name><op:operator pos:line="10248" pos:column="45">,</op:operator>
            <comment type="block" pos:line="10249" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="10249" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="10249" pos:column="54">(<argument pos:line="10249" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="10249" pos:column="63">LPOLESTR</name> <op:operator pos:line="10249" pos:column="72">*</op:operator><name pos:line="10249" pos:column="73">rgszNames</name><op:operator pos:line="10249" pos:column="82">,</op:operator>
            <comment type="block" pos:line="10250" pos:column="13">/* [range][in] */</comment> <name pos:line="10250" pos:column="31">UINT</name> <name pos:line="10250" pos:column="36">cNames</name><op:operator pos:line="10250" pos:column="42">,</op:operator>
            <comment type="block" pos:line="10251" pos:column="13">/* [in] */</comment> <name pos:line="10251" pos:column="24">LCID</name> <name pos:line="10251" pos:column="29">lcid</name><op:operator pos:line="10251" pos:column="33">,</op:operator>
            <comment type="block" pos:line="10252" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="10252" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="10252" pos:column="56">(<argument pos:line="10252" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="10252" pos:column="65">DISPID</name> <op:operator pos:line="10252" pos:column="72">*</op:operator><name pos:line="10252" pos:column="73">rgDispId</name><op:operator pos:line="10252" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="10254" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="10254" pos:column="23">HRESULT</name></type> ( <name pos:line="10254" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="10254" pos:column="51">*</type:modifier><name pos:line="10254" pos:column="52">Invoke</name> )<parameter_list pos:line="10254" pos:column="60">( 
            <param><decl><type><name pos:line="10255" pos:column="13">Transports</name> <type:modifier pos:line="10255" pos:column="24">*</type:modifier></type> <name pos:line="10255" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="10256" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10256" pos:column="24">DISPID</name></type> <name pos:line="10256" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="10257" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10257" pos:column="24">REFIID</name></type> <name pos:line="10257" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="10258" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10258" pos:column="24">LCID</name></type> <name pos:line="10258" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10259" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10259" pos:column="24">WORD</name></type> <name pos:line="10259" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="10260" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="10260" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="10260" pos:column="40">*</type:modifier></type><name pos:line="10260" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="10261" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10261" pos:column="25">VARIANT</name> <type:modifier pos:line="10261" pos:column="33">*</type:modifier></type><name pos:line="10261" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="10262" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10262" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="10262" pos:column="35">*</type:modifier></type><name pos:line="10262" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="10263" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10263" pos:column="25">UINT</name> <type:modifier pos:line="10263" pos:column="30">*</type:modifier></type><name pos:line="10263" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="10265" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="10265" pos:column="64">HRESULT</name></type> ( <name pos:line="10265" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="10265" pos:column="92">*</type:modifier><name pos:line="10265" pos:column="93">Item</name> )<parameter_list pos:line="10265" pos:column="99">( 
            <param><decl><type><name pos:line="10266" pos:column="13">Transports</name> <type:modifier pos:line="10266" pos:column="24">*</type:modifier></type> <name pos:line="10266" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="10267" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10267" pos:column="24">VARIANT</name></type> <name pos:line="10267" pos:column="32">Index</name></decl></param>,
            <comment type="block" pos:line="10268" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10268" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="10268" pos:column="54">Transport</name> <type:modifier pos:line="10268" pos:column="64">*</type:modifier><type:modifier pos:line="10268" pos:column="65">*</type:modifier></type><name pos:line="10268" pos:column="66">Transport</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="10270" pos:column="9">/* [restricted][id] */</comment> <function_decl><type><name pos:line="10270" pos:column="32">HRESULT</name></type> ( <name pos:line="10270" pos:column="42">STDMETHODCALLTYPE</name> <type:modifier pos:line="10270" pos:column="60">*</type:modifier><name pos:line="10270" pos:column="61">_NewEnum</name> )<parameter_list pos:line="10270" pos:column="71">( 
            <param><decl><type><name pos:line="10271" pos:column="13">Transports</name> <type:modifier pos:line="10271" pos:column="24">*</type:modifier></type> <name pos:line="10271" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="10272" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10272" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="10272" pos:column="54">IUnknown</name> <type:modifier pos:line="10272" pos:column="63">*</type:modifier><type:modifier pos:line="10272" pos:column="64">*</type:modifier></type><name pos:line="10272" pos:column="65">Enumerator</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="10274" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="10274" pos:column="73">HRESULT</name></type> ( <name pos:line="10274" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="10274" pos:column="101">*</type:modifier><name pos:line="10274" pos:column="102">get_DTE</name> )<parameter_list pos:line="10274" pos:column="111">( 
            <param><decl><type><name pos:line="10275" pos:column="13">Transports</name> <type:modifier pos:line="10275" pos:column="24">*</type:modifier></type> <name pos:line="10275" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="10276" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10276" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="10276" pos:column="54">/* external definition not present */</comment> <name pos:line="10276" pos:column="92">DTE</name> <type:modifier pos:line="10276" pos:column="96">*</type:modifier><type:modifier pos:line="10276" pos:column="97">*</type:modifier></type><name pos:line="10276" pos:column="98">DTEObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="10278" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="10278" pos:column="73">HRESULT</name></type> ( <name pos:line="10278" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="10278" pos:column="101">*</type:modifier><name pos:line="10278" pos:column="102">get_Parent</name> )<parameter_list pos:line="10278" pos:column="114">( 
            <param><decl><type><name pos:line="10279" pos:column="13">Transports</name> <type:modifier pos:line="10279" pos:column="24">*</type:modifier></type> <name pos:line="10279" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="10280" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10280" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="10280" pos:column="54">/* external definition not present */</comment> <name pos:line="10280" pos:column="92">Debugger</name> <type:modifier pos:line="10280" pos:column="101">*</type:modifier><type:modifier pos:line="10280" pos:column="102">*</type:modifier></type><name pos:line="10280" pos:column="103">Debugger</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="10282" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="10282" pos:column="73">HRESULT</name></type> ( <name pos:line="10282" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="10282" pos:column="101">*</type:modifier><name pos:line="10282" pos:column="102">get_Count</name> )<parameter_list pos:line="10282" pos:column="113">( 
            <param><decl><type><name pos:line="10283" pos:column="13">Transports</name> <type:modifier pos:line="10283" pos:column="24">*</type:modifier></type> <name pos:line="10283" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="10284" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10284" pos:column="33">__RPC__out</name> <name pos:line="10284" pos:column="44">long</name> <type:modifier pos:line="10284" pos:column="49">*</type:modifier></type><name pos:line="10284" pos:column="50">Count</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10286" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10287" pos:column="7">TransportsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10289" pos:column="5">interface</name></type> <name pos:line="10289" pos:column="15">Transports</name>
    <argument_list pos:line="10290" pos:column="5">{
        <argument><expr><name pos:line="10291" pos:column="9">CONST_VTBL</name> struct <name pos:line="10291" pos:column="27">TransportsVtbl</name> <op:operator pos:line="10291" pos:column="42">*</op:operator><name pos:line="10291" pos:column="43">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10296" pos:column="1">#<cpp:directive pos:line="10296" pos:column="2">ifdef</cpp:directive> <name pos:line="10296" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10299" pos:column="1">#<cpp:directive pos:line="10299" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10299" pos:column="9">Transports_QueryInterface</name><parameter_list pos:line="10299" pos:column="34">(<param><type><name pos:line="10299" pos:column="35">This</name></type></param>,<param><type><name pos:line="10299" pos:column="40">riid</name></type></param>,<param><type><name pos:line="10299" pos:column="45">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10300" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10302" pos:column="1">#<cpp:directive pos:line="10302" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10302" pos:column="9">Transports_AddRef</name><parameter_list pos:line="10302" pos:column="26">(<param><type><name pos:line="10302" pos:column="27">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10303" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10305" pos:column="1">#<cpp:directive pos:line="10305" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10305" pos:column="9">Transports_Release</name><parameter_list pos:line="10305" pos:column="27">(<param><type><name pos:line="10305" pos:column="28">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10306" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10309" pos:column="1">#<cpp:directive pos:line="10309" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10309" pos:column="9">Transports_GetTypeInfoCount</name><parameter_list pos:line="10309" pos:column="36">(<param><type><name pos:line="10309" pos:column="37">This</name></type></param>,<param><type><name pos:line="10309" pos:column="42">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10310" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="10312" pos:column="1">#<cpp:directive pos:line="10312" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10312" pos:column="9">Transports_GetTypeInfo</name><parameter_list pos:line="10312" pos:column="31">(<param><type><name pos:line="10312" pos:column="32">This</name></type></param>,<param><type><name pos:line="10312" pos:column="37">iTInfo</name></type></param>,<param><type><name pos:line="10312" pos:column="44">lcid</name></type></param>,<param><type><name pos:line="10312" pos:column="49">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10313" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="10315" pos:column="1">#<cpp:directive pos:line="10315" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10315" pos:column="9">Transports_GetIDsOfNames</name><parameter_list pos:line="10315" pos:column="33">(<param><type><name pos:line="10315" pos:column="34">This</name></type></param>,<param><type><name pos:line="10315" pos:column="39">riid</name></type></param>,<param><type><name pos:line="10315" pos:column="44">rgszNames</name></type></param>,<param><type><name pos:line="10315" pos:column="54">cNames</name></type></param>,<param><type><name pos:line="10315" pos:column="61">lcid</name></type></param>,<param><type><name pos:line="10315" pos:column="66">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10316" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="10318" pos:column="1">#<cpp:directive pos:line="10318" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10318" pos:column="9">Transports_Invoke</name><parameter_list pos:line="10318" pos:column="26">(<param><type><name pos:line="10318" pos:column="27">This</name></type></param>,<param><type><name pos:line="10318" pos:column="32">dispIdMember</name></type></param>,<param><type><name pos:line="10318" pos:column="45">riid</name></type></param>,<param><type><name pos:line="10318" pos:column="50">lcid</name></type></param>,<param><type><name pos:line="10318" pos:column="55">wFlags</name></type></param>,<param><type><name pos:line="10318" pos:column="62">pDispParams</name></type></param>,<param><type><name pos:line="10318" pos:column="74">pVarResult</name></type></param>,<param><type><name pos:line="10318" pos:column="85">pExcepInfo</name></type></param>,<param><type><name pos:line="10318" pos:column="96">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10319" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="10322" pos:column="1">#<cpp:directive pos:line="10322" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10322" pos:column="9">Transports_Item</name><parameter_list pos:line="10322" pos:column="24">(<param><type><name pos:line="10322" pos:column="25">This</name></type></param>,<param><type><name pos:line="10322" pos:column="30">Index</name></type></param>,<param><type><name pos:line="10322" pos:column="36">Transport</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10323" pos:column="5">( (This)-&gt;lpVtbl -&gt; Item(This,Index,Transport) )</cpp:value></cpp:define> 

<cpp:define pos:line="10325" pos:column="1">#<cpp:directive pos:line="10325" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10325" pos:column="9">Transports__NewEnum</name><parameter_list pos:line="10325" pos:column="28">(<param><type><name pos:line="10325" pos:column="29">This</name></type></param>,<param><type><name pos:line="10325" pos:column="34">Enumerator</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10326" pos:column="5">( (This)-&gt;lpVtbl -&gt; _NewEnum(This,Enumerator) )</cpp:value></cpp:define> 

<cpp:define pos:line="10328" pos:column="1">#<cpp:directive pos:line="10328" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10328" pos:column="9">Transports_get_DTE</name><parameter_list pos:line="10328" pos:column="27">(<param><type><name pos:line="10328" pos:column="28">This</name></type></param>,<param><type><name pos:line="10328" pos:column="33">DTEObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10329" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTEObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10331" pos:column="1">#<cpp:directive pos:line="10331" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10331" pos:column="9">Transports_get_Parent</name><parameter_list pos:line="10331" pos:column="30">(<param><type><name pos:line="10331" pos:column="31">This</name></type></param>,<param><type><name pos:line="10331" pos:column="36">Debugger</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10332" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,Debugger) )</cpp:value></cpp:define> 

<cpp:define pos:line="10334" pos:column="1">#<cpp:directive pos:line="10334" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10334" pos:column="9">Transports_get_Count</name><parameter_list pos:line="10334" pos:column="29">(<param><type><name pos:line="10334" pos:column="30">This</name></type></param>,<param><type><name pos:line="10334" pos:column="35">Count</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10335" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Count(This,Count) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10337" pos:column="1">#<cpp:directive pos:line="10337" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10337" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10340" pos:column="1">#<cpp:directive pos:line="10340" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10340" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10345" pos:column="1">#<cpp:directive pos:line="10345" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10345" pos:column="9">/* __Transports_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10348" pos:column="1">#<cpp:directive pos:line="10348" pos:column="2">ifndef</cpp:directive> <name pos:line="10348" pos:column="9">___dispDebuggerProcessEvents_DISPINTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10349" pos:column="1">#<cpp:directive pos:line="10349" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10349" pos:column="9">___dispDebuggerProcessEvents_DISPINTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10351" pos:column="1">/* dispinterface _dispDebuggerProcessEvents */</comment>
<comment type="block" pos:line="10352" pos:column="1">/* [version][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="10355" pos:column="1">EXTERN_C</name> <specifier pos:line="10355" pos:column="10">const</specifier> <name pos:line="10355" pos:column="16">IID</name></type> <name pos:line="10355" pos:column="20">DIID__dispDebuggerProcessEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="10357" pos:column="1">#<cpp:directive pos:line="10357" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10357" pos:column="5">defined</name><argument_list pos:line="10357" pos:column="12">(<argument><expr><name pos:line="10357" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10357" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10357" pos:column="29">!</op:operator><call><name pos:line="10357" pos:column="30">defined</name><argument_list pos:line="10357" pos:column="37">(<argument><expr><name pos:line="10357" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <macro><name pos:line="10359" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10359" pos:column="19">(<argument pos:line="10359" pos:column="20">"7d04c01d-bb7a-47e8-92eb-e914cd61366b"</argument>)</argument_list></macro>
    <label><name pos:line="10360" pos:column="5">_dispDebuggerProcessEvents</name> :</label> <expr_stmt><expr pos:line="10360" pos:column="34">public <name pos:line="10360" pos:column="41">IDispatch</name>
    <block pos:line="10361" pos:column="5">{
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10364" pos:column="1">#<cpp:directive pos:line="10364" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10364" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10366" pos:column="5">typedef <type><struct pos:line="10366" pos:column="13">struct <name pos:line="10366" pos:column="20">_dispDebuggerProcessEventsVtbl</name>
    <block pos:line="10367" pos:column="5">{<public type="default" pos:line="10367" pos:column="6">
        <function_decl><type><name pos:line="10368" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10370" pos:column="9">HRESULT</name></type> ( <name pos:line="10370" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10370" pos:column="37">*</type:modifier><name pos:line="10370" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10370" pos:column="54">( 
            <param><decl><type><name pos:line="10371" pos:column="13">_dispDebuggerProcessEvents</name> <type:modifier pos:line="10371" pos:column="40">*</type:modifier></type> <name pos:line="10371" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="10372" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10372" pos:column="24">__RPC__in</name> <name pos:line="10372" pos:column="34">REFIID</name></type> <name pos:line="10372" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10373" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10374" pos:column="13">__RPC__deref_out</name>  <name pos:line="10374" pos:column="31">void</name> <type:modifier pos:line="10374" pos:column="36">*</type:modifier><type:modifier pos:line="10374" pos:column="37">*</type:modifier></type><name pos:line="10374" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10376" pos:column="9">ULONG</name></type> ( <name pos:line="10376" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10376" pos:column="35">*</type:modifier><name pos:line="10376" pos:column="36">AddRef</name> )<parameter_list pos:line="10376" pos:column="44">( 
            <param><decl><type><name pos:line="10377" pos:column="13">_dispDebuggerProcessEvents</name> <type:modifier pos:line="10377" pos:column="40">*</type:modifier></type> <name pos:line="10377" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10379" pos:column="9">ULONG</name></type> ( <name pos:line="10379" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10379" pos:column="35">*</type:modifier><name pos:line="10379" pos:column="36">Release</name> )<parameter_list pos:line="10379" pos:column="45">( 
            <param><decl><type><name pos:line="10380" pos:column="13">_dispDebuggerProcessEvents</name> <type:modifier pos:line="10380" pos:column="40">*</type:modifier></type> <name pos:line="10380" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10382" pos:column="9">HRESULT</name></type> ( <name pos:line="10382" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10382" pos:column="37">*</type:modifier><name pos:line="10382" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="10382" pos:column="56">( 
            <param><decl><type><name pos:line="10383" pos:column="13">_dispDebuggerProcessEvents</name> <type:modifier pos:line="10383" pos:column="40">*</type:modifier></type> <name pos:line="10383" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="10384" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10384" pos:column="25">__RPC__out</name> <name pos:line="10384" pos:column="36">UINT</name> <type:modifier pos:line="10384" pos:column="41">*</type:modifier></type><name pos:line="10384" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10386" pos:column="9">HRESULT</name></type> ( <name pos:line="10386" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10386" pos:column="37">*</type:modifier><name pos:line="10386" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="10386" pos:column="51">( 
            <param><decl><type><name pos:line="10387" pos:column="13">_dispDebuggerProcessEvents</name> <type:modifier pos:line="10387" pos:column="40">*</type:modifier></type> <name pos:line="10387" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="10388" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10388" pos:column="24">UINT</name></type> <name pos:line="10388" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="10389" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10389" pos:column="24">LCID</name></type> <name pos:line="10389" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10390" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10390" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10390" pos:column="46">ITypeInfo</name> <type:modifier pos:line="10390" pos:column="56">*</type:modifier><type:modifier pos:line="10390" pos:column="57">*</type:modifier></type><name pos:line="10390" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10392" pos:column="9">HRESULT</name> <argument_list pos:line="10392" pos:column="17">( <argument pos:line="10392" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="10392" pos:column="53">(</op:operator> 
            <name pos:line="10393" pos:column="13">_dispDebuggerProcessEvents</name> <op:operator pos:line="10393" pos:column="40">*</op:operator> <name pos:line="10393" pos:column="42">This</name><op:operator pos:line="10393" pos:column="46">,</op:operator>
            <comment type="block" pos:line="10394" pos:column="13">/* [in] */</comment> <name pos:line="10394" pos:column="24">__RPC__in</name> <name pos:line="10394" pos:column="34">REFIID</name> <name pos:line="10394" pos:column="41">riid</name><op:operator pos:line="10394" pos:column="45">,</op:operator>
            <comment type="block" pos:line="10395" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="10395" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="10395" pos:column="54">(<argument pos:line="10395" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="10395" pos:column="63">LPOLESTR</name> <op:operator pos:line="10395" pos:column="72">*</op:operator><name pos:line="10395" pos:column="73">rgszNames</name><op:operator pos:line="10395" pos:column="82">,</op:operator>
            <comment type="block" pos:line="10396" pos:column="13">/* [range][in] */</comment> <name pos:line="10396" pos:column="31">UINT</name> <name pos:line="10396" pos:column="36">cNames</name><op:operator pos:line="10396" pos:column="42">,</op:operator>
            <comment type="block" pos:line="10397" pos:column="13">/* [in] */</comment> <name pos:line="10397" pos:column="24">LCID</name> <name pos:line="10397" pos:column="29">lcid</name><op:operator pos:line="10397" pos:column="33">,</op:operator>
            <comment type="block" pos:line="10398" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="10398" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="10398" pos:column="56">(<argument pos:line="10398" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="10398" pos:column="65">DISPID</name> <op:operator pos:line="10398" pos:column="72">*</op:operator><name pos:line="10398" pos:column="73">rgDispId</name><op:operator pos:line="10398" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="10400" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="10400" pos:column="23">HRESULT</name></type> ( <name pos:line="10400" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="10400" pos:column="51">*</type:modifier><name pos:line="10400" pos:column="52">Invoke</name> )<parameter_list pos:line="10400" pos:column="60">( 
            <param><decl><type><name pos:line="10401" pos:column="13">_dispDebuggerProcessEvents</name> <type:modifier pos:line="10401" pos:column="40">*</type:modifier></type> <name pos:line="10401" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="10402" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10402" pos:column="24">DISPID</name></type> <name pos:line="10402" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="10403" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10403" pos:column="24">REFIID</name></type> <name pos:line="10403" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="10404" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10404" pos:column="24">LCID</name></type> <name pos:line="10404" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10405" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10405" pos:column="24">WORD</name></type> <name pos:line="10405" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="10406" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="10406" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="10406" pos:column="40">*</type:modifier></type><name pos:line="10406" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="10407" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10407" pos:column="25">VARIANT</name> <type:modifier pos:line="10407" pos:column="33">*</type:modifier></type><name pos:line="10407" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="10408" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10408" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="10408" pos:column="35">*</type:modifier></type><name pos:line="10408" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="10409" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10409" pos:column="25">UINT</name> <type:modifier pos:line="10409" pos:column="30">*</type:modifier></type><name pos:line="10409" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10411" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10412" pos:column="7">_dispDebuggerProcessEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10414" pos:column="5">interface</name></type> <name pos:line="10414" pos:column="15">_dispDebuggerProcessEvents</name>
    <argument_list pos:line="10415" pos:column="5">{
        <argument><expr><name pos:line="10416" pos:column="9">CONST_VTBL</name> struct <name pos:line="10416" pos:column="27">_dispDebuggerProcessEventsVtbl</name> <op:operator pos:line="10416" pos:column="58">*</op:operator><name pos:line="10416" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10421" pos:column="1">#<cpp:directive pos:line="10421" pos:column="2">ifdef</cpp:directive> <name pos:line="10421" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10424" pos:column="1">#<cpp:directive pos:line="10424" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10424" pos:column="9">_dispDebuggerProcessEvents_QueryInterface</name><parameter_list pos:line="10424" pos:column="50">(<param><type><name pos:line="10424" pos:column="51">This</name></type></param>,<param><type><name pos:line="10424" pos:column="56">riid</name></type></param>,<param><type><name pos:line="10424" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10425" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10427" pos:column="1">#<cpp:directive pos:line="10427" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10427" pos:column="9">_dispDebuggerProcessEvents_AddRef</name><parameter_list pos:line="10427" pos:column="42">(<param><type><name pos:line="10427" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10428" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10430" pos:column="1">#<cpp:directive pos:line="10430" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10430" pos:column="9">_dispDebuggerProcessEvents_Release</name><parameter_list pos:line="10430" pos:column="43">(<param><type><name pos:line="10430" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10431" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10434" pos:column="1">#<cpp:directive pos:line="10434" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10434" pos:column="9">_dispDebuggerProcessEvents_GetTypeInfoCount</name><parameter_list pos:line="10434" pos:column="52">(<param><type><name pos:line="10434" pos:column="53">This</name></type></param>,<param><type><name pos:line="10434" pos:column="58">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10435" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="10437" pos:column="1">#<cpp:directive pos:line="10437" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10437" pos:column="9">_dispDebuggerProcessEvents_GetTypeInfo</name><parameter_list pos:line="10437" pos:column="47">(<param><type><name pos:line="10437" pos:column="48">This</name></type></param>,<param><type><name pos:line="10437" pos:column="53">iTInfo</name></type></param>,<param><type><name pos:line="10437" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="10437" pos:column="65">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10438" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="10440" pos:column="1">#<cpp:directive pos:line="10440" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10440" pos:column="9">_dispDebuggerProcessEvents_GetIDsOfNames</name><parameter_list pos:line="10440" pos:column="49">(<param><type><name pos:line="10440" pos:column="50">This</name></type></param>,<param><type><name pos:line="10440" pos:column="55">riid</name></type></param>,<param><type><name pos:line="10440" pos:column="60">rgszNames</name></type></param>,<param><type><name pos:line="10440" pos:column="70">cNames</name></type></param>,<param><type><name pos:line="10440" pos:column="77">lcid</name></type></param>,<param><type><name pos:line="10440" pos:column="82">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10441" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="10443" pos:column="1">#<cpp:directive pos:line="10443" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10443" pos:column="9">_dispDebuggerProcessEvents_Invoke</name><parameter_list pos:line="10443" pos:column="42">(<param><type><name pos:line="10443" pos:column="43">This</name></type></param>,<param><type><name pos:line="10443" pos:column="48">dispIdMember</name></type></param>,<param><type><name pos:line="10443" pos:column="61">riid</name></type></param>,<param><type><name pos:line="10443" pos:column="66">lcid</name></type></param>,<param><type><name pos:line="10443" pos:column="71">wFlags</name></type></param>,<param><type><name pos:line="10443" pos:column="78">pDispParams</name></type></param>,<param><type><name pos:line="10443" pos:column="90">pVarResult</name></type></param>,<param><type><name pos:line="10443" pos:column="101">pExcepInfo</name></type></param>,<param><type><name pos:line="10443" pos:column="112">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10444" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10446" pos:column="1">#<cpp:directive pos:line="10446" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10446" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10449" pos:column="1">#<cpp:directive pos:line="10449" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10449" pos:column="9">/* C style interface */</comment>


<cpp:endif pos:line="10452" pos:column="1">#<cpp:directive pos:line="10452" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10452" pos:column="9">/* ___dispDebuggerProcessEvents_DISPINTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10455" pos:column="1">#<cpp:directive pos:line="10455" pos:column="2">ifndef</cpp:directive> <name pos:line="10455" pos:column="9">___DebuggerProcessEventsRoot_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10456" pos:column="1">#<cpp:directive pos:line="10456" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10456" pos:column="9">___DebuggerProcessEventsRoot_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10458" pos:column="1">/* interface _DebuggerProcessEventsRoot */</comment>
<comment type="block" pos:line="10459" pos:column="1">/* [version][hidden][object][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="10462" pos:column="1">EXTERN_C</name> <specifier pos:line="10462" pos:column="10">const</specifier> <name pos:line="10462" pos:column="16">IID</name></type> <name pos:line="10462" pos:column="20">IID__DebuggerProcessEventsRoot</name></decl>;</decl_stmt>

<cpp:if pos:line="10464" pos:column="1">#<cpp:directive pos:line="10464" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10464" pos:column="5">defined</name><argument_list pos:line="10464" pos:column="12">(<argument><expr><name pos:line="10464" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10464" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10464" pos:column="29">!</op:operator><call><name pos:line="10464" pos:column="30">defined</name><argument_list pos:line="10464" pos:column="37">(<argument><expr><name pos:line="10464" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10466" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10466" pos:column="19">(<argument pos:line="10466" pos:column="20">"c2eb9070-38b3-404d-bed8-2d5f5d971df5"</argument>)</argument_list></macro>
    <label><name pos:line="10467" pos:column="5">_DebuggerProcessEventsRoot</name> :</label> <expr_stmt><expr pos:line="10467" pos:column="34">public <name pos:line="10467" pos:column="41">IDispatch</name>
    <block pos:line="10468" pos:column="5">{
    <expr pos:line="10469" pos:column="5">public<op:operator pos:line="10469" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="10470" pos:column="17">/* [hidden][propget][id] */</comment> <name pos:line="10470" pos:column="45">HRESULT</name> <name pos:line="10470" pos:column="53">__stdcall</name> <macro><name pos:line="10470" pos:column="63">get_DebuggerProcessEvents</name><argument_list pos:line="10470" pos:column="88">( 
            <comment type="block" pos:line="10471" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10471" pos:column="33">__RPC__deref_out_opt IDispatch **disp</argument>)</argument_list></macro> <op:operator pos:line="10471" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="10471" pos:column="74">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10475" pos:column="1">#<cpp:directive pos:line="10475" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10475" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10477" pos:column="5">typedef <type><struct pos:line="10477" pos:column="13">struct <name pos:line="10477" pos:column="20">_DebuggerProcessEventsRootVtbl</name>
    <block pos:line="10478" pos:column="5">{<public type="default" pos:line="10478" pos:column="6">
        <function_decl><type><name pos:line="10479" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10481" pos:column="9">HRESULT</name></type> ( <name pos:line="10481" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10481" pos:column="37">*</type:modifier><name pos:line="10481" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10481" pos:column="54">( 
            <param><decl><type><name pos:line="10482" pos:column="13">_DebuggerProcessEventsRoot</name> <type:modifier pos:line="10482" pos:column="40">*</type:modifier></type> <name pos:line="10482" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="10483" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10483" pos:column="24">__RPC__in</name> <name pos:line="10483" pos:column="34">REFIID</name></type> <name pos:line="10483" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10484" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10485" pos:column="13">__RPC__deref_out</name>  <name pos:line="10485" pos:column="31">void</name> <type:modifier pos:line="10485" pos:column="36">*</type:modifier><type:modifier pos:line="10485" pos:column="37">*</type:modifier></type><name pos:line="10485" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10487" pos:column="9">ULONG</name></type> ( <name pos:line="10487" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10487" pos:column="35">*</type:modifier><name pos:line="10487" pos:column="36">AddRef</name> )<parameter_list pos:line="10487" pos:column="44">( 
            <param><decl><type><name pos:line="10488" pos:column="13">_DebuggerProcessEventsRoot</name> <type:modifier pos:line="10488" pos:column="40">*</type:modifier></type> <name pos:line="10488" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10490" pos:column="9">ULONG</name></type> ( <name pos:line="10490" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10490" pos:column="35">*</type:modifier><name pos:line="10490" pos:column="36">Release</name> )<parameter_list pos:line="10490" pos:column="45">( 
            <param><decl><type><name pos:line="10491" pos:column="13">_DebuggerProcessEventsRoot</name> <type:modifier pos:line="10491" pos:column="40">*</type:modifier></type> <name pos:line="10491" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10493" pos:column="9">HRESULT</name></type> ( <name pos:line="10493" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10493" pos:column="37">*</type:modifier><name pos:line="10493" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="10493" pos:column="56">( 
            <param><decl><type><name pos:line="10494" pos:column="13">_DebuggerProcessEventsRoot</name> <type:modifier pos:line="10494" pos:column="40">*</type:modifier></type> <name pos:line="10494" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="10495" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10495" pos:column="25">__RPC__out</name> <name pos:line="10495" pos:column="36">UINT</name> <type:modifier pos:line="10495" pos:column="41">*</type:modifier></type><name pos:line="10495" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10497" pos:column="9">HRESULT</name></type> ( <name pos:line="10497" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10497" pos:column="37">*</type:modifier><name pos:line="10497" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="10497" pos:column="51">( 
            <param><decl><type><name pos:line="10498" pos:column="13">_DebuggerProcessEventsRoot</name> <type:modifier pos:line="10498" pos:column="40">*</type:modifier></type> <name pos:line="10498" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="10499" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10499" pos:column="24">UINT</name></type> <name pos:line="10499" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="10500" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10500" pos:column="24">LCID</name></type> <name pos:line="10500" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10501" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10501" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10501" pos:column="46">ITypeInfo</name> <type:modifier pos:line="10501" pos:column="56">*</type:modifier><type:modifier pos:line="10501" pos:column="57">*</type:modifier></type><name pos:line="10501" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10503" pos:column="9">HRESULT</name> <argument_list pos:line="10503" pos:column="17">( <argument pos:line="10503" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="10503" pos:column="53">(</op:operator> 
            <name pos:line="10504" pos:column="13">_DebuggerProcessEventsRoot</name> <op:operator pos:line="10504" pos:column="40">*</op:operator> <name pos:line="10504" pos:column="42">This</name><op:operator pos:line="10504" pos:column="46">,</op:operator>
            <comment type="block" pos:line="10505" pos:column="13">/* [in] */</comment> <name pos:line="10505" pos:column="24">__RPC__in</name> <name pos:line="10505" pos:column="34">REFIID</name> <name pos:line="10505" pos:column="41">riid</name><op:operator pos:line="10505" pos:column="45">,</op:operator>
            <comment type="block" pos:line="10506" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="10506" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="10506" pos:column="54">(<argument pos:line="10506" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="10506" pos:column="63">LPOLESTR</name> <op:operator pos:line="10506" pos:column="72">*</op:operator><name pos:line="10506" pos:column="73">rgszNames</name><op:operator pos:line="10506" pos:column="82">,</op:operator>
            <comment type="block" pos:line="10507" pos:column="13">/* [range][in] */</comment> <name pos:line="10507" pos:column="31">UINT</name> <name pos:line="10507" pos:column="36">cNames</name><op:operator pos:line="10507" pos:column="42">,</op:operator>
            <comment type="block" pos:line="10508" pos:column="13">/* [in] */</comment> <name pos:line="10508" pos:column="24">LCID</name> <name pos:line="10508" pos:column="29">lcid</name><op:operator pos:line="10508" pos:column="33">,</op:operator>
            <comment type="block" pos:line="10509" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="10509" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="10509" pos:column="56">(<argument pos:line="10509" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="10509" pos:column="65">DISPID</name> <op:operator pos:line="10509" pos:column="72">*</op:operator><name pos:line="10509" pos:column="73">rgDispId</name><op:operator pos:line="10509" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="10511" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="10511" pos:column="23">HRESULT</name></type> ( <name pos:line="10511" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="10511" pos:column="51">*</type:modifier><name pos:line="10511" pos:column="52">Invoke</name> )<parameter_list pos:line="10511" pos:column="60">( 
            <param><decl><type><name pos:line="10512" pos:column="13">_DebuggerProcessEventsRoot</name> <type:modifier pos:line="10512" pos:column="40">*</type:modifier></type> <name pos:line="10512" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="10513" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10513" pos:column="24">DISPID</name></type> <name pos:line="10513" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="10514" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10514" pos:column="24">REFIID</name></type> <name pos:line="10514" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="10515" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10515" pos:column="24">LCID</name></type> <name pos:line="10515" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10516" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10516" pos:column="24">WORD</name></type> <name pos:line="10516" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="10517" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="10517" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="10517" pos:column="40">*</type:modifier></type><name pos:line="10517" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="10518" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10518" pos:column="25">VARIANT</name> <type:modifier pos:line="10518" pos:column="33">*</type:modifier></type><name pos:line="10518" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="10519" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10519" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="10519" pos:column="35">*</type:modifier></type><name pos:line="10519" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="10520" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10520" pos:column="25">UINT</name> <type:modifier pos:line="10520" pos:column="30">*</type:modifier></type><name pos:line="10520" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="10522" pos:column="9">/* [hidden][propget][id] */</comment> <function_decl><type><name pos:line="10522" pos:column="37">HRESULT</name></type> ( <name pos:line="10522" pos:column="47">__stdcall</name> <type:modifier pos:line="10522" pos:column="57">*</type:modifier><name pos:line="10522" pos:column="58">get_DebuggerProcessEvents</name> )<parameter_list pos:line="10522" pos:column="85">( 
            <param><decl><type><name pos:line="10523" pos:column="13">_DebuggerProcessEventsRoot</name> <type:modifier pos:line="10523" pos:column="40">*</type:modifier></type> <name pos:line="10523" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="10524" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10524" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="10524" pos:column="54">IDispatch</name> <type:modifier pos:line="10524" pos:column="64">*</type:modifier><type:modifier pos:line="10524" pos:column="65">*</type:modifier></type><name pos:line="10524" pos:column="66">disp</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10526" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10527" pos:column="7">_DebuggerProcessEventsRootVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10529" pos:column="5">interface</name></type> <name pos:line="10529" pos:column="15">_DebuggerProcessEventsRoot</name>
    <argument_list pos:line="10530" pos:column="5">{
        <argument><expr><name pos:line="10531" pos:column="9">CONST_VTBL</name> struct <name pos:line="10531" pos:column="27">_DebuggerProcessEventsRootVtbl</name> <op:operator pos:line="10531" pos:column="58">*</op:operator><name pos:line="10531" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10536" pos:column="1">#<cpp:directive pos:line="10536" pos:column="2">ifdef</cpp:directive> <name pos:line="10536" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10539" pos:column="1">#<cpp:directive pos:line="10539" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10539" pos:column="9">_DebuggerProcessEventsRoot_QueryInterface</name><parameter_list pos:line="10539" pos:column="50">(<param><type><name pos:line="10539" pos:column="51">This</name></type></param>,<param><type><name pos:line="10539" pos:column="56">riid</name></type></param>,<param><type><name pos:line="10539" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10540" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10542" pos:column="1">#<cpp:directive pos:line="10542" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10542" pos:column="9">_DebuggerProcessEventsRoot_AddRef</name><parameter_list pos:line="10542" pos:column="42">(<param><type><name pos:line="10542" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10543" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10545" pos:column="1">#<cpp:directive pos:line="10545" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10545" pos:column="9">_DebuggerProcessEventsRoot_Release</name><parameter_list pos:line="10545" pos:column="43">(<param><type><name pos:line="10545" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10546" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10549" pos:column="1">#<cpp:directive pos:line="10549" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10549" pos:column="9">_DebuggerProcessEventsRoot_GetTypeInfoCount</name><parameter_list pos:line="10549" pos:column="52">(<param><type><name pos:line="10549" pos:column="53">This</name></type></param>,<param><type><name pos:line="10549" pos:column="58">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10550" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="10552" pos:column="1">#<cpp:directive pos:line="10552" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10552" pos:column="9">_DebuggerProcessEventsRoot_GetTypeInfo</name><parameter_list pos:line="10552" pos:column="47">(<param><type><name pos:line="10552" pos:column="48">This</name></type></param>,<param><type><name pos:line="10552" pos:column="53">iTInfo</name></type></param>,<param><type><name pos:line="10552" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="10552" pos:column="65">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10553" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="10555" pos:column="1">#<cpp:directive pos:line="10555" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10555" pos:column="9">_DebuggerProcessEventsRoot_GetIDsOfNames</name><parameter_list pos:line="10555" pos:column="49">(<param><type><name pos:line="10555" pos:column="50">This</name></type></param>,<param><type><name pos:line="10555" pos:column="55">riid</name></type></param>,<param><type><name pos:line="10555" pos:column="60">rgszNames</name></type></param>,<param><type><name pos:line="10555" pos:column="70">cNames</name></type></param>,<param><type><name pos:line="10555" pos:column="77">lcid</name></type></param>,<param><type><name pos:line="10555" pos:column="82">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10556" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="10558" pos:column="1">#<cpp:directive pos:line="10558" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10558" pos:column="9">_DebuggerProcessEventsRoot_Invoke</name><parameter_list pos:line="10558" pos:column="42">(<param><type><name pos:line="10558" pos:column="43">This</name></type></param>,<param><type><name pos:line="10558" pos:column="48">dispIdMember</name></type></param>,<param><type><name pos:line="10558" pos:column="61">riid</name></type></param>,<param><type><name pos:line="10558" pos:column="66">lcid</name></type></param>,<param><type><name pos:line="10558" pos:column="71">wFlags</name></type></param>,<param><type><name pos:line="10558" pos:column="78">pDispParams</name></type></param>,<param><type><name pos:line="10558" pos:column="90">pVarResult</name></type></param>,<param><type><name pos:line="10558" pos:column="101">pExcepInfo</name></type></param>,<param><type><name pos:line="10558" pos:column="112">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10559" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="10562" pos:column="1">#<cpp:directive pos:line="10562" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10562" pos:column="9">_DebuggerProcessEventsRoot_get_DebuggerProcessEvents</name><parameter_list pos:line="10562" pos:column="61">(<param><type><name pos:line="10562" pos:column="62">This</name></type></param>,<param><type><name pos:line="10562" pos:column="67">disp</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10563" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DebuggerProcessEvents(This,disp) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10565" pos:column="1">#<cpp:directive pos:line="10565" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10565" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10568" pos:column="1">#<cpp:directive pos:line="10568" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10568" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10573" pos:column="1">#<cpp:directive pos:line="10573" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10573" pos:column="9">/* ___DebuggerProcessEventsRoot_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10576" pos:column="1">#<cpp:directive pos:line="10576" pos:column="2">ifndef</cpp:directive> <name pos:line="10576" pos:column="9">___DebuggerProcessEvents_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10577" pos:column="1">#<cpp:directive pos:line="10577" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10577" pos:column="9">___DebuggerProcessEvents_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10579" pos:column="1">/* interface _DebuggerProcessEvents */</comment>
<comment type="block" pos:line="10580" pos:column="1">/* [object][helpstringcontext][helpstring][helpcontext][oleautomation][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="10583" pos:column="1">EXTERN_C</name> <specifier pos:line="10583" pos:column="10">const</specifier> <name pos:line="10583" pos:column="16">IID</name></type> <name pos:line="10583" pos:column="20">IID__DebuggerProcessEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="10585" pos:column="1">#<cpp:directive pos:line="10585" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10585" pos:column="5">defined</name><argument_list pos:line="10585" pos:column="12">(<argument><expr><name pos:line="10585" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10585" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10585" pos:column="29">!</op:operator><call><name pos:line="10585" pos:column="30">defined</name><argument_list pos:line="10585" pos:column="37">(<argument><expr><name pos:line="10585" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10587" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10587" pos:column="19">(<argument pos:line="10587" pos:column="20">"ce9ddba3-b23b-4c53-bb3e-5471659289d1"</argument>)</argument_list></macro>
    <label><name pos:line="10588" pos:column="5">_DebuggerProcessEvents</name> :</label> <expr_stmt><expr pos:line="10588" pos:column="30">public <name pos:line="10588" pos:column="37">IDispatch</name>
    <block pos:line="10589" pos:column="5">{
    <expr pos:line="10590" pos:column="5">public<op:operator pos:line="10590" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10593" pos:column="1">#<cpp:directive pos:line="10593" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10593" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10595" pos:column="5">typedef <type><struct pos:line="10595" pos:column="13">struct <name pos:line="10595" pos:column="20">_DebuggerProcessEventsVtbl</name>
    <block pos:line="10596" pos:column="5">{<public type="default" pos:line="10596" pos:column="6">
        <function_decl><type><name pos:line="10597" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10599" pos:column="9">HRESULT</name></type> ( <name pos:line="10599" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10599" pos:column="37">*</type:modifier><name pos:line="10599" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10599" pos:column="54">( 
            <param><decl><type><name pos:line="10600" pos:column="13">_DebuggerProcessEvents</name> <type:modifier pos:line="10600" pos:column="36">*</type:modifier></type> <name pos:line="10600" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="10601" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10601" pos:column="24">__RPC__in</name> <name pos:line="10601" pos:column="34">REFIID</name></type> <name pos:line="10601" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10602" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10603" pos:column="13">__RPC__deref_out</name>  <name pos:line="10603" pos:column="31">void</name> <type:modifier pos:line="10603" pos:column="36">*</type:modifier><type:modifier pos:line="10603" pos:column="37">*</type:modifier></type><name pos:line="10603" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10605" pos:column="9">ULONG</name></type> ( <name pos:line="10605" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10605" pos:column="35">*</type:modifier><name pos:line="10605" pos:column="36">AddRef</name> )<parameter_list pos:line="10605" pos:column="44">( 
            <param><decl><type><name pos:line="10606" pos:column="13">_DebuggerProcessEvents</name> <type:modifier pos:line="10606" pos:column="36">*</type:modifier></type> <name pos:line="10606" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10608" pos:column="9">ULONG</name></type> ( <name pos:line="10608" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10608" pos:column="35">*</type:modifier><name pos:line="10608" pos:column="36">Release</name> )<parameter_list pos:line="10608" pos:column="45">( 
            <param><decl><type><name pos:line="10609" pos:column="13">_DebuggerProcessEvents</name> <type:modifier pos:line="10609" pos:column="36">*</type:modifier></type> <name pos:line="10609" pos:column="38">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10611" pos:column="9">HRESULT</name></type> ( <name pos:line="10611" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10611" pos:column="37">*</type:modifier><name pos:line="10611" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="10611" pos:column="56">( 
            <param><decl><type><name pos:line="10612" pos:column="13">_DebuggerProcessEvents</name> <type:modifier pos:line="10612" pos:column="36">*</type:modifier></type> <name pos:line="10612" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="10613" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10613" pos:column="25">__RPC__out</name> <name pos:line="10613" pos:column="36">UINT</name> <type:modifier pos:line="10613" pos:column="41">*</type:modifier></type><name pos:line="10613" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10615" pos:column="9">HRESULT</name></type> ( <name pos:line="10615" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10615" pos:column="37">*</type:modifier><name pos:line="10615" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="10615" pos:column="51">( 
            <param><decl><type><name pos:line="10616" pos:column="13">_DebuggerProcessEvents</name> <type:modifier pos:line="10616" pos:column="36">*</type:modifier></type> <name pos:line="10616" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="10617" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10617" pos:column="24">UINT</name></type> <name pos:line="10617" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="10618" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10618" pos:column="24">LCID</name></type> <name pos:line="10618" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10619" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10619" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10619" pos:column="46">ITypeInfo</name> <type:modifier pos:line="10619" pos:column="56">*</type:modifier><type:modifier pos:line="10619" pos:column="57">*</type:modifier></type><name pos:line="10619" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10621" pos:column="9">HRESULT</name> <argument_list pos:line="10621" pos:column="17">( <argument pos:line="10621" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="10621" pos:column="53">(</op:operator> 
            <name pos:line="10622" pos:column="13">_DebuggerProcessEvents</name> <op:operator pos:line="10622" pos:column="36">*</op:operator> <name pos:line="10622" pos:column="38">This</name><op:operator pos:line="10622" pos:column="42">,</op:operator>
            <comment type="block" pos:line="10623" pos:column="13">/* [in] */</comment> <name pos:line="10623" pos:column="24">__RPC__in</name> <name pos:line="10623" pos:column="34">REFIID</name> <name pos:line="10623" pos:column="41">riid</name><op:operator pos:line="10623" pos:column="45">,</op:operator>
            <comment type="block" pos:line="10624" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="10624" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="10624" pos:column="54">(<argument pos:line="10624" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="10624" pos:column="63">LPOLESTR</name> <op:operator pos:line="10624" pos:column="72">*</op:operator><name pos:line="10624" pos:column="73">rgszNames</name><op:operator pos:line="10624" pos:column="82">,</op:operator>
            <comment type="block" pos:line="10625" pos:column="13">/* [range][in] */</comment> <name pos:line="10625" pos:column="31">UINT</name> <name pos:line="10625" pos:column="36">cNames</name><op:operator pos:line="10625" pos:column="42">,</op:operator>
            <comment type="block" pos:line="10626" pos:column="13">/* [in] */</comment> <name pos:line="10626" pos:column="24">LCID</name> <name pos:line="10626" pos:column="29">lcid</name><op:operator pos:line="10626" pos:column="33">,</op:operator>
            <comment type="block" pos:line="10627" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="10627" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="10627" pos:column="56">(<argument pos:line="10627" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="10627" pos:column="65">DISPID</name> <op:operator pos:line="10627" pos:column="72">*</op:operator><name pos:line="10627" pos:column="73">rgDispId</name><op:operator pos:line="10627" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="10629" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="10629" pos:column="23">HRESULT</name></type> ( <name pos:line="10629" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="10629" pos:column="51">*</type:modifier><name pos:line="10629" pos:column="52">Invoke</name> )<parameter_list pos:line="10629" pos:column="60">( 
            <param><decl><type><name pos:line="10630" pos:column="13">_DebuggerProcessEvents</name> <type:modifier pos:line="10630" pos:column="36">*</type:modifier></type> <name pos:line="10630" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="10631" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10631" pos:column="24">DISPID</name></type> <name pos:line="10631" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="10632" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10632" pos:column="24">REFIID</name></type> <name pos:line="10632" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="10633" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10633" pos:column="24">LCID</name></type> <name pos:line="10633" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10634" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10634" pos:column="24">WORD</name></type> <name pos:line="10634" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="10635" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="10635" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="10635" pos:column="40">*</type:modifier></type><name pos:line="10635" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="10636" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10636" pos:column="25">VARIANT</name> <type:modifier pos:line="10636" pos:column="33">*</type:modifier></type><name pos:line="10636" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="10637" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10637" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="10637" pos:column="35">*</type:modifier></type><name pos:line="10637" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="10638" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10638" pos:column="25">UINT</name> <type:modifier pos:line="10638" pos:column="30">*</type:modifier></type><name pos:line="10638" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10640" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10641" pos:column="7">_DebuggerProcessEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10643" pos:column="5">interface</name></type> <name pos:line="10643" pos:column="15">_DebuggerProcessEvents</name>
    <argument_list pos:line="10644" pos:column="5">{
        <argument><expr><name pos:line="10645" pos:column="9">CONST_VTBL</name> struct <name pos:line="10645" pos:column="27">_DebuggerProcessEventsVtbl</name> <op:operator pos:line="10645" pos:column="54">*</op:operator><name pos:line="10645" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10650" pos:column="1">#<cpp:directive pos:line="10650" pos:column="2">ifdef</cpp:directive> <name pos:line="10650" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10653" pos:column="1">#<cpp:directive pos:line="10653" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10653" pos:column="9">_DebuggerProcessEvents_QueryInterface</name><parameter_list pos:line="10653" pos:column="46">(<param><type><name pos:line="10653" pos:column="47">This</name></type></param>,<param><type><name pos:line="10653" pos:column="52">riid</name></type></param>,<param><type><name pos:line="10653" pos:column="57">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10654" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10656" pos:column="1">#<cpp:directive pos:line="10656" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10656" pos:column="9">_DebuggerProcessEvents_AddRef</name><parameter_list pos:line="10656" pos:column="38">(<param><type><name pos:line="10656" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10657" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10659" pos:column="1">#<cpp:directive pos:line="10659" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10659" pos:column="9">_DebuggerProcessEvents_Release</name><parameter_list pos:line="10659" pos:column="39">(<param><type><name pos:line="10659" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10660" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10663" pos:column="1">#<cpp:directive pos:line="10663" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10663" pos:column="9">_DebuggerProcessEvents_GetTypeInfoCount</name><parameter_list pos:line="10663" pos:column="48">(<param><type><name pos:line="10663" pos:column="49">This</name></type></param>,<param><type><name pos:line="10663" pos:column="54">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10664" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="10666" pos:column="1">#<cpp:directive pos:line="10666" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10666" pos:column="9">_DebuggerProcessEvents_GetTypeInfo</name><parameter_list pos:line="10666" pos:column="43">(<param><type><name pos:line="10666" pos:column="44">This</name></type></param>,<param><type><name pos:line="10666" pos:column="49">iTInfo</name></type></param>,<param><type><name pos:line="10666" pos:column="56">lcid</name></type></param>,<param><type><name pos:line="10666" pos:column="61">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10667" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="10669" pos:column="1">#<cpp:directive pos:line="10669" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10669" pos:column="9">_DebuggerProcessEvents_GetIDsOfNames</name><parameter_list pos:line="10669" pos:column="45">(<param><type><name pos:line="10669" pos:column="46">This</name></type></param>,<param><type><name pos:line="10669" pos:column="51">riid</name></type></param>,<param><type><name pos:line="10669" pos:column="56">rgszNames</name></type></param>,<param><type><name pos:line="10669" pos:column="66">cNames</name></type></param>,<param><type><name pos:line="10669" pos:column="73">lcid</name></type></param>,<param><type><name pos:line="10669" pos:column="78">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10670" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="10672" pos:column="1">#<cpp:directive pos:line="10672" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10672" pos:column="9">_DebuggerProcessEvents_Invoke</name><parameter_list pos:line="10672" pos:column="38">(<param><type><name pos:line="10672" pos:column="39">This</name></type></param>,<param><type><name pos:line="10672" pos:column="44">dispIdMember</name></type></param>,<param><type><name pos:line="10672" pos:column="57">riid</name></type></param>,<param><type><name pos:line="10672" pos:column="62">lcid</name></type></param>,<param><type><name pos:line="10672" pos:column="67">wFlags</name></type></param>,<param><type><name pos:line="10672" pos:column="74">pDispParams</name></type></param>,<param><type><name pos:line="10672" pos:column="86">pVarResult</name></type></param>,<param><type><name pos:line="10672" pos:column="97">pExcepInfo</name></type></param>,<param><type><name pos:line="10672" pos:column="108">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10673" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:endif pos:line="10676" pos:column="1">#<cpp:directive pos:line="10676" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10676" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10679" pos:column="1">#<cpp:directive pos:line="10679" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10679" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10684" pos:column="1">#<cpp:directive pos:line="10684" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10684" pos:column="9">/* ___DebuggerProcessEvents_INTERFACE_DEFINED__ */</comment>


<decl_stmt><decl><type><name pos:line="10687" pos:column="1">EXTERN_C</name> <specifier pos:line="10687" pos:column="10">const</specifier> <name pos:line="10687" pos:column="16">CLSID</name></type> <name pos:line="10687" pos:column="22">CLSID_DebuggerProcessEvents</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="10689" pos:column="1">#<cpp:directive pos:line="10689" pos:column="2">ifdef</cpp:directive> <name pos:line="10689" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="10691" pos:column="1">class</type> <name pos:line="10691" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="10691" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="10691" pos:column="21">"d14b8b85-e4a8-42f8-b486-8a14dc74adeb"</lit:literal></expr></argument>)</argument_list>
<name pos:line="10692" pos:column="1">DebuggerProcessEvents</name></decl>;</decl_stmt>
<cpp:endif pos:line="10693" pos:column="1">#<cpp:directive pos:line="10693" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:ifndef pos:line="10695" pos:column="1">#<cpp:directive pos:line="10695" pos:column="2">ifndef</cpp:directive> <name pos:line="10695" pos:column="9">___dispDebuggerExpressionEvaluationEvents_DISPINTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10696" pos:column="1">#<cpp:directive pos:line="10696" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10696" pos:column="9">___dispDebuggerExpressionEvaluationEvents_DISPINTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10698" pos:column="1">/* dispinterface _dispDebuggerExpressionEvaluationEvents */</comment>
<comment type="block" pos:line="10699" pos:column="1">/* [version][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="10702" pos:column="1">EXTERN_C</name> <specifier pos:line="10702" pos:column="10">const</specifier> <name pos:line="10702" pos:column="16">IID</name></type> <name pos:line="10702" pos:column="20">DIID__dispDebuggerExpressionEvaluationEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="10704" pos:column="1">#<cpp:directive pos:line="10704" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10704" pos:column="5">defined</name><argument_list pos:line="10704" pos:column="12">(<argument><expr><name pos:line="10704" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10704" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10704" pos:column="29">!</op:operator><call><name pos:line="10704" pos:column="30">defined</name><argument_list pos:line="10704" pos:column="37">(<argument><expr><name pos:line="10704" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <macro><name pos:line="10706" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10706" pos:column="19">(<argument pos:line="10706" pos:column="20">"73ffa13f-ad72-4154-be77-d4288f2e4fc5"</argument>)</argument_list></macro>
    <label><name pos:line="10707" pos:column="5">_dispDebuggerExpressionEvaluationEvents</name> :</label> <expr_stmt><expr pos:line="10707" pos:column="47">public <name pos:line="10707" pos:column="54">IDispatch</name>
    <block pos:line="10708" pos:column="5">{
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10711" pos:column="1">#<cpp:directive pos:line="10711" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10711" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10713" pos:column="5">typedef <type><struct pos:line="10713" pos:column="13">struct <name pos:line="10713" pos:column="20">_dispDebuggerExpressionEvaluationEventsVtbl</name>
    <block pos:line="10714" pos:column="5">{<public type="default" pos:line="10714" pos:column="6">
        <function_decl><type><name pos:line="10715" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10717" pos:column="9">HRESULT</name></type> ( <name pos:line="10717" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10717" pos:column="37">*</type:modifier><name pos:line="10717" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10717" pos:column="54">( 
            <param><decl><type><name pos:line="10718" pos:column="13">_dispDebuggerExpressionEvaluationEvents</name> <type:modifier pos:line="10718" pos:column="53">*</type:modifier></type> <name pos:line="10718" pos:column="55">This</name></decl></param>,
            <comment type="block" pos:line="10719" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10719" pos:column="24">__RPC__in</name> <name pos:line="10719" pos:column="34">REFIID</name></type> <name pos:line="10719" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10720" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10721" pos:column="13">__RPC__deref_out</name>  <name pos:line="10721" pos:column="31">void</name> <type:modifier pos:line="10721" pos:column="36">*</type:modifier><type:modifier pos:line="10721" pos:column="37">*</type:modifier></type><name pos:line="10721" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10723" pos:column="9">ULONG</name></type> ( <name pos:line="10723" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10723" pos:column="35">*</type:modifier><name pos:line="10723" pos:column="36">AddRef</name> )<parameter_list pos:line="10723" pos:column="44">( 
            <param><decl><type><name pos:line="10724" pos:column="13">_dispDebuggerExpressionEvaluationEvents</name> <type:modifier pos:line="10724" pos:column="53">*</type:modifier></type> <name pos:line="10724" pos:column="55">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10726" pos:column="9">ULONG</name></type> ( <name pos:line="10726" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10726" pos:column="35">*</type:modifier><name pos:line="10726" pos:column="36">Release</name> )<parameter_list pos:line="10726" pos:column="45">( 
            <param><decl><type><name pos:line="10727" pos:column="13">_dispDebuggerExpressionEvaluationEvents</name> <type:modifier pos:line="10727" pos:column="53">*</type:modifier></type> <name pos:line="10727" pos:column="55">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10729" pos:column="9">HRESULT</name></type> ( <name pos:line="10729" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10729" pos:column="37">*</type:modifier><name pos:line="10729" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="10729" pos:column="56">( 
            <param><decl><type><name pos:line="10730" pos:column="13">_dispDebuggerExpressionEvaluationEvents</name> <type:modifier pos:line="10730" pos:column="53">*</type:modifier></type> <name pos:line="10730" pos:column="55">This</name></decl></param>,
            <comment type="block" pos:line="10731" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10731" pos:column="25">__RPC__out</name> <name pos:line="10731" pos:column="36">UINT</name> <type:modifier pos:line="10731" pos:column="41">*</type:modifier></type><name pos:line="10731" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10733" pos:column="9">HRESULT</name></type> ( <name pos:line="10733" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10733" pos:column="37">*</type:modifier><name pos:line="10733" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="10733" pos:column="51">( 
            <param><decl><type><name pos:line="10734" pos:column="13">_dispDebuggerExpressionEvaluationEvents</name> <type:modifier pos:line="10734" pos:column="53">*</type:modifier></type> <name pos:line="10734" pos:column="55">This</name></decl></param>,
            <comment type="block" pos:line="10735" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10735" pos:column="24">UINT</name></type> <name pos:line="10735" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="10736" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10736" pos:column="24">LCID</name></type> <name pos:line="10736" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10737" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10737" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10737" pos:column="46">ITypeInfo</name> <type:modifier pos:line="10737" pos:column="56">*</type:modifier><type:modifier pos:line="10737" pos:column="57">*</type:modifier></type><name pos:line="10737" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10739" pos:column="9">HRESULT</name> <argument_list pos:line="10739" pos:column="17">( <argument pos:line="10739" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="10739" pos:column="53">(</op:operator> 
            <name pos:line="10740" pos:column="13">_dispDebuggerExpressionEvaluationEvents</name> <op:operator pos:line="10740" pos:column="53">*</op:operator> <name pos:line="10740" pos:column="55">This</name><op:operator pos:line="10740" pos:column="59">,</op:operator>
            <comment type="block" pos:line="10741" pos:column="13">/* [in] */</comment> <name pos:line="10741" pos:column="24">__RPC__in</name> <name pos:line="10741" pos:column="34">REFIID</name> <name pos:line="10741" pos:column="41">riid</name><op:operator pos:line="10741" pos:column="45">,</op:operator>
            <comment type="block" pos:line="10742" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="10742" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="10742" pos:column="54">(<argument pos:line="10742" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="10742" pos:column="63">LPOLESTR</name> <op:operator pos:line="10742" pos:column="72">*</op:operator><name pos:line="10742" pos:column="73">rgszNames</name><op:operator pos:line="10742" pos:column="82">,</op:operator>
            <comment type="block" pos:line="10743" pos:column="13">/* [range][in] */</comment> <name pos:line="10743" pos:column="31">UINT</name> <name pos:line="10743" pos:column="36">cNames</name><op:operator pos:line="10743" pos:column="42">,</op:operator>
            <comment type="block" pos:line="10744" pos:column="13">/* [in] */</comment> <name pos:line="10744" pos:column="24">LCID</name> <name pos:line="10744" pos:column="29">lcid</name><op:operator pos:line="10744" pos:column="33">,</op:operator>
            <comment type="block" pos:line="10745" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="10745" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="10745" pos:column="56">(<argument pos:line="10745" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="10745" pos:column="65">DISPID</name> <op:operator pos:line="10745" pos:column="72">*</op:operator><name pos:line="10745" pos:column="73">rgDispId</name><op:operator pos:line="10745" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="10747" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="10747" pos:column="23">HRESULT</name></type> ( <name pos:line="10747" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="10747" pos:column="51">*</type:modifier><name pos:line="10747" pos:column="52">Invoke</name> )<parameter_list pos:line="10747" pos:column="60">( 
            <param><decl><type><name pos:line="10748" pos:column="13">_dispDebuggerExpressionEvaluationEvents</name> <type:modifier pos:line="10748" pos:column="53">*</type:modifier></type> <name pos:line="10748" pos:column="55">This</name></decl></param>,
            <comment type="block" pos:line="10749" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10749" pos:column="24">DISPID</name></type> <name pos:line="10749" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="10750" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10750" pos:column="24">REFIID</name></type> <name pos:line="10750" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="10751" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10751" pos:column="24">LCID</name></type> <name pos:line="10751" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10752" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10752" pos:column="24">WORD</name></type> <name pos:line="10752" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="10753" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="10753" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="10753" pos:column="40">*</type:modifier></type><name pos:line="10753" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="10754" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10754" pos:column="25">VARIANT</name> <type:modifier pos:line="10754" pos:column="33">*</type:modifier></type><name pos:line="10754" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="10755" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10755" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="10755" pos:column="35">*</type:modifier></type><name pos:line="10755" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="10756" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10756" pos:column="25">UINT</name> <type:modifier pos:line="10756" pos:column="30">*</type:modifier></type><name pos:line="10756" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10758" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10759" pos:column="7">_dispDebuggerExpressionEvaluationEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10761" pos:column="5">interface</name></type> <name pos:line="10761" pos:column="15">_dispDebuggerExpressionEvaluationEvents</name>
    <argument_list pos:line="10762" pos:column="5">{
        <argument><expr><name pos:line="10763" pos:column="9">CONST_VTBL</name> struct <name pos:line="10763" pos:column="27">_dispDebuggerExpressionEvaluationEventsVtbl</name> <op:operator pos:line="10763" pos:column="71">*</op:operator><name pos:line="10763" pos:column="72">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10768" pos:column="1">#<cpp:directive pos:line="10768" pos:column="2">ifdef</cpp:directive> <name pos:line="10768" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10771" pos:column="1">#<cpp:directive pos:line="10771" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10771" pos:column="9">_dispDebuggerExpressionEvaluationEvents_QueryInterface</name><parameter_list pos:line="10771" pos:column="63">(<param><type><name pos:line="10771" pos:column="64">This</name></type></param>,<param><type><name pos:line="10771" pos:column="69">riid</name></type></param>,<param><type><name pos:line="10771" pos:column="74">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10772" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10774" pos:column="1">#<cpp:directive pos:line="10774" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10774" pos:column="9">_dispDebuggerExpressionEvaluationEvents_AddRef</name><parameter_list pos:line="10774" pos:column="55">(<param><type><name pos:line="10774" pos:column="56">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10775" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10777" pos:column="1">#<cpp:directive pos:line="10777" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10777" pos:column="9">_dispDebuggerExpressionEvaluationEvents_Release</name><parameter_list pos:line="10777" pos:column="56">(<param><type><name pos:line="10777" pos:column="57">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10778" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10781" pos:column="1">#<cpp:directive pos:line="10781" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10781" pos:column="9">_dispDebuggerExpressionEvaluationEvents_GetTypeInfoCount</name><parameter_list pos:line="10781" pos:column="65">(<param><type><name pos:line="10781" pos:column="66">This</name></type></param>,<param><type><name pos:line="10781" pos:column="71">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10782" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="10784" pos:column="1">#<cpp:directive pos:line="10784" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10784" pos:column="9">_dispDebuggerExpressionEvaluationEvents_GetTypeInfo</name><parameter_list pos:line="10784" pos:column="60">(<param><type><name pos:line="10784" pos:column="61">This</name></type></param>,<param><type><name pos:line="10784" pos:column="66">iTInfo</name></type></param>,<param><type><name pos:line="10784" pos:column="73">lcid</name></type></param>,<param><type><name pos:line="10784" pos:column="78">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10785" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="10787" pos:column="1">#<cpp:directive pos:line="10787" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10787" pos:column="9">_dispDebuggerExpressionEvaluationEvents_GetIDsOfNames</name><parameter_list pos:line="10787" pos:column="62">(<param><type><name pos:line="10787" pos:column="63">This</name></type></param>,<param><type><name pos:line="10787" pos:column="68">riid</name></type></param>,<param><type><name pos:line="10787" pos:column="73">rgszNames</name></type></param>,<param><type><name pos:line="10787" pos:column="83">cNames</name></type></param>,<param><type><name pos:line="10787" pos:column="90">lcid</name></type></param>,<param><type><name pos:line="10787" pos:column="95">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10788" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="10790" pos:column="1">#<cpp:directive pos:line="10790" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10790" pos:column="9">_dispDebuggerExpressionEvaluationEvents_Invoke</name><parameter_list pos:line="10790" pos:column="55">(<param><type><name pos:line="10790" pos:column="56">This</name></type></param>,<param><type><name pos:line="10790" pos:column="61">dispIdMember</name></type></param>,<param><type><name pos:line="10790" pos:column="74">riid</name></type></param>,<param><type><name pos:line="10790" pos:column="79">lcid</name></type></param>,<param><type><name pos:line="10790" pos:column="84">wFlags</name></type></param>,<param><type><name pos:line="10790" pos:column="91">pDispParams</name></type></param>,<param><type><name pos:line="10790" pos:column="103">pVarResult</name></type></param>,<param><type><name pos:line="10790" pos:column="114">pExcepInfo</name></type></param>,<param><type><name pos:line="10790" pos:column="125">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10791" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 

<cpp:endif pos:line="10793" pos:column="1">#<cpp:directive pos:line="10793" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10793" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10796" pos:column="1">#<cpp:directive pos:line="10796" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10796" pos:column="9">/* C style interface */</comment>


<cpp:endif pos:line="10799" pos:column="1">#<cpp:directive pos:line="10799" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10799" pos:column="9">/* ___dispDebuggerExpressionEvaluationEvents_DISPINTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10802" pos:column="1">#<cpp:directive pos:line="10802" pos:column="2">ifndef</cpp:directive> <name pos:line="10802" pos:column="9">___DebuggerExpressionEvaluationEvents_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10803" pos:column="1">#<cpp:directive pos:line="10803" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10803" pos:column="9">___DebuggerExpressionEvaluationEvents_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10805" pos:column="1">/* interface _DebuggerExpressionEvaluationEvents */</comment>
<comment type="block" pos:line="10806" pos:column="1">/* [object][helpstringcontext][helpstring][helpcontext][oleautomation][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="10809" pos:column="1">EXTERN_C</name> <specifier pos:line="10809" pos:column="10">const</specifier> <name pos:line="10809" pos:column="16">IID</name></type> <name pos:line="10809" pos:column="20">IID__DebuggerExpressionEvaluationEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="10811" pos:column="1">#<cpp:directive pos:line="10811" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10811" pos:column="5">defined</name><argument_list pos:line="10811" pos:column="12">(<argument><expr><name pos:line="10811" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10811" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10811" pos:column="29">!</op:operator><call><name pos:line="10811" pos:column="30">defined</name><argument_list pos:line="10811" pos:column="37">(<argument><expr><name pos:line="10811" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10813" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10813" pos:column="19">(<argument pos:line="10813" pos:column="20">"6973a466-e09c-4195-9ae8-07b7aaff7d85"</argument>)</argument_list></macro>
    <label><name pos:line="10814" pos:column="5">_DebuggerExpressionEvaluationEvents</name> :</label> <expr_stmt><expr pos:line="10814" pos:column="43">public <name pos:line="10814" pos:column="50">IDispatch</name>
    <block pos:line="10815" pos:column="5">{
    <expr pos:line="10816" pos:column="5">public<op:operator pos:line="10816" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10819" pos:column="1">#<cpp:directive pos:line="10819" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10819" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10821" pos:column="5">typedef <type><struct pos:line="10821" pos:column="13">struct <name pos:line="10821" pos:column="20">_DebuggerExpressionEvaluationEventsVtbl</name>
    <block pos:line="10822" pos:column="5">{<public type="default" pos:line="10822" pos:column="6">
        <function_decl><type><name pos:line="10823" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10825" pos:column="9">HRESULT</name></type> ( <name pos:line="10825" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10825" pos:column="37">*</type:modifier><name pos:line="10825" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10825" pos:column="54">( 
            <param><decl><type><name pos:line="10826" pos:column="13">_DebuggerExpressionEvaluationEvents</name> <type:modifier pos:line="10826" pos:column="49">*</type:modifier></type> <name pos:line="10826" pos:column="51">This</name></decl></param>,
            <comment type="block" pos:line="10827" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10827" pos:column="24">__RPC__in</name> <name pos:line="10827" pos:column="34">REFIID</name></type> <name pos:line="10827" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10828" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10829" pos:column="13">__RPC__deref_out</name>  <name pos:line="10829" pos:column="31">void</name> <type:modifier pos:line="10829" pos:column="36">*</type:modifier><type:modifier pos:line="10829" pos:column="37">*</type:modifier></type><name pos:line="10829" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10831" pos:column="9">ULONG</name></type> ( <name pos:line="10831" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10831" pos:column="35">*</type:modifier><name pos:line="10831" pos:column="36">AddRef</name> )<parameter_list pos:line="10831" pos:column="44">( 
            <param><decl><type><name pos:line="10832" pos:column="13">_DebuggerExpressionEvaluationEvents</name> <type:modifier pos:line="10832" pos:column="49">*</type:modifier></type> <name pos:line="10832" pos:column="51">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10834" pos:column="9">ULONG</name></type> ( <name pos:line="10834" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10834" pos:column="35">*</type:modifier><name pos:line="10834" pos:column="36">Release</name> )<parameter_list pos:line="10834" pos:column="45">( 
            <param><decl><type><name pos:line="10835" pos:column="13">_DebuggerExpressionEvaluationEvents</name> <type:modifier pos:line="10835" pos:column="49">*</type:modifier></type> <name pos:line="10835" pos:column="51">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10837" pos:column="9">HRESULT</name></type> ( <name pos:line="10837" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10837" pos:column="37">*</type:modifier><name pos:line="10837" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="10837" pos:column="56">( 
            <param><decl><type><name pos:line="10838" pos:column="13">_DebuggerExpressionEvaluationEvents</name> <type:modifier pos:line="10838" pos:column="49">*</type:modifier></type> <name pos:line="10838" pos:column="51">This</name></decl></param>,
            <comment type="block" pos:line="10839" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10839" pos:column="25">__RPC__out</name> <name pos:line="10839" pos:column="36">UINT</name> <type:modifier pos:line="10839" pos:column="41">*</type:modifier></type><name pos:line="10839" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10841" pos:column="9">HRESULT</name></type> ( <name pos:line="10841" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10841" pos:column="37">*</type:modifier><name pos:line="10841" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="10841" pos:column="51">( 
            <param><decl><type><name pos:line="10842" pos:column="13">_DebuggerExpressionEvaluationEvents</name> <type:modifier pos:line="10842" pos:column="49">*</type:modifier></type> <name pos:line="10842" pos:column="51">This</name></decl></param>,
            <comment type="block" pos:line="10843" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10843" pos:column="24">UINT</name></type> <name pos:line="10843" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="10844" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10844" pos:column="24">LCID</name></type> <name pos:line="10844" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10845" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10845" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10845" pos:column="46">ITypeInfo</name> <type:modifier pos:line="10845" pos:column="56">*</type:modifier><type:modifier pos:line="10845" pos:column="57">*</type:modifier></type><name pos:line="10845" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10847" pos:column="9">HRESULT</name> <argument_list pos:line="10847" pos:column="17">( <argument pos:line="10847" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="10847" pos:column="53">(</op:operator> 
            <name pos:line="10848" pos:column="13">_DebuggerExpressionEvaluationEvents</name> <op:operator pos:line="10848" pos:column="49">*</op:operator> <name pos:line="10848" pos:column="51">This</name><op:operator pos:line="10848" pos:column="55">,</op:operator>
            <comment type="block" pos:line="10849" pos:column="13">/* [in] */</comment> <name pos:line="10849" pos:column="24">__RPC__in</name> <name pos:line="10849" pos:column="34">REFIID</name> <name pos:line="10849" pos:column="41">riid</name><op:operator pos:line="10849" pos:column="45">,</op:operator>
            <comment type="block" pos:line="10850" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="10850" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="10850" pos:column="54">(<argument pos:line="10850" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="10850" pos:column="63">LPOLESTR</name> <op:operator pos:line="10850" pos:column="72">*</op:operator><name pos:line="10850" pos:column="73">rgszNames</name><op:operator pos:line="10850" pos:column="82">,</op:operator>
            <comment type="block" pos:line="10851" pos:column="13">/* [range][in] */</comment> <name pos:line="10851" pos:column="31">UINT</name> <name pos:line="10851" pos:column="36">cNames</name><op:operator pos:line="10851" pos:column="42">,</op:operator>
            <comment type="block" pos:line="10852" pos:column="13">/* [in] */</comment> <name pos:line="10852" pos:column="24">LCID</name> <name pos:line="10852" pos:column="29">lcid</name><op:operator pos:line="10852" pos:column="33">,</op:operator>
            <comment type="block" pos:line="10853" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="10853" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="10853" pos:column="56">(<argument pos:line="10853" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="10853" pos:column="65">DISPID</name> <op:operator pos:line="10853" pos:column="72">*</op:operator><name pos:line="10853" pos:column="73">rgDispId</name><op:operator pos:line="10853" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="10855" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="10855" pos:column="23">HRESULT</name></type> ( <name pos:line="10855" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="10855" pos:column="51">*</type:modifier><name pos:line="10855" pos:column="52">Invoke</name> )<parameter_list pos:line="10855" pos:column="60">( 
            <param><decl><type><name pos:line="10856" pos:column="13">_DebuggerExpressionEvaluationEvents</name> <type:modifier pos:line="10856" pos:column="49">*</type:modifier></type> <name pos:line="10856" pos:column="51">This</name></decl></param>,
            <comment type="block" pos:line="10857" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10857" pos:column="24">DISPID</name></type> <name pos:line="10857" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="10858" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10858" pos:column="24">REFIID</name></type> <name pos:line="10858" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="10859" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10859" pos:column="24">LCID</name></type> <name pos:line="10859" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10860" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10860" pos:column="24">WORD</name></type> <name pos:line="10860" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="10861" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="10861" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="10861" pos:column="40">*</type:modifier></type><name pos:line="10861" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="10862" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10862" pos:column="25">VARIANT</name> <type:modifier pos:line="10862" pos:column="33">*</type:modifier></type><name pos:line="10862" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="10863" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10863" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="10863" pos:column="35">*</type:modifier></type><name pos:line="10863" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="10864" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10864" pos:column="25">UINT</name> <type:modifier pos:line="10864" pos:column="30">*</type:modifier></type><name pos:line="10864" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10866" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10867" pos:column="7">_DebuggerExpressionEvaluationEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10869" pos:column="5">interface</name></type> <name pos:line="10869" pos:column="15">_DebuggerExpressionEvaluationEvents</name>
    <argument_list pos:line="10870" pos:column="5">{
        <argument><expr><name pos:line="10871" pos:column="9">CONST_VTBL</name> struct <name pos:line="10871" pos:column="27">_DebuggerExpressionEvaluationEventsVtbl</name> <op:operator pos:line="10871" pos:column="67">*</op:operator><name pos:line="10871" pos:column="68">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10876" pos:column="1">#<cpp:directive pos:line="10876" pos:column="2">ifdef</cpp:directive> <name pos:line="10876" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10879" pos:column="1">#<cpp:directive pos:line="10879" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10879" pos:column="9">_DebuggerExpressionEvaluationEvents_QueryInterface</name><parameter_list pos:line="10879" pos:column="59">(<param><type><name pos:line="10879" pos:column="60">This</name></type></param>,<param><type><name pos:line="10879" pos:column="65">riid</name></type></param>,<param><type><name pos:line="10879" pos:column="70">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10880" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="10882" pos:column="1">#<cpp:directive pos:line="10882" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10882" pos:column="9">_DebuggerExpressionEvaluationEvents_AddRef</name><parameter_list pos:line="10882" pos:column="51">(<param><type><name pos:line="10882" pos:column="52">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10883" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="10885" pos:column="1">#<cpp:directive pos:line="10885" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10885" pos:column="9">_DebuggerExpressionEvaluationEvents_Release</name><parameter_list pos:line="10885" pos:column="52">(<param><type><name pos:line="10885" pos:column="53">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10886" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="10889" pos:column="1">#<cpp:directive pos:line="10889" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10889" pos:column="9">_DebuggerExpressionEvaluationEvents_GetTypeInfoCount</name><parameter_list pos:line="10889" pos:column="61">(<param><type><name pos:line="10889" pos:column="62">This</name></type></param>,<param><type><name pos:line="10889" pos:column="67">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10890" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="10892" pos:column="1">#<cpp:directive pos:line="10892" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10892" pos:column="9">_DebuggerExpressionEvaluationEvents_GetTypeInfo</name><parameter_list pos:line="10892" pos:column="56">(<param><type><name pos:line="10892" pos:column="57">This</name></type></param>,<param><type><name pos:line="10892" pos:column="62">iTInfo</name></type></param>,<param><type><name pos:line="10892" pos:column="69">lcid</name></type></param>,<param><type><name pos:line="10892" pos:column="74">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10893" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="10895" pos:column="1">#<cpp:directive pos:line="10895" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10895" pos:column="9">_DebuggerExpressionEvaluationEvents_GetIDsOfNames</name><parameter_list pos:line="10895" pos:column="58">(<param><type><name pos:line="10895" pos:column="59">This</name></type></param>,<param><type><name pos:line="10895" pos:column="64">riid</name></type></param>,<param><type><name pos:line="10895" pos:column="69">rgszNames</name></type></param>,<param><type><name pos:line="10895" pos:column="79">cNames</name></type></param>,<param><type><name pos:line="10895" pos:column="86">lcid</name></type></param>,<param><type><name pos:line="10895" pos:column="91">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10896" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="10898" pos:column="1">#<cpp:directive pos:line="10898" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10898" pos:column="9">_DebuggerExpressionEvaluationEvents_Invoke</name><parameter_list pos:line="10898" pos:column="51">(<param><type><name pos:line="10898" pos:column="52">This</name></type></param>,<param><type><name pos:line="10898" pos:column="57">dispIdMember</name></type></param>,<param><type><name pos:line="10898" pos:column="70">riid</name></type></param>,<param><type><name pos:line="10898" pos:column="75">lcid</name></type></param>,<param><type><name pos:line="10898" pos:column="80">wFlags</name></type></param>,<param><type><name pos:line="10898" pos:column="87">pDispParams</name></type></param>,<param><type><name pos:line="10898" pos:column="99">pVarResult</name></type></param>,<param><type><name pos:line="10898" pos:column="110">pExcepInfo</name></type></param>,<param><type><name pos:line="10898" pos:column="121">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10899" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:endif pos:line="10902" pos:column="1">#<cpp:directive pos:line="10902" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="10902" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="10905" pos:column="1">#<cpp:directive pos:line="10905" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10905" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="10910" pos:column="1">#<cpp:directive pos:line="10910" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="10910" pos:column="9">/* ___DebuggerExpressionEvaluationEvents_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="10913" pos:column="1">#<cpp:directive pos:line="10913" pos:column="2">ifndef</cpp:directive> <name pos:line="10913" pos:column="9">___DebuggerExpressionEvaluationEventsRoot_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="10914" pos:column="1">#<cpp:directive pos:line="10914" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10914" pos:column="9">___DebuggerExpressionEvaluationEventsRoot_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="10916" pos:column="1">/* interface _DebuggerExpressionEvaluationEventsRoot */</comment>
<comment type="block" pos:line="10917" pos:column="1">/* [version][hidden][object][dual][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="10920" pos:column="1">EXTERN_C</name> <specifier pos:line="10920" pos:column="10">const</specifier> <name pos:line="10920" pos:column="16">IID</name></type> <name pos:line="10920" pos:column="20">IID__DebuggerExpressionEvaluationEventsRoot</name></decl>;</decl_stmt>

<cpp:if pos:line="10922" pos:column="1">#<cpp:directive pos:line="10922" pos:column="2">if</cpp:directive> <expr><call><name pos:line="10922" pos:column="5">defined</name><argument_list pos:line="10922" pos:column="12">(<argument><expr><name pos:line="10922" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="10922" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="10922" pos:column="29">!</op:operator><call><name pos:line="10922" pos:column="30">defined</name><argument_list pos:line="10922" pos:column="37">(<argument><expr><name pos:line="10922" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="10924" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="10924" pos:column="19">(<argument pos:line="10924" pos:column="20">"45ae9835-6090-4cca-97e0-5ea9a5608fbe"</argument>)</argument_list></macro>
    <label><name pos:line="10925" pos:column="5">_DebuggerExpressionEvaluationEventsRoot</name> :</label> <expr_stmt><expr pos:line="10925" pos:column="47">public <name pos:line="10925" pos:column="54">IDispatch</name>
    <block pos:line="10926" pos:column="5">{
    <expr pos:line="10927" pos:column="5">public<op:operator pos:line="10927" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="10928" pos:column="17">/* [hidden][propget][id] */</comment> <name pos:line="10928" pos:column="45">HRESULT</name> <name pos:line="10928" pos:column="53">__stdcall</name> <macro><name pos:line="10928" pos:column="63">get_DebuggerExpressionEvaluationEvents</name><argument_list pos:line="10928" pos:column="101">( 
            <comment type="block" pos:line="10929" pos:column="13">/* [retval][out] */</comment> <argument pos:line="10929" pos:column="33">__RPC__deref_out_opt IDispatch **disp</argument>)</argument_list></macro> <op:operator pos:line="10929" pos:column="72">=</op:operator> <lit:literal type="number" pos:line="10929" pos:column="74">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="10933" pos:column="1">#<cpp:directive pos:line="10933" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="10933" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="10935" pos:column="5">typedef <type><struct pos:line="10935" pos:column="13">struct <name pos:line="10935" pos:column="20">_DebuggerExpressionEvaluationEventsRootVtbl</name>
    <block pos:line="10936" pos:column="5">{<public type="default" pos:line="10936" pos:column="6">
        <function_decl><type><name pos:line="10937" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="10939" pos:column="9">HRESULT</name></type> ( <name pos:line="10939" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10939" pos:column="37">*</type:modifier><name pos:line="10939" pos:column="38">QueryInterface</name> )<parameter_list pos:line="10939" pos:column="54">( 
            <param><decl><type><name pos:line="10940" pos:column="13">_DebuggerExpressionEvaluationEventsRoot</name> <type:modifier pos:line="10940" pos:column="53">*</type:modifier></type> <name pos:line="10940" pos:column="55">This</name></decl></param>,
            <comment type="block" pos:line="10941" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10941" pos:column="24">__RPC__in</name> <name pos:line="10941" pos:column="34">REFIID</name></type> <name pos:line="10941" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="10942" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="10943" pos:column="13">__RPC__deref_out</name>  <name pos:line="10943" pos:column="31">void</name> <type:modifier pos:line="10943" pos:column="36">*</type:modifier><type:modifier pos:line="10943" pos:column="37">*</type:modifier></type><name pos:line="10943" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10945" pos:column="9">ULONG</name></type> ( <name pos:line="10945" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10945" pos:column="35">*</type:modifier><name pos:line="10945" pos:column="36">AddRef</name> )<parameter_list pos:line="10945" pos:column="44">( 
            <param><decl><type><name pos:line="10946" pos:column="13">_DebuggerExpressionEvaluationEventsRoot</name> <type:modifier pos:line="10946" pos:column="53">*</type:modifier></type> <name pos:line="10946" pos:column="55">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10948" pos:column="9">ULONG</name></type> ( <name pos:line="10948" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="10948" pos:column="35">*</type:modifier><name pos:line="10948" pos:column="36">Release</name> )<parameter_list pos:line="10948" pos:column="45">( 
            <param><decl><type><name pos:line="10949" pos:column="13">_DebuggerExpressionEvaluationEventsRoot</name> <type:modifier pos:line="10949" pos:column="53">*</type:modifier></type> <name pos:line="10949" pos:column="55">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10951" pos:column="9">HRESULT</name></type> ( <name pos:line="10951" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10951" pos:column="37">*</type:modifier><name pos:line="10951" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="10951" pos:column="56">( 
            <param><decl><type><name pos:line="10952" pos:column="13">_DebuggerExpressionEvaluationEventsRoot</name> <type:modifier pos:line="10952" pos:column="53">*</type:modifier></type> <name pos:line="10952" pos:column="55">This</name></decl></param>,
            <comment type="block" pos:line="10953" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10953" pos:column="25">__RPC__out</name> <name pos:line="10953" pos:column="36">UINT</name> <type:modifier pos:line="10953" pos:column="41">*</type:modifier></type><name pos:line="10953" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="10955" pos:column="9">HRESULT</name></type> ( <name pos:line="10955" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="10955" pos:column="37">*</type:modifier><name pos:line="10955" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="10955" pos:column="51">( 
            <param><decl><type><name pos:line="10956" pos:column="13">_DebuggerExpressionEvaluationEventsRoot</name> <type:modifier pos:line="10956" pos:column="53">*</type:modifier></type> <name pos:line="10956" pos:column="55">This</name></decl></param>,
            <comment type="block" pos:line="10957" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10957" pos:column="24">UINT</name></type> <name pos:line="10957" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="10958" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10958" pos:column="24">LCID</name></type> <name pos:line="10958" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10959" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10959" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="10959" pos:column="46">ITypeInfo</name> <type:modifier pos:line="10959" pos:column="56">*</type:modifier><type:modifier pos:line="10959" pos:column="57">*</type:modifier></type><name pos:line="10959" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10961" pos:column="9">HRESULT</name> <argument_list pos:line="10961" pos:column="17">( <argument pos:line="10961" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="10961" pos:column="53">(</op:operator> 
            <name pos:line="10962" pos:column="13">_DebuggerExpressionEvaluationEventsRoot</name> <op:operator pos:line="10962" pos:column="53">*</op:operator> <name pos:line="10962" pos:column="55">This</name><op:operator pos:line="10962" pos:column="59">,</op:operator>
            <comment type="block" pos:line="10963" pos:column="13">/* [in] */</comment> <name pos:line="10963" pos:column="24">__RPC__in</name> <name pos:line="10963" pos:column="34">REFIID</name> <name pos:line="10963" pos:column="41">riid</name><op:operator pos:line="10963" pos:column="45">,</op:operator>
            <comment type="block" pos:line="10964" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="10964" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="10964" pos:column="54">(<argument pos:line="10964" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="10964" pos:column="63">LPOLESTR</name> <op:operator pos:line="10964" pos:column="72">*</op:operator><name pos:line="10964" pos:column="73">rgszNames</name><op:operator pos:line="10964" pos:column="82">,</op:operator>
            <comment type="block" pos:line="10965" pos:column="13">/* [range][in] */</comment> <name pos:line="10965" pos:column="31">UINT</name> <name pos:line="10965" pos:column="36">cNames</name><op:operator pos:line="10965" pos:column="42">,</op:operator>
            <comment type="block" pos:line="10966" pos:column="13">/* [in] */</comment> <name pos:line="10966" pos:column="24">LCID</name> <name pos:line="10966" pos:column="29">lcid</name><op:operator pos:line="10966" pos:column="33">,</op:operator>
            <comment type="block" pos:line="10967" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="10967" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="10967" pos:column="56">(<argument pos:line="10967" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="10967" pos:column="65">DISPID</name> <op:operator pos:line="10967" pos:column="72">*</op:operator><name pos:line="10967" pos:column="73">rgDispId</name><op:operator pos:line="10967" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="10969" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="10969" pos:column="23">HRESULT</name></type> ( <name pos:line="10969" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="10969" pos:column="51">*</type:modifier><name pos:line="10969" pos:column="52">Invoke</name> )<parameter_list pos:line="10969" pos:column="60">( 
            <param><decl><type><name pos:line="10970" pos:column="13">_DebuggerExpressionEvaluationEventsRoot</name> <type:modifier pos:line="10970" pos:column="53">*</type:modifier></type> <name pos:line="10970" pos:column="55">This</name></decl></param>,
            <comment type="block" pos:line="10971" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10971" pos:column="24">DISPID</name></type> <name pos:line="10971" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="10972" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10972" pos:column="24">REFIID</name></type> <name pos:line="10972" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="10973" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10973" pos:column="24">LCID</name></type> <name pos:line="10973" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="10974" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="10974" pos:column="24">WORD</name></type> <name pos:line="10974" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="10975" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="10975" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="10975" pos:column="40">*</type:modifier></type><name pos:line="10975" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="10976" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10976" pos:column="25">VARIANT</name> <type:modifier pos:line="10976" pos:column="33">*</type:modifier></type><name pos:line="10976" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="10977" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10977" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="10977" pos:column="35">*</type:modifier></type><name pos:line="10977" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="10978" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="10978" pos:column="25">UINT</name> <type:modifier pos:line="10978" pos:column="30">*</type:modifier></type><name pos:line="10978" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="10980" pos:column="9">/* [hidden][propget][id] */</comment> <function_decl><type><name pos:line="10980" pos:column="37">HRESULT</name></type> ( <name pos:line="10980" pos:column="47">__stdcall</name> <type:modifier pos:line="10980" pos:column="57">*</type:modifier><name pos:line="10980" pos:column="58">get_DebuggerExpressionEvaluationEvents</name> )<parameter_list pos:line="10980" pos:column="98">( 
            <param><decl><type><name pos:line="10981" pos:column="13">_DebuggerExpressionEvaluationEventsRoot</name> <type:modifier pos:line="10981" pos:column="53">*</type:modifier></type> <name pos:line="10981" pos:column="55">This</name></decl></param>,
            <comment type="block" pos:line="10982" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="10982" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="10982" pos:column="54">IDispatch</name> <type:modifier pos:line="10982" pos:column="64">*</type:modifier><type:modifier pos:line="10982" pos:column="65">*</type:modifier></type><name pos:line="10982" pos:column="66">disp</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="10984" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="10985" pos:column="7">_DebuggerExpressionEvaluationEventsRootVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="10987" pos:column="5">interface</name></type> <name pos:line="10987" pos:column="15">_DebuggerExpressionEvaluationEventsRoot</name>
    <argument_list pos:line="10988" pos:column="5">{
        <argument><expr><name pos:line="10989" pos:column="9">CONST_VTBL</name> struct <name pos:line="10989" pos:column="27">_DebuggerExpressionEvaluationEventsRootVtbl</name> <op:operator pos:line="10989" pos:column="71">*</op:operator><name pos:line="10989" pos:column="72">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="10994" pos:column="1">#<cpp:directive pos:line="10994" pos:column="2">ifdef</cpp:directive> <name pos:line="10994" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="10997" pos:column="1">#<cpp:directive pos:line="10997" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10997" pos:column="9">_DebuggerExpressionEvaluationEventsRoot_QueryInterface</name><parameter_list pos:line="10997" pos:column="63">(<param><type><name pos:line="10997" pos:column="64">This</name></type></param>,<param><type><name pos:line="10997" pos:column="69">riid</name></type></param>,<param><type><name pos:line="10997" pos:column="74">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="10998" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11000" pos:column="1">#<cpp:directive pos:line="11000" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11000" pos:column="9">_DebuggerExpressionEvaluationEventsRoot_AddRef</name><parameter_list pos:line="11000" pos:column="55">(<param><type><name pos:line="11000" pos:column="56">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11001" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11003" pos:column="1">#<cpp:directive pos:line="11003" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11003" pos:column="9">_DebuggerExpressionEvaluationEventsRoot_Release</name><parameter_list pos:line="11003" pos:column="56">(<param><type><name pos:line="11003" pos:column="57">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11004" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="11007" pos:column="1">#<cpp:directive pos:line="11007" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11007" pos:column="9">_DebuggerExpressionEvaluationEventsRoot_GetTypeInfoCount</name><parameter_list pos:line="11007" pos:column="65">(<param><type><name pos:line="11007" pos:column="66">This</name></type></param>,<param><type><name pos:line="11007" pos:column="71">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11008" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="11010" pos:column="1">#<cpp:directive pos:line="11010" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11010" pos:column="9">_DebuggerExpressionEvaluationEventsRoot_GetTypeInfo</name><parameter_list pos:line="11010" pos:column="60">(<param><type><name pos:line="11010" pos:column="61">This</name></type></param>,<param><type><name pos:line="11010" pos:column="66">iTInfo</name></type></param>,<param><type><name pos:line="11010" pos:column="73">lcid</name></type></param>,<param><type><name pos:line="11010" pos:column="78">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11011" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="11013" pos:column="1">#<cpp:directive pos:line="11013" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11013" pos:column="9">_DebuggerExpressionEvaluationEventsRoot_GetIDsOfNames</name><parameter_list pos:line="11013" pos:column="62">(<param><type><name pos:line="11013" pos:column="63">This</name></type></param>,<param><type><name pos:line="11013" pos:column="68">riid</name></type></param>,<param><type><name pos:line="11013" pos:column="73">rgszNames</name></type></param>,<param><type><name pos:line="11013" pos:column="83">cNames</name></type></param>,<param><type><name pos:line="11013" pos:column="90">lcid</name></type></param>,<param><type><name pos:line="11013" pos:column="95">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11014" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="11016" pos:column="1">#<cpp:directive pos:line="11016" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11016" pos:column="9">_DebuggerExpressionEvaluationEventsRoot_Invoke</name><parameter_list pos:line="11016" pos:column="55">(<param><type><name pos:line="11016" pos:column="56">This</name></type></param>,<param><type><name pos:line="11016" pos:column="61">dispIdMember</name></type></param>,<param><type><name pos:line="11016" pos:column="74">riid</name></type></param>,<param><type><name pos:line="11016" pos:column="79">lcid</name></type></param>,<param><type><name pos:line="11016" pos:column="84">wFlags</name></type></param>,<param><type><name pos:line="11016" pos:column="91">pDispParams</name></type></param>,<param><type><name pos:line="11016" pos:column="103">pVarResult</name></type></param>,<param><type><name pos:line="11016" pos:column="114">pExcepInfo</name></type></param>,<param><type><name pos:line="11016" pos:column="125">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11017" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="11020" pos:column="1">#<cpp:directive pos:line="11020" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11020" pos:column="9">_DebuggerExpressionEvaluationEventsRoot_get_DebuggerExpressionEvaluationEvents</name><parameter_list pos:line="11020" pos:column="87">(<param><type><name pos:line="11020" pos:column="88">This</name></type></param>,<param><type><name pos:line="11020" pos:column="93">disp</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11021" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DebuggerExpressionEvaluationEvents(This,disp) )</cpp:value></cpp:define> 

<cpp:endif pos:line="11023" pos:column="1">#<cpp:directive pos:line="11023" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11023" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="11026" pos:column="1">#<cpp:directive pos:line="11026" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11026" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="11031" pos:column="1">#<cpp:directive pos:line="11031" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11031" pos:column="9">/* ___DebuggerExpressionEvaluationEventsRoot_INTERFACE_DEFINED__ */</comment>


<decl_stmt><decl><type><name pos:line="11034" pos:column="1">EXTERN_C</name> <specifier pos:line="11034" pos:column="10">const</specifier> <name pos:line="11034" pos:column="16">CLSID</name></type> <name pos:line="11034" pos:column="22">CLSID_DebuggerExpressionEvaluationEvents</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="11036" pos:column="1">#<cpp:directive pos:line="11036" pos:column="2">ifdef</cpp:directive> <name pos:line="11036" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="11038" pos:column="1">class</type> <name pos:line="11038" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="11038" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="11038" pos:column="21">"1aa6b3e4-42f7-4396-80fa-76728d1b824c"</lit:literal></expr></argument>)</argument_list>
<name pos:line="11039" pos:column="1">DebuggerExpressionEvaluationEvents</name></decl>;</decl_stmt>
<cpp:endif pos:line="11040" pos:column="1">#<cpp:directive pos:line="11040" pos:column="2">endif</cpp:directive></cpp:endif>


<cpp:ifndef pos:line="11043" pos:column="1">#<cpp:directive pos:line="11043" pos:column="2">ifndef</cpp:directive> <name pos:line="11043" pos:column="9">__ContextGuids_MODULE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11044" pos:column="1">#<cpp:directive pos:line="11044" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11044" pos:column="9">__ContextGuids_MODULE_DEFINED__</name></cpp:macro></cpp:define>


<comment type="block" pos:line="11047" pos:column="1">/* module ContextGuids */</comment>
<comment type="block" pos:line="11048" pos:column="1">/* [helpstring][dllname][uuid] */</comment> 

<decl_stmt><decl><type><specifier pos:line="11050" pos:column="1">const</specifier> <name pos:line="11050" pos:column="7">LPSTR</name></type> <name pos:line="11050" pos:column="13">vsContextGuidSolutionBuilding</name>	<init pos:line="11050" pos:column="49">=	<expr><lit:literal type="string" pos:line="11050" pos:column="57">"{ADFC4E60-0397-11D1-9F4E-00A0C911004F}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11052" pos:column="1">const</specifier> <name pos:line="11052" pos:column="7">LPSTR</name></type> <name pos:line="11052" pos:column="13">vsContextGuidDebugging</name>	<init pos:line="11052" pos:column="41">=	<expr><lit:literal type="string" pos:line="11052" pos:column="49">"{ADFC4E61-0397-11D1-9F4E-00A0C911004F}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11054" pos:column="1">const</specifier> <name pos:line="11054" pos:column="7">LPSTR</name></type> <name pos:line="11054" pos:column="13">vsContextGuidUIHierarchyDragging</name>	<init pos:line="11054" pos:column="49">=	<expr><lit:literal type="string" pos:line="11054" pos:column="57">"{B706F393-2E5B-49E7-9E2E-B1825F639B63}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11056" pos:column="1">const</specifier> <name pos:line="11056" pos:column="7">LPSTR</name></type> <name pos:line="11056" pos:column="13">vsContextGuidFullScreenMode</name>	<init pos:line="11056" pos:column="41">=	<expr><lit:literal type="string" pos:line="11056" pos:column="49">"{ADFC4E62-0397-11D1-9F4E-00A0C911004F}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11058" pos:column="1">const</specifier> <name pos:line="11058" pos:column="7">LPSTR</name></type> <name pos:line="11058" pos:column="13">vsContextGuidDesignMode</name>	<init pos:line="11058" pos:column="41">=	<expr><lit:literal type="string" pos:line="11058" pos:column="49">"{ADFC4E63-0397-11D1-9F4E-00A0C911004F}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11060" pos:column="1">const</specifier> <name pos:line="11060" pos:column="7">LPSTR</name></type> <name pos:line="11060" pos:column="13">vsContextGuidNoSolution</name>	<init pos:line="11060" pos:column="41">=	<expr><lit:literal type="string" pos:line="11060" pos:column="49">"{ADFC4E64-0397-11D1-9F4E-00A0C911004F}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11062" pos:column="1">const</specifier> <name pos:line="11062" pos:column="7">LPSTR</name></type> <name pos:line="11062" pos:column="13">vsContextGuidSolutionExists</name>	<init pos:line="11062" pos:column="41">=	<expr><lit:literal type="string" pos:line="11062" pos:column="49">"{F1536EF8-92EC-443C-9ED7-FDADF150DA82}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11064" pos:column="1">const</specifier> <name pos:line="11064" pos:column="7">LPSTR</name></type> <name pos:line="11064" pos:column="13">vsContextGuidEmptySolution</name>	<init pos:line="11064" pos:column="41">=	<expr><lit:literal type="string" pos:line="11064" pos:column="49">"{ADFC4E65-0397-11D1-9F4E-00A0C911004F}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11066" pos:column="1">const</specifier> <name pos:line="11066" pos:column="7">LPSTR</name></type> <name pos:line="11066" pos:column="13">vsContextGuidSolutionHasSingleProject</name>	<init pos:line="11066" pos:column="57">=	<expr><lit:literal type="string" pos:line="11066" pos:column="65">"{ADFC4E66-0397-11D1-9F4E-00A0C911004F}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11068" pos:column="1">const</specifier> <name pos:line="11068" pos:column="7">LPSTR</name></type> <name pos:line="11068" pos:column="13">vsContextGuidSolutionHasMultipleProjects</name>	<init pos:line="11068" pos:column="57">=	<expr><lit:literal type="string" pos:line="11068" pos:column="65">"{93694FA0-0397-11D1-9F4E-00A0C911004F}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11070" pos:column="1">const</specifier> <name pos:line="11070" pos:column="7">LPSTR</name></type> <name pos:line="11070" pos:column="13">vsContextGuidCodeWindow</name>	<init pos:line="11070" pos:column="41">=	<expr><lit:literal type="string" pos:line="11070" pos:column="49">"{8FE2DF1D-E0DA-4EBE-9D5C-415D40E487B5}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11072" pos:column="1">const</specifier> <name pos:line="11072" pos:column="7">LPSTR</name></type> <name pos:line="11072" pos:column="13">vsContextGuidNotBuildingAndNotDebugging</name>	<init pos:line="11072" pos:column="57">=	<expr><lit:literal type="string" pos:line="11072" pos:column="65">"{48EA4A80-F14E-4107-88FA-8D0016F30B9C}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11074" pos:column="1">const</specifier> <name pos:line="11074" pos:column="7">LPSTR</name></type> <name pos:line="11074" pos:column="13">vsContextGuidSolutionOrProjectUpgrading</name>	<init pos:line="11074" pos:column="57">=	<expr><lit:literal type="string" pos:line="11074" pos:column="65">"{EF4F870B-7B85-4F29-9D15-CE1ABFBE733B}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11076" pos:column="1">const</specifier> <name pos:line="11076" pos:column="7">LPSTR</name></type> <name pos:line="11076" pos:column="13">vsContextGuidDataSourceWindowSupported</name>	<init pos:line="11076" pos:column="57">=	<expr><lit:literal type="string" pos:line="11076" pos:column="65">"{95C314C4-660B-4627-9F82-1BAF1C764BBF}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11078" pos:column="1">const</specifier> <name pos:line="11078" pos:column="7">LPSTR</name></type> <name pos:line="11078" pos:column="13">vsContextGuidDataSourceWindowAutoVisible</name>	<init pos:line="11078" pos:column="57">=	<expr><lit:literal type="string" pos:line="11078" pos:column="65">"{2E78870D-AC7C-4460-A4A1-3FE37D00EF81}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11080" pos:column="1">const</specifier> <name pos:line="11080" pos:column="7">LPSTR</name></type> <name pos:line="11080" pos:column="13">vsContextGuidWindowsFormsDesigner</name>	<init pos:line="11080" pos:column="49">=	<expr><lit:literal type="string" pos:line="11080" pos:column="57">"{BA09E2AF-9DF2-4068-B2F0-4C7E5CC19E2F}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11082" pos:column="1">const</specifier> <name pos:line="11082" pos:column="7">LPSTR</name></type> <name pos:line="11082" pos:column="13">vsContextGuidToolboxInitialized</name>	<init pos:line="11082" pos:column="49">=	<expr><lit:literal type="string" pos:line="11082" pos:column="57">"{DC5DB425-F0FD-4403-96A1-F475CDBA9EE0}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11084" pos:column="1">const</specifier> <name pos:line="11084" pos:column="7">LPSTR</name></type> <name pos:line="11084" pos:column="13">vsContextGuidSolutionExistsAndNotBuildingAndNotDebugging</name>	<init pos:line="11084" pos:column="73">=	<expr><lit:literal type="string" pos:line="11084" pos:column="81">"{D0E4DEEC-1B53-4CDA-8559-D454583AD23B}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11086" pos:column="1">const</specifier> <name pos:line="11086" pos:column="7">LPSTR</name></type> <name pos:line="11086" pos:column="13">vsContextGuidTextEditor</name>	<init pos:line="11086" pos:column="41">=	<expr><lit:literal type="string" pos:line="11086" pos:column="49">"{8B382828-6202-11D1-8870-0000F87579D2}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11088" pos:column="1">const</specifier> <name pos:line="11088" pos:column="7">LPSTR</name></type> <name pos:line="11088" pos:column="13">vsContextGuidXMLTextEditor</name>	<init pos:line="11088" pos:column="41">=	<expr><lit:literal type="string" pos:line="11088" pos:column="49">"{F6819A78-A205-47B5-BE1C-675B3C7F0B8E}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11090" pos:column="1">const</specifier> <name pos:line="11090" pos:column="7">LPSTR</name></type> <name pos:line="11090" pos:column="13">vsContextGuidCSSTextEditor</name>	<init pos:line="11090" pos:column="41">=	<expr><lit:literal type="string" pos:line="11090" pos:column="49">"{A764E898-518D-11D2-9A89-00C04F79EFC3}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11092" pos:column="1">const</specifier> <name pos:line="11092" pos:column="7">LPSTR</name></type> <name pos:line="11092" pos:column="13">vsContextGuidHTMLSourceEditor</name>	<init pos:line="11092" pos:column="49">=	<expr><lit:literal type="string" pos:line="11092" pos:column="57">"{58E975A0-F8FE-11D2-A6AE-00104BCC7269}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11094" pos:column="1">const</specifier> <name pos:line="11094" pos:column="7">LPSTR</name></type> <name pos:line="11094" pos:column="13">vsContextGuidHTMLDesignView</name>	<init pos:line="11094" pos:column="41">=	<expr><lit:literal type="string" pos:line="11094" pos:column="49">"{CB3FCFEA-03DF-11D1-81D2-00A0C91BBEE3}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11096" pos:column="1">const</specifier> <name pos:line="11096" pos:column="7">LPSTR</name></type> <name pos:line="11096" pos:column="13">vsContextGuidHTMLSourceView</name>	<init pos:line="11096" pos:column="41">=	<expr><lit:literal type="string" pos:line="11096" pos:column="49">"{CB3FCFEB-03DF-11D1-81D2-00A0C91BBEE3}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11098" pos:column="1">const</specifier> <name pos:line="11098" pos:column="7">LPSTR</name></type> <name pos:line="11098" pos:column="13">vsContextGuidHTMLCodeView</name>	<init pos:line="11098" pos:column="41">=	<expr><lit:literal type="string" pos:line="11098" pos:column="49">"{4C01CBEE-FB8C-4ED0-8EC0-68348C52822E}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11100" pos:column="1">const</specifier> <name pos:line="11100" pos:column="7">LPSTR</name></type> <name pos:line="11100" pos:column="13">vsContextGuidFrames</name>	<init pos:line="11100" pos:column="33">=	<expr><lit:literal type="string" pos:line="11100" pos:column="41">"{CB3FCFEC-03DF-11D1-81D2-00A0C91BBEE3}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11102" pos:column="1">const</specifier> <name pos:line="11102" pos:column="7">LPSTR</name></type> <name pos:line="11102" pos:column="13">vsContextGuidSchema</name>	<init pos:line="11102" pos:column="33">=	<expr><lit:literal type="string" pos:line="11102" pos:column="41">"{E6631B5B-2EAB-41E8-82FD-6469645C76C9}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11104" pos:column="1">const</specifier> <name pos:line="11104" pos:column="7">LPSTR</name></type> <name pos:line="11104" pos:column="13">vsContextGuidData</name>	<init pos:line="11104" pos:column="33">=	<expr><lit:literal type="string" pos:line="11104" pos:column="41">"{F482F8AF-1E66-4760-919E-964707265994}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11106" pos:column="1">const</specifier> <name pos:line="11106" pos:column="7">LPSTR</name></type> <name pos:line="11106" pos:column="13">vsContextGuidKindStartPage</name>	<init pos:line="11106" pos:column="41">=	<expr><lit:literal type="string" pos:line="11106" pos:column="49">"{387CB18D-6153-4156-9257-9AC3F9207BBE}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11108" pos:column="1">const</specifier> <name pos:line="11108" pos:column="7">LPSTR</name></type> <name pos:line="11108" pos:column="13">vsContextGuidCommunityWindow</name>	<init pos:line="11108" pos:column="49">=	<expr><lit:literal type="string" pos:line="11108" pos:column="57">"{96DB1F3B-0E7A-4406-B73E-C6F0A2C67B97}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11110" pos:column="1">const</specifier> <name pos:line="11110" pos:column="7">LPSTR</name></type> <name pos:line="11110" pos:column="13">vsContextGuidDeviceExplorer</name>	<init pos:line="11110" pos:column="41">=	<expr><lit:literal type="string" pos:line="11110" pos:column="49">"{B65E9355-A4C7-4855-96BB-1D3EC8514E8F}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11112" pos:column="1">const</specifier> <name pos:line="11112" pos:column="7">LPSTR</name></type> <name pos:line="11112" pos:column="13">vsContextGuidBookmarks</name>	<init pos:line="11112" pos:column="41">=	<expr><lit:literal type="string" pos:line="11112" pos:column="49">"{A0C5197D-0AC7-4B63-97CD-8872A789D233}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11114" pos:column="1">const</specifier> <name pos:line="11114" pos:column="7">LPSTR</name></type> <name pos:line="11114" pos:column="13">vsContextGuidApplicationBrowser</name>	<init pos:line="11114" pos:column="49">=	<expr><lit:literal type="string" pos:line="11114" pos:column="57">"{399832EA-70A8-4AE7-9B99-3C0850DAD152}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11116" pos:column="1">const</specifier> <name pos:line="11116" pos:column="7">LPSTR</name></type> <name pos:line="11116" pos:column="13">vsContextGuidFavorites</name>	<init pos:line="11116" pos:column="41">=	<expr><lit:literal type="string" pos:line="11116" pos:column="49">"{57DC5D59-11C2-4955-A7B4-D7699D677E93}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11118" pos:column="1">const</specifier> <name pos:line="11118" pos:column="7">LPSTR</name></type> <name pos:line="11118" pos:column="13">vsContextGuidErrorList</name>	<init pos:line="11118" pos:column="41">=	<expr><lit:literal type="string" pos:line="11118" pos:column="49">"{D78612C7-9962-4B83-95D9-268046DAD23A}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11120" pos:column="1">const</specifier> <name pos:line="11120" pos:column="7">LPSTR</name></type> <name pos:line="11120" pos:column="13">vsContextGuidHelpSearch</name>	<init pos:line="11120" pos:column="41">=	<expr><lit:literal type="string" pos:line="11120" pos:column="49">"{46C87F81-5A06-43A8-9E25-85D33BAC49F8}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11122" pos:column="1">const</specifier> <name pos:line="11122" pos:column="7">LPSTR</name></type> <name pos:line="11122" pos:column="13">vsContextGuidHelpIndex</name>	<init pos:line="11122" pos:column="41">=	<expr><lit:literal type="string" pos:line="11122" pos:column="49">"{73F6DD58-437E-11D3-B88E-00C04F79F802}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11124" pos:column="1">const</specifier> <name pos:line="11124" pos:column="7">LPSTR</name></type> <name pos:line="11124" pos:column="13">vsContextGuidHelpContents</name>	<init pos:line="11124" pos:column="41">=	<expr><lit:literal type="string" pos:line="11124" pos:column="49">"{4A791147-19E4-11D3-B86B-00C04F79F802}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11126" pos:column="1">const</specifier> <name pos:line="11126" pos:column="7">LPSTR</name></type> <name pos:line="11126" pos:column="13">vsContextGuidCallBrowser</name>	<init pos:line="11126" pos:column="41">=	<expr><lit:literal type="string" pos:line="11126" pos:column="49">"{5415EA3A-D813-4948-B51E-562082CE0887}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11128" pos:column="1">const</specifier> <name pos:line="11128" pos:column="7">LPSTR</name></type> <name pos:line="11128" pos:column="13">vsContextGuidCodeDefinition</name>	<init pos:line="11128" pos:column="41">=	<expr><lit:literal type="string" pos:line="11128" pos:column="49">"{588470CC-84F8-4A57-9AC4-86BCA0625FF4}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11130" pos:column="1">const</specifier> <name pos:line="11130" pos:column="7">LPSTR</name></type> <name pos:line="11130" pos:column="13">vsContextGuidTaskList</name>	<init pos:line="11130" pos:column="41">=	<expr><lit:literal type="string" pos:line="11130" pos:column="49">"{4A9B7E51-AA16-11D0-A8C5-00A0C921A4D2}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11132" pos:column="1">const</specifier> <name pos:line="11132" pos:column="7">LPSTR</name></type> <name pos:line="11132" pos:column="13">vsContextGuidToolbox</name>	<init pos:line="11132" pos:column="41">=	<expr><lit:literal type="string" pos:line="11132" pos:column="49">"{B1E99781-AB81-11D0-B683-00AA00A3EE26}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11134" pos:column="1">const</specifier> <name pos:line="11134" pos:column="7">LPSTR</name></type> <name pos:line="11134" pos:column="13">vsContextGuidCallStack</name>	<init pos:line="11134" pos:column="41">=	<expr><lit:literal type="string" pos:line="11134" pos:column="49">"{0504FF91-9D61-11D0-A794-00A0C9110051}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11136" pos:column="1">const</specifier> <name pos:line="11136" pos:column="7">LPSTR</name></type> <name pos:line="11136" pos:column="13">vsContextGuidThread</name>	<init pos:line="11136" pos:column="33">=	<expr><lit:literal type="string" pos:line="11136" pos:column="41">"{E62CE6A0-B439-11D0-A79D-00A0C9110051}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11138" pos:column="1">const</specifier> <name pos:line="11138" pos:column="7">LPSTR</name></type> <name pos:line="11138" pos:column="13">vsContextGuidLocals</name>	<init pos:line="11138" pos:column="33">=	<expr><lit:literal type="string" pos:line="11138" pos:column="41">"{4A18F9D0-B838-11D0-93EB-00A0C90F2734}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11140" pos:column="1">const</specifier> <name pos:line="11140" pos:column="7">LPSTR</name></type> <name pos:line="11140" pos:column="13">vsContextGuidAutoLocals</name>	<init pos:line="11140" pos:column="41">=	<expr><lit:literal type="string" pos:line="11140" pos:column="49">"{F2E84780-2AF1-11D1-A7FA-00A0C9110051}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11142" pos:column="1">const</specifier> <name pos:line="11142" pos:column="7">LPSTR</name></type> <name pos:line="11142" pos:column="13">vsContextGuidWatch</name>	<init pos:line="11142" pos:column="33">=	<expr><lit:literal type="string" pos:line="11142" pos:column="41">"{90243340-BD7A-11D0-93EF-00A0C90F2734}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11144" pos:column="1">const</specifier> <name pos:line="11144" pos:column="7">LPSTR</name></type> <name pos:line="11144" pos:column="13">vsContextGuidProperties</name>	<init pos:line="11144" pos:column="41">=	<expr><lit:literal type="string" pos:line="11144" pos:column="49">"{EEFA5220-E298-11D0-8F78-00A0C9110057}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11146" pos:column="1">const</specifier> <name pos:line="11146" pos:column="7">LPSTR</name></type> <name pos:line="11146" pos:column="13">vsContextGuidSolutionExplorer</name>	<init pos:line="11146" pos:column="49">=	<expr><lit:literal type="string" pos:line="11146" pos:column="57">"{3AE79031-E1BC-11D0-8F78-00A0C9110057}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11148" pos:column="1">const</specifier> <name pos:line="11148" pos:column="7">LPSTR</name></type> <name pos:line="11148" pos:column="13">vsContextGuidOutput</name>	<init pos:line="11148" pos:column="33">=	<expr><lit:literal type="string" pos:line="11148" pos:column="41">"{34E76E81-EE4A-11D0-AE2E-00A0C90FFFC3}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11150" pos:column="1">const</specifier> <name pos:line="11150" pos:column="7">LPSTR</name></type> <name pos:line="11150" pos:column="13">vsContextGuidObjectBrowser</name>	<init pos:line="11150" pos:column="41">=	<expr><lit:literal type="string" pos:line="11150" pos:column="49">"{269A02DC-6AF8-11D3-BDC4-00C04F688E50}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11152" pos:column="1">const</specifier> <name pos:line="11152" pos:column="7">LPSTR</name></type> <name pos:line="11152" pos:column="13">vsContextGuidMacroExplorer</name>	<init pos:line="11152" pos:column="41">=	<expr><lit:literal type="string" pos:line="11152" pos:column="49">"{07CD18B4-3BA1-11D2-890A-0060083196C6}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11154" pos:column="1">const</specifier> <name pos:line="11154" pos:column="7">LPSTR</name></type> <name pos:line="11154" pos:column="13">vsContextGuidDynamicHelp</name>	<init pos:line="11154" pos:column="41">=	<expr><lit:literal type="string" pos:line="11154" pos:column="49">"{66DBA47C-61DF-11D2-AA79-00C04F990343}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11156" pos:column="1">const</specifier> <name pos:line="11156" pos:column="7">LPSTR</name></type> <name pos:line="11156" pos:column="13">vsContextGuidClassView</name>	<init pos:line="11156" pos:column="41">=	<expr><lit:literal type="string" pos:line="11156" pos:column="49">"{C9C0AE26-AA77-11D2-B3F0-0000F87570EE}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11158" pos:column="1">const</specifier> <name pos:line="11158" pos:column="7">LPSTR</name></type> <name pos:line="11158" pos:column="13">vsContextGuidResourceView</name>	<init pos:line="11158" pos:column="41">=	<expr><lit:literal type="string" pos:line="11158" pos:column="49">"{2D7728C2-DE0A-45B5-99AA-89B609DFDE73}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11160" pos:column="1">const</specifier> <name pos:line="11160" pos:column="7">LPSTR</name></type> <name pos:line="11160" pos:column="13">vsContextGuidDocumentOutline</name>	<init pos:line="11160" pos:column="49">=	<expr><lit:literal type="string" pos:line="11160" pos:column="57">"{25F7E850-FFA1-11D0-B63F-00A0C922E851}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11162" pos:column="1">const</specifier> <name pos:line="11162" pos:column="7">LPSTR</name></type> <name pos:line="11162" pos:column="13">vsContextGuidServerExplorer</name>	<init pos:line="11162" pos:column="41">=	<expr><lit:literal type="string" pos:line="11162" pos:column="49">"{74946827-37A0-11D2-A273-00C04F8EF4FF}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11164" pos:column="1">const</specifier> <name pos:line="11164" pos:column="7">LPSTR</name></type> <name pos:line="11164" pos:column="13">vsContextGuidCommandWindow</name>	<init pos:line="11164" pos:column="41">=	<expr><lit:literal type="string" pos:line="11164" pos:column="49">"{28836128-FC2C-11D2-A433-00C04F72D18A}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11166" pos:column="1">const</specifier> <name pos:line="11166" pos:column="7">LPSTR</name></type> <name pos:line="11166" pos:column="13">vsContextGuidFindSymbol</name>	<init pos:line="11166" pos:column="41">=	<expr><lit:literal type="string" pos:line="11166" pos:column="49">"{53024D34-0EF5-11D3-87E0-00C04F7971A5}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11168" pos:column="1">const</specifier> <name pos:line="11168" pos:column="7">LPSTR</name></type> <name pos:line="11168" pos:column="13">vsContextGuidFindSymbolResults</name>	<init pos:line="11168" pos:column="49">=	<expr><lit:literal type="string" pos:line="11168" pos:column="57">"{68487888-204A-11D3-87EB-00C04F7971A5}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11170" pos:column="1">const</specifier> <name pos:line="11170" pos:column="7">LPSTR</name></type> <name pos:line="11170" pos:column="13">vsContextGuidFindReplace</name>	<init pos:line="11170" pos:column="41">=	<expr><lit:literal type="string" pos:line="11170" pos:column="49">"{CF2DDC32-8CAD-11D2-9302-005345000000}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11172" pos:column="1">const</specifier> <name pos:line="11172" pos:column="7">LPSTR</name></type> <name pos:line="11172" pos:column="13">vsContextGuidFindResults1</name>	<init pos:line="11172" pos:column="41">=	<expr><lit:literal type="string" pos:line="11172" pos:column="49">"{0F887920-C2B6-11D2-9375-0080C747D9A0}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11174" pos:column="1">const</specifier> <name pos:line="11174" pos:column="7">LPSTR</name></type> <name pos:line="11174" pos:column="13">vsContextGuidFindResults2</name>	<init pos:line="11174" pos:column="41">=	<expr><lit:literal type="string" pos:line="11174" pos:column="49">"{0F887921-C2B6-11D2-9375-0080C747D9A0}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11176" pos:column="1">const</specifier> <name pos:line="11176" pos:column="7">LPSTR</name></type> <name pos:line="11176" pos:column="13">vsContextGuidMainWindow</name>	<init pos:line="11176" pos:column="41">=	<expr><lit:literal type="string" pos:line="11176" pos:column="49">"{9DDABE98-1D02-11D3-89A1-00C04F688DDE}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11178" pos:column="1">const</specifier> <name pos:line="11178" pos:column="7">LPSTR</name></type> <name pos:line="11178" pos:column="13">vsContextGuidLinkedWindowFrame</name>	<init pos:line="11178" pos:column="49">=	<expr><lit:literal type="string" pos:line="11178" pos:column="57">"{9DDABE99-1D02-11D3-89A1-00C04F688DDE}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11180" pos:column="1">const</specifier> <name pos:line="11180" pos:column="7">LPSTR</name></type> <name pos:line="11180" pos:column="13">vsContextGuidWebBrowser</name>	<init pos:line="11180" pos:column="41">=	<expr><lit:literal type="string" pos:line="11180" pos:column="49">"{E8B06F52-6D01-11D2-AA7D-00C04F990343}"</lit:literal></expr></init></decl>;</decl_stmt>

<cpp:endif pos:line="11182" pos:column="1">#<cpp:directive pos:line="11182" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11182" pos:column="8">/* __ContextGuids_MODULE_DEFINED__ */</comment>


<cpp:ifndef pos:line="11185" pos:column="1">#<cpp:directive pos:line="11185" pos:column="2">ifndef</cpp:directive> <name pos:line="11185" pos:column="9">__WindowKinds_MODULE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11186" pos:column="1">#<cpp:directive pos:line="11186" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11186" pos:column="9">__WindowKinds_MODULE_DEFINED__</name></cpp:macro></cpp:define>


<comment type="block" pos:line="11189" pos:column="1">/* module WindowKinds */</comment>
<comment type="block" pos:line="11190" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][dllname][uuid] */</comment> 

<decl_stmt><decl><type><specifier pos:line="11192" pos:column="1">const</specifier> <name pos:line="11192" pos:column="7">LPSTR</name></type> <name pos:line="11192" pos:column="13">vsWindowKindKindStartPage</name>	<init pos:line="11192" pos:column="41">=	<expr><lit:literal type="string" pos:line="11192" pos:column="49">"{387CB18D-6153-4156-9257-9AC3F9207BBE}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11194" pos:column="1">const</specifier> <name pos:line="11194" pos:column="7">LPSTR</name></type> <name pos:line="11194" pos:column="13">vsWindowKindCommunityWindow</name>	<init pos:line="11194" pos:column="41">=	<expr><lit:literal type="string" pos:line="11194" pos:column="49">"{96DB1F3B-0E7A-4406-B73E-C6F0A2C67B97}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11196" pos:column="1">const</specifier> <name pos:line="11196" pos:column="7">LPSTR</name></type> <name pos:line="11196" pos:column="13">vsWindowKindDeviceExplorer</name>	<init pos:line="11196" pos:column="41">=	<expr><lit:literal type="string" pos:line="11196" pos:column="49">"{B65E9355-A4C7-4855-96BB-1D3EC8514E8F}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11198" pos:column="1">const</specifier> <name pos:line="11198" pos:column="7">LPSTR</name></type> <name pos:line="11198" pos:column="13">vsWindowKindBookmarks</name>	<init pos:line="11198" pos:column="41">=	<expr><lit:literal type="string" pos:line="11198" pos:column="49">"{A0C5197D-0AC7-4B63-97CD-8872A789D233}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11200" pos:column="1">const</specifier> <name pos:line="11200" pos:column="7">LPSTR</name></type> <name pos:line="11200" pos:column="13">vsWindowKindApplicationBrowser</name>	<init pos:line="11200" pos:column="49">=	<expr><lit:literal type="string" pos:line="11200" pos:column="57">"{399832EA-70A8-4AE7-9B99-3C0850DAD152}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11202" pos:column="1">const</specifier> <name pos:line="11202" pos:column="7">LPSTR</name></type> <name pos:line="11202" pos:column="13">vsWindowKindFavorites</name>	<init pos:line="11202" pos:column="41">=	<expr><lit:literal type="string" pos:line="11202" pos:column="49">"{57DC5D59-11C2-4955-A7B4-D7699D677E93}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11204" pos:column="1">const</specifier> <name pos:line="11204" pos:column="7">LPSTR</name></type> <name pos:line="11204" pos:column="13">vsWindowKindErrorList</name>	<init pos:line="11204" pos:column="41">=	<expr><lit:literal type="string" pos:line="11204" pos:column="49">"{D78612C7-9962-4B83-95D9-268046DAD23A}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11206" pos:column="1">const</specifier> <name pos:line="11206" pos:column="7">LPSTR</name></type> <name pos:line="11206" pos:column="13">vsWindowKindHelpSearch</name>	<init pos:line="11206" pos:column="41">=	<expr><lit:literal type="string" pos:line="11206" pos:column="49">"{46C87F81-5A06-43A8-9E25-85D33BAC49F8}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11208" pos:column="1">const</specifier> <name pos:line="11208" pos:column="7">LPSTR</name></type> <name pos:line="11208" pos:column="13">vsWindowKindHelpIndex</name>	<init pos:line="11208" pos:column="41">=	<expr><lit:literal type="string" pos:line="11208" pos:column="49">"{73F6DD58-437E-11D3-B88E-00C04F79F802}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11210" pos:column="1">const</specifier> <name pos:line="11210" pos:column="7">LPSTR</name></type> <name pos:line="11210" pos:column="13">vsWindowKindHelpContents</name>	<init pos:line="11210" pos:column="41">=	<expr><lit:literal type="string" pos:line="11210" pos:column="49">"{4A791147-19E4-11D3-B86B-00C04F79F802}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11212" pos:column="1">const</specifier> <name pos:line="11212" pos:column="7">LPSTR</name></type> <name pos:line="11212" pos:column="13">vsWindowKindCallBrowser</name>	<init pos:line="11212" pos:column="41">=	<expr><lit:literal type="string" pos:line="11212" pos:column="49">"{5415EA3A-D813-4948-B51E-562082CE0887}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11214" pos:column="1">const</specifier> <name pos:line="11214" pos:column="7">LPSTR</name></type> <name pos:line="11214" pos:column="13">vsWindowKindCodeDefinition</name>	<init pos:line="11214" pos:column="41">=	<expr><lit:literal type="string" pos:line="11214" pos:column="49">"{588470CC-84F8-4A57-9AC4-86BCA0625FF4}"</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="11216" pos:column="1">const</specifier> <name pos:line="11216" pos:column="7">LPSTR</name></type> <name pos:line="11216" pos:column="13">vsWindowKindImmediate</name>	<init pos:line="11216" pos:column="41">=	<expr><lit:literal type="string" pos:line="11216" pos:column="49">"{28836128-FC2C-11D2-A433-00C04F72D18A}"</lit:literal></expr></init></decl>;</decl_stmt>

<cpp:endif pos:line="11218" pos:column="1">#<cpp:directive pos:line="11218" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11218" pos:column="8">/* __WindowKinds_MODULE_DEFINED__ */</comment>


<cpp:ifndef pos:line="11221" pos:column="1">#<cpp:directive pos:line="11221" pos:column="2">ifndef</cpp:directive> <name pos:line="11221" pos:column="9">__ProjectKinds_MODULE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11222" pos:column="1">#<cpp:directive pos:line="11222" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11222" pos:column="9">__ProjectKinds_MODULE_DEFINED__</name></cpp:macro></cpp:define>


<comment type="block" pos:line="11225" pos:column="1">/* module ProjectKinds */</comment>
<comment type="block" pos:line="11226" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][dllname][uuid] */</comment> 

<decl_stmt><decl><type><specifier pos:line="11228" pos:column="1">const</specifier> <name pos:line="11228" pos:column="7">LPSTR</name></type> <name pos:line="11228" pos:column="13">vsProjectKindSolutionFolder</name>	<init pos:line="11228" pos:column="41">=	<expr><lit:literal type="string" pos:line="11228" pos:column="49">"{66A26720-8FB5-11D2-AA7E-00C04F688DDE}"</lit:literal></expr></init></decl>;</decl_stmt>

<cpp:endif pos:line="11230" pos:column="1">#<cpp:directive pos:line="11230" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11230" pos:column="8">/* __ProjectKinds_MODULE_DEFINED__ */</comment>

<cpp:ifndef pos:line="11232" pos:column="1">#<cpp:directive pos:line="11232" pos:column="2">ifndef</cpp:directive> <name pos:line="11232" pos:column="9">__ToolWindows_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11233" pos:column="1">#<cpp:directive pos:line="11233" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11233" pos:column="9">__ToolWindows_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="11235" pos:column="1">/* interface ToolWindows */</comment>
<comment type="block" pos:line="11236" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="11239" pos:column="1">EXTERN_C</name> <specifier pos:line="11239" pos:column="10">const</specifier> <name pos:line="11239" pos:column="16">IID</name></type> <name pos:line="11239" pos:column="20">IID_ToolWindows</name></decl>;</decl_stmt>

<cpp:if pos:line="11241" pos:column="1">#<cpp:directive pos:line="11241" pos:column="2">if</cpp:directive> <expr><call><name pos:line="11241" pos:column="5">defined</name><argument_list pos:line="11241" pos:column="12">(<argument><expr><name pos:line="11241" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="11241" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="11241" pos:column="29">!</op:operator><call><name pos:line="11241" pos:column="30">defined</name><argument_list pos:line="11241" pos:column="37">(<argument><expr><name pos:line="11241" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="11243" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="11243" pos:column="19">(<argument pos:line="11243" pos:column="20">"19AC6F68-3019-4D65-8D98-404DFB96B8E2"</argument>)</argument_list></macro>
    <label><name pos:line="11244" pos:column="5">ToolWindows</name> :</label> <expr_stmt><expr pos:line="11244" pos:column="19">public <name pos:line="11244" pos:column="26">IDispatch</name>
    <block pos:line="11245" pos:column="5">{
    <expr pos:line="11246" pos:column="5">public<op:operator pos:line="11246" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="11247" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="11247" pos:column="81">HRESULT</name> <name pos:line="11247" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="11247" pos:column="107">get_DTE</name><argument_list pos:line="11247" pos:column="114">( 
            <comment type="block" pos:line="11248" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11248" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="11248" pos:column="54">/* external definition not present */</comment> DTE **DTEObject</argument>)</argument_list></macro> <op:operator pos:line="11248" pos:column="109">=</op:operator> <lit:literal type="number" pos:line="11248" pos:column="111">0</lit:literal></expr>;
        
        <expr pos:line="11250" pos:column="9">virtual <comment type="block" pos:line="11250" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="11250" pos:column="72">HRESULT</name> <name pos:line="11250" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="11250" pos:column="98">GetToolWindow</name><argument_list pos:line="11250" pos:column="111">( 
            <argument pos:line="11251" pos:column="13">__RPC__in BSTR Name</argument>,
            <comment type="block" pos:line="11252" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11252" pos:column="33">__RPC__deref_out_opt IDispatch **ppObject</argument>)</argument_list></macro> <op:operator pos:line="11252" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="11252" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="11254" pos:column="9">virtual <comment type="block" pos:line="11254" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="11254" pos:column="81">HRESULT</name> <name pos:line="11254" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="11254" pos:column="107">get_ToolBox</name><argument_list pos:line="11254" pos:column="118">( 
            <comment type="block" pos:line="11255" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11255" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="11255" pos:column="54">/* external definition not present */</comment> ToolBox **ppToolBox</argument>)</argument_list></macro> <op:operator pos:line="11255" pos:column="113">=</op:operator> <lit:literal type="number" pos:line="11255" pos:column="115">0</lit:literal></expr>;
        
        <expr pos:line="11257" pos:column="9">virtual <comment type="block" pos:line="11257" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="11257" pos:column="81">HRESULT</name> <name pos:line="11257" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="11257" pos:column="107">get_CommandWindow</name><argument_list pos:line="11257" pos:column="124">( 
            <comment type="block" pos:line="11258" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11258" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="11258" pos:column="54">/* external definition not present */</comment> CommandWindow **ppOutputWindow</argument>)</argument_list></macro> <op:operator pos:line="11258" pos:column="124">=</op:operator> <lit:literal type="number" pos:line="11258" pos:column="126">0</lit:literal></expr>;
        
        <expr pos:line="11260" pos:column="9">virtual <comment type="block" pos:line="11260" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="11260" pos:column="81">HRESULT</name> <name pos:line="11260" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="11260" pos:column="107">get_OutputWindow</name><argument_list pos:line="11260" pos:column="123">( 
            <comment type="block" pos:line="11261" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11261" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="11261" pos:column="54">/* external definition not present */</comment> OutputWindow **ppOutputWindow</argument>)</argument_list></macro> <op:operator pos:line="11261" pos:column="123">=</op:operator> <lit:literal type="number" pos:line="11261" pos:column="125">0</lit:literal></expr>;
        
        <expr pos:line="11263" pos:column="9">virtual <comment type="block" pos:line="11263" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="11263" pos:column="81">HRESULT</name> <name pos:line="11263" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="11263" pos:column="107">get_SolutionExplorer</name><argument_list pos:line="11263" pos:column="127">( 
            <comment type="block" pos:line="11264" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11264" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="11264" pos:column="54">/* external definition not present */</comment> UIHierarchy **ppUIHierarchy</argument>)</argument_list></macro> <op:operator pos:line="11264" pos:column="121">=</op:operator> <lit:literal type="number" pos:line="11264" pos:column="123">0</lit:literal></expr>;
        
        <expr pos:line="11266" pos:column="9">virtual <comment type="block" pos:line="11266" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="11266" pos:column="81">HRESULT</name> <name pos:line="11266" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="11266" pos:column="107">get_TaskList</name><argument_list pos:line="11266" pos:column="119">( 
            <comment type="block" pos:line="11267" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11267" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="11267" pos:column="54">/* external definition not present */</comment> TaskList **ppTaskList</argument>)</argument_list></macro> <op:operator pos:line="11267" pos:column="115">=</op:operator> <lit:literal type="number" pos:line="11267" pos:column="117">0</lit:literal></expr>;
        
        <expr pos:line="11269" pos:column="9">virtual <comment type="block" pos:line="11269" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="11269" pos:column="81">HRESULT</name> <name pos:line="11269" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="11269" pos:column="107">get_ErrorList</name><argument_list pos:line="11269" pos:column="120">( 
            <comment type="block" pos:line="11270" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11270" pos:column="33">__RPC__deref_out_opt ErrorList **ppErrorList</argument>)</argument_list></macro> <op:operator pos:line="11270" pos:column="79">=</op:operator> <lit:literal type="number" pos:line="11270" pos:column="81">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="11274" pos:column="1">#<cpp:directive pos:line="11274" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="11274" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="11276" pos:column="5">typedef <type><struct pos:line="11276" pos:column="13">struct <name pos:line="11276" pos:column="20">ToolWindowsVtbl</name>
    <block pos:line="11277" pos:column="5">{<public type="default" pos:line="11277" pos:column="6">
        <function_decl><type><name pos:line="11278" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="11280" pos:column="9">HRESULT</name></type> ( <name pos:line="11280" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11280" pos:column="37">*</type:modifier><name pos:line="11280" pos:column="38">QueryInterface</name> )<parameter_list pos:line="11280" pos:column="54">( 
            <param><decl><type><name pos:line="11281" pos:column="13">ToolWindows</name> <type:modifier pos:line="11281" pos:column="25">*</type:modifier></type> <name pos:line="11281" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="11282" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11282" pos:column="24">__RPC__in</name> <name pos:line="11282" pos:column="34">REFIID</name></type> <name pos:line="11282" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="11283" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="11284" pos:column="13">__RPC__deref_out</name>  <name pos:line="11284" pos:column="31">void</name> <type:modifier pos:line="11284" pos:column="36">*</type:modifier><type:modifier pos:line="11284" pos:column="37">*</type:modifier></type><name pos:line="11284" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11286" pos:column="9">ULONG</name></type> ( <name pos:line="11286" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11286" pos:column="35">*</type:modifier><name pos:line="11286" pos:column="36">AddRef</name> )<parameter_list pos:line="11286" pos:column="44">( 
            <param><decl><type><name pos:line="11287" pos:column="13">ToolWindows</name> <type:modifier pos:line="11287" pos:column="25">*</type:modifier></type> <name pos:line="11287" pos:column="27">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11289" pos:column="9">ULONG</name></type> ( <name pos:line="11289" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="11289" pos:column="35">*</type:modifier><name pos:line="11289" pos:column="36">Release</name> )<parameter_list pos:line="11289" pos:column="45">( 
            <param><decl><type><name pos:line="11290" pos:column="13">ToolWindows</name> <type:modifier pos:line="11290" pos:column="25">*</type:modifier></type> <name pos:line="11290" pos:column="27">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11292" pos:column="9">HRESULT</name></type> ( <name pos:line="11292" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11292" pos:column="37">*</type:modifier><name pos:line="11292" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="11292" pos:column="56">( 
            <param><decl><type><name pos:line="11293" pos:column="13">ToolWindows</name> <type:modifier pos:line="11293" pos:column="25">*</type:modifier></type> <name pos:line="11293" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="11294" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11294" pos:column="25">__RPC__out</name> <name pos:line="11294" pos:column="36">UINT</name> <type:modifier pos:line="11294" pos:column="41">*</type:modifier></type><name pos:line="11294" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="11296" pos:column="9">HRESULT</name></type> ( <name pos:line="11296" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="11296" pos:column="37">*</type:modifier><name pos:line="11296" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="11296" pos:column="51">( 
            <param><decl><type><name pos:line="11297" pos:column="13">ToolWindows</name> <type:modifier pos:line="11297" pos:column="25">*</type:modifier></type> <name pos:line="11297" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="11298" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11298" pos:column="24">UINT</name></type> <name pos:line="11298" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="11299" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11299" pos:column="24">LCID</name></type> <name pos:line="11299" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="11300" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11300" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="11300" pos:column="46">ITypeInfo</name> <type:modifier pos:line="11300" pos:column="56">*</type:modifier><type:modifier pos:line="11300" pos:column="57">*</type:modifier></type><name pos:line="11300" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11302" pos:column="9">HRESULT</name> <argument_list pos:line="11302" pos:column="17">( <argument pos:line="11302" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="11302" pos:column="53">(</op:operator> 
            <name pos:line="11303" pos:column="13">ToolWindows</name> <op:operator pos:line="11303" pos:column="25">*</op:operator> <name pos:line="11303" pos:column="27">This</name><op:operator pos:line="11303" pos:column="31">,</op:operator>
            <comment type="block" pos:line="11304" pos:column="13">/* [in] */</comment> <name pos:line="11304" pos:column="24">__RPC__in</name> <name pos:line="11304" pos:column="34">REFIID</name> <name pos:line="11304" pos:column="41">riid</name><op:operator pos:line="11304" pos:column="45">,</op:operator>
            <comment type="block" pos:line="11305" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="11305" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="11305" pos:column="54">(<argument pos:line="11305" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="11305" pos:column="63">LPOLESTR</name> <op:operator pos:line="11305" pos:column="72">*</op:operator><name pos:line="11305" pos:column="73">rgszNames</name><op:operator pos:line="11305" pos:column="82">,</op:operator>
            <comment type="block" pos:line="11306" pos:column="13">/* [range][in] */</comment> <name pos:line="11306" pos:column="31">UINT</name> <name pos:line="11306" pos:column="36">cNames</name><op:operator pos:line="11306" pos:column="42">,</op:operator>
            <comment type="block" pos:line="11307" pos:column="13">/* [in] */</comment> <name pos:line="11307" pos:column="24">LCID</name> <name pos:line="11307" pos:column="29">lcid</name><op:operator pos:line="11307" pos:column="33">,</op:operator>
            <comment type="block" pos:line="11308" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="11308" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="11308" pos:column="56">(<argument pos:line="11308" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="11308" pos:column="65">DISPID</name> <op:operator pos:line="11308" pos:column="72">*</op:operator><name pos:line="11308" pos:column="73">rgDispId</name><op:operator pos:line="11308" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="11310" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="11310" pos:column="23">HRESULT</name></type> ( <name pos:line="11310" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="11310" pos:column="51">*</type:modifier><name pos:line="11310" pos:column="52">Invoke</name> )<parameter_list pos:line="11310" pos:column="60">( 
            <param><decl><type><name pos:line="11311" pos:column="13">ToolWindows</name> <type:modifier pos:line="11311" pos:column="25">*</type:modifier></type> <name pos:line="11311" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="11312" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11312" pos:column="24">DISPID</name></type> <name pos:line="11312" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="11313" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11313" pos:column="24">REFIID</name></type> <name pos:line="11313" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="11314" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11314" pos:column="24">LCID</name></type> <name pos:line="11314" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="11315" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="11315" pos:column="24">WORD</name></type> <name pos:line="11315" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="11316" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="11316" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="11316" pos:column="40">*</type:modifier></type><name pos:line="11316" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="11317" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11317" pos:column="25">VARIANT</name> <type:modifier pos:line="11317" pos:column="33">*</type:modifier></type><name pos:line="11317" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="11318" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11318" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="11318" pos:column="35">*</type:modifier></type><name pos:line="11318" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="11319" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="11319" pos:column="25">UINT</name> <type:modifier pos:line="11319" pos:column="30">*</type:modifier></type><name pos:line="11319" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11321" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="11321" pos:column="73">HRESULT</name></type> ( <name pos:line="11321" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="11321" pos:column="101">*</type:modifier><name pos:line="11321" pos:column="102">get_DTE</name> )<parameter_list pos:line="11321" pos:column="111">( 
            <param><decl><type><name pos:line="11322" pos:column="13">ToolWindows</name> <type:modifier pos:line="11322" pos:column="25">*</type:modifier></type> <name pos:line="11322" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="11323" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11323" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="11323" pos:column="54">/* external definition not present */</comment> <name pos:line="11323" pos:column="92">DTE</name> <type:modifier pos:line="11323" pos:column="96">*</type:modifier><type:modifier pos:line="11323" pos:column="97">*</type:modifier></type><name pos:line="11323" pos:column="98">DTEObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11325" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="11325" pos:column="64">HRESULT</name></type> ( <name pos:line="11325" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="11325" pos:column="92">*</type:modifier><name pos:line="11325" pos:column="93">GetToolWindow</name> )<parameter_list pos:line="11325" pos:column="108">( 
            <param><decl><type><name pos:line="11326" pos:column="13">ToolWindows</name> <type:modifier pos:line="11326" pos:column="25">*</type:modifier></type> <name pos:line="11326" pos:column="27">This</name></decl></param>,
            <param><decl><type><name pos:line="11327" pos:column="13">__RPC__in</name> <name pos:line="11327" pos:column="23">BSTR</name></type> <name pos:line="11327" pos:column="28">Name</name></decl></param>,
            <comment type="block" pos:line="11328" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11328" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11328" pos:column="54">IDispatch</name> <type:modifier pos:line="11328" pos:column="64">*</type:modifier><type:modifier pos:line="11328" pos:column="65">*</type:modifier></type><name pos:line="11328" pos:column="66">ppObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11330" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="11330" pos:column="73">HRESULT</name></type> ( <name pos:line="11330" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="11330" pos:column="101">*</type:modifier><name pos:line="11330" pos:column="102">get_ToolBox</name> )<parameter_list pos:line="11330" pos:column="115">( 
            <param><decl><type><name pos:line="11331" pos:column="13">ToolWindows</name> <type:modifier pos:line="11331" pos:column="25">*</type:modifier></type> <name pos:line="11331" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="11332" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11332" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="11332" pos:column="54">/* external definition not present */</comment> <name pos:line="11332" pos:column="92">ToolBox</name> <type:modifier pos:line="11332" pos:column="100">*</type:modifier><type:modifier pos:line="11332" pos:column="101">*</type:modifier></type><name pos:line="11332" pos:column="102">ppToolBox</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11334" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="11334" pos:column="73">HRESULT</name></type> ( <name pos:line="11334" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="11334" pos:column="101">*</type:modifier><name pos:line="11334" pos:column="102">get_CommandWindow</name> )<parameter_list pos:line="11334" pos:column="121">( 
            <param><decl><type><name pos:line="11335" pos:column="13">ToolWindows</name> <type:modifier pos:line="11335" pos:column="25">*</type:modifier></type> <name pos:line="11335" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="11336" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11336" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="11336" pos:column="54">/* external definition not present */</comment> <name pos:line="11336" pos:column="92">CommandWindow</name> <type:modifier pos:line="11336" pos:column="106">*</type:modifier><type:modifier pos:line="11336" pos:column="107">*</type:modifier></type><name pos:line="11336" pos:column="108">ppOutputWindow</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11338" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="11338" pos:column="73">HRESULT</name></type> ( <name pos:line="11338" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="11338" pos:column="101">*</type:modifier><name pos:line="11338" pos:column="102">get_OutputWindow</name> )<parameter_list pos:line="11338" pos:column="120">( 
            <param><decl><type><name pos:line="11339" pos:column="13">ToolWindows</name> <type:modifier pos:line="11339" pos:column="25">*</type:modifier></type> <name pos:line="11339" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="11340" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11340" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="11340" pos:column="54">/* external definition not present */</comment> <name pos:line="11340" pos:column="92">OutputWindow</name> <type:modifier pos:line="11340" pos:column="105">*</type:modifier><type:modifier pos:line="11340" pos:column="106">*</type:modifier></type><name pos:line="11340" pos:column="107">ppOutputWindow</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11342" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="11342" pos:column="73">HRESULT</name></type> ( <name pos:line="11342" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="11342" pos:column="101">*</type:modifier><name pos:line="11342" pos:column="102">get_SolutionExplorer</name> )<parameter_list pos:line="11342" pos:column="124">( 
            <param><decl><type><name pos:line="11343" pos:column="13">ToolWindows</name> <type:modifier pos:line="11343" pos:column="25">*</type:modifier></type> <name pos:line="11343" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="11344" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11344" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="11344" pos:column="54">/* external definition not present */</comment> <name pos:line="11344" pos:column="92">UIHierarchy</name> <type:modifier pos:line="11344" pos:column="104">*</type:modifier><type:modifier pos:line="11344" pos:column="105">*</type:modifier></type><name pos:line="11344" pos:column="106">ppUIHierarchy</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11346" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="11346" pos:column="73">HRESULT</name></type> ( <name pos:line="11346" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="11346" pos:column="101">*</type:modifier><name pos:line="11346" pos:column="102">get_TaskList</name> )<parameter_list pos:line="11346" pos:column="116">( 
            <param><decl><type><name pos:line="11347" pos:column="13">ToolWindows</name> <type:modifier pos:line="11347" pos:column="25">*</type:modifier></type> <name pos:line="11347" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="11348" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11348" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="11348" pos:column="54">/* external definition not present */</comment> <name pos:line="11348" pos:column="92">TaskList</name> <type:modifier pos:line="11348" pos:column="101">*</type:modifier><type:modifier pos:line="11348" pos:column="102">*</type:modifier></type><name pos:line="11348" pos:column="103">ppTaskList</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11350" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="11350" pos:column="73">HRESULT</name></type> ( <name pos:line="11350" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="11350" pos:column="101">*</type:modifier><name pos:line="11350" pos:column="102">get_ErrorList</name> )<parameter_list pos:line="11350" pos:column="117">( 
            <param><decl><type><name pos:line="11351" pos:column="13">ToolWindows</name> <type:modifier pos:line="11351" pos:column="25">*</type:modifier></type> <name pos:line="11351" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="11352" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11352" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11352" pos:column="54">ErrorList</name> <type:modifier pos:line="11352" pos:column="64">*</type:modifier><type:modifier pos:line="11352" pos:column="65">*</type:modifier></type><name pos:line="11352" pos:column="66">ppErrorList</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11354" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="11355" pos:column="7">ToolWindowsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="11357" pos:column="5">interface</name></type> <name pos:line="11357" pos:column="15">ToolWindows</name>
    <argument_list pos:line="11358" pos:column="5">{
        <argument><expr><name pos:line="11359" pos:column="9">CONST_VTBL</name> struct <name pos:line="11359" pos:column="27">ToolWindowsVtbl</name> <op:operator pos:line="11359" pos:column="43">*</op:operator><name pos:line="11359" pos:column="44">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="11364" pos:column="1">#<cpp:directive pos:line="11364" pos:column="2">ifdef</cpp:directive> <name pos:line="11364" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="11367" pos:column="1">#<cpp:directive pos:line="11367" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11367" pos:column="9">ToolWindows_QueryInterface</name><parameter_list pos:line="11367" pos:column="35">(<param><type><name pos:line="11367" pos:column="36">This</name></type></param>,<param><type><name pos:line="11367" pos:column="41">riid</name></type></param>,<param><type><name pos:line="11367" pos:column="46">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11368" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11370" pos:column="1">#<cpp:directive pos:line="11370" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11370" pos:column="9">ToolWindows_AddRef</name><parameter_list pos:line="11370" pos:column="27">(<param><type><name pos:line="11370" pos:column="28">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11371" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="11373" pos:column="1">#<cpp:directive pos:line="11373" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11373" pos:column="9">ToolWindows_Release</name><parameter_list pos:line="11373" pos:column="28">(<param><type><name pos:line="11373" pos:column="29">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11374" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="11377" pos:column="1">#<cpp:directive pos:line="11377" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11377" pos:column="9">ToolWindows_GetTypeInfoCount</name><parameter_list pos:line="11377" pos:column="37">(<param><type><name pos:line="11377" pos:column="38">This</name></type></param>,<param><type><name pos:line="11377" pos:column="43">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11378" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="11380" pos:column="1">#<cpp:directive pos:line="11380" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11380" pos:column="9">ToolWindows_GetTypeInfo</name><parameter_list pos:line="11380" pos:column="32">(<param><type><name pos:line="11380" pos:column="33">This</name></type></param>,<param><type><name pos:line="11380" pos:column="38">iTInfo</name></type></param>,<param><type><name pos:line="11380" pos:column="45">lcid</name></type></param>,<param><type><name pos:line="11380" pos:column="50">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11381" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="11383" pos:column="1">#<cpp:directive pos:line="11383" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11383" pos:column="9">ToolWindows_GetIDsOfNames</name><parameter_list pos:line="11383" pos:column="34">(<param><type><name pos:line="11383" pos:column="35">This</name></type></param>,<param><type><name pos:line="11383" pos:column="40">riid</name></type></param>,<param><type><name pos:line="11383" pos:column="45">rgszNames</name></type></param>,<param><type><name pos:line="11383" pos:column="55">cNames</name></type></param>,<param><type><name pos:line="11383" pos:column="62">lcid</name></type></param>,<param><type><name pos:line="11383" pos:column="67">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11384" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="11386" pos:column="1">#<cpp:directive pos:line="11386" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11386" pos:column="9">ToolWindows_Invoke</name><parameter_list pos:line="11386" pos:column="27">(<param><type><name pos:line="11386" pos:column="28">This</name></type></param>,<param><type><name pos:line="11386" pos:column="33">dispIdMember</name></type></param>,<param><type><name pos:line="11386" pos:column="46">riid</name></type></param>,<param><type><name pos:line="11386" pos:column="51">lcid</name></type></param>,<param><type><name pos:line="11386" pos:column="56">wFlags</name></type></param>,<param><type><name pos:line="11386" pos:column="63">pDispParams</name></type></param>,<param><type><name pos:line="11386" pos:column="75">pVarResult</name></type></param>,<param><type><name pos:line="11386" pos:column="86">pExcepInfo</name></type></param>,<param><type><name pos:line="11386" pos:column="97">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11387" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="11390" pos:column="1">#<cpp:directive pos:line="11390" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11390" pos:column="9">ToolWindows_get_DTE</name><parameter_list pos:line="11390" pos:column="28">(<param><type><name pos:line="11390" pos:column="29">This</name></type></param>,<param><type><name pos:line="11390" pos:column="34">DTEObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11391" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTEObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11393" pos:column="1">#<cpp:directive pos:line="11393" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11393" pos:column="9">ToolWindows_GetToolWindow</name><parameter_list pos:line="11393" pos:column="34">(<param><type><name pos:line="11393" pos:column="35">This</name></type></param>,<param><type><name pos:line="11393" pos:column="40">Name</name></type></param>,<param><type><name pos:line="11393" pos:column="45">ppObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11394" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetToolWindow(This,Name,ppObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="11396" pos:column="1">#<cpp:directive pos:line="11396" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11396" pos:column="9">ToolWindows_get_ToolBox</name><parameter_list pos:line="11396" pos:column="32">(<param><type><name pos:line="11396" pos:column="33">This</name></type></param>,<param><type><name pos:line="11396" pos:column="38">ppToolBox</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11397" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ToolBox(This,ppToolBox) )</cpp:value></cpp:define> 

<cpp:define pos:line="11399" pos:column="1">#<cpp:directive pos:line="11399" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11399" pos:column="9">ToolWindows_get_CommandWindow</name><parameter_list pos:line="11399" pos:column="38">(<param><type><name pos:line="11399" pos:column="39">This</name></type></param>,<param><type><name pos:line="11399" pos:column="44">ppOutputWindow</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11400" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CommandWindow(This,ppOutputWindow) )</cpp:value></cpp:define> 

<cpp:define pos:line="11402" pos:column="1">#<cpp:directive pos:line="11402" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11402" pos:column="9">ToolWindows_get_OutputWindow</name><parameter_list pos:line="11402" pos:column="37">(<param><type><name pos:line="11402" pos:column="38">This</name></type></param>,<param><type><name pos:line="11402" pos:column="43">ppOutputWindow</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11403" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_OutputWindow(This,ppOutputWindow) )</cpp:value></cpp:define> 

<cpp:define pos:line="11405" pos:column="1">#<cpp:directive pos:line="11405" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11405" pos:column="9">ToolWindows_get_SolutionExplorer</name><parameter_list pos:line="11405" pos:column="41">(<param><type><name pos:line="11405" pos:column="42">This</name></type></param>,<param><type><name pos:line="11405" pos:column="47">ppUIHierarchy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11406" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SolutionExplorer(This,ppUIHierarchy) )</cpp:value></cpp:define> 

<cpp:define pos:line="11408" pos:column="1">#<cpp:directive pos:line="11408" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11408" pos:column="9">ToolWindows_get_TaskList</name><parameter_list pos:line="11408" pos:column="33">(<param><type><name pos:line="11408" pos:column="34">This</name></type></param>,<param><type><name pos:line="11408" pos:column="39">ppTaskList</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11409" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_TaskList(This,ppTaskList) )</cpp:value></cpp:define> 

<cpp:define pos:line="11411" pos:column="1">#<cpp:directive pos:line="11411" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11411" pos:column="9">ToolWindows_get_ErrorList</name><parameter_list pos:line="11411" pos:column="34">(<param><type><name pos:line="11411" pos:column="35">This</name></type></param>,<param><type><name pos:line="11411" pos:column="40">ppErrorList</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11412" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ErrorList(This,ppErrorList) )</cpp:value></cpp:define> 

<cpp:endif pos:line="11414" pos:column="1">#<cpp:directive pos:line="11414" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11414" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="11417" pos:column="1">#<cpp:directive pos:line="11417" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11417" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="11422" pos:column="1">#<cpp:directive pos:line="11422" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11422" pos:column="9">/* __ToolWindows_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="11425" pos:column="1">#<cpp:directive pos:line="11425" pos:column="2">ifndef</cpp:directive> <name pos:line="11425" pos:column="9">__Windows2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11426" pos:column="1">#<cpp:directive pos:line="11426" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11426" pos:column="9">__Windows2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="11428" pos:column="1">/* interface Windows2 */</comment>
<comment type="block" pos:line="11429" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="11432" pos:column="1">EXTERN_C</name> <specifier pos:line="11432" pos:column="10">const</specifier> <name pos:line="11432" pos:column="16">IID</name></type> <name pos:line="11432" pos:column="20">IID_Windows2</name></decl>;</decl_stmt>

<cpp:if pos:line="11434" pos:column="1">#<cpp:directive pos:line="11434" pos:column="2">if</cpp:directive> <expr><call><name pos:line="11434" pos:column="5">defined</name><argument_list pos:line="11434" pos:column="12">(<argument><expr><name pos:line="11434" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="11434" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="11434" pos:column="29">!</op:operator><call><name pos:line="11434" pos:column="30">defined</name><argument_list pos:line="11434" pos:column="37">(<argument><expr><name pos:line="11434" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="11436" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="11436" pos:column="19">(<argument pos:line="11436" pos:column="20">"31EFB5B1-C655-4ada-BB52-3ED87FB2A4AE"</argument>)</argument_list></macro>
    <label><name pos:line="11437" pos:column="5">Windows2</name> :</label> <expr_stmt><expr pos:line="11437" pos:column="16">public <name pos:line="11437" pos:column="23">Windows</name>
    <block pos:line="11438" pos:column="5">{
    <expr pos:line="11439" pos:column="5">public<op:operator pos:line="11439" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="11440" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="11440" pos:column="72">HRESULT</name> <name pos:line="11440" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="11440" pos:column="98">CreateToolWindow2</name><argument_list pos:line="11440" pos:column="115">( 
            <argument pos:line="11441" pos:column="13">__RPC__in <comment type="block" pos:line="11441" pos:column="23">/* external definition not present */</comment> AddIn *Addin</argument>,
            <argument pos:line="11442" pos:column="13">__RPC__in BSTR Assembly</argument>,
            <argument pos:line="11443" pos:column="13">__RPC__in BSTR Class</argument>,
            <argument pos:line="11444" pos:column="13">__RPC__in BSTR Caption</argument>,
            <argument pos:line="11445" pos:column="13">__RPC__in BSTR GuidPosition</argument>,
            <comment type="block" pos:line="11446" pos:column="13">/* [out][in] */</comment> <argument pos:line="11446" pos:column="29">__RPC__deref_inout_opt IDispatch **ControlObject</argument>,
            <comment type="block" pos:line="11447" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11447" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="11447" pos:column="54">/* external definition not present */</comment> Window **ppwindowOut</argument>)</argument_list></macro> <op:operator pos:line="11447" pos:column="114">=</op:operator> <lit:literal type="number" pos:line="11447" pos:column="116">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="11451" pos:column="1">#<cpp:directive pos:line="11451" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="11451" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="11453" pos:column="5">typedef <type><struct pos:line="11453" pos:column="13">struct <name pos:line="11453" pos:column="20">Windows2Vtbl</name>
    <block pos:line="11454" pos:column="5">{<public type="default" pos:line="11454" pos:column="6">
        <decl_stmt><decl><type><name pos:line="11455" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="11457" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="11457" pos:column="46">HRESULT</name></type> ( <name pos:line="11457" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="11457" pos:column="74">*</type:modifier><name pos:line="11457" pos:column="75">QueryInterface</name> )<parameter_list pos:line="11457" pos:column="91">( 
            <param><decl><type><name pos:line="11458" pos:column="13">Windows2</name> <type:modifier pos:line="11458" pos:column="22">*</type:modifier></type> <name pos:line="11458" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="11459" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="11459" pos:column="47">struct <name pos:line="11459" pos:column="54">GUID</name> <type:modifier pos:line="11459" pos:column="59">*</type:modifier></type><name pos:line="11459" pos:column="60">riid</name></decl><op:operator pos:line="11459" pos:column="64">,</op:operator>
            <comment type="block" pos:line="11460" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="11460" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="11460" pos:column="59">void</name> <type:modifier pos:line="11460" pos:column="64">*</type:modifier><type:modifier pos:line="11460" pos:column="65">*</type:modifier><name pos:line="11460" pos:column="66">ppvObj</name><op:operator pos:line="11460" pos:column="72">,</op:operator>
            <comment type="block" pos:line="11461" pos:column="13">/* [retval][out] */</comment> <name pos:line="11461" pos:column="33">__RPC__out</name> <name pos:line="11461" pos:column="44">void</name> <type:modifier pos:line="11461" pos:column="49">*</type:modifier><name pos:line="11461" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="11463" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="11463" pos:column="46">HRESULT</name></type> ( <name pos:line="11463" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="11463" pos:column="74">*</type:modifier><name pos:line="11463" pos:column="75">AddRef</name> )<parameter_list pos:line="11463" pos:column="83">( 
            <param><decl><type><name pos:line="11464" pos:column="13">Windows2</name> <type:modifier pos:line="11464" pos:column="22">*</type:modifier></type> <name pos:line="11464" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="11465" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11465" pos:column="33">__RPC__out</name> <name pos:line="11465" pos:column="44">unsigned</name> <name pos:line="11465" pos:column="53">long</name> <type:modifier pos:line="11465" pos:column="58">*</type:modifier></type><name pos:line="11465" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11467" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="11467" pos:column="46">HRESULT</name></type> ( <name pos:line="11467" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="11467" pos:column="74">*</type:modifier><name pos:line="11467" pos:column="75">Release</name> )<parameter_list pos:line="11467" pos:column="84">( 
            <param><decl><type><name pos:line="11468" pos:column="13">Windows2</name> <type:modifier pos:line="11468" pos:column="22">*</type:modifier></type> <name pos:line="11468" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="11469" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11469" pos:column="33">__RPC__out</name> <name pos:line="11469" pos:column="44">unsigned</name> <name pos:line="11469" pos:column="53">long</name> <type:modifier pos:line="11469" pos:column="58">*</type:modifier></type><name pos:line="11469" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11471" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="11471" pos:column="46">HRESULT</name></type> ( <name pos:line="11471" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="11471" pos:column="74">*</type:modifier><name pos:line="11471" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="11471" pos:column="93">( 
            <param><decl><type><name pos:line="11472" pos:column="13">Windows2</name> <type:modifier pos:line="11472" pos:column="22">*</type:modifier></type> <name pos:line="11472" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="11473" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="11473" pos:column="38">__RPC__out</name> <name pos:line="11473" pos:column="49">unsigned</name> <name pos:line="11473" pos:column="58">UINT</name> <type:modifier pos:line="11473" pos:column="63">*</type:modifier></type><name pos:line="11473" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="11474" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11474" pos:column="33">__RPC__out</name> <name pos:line="11474" pos:column="44">void</name> <type:modifier pos:line="11474" pos:column="49">*</type:modifier></type><name pos:line="11474" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11476" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="11476" pos:column="46">HRESULT</name></type> ( <name pos:line="11476" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="11476" pos:column="74">*</type:modifier><name pos:line="11476" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="11476" pos:column="88">( 
            <param><decl><type><name pos:line="11477" pos:column="13">Windows2</name> <type:modifier pos:line="11477" pos:column="22">*</type:modifier></type> <name pos:line="11477" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="11478" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11478" pos:column="37">unsigned</name> <name pos:line="11478" pos:column="46">UINT</name></type> <name pos:line="11478" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="11479" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11479" pos:column="37">unsigned</name> <name pos:line="11479" pos:column="46">long</name></type> <name pos:line="11479" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="11480" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="11480" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="11480" pos:column="59">void</name> <type:modifier pos:line="11480" pos:column="64">*</type:modifier><type:modifier pos:line="11480" pos:column="65">*</type:modifier></type><name pos:line="11480" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="11481" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11481" pos:column="33">__RPC__out</name> <name pos:line="11481" pos:column="44">void</name> <type:modifier pos:line="11481" pos:column="49">*</type:modifier></type><name pos:line="11481" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11483" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="11483" pos:column="46">HRESULT</name> <argument_list pos:line="11483" pos:column="54">( <argument pos:line="11483" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="11483" pos:column="90">(</op:operator> 
            <name pos:line="11484" pos:column="13">Windows2</name> <op:operator pos:line="11484" pos:column="22">*</op:operator> <name pos:line="11484" pos:column="24">This</name><op:operator pos:line="11484" pos:column="28">,</op:operator>
            <comment type="block" pos:line="11485" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11485" pos:column="37">__RPC__in</name> struct <name pos:line="11485" pos:column="54">GUID</name> <op:operator pos:line="11485" pos:column="59">*</op:operator><name pos:line="11485" pos:column="60">riid</name><op:operator pos:line="11485" pos:column="64">,</op:operator>
            <comment type="block" pos:line="11486" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11486" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="11486" pos:column="57">signed</name> <name pos:line="11486" pos:column="64">char</name> <op:operator pos:line="11486" pos:column="69">*</op:operator><op:operator pos:line="11486" pos:column="70">*</op:operator><name pos:line="11486" pos:column="71">rgszNames</name><op:operator pos:line="11486" pos:column="80">,</op:operator>
            <comment type="block" pos:line="11487" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11487" pos:column="37">unsigned</name> <name pos:line="11487" pos:column="46">UINT</name> <name pos:line="11487" pos:column="51">cNames</name><op:operator pos:line="11487" pos:column="57">,</op:operator>
            <comment type="block" pos:line="11488" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11488" pos:column="37">unsigned</name> <name pos:line="11488" pos:column="46">long</name> <name pos:line="11488" pos:column="51">lcid</name><op:operator pos:line="11488" pos:column="55">,</op:operator>
            <comment type="block" pos:line="11489" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="11489" pos:column="38">__RPC__out</name> <name pos:line="11489" pos:column="49">signed</name> <name pos:line="11489" pos:column="56">long</name> <op:operator pos:line="11489" pos:column="61">*</op:operator><name pos:line="11489" pos:column="62">rgdispid</name><op:operator pos:line="11489" pos:column="70">,</op:operator>
            <comment type="block" pos:line="11490" pos:column="13">/* [retval][out] */</comment> <name pos:line="11490" pos:column="33">__RPC__out</name> <name pos:line="11490" pos:column="44">void</name> <op:operator pos:line="11490" pos:column="49">*</op:operator><name pos:line="11490" pos:column="50">retval</name><op:operator pos:line="11490" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="11492" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="11492" pos:column="46">HRESULT</name> <argument_list pos:line="11492" pos:column="54">( <argument pos:line="11492" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="11492" pos:column="83">(</op:operator> 
            <name pos:line="11493" pos:column="13">Windows2</name> <op:operator pos:line="11493" pos:column="22">*</op:operator> <name pos:line="11493" pos:column="24">This</name><op:operator pos:line="11493" pos:column="28">,</op:operator>
            <comment type="block" pos:line="11494" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11494" pos:column="37">signed</name> <name pos:line="11494" pos:column="44">long</name> <name pos:line="11494" pos:column="49">dispidMember</name><op:operator pos:line="11494" pos:column="61">,</op:operator>
            <comment type="block" pos:line="11495" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11495" pos:column="37">__RPC__in</name> struct <name pos:line="11495" pos:column="54">GUID</name> <op:operator pos:line="11495" pos:column="59">*</op:operator><name pos:line="11495" pos:column="60">riid</name><op:operator pos:line="11495" pos:column="64">,</op:operator>
            <comment type="block" pos:line="11496" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11496" pos:column="37">unsigned</name> <name pos:line="11496" pos:column="46">long</name> <name pos:line="11496" pos:column="51">lcid</name><op:operator pos:line="11496" pos:column="55">,</op:operator>
            <comment type="block" pos:line="11497" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11497" pos:column="37">unsigned</name> <name pos:line="11497" pos:column="46">short</name> <name pos:line="11497" pos:column="52">wFlags</name><op:operator pos:line="11497" pos:column="58">,</op:operator>
            <comment type="block" pos:line="11498" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11498" pos:column="37">__RPC__in</name> struct <name pos:line="11498" pos:column="54">DISPPARAMS</name> <op:operator pos:line="11498" pos:column="65">*</op:operator><name pos:line="11498" pos:column="66">pdispparams</name><op:operator pos:line="11498" pos:column="77">,</op:operator>
            <comment type="block" pos:line="11499" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="11499" pos:column="38">__RPC__out</name> <name pos:line="11499" pos:column="49">VARIANT</name> <op:operator pos:line="11499" pos:column="57">*</op:operator><name pos:line="11499" pos:column="58">pvarResult</name><op:operator pos:line="11499" pos:column="68">,</op:operator>
            <comment type="block" pos:line="11500" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="11500" pos:column="38">__RPC__out</name> struct <name pos:line="11500" pos:column="56">EXCEPINFO</name> <op:operator pos:line="11500" pos:column="66">*</op:operator><name pos:line="11500" pos:column="67">pexcepinfo</name><op:operator pos:line="11500" pos:column="77">,</op:operator>
            <comment type="block" pos:line="11501" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="11501" pos:column="38">__RPC__out</name> <name pos:line="11501" pos:column="49">unsigned</name> <name pos:line="11501" pos:column="58">UINT</name> <op:operator pos:line="11501" pos:column="63">*</op:operator><name pos:line="11501" pos:column="64">puArgErr</name><op:operator pos:line="11501" pos:column="72">,</op:operator>
            <comment type="block" pos:line="11502" pos:column="13">/* [retval][out] */</comment> <name pos:line="11502" pos:column="33">__RPC__out</name> <name pos:line="11502" pos:column="44">void</name> <op:operator pos:line="11502" pos:column="49">*</op:operator><name pos:line="11502" pos:column="50">retval</name><op:operator pos:line="11502" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="11504" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="11504" pos:column="34">HRESULT</name></type> ( <name pos:line="11504" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="11504" pos:column="62">*</type:modifier><name pos:line="11504" pos:column="63">Item</name> )<parameter_list pos:line="11504" pos:column="69">( 
            <param><decl><type><name pos:line="11505" pos:column="13">Windows2</name> <type:modifier pos:line="11505" pos:column="22">*</type:modifier></type> <name pos:line="11505" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="11506" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11506" pos:column="37">VARIANT</name></type> <name pos:line="11506" pos:column="45">index</name></decl></param>,
            <comment type="block" pos:line="11507" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11507" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11507" pos:column="54">Window</name> <type:modifier pos:line="11507" pos:column="61">*</type:modifier><type:modifier pos:line="11507" pos:column="62">*</type:modifier></type><name pos:line="11507" pos:column="63">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11509" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11509" pos:column="43">HRESULT</name></type> ( <name pos:line="11509" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11509" pos:column="71">*</type:modifier><name pos:line="11509" pos:column="72">get_Count</name> )<parameter_list pos:line="11509" pos:column="83">( 
            <param><decl><type><name pos:line="11510" pos:column="13">Windows2</name> <type:modifier pos:line="11510" pos:column="22">*</type:modifier></type> <name pos:line="11510" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="11511" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11511" pos:column="33">__RPC__out</name> <name pos:line="11511" pos:column="44">signed</name> <name pos:line="11511" pos:column="51">long</name> <type:modifier pos:line="11511" pos:column="56">*</type:modifier></type><name pos:line="11511" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11513" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="11513" pos:column="46">HRESULT</name></type> ( <name pos:line="11513" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="11513" pos:column="74">*</type:modifier><name pos:line="11513" pos:column="75">_NewEnum</name> )<parameter_list pos:line="11513" pos:column="85">( 
            <param><decl><type><name pos:line="11514" pos:column="13">Windows2</name> <type:modifier pos:line="11514" pos:column="22">*</type:modifier></type> <name pos:line="11514" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="11515" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11515" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11515" pos:column="54">IUnknown</name> <type:modifier pos:line="11515" pos:column="63">*</type:modifier><type:modifier pos:line="11515" pos:column="64">*</type:modifier></type><name pos:line="11515" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11517" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="11517" pos:column="34">HRESULT</name></type> ( <name pos:line="11517" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="11517" pos:column="62">*</type:modifier><name pos:line="11517" pos:column="63">CreateToolWindow</name> )<parameter_list pos:line="11517" pos:column="81">( 
            <param><decl><type><name pos:line="11518" pos:column="13">Windows2</name> <type:modifier pos:line="11518" pos:column="22">*</type:modifier></type> <name pos:line="11518" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="11519" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11519" pos:column="37">__RPC__in_opt</name> <name pos:line="11519" pos:column="51">AddIn</name> <type:modifier pos:line="11519" pos:column="57">*</type:modifier></type><name pos:line="11519" pos:column="58">AddInInst</name></decl></param>,
            <comment type="block" pos:line="11520" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11520" pos:column="37">__RPC__in</name> <name pos:line="11520" pos:column="47">BSTR</name></type> <name pos:line="11520" pos:column="52">ProgID</name></decl></param>,
            <comment type="block" pos:line="11521" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11521" pos:column="37">__RPC__in</name> <name pos:line="11521" pos:column="47">BSTR</name></type> <name pos:line="11521" pos:column="52">Caption</name></decl></param>,
            <comment type="block" pos:line="11522" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11522" pos:column="37">__RPC__in</name> <name pos:line="11522" pos:column="47">BSTR</name></type> <name pos:line="11522" pos:column="52">GuidPosition</name></decl></param>,
            <comment type="block" pos:line="11523" pos:column="13">/* [out][in][idldescattr] */</comment> <param><decl><type><name pos:line="11523" pos:column="42">__RPC__deref_inout_opt</name> <name pos:line="11523" pos:column="65">IDispatch</name> <type:modifier pos:line="11523" pos:column="75">*</type:modifier><type:modifier pos:line="11523" pos:column="76">*</type:modifier></type><name pos:line="11523" pos:column="77">DocObj</name></decl></param>,
            <comment type="block" pos:line="11524" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11524" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11524" pos:column="54">Window</name> <type:modifier pos:line="11524" pos:column="61">*</type:modifier><type:modifier pos:line="11524" pos:column="62">*</type:modifier></type><name pos:line="11524" pos:column="63">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11526" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11526" pos:column="43">HRESULT</name></type> ( <name pos:line="11526" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11526" pos:column="71">*</type:modifier><name pos:line="11526" pos:column="72">get_DTE</name> )<parameter_list pos:line="11526" pos:column="81">( 
            <param><decl><type><name pos:line="11527" pos:column="13">Windows2</name> <type:modifier pos:line="11527" pos:column="22">*</type:modifier></type> <name pos:line="11527" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="11528" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11528" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="11528" pos:column="54">*</type:modifier><type:modifier pos:line="11528" pos:column="55">*</type:modifier></type><name pos:line="11528" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11530" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11530" pos:column="43">HRESULT</name></type> ( <name pos:line="11530" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11530" pos:column="71">*</type:modifier><name pos:line="11530" pos:column="72">get_Parent</name> )<parameter_list pos:line="11530" pos:column="84">( 
            <param><decl><type><name pos:line="11531" pos:column="13">Windows2</name> <type:modifier pos:line="11531" pos:column="22">*</type:modifier></type> <name pos:line="11531" pos:column="24">This</name></decl></param>,
            <comment type="block" pos:line="11532" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11532" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="11532" pos:column="54">*</type:modifier><type:modifier pos:line="11532" pos:column="55">*</type:modifier></type><name pos:line="11532" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11534" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="11534" pos:column="34">HRESULT</name> <argument_list pos:line="11534" pos:column="42">( <argument pos:line="11534" pos:column="44">STDMETHODCALLTYPE *CreateLinkedWindowFrame</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="11534" pos:column="88">(</op:operator> 
            <name pos:line="11535" pos:column="13">Windows2</name> <op:operator pos:line="11535" pos:column="22">*</op:operator> <name pos:line="11535" pos:column="24">This</name><op:operator pos:line="11535" pos:column="28">,</op:operator>
            <comment type="block" pos:line="11536" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11536" pos:column="37">__RPC__in_opt</name> <name pos:line="11536" pos:column="51">Window</name> <op:operator pos:line="11536" pos:column="58">*</op:operator><name pos:line="11536" pos:column="59">Window1</name><op:operator pos:line="11536" pos:column="66">,</op:operator>
            <comment type="block" pos:line="11537" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11537" pos:column="37">__RPC__in_opt</name> <name pos:line="11537" pos:column="51">Window</name> <op:operator pos:line="11537" pos:column="58">*</op:operator><name pos:line="11537" pos:column="59">Window2</name><op:operator pos:line="11537" pos:column="66">,</op:operator>
            <comment type="block" pos:line="11538" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="11538" pos:column="42">vsLinkedWindowType</name> <name pos:line="11538" pos:column="61">Link</name><op:operator pos:line="11538" pos:column="65">,</op:operator>
            <comment type="block" pos:line="11539" pos:column="13">/* [retval][out] */</comment> <name pos:line="11539" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11539" pos:column="54">Window</name> <op:operator pos:line="11539" pos:column="61">*</op:operator><op:operator pos:line="11539" pos:column="62">*</op:operator><name pos:line="11539" pos:column="63">retval</name><op:operator pos:line="11539" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="11541" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="11541" pos:column="64">HRESULT</name></type> ( <name pos:line="11541" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="11541" pos:column="92">*</type:modifier><name pos:line="11541" pos:column="93">CreateToolWindow2</name> )<parameter_list pos:line="11541" pos:column="112">( 
            <param><decl><type><name pos:line="11542" pos:column="13">Windows2</name> <type:modifier pos:line="11542" pos:column="22">*</type:modifier></type> <name pos:line="11542" pos:column="24">This</name></decl></param>,
            <param><decl><type><name pos:line="11543" pos:column="13">__RPC__in</name> <comment type="block" pos:line="11543" pos:column="23">/* external definition not present */</comment> <name pos:line="11543" pos:column="61">AddIn</name> <type:modifier pos:line="11543" pos:column="67">*</type:modifier></type><name pos:line="11543" pos:column="68">Addin</name></decl></param>,
            <param><decl><type><name pos:line="11544" pos:column="13">__RPC__in</name> <name pos:line="11544" pos:column="23">BSTR</name></type> <name pos:line="11544" pos:column="28">Assembly</name></decl></param>,
            <param><decl><type><name pos:line="11545" pos:column="13">__RPC__in</name> <name pos:line="11545" pos:column="23">BSTR</name></type> <name pos:line="11545" pos:column="28">Class</name></decl></param>,
            <param><decl><type><name pos:line="11546" pos:column="13">__RPC__in</name> <name pos:line="11546" pos:column="23">BSTR</name></type> <name pos:line="11546" pos:column="28">Caption</name></decl></param>,
            <param><decl><type><name pos:line="11547" pos:column="13">__RPC__in</name> <name pos:line="11547" pos:column="23">BSTR</name></type> <name pos:line="11547" pos:column="28">GuidPosition</name></decl></param>,
            <comment type="block" pos:line="11548" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="11548" pos:column="29">__RPC__deref_inout_opt</name> <name pos:line="11548" pos:column="52">IDispatch</name> <type:modifier pos:line="11548" pos:column="62">*</type:modifier><type:modifier pos:line="11548" pos:column="63">*</type:modifier></type><name pos:line="11548" pos:column="64">ControlObject</name></decl></param>,
            <comment type="block" pos:line="11549" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11549" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="11549" pos:column="54">/* external definition not present */</comment> <name pos:line="11549" pos:column="92">Window</name> <type:modifier pos:line="11549" pos:column="99">*</type:modifier><type:modifier pos:line="11549" pos:column="100">*</type:modifier></type><name pos:line="11549" pos:column="101">ppwindowOut</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11551" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="11552" pos:column="7">Windows2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="11554" pos:column="5">interface</name></type> <name pos:line="11554" pos:column="15">Windows2</name>
    <argument_list pos:line="11555" pos:column="5">{
        <argument><expr><name pos:line="11556" pos:column="9">CONST_VTBL</name> struct <name pos:line="11556" pos:column="27">Windows2Vtbl</name> <op:operator pos:line="11556" pos:column="40">*</op:operator><name pos:line="11556" pos:column="41">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="11561" pos:column="1">#<cpp:directive pos:line="11561" pos:column="2">ifdef</cpp:directive> <name pos:line="11561" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="11564" pos:column="1">#<cpp:directive pos:line="11564" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11564" pos:column="9">Windows2_QueryInterface</name><parameter_list pos:line="11564" pos:column="32">(<param><type><name pos:line="11564" pos:column="33">This</name></type></param>,<param><type><name pos:line="11564" pos:column="38">riid</name></type></param>,<param><type><name pos:line="11564" pos:column="43">ppvObj</name></type></param>,<param><type><name pos:line="11564" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11565" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11567" pos:column="1">#<cpp:directive pos:line="11567" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11567" pos:column="9">Windows2_AddRef</name><parameter_list pos:line="11567" pos:column="24">(<param><type><name pos:line="11567" pos:column="25">This</name></type></param>,<param><type><name pos:line="11567" pos:column="30">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11568" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11570" pos:column="1">#<cpp:directive pos:line="11570" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11570" pos:column="9">Windows2_Release</name><parameter_list pos:line="11570" pos:column="25">(<param><type><name pos:line="11570" pos:column="26">This</name></type></param>,<param><type><name pos:line="11570" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11571" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11573" pos:column="1">#<cpp:directive pos:line="11573" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11573" pos:column="9">Windows2_GetTypeInfoCount</name><parameter_list pos:line="11573" pos:column="34">(<param><type><name pos:line="11573" pos:column="35">This</name></type></param>,<param><type><name pos:line="11573" pos:column="40">pctinfo</name></type></param>,<param><type><name pos:line="11573" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11574" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11576" pos:column="1">#<cpp:directive pos:line="11576" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11576" pos:column="9">Windows2_GetTypeInfo</name><parameter_list pos:line="11576" pos:column="29">(<param><type><name pos:line="11576" pos:column="30">This</name></type></param>,<param><type><name pos:line="11576" pos:column="35">itinfo</name></type></param>,<param><type><name pos:line="11576" pos:column="42">lcid</name></type></param>,<param><type><name pos:line="11576" pos:column="47">pptinfo</name></type></param>,<param><type><name pos:line="11576" pos:column="55">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11577" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11579" pos:column="1">#<cpp:directive pos:line="11579" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11579" pos:column="9">Windows2_GetIDsOfNames</name><parameter_list pos:line="11579" pos:column="31">(<param><type><name pos:line="11579" pos:column="32">This</name></type></param>,<param><type><name pos:line="11579" pos:column="37">riid</name></type></param>,<param><type><name pos:line="11579" pos:column="42">rgszNames</name></type></param>,<param><type><name pos:line="11579" pos:column="52">cNames</name></type></param>,<param><type><name pos:line="11579" pos:column="59">lcid</name></type></param>,<param><type><name pos:line="11579" pos:column="64">rgdispid</name></type></param>,<param><type><name pos:line="11579" pos:column="73">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11580" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11582" pos:column="1">#<cpp:directive pos:line="11582" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11582" pos:column="9">Windows2_Invoke</name><parameter_list pos:line="11582" pos:column="24">(<param><type><name pos:line="11582" pos:column="25">This</name></type></param>,<param><type><name pos:line="11582" pos:column="30">dispidMember</name></type></param>,<param><type><name pos:line="11582" pos:column="43">riid</name></type></param>,<param><type><name pos:line="11582" pos:column="48">lcid</name></type></param>,<param><type><name pos:line="11582" pos:column="53">wFlags</name></type></param>,<param><type><name pos:line="11582" pos:column="60">pdispparams</name></type></param>,<param><type><name pos:line="11582" pos:column="72">pvarResult</name></type></param>,<param><type><name pos:line="11582" pos:column="83">pexcepinfo</name></type></param>,<param><type><name pos:line="11582" pos:column="94">puArgErr</name></type></param>,<param><type><name pos:line="11582" pos:column="103">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11583" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11585" pos:column="1">#<cpp:directive pos:line="11585" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11585" pos:column="9">Windows2_Item</name><parameter_list pos:line="11585" pos:column="22">(<param><type><name pos:line="11585" pos:column="23">This</name></type></param>,<param><type><name pos:line="11585" pos:column="28">index</name></type></param>,<param><type><name pos:line="11585" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11586" pos:column="5">( (This)-&gt;lpVtbl -&gt; Item(This,index,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11588" pos:column="1">#<cpp:directive pos:line="11588" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11588" pos:column="9">Windows2_get_Count</name><parameter_list pos:line="11588" pos:column="27">(<param><type><name pos:line="11588" pos:column="28">This</name></type></param>,<param><type><name pos:line="11588" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11589" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Count(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11591" pos:column="1">#<cpp:directive pos:line="11591" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11591" pos:column="9">Windows2__NewEnum</name><parameter_list pos:line="11591" pos:column="26">(<param><type><name pos:line="11591" pos:column="27">This</name></type></param>,<param><type><name pos:line="11591" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11592" pos:column="5">( (This)-&gt;lpVtbl -&gt; _NewEnum(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11594" pos:column="1">#<cpp:directive pos:line="11594" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11594" pos:column="9">Windows2_CreateToolWindow</name><parameter_list pos:line="11594" pos:column="34">(<param><type><name pos:line="11594" pos:column="35">This</name></type></param>,<param><type><name pos:line="11594" pos:column="40">AddInInst</name></type></param>,<param><type><name pos:line="11594" pos:column="50">ProgID</name></type></param>,<param><type><name pos:line="11594" pos:column="57">Caption</name></type></param>,<param><type><name pos:line="11594" pos:column="65">GuidPosition</name></type></param>,<param><type><name pos:line="11594" pos:column="78">DocObj</name></type></param>,<param><type><name pos:line="11594" pos:column="85">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11595" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateToolWindow(This,AddInInst,ProgID,Caption,GuidPosition,DocObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11597" pos:column="1">#<cpp:directive pos:line="11597" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11597" pos:column="9">Windows2_get_DTE</name><parameter_list pos:line="11597" pos:column="25">(<param><type><name pos:line="11597" pos:column="26">This</name></type></param>,<param><type><name pos:line="11597" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11598" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11600" pos:column="1">#<cpp:directive pos:line="11600" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11600" pos:column="9">Windows2_get_Parent</name><parameter_list pos:line="11600" pos:column="28">(<param><type><name pos:line="11600" pos:column="29">This</name></type></param>,<param><type><name pos:line="11600" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11601" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11603" pos:column="1">#<cpp:directive pos:line="11603" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11603" pos:column="9">Windows2_CreateLinkedWindowFrame</name><parameter_list pos:line="11603" pos:column="41">(<param><type><name pos:line="11603" pos:column="42">This</name></type></param>,<param><type><name pos:line="11603" pos:column="47">Window1</name></type></param>,<param><type><name pos:line="11603" pos:column="55">Window2</name></type></param>,<param><type><name pos:line="11603" pos:column="63">Link</name></type></param>,<param><type><name pos:line="11603" pos:column="68">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11604" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateLinkedWindowFrame(This,Window1,Window2,Link,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="11607" pos:column="1">#<cpp:directive pos:line="11607" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11607" pos:column="9">Windows2_CreateToolWindow2</name><parameter_list pos:line="11607" pos:column="35">(<param><type><name pos:line="11607" pos:column="36">This</name></type></param>,<param><type><name pos:line="11607" pos:column="41">Addin</name></type></param>,<param><type><name pos:line="11607" pos:column="47">Assembly</name></type></param>,<param><type><name pos:line="11607" pos:column="56">Class</name></type></param>,<param><type><name pos:line="11607" pos:column="62">Caption</name></type></param>,<param><type><name pos:line="11607" pos:column="70">GuidPosition</name></type></param>,<param><type><name pos:line="11607" pos:column="83">ControlObject</name></type></param>,<param><type><name pos:line="11607" pos:column="97">ppwindowOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11608" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateToolWindow2(This,Addin,Assembly,Class,Caption,GuidPosition,ControlObject,ppwindowOut) )</cpp:value></cpp:define> 

<cpp:endif pos:line="11610" pos:column="1">#<cpp:directive pos:line="11610" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="11610" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="11613" pos:column="1">#<cpp:directive pos:line="11613" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11613" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="11618" pos:column="1">#<cpp:directive pos:line="11618" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="11618" pos:column="9">/* __Windows2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="11621" pos:column="1">#<cpp:directive pos:line="11621" pos:column="2">ifndef</cpp:directive> <name pos:line="11621" pos:column="9">__Window2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="11622" pos:column="1">#<cpp:directive pos:line="11622" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11622" pos:column="9">__Window2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="11624" pos:column="1">/* interface Window2 */</comment>
<comment type="block" pos:line="11625" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="11628" pos:column="1">EXTERN_C</name> <specifier pos:line="11628" pos:column="10">const</specifier> <name pos:line="11628" pos:column="16">IID</name></type> <name pos:line="11628" pos:column="20">IID_Window2</name></decl>;</decl_stmt>

<cpp:if pos:line="11630" pos:column="1">#<cpp:directive pos:line="11630" pos:column="2">if</cpp:directive> <expr><call><name pos:line="11630" pos:column="5">defined</name><argument_list pos:line="11630" pos:column="12">(<argument><expr><name pos:line="11630" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="11630" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="11630" pos:column="29">!</op:operator><call><name pos:line="11630" pos:column="30">defined</name><argument_list pos:line="11630" pos:column="37">(<argument><expr><name pos:line="11630" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="11632" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="11632" pos:column="19">(<argument pos:line="11632" pos:column="20">"25731932-3283-4ae0-B7CF-F4691B8BE523"</argument>)</argument_list></macro>
    <label><name pos:line="11633" pos:column="5">Window2</name> :</label> <expr_stmt><expr pos:line="11633" pos:column="15">public <name pos:line="11633" pos:column="22">Window</name>
    <block pos:line="11634" pos:column="5">{
    <expr pos:line="11635" pos:column="5">public<op:operator pos:line="11635" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="11636" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="11636" pos:column="81">HRESULT</name> <name pos:line="11636" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="11636" pos:column="107">get_CommandBars</name><argument_list pos:line="11636" pos:column="122">( 
            <comment type="block" pos:line="11637" pos:column="13">/* [retval][out] */</comment> <argument pos:line="11637" pos:column="33">__RPC__deref_out_opt IDispatch **ppcbs</argument>)</argument_list></macro> <op:operator pos:line="11637" pos:column="73">=</op:operator> <lit:literal type="number" pos:line="11637" pos:column="75">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="11641" pos:column="1">#<cpp:directive pos:line="11641" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="11641" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="11643" pos:column="5">typedef <type><struct pos:line="11643" pos:column="13">struct <name pos:line="11643" pos:column="20">Window2Vtbl</name>
    <block pos:line="11644" pos:column="5">{<public type="default" pos:line="11644" pos:column="6">
        <decl_stmt><decl><type><name pos:line="11645" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="11647" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="11647" pos:column="46">HRESULT</name></type> ( <name pos:line="11647" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="11647" pos:column="74">*</type:modifier><name pos:line="11647" pos:column="75">QueryInterface</name> )<parameter_list pos:line="11647" pos:column="91">( 
            <param><decl><type><name pos:line="11648" pos:column="13">Window2</name> <type:modifier pos:line="11648" pos:column="21">*</type:modifier></type> <name pos:line="11648" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11649" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="11649" pos:column="47">struct <name pos:line="11649" pos:column="54">GUID</name> <type:modifier pos:line="11649" pos:column="59">*</type:modifier></type><name pos:line="11649" pos:column="60">riid</name></decl><op:operator pos:line="11649" pos:column="64">,</op:operator>
            <comment type="block" pos:line="11650" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="11650" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="11650" pos:column="59">void</name> <type:modifier pos:line="11650" pos:column="64">*</type:modifier><type:modifier pos:line="11650" pos:column="65">*</type:modifier><name pos:line="11650" pos:column="66">ppvObj</name><op:operator pos:line="11650" pos:column="72">,</op:operator>
            <comment type="block" pos:line="11651" pos:column="13">/* [retval][out] */</comment> <name pos:line="11651" pos:column="33">__RPC__out</name> <name pos:line="11651" pos:column="44">void</name> <type:modifier pos:line="11651" pos:column="49">*</type:modifier><name pos:line="11651" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="11653" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="11653" pos:column="46">HRESULT</name></type> ( <name pos:line="11653" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="11653" pos:column="74">*</type:modifier><name pos:line="11653" pos:column="75">AddRef</name> )<parameter_list pos:line="11653" pos:column="83">( 
            <param><decl><type><name pos:line="11654" pos:column="13">Window2</name> <type:modifier pos:line="11654" pos:column="21">*</type:modifier></type> <name pos:line="11654" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11655" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11655" pos:column="33">__RPC__out</name> <name pos:line="11655" pos:column="44">unsigned</name> <name pos:line="11655" pos:column="53">long</name> <type:modifier pos:line="11655" pos:column="58">*</type:modifier></type><name pos:line="11655" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11657" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="11657" pos:column="46">HRESULT</name></type> ( <name pos:line="11657" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="11657" pos:column="74">*</type:modifier><name pos:line="11657" pos:column="75">Release</name> )<parameter_list pos:line="11657" pos:column="84">( 
            <param><decl><type><name pos:line="11658" pos:column="13">Window2</name> <type:modifier pos:line="11658" pos:column="21">*</type:modifier></type> <name pos:line="11658" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11659" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11659" pos:column="33">__RPC__out</name> <name pos:line="11659" pos:column="44">unsigned</name> <name pos:line="11659" pos:column="53">long</name> <type:modifier pos:line="11659" pos:column="58">*</type:modifier></type><name pos:line="11659" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11661" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="11661" pos:column="46">HRESULT</name></type> ( <name pos:line="11661" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="11661" pos:column="74">*</type:modifier><name pos:line="11661" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="11661" pos:column="93">( 
            <param><decl><type><name pos:line="11662" pos:column="13">Window2</name> <type:modifier pos:line="11662" pos:column="21">*</type:modifier></type> <name pos:line="11662" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11663" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="11663" pos:column="38">__RPC__out</name> <name pos:line="11663" pos:column="49">unsigned</name> <name pos:line="11663" pos:column="58">UINT</name> <type:modifier pos:line="11663" pos:column="63">*</type:modifier></type><name pos:line="11663" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="11664" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11664" pos:column="33">__RPC__out</name> <name pos:line="11664" pos:column="44">void</name> <type:modifier pos:line="11664" pos:column="49">*</type:modifier></type><name pos:line="11664" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11666" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="11666" pos:column="46">HRESULT</name></type> ( <name pos:line="11666" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="11666" pos:column="74">*</type:modifier><name pos:line="11666" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="11666" pos:column="88">( 
            <param><decl><type><name pos:line="11667" pos:column="13">Window2</name> <type:modifier pos:line="11667" pos:column="21">*</type:modifier></type> <name pos:line="11667" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11668" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11668" pos:column="37">unsigned</name> <name pos:line="11668" pos:column="46">UINT</name></type> <name pos:line="11668" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="11669" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11669" pos:column="37">unsigned</name> <name pos:line="11669" pos:column="46">long</name></type> <name pos:line="11669" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="11670" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="11670" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="11670" pos:column="59">void</name> <type:modifier pos:line="11670" pos:column="64">*</type:modifier><type:modifier pos:line="11670" pos:column="65">*</type:modifier></type><name pos:line="11670" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="11671" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11671" pos:column="33">__RPC__out</name> <name pos:line="11671" pos:column="44">void</name> <type:modifier pos:line="11671" pos:column="49">*</type:modifier></type><name pos:line="11671" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11673" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="11673" pos:column="46">HRESULT</name> <argument_list pos:line="11673" pos:column="54">( <argument pos:line="11673" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="11673" pos:column="90">(</op:operator> 
            <name pos:line="11674" pos:column="13">Window2</name> <op:operator pos:line="11674" pos:column="21">*</op:operator> <name pos:line="11674" pos:column="23">This</name><op:operator pos:line="11674" pos:column="27">,</op:operator>
            <comment type="block" pos:line="11675" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11675" pos:column="37">__RPC__in</name> struct <name pos:line="11675" pos:column="54">GUID</name> <op:operator pos:line="11675" pos:column="59">*</op:operator><name pos:line="11675" pos:column="60">riid</name><op:operator pos:line="11675" pos:column="64">,</op:operator>
            <comment type="block" pos:line="11676" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11676" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="11676" pos:column="57">signed</name> <name pos:line="11676" pos:column="64">char</name> <op:operator pos:line="11676" pos:column="69">*</op:operator><op:operator pos:line="11676" pos:column="70">*</op:operator><name pos:line="11676" pos:column="71">rgszNames</name><op:operator pos:line="11676" pos:column="80">,</op:operator>
            <comment type="block" pos:line="11677" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11677" pos:column="37">unsigned</name> <name pos:line="11677" pos:column="46">UINT</name> <name pos:line="11677" pos:column="51">cNames</name><op:operator pos:line="11677" pos:column="57">,</op:operator>
            <comment type="block" pos:line="11678" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11678" pos:column="37">unsigned</name> <name pos:line="11678" pos:column="46">long</name> <name pos:line="11678" pos:column="51">lcid</name><op:operator pos:line="11678" pos:column="55">,</op:operator>
            <comment type="block" pos:line="11679" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="11679" pos:column="38">__RPC__out</name> <name pos:line="11679" pos:column="49">signed</name> <name pos:line="11679" pos:column="56">long</name> <op:operator pos:line="11679" pos:column="61">*</op:operator><name pos:line="11679" pos:column="62">rgdispid</name><op:operator pos:line="11679" pos:column="70">,</op:operator>
            <comment type="block" pos:line="11680" pos:column="13">/* [retval][out] */</comment> <name pos:line="11680" pos:column="33">__RPC__out</name> <name pos:line="11680" pos:column="44">void</name> <op:operator pos:line="11680" pos:column="49">*</op:operator><name pos:line="11680" pos:column="50">retval</name><op:operator pos:line="11680" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="11682" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="11682" pos:column="46">HRESULT</name> <argument_list pos:line="11682" pos:column="54">( <argument pos:line="11682" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="11682" pos:column="83">(</op:operator> 
            <name pos:line="11683" pos:column="13">Window2</name> <op:operator pos:line="11683" pos:column="21">*</op:operator> <name pos:line="11683" pos:column="23">This</name><op:operator pos:line="11683" pos:column="27">,</op:operator>
            <comment type="block" pos:line="11684" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11684" pos:column="37">signed</name> <name pos:line="11684" pos:column="44">long</name> <name pos:line="11684" pos:column="49">dispidMember</name><op:operator pos:line="11684" pos:column="61">,</op:operator>
            <comment type="block" pos:line="11685" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11685" pos:column="37">__RPC__in</name> struct <name pos:line="11685" pos:column="54">GUID</name> <op:operator pos:line="11685" pos:column="59">*</op:operator><name pos:line="11685" pos:column="60">riid</name><op:operator pos:line="11685" pos:column="64">,</op:operator>
            <comment type="block" pos:line="11686" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11686" pos:column="37">unsigned</name> <name pos:line="11686" pos:column="46">long</name> <name pos:line="11686" pos:column="51">lcid</name><op:operator pos:line="11686" pos:column="55">,</op:operator>
            <comment type="block" pos:line="11687" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11687" pos:column="37">unsigned</name> <name pos:line="11687" pos:column="46">short</name> <name pos:line="11687" pos:column="52">wFlags</name><op:operator pos:line="11687" pos:column="58">,</op:operator>
            <comment type="block" pos:line="11688" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="11688" pos:column="37">__RPC__in</name> struct <name pos:line="11688" pos:column="54">DISPPARAMS</name> <op:operator pos:line="11688" pos:column="65">*</op:operator><name pos:line="11688" pos:column="66">pdispparams</name><op:operator pos:line="11688" pos:column="77">,</op:operator>
            <comment type="block" pos:line="11689" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="11689" pos:column="38">__RPC__out</name> <name pos:line="11689" pos:column="49">VARIANT</name> <op:operator pos:line="11689" pos:column="57">*</op:operator><name pos:line="11689" pos:column="58">pvarResult</name><op:operator pos:line="11689" pos:column="68">,</op:operator>
            <comment type="block" pos:line="11690" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="11690" pos:column="38">__RPC__out</name> struct <name pos:line="11690" pos:column="56">EXCEPINFO</name> <op:operator pos:line="11690" pos:column="66">*</op:operator><name pos:line="11690" pos:column="67">pexcepinfo</name><op:operator pos:line="11690" pos:column="77">,</op:operator>
            <comment type="block" pos:line="11691" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="11691" pos:column="38">__RPC__out</name> <name pos:line="11691" pos:column="49">unsigned</name> <name pos:line="11691" pos:column="58">UINT</name> <op:operator pos:line="11691" pos:column="63">*</op:operator><name pos:line="11691" pos:column="64">puArgErr</name><op:operator pos:line="11691" pos:column="72">,</op:operator>
            <comment type="block" pos:line="11692" pos:column="13">/* [retval][out] */</comment> <name pos:line="11692" pos:column="33">__RPC__out</name> <name pos:line="11692" pos:column="44">void</name> <op:operator pos:line="11692" pos:column="49">*</op:operator><name pos:line="11692" pos:column="50">retval</name><op:operator pos:line="11692" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="11694" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11694" pos:column="43">HRESULT</name></type> ( <name pos:line="11694" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11694" pos:column="71">*</type:modifier><name pos:line="11694" pos:column="72">get_Collection</name> )<parameter_list pos:line="11694" pos:column="88">( 
            <param><decl><type><name pos:line="11695" pos:column="13">Window2</name> <type:modifier pos:line="11695" pos:column="21">*</type:modifier></type> <name pos:line="11695" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11696" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11696" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11696" pos:column="54">Windows</name> <type:modifier pos:line="11696" pos:column="62">*</type:modifier><type:modifier pos:line="11696" pos:column="63">*</type:modifier></type><name pos:line="11696" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11698" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11698" pos:column="43">HRESULT</name></type> ( <name pos:line="11698" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11698" pos:column="71">*</type:modifier><name pos:line="11698" pos:column="72">get_Visible</name> )<parameter_list pos:line="11698" pos:column="85">( 
            <param><decl><type><name pos:line="11699" pos:column="13">Window2</name> <type:modifier pos:line="11699" pos:column="21">*</type:modifier></type> <name pos:line="11699" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11700" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11700" pos:column="33">__RPC__out</name> <name pos:line="11700" pos:column="44">BOOLEAN</name> <type:modifier pos:line="11700" pos:column="52">*</type:modifier></type><name pos:line="11700" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11702" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="11702" pos:column="43">HRESULT</name></type> ( <name pos:line="11702" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11702" pos:column="71">*</type:modifier><name pos:line="11702" pos:column="72">put_Visible</name> )<parameter_list pos:line="11702" pos:column="85">( 
            <param><decl><type><name pos:line="11703" pos:column="13">Window2</name> <type:modifier pos:line="11703" pos:column="21">*</type:modifier></type> <name pos:line="11703" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11704" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11704" pos:column="37">BOOLEAN</name></type> <name pos:line="11704" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="11705" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11705" pos:column="33">__RPC__out</name> <name pos:line="11705" pos:column="44">void</name> <type:modifier pos:line="11705" pos:column="49">*</type:modifier></type><name pos:line="11705" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11707" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11707" pos:column="43">HRESULT</name></type> ( <name pos:line="11707" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11707" pos:column="71">*</type:modifier><name pos:line="11707" pos:column="72">get_Left</name> )<parameter_list pos:line="11707" pos:column="82">( 
            <param><decl><type><name pos:line="11708" pos:column="13">Window2</name> <type:modifier pos:line="11708" pos:column="21">*</type:modifier></type> <name pos:line="11708" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11709" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11709" pos:column="33">__RPC__out</name> <name pos:line="11709" pos:column="44">signed</name> <name pos:line="11709" pos:column="51">long</name> <type:modifier pos:line="11709" pos:column="56">*</type:modifier></type><name pos:line="11709" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11711" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="11711" pos:column="43">HRESULT</name></type> ( <name pos:line="11711" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11711" pos:column="71">*</type:modifier><name pos:line="11711" pos:column="72">put_Left</name> )<parameter_list pos:line="11711" pos:column="82">( 
            <param><decl><type><name pos:line="11712" pos:column="13">Window2</name> <type:modifier pos:line="11712" pos:column="21">*</type:modifier></type> <name pos:line="11712" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11713" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11713" pos:column="37">signed</name> <name pos:line="11713" pos:column="44">long</name></type> <name pos:line="11713" pos:column="49">noname</name></decl></param>,
            <comment type="block" pos:line="11714" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11714" pos:column="33">__RPC__out</name> <name pos:line="11714" pos:column="44">void</name> <type:modifier pos:line="11714" pos:column="49">*</type:modifier></type><name pos:line="11714" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11716" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11716" pos:column="43">HRESULT</name></type> ( <name pos:line="11716" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11716" pos:column="71">*</type:modifier><name pos:line="11716" pos:column="72">get_Top</name> )<parameter_list pos:line="11716" pos:column="81">( 
            <param><decl><type><name pos:line="11717" pos:column="13">Window2</name> <type:modifier pos:line="11717" pos:column="21">*</type:modifier></type> <name pos:line="11717" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11718" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11718" pos:column="33">__RPC__out</name> <name pos:line="11718" pos:column="44">signed</name> <name pos:line="11718" pos:column="51">long</name> <type:modifier pos:line="11718" pos:column="56">*</type:modifier></type><name pos:line="11718" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11720" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="11720" pos:column="43">HRESULT</name></type> ( <name pos:line="11720" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11720" pos:column="71">*</type:modifier><name pos:line="11720" pos:column="72">put_Top</name> )<parameter_list pos:line="11720" pos:column="81">( 
            <param><decl><type><name pos:line="11721" pos:column="13">Window2</name> <type:modifier pos:line="11721" pos:column="21">*</type:modifier></type> <name pos:line="11721" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11722" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11722" pos:column="37">signed</name> <name pos:line="11722" pos:column="44">long</name></type> <name pos:line="11722" pos:column="49">noname</name></decl></param>,
            <comment type="block" pos:line="11723" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11723" pos:column="33">__RPC__out</name> <name pos:line="11723" pos:column="44">void</name> <type:modifier pos:line="11723" pos:column="49">*</type:modifier></type><name pos:line="11723" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11725" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11725" pos:column="43">HRESULT</name></type> ( <name pos:line="11725" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11725" pos:column="71">*</type:modifier><name pos:line="11725" pos:column="72">get_Width</name> )<parameter_list pos:line="11725" pos:column="83">( 
            <param><decl><type><name pos:line="11726" pos:column="13">Window2</name> <type:modifier pos:line="11726" pos:column="21">*</type:modifier></type> <name pos:line="11726" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11727" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11727" pos:column="33">__RPC__out</name> <name pos:line="11727" pos:column="44">signed</name> <name pos:line="11727" pos:column="51">long</name> <type:modifier pos:line="11727" pos:column="56">*</type:modifier></type><name pos:line="11727" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11729" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="11729" pos:column="43">HRESULT</name></type> ( <name pos:line="11729" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11729" pos:column="71">*</type:modifier><name pos:line="11729" pos:column="72">put_Width</name> )<parameter_list pos:line="11729" pos:column="83">( 
            <param><decl><type><name pos:line="11730" pos:column="13">Window2</name> <type:modifier pos:line="11730" pos:column="21">*</type:modifier></type> <name pos:line="11730" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11731" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11731" pos:column="37">signed</name> <name pos:line="11731" pos:column="44">long</name></type> <name pos:line="11731" pos:column="49">noname</name></decl></param>,
            <comment type="block" pos:line="11732" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11732" pos:column="33">__RPC__out</name> <name pos:line="11732" pos:column="44">void</name> <type:modifier pos:line="11732" pos:column="49">*</type:modifier></type><name pos:line="11732" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11734" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11734" pos:column="43">HRESULT</name></type> ( <name pos:line="11734" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11734" pos:column="71">*</type:modifier><name pos:line="11734" pos:column="72">get_Height</name> )<parameter_list pos:line="11734" pos:column="84">( 
            <param><decl><type><name pos:line="11735" pos:column="13">Window2</name> <type:modifier pos:line="11735" pos:column="21">*</type:modifier></type> <name pos:line="11735" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11736" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11736" pos:column="33">__RPC__out</name> <name pos:line="11736" pos:column="44">signed</name> <name pos:line="11736" pos:column="51">long</name> <type:modifier pos:line="11736" pos:column="56">*</type:modifier></type><name pos:line="11736" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11738" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="11738" pos:column="43">HRESULT</name></type> ( <name pos:line="11738" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11738" pos:column="71">*</type:modifier><name pos:line="11738" pos:column="72">put_Height</name> )<parameter_list pos:line="11738" pos:column="84">( 
            <param><decl><type><name pos:line="11739" pos:column="13">Window2</name> <type:modifier pos:line="11739" pos:column="21">*</type:modifier></type> <name pos:line="11739" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11740" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11740" pos:column="37">signed</name> <name pos:line="11740" pos:column="44">long</name></type> <name pos:line="11740" pos:column="49">noname</name></decl></param>,
            <comment type="block" pos:line="11741" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11741" pos:column="33">__RPC__out</name> <name pos:line="11741" pos:column="44">void</name> <type:modifier pos:line="11741" pos:column="49">*</type:modifier></type><name pos:line="11741" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11743" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="11743" pos:column="43">HRESULT</name> <argument_list pos:line="11743" pos:column="51">( <argument pos:line="11743" pos:column="53">STDMETHODCALLTYPE *get_WindowState</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="11743" pos:column="89">(</op:operator> 
            <name pos:line="11744" pos:column="13">Window2</name> <op:operator pos:line="11744" pos:column="21">*</op:operator> <name pos:line="11744" pos:column="23">This</name><op:operator pos:line="11744" pos:column="27">,</op:operator>
            <comment type="block" pos:line="11745" pos:column="13">/* [retval][out] */</comment> <name pos:line="11745" pos:column="33">__RPC__out</name> enum <name pos:line="11745" pos:column="49">vsWindowState</name> <op:operator pos:line="11745" pos:column="63">*</op:operator><name pos:line="11745" pos:column="64">retval</name><op:operator pos:line="11745" pos:column="70">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="11747" pos:column="9">/* [id][propput][funcdescattr] */</comment> <macro><name pos:line="11747" pos:column="43">HRESULT</name> <argument_list pos:line="11747" pos:column="51">( <argument pos:line="11747" pos:column="53">STDMETHODCALLTYPE *put_WindowState</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="11747" pos:column="89">(</op:operator> 
            <name pos:line="11748" pos:column="13">Window2</name> <op:operator pos:line="11748" pos:column="21">*</op:operator> <name pos:line="11748" pos:column="23">This</name><op:operator pos:line="11748" pos:column="27">,</op:operator>
            <comment type="block" pos:line="11749" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="11749" pos:column="42">vsWindowState</name> <name pos:line="11749" pos:column="56">noname</name><op:operator pos:line="11749" pos:column="62">,</op:operator>
            <comment type="block" pos:line="11750" pos:column="13">/* [retval][out] */</comment> <name pos:line="11750" pos:column="33">__RPC__out</name> <name pos:line="11750" pos:column="44">void</name> <op:operator pos:line="11750" pos:column="49">*</op:operator><name pos:line="11750" pos:column="50">retval</name><op:operator pos:line="11750" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="11752" pos:column="9">/* [id][hidden][funcdescattr] */</comment> <function_decl><type><name pos:line="11752" pos:column="42">HRESULT</name></type> ( <name pos:line="11752" pos:column="52">STDMETHODCALLTYPE</name> <type:modifier pos:line="11752" pos:column="70">*</type:modifier><name pos:line="11752" pos:column="71">SetFocus</name> )<parameter_list pos:line="11752" pos:column="81">( 
            <param><decl><type><name pos:line="11753" pos:column="13">Window2</name> <type:modifier pos:line="11753" pos:column="21">*</type:modifier></type> <name pos:line="11753" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11754" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11754" pos:column="33">__RPC__out</name> <name pos:line="11754" pos:column="44">void</name> <type:modifier pos:line="11754" pos:column="49">*</type:modifier></type><name pos:line="11754" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11756" pos:column="9">/* [id][propget][hidden][funcdescattr] */</comment> <macro><name pos:line="11756" pos:column="51">HRESULT</name> <argument_list pos:line="11756" pos:column="59">( <argument pos:line="11756" pos:column="61">STDMETHODCALLTYPE *get_Type</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="11756" pos:column="90">(</op:operator> 
            <name pos:line="11757" pos:column="13">Window2</name> <op:operator pos:line="11757" pos:column="21">*</op:operator> <name pos:line="11757" pos:column="23">This</name><op:operator pos:line="11757" pos:column="27">,</op:operator>
            <comment type="block" pos:line="11758" pos:column="13">/* [retval][out] */</comment> <name pos:line="11758" pos:column="33">__RPC__out</name> enum <name pos:line="11758" pos:column="49">vsWindowType</name> <op:operator pos:line="11758" pos:column="62">*</op:operator><name pos:line="11758" pos:column="63">retval</name><op:operator pos:line="11758" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="11760" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="11760" pos:column="34">HRESULT</name> <argument_list pos:line="11760" pos:column="42">( <argument pos:line="11760" pos:column="44">STDMETHODCALLTYPE *SetKind</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="11760" pos:column="72">(</op:operator> 
            <name pos:line="11761" pos:column="13">Window2</name> <op:operator pos:line="11761" pos:column="21">*</op:operator> <name pos:line="11761" pos:column="23">This</name><op:operator pos:line="11761" pos:column="27">,</op:operator>
            <comment type="block" pos:line="11762" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="11762" pos:column="42">vsWindowType</name> <name pos:line="11762" pos:column="55">eKind</name><op:operator pos:line="11762" pos:column="60">,</op:operator>
            <comment type="block" pos:line="11763" pos:column="13">/* [retval][out] */</comment> <name pos:line="11763" pos:column="33">__RPC__out</name> <name pos:line="11763" pos:column="44">void</name> <op:operator pos:line="11763" pos:column="49">*</op:operator><name pos:line="11763" pos:column="50">retval</name><op:operator pos:line="11763" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="11765" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11765" pos:column="43">HRESULT</name></type> ( <name pos:line="11765" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11765" pos:column="71">*</type:modifier><name pos:line="11765" pos:column="72">get_LinkedWindows</name> )<parameter_list pos:line="11765" pos:column="91">( 
            <param><decl><type><name pos:line="11766" pos:column="13">Window2</name> <type:modifier pos:line="11766" pos:column="21">*</type:modifier></type> <name pos:line="11766" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11767" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11767" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11767" pos:column="54">LinkedWindows</name> <type:modifier pos:line="11767" pos:column="68">*</type:modifier><type:modifier pos:line="11767" pos:column="69">*</type:modifier></type><name pos:line="11767" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11769" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11769" pos:column="43">HRESULT</name></type> ( <name pos:line="11769" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11769" pos:column="71">*</type:modifier><name pos:line="11769" pos:column="72">get_LinkedWindowFrame</name> )<parameter_list pos:line="11769" pos:column="95">( 
            <param><decl><type><name pos:line="11770" pos:column="13">Window2</name> <type:modifier pos:line="11770" pos:column="21">*</type:modifier></type> <name pos:line="11770" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11771" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11771" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11771" pos:column="54">Window</name> <type:modifier pos:line="11771" pos:column="61">*</type:modifier><type:modifier pos:line="11771" pos:column="62">*</type:modifier></type><name pos:line="11771" pos:column="63">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11773" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="11773" pos:column="34">HRESULT</name></type> ( <name pos:line="11773" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="11773" pos:column="62">*</type:modifier><name pos:line="11773" pos:column="63">Detach</name> )<parameter_list pos:line="11773" pos:column="71">( 
            <param><decl><type><name pos:line="11774" pos:column="13">Window2</name> <type:modifier pos:line="11774" pos:column="21">*</type:modifier></type> <name pos:line="11774" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11775" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11775" pos:column="33">__RPC__out</name> <name pos:line="11775" pos:column="44">void</name> <type:modifier pos:line="11775" pos:column="49">*</type:modifier></type><name pos:line="11775" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11777" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="11777" pos:column="34">HRESULT</name></type> ( <name pos:line="11777" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="11777" pos:column="62">*</type:modifier><name pos:line="11777" pos:column="63">Attach</name> )<parameter_list pos:line="11777" pos:column="71">( 
            <param><decl><type><name pos:line="11778" pos:column="13">Window2</name> <type:modifier pos:line="11778" pos:column="21">*</type:modifier></type> <name pos:line="11778" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11779" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11779" pos:column="37">signed</name> <name pos:line="11779" pos:column="44">long</name></type> <name pos:line="11779" pos:column="49">lWindowHandle</name></decl></param>,
            <comment type="block" pos:line="11780" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11780" pos:column="33">__RPC__out</name> <name pos:line="11780" pos:column="44">void</name> <type:modifier pos:line="11780" pos:column="49">*</type:modifier></type><name pos:line="11780" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11782" pos:column="9">/* [id][propget][hidden][funcdescattr] */</comment> <function_decl><type><name pos:line="11782" pos:column="51">HRESULT</name></type> ( <name pos:line="11782" pos:column="61">STDMETHODCALLTYPE</name> <type:modifier pos:line="11782" pos:column="79">*</type:modifier><name pos:line="11782" pos:column="80">get_HWnd</name> )<parameter_list pos:line="11782" pos:column="90">( 
            <param><decl><type><name pos:line="11783" pos:column="13">Window2</name> <type:modifier pos:line="11783" pos:column="21">*</type:modifier></type> <name pos:line="11783" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11784" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11784" pos:column="33">__RPC__out</name> <name pos:line="11784" pos:column="44">signed</name> <name pos:line="11784" pos:column="51">long</name> <type:modifier pos:line="11784" pos:column="56">*</type:modifier></type><name pos:line="11784" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11786" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11786" pos:column="43">HRESULT</name></type> ( <name pos:line="11786" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11786" pos:column="71">*</type:modifier><name pos:line="11786" pos:column="72">get_Kind</name> )<parameter_list pos:line="11786" pos:column="82">( 
            <param><decl><type><name pos:line="11787" pos:column="13">Window2</name> <type:modifier pos:line="11787" pos:column="21">*</type:modifier></type> <name pos:line="11787" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11788" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11788" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11788" pos:column="54">BSTR</name> <type:modifier pos:line="11788" pos:column="59">*</type:modifier></type><name pos:line="11788" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11790" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11790" pos:column="43">HRESULT</name></type> ( <name pos:line="11790" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11790" pos:column="71">*</type:modifier><name pos:line="11790" pos:column="72">get_ObjectKind</name> )<parameter_list pos:line="11790" pos:column="88">( 
            <param><decl><type><name pos:line="11791" pos:column="13">Window2</name> <type:modifier pos:line="11791" pos:column="21">*</type:modifier></type> <name pos:line="11791" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11792" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11792" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11792" pos:column="54">BSTR</name> <type:modifier pos:line="11792" pos:column="59">*</type:modifier></type><name pos:line="11792" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11794" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11794" pos:column="43">HRESULT</name></type> ( <name pos:line="11794" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11794" pos:column="71">*</type:modifier><name pos:line="11794" pos:column="72">get_Object</name> )<parameter_list pos:line="11794" pos:column="84">( 
            <param><decl><type><name pos:line="11795" pos:column="13">Window2</name> <type:modifier pos:line="11795" pos:column="21">*</type:modifier></type> <name pos:line="11795" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11796" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11796" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11796" pos:column="54">IDispatch</name> <type:modifier pos:line="11796" pos:column="64">*</type:modifier><type:modifier pos:line="11796" pos:column="65">*</type:modifier></type><name pos:line="11796" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11798" pos:column="9">/* [id][propget][hidden][funcdescattr] */</comment> <function_decl><type><name pos:line="11798" pos:column="51">HRESULT</name></type> ( <name pos:line="11798" pos:column="61">STDMETHODCALLTYPE</name> <type:modifier pos:line="11798" pos:column="79">*</type:modifier><name pos:line="11798" pos:column="80">get_DocumentData</name> )<parameter_list pos:line="11798" pos:column="98">( 
            <param><decl><type><name pos:line="11799" pos:column="13">Window2</name> <type:modifier pos:line="11799" pos:column="21">*</type:modifier></type> <name pos:line="11799" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11800" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11800" pos:column="37">__RPC__in</name> <name pos:line="11800" pos:column="47">BSTR</name></type> <name pos:line="11800" pos:column="52">bstrWhichData</name></decl></param>,
            <comment type="block" pos:line="11801" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11801" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11801" pos:column="54">IDispatch</name> <type:modifier pos:line="11801" pos:column="64">*</type:modifier><type:modifier pos:line="11801" pos:column="65">*</type:modifier></type><name pos:line="11801" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11803" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11803" pos:column="43">HRESULT</name></type> ( <name pos:line="11803" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11803" pos:column="71">*</type:modifier><name pos:line="11803" pos:column="72">get_ProjectItem</name> )<parameter_list pos:line="11803" pos:column="89">( 
            <param><decl><type><name pos:line="11804" pos:column="13">Window2</name> <type:modifier pos:line="11804" pos:column="21">*</type:modifier></type> <name pos:line="11804" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11805" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11805" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11805" pos:column="54">ProjectItem</name> <type:modifier pos:line="11805" pos:column="66">*</type:modifier><type:modifier pos:line="11805" pos:column="67">*</type:modifier></type><name pos:line="11805" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11807" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11807" pos:column="43">HRESULT</name></type> ( <name pos:line="11807" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11807" pos:column="71">*</type:modifier><name pos:line="11807" pos:column="72">get_Project</name> )<parameter_list pos:line="11807" pos:column="85">( 
            <param><decl><type><name pos:line="11808" pos:column="13">Window2</name> <type:modifier pos:line="11808" pos:column="21">*</type:modifier></type> <name pos:line="11808" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11809" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11809" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11809" pos:column="54">Project</name> <type:modifier pos:line="11809" pos:column="62">*</type:modifier><type:modifier pos:line="11809" pos:column="63">*</type:modifier></type><name pos:line="11809" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11811" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11811" pos:column="43">HRESULT</name></type> ( <name pos:line="11811" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11811" pos:column="71">*</type:modifier><name pos:line="11811" pos:column="72">get_DTE</name> )<parameter_list pos:line="11811" pos:column="81">( 
            <param><decl><type><name pos:line="11812" pos:column="13">Window2</name> <type:modifier pos:line="11812" pos:column="21">*</type:modifier></type> <name pos:line="11812" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11813" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11813" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="11813" pos:column="54">*</type:modifier><type:modifier pos:line="11813" pos:column="55">*</type:modifier></type><name pos:line="11813" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11815" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11815" pos:column="43">HRESULT</name></type> ( <name pos:line="11815" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11815" pos:column="71">*</type:modifier><name pos:line="11815" pos:column="72">get_Document</name> )<parameter_list pos:line="11815" pos:column="86">( 
            <param><decl><type><name pos:line="11816" pos:column="13">Window2</name> <type:modifier pos:line="11816" pos:column="21">*</type:modifier></type> <name pos:line="11816" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11817" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11817" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11817" pos:column="54">Document</name> <type:modifier pos:line="11817" pos:column="63">*</type:modifier><type:modifier pos:line="11817" pos:column="64">*</type:modifier></type><name pos:line="11817" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11819" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11819" pos:column="43">HRESULT</name></type> ( <name pos:line="11819" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11819" pos:column="71">*</type:modifier><name pos:line="11819" pos:column="72">get_Selection</name> )<parameter_list pos:line="11819" pos:column="87">( 
            <param><decl><type><name pos:line="11820" pos:column="13">Window2</name> <type:modifier pos:line="11820" pos:column="21">*</type:modifier></type> <name pos:line="11820" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11821" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11821" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11821" pos:column="54">IDispatch</name> <type:modifier pos:line="11821" pos:column="64">*</type:modifier><type:modifier pos:line="11821" pos:column="65">*</type:modifier></type><name pos:line="11821" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11823" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11823" pos:column="43">HRESULT</name></type> ( <name pos:line="11823" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11823" pos:column="71">*</type:modifier><name pos:line="11823" pos:column="72">get_Linkable</name> )<parameter_list pos:line="11823" pos:column="86">( 
            <param><decl><type><name pos:line="11824" pos:column="13">Window2</name> <type:modifier pos:line="11824" pos:column="21">*</type:modifier></type> <name pos:line="11824" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11825" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11825" pos:column="33">__RPC__out</name> <name pos:line="11825" pos:column="44">BOOLEAN</name> <type:modifier pos:line="11825" pos:column="52">*</type:modifier></type><name pos:line="11825" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11827" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="11827" pos:column="43">HRESULT</name></type> ( <name pos:line="11827" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11827" pos:column="71">*</type:modifier><name pos:line="11827" pos:column="72">put_Linkable</name> )<parameter_list pos:line="11827" pos:column="86">( 
            <param><decl><type><name pos:line="11828" pos:column="13">Window2</name> <type:modifier pos:line="11828" pos:column="21">*</type:modifier></type> <name pos:line="11828" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11829" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11829" pos:column="37">BOOLEAN</name></type> <name pos:line="11829" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="11830" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11830" pos:column="33">__RPC__out</name> <name pos:line="11830" pos:column="44">void</name> <type:modifier pos:line="11830" pos:column="49">*</type:modifier></type><name pos:line="11830" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11832" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="11832" pos:column="34">HRESULT</name></type> ( <name pos:line="11832" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="11832" pos:column="62">*</type:modifier><name pos:line="11832" pos:column="63">Activate</name> )<parameter_list pos:line="11832" pos:column="73">( 
            <param><decl><type><name pos:line="11833" pos:column="13">Window2</name> <type:modifier pos:line="11833" pos:column="21">*</type:modifier></type> <name pos:line="11833" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11834" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11834" pos:column="33">__RPC__out</name> <name pos:line="11834" pos:column="44">void</name> <type:modifier pos:line="11834" pos:column="49">*</type:modifier></type><name pos:line="11834" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11836" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="11836" pos:column="34">HRESULT</name> <argument_list pos:line="11836" pos:column="42">( <argument pos:line="11836" pos:column="44">STDMETHODCALLTYPE *Close</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="11836" pos:column="70">(</op:operator> 
            <name pos:line="11837" pos:column="13">Window2</name> <op:operator pos:line="11837" pos:column="21">*</op:operator> <name pos:line="11837" pos:column="23">This</name><op:operator pos:line="11837" pos:column="27">,</op:operator>
            <comment type="block" pos:line="11838" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="11838" pos:column="42">vsSaveChanges</name> <name pos:line="11838" pos:column="56">SaveChanges</name><op:operator pos:line="11838" pos:column="67">,</op:operator>
            <comment type="block" pos:line="11839" pos:column="13">/* [retval][out] */</comment> <name pos:line="11839" pos:column="33">__RPC__out</name> <name pos:line="11839" pos:column="44">void</name> <op:operator pos:line="11839" pos:column="49">*</op:operator><name pos:line="11839" pos:column="50">retval</name><op:operator pos:line="11839" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="11841" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11841" pos:column="43">HRESULT</name></type> ( <name pos:line="11841" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11841" pos:column="71">*</type:modifier><name pos:line="11841" pos:column="72">get_Caption</name> )<parameter_list pos:line="11841" pos:column="85">( 
            <param><decl><type><name pos:line="11842" pos:column="13">Window2</name> <type:modifier pos:line="11842" pos:column="21">*</type:modifier></type> <name pos:line="11842" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11843" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11843" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11843" pos:column="54">BSTR</name> <type:modifier pos:line="11843" pos:column="59">*</type:modifier></type><name pos:line="11843" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11845" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="11845" pos:column="43">HRESULT</name></type> ( <name pos:line="11845" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11845" pos:column="71">*</type:modifier><name pos:line="11845" pos:column="72">put_Caption</name> )<parameter_list pos:line="11845" pos:column="85">( 
            <param><decl><type><name pos:line="11846" pos:column="13">Window2</name> <type:modifier pos:line="11846" pos:column="21">*</type:modifier></type> <name pos:line="11846" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11847" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11847" pos:column="37">__RPC__in</name> <name pos:line="11847" pos:column="47">BSTR</name></type> <name pos:line="11847" pos:column="52">noname</name></decl></param>,
            <comment type="block" pos:line="11848" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11848" pos:column="33">__RPC__out</name> <name pos:line="11848" pos:column="44">void</name> <type:modifier pos:line="11848" pos:column="49">*</type:modifier></type><name pos:line="11848" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11850" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="11850" pos:column="34">HRESULT</name></type> ( <name pos:line="11850" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="11850" pos:column="62">*</type:modifier><name pos:line="11850" pos:column="63">SetSelectionContainer</name> )<parameter_list pos:line="11850" pos:column="86">( 
            <param><decl><type><name pos:line="11851" pos:column="13">Window2</name> <type:modifier pos:line="11851" pos:column="21">*</type:modifier></type> <name pos:line="11851" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11852" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="11852" pos:column="33">__RPC__deref_in_opt</name> <name pos:line="11852" pos:column="53">SAFEARRAY</name> <type:modifier pos:line="11852" pos:column="63">*</type:modifier> <type:modifier pos:line="11852" pos:column="65">*</type:modifier></type><name pos:line="11852" pos:column="66">Objects</name></decl></param>,
            <comment type="block" pos:line="11853" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11853" pos:column="33">__RPC__out</name> <name pos:line="11853" pos:column="44">void</name> <type:modifier pos:line="11853" pos:column="49">*</type:modifier></type><name pos:line="11853" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11855" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11855" pos:column="43">HRESULT</name></type> ( <name pos:line="11855" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11855" pos:column="71">*</type:modifier><name pos:line="11855" pos:column="72">get_IsFloating</name> )<parameter_list pos:line="11855" pos:column="88">( 
            <param><decl><type><name pos:line="11856" pos:column="13">Window2</name> <type:modifier pos:line="11856" pos:column="21">*</type:modifier></type> <name pos:line="11856" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11857" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11857" pos:column="33">__RPC__out</name> <name pos:line="11857" pos:column="44">BOOLEAN</name> <type:modifier pos:line="11857" pos:column="52">*</type:modifier></type><name pos:line="11857" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11859" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="11859" pos:column="43">HRESULT</name></type> ( <name pos:line="11859" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11859" pos:column="71">*</type:modifier><name pos:line="11859" pos:column="72">put_IsFloating</name> )<parameter_list pos:line="11859" pos:column="88">( 
            <param><decl><type><name pos:line="11860" pos:column="13">Window2</name> <type:modifier pos:line="11860" pos:column="21">*</type:modifier></type> <name pos:line="11860" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11861" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11861" pos:column="37">BOOLEAN</name></type> <name pos:line="11861" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="11862" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11862" pos:column="33">__RPC__out</name> <name pos:line="11862" pos:column="44">void</name> <type:modifier pos:line="11862" pos:column="49">*</type:modifier></type><name pos:line="11862" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11864" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11864" pos:column="43">HRESULT</name></type> ( <name pos:line="11864" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11864" pos:column="71">*</type:modifier><name pos:line="11864" pos:column="72">get_AutoHides</name> )<parameter_list pos:line="11864" pos:column="87">( 
            <param><decl><type><name pos:line="11865" pos:column="13">Window2</name> <type:modifier pos:line="11865" pos:column="21">*</type:modifier></type> <name pos:line="11865" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11866" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11866" pos:column="33">__RPC__out</name> <name pos:line="11866" pos:column="44">BOOLEAN</name> <type:modifier pos:line="11866" pos:column="52">*</type:modifier></type><name pos:line="11866" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11868" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="11868" pos:column="43">HRESULT</name></type> ( <name pos:line="11868" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11868" pos:column="71">*</type:modifier><name pos:line="11868" pos:column="72">put_AutoHides</name> )<parameter_list pos:line="11868" pos:column="87">( 
            <param><decl><type><name pos:line="11869" pos:column="13">Window2</name> <type:modifier pos:line="11869" pos:column="21">*</type:modifier></type> <name pos:line="11869" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11870" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="11870" pos:column="37">BOOLEAN</name></type> <name pos:line="11870" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="11871" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11871" pos:column="33">__RPC__out</name> <name pos:line="11871" pos:column="44">void</name> <type:modifier pos:line="11871" pos:column="49">*</type:modifier></type><name pos:line="11871" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11873" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="11873" pos:column="34">HRESULT</name></type> ( <name pos:line="11873" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="11873" pos:column="62">*</type:modifier><name pos:line="11873" pos:column="63">SetTabPicture</name> )<parameter_list pos:line="11873" pos:column="78">( 
            <param><decl><type><name pos:line="11874" pos:column="13">Window2</name> <type:modifier pos:line="11874" pos:column="21">*</type:modifier></type> <name pos:line="11874" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11875" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="11875" pos:column="33">VARIANT</name></type> <name pos:line="11875" pos:column="41">Picture</name></decl></param>,
            <comment type="block" pos:line="11876" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11876" pos:column="33">__RPC__out</name> <name pos:line="11876" pos:column="44">void</name> <type:modifier pos:line="11876" pos:column="49">*</type:modifier></type><name pos:line="11876" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11878" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="11878" pos:column="43">HRESULT</name></type> ( <name pos:line="11878" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="11878" pos:column="71">*</type:modifier><name pos:line="11878" pos:column="72">get_ContextAttributes</name> )<parameter_list pos:line="11878" pos:column="95">( 
            <param><decl><type><name pos:line="11879" pos:column="13">Window2</name> <type:modifier pos:line="11879" pos:column="21">*</type:modifier></type> <name pos:line="11879" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11880" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11880" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11880" pos:column="54">ContextAttributes</name> <type:modifier pos:line="11880" pos:column="72">*</type:modifier><type:modifier pos:line="11880" pos:column="73">*</type:modifier></type><name pos:line="11880" pos:column="74">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="11882" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="11882" pos:column="73">HRESULT</name></type> ( <name pos:line="11882" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="11882" pos:column="101">*</type:modifier><name pos:line="11882" pos:column="102">get_CommandBars</name> )<parameter_list pos:line="11882" pos:column="119">( 
            <param><decl><type><name pos:line="11883" pos:column="13">Window2</name> <type:modifier pos:line="11883" pos:column="21">*</type:modifier></type> <name pos:line="11883" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="11884" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="11884" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="11884" pos:column="54">IDispatch</name> <type:modifier pos:line="11884" pos:column="64">*</type:modifier><type:modifier pos:line="11884" pos:column="65">*</type:modifier></type><name pos:line="11884" pos:column="66">ppcbs</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="11886" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="11887" pos:column="7">Window2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="11889" pos:column="5">interface</name></type> <name pos:line="11889" pos:column="15">Window2</name>
    <argument_list pos:line="11890" pos:column="5">{
        <argument><expr><name pos:line="11891" pos:column="9">CONST_VTBL</name> struct <name pos:line="11891" pos:column="27">Window2Vtbl</name> <op:operator pos:line="11891" pos:column="39">*</op:operator><name pos:line="11891" pos:column="40">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="11896" pos:column="1">#<cpp:directive pos:line="11896" pos:column="2">ifdef</cpp:directive> <name pos:line="11896" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="11899" pos:column="1">#<cpp:directive pos:line="11899" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11899" pos:column="9">Window2_QueryInterface</name><parameter_list pos:line="11899" pos:column="31">(<param><type><name pos:line="11899" pos:column="32">This</name></type></param>,<param><type><name pos:line="11899" pos:column="37">riid</name></type></param>,<param><type><name pos:line="11899" pos:column="42">ppvObj</name></type></param>,<param><type><name pos:line="11899" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11900" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11902" pos:column="1">#<cpp:directive pos:line="11902" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11902" pos:column="9">Window2_AddRef</name><parameter_list pos:line="11902" pos:column="23">(<param><type><name pos:line="11902" pos:column="24">This</name></type></param>,<param><type><name pos:line="11902" pos:column="29">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11903" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11905" pos:column="1">#<cpp:directive pos:line="11905" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11905" pos:column="9">Window2_Release</name><parameter_list pos:line="11905" pos:column="24">(<param><type><name pos:line="11905" pos:column="25">This</name></type></param>,<param><type><name pos:line="11905" pos:column="30">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11906" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11908" pos:column="1">#<cpp:directive pos:line="11908" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11908" pos:column="9">Window2_GetTypeInfoCount</name><parameter_list pos:line="11908" pos:column="33">(<param><type><name pos:line="11908" pos:column="34">This</name></type></param>,<param><type><name pos:line="11908" pos:column="39">pctinfo</name></type></param>,<param><type><name pos:line="11908" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11909" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11911" pos:column="1">#<cpp:directive pos:line="11911" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11911" pos:column="9">Window2_GetTypeInfo</name><parameter_list pos:line="11911" pos:column="28">(<param><type><name pos:line="11911" pos:column="29">This</name></type></param>,<param><type><name pos:line="11911" pos:column="34">itinfo</name></type></param>,<param><type><name pos:line="11911" pos:column="41">lcid</name></type></param>,<param><type><name pos:line="11911" pos:column="46">pptinfo</name></type></param>,<param><type><name pos:line="11911" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11912" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11914" pos:column="1">#<cpp:directive pos:line="11914" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11914" pos:column="9">Window2_GetIDsOfNames</name><parameter_list pos:line="11914" pos:column="30">(<param><type><name pos:line="11914" pos:column="31">This</name></type></param>,<param><type><name pos:line="11914" pos:column="36">riid</name></type></param>,<param><type><name pos:line="11914" pos:column="41">rgszNames</name></type></param>,<param><type><name pos:line="11914" pos:column="51">cNames</name></type></param>,<param><type><name pos:line="11914" pos:column="58">lcid</name></type></param>,<param><type><name pos:line="11914" pos:column="63">rgdispid</name></type></param>,<param><type><name pos:line="11914" pos:column="72">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11915" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11917" pos:column="1">#<cpp:directive pos:line="11917" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11917" pos:column="9">Window2_Invoke</name><parameter_list pos:line="11917" pos:column="23">(<param><type><name pos:line="11917" pos:column="24">This</name></type></param>,<param><type><name pos:line="11917" pos:column="29">dispidMember</name></type></param>,<param><type><name pos:line="11917" pos:column="42">riid</name></type></param>,<param><type><name pos:line="11917" pos:column="47">lcid</name></type></param>,<param><type><name pos:line="11917" pos:column="52">wFlags</name></type></param>,<param><type><name pos:line="11917" pos:column="59">pdispparams</name></type></param>,<param><type><name pos:line="11917" pos:column="71">pvarResult</name></type></param>,<param><type><name pos:line="11917" pos:column="82">pexcepinfo</name></type></param>,<param><type><name pos:line="11917" pos:column="93">puArgErr</name></type></param>,<param><type><name pos:line="11917" pos:column="102">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11918" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11920" pos:column="1">#<cpp:directive pos:line="11920" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11920" pos:column="9">Window2_get_Collection</name><parameter_list pos:line="11920" pos:column="31">(<param><type><name pos:line="11920" pos:column="32">This</name></type></param>,<param><type><name pos:line="11920" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11921" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11923" pos:column="1">#<cpp:directive pos:line="11923" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11923" pos:column="9">Window2_get_Visible</name><parameter_list pos:line="11923" pos:column="28">(<param><type><name pos:line="11923" pos:column="29">This</name></type></param>,<param><type><name pos:line="11923" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11924" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Visible(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11926" pos:column="1">#<cpp:directive pos:line="11926" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11926" pos:column="9">Window2_put_Visible</name><parameter_list pos:line="11926" pos:column="28">(<param><type><name pos:line="11926" pos:column="29">This</name></type></param>,<param><type><name pos:line="11926" pos:column="34">noname</name></type></param>,<param><type><name pos:line="11926" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11927" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Visible(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11929" pos:column="1">#<cpp:directive pos:line="11929" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11929" pos:column="9">Window2_get_Left</name><parameter_list pos:line="11929" pos:column="25">(<param><type><name pos:line="11929" pos:column="26">This</name></type></param>,<param><type><name pos:line="11929" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11930" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Left(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11932" pos:column="1">#<cpp:directive pos:line="11932" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11932" pos:column="9">Window2_put_Left</name><parameter_list pos:line="11932" pos:column="25">(<param><type><name pos:line="11932" pos:column="26">This</name></type></param>,<param><type><name pos:line="11932" pos:column="31">noname</name></type></param>,<param><type><name pos:line="11932" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11933" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Left(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11935" pos:column="1">#<cpp:directive pos:line="11935" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11935" pos:column="9">Window2_get_Top</name><parameter_list pos:line="11935" pos:column="24">(<param><type><name pos:line="11935" pos:column="25">This</name></type></param>,<param><type><name pos:line="11935" pos:column="30">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11936" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Top(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11938" pos:column="1">#<cpp:directive pos:line="11938" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11938" pos:column="9">Window2_put_Top</name><parameter_list pos:line="11938" pos:column="24">(<param><type><name pos:line="11938" pos:column="25">This</name></type></param>,<param><type><name pos:line="11938" pos:column="30">noname</name></type></param>,<param><type><name pos:line="11938" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11939" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Top(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11941" pos:column="1">#<cpp:directive pos:line="11941" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11941" pos:column="9">Window2_get_Width</name><parameter_list pos:line="11941" pos:column="26">(<param><type><name pos:line="11941" pos:column="27">This</name></type></param>,<param><type><name pos:line="11941" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11942" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Width(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11944" pos:column="1">#<cpp:directive pos:line="11944" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11944" pos:column="9">Window2_put_Width</name><parameter_list pos:line="11944" pos:column="26">(<param><type><name pos:line="11944" pos:column="27">This</name></type></param>,<param><type><name pos:line="11944" pos:column="32">noname</name></type></param>,<param><type><name pos:line="11944" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11945" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Width(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11947" pos:column="1">#<cpp:directive pos:line="11947" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11947" pos:column="9">Window2_get_Height</name><parameter_list pos:line="11947" pos:column="27">(<param><type><name pos:line="11947" pos:column="28">This</name></type></param>,<param><type><name pos:line="11947" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11948" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Height(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11950" pos:column="1">#<cpp:directive pos:line="11950" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11950" pos:column="9">Window2_put_Height</name><parameter_list pos:line="11950" pos:column="27">(<param><type><name pos:line="11950" pos:column="28">This</name></type></param>,<param><type><name pos:line="11950" pos:column="33">noname</name></type></param>,<param><type><name pos:line="11950" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11951" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Height(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11953" pos:column="1">#<cpp:directive pos:line="11953" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11953" pos:column="9">Window2_get_WindowState</name><parameter_list pos:line="11953" pos:column="32">(<param><type><name pos:line="11953" pos:column="33">This</name></type></param>,<param><type><name pos:line="11953" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11954" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_WindowState(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11956" pos:column="1">#<cpp:directive pos:line="11956" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11956" pos:column="9">Window2_put_WindowState</name><parameter_list pos:line="11956" pos:column="32">(<param><type><name pos:line="11956" pos:column="33">This</name></type></param>,<param><type><name pos:line="11956" pos:column="38">noname</name></type></param>,<param><type><name pos:line="11956" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11957" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_WindowState(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11959" pos:column="1">#<cpp:directive pos:line="11959" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11959" pos:column="9">Window2_SetFocus</name><parameter_list pos:line="11959" pos:column="25">(<param><type><name pos:line="11959" pos:column="26">This</name></type></param>,<param><type><name pos:line="11959" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11960" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetFocus(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11962" pos:column="1">#<cpp:directive pos:line="11962" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11962" pos:column="9">Window2_get_Type</name><parameter_list pos:line="11962" pos:column="25">(<param><type><name pos:line="11962" pos:column="26">This</name></type></param>,<param><type><name pos:line="11962" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11963" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Type(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11965" pos:column="1">#<cpp:directive pos:line="11965" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11965" pos:column="9">Window2_SetKind</name><parameter_list pos:line="11965" pos:column="24">(<param><type><name pos:line="11965" pos:column="25">This</name></type></param>,<param><type><name pos:line="11965" pos:column="30">eKind</name></type></param>,<param><type><name pos:line="11965" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11966" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetKind(This,eKind,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11968" pos:column="1">#<cpp:directive pos:line="11968" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11968" pos:column="9">Window2_get_LinkedWindows</name><parameter_list pos:line="11968" pos:column="34">(<param><type><name pos:line="11968" pos:column="35">This</name></type></param>,<param><type><name pos:line="11968" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11969" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_LinkedWindows(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11971" pos:column="1">#<cpp:directive pos:line="11971" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11971" pos:column="9">Window2_get_LinkedWindowFrame</name><parameter_list pos:line="11971" pos:column="38">(<param><type><name pos:line="11971" pos:column="39">This</name></type></param>,<param><type><name pos:line="11971" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11972" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_LinkedWindowFrame(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11974" pos:column="1">#<cpp:directive pos:line="11974" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11974" pos:column="9">Window2_Detach</name><parameter_list pos:line="11974" pos:column="23">(<param><type><name pos:line="11974" pos:column="24">This</name></type></param>,<param><type><name pos:line="11974" pos:column="29">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11975" pos:column="5">( (This)-&gt;lpVtbl -&gt; Detach(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11977" pos:column="1">#<cpp:directive pos:line="11977" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11977" pos:column="9">Window2_Attach</name><parameter_list pos:line="11977" pos:column="23">(<param><type><name pos:line="11977" pos:column="24">This</name></type></param>,<param><type><name pos:line="11977" pos:column="29">lWindowHandle</name></type></param>,<param><type><name pos:line="11977" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11978" pos:column="5">( (This)-&gt;lpVtbl -&gt; Attach(This,lWindowHandle,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11980" pos:column="1">#<cpp:directive pos:line="11980" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11980" pos:column="9">Window2_get_HWnd</name><parameter_list pos:line="11980" pos:column="25">(<param><type><name pos:line="11980" pos:column="26">This</name></type></param>,<param><type><name pos:line="11980" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11981" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_HWnd(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11983" pos:column="1">#<cpp:directive pos:line="11983" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11983" pos:column="9">Window2_get_Kind</name><parameter_list pos:line="11983" pos:column="25">(<param><type><name pos:line="11983" pos:column="26">This</name></type></param>,<param><type><name pos:line="11983" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11984" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Kind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11986" pos:column="1">#<cpp:directive pos:line="11986" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11986" pos:column="9">Window2_get_ObjectKind</name><parameter_list pos:line="11986" pos:column="31">(<param><type><name pos:line="11986" pos:column="32">This</name></type></param>,<param><type><name pos:line="11986" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11987" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ObjectKind(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11989" pos:column="1">#<cpp:directive pos:line="11989" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11989" pos:column="9">Window2_get_Object</name><parameter_list pos:line="11989" pos:column="27">(<param><type><name pos:line="11989" pos:column="28">This</name></type></param>,<param><type><name pos:line="11989" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11990" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Object(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11992" pos:column="1">#<cpp:directive pos:line="11992" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11992" pos:column="9">Window2_get_DocumentData</name><parameter_list pos:line="11992" pos:column="33">(<param><type><name pos:line="11992" pos:column="34">This</name></type></param>,<param><type><name pos:line="11992" pos:column="39">bstrWhichData</name></type></param>,<param><type><name pos:line="11992" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11993" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DocumentData(This,bstrWhichData,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11995" pos:column="1">#<cpp:directive pos:line="11995" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11995" pos:column="9">Window2_get_ProjectItem</name><parameter_list pos:line="11995" pos:column="32">(<param><type><name pos:line="11995" pos:column="33">This</name></type></param>,<param><type><name pos:line="11995" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11996" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItem(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="11998" pos:column="1">#<cpp:directive pos:line="11998" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11998" pos:column="9">Window2_get_Project</name><parameter_list pos:line="11998" pos:column="28">(<param><type><name pos:line="11998" pos:column="29">This</name></type></param>,<param><type><name pos:line="11998" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="11999" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Project(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12001" pos:column="1">#<cpp:directive pos:line="12001" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12001" pos:column="9">Window2_get_DTE</name><parameter_list pos:line="12001" pos:column="24">(<param><type><name pos:line="12001" pos:column="25">This</name></type></param>,<param><type><name pos:line="12001" pos:column="30">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12002" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12004" pos:column="1">#<cpp:directive pos:line="12004" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12004" pos:column="9">Window2_get_Document</name><parameter_list pos:line="12004" pos:column="29">(<param><type><name pos:line="12004" pos:column="30">This</name></type></param>,<param><type><name pos:line="12004" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12005" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Document(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12007" pos:column="1">#<cpp:directive pos:line="12007" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12007" pos:column="9">Window2_get_Selection</name><parameter_list pos:line="12007" pos:column="30">(<param><type><name pos:line="12007" pos:column="31">This</name></type></param>,<param><type><name pos:line="12007" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12008" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Selection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12010" pos:column="1">#<cpp:directive pos:line="12010" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12010" pos:column="9">Window2_get_Linkable</name><parameter_list pos:line="12010" pos:column="29">(<param><type><name pos:line="12010" pos:column="30">This</name></type></param>,<param><type><name pos:line="12010" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12011" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Linkable(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12013" pos:column="1">#<cpp:directive pos:line="12013" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12013" pos:column="9">Window2_put_Linkable</name><parameter_list pos:line="12013" pos:column="29">(<param><type><name pos:line="12013" pos:column="30">This</name></type></param>,<param><type><name pos:line="12013" pos:column="35">noname</name></type></param>,<param><type><name pos:line="12013" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12014" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Linkable(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12016" pos:column="1">#<cpp:directive pos:line="12016" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12016" pos:column="9">Window2_Activate</name><parameter_list pos:line="12016" pos:column="25">(<param><type><name pos:line="12016" pos:column="26">This</name></type></param>,<param><type><name pos:line="12016" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12017" pos:column="5">( (This)-&gt;lpVtbl -&gt; Activate(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12019" pos:column="1">#<cpp:directive pos:line="12019" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12019" pos:column="9">Window2_Close</name><parameter_list pos:line="12019" pos:column="22">(<param><type><name pos:line="12019" pos:column="23">This</name></type></param>,<param><type><name pos:line="12019" pos:column="28">SaveChanges</name></type></param>,<param><type><name pos:line="12019" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12020" pos:column="5">( (This)-&gt;lpVtbl -&gt; Close(This,SaveChanges,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12022" pos:column="1">#<cpp:directive pos:line="12022" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12022" pos:column="9">Window2_get_Caption</name><parameter_list pos:line="12022" pos:column="28">(<param><type><name pos:line="12022" pos:column="29">This</name></type></param>,<param><type><name pos:line="12022" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12023" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Caption(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12025" pos:column="1">#<cpp:directive pos:line="12025" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12025" pos:column="9">Window2_put_Caption</name><parameter_list pos:line="12025" pos:column="28">(<param><type><name pos:line="12025" pos:column="29">This</name></type></param>,<param><type><name pos:line="12025" pos:column="34">noname</name></type></param>,<param><type><name pos:line="12025" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12026" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Caption(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12028" pos:column="1">#<cpp:directive pos:line="12028" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12028" pos:column="9">Window2_SetSelectionContainer</name><parameter_list pos:line="12028" pos:column="38">(<param><type><name pos:line="12028" pos:column="39">This</name></type></param>,<param><type><name pos:line="12028" pos:column="44">Objects</name></type></param>,<param><type><name pos:line="12028" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12029" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSelectionContainer(This,Objects,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12031" pos:column="1">#<cpp:directive pos:line="12031" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12031" pos:column="9">Window2_get_IsFloating</name><parameter_list pos:line="12031" pos:column="31">(<param><type><name pos:line="12031" pos:column="32">This</name></type></param>,<param><type><name pos:line="12031" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12032" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsFloating(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12034" pos:column="1">#<cpp:directive pos:line="12034" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12034" pos:column="9">Window2_put_IsFloating</name><parameter_list pos:line="12034" pos:column="31">(<param><type><name pos:line="12034" pos:column="32">This</name></type></param>,<param><type><name pos:line="12034" pos:column="37">noname</name></type></param>,<param><type><name pos:line="12034" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12035" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_IsFloating(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12037" pos:column="1">#<cpp:directive pos:line="12037" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12037" pos:column="9">Window2_get_AutoHides</name><parameter_list pos:line="12037" pos:column="30">(<param><type><name pos:line="12037" pos:column="31">This</name></type></param>,<param><type><name pos:line="12037" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12038" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_AutoHides(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12040" pos:column="1">#<cpp:directive pos:line="12040" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12040" pos:column="9">Window2_put_AutoHides</name><parameter_list pos:line="12040" pos:column="30">(<param><type><name pos:line="12040" pos:column="31">This</name></type></param>,<param><type><name pos:line="12040" pos:column="36">noname</name></type></param>,<param><type><name pos:line="12040" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12041" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_AutoHides(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12043" pos:column="1">#<cpp:directive pos:line="12043" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12043" pos:column="9">Window2_SetTabPicture</name><parameter_list pos:line="12043" pos:column="30">(<param><type><name pos:line="12043" pos:column="31">This</name></type></param>,<param><type><name pos:line="12043" pos:column="36">Picture</name></type></param>,<param><type><name pos:line="12043" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12044" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetTabPicture(This,Picture,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12046" pos:column="1">#<cpp:directive pos:line="12046" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12046" pos:column="9">Window2_get_ContextAttributes</name><parameter_list pos:line="12046" pos:column="38">(<param><type><name pos:line="12046" pos:column="39">This</name></type></param>,<param><type><name pos:line="12046" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12047" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ContextAttributes(This,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="12050" pos:column="1">#<cpp:directive pos:line="12050" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12050" pos:column="9">Window2_get_CommandBars</name><parameter_list pos:line="12050" pos:column="32">(<param><type><name pos:line="12050" pos:column="33">This</name></type></param>,<param><type><name pos:line="12050" pos:column="38">ppcbs</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12051" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CommandBars(This,ppcbs) )</cpp:value></cpp:define> 

<cpp:endif pos:line="12053" pos:column="1">#<cpp:directive pos:line="12053" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="12053" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="12056" pos:column="1">#<cpp:directive pos:line="12056" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12056" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="12061" pos:column="1">#<cpp:directive pos:line="12061" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12061" pos:column="9">/* __Window2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="12064" pos:column="1">#<cpp:directive pos:line="12064" pos:column="2">ifndef</cpp:directive> <name pos:line="12064" pos:column="9">__SourceControlBindings_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="12065" pos:column="1">#<cpp:directive pos:line="12065" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12065" pos:column="9">__SourceControlBindings_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="12067" pos:column="1">/* interface SourceControlBindings */</comment>
<comment type="block" pos:line="12068" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="12071" pos:column="1">EXTERN_C</name> <specifier pos:line="12071" pos:column="10">const</specifier> <name pos:line="12071" pos:column="16">IID</name></type> <name pos:line="12071" pos:column="20">IID_SourceControlBindings</name></decl>;</decl_stmt>

<cpp:if pos:line="12073" pos:column="1">#<cpp:directive pos:line="12073" pos:column="2">if</cpp:directive> <expr><call><name pos:line="12073" pos:column="5">defined</name><argument_list pos:line="12073" pos:column="12">(<argument><expr><name pos:line="12073" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="12073" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="12073" pos:column="29">!</op:operator><call><name pos:line="12073" pos:column="30">defined</name><argument_list pos:line="12073" pos:column="37">(<argument><expr><name pos:line="12073" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="12075" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="12075" pos:column="19">(<argument pos:line="12075" pos:column="20">"544a6477-be0b-42ed-b47b-553ed8c5f22c"</argument>)</argument_list></macro>
    <label><name pos:line="12076" pos:column="5">SourceControlBindings</name> :</label> <expr_stmt><expr pos:line="12076" pos:column="29">public <name pos:line="12076" pos:column="36">IDispatch</name>
    <block pos:line="12077" pos:column="5">{
    <expr pos:line="12078" pos:column="5">public<op:operator pos:line="12078" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="12079" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <name pos:line="12079" pos:column="81">HRESULT</name> <name pos:line="12079" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="12079" pos:column="107">get_DTE</name><argument_list pos:line="12079" pos:column="114">( 
            <comment type="block" pos:line="12080" pos:column="13">/* [retval][out] */</comment> <argument pos:line="12080" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="12080" pos:column="54">/* external definition not present */</comment> DTE **pDTE</argument>)</argument_list></macro> <op:operator pos:line="12080" pos:column="104">=</op:operator> <lit:literal type="number" pos:line="12080" pos:column="106">0</lit:literal></expr>;
        
        <expr pos:line="12082" pos:column="9">virtual <comment type="block" pos:line="12082" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <name pos:line="12082" pos:column="81">HRESULT</name> <name pos:line="12082" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="12082" pos:column="107">get_Parent</name><argument_list pos:line="12082" pos:column="117">( 
            <comment type="block" pos:line="12083" pos:column="13">/* [retval][out] */</comment> <argument pos:line="12083" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="12083" pos:column="54">/* external definition not present */</comment> SourceControl **ppSourceControl</argument>)</argument_list></macro> <op:operator pos:line="12083" pos:column="125">=</op:operator> <lit:literal type="number" pos:line="12083" pos:column="127">0</lit:literal></expr>;
        
        <expr pos:line="12085" pos:column="9">virtual <comment type="block" pos:line="12085" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <name pos:line="12085" pos:column="81">HRESULT</name> <name pos:line="12085" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="12085" pos:column="107">get_ServerName</name><argument_list pos:line="12085" pos:column="121">( 
            <comment type="block" pos:line="12086" pos:column="13">/* [retval][out] */</comment> <argument pos:line="12086" pos:column="33">__RPC__deref_out_opt BSTR *lpbstrSeverName</argument>)</argument_list></macro> <op:operator pos:line="12086" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="12086" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="12088" pos:column="9">virtual <comment type="block" pos:line="12088" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <name pos:line="12088" pos:column="81">HRESULT</name> <name pos:line="12088" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="12088" pos:column="107">get_LocalBinding</name><argument_list pos:line="12088" pos:column="123">( 
            <comment type="block" pos:line="12089" pos:column="13">/* [retval][out] */</comment> <argument pos:line="12089" pos:column="33">__RPC__deref_out_opt BSTR *lpbstrLocalPath</argument>)</argument_list></macro> <op:operator pos:line="12089" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="12089" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="12091" pos:column="9">virtual <comment type="block" pos:line="12091" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <name pos:line="12091" pos:column="81">HRESULT</name> <name pos:line="12091" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="12091" pos:column="107">get_ServerBinding</name><argument_list pos:line="12091" pos:column="124">( 
            <comment type="block" pos:line="12092" pos:column="13">/* [retval][out] */</comment> <argument pos:line="12092" pos:column="33">__RPC__deref_out_opt BSTR *lpbstrServerLocation</argument>)</argument_list></macro> <op:operator pos:line="12092" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="12092" pos:column="84">0</lit:literal></expr>;
        
        <expr pos:line="12094" pos:column="9">virtual <comment type="block" pos:line="12094" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <name pos:line="12094" pos:column="81">HRESULT</name> <name pos:line="12094" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="12094" pos:column="107">get_ProviderName</name><argument_list pos:line="12094" pos:column="123">( 
            <comment type="block" pos:line="12095" pos:column="13">/* [retval][out] */</comment> <argument pos:line="12095" pos:column="33">__RPC__deref_out_opt BSTR *lpbstrProviderName</argument>)</argument_list></macro> <op:operator pos:line="12095" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="12095" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="12097" pos:column="9">virtual <comment type="block" pos:line="12097" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <name pos:line="12097" pos:column="81">HRESULT</name> <name pos:line="12097" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="12097" pos:column="107">get_ProviderRegKey</name><argument_list pos:line="12097" pos:column="125">( 
            <comment type="block" pos:line="12098" pos:column="13">/* [retval][out] */</comment> <argument pos:line="12098" pos:column="33">__RPC__deref_out_opt BSTR *lpbstrProviderRegKey</argument>)</argument_list></macro> <op:operator pos:line="12098" pos:column="82">=</op:operator> <lit:literal type="number" pos:line="12098" pos:column="84">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="12102" pos:column="1">#<cpp:directive pos:line="12102" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="12102" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="12104" pos:column="5">typedef <type><struct pos:line="12104" pos:column="13">struct <name pos:line="12104" pos:column="20">SourceControlBindingsVtbl</name>
    <block pos:line="12105" pos:column="5">{<public type="default" pos:line="12105" pos:column="6">
        <function_decl><type><name pos:line="12106" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="12108" pos:column="9">HRESULT</name></type> ( <name pos:line="12108" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12108" pos:column="37">*</type:modifier><name pos:line="12108" pos:column="38">QueryInterface</name> )<parameter_list pos:line="12108" pos:column="54">( 
            <param><decl><type><name pos:line="12109" pos:column="13">SourceControlBindings</name> <type:modifier pos:line="12109" pos:column="35">*</type:modifier></type> <name pos:line="12109" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="12110" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12110" pos:column="24">__RPC__in</name> <name pos:line="12110" pos:column="34">REFIID</name></type> <name pos:line="12110" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="12111" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="12112" pos:column="13">__RPC__deref_out</name>  <name pos:line="12112" pos:column="31">void</name> <type:modifier pos:line="12112" pos:column="36">*</type:modifier><type:modifier pos:line="12112" pos:column="37">*</type:modifier></type><name pos:line="12112" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12114" pos:column="9">ULONG</name></type> ( <name pos:line="12114" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12114" pos:column="35">*</type:modifier><name pos:line="12114" pos:column="36">AddRef</name> )<parameter_list pos:line="12114" pos:column="44">( 
            <param><decl><type><name pos:line="12115" pos:column="13">SourceControlBindings</name> <type:modifier pos:line="12115" pos:column="35">*</type:modifier></type> <name pos:line="12115" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12117" pos:column="9">ULONG</name></type> ( <name pos:line="12117" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12117" pos:column="35">*</type:modifier><name pos:line="12117" pos:column="36">Release</name> )<parameter_list pos:line="12117" pos:column="45">( 
            <param><decl><type><name pos:line="12118" pos:column="13">SourceControlBindings</name> <type:modifier pos:line="12118" pos:column="35">*</type:modifier></type> <name pos:line="12118" pos:column="37">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12120" pos:column="9">HRESULT</name></type> ( <name pos:line="12120" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12120" pos:column="37">*</type:modifier><name pos:line="12120" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="12120" pos:column="56">( 
            <param><decl><type><name pos:line="12121" pos:column="13">SourceControlBindings</name> <type:modifier pos:line="12121" pos:column="35">*</type:modifier></type> <name pos:line="12121" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="12122" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12122" pos:column="25">__RPC__out</name> <name pos:line="12122" pos:column="36">UINT</name> <type:modifier pos:line="12122" pos:column="41">*</type:modifier></type><name pos:line="12122" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12124" pos:column="9">HRESULT</name></type> ( <name pos:line="12124" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12124" pos:column="37">*</type:modifier><name pos:line="12124" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="12124" pos:column="51">( 
            <param><decl><type><name pos:line="12125" pos:column="13">SourceControlBindings</name> <type:modifier pos:line="12125" pos:column="35">*</type:modifier></type> <name pos:line="12125" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="12126" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12126" pos:column="24">UINT</name></type> <name pos:line="12126" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="12127" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12127" pos:column="24">LCID</name></type> <name pos:line="12127" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="12128" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12128" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12128" pos:column="46">ITypeInfo</name> <type:modifier pos:line="12128" pos:column="56">*</type:modifier><type:modifier pos:line="12128" pos:column="57">*</type:modifier></type><name pos:line="12128" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12130" pos:column="9">HRESULT</name> <argument_list pos:line="12130" pos:column="17">( <argument pos:line="12130" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12130" pos:column="53">(</op:operator> 
            <name pos:line="12131" pos:column="13">SourceControlBindings</name> <op:operator pos:line="12131" pos:column="35">*</op:operator> <name pos:line="12131" pos:column="37">This</name><op:operator pos:line="12131" pos:column="41">,</op:operator>
            <comment type="block" pos:line="12132" pos:column="13">/* [in] */</comment> <name pos:line="12132" pos:column="24">__RPC__in</name> <name pos:line="12132" pos:column="34">REFIID</name> <name pos:line="12132" pos:column="41">riid</name><op:operator pos:line="12132" pos:column="45">,</op:operator>
            <comment type="block" pos:line="12133" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="12133" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="12133" pos:column="54">(<argument pos:line="12133" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="12133" pos:column="63">LPOLESTR</name> <op:operator pos:line="12133" pos:column="72">*</op:operator><name pos:line="12133" pos:column="73">rgszNames</name><op:operator pos:line="12133" pos:column="82">,</op:operator>
            <comment type="block" pos:line="12134" pos:column="13">/* [range][in] */</comment> <name pos:line="12134" pos:column="31">UINT</name> <name pos:line="12134" pos:column="36">cNames</name><op:operator pos:line="12134" pos:column="42">,</op:operator>
            <comment type="block" pos:line="12135" pos:column="13">/* [in] */</comment> <name pos:line="12135" pos:column="24">LCID</name> <name pos:line="12135" pos:column="29">lcid</name><op:operator pos:line="12135" pos:column="33">,</op:operator>
            <comment type="block" pos:line="12136" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="12136" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="12136" pos:column="56">(<argument pos:line="12136" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="12136" pos:column="65">DISPID</name> <op:operator pos:line="12136" pos:column="72">*</op:operator><name pos:line="12136" pos:column="73">rgDispId</name><op:operator pos:line="12136" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="12138" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="12138" pos:column="23">HRESULT</name></type> ( <name pos:line="12138" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="12138" pos:column="51">*</type:modifier><name pos:line="12138" pos:column="52">Invoke</name> )<parameter_list pos:line="12138" pos:column="60">( 
            <param><decl><type><name pos:line="12139" pos:column="13">SourceControlBindings</name> <type:modifier pos:line="12139" pos:column="35">*</type:modifier></type> <name pos:line="12139" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="12140" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12140" pos:column="24">DISPID</name></type> <name pos:line="12140" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="12141" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12141" pos:column="24">REFIID</name></type> <name pos:line="12141" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="12142" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12142" pos:column="24">LCID</name></type> <name pos:line="12142" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="12143" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12143" pos:column="24">WORD</name></type> <name pos:line="12143" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="12144" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="12144" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="12144" pos:column="40">*</type:modifier></type><name pos:line="12144" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="12145" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12145" pos:column="25">VARIANT</name> <type:modifier pos:line="12145" pos:column="33">*</type:modifier></type><name pos:line="12145" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="12146" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12146" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="12146" pos:column="35">*</type:modifier></type><name pos:line="12146" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="12147" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12147" pos:column="25">UINT</name> <type:modifier pos:line="12147" pos:column="30">*</type:modifier></type><name pos:line="12147" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12149" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <function_decl><type><name pos:line="12149" pos:column="73">HRESULT</name></type> ( <name pos:line="12149" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="12149" pos:column="101">*</type:modifier><name pos:line="12149" pos:column="102">get_DTE</name> )<parameter_list pos:line="12149" pos:column="111">( 
            <param><decl><type><name pos:line="12150" pos:column="13">SourceControlBindings</name> <type:modifier pos:line="12150" pos:column="35">*</type:modifier></type> <name pos:line="12150" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="12151" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12151" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="12151" pos:column="54">/* external definition not present */</comment> <name pos:line="12151" pos:column="92">DTE</name> <type:modifier pos:line="12151" pos:column="96">*</type:modifier><type:modifier pos:line="12151" pos:column="97">*</type:modifier></type><name pos:line="12151" pos:column="98">pDTE</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12153" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <function_decl><type><name pos:line="12153" pos:column="73">HRESULT</name></type> ( <name pos:line="12153" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="12153" pos:column="101">*</type:modifier><name pos:line="12153" pos:column="102">get_Parent</name> )<parameter_list pos:line="12153" pos:column="114">( 
            <param><decl><type><name pos:line="12154" pos:column="13">SourceControlBindings</name> <type:modifier pos:line="12154" pos:column="35">*</type:modifier></type> <name pos:line="12154" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="12155" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12155" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="12155" pos:column="54">/* external definition not present */</comment> <name pos:line="12155" pos:column="92">SourceControl</name> <type:modifier pos:line="12155" pos:column="106">*</type:modifier><type:modifier pos:line="12155" pos:column="107">*</type:modifier></type><name pos:line="12155" pos:column="108">ppSourceControl</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12157" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <function_decl><type><name pos:line="12157" pos:column="73">HRESULT</name></type> ( <name pos:line="12157" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="12157" pos:column="101">*</type:modifier><name pos:line="12157" pos:column="102">get_ServerName</name> )<parameter_list pos:line="12157" pos:column="118">( 
            <param><decl><type><name pos:line="12158" pos:column="13">SourceControlBindings</name> <type:modifier pos:line="12158" pos:column="35">*</type:modifier></type> <name pos:line="12158" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="12159" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12159" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12159" pos:column="54">BSTR</name> <type:modifier pos:line="12159" pos:column="59">*</type:modifier></type><name pos:line="12159" pos:column="60">lpbstrSeverName</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12161" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <function_decl><type><name pos:line="12161" pos:column="73">HRESULT</name></type> ( <name pos:line="12161" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="12161" pos:column="101">*</type:modifier><name pos:line="12161" pos:column="102">get_LocalBinding</name> )<parameter_list pos:line="12161" pos:column="120">( 
            <param><decl><type><name pos:line="12162" pos:column="13">SourceControlBindings</name> <type:modifier pos:line="12162" pos:column="35">*</type:modifier></type> <name pos:line="12162" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="12163" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12163" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12163" pos:column="54">BSTR</name> <type:modifier pos:line="12163" pos:column="59">*</type:modifier></type><name pos:line="12163" pos:column="60">lpbstrLocalPath</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12165" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <function_decl><type><name pos:line="12165" pos:column="73">HRESULT</name></type> ( <name pos:line="12165" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="12165" pos:column="101">*</type:modifier><name pos:line="12165" pos:column="102">get_ServerBinding</name> )<parameter_list pos:line="12165" pos:column="121">( 
            <param><decl><type><name pos:line="12166" pos:column="13">SourceControlBindings</name> <type:modifier pos:line="12166" pos:column="35">*</type:modifier></type> <name pos:line="12166" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="12167" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12167" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12167" pos:column="54">BSTR</name> <type:modifier pos:line="12167" pos:column="59">*</type:modifier></type><name pos:line="12167" pos:column="60">lpbstrServerLocation</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12169" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <function_decl><type><name pos:line="12169" pos:column="73">HRESULT</name></type> ( <name pos:line="12169" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="12169" pos:column="101">*</type:modifier><name pos:line="12169" pos:column="102">get_ProviderName</name> )<parameter_list pos:line="12169" pos:column="120">( 
            <param><decl><type><name pos:line="12170" pos:column="13">SourceControlBindings</name> <type:modifier pos:line="12170" pos:column="35">*</type:modifier></type> <name pos:line="12170" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="12171" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12171" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12171" pos:column="54">BSTR</name> <type:modifier pos:line="12171" pos:column="59">*</type:modifier></type><name pos:line="12171" pos:column="60">lpbstrProviderName</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12173" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <function_decl><type><name pos:line="12173" pos:column="73">HRESULT</name></type> ( <name pos:line="12173" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="12173" pos:column="101">*</type:modifier><name pos:line="12173" pos:column="102">get_ProviderRegKey</name> )<parameter_list pos:line="12173" pos:column="122">( 
            <param><decl><type><name pos:line="12174" pos:column="13">SourceControlBindings</name> <type:modifier pos:line="12174" pos:column="35">*</type:modifier></type> <name pos:line="12174" pos:column="37">This</name></decl></param>,
            <comment type="block" pos:line="12175" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12175" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12175" pos:column="54">BSTR</name> <type:modifier pos:line="12175" pos:column="59">*</type:modifier></type><name pos:line="12175" pos:column="60">lpbstrProviderRegKey</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12177" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="12178" pos:column="7">SourceControlBindingsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="12180" pos:column="5">interface</name></type> <name pos:line="12180" pos:column="15">SourceControlBindings</name>
    <argument_list pos:line="12181" pos:column="5">{
        <argument><expr><name pos:line="12182" pos:column="9">CONST_VTBL</name> struct <name pos:line="12182" pos:column="27">SourceControlBindingsVtbl</name> <op:operator pos:line="12182" pos:column="53">*</op:operator><name pos:line="12182" pos:column="54">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="12187" pos:column="1">#<cpp:directive pos:line="12187" pos:column="2">ifdef</cpp:directive> <name pos:line="12187" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="12190" pos:column="1">#<cpp:directive pos:line="12190" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12190" pos:column="9">SourceControlBindings_QueryInterface</name><parameter_list pos:line="12190" pos:column="45">(<param><type><name pos:line="12190" pos:column="46">This</name></type></param>,<param><type><name pos:line="12190" pos:column="51">riid</name></type></param>,<param><type><name pos:line="12190" pos:column="56">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12191" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="12193" pos:column="1">#<cpp:directive pos:line="12193" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12193" pos:column="9">SourceControlBindings_AddRef</name><parameter_list pos:line="12193" pos:column="37">(<param><type><name pos:line="12193" pos:column="38">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12194" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12196" pos:column="1">#<cpp:directive pos:line="12196" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12196" pos:column="9">SourceControlBindings_Release</name><parameter_list pos:line="12196" pos:column="38">(<param><type><name pos:line="12196" pos:column="39">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12197" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="12200" pos:column="1">#<cpp:directive pos:line="12200" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12200" pos:column="9">SourceControlBindings_GetTypeInfoCount</name><parameter_list pos:line="12200" pos:column="47">(<param><type><name pos:line="12200" pos:column="48">This</name></type></param>,<param><type><name pos:line="12200" pos:column="53">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12201" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="12203" pos:column="1">#<cpp:directive pos:line="12203" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12203" pos:column="9">SourceControlBindings_GetTypeInfo</name><parameter_list pos:line="12203" pos:column="42">(<param><type><name pos:line="12203" pos:column="43">This</name></type></param>,<param><type><name pos:line="12203" pos:column="48">iTInfo</name></type></param>,<param><type><name pos:line="12203" pos:column="55">lcid</name></type></param>,<param><type><name pos:line="12203" pos:column="60">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12204" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="12206" pos:column="1">#<cpp:directive pos:line="12206" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12206" pos:column="9">SourceControlBindings_GetIDsOfNames</name><parameter_list pos:line="12206" pos:column="44">(<param><type><name pos:line="12206" pos:column="45">This</name></type></param>,<param><type><name pos:line="12206" pos:column="50">riid</name></type></param>,<param><type><name pos:line="12206" pos:column="55">rgszNames</name></type></param>,<param><type><name pos:line="12206" pos:column="65">cNames</name></type></param>,<param><type><name pos:line="12206" pos:column="72">lcid</name></type></param>,<param><type><name pos:line="12206" pos:column="77">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12207" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="12209" pos:column="1">#<cpp:directive pos:line="12209" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12209" pos:column="9">SourceControlBindings_Invoke</name><parameter_list pos:line="12209" pos:column="37">(<param><type><name pos:line="12209" pos:column="38">This</name></type></param>,<param><type><name pos:line="12209" pos:column="43">dispIdMember</name></type></param>,<param><type><name pos:line="12209" pos:column="56">riid</name></type></param>,<param><type><name pos:line="12209" pos:column="61">lcid</name></type></param>,<param><type><name pos:line="12209" pos:column="66">wFlags</name></type></param>,<param><type><name pos:line="12209" pos:column="73">pDispParams</name></type></param>,<param><type><name pos:line="12209" pos:column="85">pVarResult</name></type></param>,<param><type><name pos:line="12209" pos:column="96">pExcepInfo</name></type></param>,<param><type><name pos:line="12209" pos:column="107">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12210" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="12213" pos:column="1">#<cpp:directive pos:line="12213" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12213" pos:column="9">SourceControlBindings_get_DTE</name><parameter_list pos:line="12213" pos:column="38">(<param><type><name pos:line="12213" pos:column="39">This</name></type></param>,<param><type><name pos:line="12213" pos:column="44">pDTE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12214" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,pDTE) )</cpp:value></cpp:define> 

<cpp:define pos:line="12216" pos:column="1">#<cpp:directive pos:line="12216" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12216" pos:column="9">SourceControlBindings_get_Parent</name><parameter_list pos:line="12216" pos:column="41">(<param><type><name pos:line="12216" pos:column="42">This</name></type></param>,<param><type><name pos:line="12216" pos:column="47">ppSourceControl</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12217" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,ppSourceControl) )</cpp:value></cpp:define> 

<cpp:define pos:line="12219" pos:column="1">#<cpp:directive pos:line="12219" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12219" pos:column="9">SourceControlBindings_get_ServerName</name><parameter_list pos:line="12219" pos:column="45">(<param><type><name pos:line="12219" pos:column="46">This</name></type></param>,<param><type><name pos:line="12219" pos:column="51">lpbstrSeverName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12220" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ServerName(This,lpbstrSeverName) )</cpp:value></cpp:define> 

<cpp:define pos:line="12222" pos:column="1">#<cpp:directive pos:line="12222" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12222" pos:column="9">SourceControlBindings_get_LocalBinding</name><parameter_list pos:line="12222" pos:column="47">(<param><type><name pos:line="12222" pos:column="48">This</name></type></param>,<param><type><name pos:line="12222" pos:column="53">lpbstrLocalPath</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12223" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_LocalBinding(This,lpbstrLocalPath) )</cpp:value></cpp:define> 

<cpp:define pos:line="12225" pos:column="1">#<cpp:directive pos:line="12225" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12225" pos:column="9">SourceControlBindings_get_ServerBinding</name><parameter_list pos:line="12225" pos:column="48">(<param><type><name pos:line="12225" pos:column="49">This</name></type></param>,<param><type><name pos:line="12225" pos:column="54">lpbstrServerLocation</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12226" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ServerBinding(This,lpbstrServerLocation) )</cpp:value></cpp:define> 

<cpp:define pos:line="12228" pos:column="1">#<cpp:directive pos:line="12228" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12228" pos:column="9">SourceControlBindings_get_ProviderName</name><parameter_list pos:line="12228" pos:column="47">(<param><type><name pos:line="12228" pos:column="48">This</name></type></param>,<param><type><name pos:line="12228" pos:column="53">lpbstrProviderName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12229" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProviderName(This,lpbstrProviderName) )</cpp:value></cpp:define> 

<cpp:define pos:line="12231" pos:column="1">#<cpp:directive pos:line="12231" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12231" pos:column="9">SourceControlBindings_get_ProviderRegKey</name><parameter_list pos:line="12231" pos:column="49">(<param><type><name pos:line="12231" pos:column="50">This</name></type></param>,<param><type><name pos:line="12231" pos:column="55">lpbstrProviderRegKey</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12232" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProviderRegKey(This,lpbstrProviderRegKey) )</cpp:value></cpp:define> 

<cpp:endif pos:line="12234" pos:column="1">#<cpp:directive pos:line="12234" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="12234" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="12237" pos:column="1">#<cpp:directive pos:line="12237" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12237" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="12242" pos:column="1">#<cpp:directive pos:line="12242" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12242" pos:column="9">/* __SourceControlBindings_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="12245" pos:column="1">#<cpp:directive pos:line="12245" pos:column="2">ifndef</cpp:directive> <name pos:line="12245" pos:column="9">__DTE2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="12246" pos:column="1">#<cpp:directive pos:line="12246" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12246" pos:column="9">__DTE2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="12248" pos:column="1">/* interface DTE2 */</comment>
<comment type="block" pos:line="12249" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="12252" pos:column="1">EXTERN_C</name> <specifier pos:line="12252" pos:column="10">const</specifier> <name pos:line="12252" pos:column="16">IID</name></type> <name pos:line="12252" pos:column="20">IID_DTE2</name></decl>;</decl_stmt>

<cpp:if pos:line="12254" pos:column="1">#<cpp:directive pos:line="12254" pos:column="2">if</cpp:directive> <expr><call><name pos:line="12254" pos:column="5">defined</name><argument_list pos:line="12254" pos:column="12">(<argument><expr><name pos:line="12254" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="12254" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="12254" pos:column="29">!</op:operator><call><name pos:line="12254" pos:column="30">defined</name><argument_list pos:line="12254" pos:column="37">(<argument><expr><name pos:line="12254" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="12256" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="12256" pos:column="19">(<argument pos:line="12256" pos:column="20">"2EE1E9FA-0AFE-4348-A89F-ED9CB45C99CF"</argument>)</argument_list></macro>
    <label><name pos:line="12257" pos:column="5">DTE2</name> :</label> <expr_stmt><expr pos:line="12257" pos:column="12">public <name pos:line="12257" pos:column="19">_DTE</name>
    <block pos:line="12258" pos:column="5">{
    <expr pos:line="12259" pos:column="5">public<op:operator pos:line="12259" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="12260" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="12260" pos:column="81">HRESULT</name> <name pos:line="12260" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="12260" pos:column="107">get_ToolWindows</name><argument_list pos:line="12260" pos:column="122">( 
            <comment type="block" pos:line="12261" pos:column="13">/* [retval][out] */</comment> <argument pos:line="12261" pos:column="33">__RPC__deref_out_opt ToolWindows **ppcbs</argument>)</argument_list></macro> <op:operator pos:line="12261" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="12261" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="12263" pos:column="9">virtual <comment type="block" pos:line="12263" pos:column="17">/* [helpstring][id] */</comment> <name pos:line="12263" pos:column="40">HRESULT</name> <name pos:line="12263" pos:column="48">STDMETHODCALLTYPE</name> <macro><name pos:line="12263" pos:column="66">GetThemeColor</name><argument_list pos:line="12263" pos:column="79">( 
            <argument pos:line="12264" pos:column="13">vsThemeColors Element</argument>,
            <comment type="block" pos:line="12265" pos:column="13">/* [retval][out] */</comment> <argument pos:line="12265" pos:column="33">__RPC__out <comment type="block" pos:line="12265" pos:column="44">/* external definition not present */</comment> OLE_COLOR *pColor</argument>)</argument_list></macro> <op:operator pos:line="12265" pos:column="101">=</op:operator> <lit:literal type="number" pos:line="12265" pos:column="103">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="12269" pos:column="1">#<cpp:directive pos:line="12269" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="12269" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="12271" pos:column="5">typedef <type><struct pos:line="12271" pos:column="13">struct <name pos:line="12271" pos:column="20">DTE2Vtbl</name>
    <block pos:line="12272" pos:column="5">{<public type="default" pos:line="12272" pos:column="6">
        <decl_stmt><decl><type><name pos:line="12273" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="12275" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="12275" pos:column="46">HRESULT</name></type> ( <name pos:line="12275" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="12275" pos:column="74">*</type:modifier><name pos:line="12275" pos:column="75">QueryInterface</name> )<parameter_list pos:line="12275" pos:column="91">( 
            <param><decl><type><name pos:line="12276" pos:column="13">DTE2</name> <type:modifier pos:line="12276" pos:column="18">*</type:modifier></type> <name pos:line="12276" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12277" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="12277" pos:column="47">struct <name pos:line="12277" pos:column="54">GUID</name> <type:modifier pos:line="12277" pos:column="59">*</type:modifier></type><name pos:line="12277" pos:column="60">riid</name></decl><op:operator pos:line="12277" pos:column="64">,</op:operator>
            <comment type="block" pos:line="12278" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="12278" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="12278" pos:column="59">void</name> <type:modifier pos:line="12278" pos:column="64">*</type:modifier><type:modifier pos:line="12278" pos:column="65">*</type:modifier><name pos:line="12278" pos:column="66">ppvObj</name><op:operator pos:line="12278" pos:column="72">,</op:operator>
            <comment type="block" pos:line="12279" pos:column="13">/* [retval][out] */</comment> <name pos:line="12279" pos:column="33">__RPC__out</name> <name pos:line="12279" pos:column="44">void</name> <type:modifier pos:line="12279" pos:column="49">*</type:modifier><name pos:line="12279" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="12281" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="12281" pos:column="46">HRESULT</name></type> ( <name pos:line="12281" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="12281" pos:column="74">*</type:modifier><name pos:line="12281" pos:column="75">AddRef</name> )<parameter_list pos:line="12281" pos:column="83">( 
            <param><decl><type><name pos:line="12282" pos:column="13">DTE2</name> <type:modifier pos:line="12282" pos:column="18">*</type:modifier></type> <name pos:line="12282" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12283" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12283" pos:column="33">__RPC__out</name> <name pos:line="12283" pos:column="44">unsigned</name> <name pos:line="12283" pos:column="53">long</name> <type:modifier pos:line="12283" pos:column="58">*</type:modifier></type><name pos:line="12283" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12285" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="12285" pos:column="46">HRESULT</name></type> ( <name pos:line="12285" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="12285" pos:column="74">*</type:modifier><name pos:line="12285" pos:column="75">Release</name> )<parameter_list pos:line="12285" pos:column="84">( 
            <param><decl><type><name pos:line="12286" pos:column="13">DTE2</name> <type:modifier pos:line="12286" pos:column="18">*</type:modifier></type> <name pos:line="12286" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12287" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12287" pos:column="33">__RPC__out</name> <name pos:line="12287" pos:column="44">unsigned</name> <name pos:line="12287" pos:column="53">long</name> <type:modifier pos:line="12287" pos:column="58">*</type:modifier></type><name pos:line="12287" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12289" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="12289" pos:column="46">HRESULT</name></type> ( <name pos:line="12289" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="12289" pos:column="74">*</type:modifier><name pos:line="12289" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="12289" pos:column="93">( 
            <param><decl><type><name pos:line="12290" pos:column="13">DTE2</name> <type:modifier pos:line="12290" pos:column="18">*</type:modifier></type> <name pos:line="12290" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12291" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="12291" pos:column="38">__RPC__out</name> <name pos:line="12291" pos:column="49">unsigned</name> <name pos:line="12291" pos:column="58">UINT</name> <type:modifier pos:line="12291" pos:column="63">*</type:modifier></type><name pos:line="12291" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="12292" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12292" pos:column="33">__RPC__out</name> <name pos:line="12292" pos:column="44">void</name> <type:modifier pos:line="12292" pos:column="49">*</type:modifier></type><name pos:line="12292" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12294" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="12294" pos:column="46">HRESULT</name></type> ( <name pos:line="12294" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="12294" pos:column="74">*</type:modifier><name pos:line="12294" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="12294" pos:column="88">( 
            <param><decl><type><name pos:line="12295" pos:column="13">DTE2</name> <type:modifier pos:line="12295" pos:column="18">*</type:modifier></type> <name pos:line="12295" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12296" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="12296" pos:column="37">unsigned</name> <name pos:line="12296" pos:column="46">UINT</name></type> <name pos:line="12296" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="12297" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="12297" pos:column="37">unsigned</name> <name pos:line="12297" pos:column="46">long</name></type> <name pos:line="12297" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="12298" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="12298" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="12298" pos:column="59">void</name> <type:modifier pos:line="12298" pos:column="64">*</type:modifier><type:modifier pos:line="12298" pos:column="65">*</type:modifier></type><name pos:line="12298" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="12299" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12299" pos:column="33">__RPC__out</name> <name pos:line="12299" pos:column="44">void</name> <type:modifier pos:line="12299" pos:column="49">*</type:modifier></type><name pos:line="12299" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12301" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="12301" pos:column="46">HRESULT</name> <argument_list pos:line="12301" pos:column="54">( <argument pos:line="12301" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12301" pos:column="90">(</op:operator> 
            <name pos:line="12302" pos:column="13">DTE2</name> <op:operator pos:line="12302" pos:column="18">*</op:operator> <name pos:line="12302" pos:column="20">This</name><op:operator pos:line="12302" pos:column="24">,</op:operator>
            <comment type="block" pos:line="12303" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="12303" pos:column="37">__RPC__in</name> struct <name pos:line="12303" pos:column="54">GUID</name> <op:operator pos:line="12303" pos:column="59">*</op:operator><name pos:line="12303" pos:column="60">riid</name><op:operator pos:line="12303" pos:column="64">,</op:operator>
            <comment type="block" pos:line="12304" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="12304" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="12304" pos:column="57">signed</name> <name pos:line="12304" pos:column="64">char</name> <op:operator pos:line="12304" pos:column="69">*</op:operator><op:operator pos:line="12304" pos:column="70">*</op:operator><name pos:line="12304" pos:column="71">rgszNames</name><op:operator pos:line="12304" pos:column="80">,</op:operator>
            <comment type="block" pos:line="12305" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="12305" pos:column="37">unsigned</name> <name pos:line="12305" pos:column="46">UINT</name> <name pos:line="12305" pos:column="51">cNames</name><op:operator pos:line="12305" pos:column="57">,</op:operator>
            <comment type="block" pos:line="12306" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="12306" pos:column="37">unsigned</name> <name pos:line="12306" pos:column="46">long</name> <name pos:line="12306" pos:column="51">lcid</name><op:operator pos:line="12306" pos:column="55">,</op:operator>
            <comment type="block" pos:line="12307" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="12307" pos:column="38">__RPC__out</name> <name pos:line="12307" pos:column="49">signed</name> <name pos:line="12307" pos:column="56">long</name> <op:operator pos:line="12307" pos:column="61">*</op:operator><name pos:line="12307" pos:column="62">rgdispid</name><op:operator pos:line="12307" pos:column="70">,</op:operator>
            <comment type="block" pos:line="12308" pos:column="13">/* [retval][out] */</comment> <name pos:line="12308" pos:column="33">__RPC__out</name> <name pos:line="12308" pos:column="44">void</name> <op:operator pos:line="12308" pos:column="49">*</op:operator><name pos:line="12308" pos:column="50">retval</name><op:operator pos:line="12308" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="12310" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="12310" pos:column="46">HRESULT</name> <argument_list pos:line="12310" pos:column="54">( <argument pos:line="12310" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12310" pos:column="83">(</op:operator> 
            <name pos:line="12311" pos:column="13">DTE2</name> <op:operator pos:line="12311" pos:column="18">*</op:operator> <name pos:line="12311" pos:column="20">This</name><op:operator pos:line="12311" pos:column="24">,</op:operator>
            <comment type="block" pos:line="12312" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="12312" pos:column="37">signed</name> <name pos:line="12312" pos:column="44">long</name> <name pos:line="12312" pos:column="49">dispidMember</name><op:operator pos:line="12312" pos:column="61">,</op:operator>
            <comment type="block" pos:line="12313" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="12313" pos:column="37">__RPC__in</name> struct <name pos:line="12313" pos:column="54">GUID</name> <op:operator pos:line="12313" pos:column="59">*</op:operator><name pos:line="12313" pos:column="60">riid</name><op:operator pos:line="12313" pos:column="64">,</op:operator>
            <comment type="block" pos:line="12314" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="12314" pos:column="37">unsigned</name> <name pos:line="12314" pos:column="46">long</name> <name pos:line="12314" pos:column="51">lcid</name><op:operator pos:line="12314" pos:column="55">,</op:operator>
            <comment type="block" pos:line="12315" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="12315" pos:column="37">unsigned</name> <name pos:line="12315" pos:column="46">short</name> <name pos:line="12315" pos:column="52">wFlags</name><op:operator pos:line="12315" pos:column="58">,</op:operator>
            <comment type="block" pos:line="12316" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="12316" pos:column="37">__RPC__in</name> struct <name pos:line="12316" pos:column="54">DISPPARAMS</name> <op:operator pos:line="12316" pos:column="65">*</op:operator><name pos:line="12316" pos:column="66">pdispparams</name><op:operator pos:line="12316" pos:column="77">,</op:operator>
            <comment type="block" pos:line="12317" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="12317" pos:column="38">__RPC__out</name> <name pos:line="12317" pos:column="49">VARIANT</name> <op:operator pos:line="12317" pos:column="57">*</op:operator><name pos:line="12317" pos:column="58">pvarResult</name><op:operator pos:line="12317" pos:column="68">,</op:operator>
            <comment type="block" pos:line="12318" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="12318" pos:column="38">__RPC__out</name> struct <name pos:line="12318" pos:column="56">EXCEPINFO</name> <op:operator pos:line="12318" pos:column="66">*</op:operator><name pos:line="12318" pos:column="67">pexcepinfo</name><op:operator pos:line="12318" pos:column="77">,</op:operator>
            <comment type="block" pos:line="12319" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="12319" pos:column="38">__RPC__out</name> <name pos:line="12319" pos:column="49">unsigned</name> <name pos:line="12319" pos:column="58">UINT</name> <op:operator pos:line="12319" pos:column="63">*</op:operator><name pos:line="12319" pos:column="64">puArgErr</name><op:operator pos:line="12319" pos:column="72">,</op:operator>
            <comment type="block" pos:line="12320" pos:column="13">/* [retval][out] */</comment> <name pos:line="12320" pos:column="33">__RPC__out</name> <name pos:line="12320" pos:column="44">void</name> <op:operator pos:line="12320" pos:column="49">*</op:operator><name pos:line="12320" pos:column="50">retval</name><op:operator pos:line="12320" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="12322" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12322" pos:column="43">HRESULT</name></type> ( <name pos:line="12322" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12322" pos:column="71">*</type:modifier><name pos:line="12322" pos:column="72">get_Name</name> )<parameter_list pos:line="12322" pos:column="82">( 
            <param><decl><type><name pos:line="12323" pos:column="13">DTE2</name> <type:modifier pos:line="12323" pos:column="18">*</type:modifier></type> <name pos:line="12323" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12324" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12324" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12324" pos:column="54">BSTR</name> <type:modifier pos:line="12324" pos:column="59">*</type:modifier></type><name pos:line="12324" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12326" pos:column="9">/* [id][propget][hidden][funcdescattr] */</comment> <function_decl><type><name pos:line="12326" pos:column="51">HRESULT</name></type> ( <name pos:line="12326" pos:column="61">STDMETHODCALLTYPE</name> <type:modifier pos:line="12326" pos:column="79">*</type:modifier><name pos:line="12326" pos:column="80">get_FileName</name> )<parameter_list pos:line="12326" pos:column="94">( 
            <param><decl><type><name pos:line="12327" pos:column="13">DTE2</name> <type:modifier pos:line="12327" pos:column="18">*</type:modifier></type> <name pos:line="12327" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12328" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12328" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12328" pos:column="54">BSTR</name> <type:modifier pos:line="12328" pos:column="59">*</type:modifier></type><name pos:line="12328" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12330" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12330" pos:column="43">HRESULT</name></type> ( <name pos:line="12330" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12330" pos:column="71">*</type:modifier><name pos:line="12330" pos:column="72">get_Version</name> )<parameter_list pos:line="12330" pos:column="85">( 
            <param><decl><type><name pos:line="12331" pos:column="13">DTE2</name> <type:modifier pos:line="12331" pos:column="18">*</type:modifier></type> <name pos:line="12331" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12332" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12332" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12332" pos:column="54">BSTR</name> <type:modifier pos:line="12332" pos:column="59">*</type:modifier></type><name pos:line="12332" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12334" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12334" pos:column="43">HRESULT</name></type> ( <name pos:line="12334" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12334" pos:column="71">*</type:modifier><name pos:line="12334" pos:column="72">get_CommandBars</name> )<parameter_list pos:line="12334" pos:column="89">( 
            <param><decl><type><name pos:line="12335" pos:column="13">DTE2</name> <type:modifier pos:line="12335" pos:column="18">*</type:modifier></type> <name pos:line="12335" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12336" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12336" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12336" pos:column="54">IDispatch</name> <type:modifier pos:line="12336" pos:column="64">*</type:modifier><type:modifier pos:line="12336" pos:column="65">*</type:modifier></type><name pos:line="12336" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12338" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12338" pos:column="43">HRESULT</name></type> ( <name pos:line="12338" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12338" pos:column="71">*</type:modifier><name pos:line="12338" pos:column="72">get_Windows</name> )<parameter_list pos:line="12338" pos:column="85">( 
            <param><decl><type><name pos:line="12339" pos:column="13">DTE2</name> <type:modifier pos:line="12339" pos:column="18">*</type:modifier></type> <name pos:line="12339" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12340" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12340" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12340" pos:column="54">Windows</name> <type:modifier pos:line="12340" pos:column="62">*</type:modifier><type:modifier pos:line="12340" pos:column="63">*</type:modifier></type><name pos:line="12340" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12342" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12342" pos:column="43">HRESULT</name></type> ( <name pos:line="12342" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12342" pos:column="71">*</type:modifier><name pos:line="12342" pos:column="72">get_Events</name> )<parameter_list pos:line="12342" pos:column="84">( 
            <param><decl><type><name pos:line="12343" pos:column="13">DTE2</name> <type:modifier pos:line="12343" pos:column="18">*</type:modifier></type> <name pos:line="12343" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12344" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12344" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12344" pos:column="54">Events</name> <type:modifier pos:line="12344" pos:column="61">*</type:modifier><type:modifier pos:line="12344" pos:column="62">*</type:modifier></type><name pos:line="12344" pos:column="63">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12346" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12346" pos:column="43">HRESULT</name></type> ( <name pos:line="12346" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12346" pos:column="71">*</type:modifier><name pos:line="12346" pos:column="72">get_AddIns</name> )<parameter_list pos:line="12346" pos:column="84">( 
            <param><decl><type><name pos:line="12347" pos:column="13">DTE2</name> <type:modifier pos:line="12347" pos:column="18">*</type:modifier></type> <name pos:line="12347" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12348" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12348" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12348" pos:column="54">AddIns</name> <type:modifier pos:line="12348" pos:column="61">*</type:modifier><type:modifier pos:line="12348" pos:column="62">*</type:modifier></type><name pos:line="12348" pos:column="63">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12350" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12350" pos:column="43">HRESULT</name></type> ( <name pos:line="12350" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12350" pos:column="71">*</type:modifier><name pos:line="12350" pos:column="72">get_MainWindow</name> )<parameter_list pos:line="12350" pos:column="88">( 
            <param><decl><type><name pos:line="12351" pos:column="13">DTE2</name> <type:modifier pos:line="12351" pos:column="18">*</type:modifier></type> <name pos:line="12351" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12352" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12352" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12352" pos:column="54">Window</name> <type:modifier pos:line="12352" pos:column="61">*</type:modifier><type:modifier pos:line="12352" pos:column="62">*</type:modifier></type><name pos:line="12352" pos:column="63">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12354" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12354" pos:column="43">HRESULT</name></type> ( <name pos:line="12354" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12354" pos:column="71">*</type:modifier><name pos:line="12354" pos:column="72">get_ActiveWindow</name> )<parameter_list pos:line="12354" pos:column="90">( 
            <param><decl><type><name pos:line="12355" pos:column="13">DTE2</name> <type:modifier pos:line="12355" pos:column="18">*</type:modifier></type> <name pos:line="12355" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12356" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12356" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12356" pos:column="54">Window</name> <type:modifier pos:line="12356" pos:column="61">*</type:modifier><type:modifier pos:line="12356" pos:column="62">*</type:modifier></type><name pos:line="12356" pos:column="63">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12358" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="12358" pos:column="34">HRESULT</name></type> ( <name pos:line="12358" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="12358" pos:column="62">*</type:modifier><name pos:line="12358" pos:column="63">Quit</name> )<parameter_list pos:line="12358" pos:column="69">( 
            <param><decl><type><name pos:line="12359" pos:column="13">DTE2</name> <type:modifier pos:line="12359" pos:column="18">*</type:modifier></type> <name pos:line="12359" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12360" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12360" pos:column="33">__RPC__out</name> <name pos:line="12360" pos:column="44">void</name> <type:modifier pos:line="12360" pos:column="49">*</type:modifier></type><name pos:line="12360" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12362" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="12362" pos:column="43">HRESULT</name> <argument_list pos:line="12362" pos:column="51">( <argument pos:line="12362" pos:column="53">STDMETHODCALLTYPE *get_DisplayMode</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12362" pos:column="89">(</op:operator> 
            <name pos:line="12363" pos:column="13">DTE2</name> <op:operator pos:line="12363" pos:column="18">*</op:operator> <name pos:line="12363" pos:column="20">This</name><op:operator pos:line="12363" pos:column="24">,</op:operator>
            <comment type="block" pos:line="12364" pos:column="13">/* [retval][out] */</comment> <name pos:line="12364" pos:column="33">__RPC__out</name> enum <name pos:line="12364" pos:column="49">vsDisplay</name> <op:operator pos:line="12364" pos:column="59">*</op:operator><name pos:line="12364" pos:column="60">retval</name><op:operator pos:line="12364" pos:column="66">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="12366" pos:column="9">/* [id][propput][funcdescattr] */</comment> <macro><name pos:line="12366" pos:column="43">HRESULT</name> <argument_list pos:line="12366" pos:column="51">( <argument pos:line="12366" pos:column="53">STDMETHODCALLTYPE *put_DisplayMode</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12366" pos:column="89">(</op:operator> 
            <name pos:line="12367" pos:column="13">DTE2</name> <op:operator pos:line="12367" pos:column="18">*</op:operator> <name pos:line="12367" pos:column="20">This</name><op:operator pos:line="12367" pos:column="24">,</op:operator>
            <comment type="block" pos:line="12368" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="12368" pos:column="42">vsDisplay</name> <name pos:line="12368" pos:column="52">noname</name><op:operator pos:line="12368" pos:column="58">,</op:operator>
            <comment type="block" pos:line="12369" pos:column="13">/* [retval][out] */</comment> <name pos:line="12369" pos:column="33">__RPC__out</name> <name pos:line="12369" pos:column="44">void</name> <op:operator pos:line="12369" pos:column="49">*</op:operator><name pos:line="12369" pos:column="50">retval</name><op:operator pos:line="12369" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="12371" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12371" pos:column="43">HRESULT</name></type> ( <name pos:line="12371" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12371" pos:column="71">*</type:modifier><name pos:line="12371" pos:column="72">get_Solution</name> )<parameter_list pos:line="12371" pos:column="86">( 
            <param><decl><type><name pos:line="12372" pos:column="13">DTE2</name> <type:modifier pos:line="12372" pos:column="18">*</type:modifier></type> <name pos:line="12372" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12373" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12373" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="12373" pos:column="54">*</type:modifier><type:modifier pos:line="12373" pos:column="55">*</type:modifier></type><name pos:line="12373" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12375" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12375" pos:column="43">HRESULT</name></type> ( <name pos:line="12375" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12375" pos:column="71">*</type:modifier><name pos:line="12375" pos:column="72">get_Commands</name> )<parameter_list pos:line="12375" pos:column="86">( 
            <param><decl><type><name pos:line="12376" pos:column="13">DTE2</name> <type:modifier pos:line="12376" pos:column="18">*</type:modifier></type> <name pos:line="12376" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12377" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12377" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12377" pos:column="54">Commands</name> <type:modifier pos:line="12377" pos:column="63">*</type:modifier><type:modifier pos:line="12377" pos:column="64">*</type:modifier></type><name pos:line="12377" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12379" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="12379" pos:column="34">HRESULT</name></type> ( <name pos:line="12379" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="12379" pos:column="62">*</type:modifier><name pos:line="12379" pos:column="63">GetObject</name> )<parameter_list pos:line="12379" pos:column="74">( 
            <param><decl><type><name pos:line="12380" pos:column="13">DTE2</name> <type:modifier pos:line="12380" pos:column="18">*</type:modifier></type> <name pos:line="12380" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12381" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="12381" pos:column="37">__RPC__in</name> <name pos:line="12381" pos:column="47">BSTR</name></type> <name pos:line="12381" pos:column="52">Name</name></decl></param>,
            <comment type="block" pos:line="12382" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12382" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12382" pos:column="54">IDispatch</name> <type:modifier pos:line="12382" pos:column="64">*</type:modifier><type:modifier pos:line="12382" pos:column="65">*</type:modifier></type><name pos:line="12382" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12384" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12384" pos:column="43">HRESULT</name></type> ( <name pos:line="12384" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12384" pos:column="71">*</type:modifier><name pos:line="12384" pos:column="72">get_Properties</name> )<parameter_list pos:line="12384" pos:column="88">( 
            <param><decl><type><name pos:line="12385" pos:column="13">DTE2</name> <type:modifier pos:line="12385" pos:column="18">*</type:modifier></type> <name pos:line="12385" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12386" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="12386" pos:column="33">__RPC__in</name> <name pos:line="12386" pos:column="43">BSTR</name></type> <name pos:line="12386" pos:column="48">Category</name></decl></param>,
            <comment type="block" pos:line="12387" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="12387" pos:column="33">__RPC__in</name> <name pos:line="12387" pos:column="43">BSTR</name></type> <name pos:line="12387" pos:column="48">Page</name></decl></param>,
            <comment type="block" pos:line="12388" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12388" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12388" pos:column="54">Properties</name> <type:modifier pos:line="12388" pos:column="65">*</type:modifier><type:modifier pos:line="12388" pos:column="66">*</type:modifier></type><name pos:line="12388" pos:column="67">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12390" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12390" pos:column="43">HRESULT</name></type> ( <name pos:line="12390" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12390" pos:column="71">*</type:modifier><name pos:line="12390" pos:column="72">get_SelectedItems</name> )<parameter_list pos:line="12390" pos:column="91">( 
            <param><decl><type><name pos:line="12391" pos:column="13">DTE2</name> <type:modifier pos:line="12391" pos:column="18">*</type:modifier></type> <name pos:line="12391" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12392" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12392" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12392" pos:column="54">SelectedItems</name> <type:modifier pos:line="12392" pos:column="68">*</type:modifier><type:modifier pos:line="12392" pos:column="69">*</type:modifier></type><name pos:line="12392" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12394" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12394" pos:column="43">HRESULT</name></type> ( <name pos:line="12394" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12394" pos:column="71">*</type:modifier><name pos:line="12394" pos:column="72">get_CommandLineArguments</name> )<parameter_list pos:line="12394" pos:column="98">( 
            <param><decl><type><name pos:line="12395" pos:column="13">DTE2</name> <type:modifier pos:line="12395" pos:column="18">*</type:modifier></type> <name pos:line="12395" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12396" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12396" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12396" pos:column="54">BSTR</name> <type:modifier pos:line="12396" pos:column="59">*</type:modifier></type><name pos:line="12396" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12398" pos:column="9">/* [id][hidden][funcdescattr] */</comment> <function_decl><type><name pos:line="12398" pos:column="42">HRESULT</name></type> ( <name pos:line="12398" pos:column="52">STDMETHODCALLTYPE</name> <type:modifier pos:line="12398" pos:column="70">*</type:modifier><name pos:line="12398" pos:column="71">OpenFile</name> )<parameter_list pos:line="12398" pos:column="81">( 
            <param><decl><type><name pos:line="12399" pos:column="13">DTE2</name> <type:modifier pos:line="12399" pos:column="18">*</type:modifier></type> <name pos:line="12399" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12400" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="12400" pos:column="37">__RPC__in</name> <name pos:line="12400" pos:column="47">BSTR</name></type> <name pos:line="12400" pos:column="52">ViewKind</name></decl></param>,
            <comment type="block" pos:line="12401" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="12401" pos:column="37">__RPC__in</name> <name pos:line="12401" pos:column="47">BSTR</name></type> <name pos:line="12401" pos:column="52">FileName</name></decl></param>,
            <comment type="block" pos:line="12402" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12402" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12402" pos:column="54">Window</name> <type:modifier pos:line="12402" pos:column="61">*</type:modifier><type:modifier pos:line="12402" pos:column="62">*</type:modifier></type><name pos:line="12402" pos:column="63">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12404" pos:column="9">/* [id][propget][hidden][funcdescattr] */</comment> <function_decl><type><name pos:line="12404" pos:column="51">HRESULT</name></type> ( <name pos:line="12404" pos:column="61">STDMETHODCALLTYPE</name> <type:modifier pos:line="12404" pos:column="79">*</type:modifier><name pos:line="12404" pos:column="80">get_IsOpenFile</name> )<parameter_list pos:line="12404" pos:column="96">( 
            <param><decl><type><name pos:line="12405" pos:column="13">DTE2</name> <type:modifier pos:line="12405" pos:column="18">*</type:modifier></type> <name pos:line="12405" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12406" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="12406" pos:column="37">__RPC__in</name> <name pos:line="12406" pos:column="47">BSTR</name></type> <name pos:line="12406" pos:column="52">ViewKind</name></decl></param>,
            <comment type="block" pos:line="12407" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="12407" pos:column="37">__RPC__in</name> <name pos:line="12407" pos:column="47">BSTR</name></type> <name pos:line="12407" pos:column="52">FileName</name></decl></param>,
            <comment type="block" pos:line="12408" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12408" pos:column="33">__RPC__out</name> <name pos:line="12408" pos:column="44">BOOLEAN</name> <type:modifier pos:line="12408" pos:column="52">*</type:modifier></type><name pos:line="12408" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12410" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12410" pos:column="43">HRESULT</name></type> ( <name pos:line="12410" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12410" pos:column="71">*</type:modifier><name pos:line="12410" pos:column="72">get_DTE</name> )<parameter_list pos:line="12410" pos:column="81">( 
            <param><decl><type><name pos:line="12411" pos:column="13">DTE2</name> <type:modifier pos:line="12411" pos:column="18">*</type:modifier></type> <name pos:line="12411" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12412" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12412" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="12412" pos:column="54">*</type:modifier><type:modifier pos:line="12412" pos:column="55">*</type:modifier></type><name pos:line="12412" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12414" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12414" pos:column="43">HRESULT</name></type> ( <name pos:line="12414" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12414" pos:column="71">*</type:modifier><name pos:line="12414" pos:column="72">get_LocaleID</name> )<parameter_list pos:line="12414" pos:column="86">( 
            <param><decl><type><name pos:line="12415" pos:column="13">DTE2</name> <type:modifier pos:line="12415" pos:column="18">*</type:modifier></type> <name pos:line="12415" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12416" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12416" pos:column="33">__RPC__out</name> <name pos:line="12416" pos:column="44">signed</name> <name pos:line="12416" pos:column="51">long</name> <type:modifier pos:line="12416" pos:column="56">*</type:modifier></type><name pos:line="12416" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12418" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12418" pos:column="43">HRESULT</name></type> ( <name pos:line="12418" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12418" pos:column="71">*</type:modifier><name pos:line="12418" pos:column="72">get_WindowConfigurations</name> )<parameter_list pos:line="12418" pos:column="98">( 
            <param><decl><type><name pos:line="12419" pos:column="13">DTE2</name> <type:modifier pos:line="12419" pos:column="18">*</type:modifier></type> <name pos:line="12419" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12420" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12420" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12420" pos:column="54">WindowConfigurations</name> <type:modifier pos:line="12420" pos:column="75">*</type:modifier><type:modifier pos:line="12420" pos:column="76">*</type:modifier></type><name pos:line="12420" pos:column="77">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12422" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12422" pos:column="43">HRESULT</name></type> ( <name pos:line="12422" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12422" pos:column="71">*</type:modifier><name pos:line="12422" pos:column="72">get_Documents</name> )<parameter_list pos:line="12422" pos:column="87">( 
            <param><decl><type><name pos:line="12423" pos:column="13">DTE2</name> <type:modifier pos:line="12423" pos:column="18">*</type:modifier></type> <name pos:line="12423" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12424" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12424" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12424" pos:column="54">Documents</name> <type:modifier pos:line="12424" pos:column="64">*</type:modifier><type:modifier pos:line="12424" pos:column="65">*</type:modifier></type><name pos:line="12424" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12426" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12426" pos:column="43">HRESULT</name></type> ( <name pos:line="12426" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12426" pos:column="71">*</type:modifier><name pos:line="12426" pos:column="72">get_ActiveDocument</name> )<parameter_list pos:line="12426" pos:column="92">( 
            <param><decl><type><name pos:line="12427" pos:column="13">DTE2</name> <type:modifier pos:line="12427" pos:column="18">*</type:modifier></type> <name pos:line="12427" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12428" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12428" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12428" pos:column="54">Document</name> <type:modifier pos:line="12428" pos:column="63">*</type:modifier><type:modifier pos:line="12428" pos:column="64">*</type:modifier></type><name pos:line="12428" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12430" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="12430" pos:column="34">HRESULT</name></type> ( <name pos:line="12430" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="12430" pos:column="62">*</type:modifier><name pos:line="12430" pos:column="63">ExecuteCommand</name> )<parameter_list pos:line="12430" pos:column="79">( 
            <param><decl><type><name pos:line="12431" pos:column="13">DTE2</name> <type:modifier pos:line="12431" pos:column="18">*</type:modifier></type> <name pos:line="12431" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12432" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="12432" pos:column="37">__RPC__in</name> <name pos:line="12432" pos:column="47">BSTR</name></type> <name pos:line="12432" pos:column="52">CommandName</name></decl></param>,
            <comment type="block" pos:line="12433" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="12433" pos:column="37">__RPC__in</name> <name pos:line="12433" pos:column="47">BSTR</name></type> <name pos:line="12433" pos:column="52">CommandArgs</name></decl></param>,
            <comment type="block" pos:line="12434" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12434" pos:column="33">__RPC__out</name> <name pos:line="12434" pos:column="44">void</name> <type:modifier pos:line="12434" pos:column="49">*</type:modifier></type><name pos:line="12434" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12436" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12436" pos:column="43">HRESULT</name></type> ( <name pos:line="12436" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12436" pos:column="71">*</type:modifier><name pos:line="12436" pos:column="72">get_Globals</name> )<parameter_list pos:line="12436" pos:column="85">( 
            <param><decl><type><name pos:line="12437" pos:column="13">DTE2</name> <type:modifier pos:line="12437" pos:column="18">*</type:modifier></type> <name pos:line="12437" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12438" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12438" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12438" pos:column="54">Globals</name> <type:modifier pos:line="12438" pos:column="62">*</type:modifier><type:modifier pos:line="12438" pos:column="63">*</type:modifier></type><name pos:line="12438" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12440" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12440" pos:column="43">HRESULT</name></type> ( <name pos:line="12440" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12440" pos:column="71">*</type:modifier><name pos:line="12440" pos:column="72">get_StatusBar</name> )<parameter_list pos:line="12440" pos:column="87">( 
            <param><decl><type><name pos:line="12441" pos:column="13">DTE2</name> <type:modifier pos:line="12441" pos:column="18">*</type:modifier></type> <name pos:line="12441" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12442" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12442" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12442" pos:column="54">StatusBar</name> <type:modifier pos:line="12442" pos:column="64">*</type:modifier><type:modifier pos:line="12442" pos:column="65">*</type:modifier></type><name pos:line="12442" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12444" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12444" pos:column="43">HRESULT</name></type> ( <name pos:line="12444" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12444" pos:column="71">*</type:modifier><name pos:line="12444" pos:column="72">get_FullName</name> )<parameter_list pos:line="12444" pos:column="86">( 
            <param><decl><type><name pos:line="12445" pos:column="13">DTE2</name> <type:modifier pos:line="12445" pos:column="18">*</type:modifier></type> <name pos:line="12445" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12446" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12446" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12446" pos:column="54">BSTR</name> <type:modifier pos:line="12446" pos:column="59">*</type:modifier></type><name pos:line="12446" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12448" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12448" pos:column="43">HRESULT</name></type> ( <name pos:line="12448" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12448" pos:column="71">*</type:modifier><name pos:line="12448" pos:column="72">get_UserControl</name> )<parameter_list pos:line="12448" pos:column="89">( 
            <param><decl><type><name pos:line="12449" pos:column="13">DTE2</name> <type:modifier pos:line="12449" pos:column="18">*</type:modifier></type> <name pos:line="12449" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12450" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12450" pos:column="33">__RPC__out</name> <name pos:line="12450" pos:column="44">BOOLEAN</name> <type:modifier pos:line="12450" pos:column="52">*</type:modifier></type><name pos:line="12450" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12452" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="12452" pos:column="43">HRESULT</name></type> ( <name pos:line="12452" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12452" pos:column="71">*</type:modifier><name pos:line="12452" pos:column="72">put_UserControl</name> )<parameter_list pos:line="12452" pos:column="89">( 
            <param><decl><type><name pos:line="12453" pos:column="13">DTE2</name> <type:modifier pos:line="12453" pos:column="18">*</type:modifier></type> <name pos:line="12453" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12454" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="12454" pos:column="37">BOOLEAN</name></type> <name pos:line="12454" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="12455" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12455" pos:column="33">__RPC__out</name> <name pos:line="12455" pos:column="44">void</name> <type:modifier pos:line="12455" pos:column="49">*</type:modifier></type><name pos:line="12455" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12457" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12457" pos:column="43">HRESULT</name></type> ( <name pos:line="12457" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12457" pos:column="71">*</type:modifier><name pos:line="12457" pos:column="72">get_ObjectExtenders</name> )<parameter_list pos:line="12457" pos:column="93">( 
            <param><decl><type><name pos:line="12458" pos:column="13">DTE2</name> <type:modifier pos:line="12458" pos:column="18">*</type:modifier></type> <name pos:line="12458" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12459" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12459" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12459" pos:column="54">ObjectExtenders</name> <type:modifier pos:line="12459" pos:column="70">*</type:modifier><type:modifier pos:line="12459" pos:column="71">*</type:modifier></type><name pos:line="12459" pos:column="72">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12461" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12461" pos:column="43">HRESULT</name></type> ( <name pos:line="12461" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12461" pos:column="71">*</type:modifier><name pos:line="12461" pos:column="72">get_Find</name> )<parameter_list pos:line="12461" pos:column="82">( 
            <param><decl><type><name pos:line="12462" pos:column="13">DTE2</name> <type:modifier pos:line="12462" pos:column="18">*</type:modifier></type> <name pos:line="12462" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12463" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12463" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12463" pos:column="54">Find</name> <type:modifier pos:line="12463" pos:column="59">*</type:modifier><type:modifier pos:line="12463" pos:column="60">*</type:modifier></type><name pos:line="12463" pos:column="61">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12465" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="12465" pos:column="43">HRESULT</name> <argument_list pos:line="12465" pos:column="51">( <argument pos:line="12465" pos:column="53">STDMETHODCALLTYPE *get_Mode</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12465" pos:column="82">(</op:operator> 
            <name pos:line="12466" pos:column="13">DTE2</name> <op:operator pos:line="12466" pos:column="18">*</op:operator> <name pos:line="12466" pos:column="20">This</name><op:operator pos:line="12466" pos:column="24">,</op:operator>
            <comment type="block" pos:line="12467" pos:column="13">/* [retval][out] */</comment> <name pos:line="12467" pos:column="33">__RPC__out</name> enum <name pos:line="12467" pos:column="49">vsIDEMode</name> <op:operator pos:line="12467" pos:column="59">*</op:operator><name pos:line="12467" pos:column="60">retval</name><op:operator pos:line="12467" pos:column="66">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="12469" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="12469" pos:column="34">HRESULT</name> <argument_list pos:line="12469" pos:column="42">( <argument pos:line="12469" pos:column="44">STDMETHODCALLTYPE *LaunchWizard</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12469" pos:column="77">(</op:operator> 
            <name pos:line="12470" pos:column="13">DTE2</name> <op:operator pos:line="12470" pos:column="18">*</op:operator> <name pos:line="12470" pos:column="20">This</name><op:operator pos:line="12470" pos:column="24">,</op:operator>
            <comment type="block" pos:line="12471" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="12471" pos:column="37">__RPC__in</name> <name pos:line="12471" pos:column="47">BSTR</name> <name pos:line="12471" pos:column="52">VSZFile</name><op:operator pos:line="12471" pos:column="59">,</op:operator>
            <comment type="block" pos:line="12472" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="12472" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="12472" pos:column="57">SAFEARRAY</name> <op:operator pos:line="12472" pos:column="67">*</op:operator> <op:operator pos:line="12472" pos:column="69">*</op:operator><name pos:line="12472" pos:column="70">ContextParams</name><op:operator pos:line="12472" pos:column="83">,</op:operator>
            <comment type="block" pos:line="12473" pos:column="13">/* [retval][out] */</comment> <name pos:line="12473" pos:column="33">__RPC__out</name> enum <name pos:line="12473" pos:column="49">wizardResult</name> <op:operator pos:line="12473" pos:column="62">*</op:operator><name pos:line="12473" pos:column="63">retval</name><op:operator pos:line="12473" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="12475" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12475" pos:column="43">HRESULT</name></type> ( <name pos:line="12475" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12475" pos:column="71">*</type:modifier><name pos:line="12475" pos:column="72">get_ItemOperations</name> )<parameter_list pos:line="12475" pos:column="92">( 
            <param><decl><type><name pos:line="12476" pos:column="13">DTE2</name> <type:modifier pos:line="12476" pos:column="18">*</type:modifier></type> <name pos:line="12476" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12477" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12477" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12477" pos:column="54">ItemOperations</name> <type:modifier pos:line="12477" pos:column="69">*</type:modifier><type:modifier pos:line="12477" pos:column="70">*</type:modifier></type><name pos:line="12477" pos:column="71">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12479" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12479" pos:column="43">HRESULT</name></type> ( <name pos:line="12479" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12479" pos:column="71">*</type:modifier><name pos:line="12479" pos:column="72">get_UndoContext</name> )<parameter_list pos:line="12479" pos:column="89">( 
            <param><decl><type><name pos:line="12480" pos:column="13">DTE2</name> <type:modifier pos:line="12480" pos:column="18">*</type:modifier></type> <name pos:line="12480" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12481" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12481" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12481" pos:column="54">UndoContext</name> <type:modifier pos:line="12481" pos:column="66">*</type:modifier><type:modifier pos:line="12481" pos:column="67">*</type:modifier></type><name pos:line="12481" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12483" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12483" pos:column="43">HRESULT</name></type> ( <name pos:line="12483" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12483" pos:column="71">*</type:modifier><name pos:line="12483" pos:column="72">get_Macros</name> )<parameter_list pos:line="12483" pos:column="84">( 
            <param><decl><type><name pos:line="12484" pos:column="13">DTE2</name> <type:modifier pos:line="12484" pos:column="18">*</type:modifier></type> <name pos:line="12484" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12485" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12485" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12485" pos:column="54">Macros</name> <type:modifier pos:line="12485" pos:column="61">*</type:modifier><type:modifier pos:line="12485" pos:column="62">*</type:modifier></type><name pos:line="12485" pos:column="63">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12487" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12487" pos:column="43">HRESULT</name></type> ( <name pos:line="12487" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12487" pos:column="71">*</type:modifier><name pos:line="12487" pos:column="72">get_ActiveSolutionProjects</name> )<parameter_list pos:line="12487" pos:column="100">( 
            <param><decl><type><name pos:line="12488" pos:column="13">DTE2</name> <type:modifier pos:line="12488" pos:column="18">*</type:modifier></type> <name pos:line="12488" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12489" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12489" pos:column="33">__RPC__out</name> <name pos:line="12489" pos:column="44">VARIANT</name> <type:modifier pos:line="12489" pos:column="52">*</type:modifier></type><name pos:line="12489" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12491" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12491" pos:column="43">HRESULT</name></type> ( <name pos:line="12491" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12491" pos:column="71">*</type:modifier><name pos:line="12491" pos:column="72">get_MacrosIDE</name> )<parameter_list pos:line="12491" pos:column="87">( 
            <param><decl><type><name pos:line="12492" pos:column="13">DTE2</name> <type:modifier pos:line="12492" pos:column="18">*</type:modifier></type> <name pos:line="12492" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12493" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12493" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="12493" pos:column="54">*</type:modifier><type:modifier pos:line="12493" pos:column="55">*</type:modifier></type><name pos:line="12493" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12495" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12495" pos:column="43">HRESULT</name></type> ( <name pos:line="12495" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12495" pos:column="71">*</type:modifier><name pos:line="12495" pos:column="72">get_RegistryRoot</name> )<parameter_list pos:line="12495" pos:column="90">( 
            <param><decl><type><name pos:line="12496" pos:column="13">DTE2</name> <type:modifier pos:line="12496" pos:column="18">*</type:modifier></type> <name pos:line="12496" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12497" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12497" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12497" pos:column="54">BSTR</name> <type:modifier pos:line="12497" pos:column="59">*</type:modifier></type><name pos:line="12497" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12499" pos:column="9">/* [id][propget][hidden][funcdescattr] */</comment> <function_decl><type><name pos:line="12499" pos:column="51">HRESULT</name></type> ( <name pos:line="12499" pos:column="61">STDMETHODCALLTYPE</name> <type:modifier pos:line="12499" pos:column="79">*</type:modifier><name pos:line="12499" pos:column="80">get_Application</name> )<parameter_list pos:line="12499" pos:column="97">( 
            <param><decl><type><name pos:line="12500" pos:column="13">DTE2</name> <type:modifier pos:line="12500" pos:column="18">*</type:modifier></type> <name pos:line="12500" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12501" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12501" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="12501" pos:column="54">*</type:modifier><type:modifier pos:line="12501" pos:column="55">*</type:modifier></type><name pos:line="12501" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12503" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12503" pos:column="43">HRESULT</name></type> ( <name pos:line="12503" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12503" pos:column="71">*</type:modifier><name pos:line="12503" pos:column="72">get_ContextAttributes</name> )<parameter_list pos:line="12503" pos:column="95">( 
            <param><decl><type><name pos:line="12504" pos:column="13">DTE2</name> <type:modifier pos:line="12504" pos:column="18">*</type:modifier></type> <name pos:line="12504" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12505" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12505" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12505" pos:column="54">ContextAttributes</name> <type:modifier pos:line="12505" pos:column="72">*</type:modifier><type:modifier pos:line="12505" pos:column="73">*</type:modifier></type><name pos:line="12505" pos:column="74">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12507" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12507" pos:column="43">HRESULT</name></type> ( <name pos:line="12507" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12507" pos:column="71">*</type:modifier><name pos:line="12507" pos:column="72">get_SourceControl</name> )<parameter_list pos:line="12507" pos:column="91">( 
            <param><decl><type><name pos:line="12508" pos:column="13">DTE2</name> <type:modifier pos:line="12508" pos:column="18">*</type:modifier></type> <name pos:line="12508" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12509" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12509" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12509" pos:column="54">SourceControl</name> <type:modifier pos:line="12509" pos:column="68">*</type:modifier><type:modifier pos:line="12509" pos:column="69">*</type:modifier></type><name pos:line="12509" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12511" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12511" pos:column="43">HRESULT</name></type> ( <name pos:line="12511" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12511" pos:column="71">*</type:modifier><name pos:line="12511" pos:column="72">get_SuppressUI</name> )<parameter_list pos:line="12511" pos:column="88">( 
            <param><decl><type><name pos:line="12512" pos:column="13">DTE2</name> <type:modifier pos:line="12512" pos:column="18">*</type:modifier></type> <name pos:line="12512" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12513" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12513" pos:column="33">__RPC__out</name> <name pos:line="12513" pos:column="44">BOOLEAN</name> <type:modifier pos:line="12513" pos:column="52">*</type:modifier></type><name pos:line="12513" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12515" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="12515" pos:column="43">HRESULT</name></type> ( <name pos:line="12515" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12515" pos:column="71">*</type:modifier><name pos:line="12515" pos:column="72">put_SuppressUI</name> )<parameter_list pos:line="12515" pos:column="88">( 
            <param><decl><type><name pos:line="12516" pos:column="13">DTE2</name> <type:modifier pos:line="12516" pos:column="18">*</type:modifier></type> <name pos:line="12516" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12517" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="12517" pos:column="37">BOOLEAN</name></type> <name pos:line="12517" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="12518" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12518" pos:column="33">__RPC__out</name> <name pos:line="12518" pos:column="44">void</name> <type:modifier pos:line="12518" pos:column="49">*</type:modifier></type><name pos:line="12518" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12520" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12520" pos:column="43">HRESULT</name></type> ( <name pos:line="12520" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12520" pos:column="71">*</type:modifier><name pos:line="12520" pos:column="72">get_Debugger</name> )<parameter_list pos:line="12520" pos:column="86">( 
            <param><decl><type><name pos:line="12521" pos:column="13">DTE2</name> <type:modifier pos:line="12521" pos:column="18">*</type:modifier></type> <name pos:line="12521" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12522" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12522" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12522" pos:column="54">Debugger</name> <type:modifier pos:line="12522" pos:column="63">*</type:modifier><type:modifier pos:line="12522" pos:column="64">*</type:modifier></type><name pos:line="12522" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12524" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="12524" pos:column="34">HRESULT</name></type> ( <name pos:line="12524" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="12524" pos:column="62">*</type:modifier><name pos:line="12524" pos:column="63">SatelliteDllPath</name> )<parameter_list pos:line="12524" pos:column="81">( 
            <param><decl><type><name pos:line="12525" pos:column="13">DTE2</name> <type:modifier pos:line="12525" pos:column="18">*</type:modifier></type> <name pos:line="12525" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12526" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="12526" pos:column="33">__RPC__in</name> <name pos:line="12526" pos:column="43">BSTR</name></type> <name pos:line="12526" pos:column="48">Path</name></decl></param>,
            <comment type="block" pos:line="12527" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="12527" pos:column="33">__RPC__in</name> <name pos:line="12527" pos:column="43">BSTR</name></type> <name pos:line="12527" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="12528" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12528" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12528" pos:column="54">BSTR</name> <type:modifier pos:line="12528" pos:column="59">*</type:modifier></type><name pos:line="12528" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12530" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="12530" pos:column="43">HRESULT</name></type> ( <name pos:line="12530" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="12530" pos:column="71">*</type:modifier><name pos:line="12530" pos:column="72">get_Edition</name> )<parameter_list pos:line="12530" pos:column="85">( 
            <param><decl><type><name pos:line="12531" pos:column="13">DTE2</name> <type:modifier pos:line="12531" pos:column="18">*</type:modifier></type> <name pos:line="12531" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12532" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12532" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12532" pos:column="54">BSTR</name> <type:modifier pos:line="12532" pos:column="59">*</type:modifier></type><name pos:line="12532" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12534" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="12534" pos:column="73">HRESULT</name></type> ( <name pos:line="12534" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="12534" pos:column="101">*</type:modifier><name pos:line="12534" pos:column="102">get_ToolWindows</name> )<parameter_list pos:line="12534" pos:column="119">( 
            <param><decl><type><name pos:line="12535" pos:column="13">DTE2</name> <type:modifier pos:line="12535" pos:column="18">*</type:modifier></type> <name pos:line="12535" pos:column="20">This</name></decl></param>,
            <comment type="block" pos:line="12536" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12536" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12536" pos:column="54">ToolWindows</name> <type:modifier pos:line="12536" pos:column="66">*</type:modifier><type:modifier pos:line="12536" pos:column="67">*</type:modifier></type><name pos:line="12536" pos:column="68">ppcbs</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12538" pos:column="9">/* [helpstring][id] */</comment> <function_decl><type><name pos:line="12538" pos:column="32">HRESULT</name></type> ( <name pos:line="12538" pos:column="42">STDMETHODCALLTYPE</name> <type:modifier pos:line="12538" pos:column="60">*</type:modifier><name pos:line="12538" pos:column="61">GetThemeColor</name> )<parameter_list pos:line="12538" pos:column="76">( 
            <param><decl><type><name pos:line="12539" pos:column="13">DTE2</name> <type:modifier pos:line="12539" pos:column="18">*</type:modifier></type> <name pos:line="12539" pos:column="20">This</name></decl></param>,
            <param><decl><type><name pos:line="12540" pos:column="13">vsThemeColors</name></type> <name pos:line="12540" pos:column="27">Element</name></decl></param>,
            <comment type="block" pos:line="12541" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12541" pos:column="33">__RPC__out</name> <comment type="block" pos:line="12541" pos:column="44">/* external definition not present */</comment> <name pos:line="12541" pos:column="82">OLE_COLOR</name> <type:modifier pos:line="12541" pos:column="92">*</type:modifier></type><name pos:line="12541" pos:column="93">pColor</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12543" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="12544" pos:column="7">DTE2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="12546" pos:column="5">interface</name></type> <name pos:line="12546" pos:column="15">DTE2</name>
    <argument_list pos:line="12547" pos:column="5">{
        <argument><expr><name pos:line="12548" pos:column="9">CONST_VTBL</name> struct <name pos:line="12548" pos:column="27">DTE2Vtbl</name> <op:operator pos:line="12548" pos:column="36">*</op:operator><name pos:line="12548" pos:column="37">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="12553" pos:column="1">#<cpp:directive pos:line="12553" pos:column="2">ifdef</cpp:directive> <name pos:line="12553" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="12556" pos:column="1">#<cpp:directive pos:line="12556" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12556" pos:column="9">DTE2_QueryInterface</name><parameter_list pos:line="12556" pos:column="28">(<param><type><name pos:line="12556" pos:column="29">This</name></type></param>,<param><type><name pos:line="12556" pos:column="34">riid</name></type></param>,<param><type><name pos:line="12556" pos:column="39">ppvObj</name></type></param>,<param><type><name pos:line="12556" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12557" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12559" pos:column="1">#<cpp:directive pos:line="12559" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12559" pos:column="9">DTE2_AddRef</name><parameter_list pos:line="12559" pos:column="20">(<param><type><name pos:line="12559" pos:column="21">This</name></type></param>,<param><type><name pos:line="12559" pos:column="26">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12560" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12562" pos:column="1">#<cpp:directive pos:line="12562" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12562" pos:column="9">DTE2_Release</name><parameter_list pos:line="12562" pos:column="21">(<param><type><name pos:line="12562" pos:column="22">This</name></type></param>,<param><type><name pos:line="12562" pos:column="27">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12563" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12565" pos:column="1">#<cpp:directive pos:line="12565" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12565" pos:column="9">DTE2_GetTypeInfoCount</name><parameter_list pos:line="12565" pos:column="30">(<param><type><name pos:line="12565" pos:column="31">This</name></type></param>,<param><type><name pos:line="12565" pos:column="36">pctinfo</name></type></param>,<param><type><name pos:line="12565" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12566" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12568" pos:column="1">#<cpp:directive pos:line="12568" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12568" pos:column="9">DTE2_GetTypeInfo</name><parameter_list pos:line="12568" pos:column="25">(<param><type><name pos:line="12568" pos:column="26">This</name></type></param>,<param><type><name pos:line="12568" pos:column="31">itinfo</name></type></param>,<param><type><name pos:line="12568" pos:column="38">lcid</name></type></param>,<param><type><name pos:line="12568" pos:column="43">pptinfo</name></type></param>,<param><type><name pos:line="12568" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12569" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12571" pos:column="1">#<cpp:directive pos:line="12571" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12571" pos:column="9">DTE2_GetIDsOfNames</name><parameter_list pos:line="12571" pos:column="27">(<param><type><name pos:line="12571" pos:column="28">This</name></type></param>,<param><type><name pos:line="12571" pos:column="33">riid</name></type></param>,<param><type><name pos:line="12571" pos:column="38">rgszNames</name></type></param>,<param><type><name pos:line="12571" pos:column="48">cNames</name></type></param>,<param><type><name pos:line="12571" pos:column="55">lcid</name></type></param>,<param><type><name pos:line="12571" pos:column="60">rgdispid</name></type></param>,<param><type><name pos:line="12571" pos:column="69">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12572" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12574" pos:column="1">#<cpp:directive pos:line="12574" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12574" pos:column="9">DTE2_Invoke</name><parameter_list pos:line="12574" pos:column="20">(<param><type><name pos:line="12574" pos:column="21">This</name></type></param>,<param><type><name pos:line="12574" pos:column="26">dispidMember</name></type></param>,<param><type><name pos:line="12574" pos:column="39">riid</name></type></param>,<param><type><name pos:line="12574" pos:column="44">lcid</name></type></param>,<param><type><name pos:line="12574" pos:column="49">wFlags</name></type></param>,<param><type><name pos:line="12574" pos:column="56">pdispparams</name></type></param>,<param><type><name pos:line="12574" pos:column="68">pvarResult</name></type></param>,<param><type><name pos:line="12574" pos:column="79">pexcepinfo</name></type></param>,<param><type><name pos:line="12574" pos:column="90">puArgErr</name></type></param>,<param><type><name pos:line="12574" pos:column="99">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12575" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12577" pos:column="1">#<cpp:directive pos:line="12577" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12577" pos:column="9">DTE2_get_Name</name><parameter_list pos:line="12577" pos:column="22">(<param><type><name pos:line="12577" pos:column="23">This</name></type></param>,<param><type><name pos:line="12577" pos:column="28">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12578" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12580" pos:column="1">#<cpp:directive pos:line="12580" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12580" pos:column="9">DTE2_get_FileName</name><parameter_list pos:line="12580" pos:column="26">(<param><type><name pos:line="12580" pos:column="27">This</name></type></param>,<param><type><name pos:line="12580" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12581" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FileName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12583" pos:column="1">#<cpp:directive pos:line="12583" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12583" pos:column="9">DTE2_get_Version</name><parameter_list pos:line="12583" pos:column="25">(<param><type><name pos:line="12583" pos:column="26">This</name></type></param>,<param><type><name pos:line="12583" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12584" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Version(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12586" pos:column="1">#<cpp:directive pos:line="12586" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12586" pos:column="9">DTE2_get_CommandBars</name><parameter_list pos:line="12586" pos:column="29">(<param><type><name pos:line="12586" pos:column="30">This</name></type></param>,<param><type><name pos:line="12586" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12587" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CommandBars(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12589" pos:column="1">#<cpp:directive pos:line="12589" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12589" pos:column="9">DTE2_get_Windows</name><parameter_list pos:line="12589" pos:column="25">(<param><type><name pos:line="12589" pos:column="26">This</name></type></param>,<param><type><name pos:line="12589" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12590" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Windows(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12592" pos:column="1">#<cpp:directive pos:line="12592" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12592" pos:column="9">DTE2_get_Events</name><parameter_list pos:line="12592" pos:column="24">(<param><type><name pos:line="12592" pos:column="25">This</name></type></param>,<param><type><name pos:line="12592" pos:column="30">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12593" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Events(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12595" pos:column="1">#<cpp:directive pos:line="12595" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12595" pos:column="9">DTE2_get_AddIns</name><parameter_list pos:line="12595" pos:column="24">(<param><type><name pos:line="12595" pos:column="25">This</name></type></param>,<param><type><name pos:line="12595" pos:column="30">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12596" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_AddIns(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12598" pos:column="1">#<cpp:directive pos:line="12598" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12598" pos:column="9">DTE2_get_MainWindow</name><parameter_list pos:line="12598" pos:column="28">(<param><type><name pos:line="12598" pos:column="29">This</name></type></param>,<param><type><name pos:line="12598" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12599" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_MainWindow(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12601" pos:column="1">#<cpp:directive pos:line="12601" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12601" pos:column="9">DTE2_get_ActiveWindow</name><parameter_list pos:line="12601" pos:column="30">(<param><type><name pos:line="12601" pos:column="31">This</name></type></param>,<param><type><name pos:line="12601" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12602" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ActiveWindow(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12604" pos:column="1">#<cpp:directive pos:line="12604" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12604" pos:column="9">DTE2_Quit</name><parameter_list pos:line="12604" pos:column="18">(<param><type><name pos:line="12604" pos:column="19">This</name></type></param>,<param><type><name pos:line="12604" pos:column="24">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12605" pos:column="5">( (This)-&gt;lpVtbl -&gt; Quit(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12607" pos:column="1">#<cpp:directive pos:line="12607" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12607" pos:column="9">DTE2_get_DisplayMode</name><parameter_list pos:line="12607" pos:column="29">(<param><type><name pos:line="12607" pos:column="30">This</name></type></param>,<param><type><name pos:line="12607" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12608" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DisplayMode(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12610" pos:column="1">#<cpp:directive pos:line="12610" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12610" pos:column="9">DTE2_put_DisplayMode</name><parameter_list pos:line="12610" pos:column="29">(<param><type><name pos:line="12610" pos:column="30">This</name></type></param>,<param><type><name pos:line="12610" pos:column="35">noname</name></type></param>,<param><type><name pos:line="12610" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12611" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_DisplayMode(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12613" pos:column="1">#<cpp:directive pos:line="12613" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12613" pos:column="9">DTE2_get_Solution</name><parameter_list pos:line="12613" pos:column="26">(<param><type><name pos:line="12613" pos:column="27">This</name></type></param>,<param><type><name pos:line="12613" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12614" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Solution(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12616" pos:column="1">#<cpp:directive pos:line="12616" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12616" pos:column="9">DTE2_get_Commands</name><parameter_list pos:line="12616" pos:column="26">(<param><type><name pos:line="12616" pos:column="27">This</name></type></param>,<param><type><name pos:line="12616" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12617" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Commands(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12619" pos:column="1">#<cpp:directive pos:line="12619" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12619" pos:column="9">DTE2_GetObject</name><parameter_list pos:line="12619" pos:column="23">(<param><type><name pos:line="12619" pos:column="24">This</name></type></param>,<param><type><name pos:line="12619" pos:column="29">Name</name></type></param>,<param><type><name pos:line="12619" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12620" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetObject(This,Name,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12622" pos:column="1">#<cpp:directive pos:line="12622" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12622" pos:column="9">DTE2_get_Properties</name><parameter_list pos:line="12622" pos:column="28">(<param><type><name pos:line="12622" pos:column="29">This</name></type></param>,<param><type><name pos:line="12622" pos:column="34">Category</name></type></param>,<param><type><name pos:line="12622" pos:column="43">Page</name></type></param>,<param><type><name pos:line="12622" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12623" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Properties(This,Category,Page,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12625" pos:column="1">#<cpp:directive pos:line="12625" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12625" pos:column="9">DTE2_get_SelectedItems</name><parameter_list pos:line="12625" pos:column="31">(<param><type><name pos:line="12625" pos:column="32">This</name></type></param>,<param><type><name pos:line="12625" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12626" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SelectedItems(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12628" pos:column="1">#<cpp:directive pos:line="12628" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12628" pos:column="9">DTE2_get_CommandLineArguments</name><parameter_list pos:line="12628" pos:column="38">(<param><type><name pos:line="12628" pos:column="39">This</name></type></param>,<param><type><name pos:line="12628" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12629" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CommandLineArguments(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12631" pos:column="1">#<cpp:directive pos:line="12631" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12631" pos:column="9">DTE2_OpenFile</name><parameter_list pos:line="12631" pos:column="22">(<param><type><name pos:line="12631" pos:column="23">This</name></type></param>,<param><type><name pos:line="12631" pos:column="28">ViewKind</name></type></param>,<param><type><name pos:line="12631" pos:column="37">FileName</name></type></param>,<param><type><name pos:line="12631" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12632" pos:column="5">( (This)-&gt;lpVtbl -&gt; OpenFile(This,ViewKind,FileName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12634" pos:column="1">#<cpp:directive pos:line="12634" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12634" pos:column="9">DTE2_get_IsOpenFile</name><parameter_list pos:line="12634" pos:column="28">(<param><type><name pos:line="12634" pos:column="29">This</name></type></param>,<param><type><name pos:line="12634" pos:column="34">ViewKind</name></type></param>,<param><type><name pos:line="12634" pos:column="43">FileName</name></type></param>,<param><type><name pos:line="12634" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12635" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsOpenFile(This,ViewKind,FileName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12637" pos:column="1">#<cpp:directive pos:line="12637" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12637" pos:column="9">DTE2_get_DTE</name><parameter_list pos:line="12637" pos:column="21">(<param><type><name pos:line="12637" pos:column="22">This</name></type></param>,<param><type><name pos:line="12637" pos:column="27">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12638" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12640" pos:column="1">#<cpp:directive pos:line="12640" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12640" pos:column="9">DTE2_get_LocaleID</name><parameter_list pos:line="12640" pos:column="26">(<param><type><name pos:line="12640" pos:column="27">This</name></type></param>,<param><type><name pos:line="12640" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12641" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_LocaleID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12643" pos:column="1">#<cpp:directive pos:line="12643" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12643" pos:column="9">DTE2_get_WindowConfigurations</name><parameter_list pos:line="12643" pos:column="38">(<param><type><name pos:line="12643" pos:column="39">This</name></type></param>,<param><type><name pos:line="12643" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12644" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_WindowConfigurations(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12646" pos:column="1">#<cpp:directive pos:line="12646" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12646" pos:column="9">DTE2_get_Documents</name><parameter_list pos:line="12646" pos:column="27">(<param><type><name pos:line="12646" pos:column="28">This</name></type></param>,<param><type><name pos:line="12646" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12647" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Documents(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12649" pos:column="1">#<cpp:directive pos:line="12649" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12649" pos:column="9">DTE2_get_ActiveDocument</name><parameter_list pos:line="12649" pos:column="32">(<param><type><name pos:line="12649" pos:column="33">This</name></type></param>,<param><type><name pos:line="12649" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12650" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ActiveDocument(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12652" pos:column="1">#<cpp:directive pos:line="12652" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12652" pos:column="9">DTE2_ExecuteCommand</name><parameter_list pos:line="12652" pos:column="28">(<param><type><name pos:line="12652" pos:column="29">This</name></type></param>,<param><type><name pos:line="12652" pos:column="34">CommandName</name></type></param>,<param><type><name pos:line="12652" pos:column="46">CommandArgs</name></type></param>,<param><type><name pos:line="12652" pos:column="58">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12653" pos:column="5">( (This)-&gt;lpVtbl -&gt; ExecuteCommand(This,CommandName,CommandArgs,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12655" pos:column="1">#<cpp:directive pos:line="12655" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12655" pos:column="9">DTE2_get_Globals</name><parameter_list pos:line="12655" pos:column="25">(<param><type><name pos:line="12655" pos:column="26">This</name></type></param>,<param><type><name pos:line="12655" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12656" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Globals(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12658" pos:column="1">#<cpp:directive pos:line="12658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12658" pos:column="9">DTE2_get_StatusBar</name><parameter_list pos:line="12658" pos:column="27">(<param><type><name pos:line="12658" pos:column="28">This</name></type></param>,<param><type><name pos:line="12658" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12659" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StatusBar(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12661" pos:column="1">#<cpp:directive pos:line="12661" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12661" pos:column="9">DTE2_get_FullName</name><parameter_list pos:line="12661" pos:column="26">(<param><type><name pos:line="12661" pos:column="27">This</name></type></param>,<param><type><name pos:line="12661" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12662" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12664" pos:column="1">#<cpp:directive pos:line="12664" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12664" pos:column="9">DTE2_get_UserControl</name><parameter_list pos:line="12664" pos:column="29">(<param><type><name pos:line="12664" pos:column="30">This</name></type></param>,<param><type><name pos:line="12664" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12665" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_UserControl(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12667" pos:column="1">#<cpp:directive pos:line="12667" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12667" pos:column="9">DTE2_put_UserControl</name><parameter_list pos:line="12667" pos:column="29">(<param><type><name pos:line="12667" pos:column="30">This</name></type></param>,<param><type><name pos:line="12667" pos:column="35">noname</name></type></param>,<param><type><name pos:line="12667" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12668" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_UserControl(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12670" pos:column="1">#<cpp:directive pos:line="12670" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12670" pos:column="9">DTE2_get_ObjectExtenders</name><parameter_list pos:line="12670" pos:column="33">(<param><type><name pos:line="12670" pos:column="34">This</name></type></param>,<param><type><name pos:line="12670" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12671" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ObjectExtenders(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12673" pos:column="1">#<cpp:directive pos:line="12673" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12673" pos:column="9">DTE2_get_Find</name><parameter_list pos:line="12673" pos:column="22">(<param><type><name pos:line="12673" pos:column="23">This</name></type></param>,<param><type><name pos:line="12673" pos:column="28">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12674" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Find(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12676" pos:column="1">#<cpp:directive pos:line="12676" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12676" pos:column="9">DTE2_get_Mode</name><parameter_list pos:line="12676" pos:column="22">(<param><type><name pos:line="12676" pos:column="23">This</name></type></param>,<param><type><name pos:line="12676" pos:column="28">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12677" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Mode(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12679" pos:column="1">#<cpp:directive pos:line="12679" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12679" pos:column="9">DTE2_LaunchWizard</name><parameter_list pos:line="12679" pos:column="26">(<param><type><name pos:line="12679" pos:column="27">This</name></type></param>,<param><type><name pos:line="12679" pos:column="32">VSZFile</name></type></param>,<param><type><name pos:line="12679" pos:column="40">ContextParams</name></type></param>,<param><type><name pos:line="12679" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12680" pos:column="5">( (This)-&gt;lpVtbl -&gt; LaunchWizard(This,VSZFile,ContextParams,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12682" pos:column="1">#<cpp:directive pos:line="12682" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12682" pos:column="9">DTE2_get_ItemOperations</name><parameter_list pos:line="12682" pos:column="32">(<param><type><name pos:line="12682" pos:column="33">This</name></type></param>,<param><type><name pos:line="12682" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12683" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ItemOperations(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12685" pos:column="1">#<cpp:directive pos:line="12685" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12685" pos:column="9">DTE2_get_UndoContext</name><parameter_list pos:line="12685" pos:column="29">(<param><type><name pos:line="12685" pos:column="30">This</name></type></param>,<param><type><name pos:line="12685" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12686" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_UndoContext(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12688" pos:column="1">#<cpp:directive pos:line="12688" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12688" pos:column="9">DTE2_get_Macros</name><parameter_list pos:line="12688" pos:column="24">(<param><type><name pos:line="12688" pos:column="25">This</name></type></param>,<param><type><name pos:line="12688" pos:column="30">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12689" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Macros(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12691" pos:column="1">#<cpp:directive pos:line="12691" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12691" pos:column="9">DTE2_get_ActiveSolutionProjects</name><parameter_list pos:line="12691" pos:column="40">(<param><type><name pos:line="12691" pos:column="41">This</name></type></param>,<param><type><name pos:line="12691" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12692" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ActiveSolutionProjects(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12694" pos:column="1">#<cpp:directive pos:line="12694" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12694" pos:column="9">DTE2_get_MacrosIDE</name><parameter_list pos:line="12694" pos:column="27">(<param><type><name pos:line="12694" pos:column="28">This</name></type></param>,<param><type><name pos:line="12694" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12695" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_MacrosIDE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12697" pos:column="1">#<cpp:directive pos:line="12697" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12697" pos:column="9">DTE2_get_RegistryRoot</name><parameter_list pos:line="12697" pos:column="30">(<param><type><name pos:line="12697" pos:column="31">This</name></type></param>,<param><type><name pos:line="12697" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12698" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_RegistryRoot(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12700" pos:column="1">#<cpp:directive pos:line="12700" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12700" pos:column="9">DTE2_get_Application</name><parameter_list pos:line="12700" pos:column="29">(<param><type><name pos:line="12700" pos:column="30">This</name></type></param>,<param><type><name pos:line="12700" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12701" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Application(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12703" pos:column="1">#<cpp:directive pos:line="12703" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12703" pos:column="9">DTE2_get_ContextAttributes</name><parameter_list pos:line="12703" pos:column="35">(<param><type><name pos:line="12703" pos:column="36">This</name></type></param>,<param><type><name pos:line="12703" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12704" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ContextAttributes(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12706" pos:column="1">#<cpp:directive pos:line="12706" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12706" pos:column="9">DTE2_get_SourceControl</name><parameter_list pos:line="12706" pos:column="31">(<param><type><name pos:line="12706" pos:column="32">This</name></type></param>,<param><type><name pos:line="12706" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12707" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SourceControl(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12709" pos:column="1">#<cpp:directive pos:line="12709" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12709" pos:column="9">DTE2_get_SuppressUI</name><parameter_list pos:line="12709" pos:column="28">(<param><type><name pos:line="12709" pos:column="29">This</name></type></param>,<param><type><name pos:line="12709" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12710" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SuppressUI(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12712" pos:column="1">#<cpp:directive pos:line="12712" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12712" pos:column="9">DTE2_put_SuppressUI</name><parameter_list pos:line="12712" pos:column="28">(<param><type><name pos:line="12712" pos:column="29">This</name></type></param>,<param><type><name pos:line="12712" pos:column="34">noname</name></type></param>,<param><type><name pos:line="12712" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12713" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_SuppressUI(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12715" pos:column="1">#<cpp:directive pos:line="12715" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12715" pos:column="9">DTE2_get_Debugger</name><parameter_list pos:line="12715" pos:column="26">(<param><type><name pos:line="12715" pos:column="27">This</name></type></param>,<param><type><name pos:line="12715" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12716" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Debugger(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12718" pos:column="1">#<cpp:directive pos:line="12718" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12718" pos:column="9">DTE2_SatelliteDllPath</name><parameter_list pos:line="12718" pos:column="30">(<param><type><name pos:line="12718" pos:column="31">This</name></type></param>,<param><type><name pos:line="12718" pos:column="36">Path</name></type></param>,<param><type><name pos:line="12718" pos:column="41">Name</name></type></param>,<param><type><name pos:line="12718" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12719" pos:column="5">( (This)-&gt;lpVtbl -&gt; SatelliteDllPath(This,Path,Name,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="12721" pos:column="1">#<cpp:directive pos:line="12721" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12721" pos:column="9">DTE2_get_Edition</name><parameter_list pos:line="12721" pos:column="25">(<param><type><name pos:line="12721" pos:column="26">This</name></type></param>,<param><type><name pos:line="12721" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12722" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Edition(This,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="12725" pos:column="1">#<cpp:directive pos:line="12725" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12725" pos:column="9">DTE2_get_ToolWindows</name><parameter_list pos:line="12725" pos:column="29">(<param><type><name pos:line="12725" pos:column="30">This</name></type></param>,<param><type><name pos:line="12725" pos:column="35">ppcbs</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12726" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ToolWindows(This,ppcbs) )</cpp:value></cpp:define> 

<cpp:define pos:line="12728" pos:column="1">#<cpp:directive pos:line="12728" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12728" pos:column="9">DTE2_GetThemeColor</name><parameter_list pos:line="12728" pos:column="27">(<param><type><name pos:line="12728" pos:column="28">This</name></type></param>,<param><type><name pos:line="12728" pos:column="33">Element</name></type></param>,<param><type><name pos:line="12728" pos:column="41">pColor</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12729" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetThemeColor(This,Element,pColor) )</cpp:value></cpp:define> 

<cpp:endif pos:line="12731" pos:column="1">#<cpp:directive pos:line="12731" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="12731" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="12734" pos:column="1">#<cpp:directive pos:line="12734" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12734" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="12739" pos:column="1">#<cpp:directive pos:line="12739" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12739" pos:column="9">/* __DTE2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="12742" pos:column="1">#<cpp:directive pos:line="12742" pos:column="2">ifndef</cpp:directive> <name pos:line="12742" pos:column="9">__WindowVisibilityEventsRoot_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="12743" pos:column="1">#<cpp:directive pos:line="12743" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12743" pos:column="9">__WindowVisibilityEventsRoot_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="12745" pos:column="1">/* interface WindowVisibilityEventsRoot */</comment>
<comment type="block" pos:line="12746" pos:column="1">/* [hidden][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="12749" pos:column="1">EXTERN_C</name> <specifier pos:line="12749" pos:column="10">const</specifier> <name pos:line="12749" pos:column="16">IID</name></type> <name pos:line="12749" pos:column="20">IID_WindowVisibilityEventsRoot</name></decl>;</decl_stmt>

<cpp:if pos:line="12751" pos:column="1">#<cpp:directive pos:line="12751" pos:column="2">if</cpp:directive> <expr><call><name pos:line="12751" pos:column="5">defined</name><argument_list pos:line="12751" pos:column="12">(<argument><expr><name pos:line="12751" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="12751" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="12751" pos:column="29">!</op:operator><call><name pos:line="12751" pos:column="30">defined</name><argument_list pos:line="12751" pos:column="37">(<argument><expr><name pos:line="12751" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="12753" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="12753" pos:column="19">(<argument pos:line="12753" pos:column="20">"C7B4BCC9-E23E-400C-8821-C85B6B31369E"</argument>)</argument_list></macro>
    <label><name pos:line="12754" pos:column="5">WindowVisibilityEventsRoot</name> :</label> <expr_stmt><expr pos:line="12754" pos:column="34">public <name pos:line="12754" pos:column="41">IDispatch</name>
    <block pos:line="12755" pos:column="5">{
    <expr pos:line="12756" pos:column="5">public<op:operator pos:line="12756" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="12757" pos:column="17">/* [hidden][propget][id] */</comment> <name pos:line="12757" pos:column="45">HRESULT</name> <name pos:line="12757" pos:column="53">__stdcall</name> <macro><name pos:line="12757" pos:column="63">get_WindowVisibilityEvents</name><argument_list pos:line="12757" pos:column="89">( 
            <comment type="block" pos:line="12758" pos:column="13">/* [in] */</comment> <argument pos:line="12758" pos:column="24">__RPC__in <comment type="block" pos:line="12758" pos:column="34">/* external definition not present */</comment> Window *WindowFilter</argument>,
            <comment type="block" pos:line="12759" pos:column="13">/* [retval][out] */</comment> <argument pos:line="12759" pos:column="33">__RPC__deref_out_opt IDispatch **ppdisp</argument>)</argument_list></macro> <op:operator pos:line="12759" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="12759" pos:column="76">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="12763" pos:column="1">#<cpp:directive pos:line="12763" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="12763" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="12765" pos:column="5">typedef <type><struct pos:line="12765" pos:column="13">struct <name pos:line="12765" pos:column="20">WindowVisibilityEventsRootVtbl</name>
    <block pos:line="12766" pos:column="5">{<public type="default" pos:line="12766" pos:column="6">
        <function_decl><type><name pos:line="12767" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="12769" pos:column="9">HRESULT</name></type> ( <name pos:line="12769" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12769" pos:column="37">*</type:modifier><name pos:line="12769" pos:column="38">QueryInterface</name> )<parameter_list pos:line="12769" pos:column="54">( 
            <param><decl><type><name pos:line="12770" pos:column="13">WindowVisibilityEventsRoot</name> <type:modifier pos:line="12770" pos:column="40">*</type:modifier></type> <name pos:line="12770" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="12771" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12771" pos:column="24">__RPC__in</name> <name pos:line="12771" pos:column="34">REFIID</name></type> <name pos:line="12771" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="12772" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="12773" pos:column="13">__RPC__deref_out</name>  <name pos:line="12773" pos:column="31">void</name> <type:modifier pos:line="12773" pos:column="36">*</type:modifier><type:modifier pos:line="12773" pos:column="37">*</type:modifier></type><name pos:line="12773" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12775" pos:column="9">ULONG</name></type> ( <name pos:line="12775" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12775" pos:column="35">*</type:modifier><name pos:line="12775" pos:column="36">AddRef</name> )<parameter_list pos:line="12775" pos:column="44">( 
            <param><decl><type><name pos:line="12776" pos:column="13">WindowVisibilityEventsRoot</name> <type:modifier pos:line="12776" pos:column="40">*</type:modifier></type> <name pos:line="12776" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12778" pos:column="9">ULONG</name></type> ( <name pos:line="12778" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12778" pos:column="35">*</type:modifier><name pos:line="12778" pos:column="36">Release</name> )<parameter_list pos:line="12778" pos:column="45">( 
            <param><decl><type><name pos:line="12779" pos:column="13">WindowVisibilityEventsRoot</name> <type:modifier pos:line="12779" pos:column="40">*</type:modifier></type> <name pos:line="12779" pos:column="42">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12781" pos:column="9">HRESULT</name></type> ( <name pos:line="12781" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12781" pos:column="37">*</type:modifier><name pos:line="12781" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="12781" pos:column="56">( 
            <param><decl><type><name pos:line="12782" pos:column="13">WindowVisibilityEventsRoot</name> <type:modifier pos:line="12782" pos:column="40">*</type:modifier></type> <name pos:line="12782" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="12783" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12783" pos:column="25">__RPC__out</name> <name pos:line="12783" pos:column="36">UINT</name> <type:modifier pos:line="12783" pos:column="41">*</type:modifier></type><name pos:line="12783" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12785" pos:column="9">HRESULT</name></type> ( <name pos:line="12785" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12785" pos:column="37">*</type:modifier><name pos:line="12785" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="12785" pos:column="51">( 
            <param><decl><type><name pos:line="12786" pos:column="13">WindowVisibilityEventsRoot</name> <type:modifier pos:line="12786" pos:column="40">*</type:modifier></type> <name pos:line="12786" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="12787" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12787" pos:column="24">UINT</name></type> <name pos:line="12787" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="12788" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12788" pos:column="24">LCID</name></type> <name pos:line="12788" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="12789" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12789" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12789" pos:column="46">ITypeInfo</name> <type:modifier pos:line="12789" pos:column="56">*</type:modifier><type:modifier pos:line="12789" pos:column="57">*</type:modifier></type><name pos:line="12789" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12791" pos:column="9">HRESULT</name> <argument_list pos:line="12791" pos:column="17">( <argument pos:line="12791" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12791" pos:column="53">(</op:operator> 
            <name pos:line="12792" pos:column="13">WindowVisibilityEventsRoot</name> <op:operator pos:line="12792" pos:column="40">*</op:operator> <name pos:line="12792" pos:column="42">This</name><op:operator pos:line="12792" pos:column="46">,</op:operator>
            <comment type="block" pos:line="12793" pos:column="13">/* [in] */</comment> <name pos:line="12793" pos:column="24">__RPC__in</name> <name pos:line="12793" pos:column="34">REFIID</name> <name pos:line="12793" pos:column="41">riid</name><op:operator pos:line="12793" pos:column="45">,</op:operator>
            <comment type="block" pos:line="12794" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="12794" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="12794" pos:column="54">(<argument pos:line="12794" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="12794" pos:column="63">LPOLESTR</name> <op:operator pos:line="12794" pos:column="72">*</op:operator><name pos:line="12794" pos:column="73">rgszNames</name><op:operator pos:line="12794" pos:column="82">,</op:operator>
            <comment type="block" pos:line="12795" pos:column="13">/* [range][in] */</comment> <name pos:line="12795" pos:column="31">UINT</name> <name pos:line="12795" pos:column="36">cNames</name><op:operator pos:line="12795" pos:column="42">,</op:operator>
            <comment type="block" pos:line="12796" pos:column="13">/* [in] */</comment> <name pos:line="12796" pos:column="24">LCID</name> <name pos:line="12796" pos:column="29">lcid</name><op:operator pos:line="12796" pos:column="33">,</op:operator>
            <comment type="block" pos:line="12797" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="12797" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="12797" pos:column="56">(<argument pos:line="12797" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="12797" pos:column="65">DISPID</name> <op:operator pos:line="12797" pos:column="72">*</op:operator><name pos:line="12797" pos:column="73">rgDispId</name><op:operator pos:line="12797" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="12799" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="12799" pos:column="23">HRESULT</name></type> ( <name pos:line="12799" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="12799" pos:column="51">*</type:modifier><name pos:line="12799" pos:column="52">Invoke</name> )<parameter_list pos:line="12799" pos:column="60">( 
            <param><decl><type><name pos:line="12800" pos:column="13">WindowVisibilityEventsRoot</name> <type:modifier pos:line="12800" pos:column="40">*</type:modifier></type> <name pos:line="12800" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="12801" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12801" pos:column="24">DISPID</name></type> <name pos:line="12801" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="12802" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12802" pos:column="24">REFIID</name></type> <name pos:line="12802" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="12803" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12803" pos:column="24">LCID</name></type> <name pos:line="12803" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="12804" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12804" pos:column="24">WORD</name></type> <name pos:line="12804" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="12805" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="12805" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="12805" pos:column="40">*</type:modifier></type><name pos:line="12805" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="12806" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12806" pos:column="25">VARIANT</name> <type:modifier pos:line="12806" pos:column="33">*</type:modifier></type><name pos:line="12806" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="12807" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12807" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="12807" pos:column="35">*</type:modifier></type><name pos:line="12807" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="12808" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12808" pos:column="25">UINT</name> <type:modifier pos:line="12808" pos:column="30">*</type:modifier></type><name pos:line="12808" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="12810" pos:column="9">/* [hidden][propget][id] */</comment> <function_decl><type><name pos:line="12810" pos:column="37">HRESULT</name></type> ( <name pos:line="12810" pos:column="47">__stdcall</name> <type:modifier pos:line="12810" pos:column="57">*</type:modifier><name pos:line="12810" pos:column="58">get_WindowVisibilityEvents</name> )<parameter_list pos:line="12810" pos:column="86">( 
            <param><decl><type><name pos:line="12811" pos:column="13">WindowVisibilityEventsRoot</name> <type:modifier pos:line="12811" pos:column="40">*</type:modifier></type> <name pos:line="12811" pos:column="42">This</name></decl></param>,
            <comment type="block" pos:line="12812" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12812" pos:column="24">__RPC__in</name> <comment type="block" pos:line="12812" pos:column="34">/* external definition not present */</comment> <name pos:line="12812" pos:column="72">Window</name> <type:modifier pos:line="12812" pos:column="79">*</type:modifier></type><name pos:line="12812" pos:column="80">WindowFilter</name></decl></param>,
            <comment type="block" pos:line="12813" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="12813" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="12813" pos:column="54">IDispatch</name> <type:modifier pos:line="12813" pos:column="64">*</type:modifier><type:modifier pos:line="12813" pos:column="65">*</type:modifier></type><name pos:line="12813" pos:column="66">ppdisp</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12815" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="12816" pos:column="7">WindowVisibilityEventsRootVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="12818" pos:column="5">interface</name></type> <name pos:line="12818" pos:column="15">WindowVisibilityEventsRoot</name>
    <argument_list pos:line="12819" pos:column="5">{
        <argument><expr><name pos:line="12820" pos:column="9">CONST_VTBL</name> struct <name pos:line="12820" pos:column="27">WindowVisibilityEventsRootVtbl</name> <op:operator pos:line="12820" pos:column="58">*</op:operator><name pos:line="12820" pos:column="59">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="12825" pos:column="1">#<cpp:directive pos:line="12825" pos:column="2">ifdef</cpp:directive> <name pos:line="12825" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="12828" pos:column="1">#<cpp:directive pos:line="12828" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12828" pos:column="9">WindowVisibilityEventsRoot_QueryInterface</name><parameter_list pos:line="12828" pos:column="50">(<param><type><name pos:line="12828" pos:column="51">This</name></type></param>,<param><type><name pos:line="12828" pos:column="56">riid</name></type></param>,<param><type><name pos:line="12828" pos:column="61">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12829" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="12831" pos:column="1">#<cpp:directive pos:line="12831" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12831" pos:column="9">WindowVisibilityEventsRoot_AddRef</name><parameter_list pos:line="12831" pos:column="42">(<param><type><name pos:line="12831" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12832" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12834" pos:column="1">#<cpp:directive pos:line="12834" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12834" pos:column="9">WindowVisibilityEventsRoot_Release</name><parameter_list pos:line="12834" pos:column="43">(<param><type><name pos:line="12834" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12835" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="12838" pos:column="1">#<cpp:directive pos:line="12838" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12838" pos:column="9">WindowVisibilityEventsRoot_GetTypeInfoCount</name><parameter_list pos:line="12838" pos:column="52">(<param><type><name pos:line="12838" pos:column="53">This</name></type></param>,<param><type><name pos:line="12838" pos:column="58">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12839" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="12841" pos:column="1">#<cpp:directive pos:line="12841" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12841" pos:column="9">WindowVisibilityEventsRoot_GetTypeInfo</name><parameter_list pos:line="12841" pos:column="47">(<param><type><name pos:line="12841" pos:column="48">This</name></type></param>,<param><type><name pos:line="12841" pos:column="53">iTInfo</name></type></param>,<param><type><name pos:line="12841" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="12841" pos:column="65">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12842" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="12844" pos:column="1">#<cpp:directive pos:line="12844" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12844" pos:column="9">WindowVisibilityEventsRoot_GetIDsOfNames</name><parameter_list pos:line="12844" pos:column="49">(<param><type><name pos:line="12844" pos:column="50">This</name></type></param>,<param><type><name pos:line="12844" pos:column="55">riid</name></type></param>,<param><type><name pos:line="12844" pos:column="60">rgszNames</name></type></param>,<param><type><name pos:line="12844" pos:column="70">cNames</name></type></param>,<param><type><name pos:line="12844" pos:column="77">lcid</name></type></param>,<param><type><name pos:line="12844" pos:column="82">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12845" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="12847" pos:column="1">#<cpp:directive pos:line="12847" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12847" pos:column="9">WindowVisibilityEventsRoot_Invoke</name><parameter_list pos:line="12847" pos:column="42">(<param><type><name pos:line="12847" pos:column="43">This</name></type></param>,<param><type><name pos:line="12847" pos:column="48">dispIdMember</name></type></param>,<param><type><name pos:line="12847" pos:column="61">riid</name></type></param>,<param><type><name pos:line="12847" pos:column="66">lcid</name></type></param>,<param><type><name pos:line="12847" pos:column="71">wFlags</name></type></param>,<param><type><name pos:line="12847" pos:column="78">pDispParams</name></type></param>,<param><type><name pos:line="12847" pos:column="90">pVarResult</name></type></param>,<param><type><name pos:line="12847" pos:column="101">pExcepInfo</name></type></param>,<param><type><name pos:line="12847" pos:column="112">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12848" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="12851" pos:column="1">#<cpp:directive pos:line="12851" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12851" pos:column="9">WindowVisibilityEventsRoot_get_WindowVisibilityEvents</name><parameter_list pos:line="12851" pos:column="62">(<param><type><name pos:line="12851" pos:column="63">This</name></type></param>,<param><type><name pos:line="12851" pos:column="68">WindowFilter</name></type></param>,<param><type><name pos:line="12851" pos:column="81">ppdisp</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12852" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_WindowVisibilityEvents(This,WindowFilter,ppdisp) )</cpp:value></cpp:define> 

<cpp:endif pos:line="12854" pos:column="1">#<cpp:directive pos:line="12854" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="12854" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="12857" pos:column="1">#<cpp:directive pos:line="12857" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12857" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="12862" pos:column="1">#<cpp:directive pos:line="12862" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12862" pos:column="9">/* __WindowVisibilityEventsRoot_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="12865" pos:column="1">#<cpp:directive pos:line="12865" pos:column="2">ifndef</cpp:directive> <name pos:line="12865" pos:column="9">___WindowVisibilityEvents_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="12866" pos:column="1">#<cpp:directive pos:line="12866" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12866" pos:column="9">___WindowVisibilityEvents_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="12868" pos:column="1">/* interface _WindowVisibilityEvents */</comment>
<comment type="block" pos:line="12869" pos:column="1">/* [helpstring][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="12872" pos:column="1">EXTERN_C</name> <specifier pos:line="12872" pos:column="10">const</specifier> <name pos:line="12872" pos:column="16">IID</name></type> <name pos:line="12872" pos:column="20">IID__WindowVisibilityEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="12874" pos:column="1">#<cpp:directive pos:line="12874" pos:column="2">if</cpp:directive> <expr><call><name pos:line="12874" pos:column="5">defined</name><argument_list pos:line="12874" pos:column="12">(<argument><expr><name pos:line="12874" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="12874" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="12874" pos:column="29">!</op:operator><call><name pos:line="12874" pos:column="30">defined</name><argument_list pos:line="12874" pos:column="37">(<argument><expr><name pos:line="12874" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="12876" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="12876" pos:column="19">(<argument pos:line="12876" pos:column="20">"84DE07BC-43A2-4275-BCF9-D207D20E49ED"</argument>)</argument_list></macro>
    <label><name pos:line="12877" pos:column="5">_WindowVisibilityEvents</name> :</label> <expr_stmt><expr pos:line="12877" pos:column="31">public <name pos:line="12877" pos:column="38">IDispatch</name>
    <block pos:line="12878" pos:column="5">{
    <expr pos:line="12879" pos:column="5">public<op:operator pos:line="12879" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="12882" pos:column="1">#<cpp:directive pos:line="12882" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="12882" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="12884" pos:column="5">typedef <type><struct pos:line="12884" pos:column="13">struct <name pos:line="12884" pos:column="20">_WindowVisibilityEventsVtbl</name>
    <block pos:line="12885" pos:column="5">{<public type="default" pos:line="12885" pos:column="6">
        <function_decl><type><name pos:line="12886" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="12888" pos:column="9">HRESULT</name></type> ( <name pos:line="12888" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12888" pos:column="37">*</type:modifier><name pos:line="12888" pos:column="38">QueryInterface</name> )<parameter_list pos:line="12888" pos:column="54">( 
            <param><decl><type><name pos:line="12889" pos:column="13">_WindowVisibilityEvents</name> <type:modifier pos:line="12889" pos:column="37">*</type:modifier></type> <name pos:line="12889" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="12890" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12890" pos:column="24">__RPC__in</name> <name pos:line="12890" pos:column="34">REFIID</name></type> <name pos:line="12890" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="12891" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="12892" pos:column="13">__RPC__deref_out</name>  <name pos:line="12892" pos:column="31">void</name> <type:modifier pos:line="12892" pos:column="36">*</type:modifier><type:modifier pos:line="12892" pos:column="37">*</type:modifier></type><name pos:line="12892" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12894" pos:column="9">ULONG</name></type> ( <name pos:line="12894" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12894" pos:column="35">*</type:modifier><name pos:line="12894" pos:column="36">AddRef</name> )<parameter_list pos:line="12894" pos:column="44">( 
            <param><decl><type><name pos:line="12895" pos:column="13">_WindowVisibilityEvents</name> <type:modifier pos:line="12895" pos:column="37">*</type:modifier></type> <name pos:line="12895" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12897" pos:column="9">ULONG</name></type> ( <name pos:line="12897" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="12897" pos:column="35">*</type:modifier><name pos:line="12897" pos:column="36">Release</name> )<parameter_list pos:line="12897" pos:column="45">( 
            <param><decl><type><name pos:line="12898" pos:column="13">_WindowVisibilityEvents</name> <type:modifier pos:line="12898" pos:column="37">*</type:modifier></type> <name pos:line="12898" pos:column="39">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12900" pos:column="9">HRESULT</name></type> ( <name pos:line="12900" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12900" pos:column="37">*</type:modifier><name pos:line="12900" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="12900" pos:column="56">( 
            <param><decl><type><name pos:line="12901" pos:column="13">_WindowVisibilityEvents</name> <type:modifier pos:line="12901" pos:column="37">*</type:modifier></type> <name pos:line="12901" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="12902" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12902" pos:column="25">__RPC__out</name> <name pos:line="12902" pos:column="36">UINT</name> <type:modifier pos:line="12902" pos:column="41">*</type:modifier></type><name pos:line="12902" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="12904" pos:column="9">HRESULT</name></type> ( <name pos:line="12904" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12904" pos:column="37">*</type:modifier><name pos:line="12904" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="12904" pos:column="51">( 
            <param><decl><type><name pos:line="12905" pos:column="13">_WindowVisibilityEvents</name> <type:modifier pos:line="12905" pos:column="37">*</type:modifier></type> <name pos:line="12905" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="12906" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12906" pos:column="24">UINT</name></type> <name pos:line="12906" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="12907" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12907" pos:column="24">LCID</name></type> <name pos:line="12907" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="12908" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12908" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="12908" pos:column="46">ITypeInfo</name> <type:modifier pos:line="12908" pos:column="56">*</type:modifier><type:modifier pos:line="12908" pos:column="57">*</type:modifier></type><name pos:line="12908" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12910" pos:column="9">HRESULT</name> <argument_list pos:line="12910" pos:column="17">( <argument pos:line="12910" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="12910" pos:column="53">(</op:operator> 
            <name pos:line="12911" pos:column="13">_WindowVisibilityEvents</name> <op:operator pos:line="12911" pos:column="37">*</op:operator> <name pos:line="12911" pos:column="39">This</name><op:operator pos:line="12911" pos:column="43">,</op:operator>
            <comment type="block" pos:line="12912" pos:column="13">/* [in] */</comment> <name pos:line="12912" pos:column="24">__RPC__in</name> <name pos:line="12912" pos:column="34">REFIID</name> <name pos:line="12912" pos:column="41">riid</name><op:operator pos:line="12912" pos:column="45">,</op:operator>
            <comment type="block" pos:line="12913" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="12913" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="12913" pos:column="54">(<argument pos:line="12913" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="12913" pos:column="63">LPOLESTR</name> <op:operator pos:line="12913" pos:column="72">*</op:operator><name pos:line="12913" pos:column="73">rgszNames</name><op:operator pos:line="12913" pos:column="82">,</op:operator>
            <comment type="block" pos:line="12914" pos:column="13">/* [range][in] */</comment> <name pos:line="12914" pos:column="31">UINT</name> <name pos:line="12914" pos:column="36">cNames</name><op:operator pos:line="12914" pos:column="42">,</op:operator>
            <comment type="block" pos:line="12915" pos:column="13">/* [in] */</comment> <name pos:line="12915" pos:column="24">LCID</name> <name pos:line="12915" pos:column="29">lcid</name><op:operator pos:line="12915" pos:column="33">,</op:operator>
            <comment type="block" pos:line="12916" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="12916" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="12916" pos:column="56">(<argument pos:line="12916" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="12916" pos:column="65">DISPID</name> <op:operator pos:line="12916" pos:column="72">*</op:operator><name pos:line="12916" pos:column="73">rgDispId</name><op:operator pos:line="12916" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="12918" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="12918" pos:column="23">HRESULT</name></type> ( <name pos:line="12918" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="12918" pos:column="51">*</type:modifier><name pos:line="12918" pos:column="52">Invoke</name> )<parameter_list pos:line="12918" pos:column="60">( 
            <param><decl><type><name pos:line="12919" pos:column="13">_WindowVisibilityEvents</name> <type:modifier pos:line="12919" pos:column="37">*</type:modifier></type> <name pos:line="12919" pos:column="39">This</name></decl></param>,
            <comment type="block" pos:line="12920" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12920" pos:column="24">DISPID</name></type> <name pos:line="12920" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="12921" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12921" pos:column="24">REFIID</name></type> <name pos:line="12921" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="12922" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12922" pos:column="24">LCID</name></type> <name pos:line="12922" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="12923" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="12923" pos:column="24">WORD</name></type> <name pos:line="12923" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="12924" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="12924" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="12924" pos:column="40">*</type:modifier></type><name pos:line="12924" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="12925" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12925" pos:column="25">VARIANT</name> <type:modifier pos:line="12925" pos:column="33">*</type:modifier></type><name pos:line="12925" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="12926" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12926" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="12926" pos:column="35">*</type:modifier></type><name pos:line="12926" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="12927" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="12927" pos:column="25">UINT</name> <type:modifier pos:line="12927" pos:column="30">*</type:modifier></type><name pos:line="12927" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="12929" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="12930" pos:column="7">_WindowVisibilityEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="12932" pos:column="5">interface</name></type> <name pos:line="12932" pos:column="15">_WindowVisibilityEvents</name>
    <argument_list pos:line="12933" pos:column="5">{
        <argument><expr><name pos:line="12934" pos:column="9">CONST_VTBL</name> struct <name pos:line="12934" pos:column="27">_WindowVisibilityEventsVtbl</name> <op:operator pos:line="12934" pos:column="55">*</op:operator><name pos:line="12934" pos:column="56">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="12939" pos:column="1">#<cpp:directive pos:line="12939" pos:column="2">ifdef</cpp:directive> <name pos:line="12939" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="12942" pos:column="1">#<cpp:directive pos:line="12942" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12942" pos:column="9">_WindowVisibilityEvents_QueryInterface</name><parameter_list pos:line="12942" pos:column="47">(<param><type><name pos:line="12942" pos:column="48">This</name></type></param>,<param><type><name pos:line="12942" pos:column="53">riid</name></type></param>,<param><type><name pos:line="12942" pos:column="58">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12943" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="12945" pos:column="1">#<cpp:directive pos:line="12945" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12945" pos:column="9">_WindowVisibilityEvents_AddRef</name><parameter_list pos:line="12945" pos:column="39">(<param><type><name pos:line="12945" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12946" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="12948" pos:column="1">#<cpp:directive pos:line="12948" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12948" pos:column="9">_WindowVisibilityEvents_Release</name><parameter_list pos:line="12948" pos:column="40">(<param><type><name pos:line="12948" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12949" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="12952" pos:column="1">#<cpp:directive pos:line="12952" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12952" pos:column="9">_WindowVisibilityEvents_GetTypeInfoCount</name><parameter_list pos:line="12952" pos:column="49">(<param><type><name pos:line="12952" pos:column="50">This</name></type></param>,<param><type><name pos:line="12952" pos:column="55">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12953" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="12955" pos:column="1">#<cpp:directive pos:line="12955" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12955" pos:column="9">_WindowVisibilityEvents_GetTypeInfo</name><parameter_list pos:line="12955" pos:column="44">(<param><type><name pos:line="12955" pos:column="45">This</name></type></param>,<param><type><name pos:line="12955" pos:column="50">iTInfo</name></type></param>,<param><type><name pos:line="12955" pos:column="57">lcid</name></type></param>,<param><type><name pos:line="12955" pos:column="62">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12956" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="12958" pos:column="1">#<cpp:directive pos:line="12958" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12958" pos:column="9">_WindowVisibilityEvents_GetIDsOfNames</name><parameter_list pos:line="12958" pos:column="46">(<param><type><name pos:line="12958" pos:column="47">This</name></type></param>,<param><type><name pos:line="12958" pos:column="52">riid</name></type></param>,<param><type><name pos:line="12958" pos:column="57">rgszNames</name></type></param>,<param><type><name pos:line="12958" pos:column="67">cNames</name></type></param>,<param><type><name pos:line="12958" pos:column="74">lcid</name></type></param>,<param><type><name pos:line="12958" pos:column="79">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12959" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="12961" pos:column="1">#<cpp:directive pos:line="12961" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12961" pos:column="9">_WindowVisibilityEvents_Invoke</name><parameter_list pos:line="12961" pos:column="39">(<param><type><name pos:line="12961" pos:column="40">This</name></type></param>,<param><type><name pos:line="12961" pos:column="45">dispIdMember</name></type></param>,<param><type><name pos:line="12961" pos:column="58">riid</name></type></param>,<param><type><name pos:line="12961" pos:column="63">lcid</name></type></param>,<param><type><name pos:line="12961" pos:column="68">wFlags</name></type></param>,<param><type><name pos:line="12961" pos:column="75">pDispParams</name></type></param>,<param><type><name pos:line="12961" pos:column="87">pVarResult</name></type></param>,<param><type><name pos:line="12961" pos:column="98">pExcepInfo</name></type></param>,<param><type><name pos:line="12961" pos:column="109">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="12962" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:endif pos:line="12965" pos:column="1">#<cpp:directive pos:line="12965" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="12965" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="12968" pos:column="1">#<cpp:directive pos:line="12968" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12968" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="12973" pos:column="1">#<cpp:directive pos:line="12973" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="12973" pos:column="9">/* ___WindowVisibilityEvents_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="12976" pos:column="1">#<cpp:directive pos:line="12976" pos:column="2">ifndef</cpp:directive> <name pos:line="12976" pos:column="9">___dispWindowVisibilityEvents_DISPINTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="12977" pos:column="1">#<cpp:directive pos:line="12977" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12977" pos:column="9">___dispWindowVisibilityEvents_DISPINTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="12979" pos:column="1">/* dispinterface _dispWindowVisibilityEvents */</comment>
<comment type="block" pos:line="12980" pos:column="1">/* [uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="12983" pos:column="1">EXTERN_C</name> <specifier pos:line="12983" pos:column="10">const</specifier> <name pos:line="12983" pos:column="16">IID</name></type> <name pos:line="12983" pos:column="20">DIID__dispWindowVisibilityEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="12985" pos:column="1">#<cpp:directive pos:line="12985" pos:column="2">if</cpp:directive> <expr><call><name pos:line="12985" pos:column="5">defined</name><argument_list pos:line="12985" pos:column="12">(<argument><expr><name pos:line="12985" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="12985" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="12985" pos:column="29">!</op:operator><call><name pos:line="12985" pos:column="30">defined</name><argument_list pos:line="12985" pos:column="37">(<argument><expr><name pos:line="12985" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <macro><name pos:line="12987" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="12987" pos:column="19">(<argument pos:line="12987" pos:column="20">"94259E4B-A44A-4B77-B18F-F2CC9A601D03"</argument>)</argument_list></macro>
    <label><name pos:line="12988" pos:column="5">_dispWindowVisibilityEvents</name> :</label> <expr_stmt><expr pos:line="12988" pos:column="35">public <name pos:line="12988" pos:column="42">IDispatch</name>
    <block pos:line="12989" pos:column="5">{
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="12992" pos:column="1">#<cpp:directive pos:line="12992" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="12992" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="12994" pos:column="5">typedef <type><struct pos:line="12994" pos:column="13">struct <name pos:line="12994" pos:column="20">_dispWindowVisibilityEventsVtbl</name>
    <block pos:line="12995" pos:column="5">{<public type="default" pos:line="12995" pos:column="6">
        <function_decl><type><name pos:line="12996" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="12998" pos:column="9">HRESULT</name></type> ( <name pos:line="12998" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="12998" pos:column="37">*</type:modifier><name pos:line="12998" pos:column="38">QueryInterface</name> )<parameter_list pos:line="12998" pos:column="54">( 
            <param><decl><type><name pos:line="12999" pos:column="13">_dispWindowVisibilityEvents</name> <type:modifier pos:line="12999" pos:column="41">*</type:modifier></type> <name pos:line="12999" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="13000" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13000" pos:column="24">__RPC__in</name> <name pos:line="13000" pos:column="34">REFIID</name></type> <name pos:line="13000" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="13001" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="13002" pos:column="13">__RPC__deref_out</name>  <name pos:line="13002" pos:column="31">void</name> <type:modifier pos:line="13002" pos:column="36">*</type:modifier><type:modifier pos:line="13002" pos:column="37">*</type:modifier></type><name pos:line="13002" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13004" pos:column="9">ULONG</name></type> ( <name pos:line="13004" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13004" pos:column="35">*</type:modifier><name pos:line="13004" pos:column="36">AddRef</name> )<parameter_list pos:line="13004" pos:column="44">( 
            <param><decl><type><name pos:line="13005" pos:column="13">_dispWindowVisibilityEvents</name> <type:modifier pos:line="13005" pos:column="41">*</type:modifier></type> <name pos:line="13005" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13007" pos:column="9">ULONG</name></type> ( <name pos:line="13007" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13007" pos:column="35">*</type:modifier><name pos:line="13007" pos:column="36">Release</name> )<parameter_list pos:line="13007" pos:column="45">( 
            <param><decl><type><name pos:line="13008" pos:column="13">_dispWindowVisibilityEvents</name> <type:modifier pos:line="13008" pos:column="41">*</type:modifier></type> <name pos:line="13008" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13010" pos:column="9">HRESULT</name></type> ( <name pos:line="13010" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13010" pos:column="37">*</type:modifier><name pos:line="13010" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="13010" pos:column="56">( 
            <param><decl><type><name pos:line="13011" pos:column="13">_dispWindowVisibilityEvents</name> <type:modifier pos:line="13011" pos:column="41">*</type:modifier></type> <name pos:line="13011" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="13012" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13012" pos:column="25">__RPC__out</name> <name pos:line="13012" pos:column="36">UINT</name> <type:modifier pos:line="13012" pos:column="41">*</type:modifier></type><name pos:line="13012" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13014" pos:column="9">HRESULT</name></type> ( <name pos:line="13014" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13014" pos:column="37">*</type:modifier><name pos:line="13014" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="13014" pos:column="51">( 
            <param><decl><type><name pos:line="13015" pos:column="13">_dispWindowVisibilityEvents</name> <type:modifier pos:line="13015" pos:column="41">*</type:modifier></type> <name pos:line="13015" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="13016" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13016" pos:column="24">UINT</name></type> <name pos:line="13016" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="13017" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13017" pos:column="24">LCID</name></type> <name pos:line="13017" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="13018" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13018" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13018" pos:column="46">ITypeInfo</name> <type:modifier pos:line="13018" pos:column="56">*</type:modifier><type:modifier pos:line="13018" pos:column="57">*</type:modifier></type><name pos:line="13018" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13020" pos:column="9">HRESULT</name> <argument_list pos:line="13020" pos:column="17">( <argument pos:line="13020" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="13020" pos:column="53">(</op:operator> 
            <name pos:line="13021" pos:column="13">_dispWindowVisibilityEvents</name> <op:operator pos:line="13021" pos:column="41">*</op:operator> <name pos:line="13021" pos:column="43">This</name><op:operator pos:line="13021" pos:column="47">,</op:operator>
            <comment type="block" pos:line="13022" pos:column="13">/* [in] */</comment> <name pos:line="13022" pos:column="24">__RPC__in</name> <name pos:line="13022" pos:column="34">REFIID</name> <name pos:line="13022" pos:column="41">riid</name><op:operator pos:line="13022" pos:column="45">,</op:operator>
            <comment type="block" pos:line="13023" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="13023" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="13023" pos:column="54">(<argument pos:line="13023" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="13023" pos:column="63">LPOLESTR</name> <op:operator pos:line="13023" pos:column="72">*</op:operator><name pos:line="13023" pos:column="73">rgszNames</name><op:operator pos:line="13023" pos:column="82">,</op:operator>
            <comment type="block" pos:line="13024" pos:column="13">/* [range][in] */</comment> <name pos:line="13024" pos:column="31">UINT</name> <name pos:line="13024" pos:column="36">cNames</name><op:operator pos:line="13024" pos:column="42">,</op:operator>
            <comment type="block" pos:line="13025" pos:column="13">/* [in] */</comment> <name pos:line="13025" pos:column="24">LCID</name> <name pos:line="13025" pos:column="29">lcid</name><op:operator pos:line="13025" pos:column="33">,</op:operator>
            <comment type="block" pos:line="13026" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="13026" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="13026" pos:column="56">(<argument pos:line="13026" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="13026" pos:column="65">DISPID</name> <op:operator pos:line="13026" pos:column="72">*</op:operator><name pos:line="13026" pos:column="73">rgDispId</name><op:operator pos:line="13026" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="13028" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="13028" pos:column="23">HRESULT</name></type> ( <name pos:line="13028" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="13028" pos:column="51">*</type:modifier><name pos:line="13028" pos:column="52">Invoke</name> )<parameter_list pos:line="13028" pos:column="60">( 
            <param><decl><type><name pos:line="13029" pos:column="13">_dispWindowVisibilityEvents</name> <type:modifier pos:line="13029" pos:column="41">*</type:modifier></type> <name pos:line="13029" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="13030" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13030" pos:column="24">DISPID</name></type> <name pos:line="13030" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="13031" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13031" pos:column="24">REFIID</name></type> <name pos:line="13031" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="13032" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13032" pos:column="24">LCID</name></type> <name pos:line="13032" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="13033" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13033" pos:column="24">WORD</name></type> <name pos:line="13033" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="13034" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="13034" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="13034" pos:column="40">*</type:modifier></type><name pos:line="13034" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="13035" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13035" pos:column="25">VARIANT</name> <type:modifier pos:line="13035" pos:column="33">*</type:modifier></type><name pos:line="13035" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="13036" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13036" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="13036" pos:column="35">*</type:modifier></type><name pos:line="13036" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="13037" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13037" pos:column="25">UINT</name> <type:modifier pos:line="13037" pos:column="30">*</type:modifier></type><name pos:line="13037" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13039" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="13040" pos:column="7">_dispWindowVisibilityEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="13042" pos:column="5">interface</name></type> <name pos:line="13042" pos:column="15">_dispWindowVisibilityEvents</name>
    <argument_list pos:line="13043" pos:column="5">{
        <argument><expr><name pos:line="13044" pos:column="9">CONST_VTBL</name> struct <name pos:line="13044" pos:column="27">_dispWindowVisibilityEventsVtbl</name> <op:operator pos:line="13044" pos:column="59">*</op:operator><name pos:line="13044" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="13049" pos:column="1">#<cpp:directive pos:line="13049" pos:column="2">ifdef</cpp:directive> <name pos:line="13049" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="13052" pos:column="1">#<cpp:directive pos:line="13052" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13052" pos:column="9">_dispWindowVisibilityEvents_QueryInterface</name><parameter_list pos:line="13052" pos:column="51">(<param><type><name pos:line="13052" pos:column="52">This</name></type></param>,<param><type><name pos:line="13052" pos:column="57">riid</name></type></param>,<param><type><name pos:line="13052" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13053" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="13055" pos:column="1">#<cpp:directive pos:line="13055" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13055" pos:column="9">_dispWindowVisibilityEvents_AddRef</name><parameter_list pos:line="13055" pos:column="43">(<param><type><name pos:line="13055" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13056" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="13058" pos:column="1">#<cpp:directive pos:line="13058" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13058" pos:column="9">_dispWindowVisibilityEvents_Release</name><parameter_list pos:line="13058" pos:column="44">(<param><type><name pos:line="13058" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13059" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="13062" pos:column="1">#<cpp:directive pos:line="13062" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13062" pos:column="9">_dispWindowVisibilityEvents_GetTypeInfoCount</name><parameter_list pos:line="13062" pos:column="53">(<param><type><name pos:line="13062" pos:column="54">This</name></type></param>,<param><type><name pos:line="13062" pos:column="59">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13063" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13065" pos:column="1">#<cpp:directive pos:line="13065" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13065" pos:column="9">_dispWindowVisibilityEvents_GetTypeInfo</name><parameter_list pos:line="13065" pos:column="48">(<param><type><name pos:line="13065" pos:column="49">This</name></type></param>,<param><type><name pos:line="13065" pos:column="54">iTInfo</name></type></param>,<param><type><name pos:line="13065" pos:column="61">lcid</name></type></param>,<param><type><name pos:line="13065" pos:column="66">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13066" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13068" pos:column="1">#<cpp:directive pos:line="13068" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13068" pos:column="9">_dispWindowVisibilityEvents_GetIDsOfNames</name><parameter_list pos:line="13068" pos:column="50">(<param><type><name pos:line="13068" pos:column="51">This</name></type></param>,<param><type><name pos:line="13068" pos:column="56">riid</name></type></param>,<param><type><name pos:line="13068" pos:column="61">rgszNames</name></type></param>,<param><type><name pos:line="13068" pos:column="71">cNames</name></type></param>,<param><type><name pos:line="13068" pos:column="78">lcid</name></type></param>,<param><type><name pos:line="13068" pos:column="83">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13069" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="13071" pos:column="1">#<cpp:directive pos:line="13071" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13071" pos:column="9">_dispWindowVisibilityEvents_Invoke</name><parameter_list pos:line="13071" pos:column="43">(<param><type><name pos:line="13071" pos:column="44">This</name></type></param>,<param><type><name pos:line="13071" pos:column="49">dispIdMember</name></type></param>,<param><type><name pos:line="13071" pos:column="62">riid</name></type></param>,<param><type><name pos:line="13071" pos:column="67">lcid</name></type></param>,<param><type><name pos:line="13071" pos:column="72">wFlags</name></type></param>,<param><type><name pos:line="13071" pos:column="79">pDispParams</name></type></param>,<param><type><name pos:line="13071" pos:column="91">pVarResult</name></type></param>,<param><type><name pos:line="13071" pos:column="102">pExcepInfo</name></type></param>,<param><type><name pos:line="13071" pos:column="113">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13072" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 

<cpp:endif pos:line="13074" pos:column="1">#<cpp:directive pos:line="13074" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="13074" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="13077" pos:column="1">#<cpp:directive pos:line="13077" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13077" pos:column="9">/* C style interface */</comment>


<cpp:endif pos:line="13080" pos:column="1">#<cpp:directive pos:line="13080" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13080" pos:column="9">/* ___dispWindowVisibilityEvents_DISPINTERFACE_DEFINED__ */</comment>


<decl_stmt><decl><type><name pos:line="13083" pos:column="1">EXTERN_C</name> <specifier pos:line="13083" pos:column="10">const</specifier> <name pos:line="13083" pos:column="16">CLSID</name></type> <name pos:line="13083" pos:column="22">CLSID_WindowVisibilityEvents</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="13085" pos:column="1">#<cpp:directive pos:line="13085" pos:column="2">ifdef</cpp:directive> <name pos:line="13085" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="13087" pos:column="1">class</type> <name pos:line="13087" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="13087" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="13087" pos:column="21">"8B7E04AD-B109-4B96-8BA3-2F348813F238"</lit:literal></expr></argument>)</argument_list>
<name pos:line="13088" pos:column="1">WindowVisibilityEvents</name></decl>;</decl_stmt>
<cpp:endif pos:line="13089" pos:column="1">#<cpp:directive pos:line="13089" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:ifndef pos:line="13091" pos:column="1">#<cpp:directive pos:line="13091" pos:column="2">ifndef</cpp:directive> <name pos:line="13091" pos:column="9">___TextDocumentKeyPressEventsRoot_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="13092" pos:column="1">#<cpp:directive pos:line="13092" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13092" pos:column="9">___TextDocumentKeyPressEventsRoot_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="13094" pos:column="1">/* interface _TextDocumentKeyPressEventsRoot */</comment>
<comment type="block" pos:line="13095" pos:column="1">/* [hidden][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="13098" pos:column="1">EXTERN_C</name> <specifier pos:line="13098" pos:column="10">const</specifier> <name pos:line="13098" pos:column="16">IID</name></type> <name pos:line="13098" pos:column="20">IID__TextDocumentKeyPressEventsRoot</name></decl>;</decl_stmt>

<cpp:if pos:line="13100" pos:column="1">#<cpp:directive pos:line="13100" pos:column="2">if</cpp:directive> <expr><call><name pos:line="13100" pos:column="5">defined</name><argument_list pos:line="13100" pos:column="12">(<argument><expr><name pos:line="13100" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="13100" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="13100" pos:column="29">!</op:operator><call><name pos:line="13100" pos:column="30">defined</name><argument_list pos:line="13100" pos:column="37">(<argument><expr><name pos:line="13100" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="13102" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="13102" pos:column="19">(<argument pos:line="13102" pos:column="20">"D7EADE3F-BD19-4422-9C4C-85A02535437C"</argument>)</argument_list></macro>
    <label><name pos:line="13103" pos:column="5">_TextDocumentKeyPressEventsRoot</name> :</label> <expr_stmt><expr pos:line="13103" pos:column="39">public <name pos:line="13103" pos:column="46">IDispatch</name>
    <block pos:line="13104" pos:column="5">{
    <expr pos:line="13105" pos:column="5">public<op:operator pos:line="13105" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="13106" pos:column="17">/* [hidden][propget][id] */</comment> <name pos:line="13106" pos:column="45">HRESULT</name> <name pos:line="13106" pos:column="53">__stdcall</name> <macro><name pos:line="13106" pos:column="63">get_TextDocumentKeyPressEvents</name><argument_list pos:line="13106" pos:column="93">( 
            <comment type="block" pos:line="13107" pos:column="13">/* [in] */</comment> <argument pos:line="13107" pos:column="24">__RPC__in <comment type="block" pos:line="13107" pos:column="34">/* external definition not present */</comment> TextDocument *TextDocument</argument>,
            <comment type="block" pos:line="13108" pos:column="13">/* [retval][out] */</comment> <argument pos:line="13108" pos:column="33">__RPC__deref_out_opt IDispatch **ppdisp</argument>)</argument_list></macro> <op:operator pos:line="13108" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="13108" pos:column="76">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="13112" pos:column="1">#<cpp:directive pos:line="13112" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="13112" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="13114" pos:column="5">typedef <type><struct pos:line="13114" pos:column="13">struct <name pos:line="13114" pos:column="20">_TextDocumentKeyPressEventsRootVtbl</name>
    <block pos:line="13115" pos:column="5">{<public type="default" pos:line="13115" pos:column="6">
        <function_decl><type><name pos:line="13116" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="13118" pos:column="9">HRESULT</name></type> ( <name pos:line="13118" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13118" pos:column="37">*</type:modifier><name pos:line="13118" pos:column="38">QueryInterface</name> )<parameter_list pos:line="13118" pos:column="54">( 
            <param><decl><type><name pos:line="13119" pos:column="13">_TextDocumentKeyPressEventsRoot</name> <type:modifier pos:line="13119" pos:column="45">*</type:modifier></type> <name pos:line="13119" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="13120" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13120" pos:column="24">__RPC__in</name> <name pos:line="13120" pos:column="34">REFIID</name></type> <name pos:line="13120" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="13121" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="13122" pos:column="13">__RPC__deref_out</name>  <name pos:line="13122" pos:column="31">void</name> <type:modifier pos:line="13122" pos:column="36">*</type:modifier><type:modifier pos:line="13122" pos:column="37">*</type:modifier></type><name pos:line="13122" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13124" pos:column="9">ULONG</name></type> ( <name pos:line="13124" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13124" pos:column="35">*</type:modifier><name pos:line="13124" pos:column="36">AddRef</name> )<parameter_list pos:line="13124" pos:column="44">( 
            <param><decl><type><name pos:line="13125" pos:column="13">_TextDocumentKeyPressEventsRoot</name> <type:modifier pos:line="13125" pos:column="45">*</type:modifier></type> <name pos:line="13125" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13127" pos:column="9">ULONG</name></type> ( <name pos:line="13127" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13127" pos:column="35">*</type:modifier><name pos:line="13127" pos:column="36">Release</name> )<parameter_list pos:line="13127" pos:column="45">( 
            <param><decl><type><name pos:line="13128" pos:column="13">_TextDocumentKeyPressEventsRoot</name> <type:modifier pos:line="13128" pos:column="45">*</type:modifier></type> <name pos:line="13128" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13130" pos:column="9">HRESULT</name></type> ( <name pos:line="13130" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13130" pos:column="37">*</type:modifier><name pos:line="13130" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="13130" pos:column="56">( 
            <param><decl><type><name pos:line="13131" pos:column="13">_TextDocumentKeyPressEventsRoot</name> <type:modifier pos:line="13131" pos:column="45">*</type:modifier></type> <name pos:line="13131" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="13132" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13132" pos:column="25">__RPC__out</name> <name pos:line="13132" pos:column="36">UINT</name> <type:modifier pos:line="13132" pos:column="41">*</type:modifier></type><name pos:line="13132" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13134" pos:column="9">HRESULT</name></type> ( <name pos:line="13134" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13134" pos:column="37">*</type:modifier><name pos:line="13134" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="13134" pos:column="51">( 
            <param><decl><type><name pos:line="13135" pos:column="13">_TextDocumentKeyPressEventsRoot</name> <type:modifier pos:line="13135" pos:column="45">*</type:modifier></type> <name pos:line="13135" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="13136" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13136" pos:column="24">UINT</name></type> <name pos:line="13136" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="13137" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13137" pos:column="24">LCID</name></type> <name pos:line="13137" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="13138" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13138" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13138" pos:column="46">ITypeInfo</name> <type:modifier pos:line="13138" pos:column="56">*</type:modifier><type:modifier pos:line="13138" pos:column="57">*</type:modifier></type><name pos:line="13138" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13140" pos:column="9">HRESULT</name> <argument_list pos:line="13140" pos:column="17">( <argument pos:line="13140" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="13140" pos:column="53">(</op:operator> 
            <name pos:line="13141" pos:column="13">_TextDocumentKeyPressEventsRoot</name> <op:operator pos:line="13141" pos:column="45">*</op:operator> <name pos:line="13141" pos:column="47">This</name><op:operator pos:line="13141" pos:column="51">,</op:operator>
            <comment type="block" pos:line="13142" pos:column="13">/* [in] */</comment> <name pos:line="13142" pos:column="24">__RPC__in</name> <name pos:line="13142" pos:column="34">REFIID</name> <name pos:line="13142" pos:column="41">riid</name><op:operator pos:line="13142" pos:column="45">,</op:operator>
            <comment type="block" pos:line="13143" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="13143" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="13143" pos:column="54">(<argument pos:line="13143" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="13143" pos:column="63">LPOLESTR</name> <op:operator pos:line="13143" pos:column="72">*</op:operator><name pos:line="13143" pos:column="73">rgszNames</name><op:operator pos:line="13143" pos:column="82">,</op:operator>
            <comment type="block" pos:line="13144" pos:column="13">/* [range][in] */</comment> <name pos:line="13144" pos:column="31">UINT</name> <name pos:line="13144" pos:column="36">cNames</name><op:operator pos:line="13144" pos:column="42">,</op:operator>
            <comment type="block" pos:line="13145" pos:column="13">/* [in] */</comment> <name pos:line="13145" pos:column="24">LCID</name> <name pos:line="13145" pos:column="29">lcid</name><op:operator pos:line="13145" pos:column="33">,</op:operator>
            <comment type="block" pos:line="13146" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="13146" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="13146" pos:column="56">(<argument pos:line="13146" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="13146" pos:column="65">DISPID</name> <op:operator pos:line="13146" pos:column="72">*</op:operator><name pos:line="13146" pos:column="73">rgDispId</name><op:operator pos:line="13146" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="13148" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="13148" pos:column="23">HRESULT</name></type> ( <name pos:line="13148" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="13148" pos:column="51">*</type:modifier><name pos:line="13148" pos:column="52">Invoke</name> )<parameter_list pos:line="13148" pos:column="60">( 
            <param><decl><type><name pos:line="13149" pos:column="13">_TextDocumentKeyPressEventsRoot</name> <type:modifier pos:line="13149" pos:column="45">*</type:modifier></type> <name pos:line="13149" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="13150" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13150" pos:column="24">DISPID</name></type> <name pos:line="13150" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="13151" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13151" pos:column="24">REFIID</name></type> <name pos:line="13151" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="13152" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13152" pos:column="24">LCID</name></type> <name pos:line="13152" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="13153" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13153" pos:column="24">WORD</name></type> <name pos:line="13153" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="13154" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="13154" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="13154" pos:column="40">*</type:modifier></type><name pos:line="13154" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="13155" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13155" pos:column="25">VARIANT</name> <type:modifier pos:line="13155" pos:column="33">*</type:modifier></type><name pos:line="13155" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="13156" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13156" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="13156" pos:column="35">*</type:modifier></type><name pos:line="13156" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="13157" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13157" pos:column="25">UINT</name> <type:modifier pos:line="13157" pos:column="30">*</type:modifier></type><name pos:line="13157" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13159" pos:column="9">/* [hidden][propget][id] */</comment> <function_decl><type><name pos:line="13159" pos:column="37">HRESULT</name></type> ( <name pos:line="13159" pos:column="47">__stdcall</name> <type:modifier pos:line="13159" pos:column="57">*</type:modifier><name pos:line="13159" pos:column="58">get_TextDocumentKeyPressEvents</name> )<parameter_list pos:line="13159" pos:column="90">( 
            <param><decl><type><name pos:line="13160" pos:column="13">_TextDocumentKeyPressEventsRoot</name> <type:modifier pos:line="13160" pos:column="45">*</type:modifier></type> <name pos:line="13160" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="13161" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13161" pos:column="24">__RPC__in</name> <comment type="block" pos:line="13161" pos:column="34">/* external definition not present */</comment> <name pos:line="13161" pos:column="72">TextDocument</name> <type:modifier pos:line="13161" pos:column="85">*</type:modifier></type><name pos:line="13161" pos:column="86">TextDocument</name></decl></param>,
            <comment type="block" pos:line="13162" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13162" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="13162" pos:column="54">IDispatch</name> <type:modifier pos:line="13162" pos:column="64">*</type:modifier><type:modifier pos:line="13162" pos:column="65">*</type:modifier></type><name pos:line="13162" pos:column="66">ppdisp</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13164" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="13165" pos:column="7">_TextDocumentKeyPressEventsRootVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="13167" pos:column="5">interface</name></type> <name pos:line="13167" pos:column="15">_TextDocumentKeyPressEventsRoot</name>
    <argument_list pos:line="13168" pos:column="5">{
        <argument><expr><name pos:line="13169" pos:column="9">CONST_VTBL</name> struct <name pos:line="13169" pos:column="27">_TextDocumentKeyPressEventsRootVtbl</name> <op:operator pos:line="13169" pos:column="63">*</op:operator><name pos:line="13169" pos:column="64">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="13174" pos:column="1">#<cpp:directive pos:line="13174" pos:column="2">ifdef</cpp:directive> <name pos:line="13174" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="13177" pos:column="1">#<cpp:directive pos:line="13177" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13177" pos:column="9">_TextDocumentKeyPressEventsRoot_QueryInterface</name><parameter_list pos:line="13177" pos:column="55">(<param><type><name pos:line="13177" pos:column="56">This</name></type></param>,<param><type><name pos:line="13177" pos:column="61">riid</name></type></param>,<param><type><name pos:line="13177" pos:column="66">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13178" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="13180" pos:column="1">#<cpp:directive pos:line="13180" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13180" pos:column="9">_TextDocumentKeyPressEventsRoot_AddRef</name><parameter_list pos:line="13180" pos:column="47">(<param><type><name pos:line="13180" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13181" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="13183" pos:column="1">#<cpp:directive pos:line="13183" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13183" pos:column="9">_TextDocumentKeyPressEventsRoot_Release</name><parameter_list pos:line="13183" pos:column="48">(<param><type><name pos:line="13183" pos:column="49">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13184" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="13187" pos:column="1">#<cpp:directive pos:line="13187" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13187" pos:column="9">_TextDocumentKeyPressEventsRoot_GetTypeInfoCount</name><parameter_list pos:line="13187" pos:column="57">(<param><type><name pos:line="13187" pos:column="58">This</name></type></param>,<param><type><name pos:line="13187" pos:column="63">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13188" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13190" pos:column="1">#<cpp:directive pos:line="13190" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13190" pos:column="9">_TextDocumentKeyPressEventsRoot_GetTypeInfo</name><parameter_list pos:line="13190" pos:column="52">(<param><type><name pos:line="13190" pos:column="53">This</name></type></param>,<param><type><name pos:line="13190" pos:column="58">iTInfo</name></type></param>,<param><type><name pos:line="13190" pos:column="65">lcid</name></type></param>,<param><type><name pos:line="13190" pos:column="70">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13191" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13193" pos:column="1">#<cpp:directive pos:line="13193" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13193" pos:column="9">_TextDocumentKeyPressEventsRoot_GetIDsOfNames</name><parameter_list pos:line="13193" pos:column="54">(<param><type><name pos:line="13193" pos:column="55">This</name></type></param>,<param><type><name pos:line="13193" pos:column="60">riid</name></type></param>,<param><type><name pos:line="13193" pos:column="65">rgszNames</name></type></param>,<param><type><name pos:line="13193" pos:column="75">cNames</name></type></param>,<param><type><name pos:line="13193" pos:column="82">lcid</name></type></param>,<param><type><name pos:line="13193" pos:column="87">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13194" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="13196" pos:column="1">#<cpp:directive pos:line="13196" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13196" pos:column="9">_TextDocumentKeyPressEventsRoot_Invoke</name><parameter_list pos:line="13196" pos:column="47">(<param><type><name pos:line="13196" pos:column="48">This</name></type></param>,<param><type><name pos:line="13196" pos:column="53">dispIdMember</name></type></param>,<param><type><name pos:line="13196" pos:column="66">riid</name></type></param>,<param><type><name pos:line="13196" pos:column="71">lcid</name></type></param>,<param><type><name pos:line="13196" pos:column="76">wFlags</name></type></param>,<param><type><name pos:line="13196" pos:column="83">pDispParams</name></type></param>,<param><type><name pos:line="13196" pos:column="95">pVarResult</name></type></param>,<param><type><name pos:line="13196" pos:column="106">pExcepInfo</name></type></param>,<param><type><name pos:line="13196" pos:column="117">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13197" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="13200" pos:column="1">#<cpp:directive pos:line="13200" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13200" pos:column="9">_TextDocumentKeyPressEventsRoot_get_TextDocumentKeyPressEvents</name><parameter_list pos:line="13200" pos:column="71">(<param><type><name pos:line="13200" pos:column="72">This</name></type></param>,<param><type><name pos:line="13200" pos:column="77">TextDocument</name></type></param>,<param><type><name pos:line="13200" pos:column="90">ppdisp</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13201" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_TextDocumentKeyPressEvents(This,TextDocument,ppdisp) )</cpp:value></cpp:define> 

<cpp:endif pos:line="13203" pos:column="1">#<cpp:directive pos:line="13203" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="13203" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="13206" pos:column="1">#<cpp:directive pos:line="13206" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13206" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="13211" pos:column="1">#<cpp:directive pos:line="13211" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13211" pos:column="9">/* ___TextDocumentKeyPressEventsRoot_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="13214" pos:column="1">#<cpp:directive pos:line="13214" pos:column="2">ifndef</cpp:directive> <name pos:line="13214" pos:column="9">___TextDocumentKeyPressEvents_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="13215" pos:column="1">#<cpp:directive pos:line="13215" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13215" pos:column="9">___TextDocumentKeyPressEvents_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="13217" pos:column="1">/* interface _TextDocumentKeyPressEvents */</comment>
<comment type="block" pos:line="13218" pos:column="1">/* [helpstring][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="13221" pos:column="1">EXTERN_C</name> <specifier pos:line="13221" pos:column="10">const</specifier> <name pos:line="13221" pos:column="16">IID</name></type> <name pos:line="13221" pos:column="20">IID__TextDocumentKeyPressEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="13223" pos:column="1">#<cpp:directive pos:line="13223" pos:column="2">if</cpp:directive> <expr><call><name pos:line="13223" pos:column="5">defined</name><argument_list pos:line="13223" pos:column="12">(<argument><expr><name pos:line="13223" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="13223" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="13223" pos:column="29">!</op:operator><call><name pos:line="13223" pos:column="30">defined</name><argument_list pos:line="13223" pos:column="37">(<argument><expr><name pos:line="13223" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="13225" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="13225" pos:column="19">(<argument pos:line="13225" pos:column="20">"505B7600-8FCC-487c-9E4F-C7FD0B5FB690"</argument>)</argument_list></macro>
    <label><name pos:line="13226" pos:column="5">_TextDocumentKeyPressEvents</name> :</label> <expr_stmt><expr pos:line="13226" pos:column="35">public <name pos:line="13226" pos:column="42">IDispatch</name>
    <block pos:line="13227" pos:column="5">{
    <expr pos:line="13228" pos:column="5">public<op:operator pos:line="13228" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="13231" pos:column="1">#<cpp:directive pos:line="13231" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="13231" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="13233" pos:column="5">typedef <type><struct pos:line="13233" pos:column="13">struct <name pos:line="13233" pos:column="20">_TextDocumentKeyPressEventsVtbl</name>
    <block pos:line="13234" pos:column="5">{<public type="default" pos:line="13234" pos:column="6">
        <function_decl><type><name pos:line="13235" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="13237" pos:column="9">HRESULT</name></type> ( <name pos:line="13237" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13237" pos:column="37">*</type:modifier><name pos:line="13237" pos:column="38">QueryInterface</name> )<parameter_list pos:line="13237" pos:column="54">( 
            <param><decl><type><name pos:line="13238" pos:column="13">_TextDocumentKeyPressEvents</name> <type:modifier pos:line="13238" pos:column="41">*</type:modifier></type> <name pos:line="13238" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="13239" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13239" pos:column="24">__RPC__in</name> <name pos:line="13239" pos:column="34">REFIID</name></type> <name pos:line="13239" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="13240" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="13241" pos:column="13">__RPC__deref_out</name>  <name pos:line="13241" pos:column="31">void</name> <type:modifier pos:line="13241" pos:column="36">*</type:modifier><type:modifier pos:line="13241" pos:column="37">*</type:modifier></type><name pos:line="13241" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13243" pos:column="9">ULONG</name></type> ( <name pos:line="13243" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13243" pos:column="35">*</type:modifier><name pos:line="13243" pos:column="36">AddRef</name> )<parameter_list pos:line="13243" pos:column="44">( 
            <param><decl><type><name pos:line="13244" pos:column="13">_TextDocumentKeyPressEvents</name> <type:modifier pos:line="13244" pos:column="41">*</type:modifier></type> <name pos:line="13244" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13246" pos:column="9">ULONG</name></type> ( <name pos:line="13246" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13246" pos:column="35">*</type:modifier><name pos:line="13246" pos:column="36">Release</name> )<parameter_list pos:line="13246" pos:column="45">( 
            <param><decl><type><name pos:line="13247" pos:column="13">_TextDocumentKeyPressEvents</name> <type:modifier pos:line="13247" pos:column="41">*</type:modifier></type> <name pos:line="13247" pos:column="43">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13249" pos:column="9">HRESULT</name></type> ( <name pos:line="13249" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13249" pos:column="37">*</type:modifier><name pos:line="13249" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="13249" pos:column="56">( 
            <param><decl><type><name pos:line="13250" pos:column="13">_TextDocumentKeyPressEvents</name> <type:modifier pos:line="13250" pos:column="41">*</type:modifier></type> <name pos:line="13250" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="13251" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13251" pos:column="25">__RPC__out</name> <name pos:line="13251" pos:column="36">UINT</name> <type:modifier pos:line="13251" pos:column="41">*</type:modifier></type><name pos:line="13251" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13253" pos:column="9">HRESULT</name></type> ( <name pos:line="13253" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13253" pos:column="37">*</type:modifier><name pos:line="13253" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="13253" pos:column="51">( 
            <param><decl><type><name pos:line="13254" pos:column="13">_TextDocumentKeyPressEvents</name> <type:modifier pos:line="13254" pos:column="41">*</type:modifier></type> <name pos:line="13254" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="13255" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13255" pos:column="24">UINT</name></type> <name pos:line="13255" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="13256" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13256" pos:column="24">LCID</name></type> <name pos:line="13256" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="13257" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13257" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13257" pos:column="46">ITypeInfo</name> <type:modifier pos:line="13257" pos:column="56">*</type:modifier><type:modifier pos:line="13257" pos:column="57">*</type:modifier></type><name pos:line="13257" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13259" pos:column="9">HRESULT</name> <argument_list pos:line="13259" pos:column="17">( <argument pos:line="13259" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="13259" pos:column="53">(</op:operator> 
            <name pos:line="13260" pos:column="13">_TextDocumentKeyPressEvents</name> <op:operator pos:line="13260" pos:column="41">*</op:operator> <name pos:line="13260" pos:column="43">This</name><op:operator pos:line="13260" pos:column="47">,</op:operator>
            <comment type="block" pos:line="13261" pos:column="13">/* [in] */</comment> <name pos:line="13261" pos:column="24">__RPC__in</name> <name pos:line="13261" pos:column="34">REFIID</name> <name pos:line="13261" pos:column="41">riid</name><op:operator pos:line="13261" pos:column="45">,</op:operator>
            <comment type="block" pos:line="13262" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="13262" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="13262" pos:column="54">(<argument pos:line="13262" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="13262" pos:column="63">LPOLESTR</name> <op:operator pos:line="13262" pos:column="72">*</op:operator><name pos:line="13262" pos:column="73">rgszNames</name><op:operator pos:line="13262" pos:column="82">,</op:operator>
            <comment type="block" pos:line="13263" pos:column="13">/* [range][in] */</comment> <name pos:line="13263" pos:column="31">UINT</name> <name pos:line="13263" pos:column="36">cNames</name><op:operator pos:line="13263" pos:column="42">,</op:operator>
            <comment type="block" pos:line="13264" pos:column="13">/* [in] */</comment> <name pos:line="13264" pos:column="24">LCID</name> <name pos:line="13264" pos:column="29">lcid</name><op:operator pos:line="13264" pos:column="33">,</op:operator>
            <comment type="block" pos:line="13265" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="13265" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="13265" pos:column="56">(<argument pos:line="13265" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="13265" pos:column="65">DISPID</name> <op:operator pos:line="13265" pos:column="72">*</op:operator><name pos:line="13265" pos:column="73">rgDispId</name><op:operator pos:line="13265" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="13267" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="13267" pos:column="23">HRESULT</name></type> ( <name pos:line="13267" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="13267" pos:column="51">*</type:modifier><name pos:line="13267" pos:column="52">Invoke</name> )<parameter_list pos:line="13267" pos:column="60">( 
            <param><decl><type><name pos:line="13268" pos:column="13">_TextDocumentKeyPressEvents</name> <type:modifier pos:line="13268" pos:column="41">*</type:modifier></type> <name pos:line="13268" pos:column="43">This</name></decl></param>,
            <comment type="block" pos:line="13269" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13269" pos:column="24">DISPID</name></type> <name pos:line="13269" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="13270" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13270" pos:column="24">REFIID</name></type> <name pos:line="13270" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="13271" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13271" pos:column="24">LCID</name></type> <name pos:line="13271" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="13272" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13272" pos:column="24">WORD</name></type> <name pos:line="13272" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="13273" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="13273" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="13273" pos:column="40">*</type:modifier></type><name pos:line="13273" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="13274" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13274" pos:column="25">VARIANT</name> <type:modifier pos:line="13274" pos:column="33">*</type:modifier></type><name pos:line="13274" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="13275" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13275" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="13275" pos:column="35">*</type:modifier></type><name pos:line="13275" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="13276" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13276" pos:column="25">UINT</name> <type:modifier pos:line="13276" pos:column="30">*</type:modifier></type><name pos:line="13276" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13278" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="13279" pos:column="7">_TextDocumentKeyPressEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="13281" pos:column="5">interface</name></type> <name pos:line="13281" pos:column="15">_TextDocumentKeyPressEvents</name>
    <argument_list pos:line="13282" pos:column="5">{
        <argument><expr><name pos:line="13283" pos:column="9">CONST_VTBL</name> struct <name pos:line="13283" pos:column="27">_TextDocumentKeyPressEventsVtbl</name> <op:operator pos:line="13283" pos:column="59">*</op:operator><name pos:line="13283" pos:column="60">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="13288" pos:column="1">#<cpp:directive pos:line="13288" pos:column="2">ifdef</cpp:directive> <name pos:line="13288" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="13291" pos:column="1">#<cpp:directive pos:line="13291" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13291" pos:column="9">_TextDocumentKeyPressEvents_QueryInterface</name><parameter_list pos:line="13291" pos:column="51">(<param><type><name pos:line="13291" pos:column="52">This</name></type></param>,<param><type><name pos:line="13291" pos:column="57">riid</name></type></param>,<param><type><name pos:line="13291" pos:column="62">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13292" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="13294" pos:column="1">#<cpp:directive pos:line="13294" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13294" pos:column="9">_TextDocumentKeyPressEvents_AddRef</name><parameter_list pos:line="13294" pos:column="43">(<param><type><name pos:line="13294" pos:column="44">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13295" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="13297" pos:column="1">#<cpp:directive pos:line="13297" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13297" pos:column="9">_TextDocumentKeyPressEvents_Release</name><parameter_list pos:line="13297" pos:column="44">(<param><type><name pos:line="13297" pos:column="45">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13298" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="13301" pos:column="1">#<cpp:directive pos:line="13301" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13301" pos:column="9">_TextDocumentKeyPressEvents_GetTypeInfoCount</name><parameter_list pos:line="13301" pos:column="53">(<param><type><name pos:line="13301" pos:column="54">This</name></type></param>,<param><type><name pos:line="13301" pos:column="59">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13302" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13304" pos:column="1">#<cpp:directive pos:line="13304" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13304" pos:column="9">_TextDocumentKeyPressEvents_GetTypeInfo</name><parameter_list pos:line="13304" pos:column="48">(<param><type><name pos:line="13304" pos:column="49">This</name></type></param>,<param><type><name pos:line="13304" pos:column="54">iTInfo</name></type></param>,<param><type><name pos:line="13304" pos:column="61">lcid</name></type></param>,<param><type><name pos:line="13304" pos:column="66">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13305" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13307" pos:column="1">#<cpp:directive pos:line="13307" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13307" pos:column="9">_TextDocumentKeyPressEvents_GetIDsOfNames</name><parameter_list pos:line="13307" pos:column="50">(<param><type><name pos:line="13307" pos:column="51">This</name></type></param>,<param><type><name pos:line="13307" pos:column="56">riid</name></type></param>,<param><type><name pos:line="13307" pos:column="61">rgszNames</name></type></param>,<param><type><name pos:line="13307" pos:column="71">cNames</name></type></param>,<param><type><name pos:line="13307" pos:column="78">lcid</name></type></param>,<param><type><name pos:line="13307" pos:column="83">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13308" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="13310" pos:column="1">#<cpp:directive pos:line="13310" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13310" pos:column="9">_TextDocumentKeyPressEvents_Invoke</name><parameter_list pos:line="13310" pos:column="43">(<param><type><name pos:line="13310" pos:column="44">This</name></type></param>,<param><type><name pos:line="13310" pos:column="49">dispIdMember</name></type></param>,<param><type><name pos:line="13310" pos:column="62">riid</name></type></param>,<param><type><name pos:line="13310" pos:column="67">lcid</name></type></param>,<param><type><name pos:line="13310" pos:column="72">wFlags</name></type></param>,<param><type><name pos:line="13310" pos:column="79">pDispParams</name></type></param>,<param><type><name pos:line="13310" pos:column="91">pVarResult</name></type></param>,<param><type><name pos:line="13310" pos:column="102">pExcepInfo</name></type></param>,<param><type><name pos:line="13310" pos:column="113">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13311" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:endif pos:line="13314" pos:column="1">#<cpp:directive pos:line="13314" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="13314" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="13317" pos:column="1">#<cpp:directive pos:line="13317" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13317" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="13322" pos:column="1">#<cpp:directive pos:line="13322" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13322" pos:column="9">/* ___TextDocumentKeyPressEvents_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="13325" pos:column="1">#<cpp:directive pos:line="13325" pos:column="2">ifndef</cpp:directive> <name pos:line="13325" pos:column="9">___dispTextDocumentKeyPressEvents_DISPINTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="13326" pos:column="1">#<cpp:directive pos:line="13326" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13326" pos:column="9">___dispTextDocumentKeyPressEvents_DISPINTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="13328" pos:column="1">/* dispinterface _dispTextDocumentKeyPressEvents */</comment>
<comment type="block" pos:line="13329" pos:column="1">/* [uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="13332" pos:column="1">EXTERN_C</name> <specifier pos:line="13332" pos:column="10">const</specifier> <name pos:line="13332" pos:column="16">IID</name></type> <name pos:line="13332" pos:column="20">DIID__dispTextDocumentKeyPressEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="13334" pos:column="1">#<cpp:directive pos:line="13334" pos:column="2">if</cpp:directive> <expr><call><name pos:line="13334" pos:column="5">defined</name><argument_list pos:line="13334" pos:column="12">(<argument><expr><name pos:line="13334" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="13334" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="13334" pos:column="29">!</op:operator><call><name pos:line="13334" pos:column="30">defined</name><argument_list pos:line="13334" pos:column="37">(<argument><expr><name pos:line="13334" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <macro><name pos:line="13336" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="13336" pos:column="19">(<argument pos:line="13336" pos:column="20">"4B57C85E-5100-4caf-9301-4544B85C7945"</argument>)</argument_list></macro>
    <label><name pos:line="13337" pos:column="5">_dispTextDocumentKeyPressEvents</name> :</label> <expr_stmt><expr pos:line="13337" pos:column="39">public <name pos:line="13337" pos:column="46">IDispatch</name>
    <block pos:line="13338" pos:column="5">{
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="13341" pos:column="1">#<cpp:directive pos:line="13341" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="13341" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="13343" pos:column="5">typedef <type><struct pos:line="13343" pos:column="13">struct <name pos:line="13343" pos:column="20">_dispTextDocumentKeyPressEventsVtbl</name>
    <block pos:line="13344" pos:column="5">{<public type="default" pos:line="13344" pos:column="6">
        <function_decl><type><name pos:line="13345" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="13347" pos:column="9">HRESULT</name></type> ( <name pos:line="13347" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13347" pos:column="37">*</type:modifier><name pos:line="13347" pos:column="38">QueryInterface</name> )<parameter_list pos:line="13347" pos:column="54">( 
            <param><decl><type><name pos:line="13348" pos:column="13">_dispTextDocumentKeyPressEvents</name> <type:modifier pos:line="13348" pos:column="45">*</type:modifier></type> <name pos:line="13348" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="13349" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13349" pos:column="24">__RPC__in</name> <name pos:line="13349" pos:column="34">REFIID</name></type> <name pos:line="13349" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="13350" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="13351" pos:column="13">__RPC__deref_out</name>  <name pos:line="13351" pos:column="31">void</name> <type:modifier pos:line="13351" pos:column="36">*</type:modifier><type:modifier pos:line="13351" pos:column="37">*</type:modifier></type><name pos:line="13351" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13353" pos:column="9">ULONG</name></type> ( <name pos:line="13353" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13353" pos:column="35">*</type:modifier><name pos:line="13353" pos:column="36">AddRef</name> )<parameter_list pos:line="13353" pos:column="44">( 
            <param><decl><type><name pos:line="13354" pos:column="13">_dispTextDocumentKeyPressEvents</name> <type:modifier pos:line="13354" pos:column="45">*</type:modifier></type> <name pos:line="13354" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13356" pos:column="9">ULONG</name></type> ( <name pos:line="13356" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13356" pos:column="35">*</type:modifier><name pos:line="13356" pos:column="36">Release</name> )<parameter_list pos:line="13356" pos:column="45">( 
            <param><decl><type><name pos:line="13357" pos:column="13">_dispTextDocumentKeyPressEvents</name> <type:modifier pos:line="13357" pos:column="45">*</type:modifier></type> <name pos:line="13357" pos:column="47">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13359" pos:column="9">HRESULT</name></type> ( <name pos:line="13359" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13359" pos:column="37">*</type:modifier><name pos:line="13359" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="13359" pos:column="56">( 
            <param><decl><type><name pos:line="13360" pos:column="13">_dispTextDocumentKeyPressEvents</name> <type:modifier pos:line="13360" pos:column="45">*</type:modifier></type> <name pos:line="13360" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="13361" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13361" pos:column="25">__RPC__out</name> <name pos:line="13361" pos:column="36">UINT</name> <type:modifier pos:line="13361" pos:column="41">*</type:modifier></type><name pos:line="13361" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13363" pos:column="9">HRESULT</name></type> ( <name pos:line="13363" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13363" pos:column="37">*</type:modifier><name pos:line="13363" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="13363" pos:column="51">( 
            <param><decl><type><name pos:line="13364" pos:column="13">_dispTextDocumentKeyPressEvents</name> <type:modifier pos:line="13364" pos:column="45">*</type:modifier></type> <name pos:line="13364" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="13365" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13365" pos:column="24">UINT</name></type> <name pos:line="13365" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="13366" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13366" pos:column="24">LCID</name></type> <name pos:line="13366" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="13367" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13367" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13367" pos:column="46">ITypeInfo</name> <type:modifier pos:line="13367" pos:column="56">*</type:modifier><type:modifier pos:line="13367" pos:column="57">*</type:modifier></type><name pos:line="13367" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13369" pos:column="9">HRESULT</name> <argument_list pos:line="13369" pos:column="17">( <argument pos:line="13369" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="13369" pos:column="53">(</op:operator> 
            <name pos:line="13370" pos:column="13">_dispTextDocumentKeyPressEvents</name> <op:operator pos:line="13370" pos:column="45">*</op:operator> <name pos:line="13370" pos:column="47">This</name><op:operator pos:line="13370" pos:column="51">,</op:operator>
            <comment type="block" pos:line="13371" pos:column="13">/* [in] */</comment> <name pos:line="13371" pos:column="24">__RPC__in</name> <name pos:line="13371" pos:column="34">REFIID</name> <name pos:line="13371" pos:column="41">riid</name><op:operator pos:line="13371" pos:column="45">,</op:operator>
            <comment type="block" pos:line="13372" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="13372" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="13372" pos:column="54">(<argument pos:line="13372" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="13372" pos:column="63">LPOLESTR</name> <op:operator pos:line="13372" pos:column="72">*</op:operator><name pos:line="13372" pos:column="73">rgszNames</name><op:operator pos:line="13372" pos:column="82">,</op:operator>
            <comment type="block" pos:line="13373" pos:column="13">/* [range][in] */</comment> <name pos:line="13373" pos:column="31">UINT</name> <name pos:line="13373" pos:column="36">cNames</name><op:operator pos:line="13373" pos:column="42">,</op:operator>
            <comment type="block" pos:line="13374" pos:column="13">/* [in] */</comment> <name pos:line="13374" pos:column="24">LCID</name> <name pos:line="13374" pos:column="29">lcid</name><op:operator pos:line="13374" pos:column="33">,</op:operator>
            <comment type="block" pos:line="13375" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="13375" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="13375" pos:column="56">(<argument pos:line="13375" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="13375" pos:column="65">DISPID</name> <op:operator pos:line="13375" pos:column="72">*</op:operator><name pos:line="13375" pos:column="73">rgDispId</name><op:operator pos:line="13375" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="13377" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="13377" pos:column="23">HRESULT</name></type> ( <name pos:line="13377" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="13377" pos:column="51">*</type:modifier><name pos:line="13377" pos:column="52">Invoke</name> )<parameter_list pos:line="13377" pos:column="60">( 
            <param><decl><type><name pos:line="13378" pos:column="13">_dispTextDocumentKeyPressEvents</name> <type:modifier pos:line="13378" pos:column="45">*</type:modifier></type> <name pos:line="13378" pos:column="47">This</name></decl></param>,
            <comment type="block" pos:line="13379" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13379" pos:column="24">DISPID</name></type> <name pos:line="13379" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="13380" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13380" pos:column="24">REFIID</name></type> <name pos:line="13380" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="13381" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13381" pos:column="24">LCID</name></type> <name pos:line="13381" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="13382" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13382" pos:column="24">WORD</name></type> <name pos:line="13382" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="13383" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="13383" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="13383" pos:column="40">*</type:modifier></type><name pos:line="13383" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="13384" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13384" pos:column="25">VARIANT</name> <type:modifier pos:line="13384" pos:column="33">*</type:modifier></type><name pos:line="13384" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="13385" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13385" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="13385" pos:column="35">*</type:modifier></type><name pos:line="13385" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="13386" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13386" pos:column="25">UINT</name> <type:modifier pos:line="13386" pos:column="30">*</type:modifier></type><name pos:line="13386" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13388" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="13389" pos:column="7">_dispTextDocumentKeyPressEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="13391" pos:column="5">interface</name></type> <name pos:line="13391" pos:column="15">_dispTextDocumentKeyPressEvents</name>
    <argument_list pos:line="13392" pos:column="5">{
        <argument><expr><name pos:line="13393" pos:column="9">CONST_VTBL</name> struct <name pos:line="13393" pos:column="27">_dispTextDocumentKeyPressEventsVtbl</name> <op:operator pos:line="13393" pos:column="63">*</op:operator><name pos:line="13393" pos:column="64">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="13398" pos:column="1">#<cpp:directive pos:line="13398" pos:column="2">ifdef</cpp:directive> <name pos:line="13398" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="13401" pos:column="1">#<cpp:directive pos:line="13401" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13401" pos:column="9">_dispTextDocumentKeyPressEvents_QueryInterface</name><parameter_list pos:line="13401" pos:column="55">(<param><type><name pos:line="13401" pos:column="56">This</name></type></param>,<param><type><name pos:line="13401" pos:column="61">riid</name></type></param>,<param><type><name pos:line="13401" pos:column="66">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13402" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="13404" pos:column="1">#<cpp:directive pos:line="13404" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13404" pos:column="9">_dispTextDocumentKeyPressEvents_AddRef</name><parameter_list pos:line="13404" pos:column="47">(<param><type><name pos:line="13404" pos:column="48">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13405" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="13407" pos:column="1">#<cpp:directive pos:line="13407" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13407" pos:column="9">_dispTextDocumentKeyPressEvents_Release</name><parameter_list pos:line="13407" pos:column="48">(<param><type><name pos:line="13407" pos:column="49">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13408" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="13411" pos:column="1">#<cpp:directive pos:line="13411" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13411" pos:column="9">_dispTextDocumentKeyPressEvents_GetTypeInfoCount</name><parameter_list pos:line="13411" pos:column="57">(<param><type><name pos:line="13411" pos:column="58">This</name></type></param>,<param><type><name pos:line="13411" pos:column="63">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13412" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13414" pos:column="1">#<cpp:directive pos:line="13414" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13414" pos:column="9">_dispTextDocumentKeyPressEvents_GetTypeInfo</name><parameter_list pos:line="13414" pos:column="52">(<param><type><name pos:line="13414" pos:column="53">This</name></type></param>,<param><type><name pos:line="13414" pos:column="58">iTInfo</name></type></param>,<param><type><name pos:line="13414" pos:column="65">lcid</name></type></param>,<param><type><name pos:line="13414" pos:column="70">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13415" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13417" pos:column="1">#<cpp:directive pos:line="13417" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13417" pos:column="9">_dispTextDocumentKeyPressEvents_GetIDsOfNames</name><parameter_list pos:line="13417" pos:column="54">(<param><type><name pos:line="13417" pos:column="55">This</name></type></param>,<param><type><name pos:line="13417" pos:column="60">riid</name></type></param>,<param><type><name pos:line="13417" pos:column="65">rgszNames</name></type></param>,<param><type><name pos:line="13417" pos:column="75">cNames</name></type></param>,<param><type><name pos:line="13417" pos:column="82">lcid</name></type></param>,<param><type><name pos:line="13417" pos:column="87">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13418" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="13420" pos:column="1">#<cpp:directive pos:line="13420" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13420" pos:column="9">_dispTextDocumentKeyPressEvents_Invoke</name><parameter_list pos:line="13420" pos:column="47">(<param><type><name pos:line="13420" pos:column="48">This</name></type></param>,<param><type><name pos:line="13420" pos:column="53">dispIdMember</name></type></param>,<param><type><name pos:line="13420" pos:column="66">riid</name></type></param>,<param><type><name pos:line="13420" pos:column="71">lcid</name></type></param>,<param><type><name pos:line="13420" pos:column="76">wFlags</name></type></param>,<param><type><name pos:line="13420" pos:column="83">pDispParams</name></type></param>,<param><type><name pos:line="13420" pos:column="95">pVarResult</name></type></param>,<param><type><name pos:line="13420" pos:column="106">pExcepInfo</name></type></param>,<param><type><name pos:line="13420" pos:column="117">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13421" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 

<cpp:endif pos:line="13423" pos:column="1">#<cpp:directive pos:line="13423" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="13423" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="13426" pos:column="1">#<cpp:directive pos:line="13426" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13426" pos:column="9">/* C style interface */</comment>


<cpp:endif pos:line="13429" pos:column="1">#<cpp:directive pos:line="13429" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13429" pos:column="9">/* ___dispTextDocumentKeyPressEvents_DISPINTERFACE_DEFINED__ */</comment>


<decl_stmt><decl><type><name pos:line="13432" pos:column="1">EXTERN_C</name> <specifier pos:line="13432" pos:column="10">const</specifier> <name pos:line="13432" pos:column="16">CLSID</name></type> <name pos:line="13432" pos:column="22">CLSID_TextDocumentKeyPressEvents</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="13434" pos:column="1">#<cpp:directive pos:line="13434" pos:column="2">ifdef</cpp:directive> <name pos:line="13434" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="13436" pos:column="1">class</type> <name pos:line="13436" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="13436" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="13436" pos:column="21">"E7532A4E-AB9E-41DF-BB9A-7C764677E5C3"</lit:literal></expr></argument>)</argument_list>
<name pos:line="13437" pos:column="1">TextDocumentKeyPressEvents</name></decl>;</decl_stmt>
<cpp:endif pos:line="13438" pos:column="1">#<cpp:directive pos:line="13438" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:ifndef pos:line="13440" pos:column="1">#<cpp:directive pos:line="13440" pos:column="2">ifndef</cpp:directive> <name pos:line="13440" pos:column="9">___PublishEvents_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="13441" pos:column="1">#<cpp:directive pos:line="13441" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13441" pos:column="9">___PublishEvents_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="13443" pos:column="1">/* interface _PublishEvents */</comment>
<comment type="block" pos:line="13444" pos:column="1">/* [object][helpstring][oleautomation][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="13447" pos:column="1">EXTERN_C</name> <specifier pos:line="13447" pos:column="10">const</specifier> <name pos:line="13447" pos:column="16">IID</name></type> <name pos:line="13447" pos:column="20">IID__PublishEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="13449" pos:column="1">#<cpp:directive pos:line="13449" pos:column="2">if</cpp:directive> <expr><call><name pos:line="13449" pos:column="5">defined</name><argument_list pos:line="13449" pos:column="12">(<argument><expr><name pos:line="13449" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="13449" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="13449" pos:column="29">!</op:operator><call><name pos:line="13449" pos:column="30">defined</name><argument_list pos:line="13449" pos:column="37">(<argument><expr><name pos:line="13449" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="13451" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="13451" pos:column="19">(<argument pos:line="13451" pos:column="20">"827be7dc-1817-4171-a8ff-aab3854913bf"</argument>)</argument_list></macro>
    <label><name pos:line="13452" pos:column="5">_PublishEvents</name> :</label> <expr_stmt><expr pos:line="13452" pos:column="22">public <name pos:line="13452" pos:column="29">IDispatch</name>
    <block pos:line="13453" pos:column="5">{
    <expr pos:line="13454" pos:column="5">public<op:operator pos:line="13454" pos:column="11">:</op:operator></expr>
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="13457" pos:column="1">#<cpp:directive pos:line="13457" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="13457" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="13459" pos:column="5">typedef <type><struct pos:line="13459" pos:column="13">struct <name pos:line="13459" pos:column="20">_PublishEventsVtbl</name>
    <block pos:line="13460" pos:column="5">{<public type="default" pos:line="13460" pos:column="6">
        <function_decl><type><name pos:line="13461" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="13463" pos:column="9">HRESULT</name></type> ( <name pos:line="13463" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13463" pos:column="37">*</type:modifier><name pos:line="13463" pos:column="38">QueryInterface</name> )<parameter_list pos:line="13463" pos:column="54">( 
            <param><decl><type><name pos:line="13464" pos:column="13">_PublishEvents</name> <type:modifier pos:line="13464" pos:column="28">*</type:modifier></type> <name pos:line="13464" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="13465" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13465" pos:column="24">__RPC__in</name> <name pos:line="13465" pos:column="34">REFIID</name></type> <name pos:line="13465" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="13466" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="13467" pos:column="13">__RPC__deref_out</name>  <name pos:line="13467" pos:column="31">void</name> <type:modifier pos:line="13467" pos:column="36">*</type:modifier><type:modifier pos:line="13467" pos:column="37">*</type:modifier></type><name pos:line="13467" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13469" pos:column="9">ULONG</name></type> ( <name pos:line="13469" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13469" pos:column="35">*</type:modifier><name pos:line="13469" pos:column="36">AddRef</name> )<parameter_list pos:line="13469" pos:column="44">( 
            <param><decl><type><name pos:line="13470" pos:column="13">_PublishEvents</name> <type:modifier pos:line="13470" pos:column="28">*</type:modifier></type> <name pos:line="13470" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13472" pos:column="9">ULONG</name></type> ( <name pos:line="13472" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13472" pos:column="35">*</type:modifier><name pos:line="13472" pos:column="36">Release</name> )<parameter_list pos:line="13472" pos:column="45">( 
            <param><decl><type><name pos:line="13473" pos:column="13">_PublishEvents</name> <type:modifier pos:line="13473" pos:column="28">*</type:modifier></type> <name pos:line="13473" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13475" pos:column="9">HRESULT</name></type> ( <name pos:line="13475" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13475" pos:column="37">*</type:modifier><name pos:line="13475" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="13475" pos:column="56">( 
            <param><decl><type><name pos:line="13476" pos:column="13">_PublishEvents</name> <type:modifier pos:line="13476" pos:column="28">*</type:modifier></type> <name pos:line="13476" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="13477" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13477" pos:column="25">__RPC__out</name> <name pos:line="13477" pos:column="36">UINT</name> <type:modifier pos:line="13477" pos:column="41">*</type:modifier></type><name pos:line="13477" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13479" pos:column="9">HRESULT</name></type> ( <name pos:line="13479" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13479" pos:column="37">*</type:modifier><name pos:line="13479" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="13479" pos:column="51">( 
            <param><decl><type><name pos:line="13480" pos:column="13">_PublishEvents</name> <type:modifier pos:line="13480" pos:column="28">*</type:modifier></type> <name pos:line="13480" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="13481" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13481" pos:column="24">UINT</name></type> <name pos:line="13481" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="13482" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13482" pos:column="24">LCID</name></type> <name pos:line="13482" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="13483" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13483" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13483" pos:column="46">ITypeInfo</name> <type:modifier pos:line="13483" pos:column="56">*</type:modifier><type:modifier pos:line="13483" pos:column="57">*</type:modifier></type><name pos:line="13483" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13485" pos:column="9">HRESULT</name> <argument_list pos:line="13485" pos:column="17">( <argument pos:line="13485" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="13485" pos:column="53">(</op:operator> 
            <name pos:line="13486" pos:column="13">_PublishEvents</name> <op:operator pos:line="13486" pos:column="28">*</op:operator> <name pos:line="13486" pos:column="30">This</name><op:operator pos:line="13486" pos:column="34">,</op:operator>
            <comment type="block" pos:line="13487" pos:column="13">/* [in] */</comment> <name pos:line="13487" pos:column="24">__RPC__in</name> <name pos:line="13487" pos:column="34">REFIID</name> <name pos:line="13487" pos:column="41">riid</name><op:operator pos:line="13487" pos:column="45">,</op:operator>
            <comment type="block" pos:line="13488" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="13488" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="13488" pos:column="54">(<argument pos:line="13488" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="13488" pos:column="63">LPOLESTR</name> <op:operator pos:line="13488" pos:column="72">*</op:operator><name pos:line="13488" pos:column="73">rgszNames</name><op:operator pos:line="13488" pos:column="82">,</op:operator>
            <comment type="block" pos:line="13489" pos:column="13">/* [range][in] */</comment> <name pos:line="13489" pos:column="31">UINT</name> <name pos:line="13489" pos:column="36">cNames</name><op:operator pos:line="13489" pos:column="42">,</op:operator>
            <comment type="block" pos:line="13490" pos:column="13">/* [in] */</comment> <name pos:line="13490" pos:column="24">LCID</name> <name pos:line="13490" pos:column="29">lcid</name><op:operator pos:line="13490" pos:column="33">,</op:operator>
            <comment type="block" pos:line="13491" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="13491" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="13491" pos:column="56">(<argument pos:line="13491" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="13491" pos:column="65">DISPID</name> <op:operator pos:line="13491" pos:column="72">*</op:operator><name pos:line="13491" pos:column="73">rgDispId</name><op:operator pos:line="13491" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="13493" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="13493" pos:column="23">HRESULT</name></type> ( <name pos:line="13493" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="13493" pos:column="51">*</type:modifier><name pos:line="13493" pos:column="52">Invoke</name> )<parameter_list pos:line="13493" pos:column="60">( 
            <param><decl><type><name pos:line="13494" pos:column="13">_PublishEvents</name> <type:modifier pos:line="13494" pos:column="28">*</type:modifier></type> <name pos:line="13494" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="13495" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13495" pos:column="24">DISPID</name></type> <name pos:line="13495" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="13496" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13496" pos:column="24">REFIID</name></type> <name pos:line="13496" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="13497" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13497" pos:column="24">LCID</name></type> <name pos:line="13497" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="13498" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13498" pos:column="24">WORD</name></type> <name pos:line="13498" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="13499" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="13499" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="13499" pos:column="40">*</type:modifier></type><name pos:line="13499" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="13500" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13500" pos:column="25">VARIANT</name> <type:modifier pos:line="13500" pos:column="33">*</type:modifier></type><name pos:line="13500" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="13501" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13501" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="13501" pos:column="35">*</type:modifier></type><name pos:line="13501" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="13502" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13502" pos:column="25">UINT</name> <type:modifier pos:line="13502" pos:column="30">*</type:modifier></type><name pos:line="13502" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13504" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="13505" pos:column="7">_PublishEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="13507" pos:column="5">interface</name></type> <name pos:line="13507" pos:column="15">_PublishEvents</name>
    <argument_list pos:line="13508" pos:column="5">{
        <argument><expr><name pos:line="13509" pos:column="9">CONST_VTBL</name> struct <name pos:line="13509" pos:column="27">_PublishEventsVtbl</name> <op:operator pos:line="13509" pos:column="46">*</op:operator><name pos:line="13509" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="13514" pos:column="1">#<cpp:directive pos:line="13514" pos:column="2">ifdef</cpp:directive> <name pos:line="13514" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="13517" pos:column="1">#<cpp:directive pos:line="13517" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13517" pos:column="9">_PublishEvents_QueryInterface</name><parameter_list pos:line="13517" pos:column="38">(<param><type><name pos:line="13517" pos:column="39">This</name></type></param>,<param><type><name pos:line="13517" pos:column="44">riid</name></type></param>,<param><type><name pos:line="13517" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13518" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="13520" pos:column="1">#<cpp:directive pos:line="13520" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13520" pos:column="9">_PublishEvents_AddRef</name><parameter_list pos:line="13520" pos:column="30">(<param><type><name pos:line="13520" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13521" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="13523" pos:column="1">#<cpp:directive pos:line="13523" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13523" pos:column="9">_PublishEvents_Release</name><parameter_list pos:line="13523" pos:column="31">(<param><type><name pos:line="13523" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13524" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="13527" pos:column="1">#<cpp:directive pos:line="13527" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13527" pos:column="9">_PublishEvents_GetTypeInfoCount</name><parameter_list pos:line="13527" pos:column="40">(<param><type><name pos:line="13527" pos:column="41">This</name></type></param>,<param><type><name pos:line="13527" pos:column="46">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13528" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13530" pos:column="1">#<cpp:directive pos:line="13530" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13530" pos:column="9">_PublishEvents_GetTypeInfo</name><parameter_list pos:line="13530" pos:column="35">(<param><type><name pos:line="13530" pos:column="36">This</name></type></param>,<param><type><name pos:line="13530" pos:column="41">iTInfo</name></type></param>,<param><type><name pos:line="13530" pos:column="48">lcid</name></type></param>,<param><type><name pos:line="13530" pos:column="53">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13531" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13533" pos:column="1">#<cpp:directive pos:line="13533" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13533" pos:column="9">_PublishEvents_GetIDsOfNames</name><parameter_list pos:line="13533" pos:column="37">(<param><type><name pos:line="13533" pos:column="38">This</name></type></param>,<param><type><name pos:line="13533" pos:column="43">riid</name></type></param>,<param><type><name pos:line="13533" pos:column="48">rgszNames</name></type></param>,<param><type><name pos:line="13533" pos:column="58">cNames</name></type></param>,<param><type><name pos:line="13533" pos:column="65">lcid</name></type></param>,<param><type><name pos:line="13533" pos:column="70">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13534" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="13536" pos:column="1">#<cpp:directive pos:line="13536" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13536" pos:column="9">_PublishEvents_Invoke</name><parameter_list pos:line="13536" pos:column="30">(<param><type><name pos:line="13536" pos:column="31">This</name></type></param>,<param><type><name pos:line="13536" pos:column="36">dispIdMember</name></type></param>,<param><type><name pos:line="13536" pos:column="49">riid</name></type></param>,<param><type><name pos:line="13536" pos:column="54">lcid</name></type></param>,<param><type><name pos:line="13536" pos:column="59">wFlags</name></type></param>,<param><type><name pos:line="13536" pos:column="66">pDispParams</name></type></param>,<param><type><name pos:line="13536" pos:column="78">pVarResult</name></type></param>,<param><type><name pos:line="13536" pos:column="89">pExcepInfo</name></type></param>,<param><type><name pos:line="13536" pos:column="100">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13537" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:endif pos:line="13540" pos:column="1">#<cpp:directive pos:line="13540" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="13540" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="13543" pos:column="1">#<cpp:directive pos:line="13543" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13543" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="13548" pos:column="1">#<cpp:directive pos:line="13548" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13548" pos:column="9">/* ___PublishEvents_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="13551" pos:column="1">#<cpp:directive pos:line="13551" pos:column="2">ifndef</cpp:directive> <name pos:line="13551" pos:column="9">___dispPublishEvents_DISPINTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="13552" pos:column="1">#<cpp:directive pos:line="13552" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13552" pos:column="9">___dispPublishEvents_DISPINTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="13554" pos:column="1">/* dispinterface _dispPublishEvents */</comment>
<comment type="block" pos:line="13555" pos:column="1">/* [uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="13558" pos:column="1">EXTERN_C</name> <specifier pos:line="13558" pos:column="10">const</specifier> <name pos:line="13558" pos:column="16">IID</name></type> <name pos:line="13558" pos:column="20">DIID__dispPublishEvents</name></decl>;</decl_stmt>

<cpp:if pos:line="13560" pos:column="1">#<cpp:directive pos:line="13560" pos:column="2">if</cpp:directive> <expr><call><name pos:line="13560" pos:column="5">defined</name><argument_list pos:line="13560" pos:column="12">(<argument><expr><name pos:line="13560" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="13560" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="13560" pos:column="29">!</op:operator><call><name pos:line="13560" pos:column="30">defined</name><argument_list pos:line="13560" pos:column="37">(<argument><expr><name pos:line="13560" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <macro><name pos:line="13562" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="13562" pos:column="19">(<argument pos:line="13562" pos:column="20">"a0b40b93-9311-410f-b210-1f65bafb0e27"</argument>)</argument_list></macro>
    <label><name pos:line="13563" pos:column="5">_dispPublishEvents</name> :</label> <expr_stmt><expr pos:line="13563" pos:column="26">public <name pos:line="13563" pos:column="33">IDispatch</name>
    <block pos:line="13564" pos:column="5">{
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="13567" pos:column="1">#<cpp:directive pos:line="13567" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="13567" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="13569" pos:column="5">typedef <type><struct pos:line="13569" pos:column="13">struct <name pos:line="13569" pos:column="20">_dispPublishEventsVtbl</name>
    <block pos:line="13570" pos:column="5">{<public type="default" pos:line="13570" pos:column="6">
        <function_decl><type><name pos:line="13571" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="13573" pos:column="9">HRESULT</name></type> ( <name pos:line="13573" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13573" pos:column="37">*</type:modifier><name pos:line="13573" pos:column="38">QueryInterface</name> )<parameter_list pos:line="13573" pos:column="54">( 
            <param><decl><type><name pos:line="13574" pos:column="13">_dispPublishEvents</name> <type:modifier pos:line="13574" pos:column="32">*</type:modifier></type> <name pos:line="13574" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13575" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13575" pos:column="24">__RPC__in</name> <name pos:line="13575" pos:column="34">REFIID</name></type> <name pos:line="13575" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="13576" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="13577" pos:column="13">__RPC__deref_out</name>  <name pos:line="13577" pos:column="31">void</name> <type:modifier pos:line="13577" pos:column="36">*</type:modifier><type:modifier pos:line="13577" pos:column="37">*</type:modifier></type><name pos:line="13577" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13579" pos:column="9">ULONG</name></type> ( <name pos:line="13579" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13579" pos:column="35">*</type:modifier><name pos:line="13579" pos:column="36">AddRef</name> )<parameter_list pos:line="13579" pos:column="44">( 
            <param><decl><type><name pos:line="13580" pos:column="13">_dispPublishEvents</name> <type:modifier pos:line="13580" pos:column="32">*</type:modifier></type> <name pos:line="13580" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13582" pos:column="9">ULONG</name></type> ( <name pos:line="13582" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="13582" pos:column="35">*</type:modifier><name pos:line="13582" pos:column="36">Release</name> )<parameter_list pos:line="13582" pos:column="45">( 
            <param><decl><type><name pos:line="13583" pos:column="13">_dispPublishEvents</name> <type:modifier pos:line="13583" pos:column="32">*</type:modifier></type> <name pos:line="13583" pos:column="34">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13585" pos:column="9">HRESULT</name></type> ( <name pos:line="13585" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13585" pos:column="37">*</type:modifier><name pos:line="13585" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="13585" pos:column="56">( 
            <param><decl><type><name pos:line="13586" pos:column="13">_dispPublishEvents</name> <type:modifier pos:line="13586" pos:column="32">*</type:modifier></type> <name pos:line="13586" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13587" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13587" pos:column="25">__RPC__out</name> <name pos:line="13587" pos:column="36">UINT</name> <type:modifier pos:line="13587" pos:column="41">*</type:modifier></type><name pos:line="13587" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="13589" pos:column="9">HRESULT</name></type> ( <name pos:line="13589" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="13589" pos:column="37">*</type:modifier><name pos:line="13589" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="13589" pos:column="51">( 
            <param><decl><type><name pos:line="13590" pos:column="13">_dispPublishEvents</name> <type:modifier pos:line="13590" pos:column="32">*</type:modifier></type> <name pos:line="13590" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13591" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13591" pos:column="24">UINT</name></type> <name pos:line="13591" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="13592" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13592" pos:column="24">LCID</name></type> <name pos:line="13592" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="13593" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13593" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="13593" pos:column="46">ITypeInfo</name> <type:modifier pos:line="13593" pos:column="56">*</type:modifier><type:modifier pos:line="13593" pos:column="57">*</type:modifier></type><name pos:line="13593" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13595" pos:column="9">HRESULT</name> <argument_list pos:line="13595" pos:column="17">( <argument pos:line="13595" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="13595" pos:column="53">(</op:operator> 
            <name pos:line="13596" pos:column="13">_dispPublishEvents</name> <op:operator pos:line="13596" pos:column="32">*</op:operator> <name pos:line="13596" pos:column="34">This</name><op:operator pos:line="13596" pos:column="38">,</op:operator>
            <comment type="block" pos:line="13597" pos:column="13">/* [in] */</comment> <name pos:line="13597" pos:column="24">__RPC__in</name> <name pos:line="13597" pos:column="34">REFIID</name> <name pos:line="13597" pos:column="41">riid</name><op:operator pos:line="13597" pos:column="45">,</op:operator>
            <comment type="block" pos:line="13598" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="13598" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="13598" pos:column="54">(<argument pos:line="13598" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="13598" pos:column="63">LPOLESTR</name> <op:operator pos:line="13598" pos:column="72">*</op:operator><name pos:line="13598" pos:column="73">rgszNames</name><op:operator pos:line="13598" pos:column="82">,</op:operator>
            <comment type="block" pos:line="13599" pos:column="13">/* [range][in] */</comment> <name pos:line="13599" pos:column="31">UINT</name> <name pos:line="13599" pos:column="36">cNames</name><op:operator pos:line="13599" pos:column="42">,</op:operator>
            <comment type="block" pos:line="13600" pos:column="13">/* [in] */</comment> <name pos:line="13600" pos:column="24">LCID</name> <name pos:line="13600" pos:column="29">lcid</name><op:operator pos:line="13600" pos:column="33">,</op:operator>
            <comment type="block" pos:line="13601" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="13601" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="13601" pos:column="56">(<argument pos:line="13601" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="13601" pos:column="65">DISPID</name> <op:operator pos:line="13601" pos:column="72">*</op:operator><name pos:line="13601" pos:column="73">rgDispId</name><op:operator pos:line="13601" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="13603" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="13603" pos:column="23">HRESULT</name></type> ( <name pos:line="13603" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="13603" pos:column="51">*</type:modifier><name pos:line="13603" pos:column="52">Invoke</name> )<parameter_list pos:line="13603" pos:column="60">( 
            <param><decl><type><name pos:line="13604" pos:column="13">_dispPublishEvents</name> <type:modifier pos:line="13604" pos:column="32">*</type:modifier></type> <name pos:line="13604" pos:column="34">This</name></decl></param>,
            <comment type="block" pos:line="13605" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13605" pos:column="24">DISPID</name></type> <name pos:line="13605" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="13606" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13606" pos:column="24">REFIID</name></type> <name pos:line="13606" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="13607" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13607" pos:column="24">LCID</name></type> <name pos:line="13607" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="13608" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="13608" pos:column="24">WORD</name></type> <name pos:line="13608" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="13609" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="13609" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="13609" pos:column="40">*</type:modifier></type><name pos:line="13609" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="13610" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13610" pos:column="25">VARIANT</name> <type:modifier pos:line="13610" pos:column="33">*</type:modifier></type><name pos:line="13610" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="13611" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13611" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="13611" pos:column="35">*</type:modifier></type><name pos:line="13611" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="13612" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="13612" pos:column="25">UINT</name> <type:modifier pos:line="13612" pos:column="30">*</type:modifier></type><name pos:line="13612" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13614" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="13615" pos:column="7">_dispPublishEventsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="13617" pos:column="5">interface</name></type> <name pos:line="13617" pos:column="15">_dispPublishEvents</name>
    <argument_list pos:line="13618" pos:column="5">{
        <argument><expr><name pos:line="13619" pos:column="9">CONST_VTBL</name> struct <name pos:line="13619" pos:column="27">_dispPublishEventsVtbl</name> <op:operator pos:line="13619" pos:column="50">*</op:operator><name pos:line="13619" pos:column="51">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="13624" pos:column="1">#<cpp:directive pos:line="13624" pos:column="2">ifdef</cpp:directive> <name pos:line="13624" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="13627" pos:column="1">#<cpp:directive pos:line="13627" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13627" pos:column="9">_dispPublishEvents_QueryInterface</name><parameter_list pos:line="13627" pos:column="42">(<param><type><name pos:line="13627" pos:column="43">This</name></type></param>,<param><type><name pos:line="13627" pos:column="48">riid</name></type></param>,<param><type><name pos:line="13627" pos:column="53">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13628" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="13630" pos:column="1">#<cpp:directive pos:line="13630" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13630" pos:column="9">_dispPublishEvents_AddRef</name><parameter_list pos:line="13630" pos:column="34">(<param><type><name pos:line="13630" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13631" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="13633" pos:column="1">#<cpp:directive pos:line="13633" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13633" pos:column="9">_dispPublishEvents_Release</name><parameter_list pos:line="13633" pos:column="35">(<param><type><name pos:line="13633" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13634" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="13637" pos:column="1">#<cpp:directive pos:line="13637" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13637" pos:column="9">_dispPublishEvents_GetTypeInfoCount</name><parameter_list pos:line="13637" pos:column="44">(<param><type><name pos:line="13637" pos:column="45">This</name></type></param>,<param><type><name pos:line="13637" pos:column="50">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13638" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13640" pos:column="1">#<cpp:directive pos:line="13640" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13640" pos:column="9">_dispPublishEvents_GetTypeInfo</name><parameter_list pos:line="13640" pos:column="39">(<param><type><name pos:line="13640" pos:column="40">This</name></type></param>,<param><type><name pos:line="13640" pos:column="45">iTInfo</name></type></param>,<param><type><name pos:line="13640" pos:column="52">lcid</name></type></param>,<param><type><name pos:line="13640" pos:column="57">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13641" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="13643" pos:column="1">#<cpp:directive pos:line="13643" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13643" pos:column="9">_dispPublishEvents_GetIDsOfNames</name><parameter_list pos:line="13643" pos:column="41">(<param><type><name pos:line="13643" pos:column="42">This</name></type></param>,<param><type><name pos:line="13643" pos:column="47">riid</name></type></param>,<param><type><name pos:line="13643" pos:column="52">rgszNames</name></type></param>,<param><type><name pos:line="13643" pos:column="62">cNames</name></type></param>,<param><type><name pos:line="13643" pos:column="69">lcid</name></type></param>,<param><type><name pos:line="13643" pos:column="74">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13644" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="13646" pos:column="1">#<cpp:directive pos:line="13646" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13646" pos:column="9">_dispPublishEvents_Invoke</name><parameter_list pos:line="13646" pos:column="34">(<param><type><name pos:line="13646" pos:column="35">This</name></type></param>,<param><type><name pos:line="13646" pos:column="40">dispIdMember</name></type></param>,<param><type><name pos:line="13646" pos:column="53">riid</name></type></param>,<param><type><name pos:line="13646" pos:column="58">lcid</name></type></param>,<param><type><name pos:line="13646" pos:column="63">wFlags</name></type></param>,<param><type><name pos:line="13646" pos:column="70">pDispParams</name></type></param>,<param><type><name pos:line="13646" pos:column="82">pVarResult</name></type></param>,<param><type><name pos:line="13646" pos:column="93">pExcepInfo</name></type></param>,<param><type><name pos:line="13646" pos:column="104">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13647" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 

<cpp:endif pos:line="13649" pos:column="1">#<cpp:directive pos:line="13649" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="13649" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="13652" pos:column="1">#<cpp:directive pos:line="13652" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13652" pos:column="9">/* C style interface */</comment>


<cpp:endif pos:line="13655" pos:column="1">#<cpp:directive pos:line="13655" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13655" pos:column="9">/* ___dispPublishEvents_DISPINTERFACE_DEFINED__ */</comment>


<decl_stmt><decl><type><name pos:line="13658" pos:column="1">EXTERN_C</name> <specifier pos:line="13658" pos:column="10">const</specifier> <name pos:line="13658" pos:column="16">CLSID</name></type> <name pos:line="13658" pos:column="22">CLSID_PublishEvents</name></decl>;</decl_stmt>

<cpp:ifdef pos:line="13660" pos:column="1">#<cpp:directive pos:line="13660" pos:column="2">ifdef</cpp:directive> <name pos:line="13660" pos:column="8">__cplusplus</name></cpp:ifdef>

<decl_stmt><decl><type pos:line="13662" pos:column="1">class</type> <name pos:line="13662" pos:column="7">DECLSPEC_UUID</name><argument_list pos:line="13662" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="13662" pos:column="21">"045448ea-e8c1-4122-ac7b-d96d8e5c6e5b"</lit:literal></expr></argument>)</argument_list>
<name pos:line="13663" pos:column="1">PublishEvents</name></decl>;</decl_stmt>
<cpp:endif pos:line="13664" pos:column="1">#<cpp:directive pos:line="13664" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:ifndef pos:line="13666" pos:column="1">#<cpp:directive pos:line="13666" pos:column="2">ifndef</cpp:directive> <name pos:line="13666" pos:column="9">__Events2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="13667" pos:column="1">#<cpp:directive pos:line="13667" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13667" pos:column="9">__Events2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="13669" pos:column="1">/* interface Events2 */</comment>
<comment type="block" pos:line="13670" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="13673" pos:column="1">EXTERN_C</name> <specifier pos:line="13673" pos:column="10">const</specifier> <name pos:line="13673" pos:column="16">IID</name></type> <name pos:line="13673" pos:column="20">IID_Events2</name></decl>;</decl_stmt>

<cpp:if pos:line="13675" pos:column="1">#<cpp:directive pos:line="13675" pos:column="2">if</cpp:directive> <expr><call><name pos:line="13675" pos:column="5">defined</name><argument_list pos:line="13675" pos:column="12">(<argument><expr><name pos:line="13675" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="13675" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="13675" pos:column="29">!</op:operator><call><name pos:line="13675" pos:column="30">defined</name><argument_list pos:line="13675" pos:column="37">(<argument><expr><name pos:line="13675" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="13677" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="13677" pos:column="19">(<argument pos:line="13677" pos:column="20">"BED31E8C-F845-4397-AF13-6B82A6996C0D"</argument>)</argument_list></macro>
    <label><name pos:line="13678" pos:column="5">Events2</name> :</label> <expr_stmt><expr pos:line="13678" pos:column="15">public <name pos:line="13678" pos:column="22">Events</name>
    <block pos:line="13679" pos:column="5">{
    <expr pos:line="13680" pos:column="5">public<op:operator pos:line="13680" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="13681" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="13681" pos:column="81">HRESULT</name> <name pos:line="13681" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="13681" pos:column="107">get_ProjectItemsEvents</name><argument_list pos:line="13681" pos:column="129">( 
            <comment type="block" pos:line="13682" pos:column="13">/* [retval][out] */</comment> <argument pos:line="13682" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="13682" pos:column="54">/* external definition not present */</comment> ProjectItemsEvents **ppProjectItemsEvents</argument>)</argument_list></macro> <op:operator pos:line="13682" pos:column="135">=</op:operator> <lit:literal type="number" pos:line="13682" pos:column="137">0</lit:literal></expr>;
        
        <expr pos:line="13684" pos:column="9">virtual <comment type="block" pos:line="13684" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="13684" pos:column="81">HRESULT</name> <name pos:line="13684" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="13684" pos:column="107">get_ProjectsEvents</name><argument_list pos:line="13684" pos:column="125">( 
            <comment type="block" pos:line="13685" pos:column="13">/* [retval][out] */</comment> <argument pos:line="13685" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="13685" pos:column="54">/* external definition not present */</comment> ProjectsEvents **ppProjectsEvents</argument>)</argument_list></macro> <op:operator pos:line="13685" pos:column="127">=</op:operator> <lit:literal type="number" pos:line="13685" pos:column="129">0</lit:literal></expr>;
        
        <expr pos:line="13687" pos:column="9">virtual <comment type="block" pos:line="13687" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="13687" pos:column="81">HRESULT</name> <name pos:line="13687" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="13687" pos:column="107">get_TextDocumentKeyPressEvents</name><argument_list pos:line="13687" pos:column="137">( 
            <comment type="block" pos:line="13688" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="13688" pos:column="38">__RPC__in <comment type="block" pos:line="13688" pos:column="48">/* external definition not present */</comment> TextDocument *TextDocument</argument>,
            <comment type="block" pos:line="13689" pos:column="13">/* [retval][out] */</comment> <argument pos:line="13689" pos:column="33">__RPC__deref_out_opt TextDocumentKeyPressEvents	**ppEditorKeyPressEvents</argument>)</argument_list></macro> <op:operator pos:line="13689" pos:column="107">=</op:operator> <lit:literal type="number" pos:line="13689" pos:column="109">0</lit:literal></expr>;
        
        <expr pos:line="13691" pos:column="9">virtual <comment type="block" pos:line="13691" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="13691" pos:column="81">HRESULT</name> <name pos:line="13691" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="13691" pos:column="107">get_CodeModelEvents</name><argument_list pos:line="13691" pos:column="126">( 
            <comment type="block" pos:line="13692" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="13692" pos:column="38">__RPC__in <comment type="block" pos:line="13692" pos:column="48">/* external definition not present */</comment> CodeElement *Reserved</argument>,
            <comment type="block" pos:line="13693" pos:column="13">/* [retval][out] */</comment> <argument pos:line="13693" pos:column="33">__RPC__deref_out_opt CodeModelEvents	**ppdisp</argument>)</argument_list></macro> <op:operator pos:line="13693" pos:column="83">=</op:operator> <lit:literal type="number" pos:line="13693" pos:column="85">0</lit:literal></expr>;
        
        <expr pos:line="13695" pos:column="9">virtual <comment type="block" pos:line="13695" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="13695" pos:column="81">HRESULT</name> <name pos:line="13695" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="13695" pos:column="107">get_WindowVisibilityEvents</name><argument_list pos:line="13695" pos:column="133">( 
            <comment type="block" pos:line="13696" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="13696" pos:column="38">__RPC__in <comment type="block" pos:line="13696" pos:column="48">/* external definition not present */</comment> Window *WindowFilter</argument>,
            <comment type="block" pos:line="13697" pos:column="13">/* [retval][out] */</comment> <argument pos:line="13697" pos:column="33">__RPC__deref_out_opt WindowVisibilityEvents	**ppdisp</argument>)</argument_list></macro> <op:operator pos:line="13697" pos:column="91">=</op:operator> <lit:literal type="number" pos:line="13697" pos:column="93">0</lit:literal></expr>;
        
        <expr pos:line="13699" pos:column="9">virtual <comment type="block" pos:line="13699" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="13699" pos:column="81">HRESULT</name> <name pos:line="13699" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="13699" pos:column="107">get_DebuggerProcessEvents</name><argument_list pos:line="13699" pos:column="132">( 
            <comment type="block" pos:line="13700" pos:column="13">/* [retval][out] */</comment> <argument pos:line="13700" pos:column="33">__RPC__deref_out_opt DebuggerProcessEvents	**ppDebuggerProcessEvents</argument>)</argument_list></macro> <op:operator pos:line="13700" pos:column="108">=</op:operator> <lit:literal type="number" pos:line="13700" pos:column="110">0</lit:literal></expr>;
        
        <expr pos:line="13702" pos:column="9">virtual <comment type="block" pos:line="13702" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="13702" pos:column="81">HRESULT</name> <name pos:line="13702" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="13702" pos:column="107">get_DebuggerExpressionEvaluationEvents</name><argument_list pos:line="13702" pos:column="145">( 
            <comment type="block" pos:line="13703" pos:column="13">/* [retval][out] */</comment> <argument pos:line="13703" pos:column="33">__RPC__deref_out_opt DebuggerExpressionEvaluationEvents	**ppDebuggerExpressionEvalutionEvents</argument>)</argument_list></macro> <op:operator pos:line="13703" pos:column="128">=</op:operator> <lit:literal type="number" pos:line="13703" pos:column="130">0</lit:literal></expr>;
        
        <expr pos:line="13705" pos:column="9">virtual <comment type="block" pos:line="13705" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="13705" pos:column="81">HRESULT</name> <name pos:line="13705" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="13705" pos:column="107">get_PublishEvents</name><argument_list pos:line="13705" pos:column="124">( 
            <comment type="block" pos:line="13706" pos:column="13">/* [retval][out] */</comment> <argument pos:line="13706" pos:column="33">__RPC__deref_out_opt PublishEvents	**ppPublishEvents</argument>)</argument_list></macro> <op:operator pos:line="13706" pos:column="92">=</op:operator> <lit:literal type="number" pos:line="13706" pos:column="94">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="13710" pos:column="1">#<cpp:directive pos:line="13710" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="13710" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="13712" pos:column="5">typedef <type><struct pos:line="13712" pos:column="13">struct <name pos:line="13712" pos:column="20">Events2Vtbl</name>
    <block pos:line="13713" pos:column="5">{<public type="default" pos:line="13713" pos:column="6">
        <decl_stmt><decl><type><name pos:line="13714" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="13716" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="13716" pos:column="46">HRESULT</name></type> ( <name pos:line="13716" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="13716" pos:column="74">*</type:modifier><name pos:line="13716" pos:column="75">QueryInterface</name> )<parameter_list pos:line="13716" pos:column="91">( 
            <param><decl><type><name pos:line="13717" pos:column="13">Events2</name> <type:modifier pos:line="13717" pos:column="21">*</type:modifier></type> <name pos:line="13717" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13718" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="13718" pos:column="47">struct <name pos:line="13718" pos:column="54">GUID</name> <type:modifier pos:line="13718" pos:column="59">*</type:modifier></type><name pos:line="13718" pos:column="60">riid</name></decl><op:operator pos:line="13718" pos:column="64">,</op:operator>
            <comment type="block" pos:line="13719" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="13719" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="13719" pos:column="59">void</name> <type:modifier pos:line="13719" pos:column="64">*</type:modifier><type:modifier pos:line="13719" pos:column="65">*</type:modifier><name pos:line="13719" pos:column="66">ppvObj</name><op:operator pos:line="13719" pos:column="72">,</op:operator>
            <comment type="block" pos:line="13720" pos:column="13">/* [retval][out] */</comment> <name pos:line="13720" pos:column="33">__RPC__out</name> <name pos:line="13720" pos:column="44">void</name> <type:modifier pos:line="13720" pos:column="49">*</type:modifier><name pos:line="13720" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="13722" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="13722" pos:column="46">HRESULT</name></type> ( <name pos:line="13722" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="13722" pos:column="74">*</type:modifier><name pos:line="13722" pos:column="75">AddRef</name> )<parameter_list pos:line="13722" pos:column="83">( 
            <param><decl><type><name pos:line="13723" pos:column="13">Events2</name> <type:modifier pos:line="13723" pos:column="21">*</type:modifier></type> <name pos:line="13723" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13724" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13724" pos:column="33">__RPC__out</name> <name pos:line="13724" pos:column="44">unsigned</name> <name pos:line="13724" pos:column="53">long</name> <type:modifier pos:line="13724" pos:column="58">*</type:modifier></type><name pos:line="13724" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13726" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="13726" pos:column="46">HRESULT</name></type> ( <name pos:line="13726" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="13726" pos:column="74">*</type:modifier><name pos:line="13726" pos:column="75">Release</name> )<parameter_list pos:line="13726" pos:column="84">( 
            <param><decl><type><name pos:line="13727" pos:column="13">Events2</name> <type:modifier pos:line="13727" pos:column="21">*</type:modifier></type> <name pos:line="13727" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13728" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13728" pos:column="33">__RPC__out</name> <name pos:line="13728" pos:column="44">unsigned</name> <name pos:line="13728" pos:column="53">long</name> <type:modifier pos:line="13728" pos:column="58">*</type:modifier></type><name pos:line="13728" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13730" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="13730" pos:column="46">HRESULT</name></type> ( <name pos:line="13730" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="13730" pos:column="74">*</type:modifier><name pos:line="13730" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="13730" pos:column="93">( 
            <param><decl><type><name pos:line="13731" pos:column="13">Events2</name> <type:modifier pos:line="13731" pos:column="21">*</type:modifier></type> <name pos:line="13731" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13732" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="13732" pos:column="38">__RPC__out</name> <name pos:line="13732" pos:column="49">unsigned</name> <name pos:line="13732" pos:column="58">UINT</name> <type:modifier pos:line="13732" pos:column="63">*</type:modifier></type><name pos:line="13732" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="13733" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13733" pos:column="33">__RPC__out</name> <name pos:line="13733" pos:column="44">void</name> <type:modifier pos:line="13733" pos:column="49">*</type:modifier></type><name pos:line="13733" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13735" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="13735" pos:column="46">HRESULT</name></type> ( <name pos:line="13735" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="13735" pos:column="74">*</type:modifier><name pos:line="13735" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="13735" pos:column="88">( 
            <param><decl><type><name pos:line="13736" pos:column="13">Events2</name> <type:modifier pos:line="13736" pos:column="21">*</type:modifier></type> <name pos:line="13736" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13737" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="13737" pos:column="37">unsigned</name> <name pos:line="13737" pos:column="46">UINT</name></type> <name pos:line="13737" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="13738" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="13738" pos:column="37">unsigned</name> <name pos:line="13738" pos:column="46">long</name></type> <name pos:line="13738" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="13739" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="13739" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="13739" pos:column="59">void</name> <type:modifier pos:line="13739" pos:column="64">*</type:modifier><type:modifier pos:line="13739" pos:column="65">*</type:modifier></type><name pos:line="13739" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="13740" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13740" pos:column="33">__RPC__out</name> <name pos:line="13740" pos:column="44">void</name> <type:modifier pos:line="13740" pos:column="49">*</type:modifier></type><name pos:line="13740" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13742" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="13742" pos:column="46">HRESULT</name> <argument_list pos:line="13742" pos:column="54">( <argument pos:line="13742" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="13742" pos:column="90">(</op:operator> 
            <name pos:line="13743" pos:column="13">Events2</name> <op:operator pos:line="13743" pos:column="21">*</op:operator> <name pos:line="13743" pos:column="23">This</name><op:operator pos:line="13743" pos:column="27">,</op:operator>
            <comment type="block" pos:line="13744" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="13744" pos:column="37">__RPC__in</name> struct <name pos:line="13744" pos:column="54">GUID</name> <op:operator pos:line="13744" pos:column="59">*</op:operator><name pos:line="13744" pos:column="60">riid</name><op:operator pos:line="13744" pos:column="64">,</op:operator>
            <comment type="block" pos:line="13745" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="13745" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="13745" pos:column="57">signed</name> <name pos:line="13745" pos:column="64">char</name> <op:operator pos:line="13745" pos:column="69">*</op:operator><op:operator pos:line="13745" pos:column="70">*</op:operator><name pos:line="13745" pos:column="71">rgszNames</name><op:operator pos:line="13745" pos:column="80">,</op:operator>
            <comment type="block" pos:line="13746" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="13746" pos:column="37">unsigned</name> <name pos:line="13746" pos:column="46">UINT</name> <name pos:line="13746" pos:column="51">cNames</name><op:operator pos:line="13746" pos:column="57">,</op:operator>
            <comment type="block" pos:line="13747" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="13747" pos:column="37">unsigned</name> <name pos:line="13747" pos:column="46">long</name> <name pos:line="13747" pos:column="51">lcid</name><op:operator pos:line="13747" pos:column="55">,</op:operator>
            <comment type="block" pos:line="13748" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="13748" pos:column="38">__RPC__out</name> <name pos:line="13748" pos:column="49">signed</name> <name pos:line="13748" pos:column="56">long</name> <op:operator pos:line="13748" pos:column="61">*</op:operator><name pos:line="13748" pos:column="62">rgdispid</name><op:operator pos:line="13748" pos:column="70">,</op:operator>
            <comment type="block" pos:line="13749" pos:column="13">/* [retval][out] */</comment> <name pos:line="13749" pos:column="33">__RPC__out</name> <name pos:line="13749" pos:column="44">void</name> <op:operator pos:line="13749" pos:column="49">*</op:operator><name pos:line="13749" pos:column="50">retval</name><op:operator pos:line="13749" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="13751" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="13751" pos:column="46">HRESULT</name> <argument_list pos:line="13751" pos:column="54">( <argument pos:line="13751" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="13751" pos:column="83">(</op:operator> 
            <name pos:line="13752" pos:column="13">Events2</name> <op:operator pos:line="13752" pos:column="21">*</op:operator> <name pos:line="13752" pos:column="23">This</name><op:operator pos:line="13752" pos:column="27">,</op:operator>
            <comment type="block" pos:line="13753" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="13753" pos:column="37">signed</name> <name pos:line="13753" pos:column="44">long</name> <name pos:line="13753" pos:column="49">dispidMember</name><op:operator pos:line="13753" pos:column="61">,</op:operator>
            <comment type="block" pos:line="13754" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="13754" pos:column="37">__RPC__in</name> struct <name pos:line="13754" pos:column="54">GUID</name> <op:operator pos:line="13754" pos:column="59">*</op:operator><name pos:line="13754" pos:column="60">riid</name><op:operator pos:line="13754" pos:column="64">,</op:operator>
            <comment type="block" pos:line="13755" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="13755" pos:column="37">unsigned</name> <name pos:line="13755" pos:column="46">long</name> <name pos:line="13755" pos:column="51">lcid</name><op:operator pos:line="13755" pos:column="55">,</op:operator>
            <comment type="block" pos:line="13756" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="13756" pos:column="37">unsigned</name> <name pos:line="13756" pos:column="46">short</name> <name pos:line="13756" pos:column="52">wFlags</name><op:operator pos:line="13756" pos:column="58">,</op:operator>
            <comment type="block" pos:line="13757" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="13757" pos:column="37">__RPC__in</name> struct <name pos:line="13757" pos:column="54">DISPPARAMS</name> <op:operator pos:line="13757" pos:column="65">*</op:operator><name pos:line="13757" pos:column="66">pdispparams</name><op:operator pos:line="13757" pos:column="77">,</op:operator>
            <comment type="block" pos:line="13758" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="13758" pos:column="38">__RPC__out</name> <name pos:line="13758" pos:column="49">VARIANT</name> <op:operator pos:line="13758" pos:column="57">*</op:operator><name pos:line="13758" pos:column="58">pvarResult</name><op:operator pos:line="13758" pos:column="68">,</op:operator>
            <comment type="block" pos:line="13759" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="13759" pos:column="38">__RPC__out</name> struct <name pos:line="13759" pos:column="56">EXCEPINFO</name> <op:operator pos:line="13759" pos:column="66">*</op:operator><name pos:line="13759" pos:column="67">pexcepinfo</name><op:operator pos:line="13759" pos:column="77">,</op:operator>
            <comment type="block" pos:line="13760" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="13760" pos:column="38">__RPC__out</name> <name pos:line="13760" pos:column="49">unsigned</name> <name pos:line="13760" pos:column="58">UINT</name> <op:operator pos:line="13760" pos:column="63">*</op:operator><name pos:line="13760" pos:column="64">puArgErr</name><op:operator pos:line="13760" pos:column="72">,</op:operator>
            <comment type="block" pos:line="13761" pos:column="13">/* [retval][out] */</comment> <name pos:line="13761" pos:column="33">__RPC__out</name> <name pos:line="13761" pos:column="44">void</name> <op:operator pos:line="13761" pos:column="49">*</op:operator><name pos:line="13761" pos:column="50">retval</name><op:operator pos:line="13761" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="13763" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13763" pos:column="43">HRESULT</name></type> ( <name pos:line="13763" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13763" pos:column="71">*</type:modifier><name pos:line="13763" pos:column="72">get_CommandBarEvents</name> )<parameter_list pos:line="13763" pos:column="94">( 
            <param><decl><type><name pos:line="13764" pos:column="13">Events2</name> <type:modifier pos:line="13764" pos:column="21">*</type:modifier></type> <name pos:line="13764" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13765" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="13765" pos:column="37">__RPC__in_opt</name> <name pos:line="13765" pos:column="51">IDispatch</name> <type:modifier pos:line="13765" pos:column="61">*</type:modifier></type><name pos:line="13765" pos:column="62">CommandBarControl</name></decl></param>,
            <comment type="block" pos:line="13766" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13766" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="13766" pos:column="54">IDispatch</name> <type:modifier pos:line="13766" pos:column="64">*</type:modifier><type:modifier pos:line="13766" pos:column="65">*</type:modifier></type><name pos:line="13766" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13768" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13768" pos:column="43">HRESULT</name></type> ( <name pos:line="13768" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13768" pos:column="71">*</type:modifier><name pos:line="13768" pos:column="72">get_CommandEvents</name> )<parameter_list pos:line="13768" pos:column="91">( 
            <param><decl><type><name pos:line="13769" pos:column="13">Events2</name> <type:modifier pos:line="13769" pos:column="21">*</type:modifier></type> <name pos:line="13769" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13770" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="13770" pos:column="37">__RPC__in</name> <name pos:line="13770" pos:column="47">BSTR</name></type> <name pos:line="13770" pos:column="52">Guid</name></decl></param>,
            <comment type="block" pos:line="13771" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="13771" pos:column="37">signed</name> <name pos:line="13771" pos:column="44">long</name></type> <name pos:line="13771" pos:column="49">ID</name></decl></param>,
            <comment type="block" pos:line="13772" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13772" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="13772" pos:column="54">*</type:modifier><type:modifier pos:line="13772" pos:column="55">*</type:modifier></type><name pos:line="13772" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13774" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13774" pos:column="43">HRESULT</name></type> ( <name pos:line="13774" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13774" pos:column="71">*</type:modifier><name pos:line="13774" pos:column="72">get_SelectionEvents</name> )<parameter_list pos:line="13774" pos:column="93">( 
            <param><decl><type><name pos:line="13775" pos:column="13">Events2</name> <type:modifier pos:line="13775" pos:column="21">*</type:modifier></type> <name pos:line="13775" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13776" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13776" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="13776" pos:column="54">*</type:modifier><type:modifier pos:line="13776" pos:column="55">*</type:modifier></type><name pos:line="13776" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13778" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13778" pos:column="43">HRESULT</name></type> ( <name pos:line="13778" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13778" pos:column="71">*</type:modifier><name pos:line="13778" pos:column="72">get_SolutionEvents</name> )<parameter_list pos:line="13778" pos:column="92">( 
            <param><decl><type><name pos:line="13779" pos:column="13">Events2</name> <type:modifier pos:line="13779" pos:column="21">*</type:modifier></type> <name pos:line="13779" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13780" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13780" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="13780" pos:column="54">*</type:modifier><type:modifier pos:line="13780" pos:column="55">*</type:modifier></type><name pos:line="13780" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13782" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13782" pos:column="43">HRESULT</name></type> ( <name pos:line="13782" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13782" pos:column="71">*</type:modifier><name pos:line="13782" pos:column="72">get_BuildEvents</name> )<parameter_list pos:line="13782" pos:column="89">( 
            <param><decl><type><name pos:line="13783" pos:column="13">Events2</name> <type:modifier pos:line="13783" pos:column="21">*</type:modifier></type> <name pos:line="13783" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13784" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13784" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="13784" pos:column="54">*</type:modifier><type:modifier pos:line="13784" pos:column="55">*</type:modifier></type><name pos:line="13784" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13786" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13786" pos:column="43">HRESULT</name></type> ( <name pos:line="13786" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13786" pos:column="71">*</type:modifier><name pos:line="13786" pos:column="72">get_WindowEvents</name> )<parameter_list pos:line="13786" pos:column="90">( 
            <param><decl><type><name pos:line="13787" pos:column="13">Events2</name> <type:modifier pos:line="13787" pos:column="21">*</type:modifier></type> <name pos:line="13787" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13788" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="13788" pos:column="37">__RPC__in_opt</name> <name pos:line="13788" pos:column="51">Window</name> <type:modifier pos:line="13788" pos:column="58">*</type:modifier></type><name pos:line="13788" pos:column="59">WindowFilter</name></decl></param>,
            <comment type="block" pos:line="13789" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13789" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="13789" pos:column="54">*</type:modifier><type:modifier pos:line="13789" pos:column="55">*</type:modifier></type><name pos:line="13789" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13791" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13791" pos:column="43">HRESULT</name></type> ( <name pos:line="13791" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13791" pos:column="71">*</type:modifier><name pos:line="13791" pos:column="72">get_OutputWindowEvents</name> )<parameter_list pos:line="13791" pos:column="96">( 
            <param><decl><type><name pos:line="13792" pos:column="13">Events2</name> <type:modifier pos:line="13792" pos:column="21">*</type:modifier></type> <name pos:line="13792" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13793" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="13793" pos:column="37">__RPC__in</name> <name pos:line="13793" pos:column="47">BSTR</name></type> <name pos:line="13793" pos:column="52">Pane</name></decl></param>,
            <comment type="block" pos:line="13794" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13794" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="13794" pos:column="54">*</type:modifier><type:modifier pos:line="13794" pos:column="55">*</type:modifier></type><name pos:line="13794" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13796" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13796" pos:column="43">HRESULT</name></type> ( <name pos:line="13796" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13796" pos:column="71">*</type:modifier><name pos:line="13796" pos:column="72">get_FindEvents</name> )<parameter_list pos:line="13796" pos:column="88">( 
            <param><decl><type><name pos:line="13797" pos:column="13">Events2</name> <type:modifier pos:line="13797" pos:column="21">*</type:modifier></type> <name pos:line="13797" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13798" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13798" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="13798" pos:column="54">*</type:modifier><type:modifier pos:line="13798" pos:column="55">*</type:modifier></type><name pos:line="13798" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13800" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13800" pos:column="43">HRESULT</name></type> ( <name pos:line="13800" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13800" pos:column="71">*</type:modifier><name pos:line="13800" pos:column="72">get_TaskListEvents</name> )<parameter_list pos:line="13800" pos:column="92">( 
            <param><decl><type><name pos:line="13801" pos:column="13">Events2</name> <type:modifier pos:line="13801" pos:column="21">*</type:modifier></type> <name pos:line="13801" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13802" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="13802" pos:column="37">__RPC__in</name> <name pos:line="13802" pos:column="47">BSTR</name></type> <name pos:line="13802" pos:column="52">Filter</name></decl></param>,
            <comment type="block" pos:line="13803" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13803" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="13803" pos:column="54">*</type:modifier><type:modifier pos:line="13803" pos:column="55">*</type:modifier></type><name pos:line="13803" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13805" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13805" pos:column="43">HRESULT</name></type> ( <name pos:line="13805" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13805" pos:column="71">*</type:modifier><name pos:line="13805" pos:column="72">get_DTEEvents</name> )<parameter_list pos:line="13805" pos:column="87">( 
            <param><decl><type><name pos:line="13806" pos:column="13">Events2</name> <type:modifier pos:line="13806" pos:column="21">*</type:modifier></type> <name pos:line="13806" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13807" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13807" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="13807" pos:column="54">*</type:modifier><type:modifier pos:line="13807" pos:column="55">*</type:modifier></type><name pos:line="13807" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13809" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13809" pos:column="43">HRESULT</name></type> ( <name pos:line="13809" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13809" pos:column="71">*</type:modifier><name pos:line="13809" pos:column="72">get_DocumentEvents</name> )<parameter_list pos:line="13809" pos:column="92">( 
            <param><decl><type><name pos:line="13810" pos:column="13">Events2</name> <type:modifier pos:line="13810" pos:column="21">*</type:modifier></type> <name pos:line="13810" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13811" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="13811" pos:column="37">__RPC__in_opt</name> <name pos:line="13811" pos:column="51">Document</name> <type:modifier pos:line="13811" pos:column="60">*</type:modifier></type><name pos:line="13811" pos:column="61">Document</name></decl></param>,
            <comment type="block" pos:line="13812" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13812" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="13812" pos:column="54">*</type:modifier><type:modifier pos:line="13812" pos:column="55">*</type:modifier></type><name pos:line="13812" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13814" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13814" pos:column="43">HRESULT</name></type> ( <name pos:line="13814" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13814" pos:column="71">*</type:modifier><name pos:line="13814" pos:column="72">get_SolutionItemsEvents</name> )<parameter_list pos:line="13814" pos:column="97">( 
            <param><decl><type><name pos:line="13815" pos:column="13">Events2</name> <type:modifier pos:line="13815" pos:column="21">*</type:modifier></type> <name pos:line="13815" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13816" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13816" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="13816" pos:column="54">*</type:modifier><type:modifier pos:line="13816" pos:column="55">*</type:modifier></type><name pos:line="13816" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13818" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13818" pos:column="43">HRESULT</name></type> ( <name pos:line="13818" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13818" pos:column="71">*</type:modifier><name pos:line="13818" pos:column="72">get_MiscFilesEvents</name> )<parameter_list pos:line="13818" pos:column="93">( 
            <param><decl><type><name pos:line="13819" pos:column="13">Events2</name> <type:modifier pos:line="13819" pos:column="21">*</type:modifier></type> <name pos:line="13819" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13820" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13820" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="13820" pos:column="54">*</type:modifier><type:modifier pos:line="13820" pos:column="55">*</type:modifier></type><name pos:line="13820" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13822" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13822" pos:column="43">HRESULT</name></type> ( <name pos:line="13822" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13822" pos:column="71">*</type:modifier><name pos:line="13822" pos:column="72">get_DebuggerEvents</name> )<parameter_list pos:line="13822" pos:column="92">( 
            <param><decl><type><name pos:line="13823" pos:column="13">Events2</name> <type:modifier pos:line="13823" pos:column="21">*</type:modifier></type> <name pos:line="13823" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13824" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13824" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="13824" pos:column="54">*</type:modifier><type:modifier pos:line="13824" pos:column="55">*</type:modifier></type><name pos:line="13824" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13826" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="13826" pos:column="43">HRESULT</name></type> ( <name pos:line="13826" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="13826" pos:column="71">*</type:modifier><name pos:line="13826" pos:column="72">get_TextEditorEvents</name> )<parameter_list pos:line="13826" pos:column="94">( 
            <param><decl><type><name pos:line="13827" pos:column="13">Events2</name> <type:modifier pos:line="13827" pos:column="21">*</type:modifier></type> <name pos:line="13827" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13828" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="13828" pos:column="37">__RPC__in_opt</name> <name pos:line="13828" pos:column="51">TextDocument</name> <type:modifier pos:line="13828" pos:column="64">*</type:modifier></type><name pos:line="13828" pos:column="65">TextDocumentFilter</name></decl></param>,
            <comment type="block" pos:line="13829" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13829" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="13829" pos:column="54">*</type:modifier><type:modifier pos:line="13829" pos:column="55">*</type:modifier></type><name pos:line="13829" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13831" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="13831" pos:column="34">HRESULT</name></type> ( <name pos:line="13831" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="13831" pos:column="62">*</type:modifier><name pos:line="13831" pos:column="63">GetObject</name> )<parameter_list pos:line="13831" pos:column="74">( 
            <param><decl><type><name pos:line="13832" pos:column="13">Events2</name> <type:modifier pos:line="13832" pos:column="21">*</type:modifier></type> <name pos:line="13832" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13833" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="13833" pos:column="37">__RPC__in</name> <name pos:line="13833" pos:column="47">BSTR</name></type> <name pos:line="13833" pos:column="52">Name</name></decl></param>,
            <comment type="block" pos:line="13834" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13834" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="13834" pos:column="54">IDispatch</name> <type:modifier pos:line="13834" pos:column="64">*</type:modifier><type:modifier pos:line="13834" pos:column="65">*</type:modifier></type><name pos:line="13834" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13836" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="13836" pos:column="73">HRESULT</name></type> ( <name pos:line="13836" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="13836" pos:column="101">*</type:modifier><name pos:line="13836" pos:column="102">get_ProjectItemsEvents</name> )<parameter_list pos:line="13836" pos:column="126">( 
            <param><decl><type><name pos:line="13837" pos:column="13">Events2</name> <type:modifier pos:line="13837" pos:column="21">*</type:modifier></type> <name pos:line="13837" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13838" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13838" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="13838" pos:column="54">/* external definition not present */</comment> <name pos:line="13838" pos:column="92">ProjectItemsEvents</name> <type:modifier pos:line="13838" pos:column="111">*</type:modifier><type:modifier pos:line="13838" pos:column="112">*</type:modifier></type><name pos:line="13838" pos:column="113">ppProjectItemsEvents</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13840" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="13840" pos:column="73">HRESULT</name></type> ( <name pos:line="13840" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="13840" pos:column="101">*</type:modifier><name pos:line="13840" pos:column="102">get_ProjectsEvents</name> )<parameter_list pos:line="13840" pos:column="122">( 
            <param><decl><type><name pos:line="13841" pos:column="13">Events2</name> <type:modifier pos:line="13841" pos:column="21">*</type:modifier></type> <name pos:line="13841" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13842" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13842" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="13842" pos:column="54">/* external definition not present */</comment> <name pos:line="13842" pos:column="92">ProjectsEvents</name> <type:modifier pos:line="13842" pos:column="107">*</type:modifier><type:modifier pos:line="13842" pos:column="108">*</type:modifier></type><name pos:line="13842" pos:column="109">ppProjectsEvents</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13844" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="13844" pos:column="73">HRESULT</name></type> ( <name pos:line="13844" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="13844" pos:column="101">*</type:modifier><name pos:line="13844" pos:column="102">get_TextDocumentKeyPressEvents</name> )<parameter_list pos:line="13844" pos:column="134">( 
            <param><decl><type><name pos:line="13845" pos:column="13">Events2</name> <type:modifier pos:line="13845" pos:column="21">*</type:modifier></type> <name pos:line="13845" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13846" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="13846" pos:column="38">__RPC__in</name> <comment type="block" pos:line="13846" pos:column="48">/* external definition not present */</comment> <name pos:line="13846" pos:column="86">TextDocument</name> <type:modifier pos:line="13846" pos:column="99">*</type:modifier></type><name pos:line="13846" pos:column="100">TextDocument</name></decl></param>,
            <comment type="block" pos:line="13847" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13847" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="13847" pos:column="54">TextDocumentKeyPressEvents</name>	<type:modifier pos:line="13847" pos:column="81">*</type:modifier><type:modifier pos:line="13847" pos:column="82">*</type:modifier></type><name pos:line="13847" pos:column="83">ppEditorKeyPressEvents</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13849" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="13849" pos:column="73">HRESULT</name></type> ( <name pos:line="13849" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="13849" pos:column="101">*</type:modifier><name pos:line="13849" pos:column="102">get_CodeModelEvents</name> )<parameter_list pos:line="13849" pos:column="123">( 
            <param><decl><type><name pos:line="13850" pos:column="13">Events2</name> <type:modifier pos:line="13850" pos:column="21">*</type:modifier></type> <name pos:line="13850" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13851" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="13851" pos:column="38">__RPC__in</name> <comment type="block" pos:line="13851" pos:column="48">/* external definition not present */</comment> <name pos:line="13851" pos:column="86">CodeElement</name> <type:modifier pos:line="13851" pos:column="98">*</type:modifier></type><name pos:line="13851" pos:column="99">Reserved</name></decl></param>,
            <comment type="block" pos:line="13852" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13852" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="13852" pos:column="54">CodeModelEvents</name>	<type:modifier pos:line="13852" pos:column="73">*</type:modifier><type:modifier pos:line="13852" pos:column="74">*</type:modifier></type><name pos:line="13852" pos:column="75">ppdisp</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13854" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="13854" pos:column="73">HRESULT</name></type> ( <name pos:line="13854" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="13854" pos:column="101">*</type:modifier><name pos:line="13854" pos:column="102">get_WindowVisibilityEvents</name> )<parameter_list pos:line="13854" pos:column="130">( 
            <param><decl><type><name pos:line="13855" pos:column="13">Events2</name> <type:modifier pos:line="13855" pos:column="21">*</type:modifier></type> <name pos:line="13855" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13856" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="13856" pos:column="38">__RPC__in</name> <comment type="block" pos:line="13856" pos:column="48">/* external definition not present */</comment> <name pos:line="13856" pos:column="86">Window</name> <type:modifier pos:line="13856" pos:column="93">*</type:modifier></type><name pos:line="13856" pos:column="94">WindowFilter</name></decl></param>,
            <comment type="block" pos:line="13857" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13857" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="13857" pos:column="54">WindowVisibilityEvents</name>	<type:modifier pos:line="13857" pos:column="81">*</type:modifier><type:modifier pos:line="13857" pos:column="82">*</type:modifier></type><name pos:line="13857" pos:column="83">ppdisp</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13859" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="13859" pos:column="73">HRESULT</name></type> ( <name pos:line="13859" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="13859" pos:column="101">*</type:modifier><name pos:line="13859" pos:column="102">get_DebuggerProcessEvents</name> )<parameter_list pos:line="13859" pos:column="129">( 
            <param><decl><type><name pos:line="13860" pos:column="13">Events2</name> <type:modifier pos:line="13860" pos:column="21">*</type:modifier></type> <name pos:line="13860" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13861" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13861" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="13861" pos:column="54">DebuggerProcessEvents</name>	<type:modifier pos:line="13861" pos:column="81">*</type:modifier><type:modifier pos:line="13861" pos:column="82">*</type:modifier></type><name pos:line="13861" pos:column="83">ppDebuggerProcessEvents</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13863" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="13863" pos:column="73">HRESULT</name></type> ( <name pos:line="13863" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="13863" pos:column="101">*</type:modifier><name pos:line="13863" pos:column="102">get_DebuggerExpressionEvaluationEvents</name> )<parameter_list pos:line="13863" pos:column="142">( 
            <param><decl><type><name pos:line="13864" pos:column="13">Events2</name> <type:modifier pos:line="13864" pos:column="21">*</type:modifier></type> <name pos:line="13864" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13865" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13865" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="13865" pos:column="54">DebuggerExpressionEvaluationEvents</name>	<type:modifier pos:line="13865" pos:column="89">*</type:modifier><type:modifier pos:line="13865" pos:column="90">*</type:modifier></type><name pos:line="13865" pos:column="91">ppDebuggerExpressionEvalutionEvents</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="13867" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="13867" pos:column="73">HRESULT</name></type> ( <name pos:line="13867" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="13867" pos:column="101">*</type:modifier><name pos:line="13867" pos:column="102">get_PublishEvents</name> )<parameter_list pos:line="13867" pos:column="121">( 
            <param><decl><type><name pos:line="13868" pos:column="13">Events2</name> <type:modifier pos:line="13868" pos:column="21">*</type:modifier></type> <name pos:line="13868" pos:column="23">This</name></decl></param>,
            <comment type="block" pos:line="13869" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="13869" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="13869" pos:column="54">PublishEvents</name>	<type:modifier pos:line="13869" pos:column="73">*</type:modifier><type:modifier pos:line="13869" pos:column="74">*</type:modifier></type><name pos:line="13869" pos:column="75">ppPublishEvents</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="13871" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="13872" pos:column="7">Events2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="13874" pos:column="5">interface</name></type> <name pos:line="13874" pos:column="15">Events2</name>
    <argument_list pos:line="13875" pos:column="5">{
        <argument><expr><name pos:line="13876" pos:column="9">CONST_VTBL</name> struct <name pos:line="13876" pos:column="27">Events2Vtbl</name> <op:operator pos:line="13876" pos:column="39">*</op:operator><name pos:line="13876" pos:column="40">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="13881" pos:column="1">#<cpp:directive pos:line="13881" pos:column="2">ifdef</cpp:directive> <name pos:line="13881" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="13884" pos:column="1">#<cpp:directive pos:line="13884" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13884" pos:column="9">Events2_QueryInterface</name><parameter_list pos:line="13884" pos:column="31">(<param><type><name pos:line="13884" pos:column="32">This</name></type></param>,<param><type><name pos:line="13884" pos:column="37">riid</name></type></param>,<param><type><name pos:line="13884" pos:column="42">ppvObj</name></type></param>,<param><type><name pos:line="13884" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13885" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13887" pos:column="1">#<cpp:directive pos:line="13887" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13887" pos:column="9">Events2_AddRef</name><parameter_list pos:line="13887" pos:column="23">(<param><type><name pos:line="13887" pos:column="24">This</name></type></param>,<param><type><name pos:line="13887" pos:column="29">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13888" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13890" pos:column="1">#<cpp:directive pos:line="13890" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13890" pos:column="9">Events2_Release</name><parameter_list pos:line="13890" pos:column="24">(<param><type><name pos:line="13890" pos:column="25">This</name></type></param>,<param><type><name pos:line="13890" pos:column="30">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13891" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13893" pos:column="1">#<cpp:directive pos:line="13893" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13893" pos:column="9">Events2_GetTypeInfoCount</name><parameter_list pos:line="13893" pos:column="33">(<param><type><name pos:line="13893" pos:column="34">This</name></type></param>,<param><type><name pos:line="13893" pos:column="39">pctinfo</name></type></param>,<param><type><name pos:line="13893" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13894" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13896" pos:column="1">#<cpp:directive pos:line="13896" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13896" pos:column="9">Events2_GetTypeInfo</name><parameter_list pos:line="13896" pos:column="28">(<param><type><name pos:line="13896" pos:column="29">This</name></type></param>,<param><type><name pos:line="13896" pos:column="34">itinfo</name></type></param>,<param><type><name pos:line="13896" pos:column="41">lcid</name></type></param>,<param><type><name pos:line="13896" pos:column="46">pptinfo</name></type></param>,<param><type><name pos:line="13896" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13897" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13899" pos:column="1">#<cpp:directive pos:line="13899" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13899" pos:column="9">Events2_GetIDsOfNames</name><parameter_list pos:line="13899" pos:column="30">(<param><type><name pos:line="13899" pos:column="31">This</name></type></param>,<param><type><name pos:line="13899" pos:column="36">riid</name></type></param>,<param><type><name pos:line="13899" pos:column="41">rgszNames</name></type></param>,<param><type><name pos:line="13899" pos:column="51">cNames</name></type></param>,<param><type><name pos:line="13899" pos:column="58">lcid</name></type></param>,<param><type><name pos:line="13899" pos:column="63">rgdispid</name></type></param>,<param><type><name pos:line="13899" pos:column="72">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13900" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13902" pos:column="1">#<cpp:directive pos:line="13902" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13902" pos:column="9">Events2_Invoke</name><parameter_list pos:line="13902" pos:column="23">(<param><type><name pos:line="13902" pos:column="24">This</name></type></param>,<param><type><name pos:line="13902" pos:column="29">dispidMember</name></type></param>,<param><type><name pos:line="13902" pos:column="42">riid</name></type></param>,<param><type><name pos:line="13902" pos:column="47">lcid</name></type></param>,<param><type><name pos:line="13902" pos:column="52">wFlags</name></type></param>,<param><type><name pos:line="13902" pos:column="59">pdispparams</name></type></param>,<param><type><name pos:line="13902" pos:column="71">pvarResult</name></type></param>,<param><type><name pos:line="13902" pos:column="82">pexcepinfo</name></type></param>,<param><type><name pos:line="13902" pos:column="93">puArgErr</name></type></param>,<param><type><name pos:line="13902" pos:column="102">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13903" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13905" pos:column="1">#<cpp:directive pos:line="13905" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13905" pos:column="9">Events2_get_CommandBarEvents</name><parameter_list pos:line="13905" pos:column="37">(<param><type><name pos:line="13905" pos:column="38">This</name></type></param>,<param><type><name pos:line="13905" pos:column="43">CommandBarControl</name></type></param>,<param><type><name pos:line="13905" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13906" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CommandBarEvents(This,CommandBarControl,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13908" pos:column="1">#<cpp:directive pos:line="13908" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13908" pos:column="9">Events2_get_CommandEvents</name><parameter_list pos:line="13908" pos:column="34">(<param><type><name pos:line="13908" pos:column="35">This</name></type></param>,<param><type><name pos:line="13908" pos:column="40">Guid</name></type></param>,<param><type><name pos:line="13908" pos:column="45">ID</name></type></param>,<param><type><name pos:line="13908" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13909" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CommandEvents(This,Guid,ID,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13911" pos:column="1">#<cpp:directive pos:line="13911" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13911" pos:column="9">Events2_get_SelectionEvents</name><parameter_list pos:line="13911" pos:column="36">(<param><type><name pos:line="13911" pos:column="37">This</name></type></param>,<param><type><name pos:line="13911" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13912" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SelectionEvents(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13914" pos:column="1">#<cpp:directive pos:line="13914" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13914" pos:column="9">Events2_get_SolutionEvents</name><parameter_list pos:line="13914" pos:column="35">(<param><type><name pos:line="13914" pos:column="36">This</name></type></param>,<param><type><name pos:line="13914" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13915" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SolutionEvents(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13917" pos:column="1">#<cpp:directive pos:line="13917" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13917" pos:column="9">Events2_get_BuildEvents</name><parameter_list pos:line="13917" pos:column="32">(<param><type><name pos:line="13917" pos:column="33">This</name></type></param>,<param><type><name pos:line="13917" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13918" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_BuildEvents(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13920" pos:column="1">#<cpp:directive pos:line="13920" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13920" pos:column="9">Events2_get_WindowEvents</name><parameter_list pos:line="13920" pos:column="33">(<param><type><name pos:line="13920" pos:column="34">This</name></type></param>,<param><type><name pos:line="13920" pos:column="39">WindowFilter</name></type></param>,<param><type><name pos:line="13920" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13921" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_WindowEvents(This,WindowFilter,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13923" pos:column="1">#<cpp:directive pos:line="13923" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13923" pos:column="9">Events2_get_OutputWindowEvents</name><parameter_list pos:line="13923" pos:column="39">(<param><type><name pos:line="13923" pos:column="40">This</name></type></param>,<param><type><name pos:line="13923" pos:column="45">Pane</name></type></param>,<param><type><name pos:line="13923" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13924" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_OutputWindowEvents(This,Pane,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13926" pos:column="1">#<cpp:directive pos:line="13926" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13926" pos:column="9">Events2_get_FindEvents</name><parameter_list pos:line="13926" pos:column="31">(<param><type><name pos:line="13926" pos:column="32">This</name></type></param>,<param><type><name pos:line="13926" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13927" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FindEvents(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13929" pos:column="1">#<cpp:directive pos:line="13929" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13929" pos:column="9">Events2_get_TaskListEvents</name><parameter_list pos:line="13929" pos:column="35">(<param><type><name pos:line="13929" pos:column="36">This</name></type></param>,<param><type><name pos:line="13929" pos:column="41">Filter</name></type></param>,<param><type><name pos:line="13929" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13930" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_TaskListEvents(This,Filter,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13932" pos:column="1">#<cpp:directive pos:line="13932" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13932" pos:column="9">Events2_get_DTEEvents</name><parameter_list pos:line="13932" pos:column="30">(<param><type><name pos:line="13932" pos:column="31">This</name></type></param>,<param><type><name pos:line="13932" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13933" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTEEvents(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13935" pos:column="1">#<cpp:directive pos:line="13935" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13935" pos:column="9">Events2_get_DocumentEvents</name><parameter_list pos:line="13935" pos:column="35">(<param><type><name pos:line="13935" pos:column="36">This</name></type></param>,<param><type><name pos:line="13935" pos:column="41">Document</name></type></param>,<param><type><name pos:line="13935" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13936" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DocumentEvents(This,Document,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13938" pos:column="1">#<cpp:directive pos:line="13938" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13938" pos:column="9">Events2_get_SolutionItemsEvents</name><parameter_list pos:line="13938" pos:column="40">(<param><type><name pos:line="13938" pos:column="41">This</name></type></param>,<param><type><name pos:line="13938" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13939" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SolutionItemsEvents(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13941" pos:column="1">#<cpp:directive pos:line="13941" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13941" pos:column="9">Events2_get_MiscFilesEvents</name><parameter_list pos:line="13941" pos:column="36">(<param><type><name pos:line="13941" pos:column="37">This</name></type></param>,<param><type><name pos:line="13941" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13942" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_MiscFilesEvents(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13944" pos:column="1">#<cpp:directive pos:line="13944" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13944" pos:column="9">Events2_get_DebuggerEvents</name><parameter_list pos:line="13944" pos:column="35">(<param><type><name pos:line="13944" pos:column="36">This</name></type></param>,<param><type><name pos:line="13944" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13945" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DebuggerEvents(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13947" pos:column="1">#<cpp:directive pos:line="13947" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13947" pos:column="9">Events2_get_TextEditorEvents</name><parameter_list pos:line="13947" pos:column="37">(<param><type><name pos:line="13947" pos:column="38">This</name></type></param>,<param><type><name pos:line="13947" pos:column="43">TextDocumentFilter</name></type></param>,<param><type><name pos:line="13947" pos:column="62">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13948" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_TextEditorEvents(This,TextDocumentFilter,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="13950" pos:column="1">#<cpp:directive pos:line="13950" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13950" pos:column="9">Events2_GetObject</name><parameter_list pos:line="13950" pos:column="26">(<param><type><name pos:line="13950" pos:column="27">This</name></type></param>,<param><type><name pos:line="13950" pos:column="32">Name</name></type></param>,<param><type><name pos:line="13950" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13951" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetObject(This,Name,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="13954" pos:column="1">#<cpp:directive pos:line="13954" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13954" pos:column="9">Events2_get_ProjectItemsEvents</name><parameter_list pos:line="13954" pos:column="39">(<param><type><name pos:line="13954" pos:column="40">This</name></type></param>,<param><type><name pos:line="13954" pos:column="45">ppProjectItemsEvents</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13955" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectItemsEvents(This,ppProjectItemsEvents) )</cpp:value></cpp:define> 

<cpp:define pos:line="13957" pos:column="1">#<cpp:directive pos:line="13957" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13957" pos:column="9">Events2_get_ProjectsEvents</name><parameter_list pos:line="13957" pos:column="35">(<param><type><name pos:line="13957" pos:column="36">This</name></type></param>,<param><type><name pos:line="13957" pos:column="41">ppProjectsEvents</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13958" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ProjectsEvents(This,ppProjectsEvents) )</cpp:value></cpp:define> 

<cpp:define pos:line="13960" pos:column="1">#<cpp:directive pos:line="13960" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13960" pos:column="9">Events2_get_TextDocumentKeyPressEvents</name><parameter_list pos:line="13960" pos:column="47">(<param><type><name pos:line="13960" pos:column="48">This</name></type></param>,<param><type><name pos:line="13960" pos:column="53">TextDocument</name></type></param>,<param><type><name pos:line="13960" pos:column="66">ppEditorKeyPressEvents</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13961" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_TextDocumentKeyPressEvents(This,TextDocument,ppEditorKeyPressEvents) )</cpp:value></cpp:define> 

<cpp:define pos:line="13963" pos:column="1">#<cpp:directive pos:line="13963" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13963" pos:column="9">Events2_get_CodeModelEvents</name><parameter_list pos:line="13963" pos:column="36">(<param><type><name pos:line="13963" pos:column="37">This</name></type></param>,<param><type><name pos:line="13963" pos:column="42">Reserved</name></type></param>,<param><type><name pos:line="13963" pos:column="51">ppdisp</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13964" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CodeModelEvents(This,Reserved,ppdisp) )</cpp:value></cpp:define> 

<cpp:define pos:line="13966" pos:column="1">#<cpp:directive pos:line="13966" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13966" pos:column="9">Events2_get_WindowVisibilityEvents</name><parameter_list pos:line="13966" pos:column="43">(<param><type><name pos:line="13966" pos:column="44">This</name></type></param>,<param><type><name pos:line="13966" pos:column="49">WindowFilter</name></type></param>,<param><type><name pos:line="13966" pos:column="62">ppdisp</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13967" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_WindowVisibilityEvents(This,WindowFilter,ppdisp) )</cpp:value></cpp:define> 

<cpp:define pos:line="13969" pos:column="1">#<cpp:directive pos:line="13969" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13969" pos:column="9">Events2_get_DebuggerProcessEvents</name><parameter_list pos:line="13969" pos:column="42">(<param><type><name pos:line="13969" pos:column="43">This</name></type></param>,<param><type><name pos:line="13969" pos:column="48">ppDebuggerProcessEvents</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13970" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DebuggerProcessEvents(This,ppDebuggerProcessEvents) )</cpp:value></cpp:define> 

<cpp:define pos:line="13972" pos:column="1">#<cpp:directive pos:line="13972" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13972" pos:column="9">Events2_get_DebuggerExpressionEvaluationEvents</name><parameter_list pos:line="13972" pos:column="55">(<param><type><name pos:line="13972" pos:column="56">This</name></type></param>,<param><type><name pos:line="13972" pos:column="61">ppDebuggerExpressionEvalutionEvents</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13973" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DebuggerExpressionEvaluationEvents(This,ppDebuggerExpressionEvalutionEvents) )</cpp:value></cpp:define> 

<cpp:define pos:line="13975" pos:column="1">#<cpp:directive pos:line="13975" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13975" pos:column="9">Events2_get_PublishEvents</name><parameter_list pos:line="13975" pos:column="34">(<param><type><name pos:line="13975" pos:column="35">This</name></type></param>,<param><type><name pos:line="13975" pos:column="40">ppPublishEvents</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="13976" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_PublishEvents(This,ppPublishEvents) )</cpp:value></cpp:define> 

<cpp:endif pos:line="13978" pos:column="1">#<cpp:directive pos:line="13978" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="13978" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="13981" pos:column="1">#<cpp:directive pos:line="13981" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13981" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="13986" pos:column="1">#<cpp:directive pos:line="13986" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="13986" pos:column="9">/* __Events2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="13989" pos:column="1">#<cpp:directive pos:line="13989" pos:column="2">ifndef</cpp:directive> <name pos:line="13989" pos:column="9">__Solution2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="13990" pos:column="1">#<cpp:directive pos:line="13990" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13990" pos:column="9">__Solution2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="13992" pos:column="1">/* interface Solution2 */</comment>
<comment type="block" pos:line="13993" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="13996" pos:column="1">EXTERN_C</name> <specifier pos:line="13996" pos:column="10">const</specifier> <name pos:line="13996" pos:column="16">IID</name></type> <name pos:line="13996" pos:column="20">IID_Solution2</name></decl>;</decl_stmt>

<cpp:if pos:line="13998" pos:column="1">#<cpp:directive pos:line="13998" pos:column="2">if</cpp:directive> <expr><call><name pos:line="13998" pos:column="5">defined</name><argument_list pos:line="13998" pos:column="12">(<argument><expr><name pos:line="13998" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="13998" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="13998" pos:column="29">!</op:operator><call><name pos:line="13998" pos:column="30">defined</name><argument_list pos:line="13998" pos:column="37">(<argument><expr><name pos:line="13998" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="14000" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="14000" pos:column="19">(<argument pos:line="14000" pos:column="20">"FA238614-FBB1-4314-A7F7-49AE8BB6C6BA"</argument>)</argument_list></macro>
    <label><name pos:line="14001" pos:column="5">Solution2</name> :</label> <expr_stmt><expr pos:line="14001" pos:column="17">public <name pos:line="14001" pos:column="24">_Solution</name>
    <block pos:line="14002" pos:column="5">{
    <expr pos:line="14003" pos:column="5">public<op:operator pos:line="14003" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="14004" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="14004" pos:column="72">HRESULT</name> <name pos:line="14004" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="14004" pos:column="98">AddSolutionFolder</name><argument_list pos:line="14004" pos:column="115">( 
            <argument pos:line="14005" pos:column="13">__RPC__in BSTR Name</argument>,
            <comment type="block" pos:line="14006" pos:column="13">/* [retval][out] */</comment> <argument pos:line="14006" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="14006" pos:column="54">/* external definition not present */</comment> Project **pProject</argument>)</argument_list></macro> <op:operator pos:line="14006" pos:column="112">=</op:operator> <lit:literal type="number" pos:line="14006" pos:column="114">0</lit:literal></expr>;
        
        <expr pos:line="14008" pos:column="9">virtual <comment type="block" pos:line="14008" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="14008" pos:column="72">HRESULT</name> <name pos:line="14008" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="14008" pos:column="98">GetProjectTemplate</name><argument_list pos:line="14008" pos:column="116">( 
            <argument pos:line="14009" pos:column="13">__RPC__in BSTR TemplateName</argument>,
            <argument pos:line="14010" pos:column="13">__RPC__in BSTR Language</argument>,
            <comment type="block" pos:line="14011" pos:column="13">/* [retval][out] */</comment> <argument pos:line="14011" pos:column="33">__RPC__deref_out_opt BSTR *pFullPath</argument>)</argument_list></macro> <op:operator pos:line="14011" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="14011" pos:column="73">0</lit:literal></expr>;
        
        <expr pos:line="14013" pos:column="9">virtual <comment type="block" pos:line="14013" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="14013" pos:column="72">HRESULT</name> <name pos:line="14013" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="14013" pos:column="98">GetProjectItemTemplate</name><argument_list pos:line="14013" pos:column="120">( 
            <argument pos:line="14014" pos:column="13">__RPC__in BSTR TemplateName</argument>,
            <argument pos:line="14015" pos:column="13">__RPC__in BSTR Language</argument>,
            <comment type="block" pos:line="14016" pos:column="13">/* [retval][out] */</comment> <argument pos:line="14016" pos:column="33">__RPC__deref_out_opt BSTR *pFullPath</argument>)</argument_list></macro> <op:operator pos:line="14016" pos:column="71">=</op:operator> <lit:literal type="number" pos:line="14016" pos:column="73">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="14020" pos:column="1">#<cpp:directive pos:line="14020" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="14020" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="14022" pos:column="5">typedef <type><struct pos:line="14022" pos:column="13">struct <name pos:line="14022" pos:column="20">Solution2Vtbl</name>
    <block pos:line="14023" pos:column="5">{<public type="default" pos:line="14023" pos:column="6">
        <decl_stmt><decl><type><name pos:line="14024" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="14026" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="14026" pos:column="46">HRESULT</name></type> ( <name pos:line="14026" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14026" pos:column="74">*</type:modifier><name pos:line="14026" pos:column="75">QueryInterface</name> )<parameter_list pos:line="14026" pos:column="91">( 
            <param><decl><type><name pos:line="14027" pos:column="13">Solution2</name> <type:modifier pos:line="14027" pos:column="23">*</type:modifier></type> <name pos:line="14027" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14028" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="14028" pos:column="47">struct <name pos:line="14028" pos:column="54">GUID</name> <type:modifier pos:line="14028" pos:column="59">*</type:modifier></type><name pos:line="14028" pos:column="60">riid</name></decl><op:operator pos:line="14028" pos:column="64">,</op:operator>
            <comment type="block" pos:line="14029" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14029" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="14029" pos:column="59">void</name> <type:modifier pos:line="14029" pos:column="64">*</type:modifier><type:modifier pos:line="14029" pos:column="65">*</type:modifier><name pos:line="14029" pos:column="66">ppvObj</name><op:operator pos:line="14029" pos:column="72">,</op:operator>
            <comment type="block" pos:line="14030" pos:column="13">/* [retval][out] */</comment> <name pos:line="14030" pos:column="33">__RPC__out</name> <name pos:line="14030" pos:column="44">void</name> <type:modifier pos:line="14030" pos:column="49">*</type:modifier><name pos:line="14030" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="14032" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="14032" pos:column="46">HRESULT</name></type> ( <name pos:line="14032" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14032" pos:column="74">*</type:modifier><name pos:line="14032" pos:column="75">AddRef</name> )<parameter_list pos:line="14032" pos:column="83">( 
            <param><decl><type><name pos:line="14033" pos:column="13">Solution2</name> <type:modifier pos:line="14033" pos:column="23">*</type:modifier></type> <name pos:line="14033" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14034" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14034" pos:column="33">__RPC__out</name> <name pos:line="14034" pos:column="44">unsigned</name> <name pos:line="14034" pos:column="53">long</name> <type:modifier pos:line="14034" pos:column="58">*</type:modifier></type><name pos:line="14034" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14036" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="14036" pos:column="46">HRESULT</name></type> ( <name pos:line="14036" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14036" pos:column="74">*</type:modifier><name pos:line="14036" pos:column="75">Release</name> )<parameter_list pos:line="14036" pos:column="84">( 
            <param><decl><type><name pos:line="14037" pos:column="13">Solution2</name> <type:modifier pos:line="14037" pos:column="23">*</type:modifier></type> <name pos:line="14037" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14038" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14038" pos:column="33">__RPC__out</name> <name pos:line="14038" pos:column="44">unsigned</name> <name pos:line="14038" pos:column="53">long</name> <type:modifier pos:line="14038" pos:column="58">*</type:modifier></type><name pos:line="14038" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14040" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="14040" pos:column="46">HRESULT</name></type> ( <name pos:line="14040" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14040" pos:column="74">*</type:modifier><name pos:line="14040" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="14040" pos:column="93">( 
            <param><decl><type><name pos:line="14041" pos:column="13">Solution2</name> <type:modifier pos:line="14041" pos:column="23">*</type:modifier></type> <name pos:line="14041" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14042" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="14042" pos:column="38">__RPC__out</name> <name pos:line="14042" pos:column="49">unsigned</name> <name pos:line="14042" pos:column="58">UINT</name> <type:modifier pos:line="14042" pos:column="63">*</type:modifier></type><name pos:line="14042" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="14043" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14043" pos:column="33">__RPC__out</name> <name pos:line="14043" pos:column="44">void</name> <type:modifier pos:line="14043" pos:column="49">*</type:modifier></type><name pos:line="14043" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14045" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="14045" pos:column="46">HRESULT</name></type> ( <name pos:line="14045" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14045" pos:column="74">*</type:modifier><name pos:line="14045" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="14045" pos:column="88">( 
            <param><decl><type><name pos:line="14046" pos:column="13">Solution2</name> <type:modifier pos:line="14046" pos:column="23">*</type:modifier></type> <name pos:line="14046" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14047" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14047" pos:column="37">unsigned</name> <name pos:line="14047" pos:column="46">UINT</name></type> <name pos:line="14047" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="14048" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14048" pos:column="37">unsigned</name> <name pos:line="14048" pos:column="46">long</name></type> <name pos:line="14048" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="14049" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="14049" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="14049" pos:column="59">void</name> <type:modifier pos:line="14049" pos:column="64">*</type:modifier><type:modifier pos:line="14049" pos:column="65">*</type:modifier></type><name pos:line="14049" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="14050" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14050" pos:column="33">__RPC__out</name> <name pos:line="14050" pos:column="44">void</name> <type:modifier pos:line="14050" pos:column="49">*</type:modifier></type><name pos:line="14050" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14052" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="14052" pos:column="46">HRESULT</name> <argument_list pos:line="14052" pos:column="54">( <argument pos:line="14052" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14052" pos:column="90">(</op:operator> 
            <name pos:line="14053" pos:column="13">Solution2</name> <op:operator pos:line="14053" pos:column="23">*</op:operator> <name pos:line="14053" pos:column="25">This</name><op:operator pos:line="14053" pos:column="29">,</op:operator>
            <comment type="block" pos:line="14054" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14054" pos:column="37">__RPC__in</name> struct <name pos:line="14054" pos:column="54">GUID</name> <op:operator pos:line="14054" pos:column="59">*</op:operator><name pos:line="14054" pos:column="60">riid</name><op:operator pos:line="14054" pos:column="64">,</op:operator>
            <comment type="block" pos:line="14055" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14055" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="14055" pos:column="57">signed</name> <name pos:line="14055" pos:column="64">char</name> <op:operator pos:line="14055" pos:column="69">*</op:operator><op:operator pos:line="14055" pos:column="70">*</op:operator><name pos:line="14055" pos:column="71">rgszNames</name><op:operator pos:line="14055" pos:column="80">,</op:operator>
            <comment type="block" pos:line="14056" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14056" pos:column="37">unsigned</name> <name pos:line="14056" pos:column="46">UINT</name> <name pos:line="14056" pos:column="51">cNames</name><op:operator pos:line="14056" pos:column="57">,</op:operator>
            <comment type="block" pos:line="14057" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14057" pos:column="37">unsigned</name> <name pos:line="14057" pos:column="46">long</name> <name pos:line="14057" pos:column="51">lcid</name><op:operator pos:line="14057" pos:column="55">,</op:operator>
            <comment type="block" pos:line="14058" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14058" pos:column="38">__RPC__out</name> <name pos:line="14058" pos:column="49">signed</name> <name pos:line="14058" pos:column="56">long</name> <op:operator pos:line="14058" pos:column="61">*</op:operator><name pos:line="14058" pos:column="62">rgdispid</name><op:operator pos:line="14058" pos:column="70">,</op:operator>
            <comment type="block" pos:line="14059" pos:column="13">/* [retval][out] */</comment> <name pos:line="14059" pos:column="33">__RPC__out</name> <name pos:line="14059" pos:column="44">void</name> <op:operator pos:line="14059" pos:column="49">*</op:operator><name pos:line="14059" pos:column="50">retval</name><op:operator pos:line="14059" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="14061" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="14061" pos:column="46">HRESULT</name> <argument_list pos:line="14061" pos:column="54">( <argument pos:line="14061" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14061" pos:column="83">(</op:operator> 
            <name pos:line="14062" pos:column="13">Solution2</name> <op:operator pos:line="14062" pos:column="23">*</op:operator> <name pos:line="14062" pos:column="25">This</name><op:operator pos:line="14062" pos:column="29">,</op:operator>
            <comment type="block" pos:line="14063" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14063" pos:column="37">signed</name> <name pos:line="14063" pos:column="44">long</name> <name pos:line="14063" pos:column="49">dispidMember</name><op:operator pos:line="14063" pos:column="61">,</op:operator>
            <comment type="block" pos:line="14064" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14064" pos:column="37">__RPC__in</name> struct <name pos:line="14064" pos:column="54">GUID</name> <op:operator pos:line="14064" pos:column="59">*</op:operator><name pos:line="14064" pos:column="60">riid</name><op:operator pos:line="14064" pos:column="64">,</op:operator>
            <comment type="block" pos:line="14065" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14065" pos:column="37">unsigned</name> <name pos:line="14065" pos:column="46">long</name> <name pos:line="14065" pos:column="51">lcid</name><op:operator pos:line="14065" pos:column="55">,</op:operator>
            <comment type="block" pos:line="14066" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14066" pos:column="37">unsigned</name> <name pos:line="14066" pos:column="46">short</name> <name pos:line="14066" pos:column="52">wFlags</name><op:operator pos:line="14066" pos:column="58">,</op:operator>
            <comment type="block" pos:line="14067" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14067" pos:column="37">__RPC__in</name> struct <name pos:line="14067" pos:column="54">DISPPARAMS</name> <op:operator pos:line="14067" pos:column="65">*</op:operator><name pos:line="14067" pos:column="66">pdispparams</name><op:operator pos:line="14067" pos:column="77">,</op:operator>
            <comment type="block" pos:line="14068" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14068" pos:column="38">__RPC__out</name> <name pos:line="14068" pos:column="49">VARIANT</name> <op:operator pos:line="14068" pos:column="57">*</op:operator><name pos:line="14068" pos:column="58">pvarResult</name><op:operator pos:line="14068" pos:column="68">,</op:operator>
            <comment type="block" pos:line="14069" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14069" pos:column="38">__RPC__out</name> struct <name pos:line="14069" pos:column="56">EXCEPINFO</name> <op:operator pos:line="14069" pos:column="66">*</op:operator><name pos:line="14069" pos:column="67">pexcepinfo</name><op:operator pos:line="14069" pos:column="77">,</op:operator>
            <comment type="block" pos:line="14070" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14070" pos:column="38">__RPC__out</name> <name pos:line="14070" pos:column="49">unsigned</name> <name pos:line="14070" pos:column="58">UINT</name> <op:operator pos:line="14070" pos:column="63">*</op:operator><name pos:line="14070" pos:column="64">puArgErr</name><op:operator pos:line="14070" pos:column="72">,</op:operator>
            <comment type="block" pos:line="14071" pos:column="13">/* [retval][out] */</comment> <name pos:line="14071" pos:column="33">__RPC__out</name> <name pos:line="14071" pos:column="44">void</name> <op:operator pos:line="14071" pos:column="49">*</op:operator><name pos:line="14071" pos:column="50">retval</name><op:operator pos:line="14071" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="14073" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14073" pos:column="34">HRESULT</name></type> ( <name pos:line="14073" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14073" pos:column="62">*</type:modifier><name pos:line="14073" pos:column="63">Item</name> )<parameter_list pos:line="14073" pos:column="69">( 
            <param><decl><type><name pos:line="14074" pos:column="13">Solution2</name> <type:modifier pos:line="14074" pos:column="23">*</type:modifier></type> <name pos:line="14074" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14075" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14075" pos:column="37">VARIANT</name></type> <name pos:line="14075" pos:column="45">index</name></decl></param>,
            <comment type="block" pos:line="14076" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14076" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14076" pos:column="54">Project</name> <type:modifier pos:line="14076" pos:column="62">*</type:modifier><type:modifier pos:line="14076" pos:column="63">*</type:modifier></type><name pos:line="14076" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14078" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="14078" pos:column="46">HRESULT</name></type> ( <name pos:line="14078" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14078" pos:column="74">*</type:modifier><name pos:line="14078" pos:column="75">_NewEnum</name> )<parameter_list pos:line="14078" pos:column="85">( 
            <param><decl><type><name pos:line="14079" pos:column="13">Solution2</name> <type:modifier pos:line="14079" pos:column="23">*</type:modifier></type> <name pos:line="14079" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14080" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14080" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14080" pos:column="54">IUnknown</name> <type:modifier pos:line="14080" pos:column="63">*</type:modifier><type:modifier pos:line="14080" pos:column="64">*</type:modifier></type><name pos:line="14080" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14082" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14082" pos:column="43">HRESULT</name></type> ( <name pos:line="14082" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14082" pos:column="71">*</type:modifier><name pos:line="14082" pos:column="72">get_DTE</name> )<parameter_list pos:line="14082" pos:column="81">( 
            <param><decl><type><name pos:line="14083" pos:column="13">Solution2</name> <type:modifier pos:line="14083" pos:column="23">*</type:modifier></type> <name pos:line="14083" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14084" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14084" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="14084" pos:column="54">*</type:modifier><type:modifier pos:line="14084" pos:column="55">*</type:modifier></type><name pos:line="14084" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14086" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14086" pos:column="43">HRESULT</name></type> ( <name pos:line="14086" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14086" pos:column="71">*</type:modifier><name pos:line="14086" pos:column="72">get_Parent</name> )<parameter_list pos:line="14086" pos:column="84">( 
            <param><decl><type><name pos:line="14087" pos:column="13">Solution2</name> <type:modifier pos:line="14087" pos:column="23">*</type:modifier></type> <name pos:line="14087" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14088" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14088" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="14088" pos:column="54">*</type:modifier><type:modifier pos:line="14088" pos:column="55">*</type:modifier></type><name pos:line="14088" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14090" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14090" pos:column="43">HRESULT</name></type> ( <name pos:line="14090" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14090" pos:column="71">*</type:modifier><name pos:line="14090" pos:column="72">get_Count</name> )<parameter_list pos:line="14090" pos:column="83">( 
            <param><decl><type><name pos:line="14091" pos:column="13">Solution2</name> <type:modifier pos:line="14091" pos:column="23">*</type:modifier></type> <name pos:line="14091" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14092" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14092" pos:column="33">__RPC__out</name> <name pos:line="14092" pos:column="44">signed</name> <name pos:line="14092" pos:column="51">long</name> <type:modifier pos:line="14092" pos:column="56">*</type:modifier></type><name pos:line="14092" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14094" pos:column="9">/* [id][propget][hidden][funcdescattr] */</comment> <function_decl><type><name pos:line="14094" pos:column="51">HRESULT</name></type> ( <name pos:line="14094" pos:column="61">STDMETHODCALLTYPE</name> <type:modifier pos:line="14094" pos:column="79">*</type:modifier><name pos:line="14094" pos:column="80">get_FileName</name> )<parameter_list pos:line="14094" pos:column="94">( 
            <param><decl><type><name pos:line="14095" pos:column="13">Solution2</name> <type:modifier pos:line="14095" pos:column="23">*</type:modifier></type> <name pos:line="14095" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14096" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14096" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14096" pos:column="54">BSTR</name> <type:modifier pos:line="14096" pos:column="59">*</type:modifier></type><name pos:line="14096" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14098" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14098" pos:column="34">HRESULT</name></type> ( <name pos:line="14098" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14098" pos:column="62">*</type:modifier><name pos:line="14098" pos:column="63">SaveAs</name> )<parameter_list pos:line="14098" pos:column="71">( 
            <param><decl><type><name pos:line="14099" pos:column="13">Solution2</name> <type:modifier pos:line="14099" pos:column="23">*</type:modifier></type> <name pos:line="14099" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14100" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14100" pos:column="37">__RPC__in</name> <name pos:line="14100" pos:column="47">BSTR</name></type> <name pos:line="14100" pos:column="52">FileName</name></decl></param>,
            <comment type="block" pos:line="14101" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14101" pos:column="33">__RPC__out</name> <name pos:line="14101" pos:column="44">void</name> <type:modifier pos:line="14101" pos:column="49">*</type:modifier></type><name pos:line="14101" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14103" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14103" pos:column="34">HRESULT</name></type> ( <name pos:line="14103" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14103" pos:column="62">*</type:modifier><name pos:line="14103" pos:column="63">AddFromTemplate</name> )<parameter_list pos:line="14103" pos:column="80">( 
            <param><decl><type><name pos:line="14104" pos:column="13">Solution2</name> <type:modifier pos:line="14104" pos:column="23">*</type:modifier></type> <name pos:line="14104" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14105" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14105" pos:column="37">__RPC__in</name> <name pos:line="14105" pos:column="47">BSTR</name></type> <name pos:line="14105" pos:column="52">FileName</name></decl></param>,
            <comment type="block" pos:line="14106" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14106" pos:column="37">__RPC__in</name> <name pos:line="14106" pos:column="47">BSTR</name></type> <name pos:line="14106" pos:column="52">Destination</name></decl></param>,
            <comment type="block" pos:line="14107" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14107" pos:column="37">__RPC__in</name> <name pos:line="14107" pos:column="47">BSTR</name></type> <name pos:line="14107" pos:column="52">ProjectName</name></decl></param>,
            <comment type="block" pos:line="14108" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14108" pos:column="37">BOOLEAN</name></type> <name pos:line="14108" pos:column="45">Exclusive</name></decl></param>,
            <comment type="block" pos:line="14109" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14109" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14109" pos:column="54">Project</name> <type:modifier pos:line="14109" pos:column="62">*</type:modifier><type:modifier pos:line="14109" pos:column="63">*</type:modifier></type><name pos:line="14109" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14111" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14111" pos:column="34">HRESULT</name></type> ( <name pos:line="14111" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14111" pos:column="62">*</type:modifier><name pos:line="14111" pos:column="63">AddFromFile</name> )<parameter_list pos:line="14111" pos:column="76">( 
            <param><decl><type><name pos:line="14112" pos:column="13">Solution2</name> <type:modifier pos:line="14112" pos:column="23">*</type:modifier></type> <name pos:line="14112" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14113" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14113" pos:column="37">__RPC__in</name> <name pos:line="14113" pos:column="47">BSTR</name></type> <name pos:line="14113" pos:column="52">FileName</name></decl></param>,
            <comment type="block" pos:line="14114" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14114" pos:column="37">BOOLEAN</name></type> <name pos:line="14114" pos:column="45">Exclusive</name></decl></param>,
            <comment type="block" pos:line="14115" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14115" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14115" pos:column="54">Project</name> <type:modifier pos:line="14115" pos:column="62">*</type:modifier><type:modifier pos:line="14115" pos:column="63">*</type:modifier></type><name pos:line="14115" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14117" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14117" pos:column="34">HRESULT</name></type> ( <name pos:line="14117" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14117" pos:column="62">*</type:modifier><name pos:line="14117" pos:column="63">Open</name> )<parameter_list pos:line="14117" pos:column="69">( 
            <param><decl><type><name pos:line="14118" pos:column="13">Solution2</name> <type:modifier pos:line="14118" pos:column="23">*</type:modifier></type> <name pos:line="14118" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14119" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14119" pos:column="37">__RPC__in</name> <name pos:line="14119" pos:column="47">BSTR</name></type> <name pos:line="14119" pos:column="52">FileName</name></decl></param>,
            <comment type="block" pos:line="14120" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14120" pos:column="33">__RPC__out</name> <name pos:line="14120" pos:column="44">void</name> <type:modifier pos:line="14120" pos:column="49">*</type:modifier></type><name pos:line="14120" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14122" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14122" pos:column="34">HRESULT</name></type> ( <name pos:line="14122" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14122" pos:column="62">*</type:modifier><name pos:line="14122" pos:column="63">Close</name> )<parameter_list pos:line="14122" pos:column="70">( 
            <param><decl><type><name pos:line="14123" pos:column="13">Solution2</name> <type:modifier pos:line="14123" pos:column="23">*</type:modifier></type> <name pos:line="14123" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14124" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14124" pos:column="37">BOOLEAN</name></type> <name pos:line="14124" pos:column="45">SaveFirst</name></decl></param>,
            <comment type="block" pos:line="14125" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14125" pos:column="33">__RPC__out</name> <name pos:line="14125" pos:column="44">void</name> <type:modifier pos:line="14125" pos:column="49">*</type:modifier></type><name pos:line="14125" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14127" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14127" pos:column="43">HRESULT</name></type> ( <name pos:line="14127" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14127" pos:column="71">*</type:modifier><name pos:line="14127" pos:column="72">get_Properties</name> )<parameter_list pos:line="14127" pos:column="88">( 
            <param><decl><type><name pos:line="14128" pos:column="13">Solution2</name> <type:modifier pos:line="14128" pos:column="23">*</type:modifier></type> <name pos:line="14128" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14129" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14129" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14129" pos:column="54">Properties</name> <type:modifier pos:line="14129" pos:column="65">*</type:modifier><type:modifier pos:line="14129" pos:column="66">*</type:modifier></type><name pos:line="14129" pos:column="67">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14131" pos:column="9">/* [id][propget][hidden][funcdescattr] */</comment> <function_decl><type><name pos:line="14131" pos:column="51">HRESULT</name></type> ( <name pos:line="14131" pos:column="61">STDMETHODCALLTYPE</name> <type:modifier pos:line="14131" pos:column="79">*</type:modifier><name pos:line="14131" pos:column="80">get_IsDirty</name> )<parameter_list pos:line="14131" pos:column="93">( 
            <param><decl><type><name pos:line="14132" pos:column="13">Solution2</name> <type:modifier pos:line="14132" pos:column="23">*</type:modifier></type> <name pos:line="14132" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14133" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14133" pos:column="33">__RPC__out</name> <name pos:line="14133" pos:column="44">BOOLEAN</name> <type:modifier pos:line="14133" pos:column="52">*</type:modifier></type><name pos:line="14133" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14135" pos:column="9">/* [id][propput][hidden][funcdescattr] */</comment> <function_decl><type><name pos:line="14135" pos:column="51">HRESULT</name></type> ( <name pos:line="14135" pos:column="61">STDMETHODCALLTYPE</name> <type:modifier pos:line="14135" pos:column="79">*</type:modifier><name pos:line="14135" pos:column="80">put_IsDirty</name> )<parameter_list pos:line="14135" pos:column="93">( 
            <param><decl><type><name pos:line="14136" pos:column="13">Solution2</name> <type:modifier pos:line="14136" pos:column="23">*</type:modifier></type> <name pos:line="14136" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14137" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14137" pos:column="37">BOOLEAN</name></type> <name pos:line="14137" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="14138" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14138" pos:column="33">__RPC__out</name> <name pos:line="14138" pos:column="44">void</name> <type:modifier pos:line="14138" pos:column="49">*</type:modifier></type><name pos:line="14138" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14140" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14140" pos:column="34">HRESULT</name></type> ( <name pos:line="14140" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14140" pos:column="62">*</type:modifier><name pos:line="14140" pos:column="63">Remove</name> )<parameter_list pos:line="14140" pos:column="71">( 
            <param><decl><type><name pos:line="14141" pos:column="13">Solution2</name> <type:modifier pos:line="14141" pos:column="23">*</type:modifier></type> <name pos:line="14141" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14142" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14142" pos:column="37">__RPC__in_opt</name> <name pos:line="14142" pos:column="51">Project</name> <type:modifier pos:line="14142" pos:column="59">*</type:modifier></type><name pos:line="14142" pos:column="60">proj</name></decl></param>,
            <comment type="block" pos:line="14143" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14143" pos:column="33">__RPC__out</name> <name pos:line="14143" pos:column="44">void</name> <type:modifier pos:line="14143" pos:column="49">*</type:modifier></type><name pos:line="14143" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14145" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14145" pos:column="43">HRESULT</name></type> ( <name pos:line="14145" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14145" pos:column="71">*</type:modifier><name pos:line="14145" pos:column="72">get_TemplatePath</name> )<parameter_list pos:line="14145" pos:column="90">( 
            <param><decl><type><name pos:line="14146" pos:column="13">Solution2</name> <type:modifier pos:line="14146" pos:column="23">*</type:modifier></type> <name pos:line="14146" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14147" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14147" pos:column="37">__RPC__in</name> <name pos:line="14147" pos:column="47">BSTR</name></type> <name pos:line="14147" pos:column="52">ProjectType</name></decl></param>,
            <comment type="block" pos:line="14148" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14148" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14148" pos:column="54">BSTR</name> <type:modifier pos:line="14148" pos:column="59">*</type:modifier></type><name pos:line="14148" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14150" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14150" pos:column="43">HRESULT</name></type> ( <name pos:line="14150" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14150" pos:column="71">*</type:modifier><name pos:line="14150" pos:column="72">get_FullName</name> )<parameter_list pos:line="14150" pos:column="86">( 
            <param><decl><type><name pos:line="14151" pos:column="13">Solution2</name> <type:modifier pos:line="14151" pos:column="23">*</type:modifier></type> <name pos:line="14151" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14152" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14152" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14152" pos:column="54">BSTR</name> <type:modifier pos:line="14152" pos:column="59">*</type:modifier></type><name pos:line="14152" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14154" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14154" pos:column="43">HRESULT</name></type> ( <name pos:line="14154" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14154" pos:column="71">*</type:modifier><name pos:line="14154" pos:column="72">get_Saved</name> )<parameter_list pos:line="14154" pos:column="83">( 
            <param><decl><type><name pos:line="14155" pos:column="13">Solution2</name> <type:modifier pos:line="14155" pos:column="23">*</type:modifier></type> <name pos:line="14155" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14156" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14156" pos:column="33">__RPC__out</name> <name pos:line="14156" pos:column="44">BOOLEAN</name> <type:modifier pos:line="14156" pos:column="52">*</type:modifier></type><name pos:line="14156" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14158" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="14158" pos:column="43">HRESULT</name></type> ( <name pos:line="14158" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14158" pos:column="71">*</type:modifier><name pos:line="14158" pos:column="72">put_Saved</name> )<parameter_list pos:line="14158" pos:column="83">( 
            <param><decl><type><name pos:line="14159" pos:column="13">Solution2</name> <type:modifier pos:line="14159" pos:column="23">*</type:modifier></type> <name pos:line="14159" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14160" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14160" pos:column="37">BOOLEAN</name></type> <name pos:line="14160" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="14161" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14161" pos:column="33">__RPC__out</name> <name pos:line="14161" pos:column="44">void</name> <type:modifier pos:line="14161" pos:column="49">*</type:modifier></type><name pos:line="14161" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14163" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14163" pos:column="43">HRESULT</name></type> ( <name pos:line="14163" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14163" pos:column="71">*</type:modifier><name pos:line="14163" pos:column="72">get_Globals</name> )<parameter_list pos:line="14163" pos:column="85">( 
            <param><decl><type><name pos:line="14164" pos:column="13">Solution2</name> <type:modifier pos:line="14164" pos:column="23">*</type:modifier></type> <name pos:line="14164" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14165" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14165" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14165" pos:column="54">Globals</name> <type:modifier pos:line="14165" pos:column="62">*</type:modifier><type:modifier pos:line="14165" pos:column="63">*</type:modifier></type><name pos:line="14165" pos:column="64">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14167" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14167" pos:column="43">HRESULT</name></type> ( <name pos:line="14167" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14167" pos:column="71">*</type:modifier><name pos:line="14167" pos:column="72">get_AddIns</name> )<parameter_list pos:line="14167" pos:column="84">( 
            <param><decl><type><name pos:line="14168" pos:column="13">Solution2</name> <type:modifier pos:line="14168" pos:column="23">*</type:modifier></type> <name pos:line="14168" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14169" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14169" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14169" pos:column="54">AddIns</name> <type:modifier pos:line="14169" pos:column="61">*</type:modifier><type:modifier pos:line="14169" pos:column="62">*</type:modifier></type><name pos:line="14169" pos:column="63">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14171" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14171" pos:column="43">HRESULT</name></type> ( <name pos:line="14171" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14171" pos:column="71">*</type:modifier><name pos:line="14171" pos:column="72">get_Extender</name> )<parameter_list pos:line="14171" pos:column="86">( 
            <param><decl><type><name pos:line="14172" pos:column="13">Solution2</name> <type:modifier pos:line="14172" pos:column="23">*</type:modifier></type> <name pos:line="14172" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14173" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14173" pos:column="37">__RPC__in</name> <name pos:line="14173" pos:column="47">BSTR</name></type> <name pos:line="14173" pos:column="52">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="14174" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14174" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14174" pos:column="54">IDispatch</name> <type:modifier pos:line="14174" pos:column="64">*</type:modifier><type:modifier pos:line="14174" pos:column="65">*</type:modifier></type><name pos:line="14174" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14176" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14176" pos:column="43">HRESULT</name></type> ( <name pos:line="14176" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14176" pos:column="71">*</type:modifier><name pos:line="14176" pos:column="72">get_ExtenderNames</name> )<parameter_list pos:line="14176" pos:column="91">( 
            <param><decl><type><name pos:line="14177" pos:column="13">Solution2</name> <type:modifier pos:line="14177" pos:column="23">*</type:modifier></type> <name pos:line="14177" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14178" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14178" pos:column="33">__RPC__out</name> <name pos:line="14178" pos:column="44">VARIANT</name> <type:modifier pos:line="14178" pos:column="52">*</type:modifier></type><name pos:line="14178" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14180" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14180" pos:column="43">HRESULT</name></type> ( <name pos:line="14180" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14180" pos:column="71">*</type:modifier><name pos:line="14180" pos:column="72">get_ExtenderCATID</name> )<parameter_list pos:line="14180" pos:column="91">( 
            <param><decl><type><name pos:line="14181" pos:column="13">Solution2</name> <type:modifier pos:line="14181" pos:column="23">*</type:modifier></type> <name pos:line="14181" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14182" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14182" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14182" pos:column="54">BSTR</name> <type:modifier pos:line="14182" pos:column="59">*</type:modifier></type><name pos:line="14182" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14184" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14184" pos:column="43">HRESULT</name></type> ( <name pos:line="14184" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14184" pos:column="71">*</type:modifier><name pos:line="14184" pos:column="72">get_IsOpen</name> )<parameter_list pos:line="14184" pos:column="84">( 
            <param><decl><type><name pos:line="14185" pos:column="13">Solution2</name> <type:modifier pos:line="14185" pos:column="23">*</type:modifier></type> <name pos:line="14185" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14186" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14186" pos:column="33">__RPC__out</name> <name pos:line="14186" pos:column="44">BOOLEAN</name> <type:modifier pos:line="14186" pos:column="52">*</type:modifier></type><name pos:line="14186" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14188" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14188" pos:column="43">HRESULT</name></type> ( <name pos:line="14188" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14188" pos:column="71">*</type:modifier><name pos:line="14188" pos:column="72">get_SolutionBuild</name> )<parameter_list pos:line="14188" pos:column="91">( 
            <param><decl><type><name pos:line="14189" pos:column="13">Solution2</name> <type:modifier pos:line="14189" pos:column="23">*</type:modifier></type> <name pos:line="14189" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14190" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14190" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14190" pos:column="54">SolutionBuild</name> <type:modifier pos:line="14190" pos:column="68">*</type:modifier><type:modifier pos:line="14190" pos:column="69">*</type:modifier></type><name pos:line="14190" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14192" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14192" pos:column="34">HRESULT</name></type> ( <name pos:line="14192" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14192" pos:column="62">*</type:modifier><name pos:line="14192" pos:column="63">Create</name> )<parameter_list pos:line="14192" pos:column="71">( 
            <param><decl><type><name pos:line="14193" pos:column="13">Solution2</name> <type:modifier pos:line="14193" pos:column="23">*</type:modifier></type> <name pos:line="14193" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14194" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="14194" pos:column="33">__RPC__in</name> <name pos:line="14194" pos:column="43">BSTR</name></type> <name pos:line="14194" pos:column="48">Destination</name></decl></param>,
            <comment type="block" pos:line="14195" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="14195" pos:column="33">__RPC__in</name> <name pos:line="14195" pos:column="43">BSTR</name></type> <name pos:line="14195" pos:column="48">Name</name></decl></param>,
            <comment type="block" pos:line="14196" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14196" pos:column="33">__RPC__out</name> <name pos:line="14196" pos:column="44">void</name> <type:modifier pos:line="14196" pos:column="49">*</type:modifier></type><name pos:line="14196" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14198" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14198" pos:column="43">HRESULT</name></type> ( <name pos:line="14198" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14198" pos:column="71">*</type:modifier><name pos:line="14198" pos:column="72">get_Projects</name> )<parameter_list pos:line="14198" pos:column="86">( 
            <param><decl><type><name pos:line="14199" pos:column="13">Solution2</name> <type:modifier pos:line="14199" pos:column="23">*</type:modifier></type> <name pos:line="14199" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14200" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14200" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14200" pos:column="54">Projects</name> <type:modifier pos:line="14200" pos:column="63">*</type:modifier><type:modifier pos:line="14200" pos:column="64">*</type:modifier></type><name pos:line="14200" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14202" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14202" pos:column="34">HRESULT</name></type> ( <name pos:line="14202" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14202" pos:column="62">*</type:modifier><name pos:line="14202" pos:column="63">FindProjectItem</name> )<parameter_list pos:line="14202" pos:column="80">( 
            <param><decl><type><name pos:line="14203" pos:column="13">Solution2</name> <type:modifier pos:line="14203" pos:column="23">*</type:modifier></type> <name pos:line="14203" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14204" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="14204" pos:column="33">__RPC__in</name> <name pos:line="14204" pos:column="43">BSTR</name></type> <name pos:line="14204" pos:column="48">FileName</name></decl></param>,
            <comment type="block" pos:line="14205" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14205" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14205" pos:column="54">ProjectItem</name> <type:modifier pos:line="14205" pos:column="66">*</type:modifier><type:modifier pos:line="14205" pos:column="67">*</type:modifier></type><name pos:line="14205" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14207" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14207" pos:column="34">HRESULT</name></type> ( <name pos:line="14207" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14207" pos:column="62">*</type:modifier><name pos:line="14207" pos:column="63">ProjectItemsTemplatePath</name> )<parameter_list pos:line="14207" pos:column="89">( 
            <param><decl><type><name pos:line="14208" pos:column="13">Solution2</name> <type:modifier pos:line="14208" pos:column="23">*</type:modifier></type> <name pos:line="14208" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="14209" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="14209" pos:column="33">__RPC__in</name> <name pos:line="14209" pos:column="43">BSTR</name></type> <name pos:line="14209" pos:column="48">ProjectKind</name></decl></param>,
            <comment type="block" pos:line="14210" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14210" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14210" pos:column="54">BSTR</name> <type:modifier pos:line="14210" pos:column="59">*</type:modifier></type><name pos:line="14210" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14212" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="14212" pos:column="64">HRESULT</name></type> ( <name pos:line="14212" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="14212" pos:column="92">*</type:modifier><name pos:line="14212" pos:column="93">AddSolutionFolder</name> )<parameter_list pos:line="14212" pos:column="112">( 
            <param><decl><type><name pos:line="14213" pos:column="13">Solution2</name> <type:modifier pos:line="14213" pos:column="23">*</type:modifier></type> <name pos:line="14213" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="14214" pos:column="13">__RPC__in</name> <name pos:line="14214" pos:column="23">BSTR</name></type> <name pos:line="14214" pos:column="28">Name</name></decl></param>,
            <comment type="block" pos:line="14215" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14215" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="14215" pos:column="54">/* external definition not present */</comment> <name pos:line="14215" pos:column="92">Project</name> <type:modifier pos:line="14215" pos:column="100">*</type:modifier><type:modifier pos:line="14215" pos:column="101">*</type:modifier></type><name pos:line="14215" pos:column="102">pProject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14217" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="14217" pos:column="64">HRESULT</name></type> ( <name pos:line="14217" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="14217" pos:column="92">*</type:modifier><name pos:line="14217" pos:column="93">GetProjectTemplate</name> )<parameter_list pos:line="14217" pos:column="113">( 
            <param><decl><type><name pos:line="14218" pos:column="13">Solution2</name> <type:modifier pos:line="14218" pos:column="23">*</type:modifier></type> <name pos:line="14218" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="14219" pos:column="13">__RPC__in</name> <name pos:line="14219" pos:column="23">BSTR</name></type> <name pos:line="14219" pos:column="28">TemplateName</name></decl></param>,
            <param><decl><type><name pos:line="14220" pos:column="13">__RPC__in</name> <name pos:line="14220" pos:column="23">BSTR</name></type> <name pos:line="14220" pos:column="28">Language</name></decl></param>,
            <comment type="block" pos:line="14221" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14221" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14221" pos:column="54">BSTR</name> <type:modifier pos:line="14221" pos:column="59">*</type:modifier></type><name pos:line="14221" pos:column="60">pFullPath</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14223" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="14223" pos:column="64">HRESULT</name></type> ( <name pos:line="14223" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="14223" pos:column="92">*</type:modifier><name pos:line="14223" pos:column="93">GetProjectItemTemplate</name> )<parameter_list pos:line="14223" pos:column="117">( 
            <param><decl><type><name pos:line="14224" pos:column="13">Solution2</name> <type:modifier pos:line="14224" pos:column="23">*</type:modifier></type> <name pos:line="14224" pos:column="25">This</name></decl></param>,
            <param><decl><type><name pos:line="14225" pos:column="13">__RPC__in</name> <name pos:line="14225" pos:column="23">BSTR</name></type> <name pos:line="14225" pos:column="28">TemplateName</name></decl></param>,
            <param><decl><type><name pos:line="14226" pos:column="13">__RPC__in</name> <name pos:line="14226" pos:column="23">BSTR</name></type> <name pos:line="14226" pos:column="28">Language</name></decl></param>,
            <comment type="block" pos:line="14227" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14227" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14227" pos:column="54">BSTR</name> <type:modifier pos:line="14227" pos:column="59">*</type:modifier></type><name pos:line="14227" pos:column="60">pFullPath</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="14229" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="14230" pos:column="7">Solution2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="14232" pos:column="5">interface</name></type> <name pos:line="14232" pos:column="15">Solution2</name>
    <argument_list pos:line="14233" pos:column="5">{
        <argument><expr><name pos:line="14234" pos:column="9">CONST_VTBL</name> struct <name pos:line="14234" pos:column="27">Solution2Vtbl</name> <op:operator pos:line="14234" pos:column="41">*</op:operator><name pos:line="14234" pos:column="42">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="14239" pos:column="1">#<cpp:directive pos:line="14239" pos:column="2">ifdef</cpp:directive> <name pos:line="14239" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="14242" pos:column="1">#<cpp:directive pos:line="14242" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14242" pos:column="9">Solution2_QueryInterface</name><parameter_list pos:line="14242" pos:column="33">(<param><type><name pos:line="14242" pos:column="34">This</name></type></param>,<param><type><name pos:line="14242" pos:column="39">riid</name></type></param>,<param><type><name pos:line="14242" pos:column="44">ppvObj</name></type></param>,<param><type><name pos:line="14242" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14243" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14245" pos:column="1">#<cpp:directive pos:line="14245" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14245" pos:column="9">Solution2_AddRef</name><parameter_list pos:line="14245" pos:column="25">(<param><type><name pos:line="14245" pos:column="26">This</name></type></param>,<param><type><name pos:line="14245" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14246" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14248" pos:column="1">#<cpp:directive pos:line="14248" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14248" pos:column="9">Solution2_Release</name><parameter_list pos:line="14248" pos:column="26">(<param><type><name pos:line="14248" pos:column="27">This</name></type></param>,<param><type><name pos:line="14248" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14249" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14251" pos:column="1">#<cpp:directive pos:line="14251" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14251" pos:column="9">Solution2_GetTypeInfoCount</name><parameter_list pos:line="14251" pos:column="35">(<param><type><name pos:line="14251" pos:column="36">This</name></type></param>,<param><type><name pos:line="14251" pos:column="41">pctinfo</name></type></param>,<param><type><name pos:line="14251" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14252" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14254" pos:column="1">#<cpp:directive pos:line="14254" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14254" pos:column="9">Solution2_GetTypeInfo</name><parameter_list pos:line="14254" pos:column="30">(<param><type><name pos:line="14254" pos:column="31">This</name></type></param>,<param><type><name pos:line="14254" pos:column="36">itinfo</name></type></param>,<param><type><name pos:line="14254" pos:column="43">lcid</name></type></param>,<param><type><name pos:line="14254" pos:column="48">pptinfo</name></type></param>,<param><type><name pos:line="14254" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14255" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14257" pos:column="1">#<cpp:directive pos:line="14257" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14257" pos:column="9">Solution2_GetIDsOfNames</name><parameter_list pos:line="14257" pos:column="32">(<param><type><name pos:line="14257" pos:column="33">This</name></type></param>,<param><type><name pos:line="14257" pos:column="38">riid</name></type></param>,<param><type><name pos:line="14257" pos:column="43">rgszNames</name></type></param>,<param><type><name pos:line="14257" pos:column="53">cNames</name></type></param>,<param><type><name pos:line="14257" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="14257" pos:column="65">rgdispid</name></type></param>,<param><type><name pos:line="14257" pos:column="74">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14258" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14260" pos:column="1">#<cpp:directive pos:line="14260" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14260" pos:column="9">Solution2_Invoke</name><parameter_list pos:line="14260" pos:column="25">(<param><type><name pos:line="14260" pos:column="26">This</name></type></param>,<param><type><name pos:line="14260" pos:column="31">dispidMember</name></type></param>,<param><type><name pos:line="14260" pos:column="44">riid</name></type></param>,<param><type><name pos:line="14260" pos:column="49">lcid</name></type></param>,<param><type><name pos:line="14260" pos:column="54">wFlags</name></type></param>,<param><type><name pos:line="14260" pos:column="61">pdispparams</name></type></param>,<param><type><name pos:line="14260" pos:column="73">pvarResult</name></type></param>,<param><type><name pos:line="14260" pos:column="84">pexcepinfo</name></type></param>,<param><type><name pos:line="14260" pos:column="95">puArgErr</name></type></param>,<param><type><name pos:line="14260" pos:column="104">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14261" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14263" pos:column="1">#<cpp:directive pos:line="14263" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14263" pos:column="9">Solution2_Item</name><parameter_list pos:line="14263" pos:column="23">(<param><type><name pos:line="14263" pos:column="24">This</name></type></param>,<param><type><name pos:line="14263" pos:column="29">index</name></type></param>,<param><type><name pos:line="14263" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14264" pos:column="5">( (This)-&gt;lpVtbl -&gt; Item(This,index,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14266" pos:column="1">#<cpp:directive pos:line="14266" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14266" pos:column="9">Solution2__NewEnum</name><parameter_list pos:line="14266" pos:column="27">(<param><type><name pos:line="14266" pos:column="28">This</name></type></param>,<param><type><name pos:line="14266" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14267" pos:column="5">( (This)-&gt;lpVtbl -&gt; _NewEnum(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14269" pos:column="1">#<cpp:directive pos:line="14269" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14269" pos:column="9">Solution2_get_DTE</name><parameter_list pos:line="14269" pos:column="26">(<param><type><name pos:line="14269" pos:column="27">This</name></type></param>,<param><type><name pos:line="14269" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14270" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14272" pos:column="1">#<cpp:directive pos:line="14272" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14272" pos:column="9">Solution2_get_Parent</name><parameter_list pos:line="14272" pos:column="29">(<param><type><name pos:line="14272" pos:column="30">This</name></type></param>,<param><type><name pos:line="14272" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14273" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14275" pos:column="1">#<cpp:directive pos:line="14275" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14275" pos:column="9">Solution2_get_Count</name><parameter_list pos:line="14275" pos:column="28">(<param><type><name pos:line="14275" pos:column="29">This</name></type></param>,<param><type><name pos:line="14275" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14276" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Count(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14278" pos:column="1">#<cpp:directive pos:line="14278" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14278" pos:column="9">Solution2_get_FileName</name><parameter_list pos:line="14278" pos:column="31">(<param><type><name pos:line="14278" pos:column="32">This</name></type></param>,<param><type><name pos:line="14278" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14279" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FileName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14281" pos:column="1">#<cpp:directive pos:line="14281" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14281" pos:column="9">Solution2_SaveAs</name><parameter_list pos:line="14281" pos:column="25">(<param><type><name pos:line="14281" pos:column="26">This</name></type></param>,<param><type><name pos:line="14281" pos:column="31">FileName</name></type></param>,<param><type><name pos:line="14281" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14282" pos:column="5">( (This)-&gt;lpVtbl -&gt; SaveAs(This,FileName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14284" pos:column="1">#<cpp:directive pos:line="14284" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14284" pos:column="9">Solution2_AddFromTemplate</name><parameter_list pos:line="14284" pos:column="34">(<param><type><name pos:line="14284" pos:column="35">This</name></type></param>,<param><type><name pos:line="14284" pos:column="40">FileName</name></type></param>,<param><type><name pos:line="14284" pos:column="49">Destination</name></type></param>,<param><type><name pos:line="14284" pos:column="61">ProjectName</name></type></param>,<param><type><name pos:line="14284" pos:column="73">Exclusive</name></type></param>,<param><type><name pos:line="14284" pos:column="83">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14285" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddFromTemplate(This,FileName,Destination,ProjectName,Exclusive,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14287" pos:column="1">#<cpp:directive pos:line="14287" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14287" pos:column="9">Solution2_AddFromFile</name><parameter_list pos:line="14287" pos:column="30">(<param><type><name pos:line="14287" pos:column="31">This</name></type></param>,<param><type><name pos:line="14287" pos:column="36">FileName</name></type></param>,<param><type><name pos:line="14287" pos:column="45">Exclusive</name></type></param>,<param><type><name pos:line="14287" pos:column="55">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14288" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddFromFile(This,FileName,Exclusive,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14290" pos:column="1">#<cpp:directive pos:line="14290" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14290" pos:column="9">Solution2_Open</name><parameter_list pos:line="14290" pos:column="23">(<param><type><name pos:line="14290" pos:column="24">This</name></type></param>,<param><type><name pos:line="14290" pos:column="29">FileName</name></type></param>,<param><type><name pos:line="14290" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14291" pos:column="5">( (This)-&gt;lpVtbl -&gt; Open(This,FileName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14293" pos:column="1">#<cpp:directive pos:line="14293" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14293" pos:column="9">Solution2_Close</name><parameter_list pos:line="14293" pos:column="24">(<param><type><name pos:line="14293" pos:column="25">This</name></type></param>,<param><type><name pos:line="14293" pos:column="30">SaveFirst</name></type></param>,<param><type><name pos:line="14293" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14294" pos:column="5">( (This)-&gt;lpVtbl -&gt; Close(This,SaveFirst,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14296" pos:column="1">#<cpp:directive pos:line="14296" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14296" pos:column="9">Solution2_get_Properties</name><parameter_list pos:line="14296" pos:column="33">(<param><type><name pos:line="14296" pos:column="34">This</name></type></param>,<param><type><name pos:line="14296" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14297" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Properties(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14299" pos:column="1">#<cpp:directive pos:line="14299" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14299" pos:column="9">Solution2_get_IsDirty</name><parameter_list pos:line="14299" pos:column="30">(<param><type><name pos:line="14299" pos:column="31">This</name></type></param>,<param><type><name pos:line="14299" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14300" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsDirty(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14302" pos:column="1">#<cpp:directive pos:line="14302" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14302" pos:column="9">Solution2_put_IsDirty</name><parameter_list pos:line="14302" pos:column="30">(<param><type><name pos:line="14302" pos:column="31">This</name></type></param>,<param><type><name pos:line="14302" pos:column="36">noname</name></type></param>,<param><type><name pos:line="14302" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14303" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_IsDirty(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14305" pos:column="1">#<cpp:directive pos:line="14305" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14305" pos:column="9">Solution2_Remove</name><parameter_list pos:line="14305" pos:column="25">(<param><type><name pos:line="14305" pos:column="26">This</name></type></param>,<param><type><name pos:line="14305" pos:column="31">proj</name></type></param>,<param><type><name pos:line="14305" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14306" pos:column="5">( (This)-&gt;lpVtbl -&gt; Remove(This,proj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14308" pos:column="1">#<cpp:directive pos:line="14308" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14308" pos:column="9">Solution2_get_TemplatePath</name><parameter_list pos:line="14308" pos:column="35">(<param><type><name pos:line="14308" pos:column="36">This</name></type></param>,<param><type><name pos:line="14308" pos:column="41">ProjectType</name></type></param>,<param><type><name pos:line="14308" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14309" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_TemplatePath(This,ProjectType,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14311" pos:column="1">#<cpp:directive pos:line="14311" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14311" pos:column="9">Solution2_get_FullName</name><parameter_list pos:line="14311" pos:column="31">(<param><type><name pos:line="14311" pos:column="32">This</name></type></param>,<param><type><name pos:line="14311" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14312" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FullName(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14314" pos:column="1">#<cpp:directive pos:line="14314" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14314" pos:column="9">Solution2_get_Saved</name><parameter_list pos:line="14314" pos:column="28">(<param><type><name pos:line="14314" pos:column="29">This</name></type></param>,<param><type><name pos:line="14314" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14315" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Saved(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14317" pos:column="1">#<cpp:directive pos:line="14317" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14317" pos:column="9">Solution2_put_Saved</name><parameter_list pos:line="14317" pos:column="28">(<param><type><name pos:line="14317" pos:column="29">This</name></type></param>,<param><type><name pos:line="14317" pos:column="34">noname</name></type></param>,<param><type><name pos:line="14317" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14318" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Saved(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14320" pos:column="1">#<cpp:directive pos:line="14320" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14320" pos:column="9">Solution2_get_Globals</name><parameter_list pos:line="14320" pos:column="30">(<param><type><name pos:line="14320" pos:column="31">This</name></type></param>,<param><type><name pos:line="14320" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14321" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Globals(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14323" pos:column="1">#<cpp:directive pos:line="14323" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14323" pos:column="9">Solution2_get_AddIns</name><parameter_list pos:line="14323" pos:column="29">(<param><type><name pos:line="14323" pos:column="30">This</name></type></param>,<param><type><name pos:line="14323" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14324" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_AddIns(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14326" pos:column="1">#<cpp:directive pos:line="14326" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14326" pos:column="9">Solution2_get_Extender</name><parameter_list pos:line="14326" pos:column="31">(<param><type><name pos:line="14326" pos:column="32">This</name></type></param>,<param><type><name pos:line="14326" pos:column="37">ExtenderName</name></type></param>,<param><type><name pos:line="14326" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14327" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Extender(This,ExtenderName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14329" pos:column="1">#<cpp:directive pos:line="14329" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14329" pos:column="9">Solution2_get_ExtenderNames</name><parameter_list pos:line="14329" pos:column="36">(<param><type><name pos:line="14329" pos:column="37">This</name></type></param>,<param><type><name pos:line="14329" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14330" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderNames(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14332" pos:column="1">#<cpp:directive pos:line="14332" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14332" pos:column="9">Solution2_get_ExtenderCATID</name><parameter_list pos:line="14332" pos:column="36">(<param><type><name pos:line="14332" pos:column="37">This</name></type></param>,<param><type><name pos:line="14332" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14333" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ExtenderCATID(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14335" pos:column="1">#<cpp:directive pos:line="14335" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14335" pos:column="9">Solution2_get_IsOpen</name><parameter_list pos:line="14335" pos:column="29">(<param><type><name pos:line="14335" pos:column="30">This</name></type></param>,<param><type><name pos:line="14335" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14336" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IsOpen(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14338" pos:column="1">#<cpp:directive pos:line="14338" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14338" pos:column="9">Solution2_get_SolutionBuild</name><parameter_list pos:line="14338" pos:column="36">(<param><type><name pos:line="14338" pos:column="37">This</name></type></param>,<param><type><name pos:line="14338" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14339" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SolutionBuild(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14341" pos:column="1">#<cpp:directive pos:line="14341" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14341" pos:column="9">Solution2_Create</name><parameter_list pos:line="14341" pos:column="25">(<param><type><name pos:line="14341" pos:column="26">This</name></type></param>,<param><type><name pos:line="14341" pos:column="31">Destination</name></type></param>,<param><type><name pos:line="14341" pos:column="43">Name</name></type></param>,<param><type><name pos:line="14341" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14342" pos:column="5">( (This)-&gt;lpVtbl -&gt; Create(This,Destination,Name,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14344" pos:column="1">#<cpp:directive pos:line="14344" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14344" pos:column="9">Solution2_get_Projects</name><parameter_list pos:line="14344" pos:column="31">(<param><type><name pos:line="14344" pos:column="32">This</name></type></param>,<param><type><name pos:line="14344" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14345" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Projects(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14347" pos:column="1">#<cpp:directive pos:line="14347" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14347" pos:column="9">Solution2_FindProjectItem</name><parameter_list pos:line="14347" pos:column="34">(<param><type><name pos:line="14347" pos:column="35">This</name></type></param>,<param><type><name pos:line="14347" pos:column="40">FileName</name></type></param>,<param><type><name pos:line="14347" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14348" pos:column="5">( (This)-&gt;lpVtbl -&gt; FindProjectItem(This,FileName,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14350" pos:column="1">#<cpp:directive pos:line="14350" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14350" pos:column="9">Solution2_ProjectItemsTemplatePath</name><parameter_list pos:line="14350" pos:column="43">(<param><type><name pos:line="14350" pos:column="44">This</name></type></param>,<param><type><name pos:line="14350" pos:column="49">ProjectKind</name></type></param>,<param><type><name pos:line="14350" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14351" pos:column="5">( (This)-&gt;lpVtbl -&gt; ProjectItemsTemplatePath(This,ProjectKind,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="14354" pos:column="1">#<cpp:directive pos:line="14354" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14354" pos:column="9">Solution2_AddSolutionFolder</name><parameter_list pos:line="14354" pos:column="36">(<param><type><name pos:line="14354" pos:column="37">This</name></type></param>,<param><type><name pos:line="14354" pos:column="42">Name</name></type></param>,<param><type><name pos:line="14354" pos:column="47">pProject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14355" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddSolutionFolder(This,Name,pProject) )</cpp:value></cpp:define> 

<cpp:define pos:line="14357" pos:column="1">#<cpp:directive pos:line="14357" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14357" pos:column="9">Solution2_GetProjectTemplate</name><parameter_list pos:line="14357" pos:column="37">(<param><type><name pos:line="14357" pos:column="38">This</name></type></param>,<param><type><name pos:line="14357" pos:column="43">TemplateName</name></type></param>,<param><type><name pos:line="14357" pos:column="56">Language</name></type></param>,<param><type><name pos:line="14357" pos:column="65">pFullPath</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14358" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProjectTemplate(This,TemplateName,Language,pFullPath) )</cpp:value></cpp:define> 

<cpp:define pos:line="14360" pos:column="1">#<cpp:directive pos:line="14360" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14360" pos:column="9">Solution2_GetProjectItemTemplate</name><parameter_list pos:line="14360" pos:column="41">(<param><type><name pos:line="14360" pos:column="42">This</name></type></param>,<param><type><name pos:line="14360" pos:column="47">TemplateName</name></type></param>,<param><type><name pos:line="14360" pos:column="60">Language</name></type></param>,<param><type><name pos:line="14360" pos:column="69">pFullPath</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14361" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetProjectItemTemplate(This,TemplateName,Language,pFullPath) )</cpp:value></cpp:define> 

<cpp:endif pos:line="14363" pos:column="1">#<cpp:directive pos:line="14363" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="14363" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="14366" pos:column="1">#<cpp:directive pos:line="14366" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14366" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="14371" pos:column="1">#<cpp:directive pos:line="14371" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14371" pos:column="9">/* __Solution2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="14374" pos:column="1">#<cpp:directive pos:line="14374" pos:column="2">ifndef</cpp:directive> <name pos:line="14374" pos:column="9">__SolutionFolder_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="14375" pos:column="1">#<cpp:directive pos:line="14375" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14375" pos:column="9">__SolutionFolder_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="14377" pos:column="1">/* interface SolutionFolder */</comment>
<comment type="block" pos:line="14378" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="14381" pos:column="1">EXTERN_C</name> <specifier pos:line="14381" pos:column="10">const</specifier> <name pos:line="14381" pos:column="16">IID</name></type> <name pos:line="14381" pos:column="20">IID_SolutionFolder</name></decl>;</decl_stmt>

<cpp:if pos:line="14383" pos:column="1">#<cpp:directive pos:line="14383" pos:column="2">if</cpp:directive> <expr><call><name pos:line="14383" pos:column="5">defined</name><argument_list pos:line="14383" pos:column="12">(<argument><expr><name pos:line="14383" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="14383" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="14383" pos:column="29">!</op:operator><call><name pos:line="14383" pos:column="30">defined</name><argument_list pos:line="14383" pos:column="37">(<argument><expr><name pos:line="14383" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="14385" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="14385" pos:column="19">(<argument pos:line="14385" pos:column="20">"F8F69788-267C-4408-8967-74F26108C438"</argument>)</argument_list></macro>
    <label><name pos:line="14386" pos:column="5">SolutionFolder</name> :</label> <expr_stmt><expr pos:line="14386" pos:column="22">public <name pos:line="14386" pos:column="29">IDispatch</name>
    <block pos:line="14387" pos:column="5">{
    <expr pos:line="14388" pos:column="5">public<op:operator pos:line="14388" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="14389" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <name pos:line="14389" pos:column="81">HRESULT</name> <name pos:line="14389" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="14389" pos:column="107">get_DTE</name><argument_list pos:line="14389" pos:column="114">( 
            <comment type="block" pos:line="14390" pos:column="13">/* [retval][out] */</comment> <argument pos:line="14390" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="14390" pos:column="54">/* external definition not present */</comment> DTE **pDTE</argument>)</argument_list></macro> <op:operator pos:line="14390" pos:column="104">=</op:operator> <lit:literal type="number" pos:line="14390" pos:column="106">0</lit:literal></expr>;
        
        <expr pos:line="14392" pos:column="9">virtual <comment type="block" pos:line="14392" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <name pos:line="14392" pos:column="81">HRESULT</name> <name pos:line="14392" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="14392" pos:column="107">get_Parent</name><argument_list pos:line="14392" pos:column="117">( 
            <comment type="block" pos:line="14393" pos:column="13">/* [retval][out] */</comment> <argument pos:line="14393" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="14393" pos:column="54">/* external definition not present */</comment> Project **ppProject</argument>)</argument_list></macro> <op:operator pos:line="14393" pos:column="113">=</op:operator> <lit:literal type="number" pos:line="14393" pos:column="115">0</lit:literal></expr>;
        
        <expr pos:line="14395" pos:column="9">virtual <comment type="block" pos:line="14395" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="14395" pos:column="72">HRESULT</name> <name pos:line="14395" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="14395" pos:column="98">AddSolutionFolder</name><argument_list pos:line="14395" pos:column="115">( 
            <argument pos:line="14396" pos:column="13">__RPC__in BSTR Name</argument>,
            <comment type="block" pos:line="14397" pos:column="13">/* [retval][out] */</comment> <argument pos:line="14397" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="14397" pos:column="54">/* external definition not present */</comment> Project **pProject</argument>)</argument_list></macro> <op:operator pos:line="14397" pos:column="112">=</op:operator> <lit:literal type="number" pos:line="14397" pos:column="114">0</lit:literal></expr>;
        
        <expr pos:line="14399" pos:column="9">virtual <comment type="block" pos:line="14399" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="14399" pos:column="72">HRESULT</name> <name pos:line="14399" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="14399" pos:column="98">AddFromFile</name><argument_list pos:line="14399" pos:column="109">( 
            <comment type="block" pos:line="14400" pos:column="13">/* [in] */</comment> <argument pos:line="14400" pos:column="24">__RPC__in BSTR FileName</argument>,
            <comment type="block" pos:line="14401" pos:column="13">/* [retval][out] */</comment> <argument pos:line="14401" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="14401" pos:column="54">/* external definition not present */</comment> Project **ppProject</argument>)</argument_list></macro> <op:operator pos:line="14401" pos:column="113">=</op:operator> <lit:literal type="number" pos:line="14401" pos:column="115">0</lit:literal></expr>;
        
        <expr pos:line="14403" pos:column="9">virtual <comment type="block" pos:line="14403" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="14403" pos:column="72">HRESULT</name> <name pos:line="14403" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="14403" pos:column="98">AddFromTemplate</name><argument_list pos:line="14403" pos:column="113">( 
            <comment type="block" pos:line="14404" pos:column="13">/* [in] */</comment> <argument pos:line="14404" pos:column="24">__RPC__in BSTR FileName</argument>,
            <comment type="block" pos:line="14405" pos:column="13">/* [in] */</comment> <argument pos:line="14405" pos:column="24">__RPC__in BSTR Destination</argument>,
            <comment type="block" pos:line="14406" pos:column="13">/* [in] */</comment> <argument pos:line="14406" pos:column="24">__RPC__in BSTR ProjectName</argument>,
            <comment type="block" pos:line="14407" pos:column="13">/* [retval][out] */</comment> <argument pos:line="14407" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="14407" pos:column="54">/* external definition not present */</comment> Project **ppProject</argument>)</argument_list></macro> <op:operator pos:line="14407" pos:column="113">=</op:operator> <lit:literal type="number" pos:line="14407" pos:column="115">0</lit:literal></expr>;
        
        <expr pos:line="14409" pos:column="9">virtual <comment type="block" pos:line="14409" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <name pos:line="14409" pos:column="81">HRESULT</name> <name pos:line="14409" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="14409" pos:column="107">get_Hidden</name><argument_list pos:line="14409" pos:column="117">( 
            <comment type="block" pos:line="14410" pos:column="13">/* [retval][out] */</comment> <argument pos:line="14410" pos:column="33">__RPC__out VARIANT_BOOL *pHidden</argument>)</argument_list></macro> <op:operator pos:line="14410" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="14410" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="14412" pos:column="9">virtual <comment type="block" pos:line="14412" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id][propput] */</comment> <name pos:line="14412" pos:column="81">HRESULT</name> <name pos:line="14412" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="14412" pos:column="107">put_Hidden</name><argument_list pos:line="14412" pos:column="117">( 
            <argument pos:line="14413" pos:column="13">VARIANT_BOOL hidden</argument>)</argument_list></macro> <op:operator pos:line="14413" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="14413" pos:column="36">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="14417" pos:column="1">#<cpp:directive pos:line="14417" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="14417" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="14419" pos:column="5">typedef <type><struct pos:line="14419" pos:column="13">struct <name pos:line="14419" pos:column="20">SolutionFolderVtbl</name>
    <block pos:line="14420" pos:column="5">{<public type="default" pos:line="14420" pos:column="6">
        <function_decl><type><name pos:line="14421" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="14423" pos:column="9">HRESULT</name></type> ( <name pos:line="14423" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14423" pos:column="37">*</type:modifier><name pos:line="14423" pos:column="38">QueryInterface</name> )<parameter_list pos:line="14423" pos:column="54">( 
            <param><decl><type><name pos:line="14424" pos:column="13">SolutionFolder</name> <type:modifier pos:line="14424" pos:column="28">*</type:modifier></type> <name pos:line="14424" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="14425" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14425" pos:column="24">__RPC__in</name> <name pos:line="14425" pos:column="34">REFIID</name></type> <name pos:line="14425" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="14426" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="14427" pos:column="13">__RPC__deref_out</name>  <name pos:line="14427" pos:column="31">void</name> <type:modifier pos:line="14427" pos:column="36">*</type:modifier><type:modifier pos:line="14427" pos:column="37">*</type:modifier></type><name pos:line="14427" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14429" pos:column="9">ULONG</name></type> ( <name pos:line="14429" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14429" pos:column="35">*</type:modifier><name pos:line="14429" pos:column="36">AddRef</name> )<parameter_list pos:line="14429" pos:column="44">( 
            <param><decl><type><name pos:line="14430" pos:column="13">SolutionFolder</name> <type:modifier pos:line="14430" pos:column="28">*</type:modifier></type> <name pos:line="14430" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14432" pos:column="9">ULONG</name></type> ( <name pos:line="14432" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="14432" pos:column="35">*</type:modifier><name pos:line="14432" pos:column="36">Release</name> )<parameter_list pos:line="14432" pos:column="45">( 
            <param><decl><type><name pos:line="14433" pos:column="13">SolutionFolder</name> <type:modifier pos:line="14433" pos:column="28">*</type:modifier></type> <name pos:line="14433" pos:column="30">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14435" pos:column="9">HRESULT</name></type> ( <name pos:line="14435" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14435" pos:column="37">*</type:modifier><name pos:line="14435" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="14435" pos:column="56">( 
            <param><decl><type><name pos:line="14436" pos:column="13">SolutionFolder</name> <type:modifier pos:line="14436" pos:column="28">*</type:modifier></type> <name pos:line="14436" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="14437" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14437" pos:column="25">__RPC__out</name> <name pos:line="14437" pos:column="36">UINT</name> <type:modifier pos:line="14437" pos:column="41">*</type:modifier></type><name pos:line="14437" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="14439" pos:column="9">HRESULT</name></type> ( <name pos:line="14439" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="14439" pos:column="37">*</type:modifier><name pos:line="14439" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="14439" pos:column="51">( 
            <param><decl><type><name pos:line="14440" pos:column="13">SolutionFolder</name> <type:modifier pos:line="14440" pos:column="28">*</type:modifier></type> <name pos:line="14440" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="14441" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14441" pos:column="24">UINT</name></type> <name pos:line="14441" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="14442" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14442" pos:column="24">LCID</name></type> <name pos:line="14442" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="14443" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14443" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="14443" pos:column="46">ITypeInfo</name> <type:modifier pos:line="14443" pos:column="56">*</type:modifier><type:modifier pos:line="14443" pos:column="57">*</type:modifier></type><name pos:line="14443" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="14445" pos:column="9">HRESULT</name> <argument_list pos:line="14445" pos:column="17">( <argument pos:line="14445" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14445" pos:column="53">(</op:operator> 
            <name pos:line="14446" pos:column="13">SolutionFolder</name> <op:operator pos:line="14446" pos:column="28">*</op:operator> <name pos:line="14446" pos:column="30">This</name><op:operator pos:line="14446" pos:column="34">,</op:operator>
            <comment type="block" pos:line="14447" pos:column="13">/* [in] */</comment> <name pos:line="14447" pos:column="24">__RPC__in</name> <name pos:line="14447" pos:column="34">REFIID</name> <name pos:line="14447" pos:column="41">riid</name><op:operator pos:line="14447" pos:column="45">,</op:operator>
            <comment type="block" pos:line="14448" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="14448" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="14448" pos:column="54">(<argument pos:line="14448" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="14448" pos:column="63">LPOLESTR</name> <op:operator pos:line="14448" pos:column="72">*</op:operator><name pos:line="14448" pos:column="73">rgszNames</name><op:operator pos:line="14448" pos:column="82">,</op:operator>
            <comment type="block" pos:line="14449" pos:column="13">/* [range][in] */</comment> <name pos:line="14449" pos:column="31">UINT</name> <name pos:line="14449" pos:column="36">cNames</name><op:operator pos:line="14449" pos:column="42">,</op:operator>
            <comment type="block" pos:line="14450" pos:column="13">/* [in] */</comment> <name pos:line="14450" pos:column="24">LCID</name> <name pos:line="14450" pos:column="29">lcid</name><op:operator pos:line="14450" pos:column="33">,</op:operator>
            <comment type="block" pos:line="14451" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="14451" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="14451" pos:column="56">(<argument pos:line="14451" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="14451" pos:column="65">DISPID</name> <op:operator pos:line="14451" pos:column="72">*</op:operator><name pos:line="14451" pos:column="73">rgDispId</name><op:operator pos:line="14451" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="14453" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="14453" pos:column="23">HRESULT</name></type> ( <name pos:line="14453" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="14453" pos:column="51">*</type:modifier><name pos:line="14453" pos:column="52">Invoke</name> )<parameter_list pos:line="14453" pos:column="60">( 
            <param><decl><type><name pos:line="14454" pos:column="13">SolutionFolder</name> <type:modifier pos:line="14454" pos:column="28">*</type:modifier></type> <name pos:line="14454" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="14455" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14455" pos:column="24">DISPID</name></type> <name pos:line="14455" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="14456" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14456" pos:column="24">REFIID</name></type> <name pos:line="14456" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="14457" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14457" pos:column="24">LCID</name></type> <name pos:line="14457" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="14458" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14458" pos:column="24">WORD</name></type> <name pos:line="14458" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="14459" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="14459" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="14459" pos:column="40">*</type:modifier></type><name pos:line="14459" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="14460" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14460" pos:column="25">VARIANT</name> <type:modifier pos:line="14460" pos:column="33">*</type:modifier></type><name pos:line="14460" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="14461" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14461" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="14461" pos:column="35">*</type:modifier></type><name pos:line="14461" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="14462" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="14462" pos:column="25">UINT</name> <type:modifier pos:line="14462" pos:column="30">*</type:modifier></type><name pos:line="14462" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14464" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <function_decl><type><name pos:line="14464" pos:column="73">HRESULT</name></type> ( <name pos:line="14464" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="14464" pos:column="101">*</type:modifier><name pos:line="14464" pos:column="102">get_DTE</name> )<parameter_list pos:line="14464" pos:column="111">( 
            <param><decl><type><name pos:line="14465" pos:column="13">SolutionFolder</name> <type:modifier pos:line="14465" pos:column="28">*</type:modifier></type> <name pos:line="14465" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="14466" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14466" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="14466" pos:column="54">/* external definition not present */</comment> <name pos:line="14466" pos:column="92">DTE</name> <type:modifier pos:line="14466" pos:column="96">*</type:modifier><type:modifier pos:line="14466" pos:column="97">*</type:modifier></type><name pos:line="14466" pos:column="98">pDTE</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14468" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <function_decl><type><name pos:line="14468" pos:column="73">HRESULT</name></type> ( <name pos:line="14468" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="14468" pos:column="101">*</type:modifier><name pos:line="14468" pos:column="102">get_Parent</name> )<parameter_list pos:line="14468" pos:column="114">( 
            <param><decl><type><name pos:line="14469" pos:column="13">SolutionFolder</name> <type:modifier pos:line="14469" pos:column="28">*</type:modifier></type> <name pos:line="14469" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="14470" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14470" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="14470" pos:column="54">/* external definition not present */</comment> <name pos:line="14470" pos:column="92">Project</name> <type:modifier pos:line="14470" pos:column="100">*</type:modifier><type:modifier pos:line="14470" pos:column="101">*</type:modifier></type><name pos:line="14470" pos:column="102">ppProject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14472" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="14472" pos:column="64">HRESULT</name></type> ( <name pos:line="14472" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="14472" pos:column="92">*</type:modifier><name pos:line="14472" pos:column="93">AddSolutionFolder</name> )<parameter_list pos:line="14472" pos:column="112">( 
            <param><decl><type><name pos:line="14473" pos:column="13">SolutionFolder</name> <type:modifier pos:line="14473" pos:column="28">*</type:modifier></type> <name pos:line="14473" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="14474" pos:column="13">__RPC__in</name> <name pos:line="14474" pos:column="23">BSTR</name></type> <name pos:line="14474" pos:column="28">Name</name></decl></param>,
            <comment type="block" pos:line="14475" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14475" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="14475" pos:column="54">/* external definition not present */</comment> <name pos:line="14475" pos:column="92">Project</name> <type:modifier pos:line="14475" pos:column="100">*</type:modifier><type:modifier pos:line="14475" pos:column="101">*</type:modifier></type><name pos:line="14475" pos:column="102">pProject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14477" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="14477" pos:column="64">HRESULT</name></type> ( <name pos:line="14477" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="14477" pos:column="92">*</type:modifier><name pos:line="14477" pos:column="93">AddFromFile</name> )<parameter_list pos:line="14477" pos:column="106">( 
            <param><decl><type><name pos:line="14478" pos:column="13">SolutionFolder</name> <type:modifier pos:line="14478" pos:column="28">*</type:modifier></type> <name pos:line="14478" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="14479" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14479" pos:column="24">__RPC__in</name> <name pos:line="14479" pos:column="34">BSTR</name></type> <name pos:line="14479" pos:column="39">FileName</name></decl></param>,
            <comment type="block" pos:line="14480" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14480" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="14480" pos:column="54">/* external definition not present */</comment> <name pos:line="14480" pos:column="92">Project</name> <type:modifier pos:line="14480" pos:column="100">*</type:modifier><type:modifier pos:line="14480" pos:column="101">*</type:modifier></type><name pos:line="14480" pos:column="102">ppProject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14482" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="14482" pos:column="64">HRESULT</name></type> ( <name pos:line="14482" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="14482" pos:column="92">*</type:modifier><name pos:line="14482" pos:column="93">AddFromTemplate</name> )<parameter_list pos:line="14482" pos:column="110">( 
            <param><decl><type><name pos:line="14483" pos:column="13">SolutionFolder</name> <type:modifier pos:line="14483" pos:column="28">*</type:modifier></type> <name pos:line="14483" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="14484" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14484" pos:column="24">__RPC__in</name> <name pos:line="14484" pos:column="34">BSTR</name></type> <name pos:line="14484" pos:column="39">FileName</name></decl></param>,
            <comment type="block" pos:line="14485" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14485" pos:column="24">__RPC__in</name> <name pos:line="14485" pos:column="34">BSTR</name></type> <name pos:line="14485" pos:column="39">Destination</name></decl></param>,
            <comment type="block" pos:line="14486" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14486" pos:column="24">__RPC__in</name> <name pos:line="14486" pos:column="34">BSTR</name></type> <name pos:line="14486" pos:column="39">ProjectName</name></decl></param>,
            <comment type="block" pos:line="14487" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14487" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="14487" pos:column="54">/* external definition not present */</comment> <name pos:line="14487" pos:column="92">Project</name> <type:modifier pos:line="14487" pos:column="100">*</type:modifier><type:modifier pos:line="14487" pos:column="101">*</type:modifier></type><name pos:line="14487" pos:column="102">ppProject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14489" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id][propget] */</comment> <function_decl><type><name pos:line="14489" pos:column="73">HRESULT</name></type> ( <name pos:line="14489" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="14489" pos:column="101">*</type:modifier><name pos:line="14489" pos:column="102">get_Hidden</name> )<parameter_list pos:line="14489" pos:column="114">( 
            <param><decl><type><name pos:line="14490" pos:column="13">SolutionFolder</name> <type:modifier pos:line="14490" pos:column="28">*</type:modifier></type> <name pos:line="14490" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="14491" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14491" pos:column="33">__RPC__out</name> <name pos:line="14491" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="14491" pos:column="57">*</type:modifier></type><name pos:line="14491" pos:column="58">pHidden</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14493" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id][propput] */</comment> <function_decl><type><name pos:line="14493" pos:column="73">HRESULT</name></type> ( <name pos:line="14493" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="14493" pos:column="101">*</type:modifier><name pos:line="14493" pos:column="102">put_Hidden</name> )<parameter_list pos:line="14493" pos:column="114">( 
            <param><decl><type><name pos:line="14494" pos:column="13">SolutionFolder</name> <type:modifier pos:line="14494" pos:column="28">*</type:modifier></type> <name pos:line="14494" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="14495" pos:column="13">VARIANT_BOOL</name></type> <name pos:line="14495" pos:column="26">hidden</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="14497" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="14498" pos:column="7">SolutionFolderVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="14500" pos:column="5">interface</name></type> <name pos:line="14500" pos:column="15">SolutionFolder</name>
    <argument_list pos:line="14501" pos:column="5">{
        <argument><expr><name pos:line="14502" pos:column="9">CONST_VTBL</name> struct <name pos:line="14502" pos:column="27">SolutionFolderVtbl</name> <op:operator pos:line="14502" pos:column="46">*</op:operator><name pos:line="14502" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="14507" pos:column="1">#<cpp:directive pos:line="14507" pos:column="2">ifdef</cpp:directive> <name pos:line="14507" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="14510" pos:column="1">#<cpp:directive pos:line="14510" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14510" pos:column="9">SolutionFolder_QueryInterface</name><parameter_list pos:line="14510" pos:column="38">(<param><type><name pos:line="14510" pos:column="39">This</name></type></param>,<param><type><name pos:line="14510" pos:column="44">riid</name></type></param>,<param><type><name pos:line="14510" pos:column="49">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14511" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="14513" pos:column="1">#<cpp:directive pos:line="14513" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14513" pos:column="9">SolutionFolder_AddRef</name><parameter_list pos:line="14513" pos:column="30">(<param><type><name pos:line="14513" pos:column="31">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14514" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="14516" pos:column="1">#<cpp:directive pos:line="14516" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14516" pos:column="9">SolutionFolder_Release</name><parameter_list pos:line="14516" pos:column="31">(<param><type><name pos:line="14516" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14517" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="14520" pos:column="1">#<cpp:directive pos:line="14520" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14520" pos:column="9">SolutionFolder_GetTypeInfoCount</name><parameter_list pos:line="14520" pos:column="40">(<param><type><name pos:line="14520" pos:column="41">This</name></type></param>,<param><type><name pos:line="14520" pos:column="46">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14521" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="14523" pos:column="1">#<cpp:directive pos:line="14523" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14523" pos:column="9">SolutionFolder_GetTypeInfo</name><parameter_list pos:line="14523" pos:column="35">(<param><type><name pos:line="14523" pos:column="36">This</name></type></param>,<param><type><name pos:line="14523" pos:column="41">iTInfo</name></type></param>,<param><type><name pos:line="14523" pos:column="48">lcid</name></type></param>,<param><type><name pos:line="14523" pos:column="53">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14524" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="14526" pos:column="1">#<cpp:directive pos:line="14526" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14526" pos:column="9">SolutionFolder_GetIDsOfNames</name><parameter_list pos:line="14526" pos:column="37">(<param><type><name pos:line="14526" pos:column="38">This</name></type></param>,<param><type><name pos:line="14526" pos:column="43">riid</name></type></param>,<param><type><name pos:line="14526" pos:column="48">rgszNames</name></type></param>,<param><type><name pos:line="14526" pos:column="58">cNames</name></type></param>,<param><type><name pos:line="14526" pos:column="65">lcid</name></type></param>,<param><type><name pos:line="14526" pos:column="70">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14527" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="14529" pos:column="1">#<cpp:directive pos:line="14529" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14529" pos:column="9">SolutionFolder_Invoke</name><parameter_list pos:line="14529" pos:column="30">(<param><type><name pos:line="14529" pos:column="31">This</name></type></param>,<param><type><name pos:line="14529" pos:column="36">dispIdMember</name></type></param>,<param><type><name pos:line="14529" pos:column="49">riid</name></type></param>,<param><type><name pos:line="14529" pos:column="54">lcid</name></type></param>,<param><type><name pos:line="14529" pos:column="59">wFlags</name></type></param>,<param><type><name pos:line="14529" pos:column="66">pDispParams</name></type></param>,<param><type><name pos:line="14529" pos:column="78">pVarResult</name></type></param>,<param><type><name pos:line="14529" pos:column="89">pExcepInfo</name></type></param>,<param><type><name pos:line="14529" pos:column="100">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14530" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="14533" pos:column="1">#<cpp:directive pos:line="14533" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14533" pos:column="9">SolutionFolder_get_DTE</name><parameter_list pos:line="14533" pos:column="31">(<param><type><name pos:line="14533" pos:column="32">This</name></type></param>,<param><type><name pos:line="14533" pos:column="37">pDTE</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14534" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,pDTE) )</cpp:value></cpp:define> 

<cpp:define pos:line="14536" pos:column="1">#<cpp:directive pos:line="14536" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14536" pos:column="9">SolutionFolder_get_Parent</name><parameter_list pos:line="14536" pos:column="34">(<param><type><name pos:line="14536" pos:column="35">This</name></type></param>,<param><type><name pos:line="14536" pos:column="40">ppProject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14537" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,ppProject) )</cpp:value></cpp:define> 

<cpp:define pos:line="14539" pos:column="1">#<cpp:directive pos:line="14539" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14539" pos:column="9">SolutionFolder_AddSolutionFolder</name><parameter_list pos:line="14539" pos:column="41">(<param><type><name pos:line="14539" pos:column="42">This</name></type></param>,<param><type><name pos:line="14539" pos:column="47">Name</name></type></param>,<param><type><name pos:line="14539" pos:column="52">pProject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14540" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddSolutionFolder(This,Name,pProject) )</cpp:value></cpp:define> 

<cpp:define pos:line="14542" pos:column="1">#<cpp:directive pos:line="14542" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14542" pos:column="9">SolutionFolder_AddFromFile</name><parameter_list pos:line="14542" pos:column="35">(<param><type><name pos:line="14542" pos:column="36">This</name></type></param>,<param><type><name pos:line="14542" pos:column="41">FileName</name></type></param>,<param><type><name pos:line="14542" pos:column="50">ppProject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14543" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddFromFile(This,FileName,ppProject) )</cpp:value></cpp:define> 

<cpp:define pos:line="14545" pos:column="1">#<cpp:directive pos:line="14545" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14545" pos:column="9">SolutionFolder_AddFromTemplate</name><parameter_list pos:line="14545" pos:column="39">(<param><type><name pos:line="14545" pos:column="40">This</name></type></param>,<param><type><name pos:line="14545" pos:column="45">FileName</name></type></param>,<param><type><name pos:line="14545" pos:column="54">Destination</name></type></param>,<param><type><name pos:line="14545" pos:column="66">ProjectName</name></type></param>,<param><type><name pos:line="14545" pos:column="78">ppProject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14546" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddFromTemplate(This,FileName,Destination,ProjectName,ppProject) )</cpp:value></cpp:define> 

<cpp:define pos:line="14548" pos:column="1">#<cpp:directive pos:line="14548" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14548" pos:column="9">SolutionFolder_get_Hidden</name><parameter_list pos:line="14548" pos:column="34">(<param><type><name pos:line="14548" pos:column="35">This</name></type></param>,<param><type><name pos:line="14548" pos:column="40">pHidden</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14549" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Hidden(This,pHidden) )</cpp:value></cpp:define> 

<cpp:define pos:line="14551" pos:column="1">#<cpp:directive pos:line="14551" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14551" pos:column="9">SolutionFolder_put_Hidden</name><parameter_list pos:line="14551" pos:column="34">(<param><type><name pos:line="14551" pos:column="35">This</name></type></param>,<param><type><name pos:line="14551" pos:column="40">hidden</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14552" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Hidden(This,hidden) )</cpp:value></cpp:define> 

<cpp:endif pos:line="14554" pos:column="1">#<cpp:directive pos:line="14554" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="14554" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="14557" pos:column="1">#<cpp:directive pos:line="14557" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14557" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="14562" pos:column="1">#<cpp:directive pos:line="14562" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14562" pos:column="9">/* __SolutionFolder_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="14565" pos:column="1">#<cpp:directive pos:line="14565" pos:column="2">ifndef</cpp:directive> <name pos:line="14565" pos:column="9">__TaskItems2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="14566" pos:column="1">#<cpp:directive pos:line="14566" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14566" pos:column="9">__TaskItems2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="14568" pos:column="1">/* interface TaskItems2 */</comment>
<comment type="block" pos:line="14569" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="14572" pos:column="1">EXTERN_C</name> <specifier pos:line="14572" pos:column="10">const</specifier> <name pos:line="14572" pos:column="16">IID</name></type> <name pos:line="14572" pos:column="20">IID_TaskItems2</name></decl>;</decl_stmt>

<cpp:if pos:line="14574" pos:column="1">#<cpp:directive pos:line="14574" pos:column="2">if</cpp:directive> <expr><call><name pos:line="14574" pos:column="5">defined</name><argument_list pos:line="14574" pos:column="12">(<argument><expr><name pos:line="14574" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="14574" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="14574" pos:column="29">!</op:operator><call><name pos:line="14574" pos:column="30">defined</name><argument_list pos:line="14574" pos:column="37">(<argument><expr><name pos:line="14574" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="14576" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="14576" pos:column="19">(<argument pos:line="14576" pos:column="20">"B820F931-645A-473F-8246-922CF069E1FE"</argument>)</argument_list></macro>
    <label><name pos:line="14577" pos:column="5">TaskItems2</name> :</label> <expr_stmt><expr pos:line="14577" pos:column="18">public <name pos:line="14577" pos:column="25">TaskItems</name>
    <block pos:line="14578" pos:column="5">{
    <expr pos:line="14579" pos:column="5">public<op:operator pos:line="14579" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="14580" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="14580" pos:column="72">HRESULT</name> <name pos:line="14580" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="14580" pos:column="98">Add2</name><argument_list pos:line="14580" pos:column="102">( 
            <comment type="block" pos:line="14581" pos:column="13">/* [in] */</comment> <argument pos:line="14581" pos:column="24">__RPC__in BSTR Category</argument>,
            <comment type="block" pos:line="14582" pos:column="13">/* [in] */</comment> <argument pos:line="14582" pos:column="24">__RPC__in BSTR SubCategory</argument>,
            <comment type="block" pos:line="14583" pos:column="13">/* [in] */</comment> <argument pos:line="14583" pos:column="24">__RPC__in BSTR Description</argument>,
            <comment type="block" pos:line="14584" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="14584" pos:column="38">long Priority</argument>,
            <comment type="block" pos:line="14585" pos:column="13">/* [optional][in] */</comment> <argument pos:line="14585" pos:column="34">VARIANT Icon</argument>,
            <comment type="block" pos:line="14586" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="14586" pos:column="38">VARIANT_BOOL Checkable</argument>,
            <comment type="block" pos:line="14587" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="14587" pos:column="38">__RPC__in BSTR File</argument>,
            <comment type="block" pos:line="14588" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="14588" pos:column="38">long Line</argument>,
            <comment type="block" pos:line="14589" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="14589" pos:column="38">VARIANT_BOOL CanUserDelete</argument>,
            <comment type="block" pos:line="14590" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="14590" pos:column="38">VARIANT_BOOL FlushItem</argument>,
            <comment type="block" pos:line="14591" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="14591" pos:column="38">VARIANT_BOOL AutoNavigate</argument>,
            <comment type="block" pos:line="14592" pos:column="13">/* [retval][out] */</comment> <argument pos:line="14592" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="14592" pos:column="54">/* external definition not present */</comment> TaskItem **pTaskItem</argument>)</argument_list></macro> <op:operator pos:line="14592" pos:column="114">=</op:operator> <lit:literal type="number" pos:line="14592" pos:column="116">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="14596" pos:column="1">#<cpp:directive pos:line="14596" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="14596" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="14598" pos:column="5">typedef <type><struct pos:line="14598" pos:column="13">struct <name pos:line="14598" pos:column="20">TaskItems2Vtbl</name>
    <block pos:line="14599" pos:column="5">{<public type="default" pos:line="14599" pos:column="6">
        <decl_stmt><decl><type><name pos:line="14600" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="14602" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="14602" pos:column="46">HRESULT</name></type> ( <name pos:line="14602" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14602" pos:column="74">*</type:modifier><name pos:line="14602" pos:column="75">QueryInterface</name> )<parameter_list pos:line="14602" pos:column="91">( 
            <param><decl><type><name pos:line="14603" pos:column="13">TaskItems2</name> <type:modifier pos:line="14603" pos:column="24">*</type:modifier></type> <name pos:line="14603" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14604" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="14604" pos:column="47">struct <name pos:line="14604" pos:column="54">GUID</name> <type:modifier pos:line="14604" pos:column="59">*</type:modifier></type><name pos:line="14604" pos:column="60">riid</name></decl><op:operator pos:line="14604" pos:column="64">,</op:operator>
            <comment type="block" pos:line="14605" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14605" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="14605" pos:column="59">void</name> <type:modifier pos:line="14605" pos:column="64">*</type:modifier><type:modifier pos:line="14605" pos:column="65">*</type:modifier><name pos:line="14605" pos:column="66">ppvObj</name><op:operator pos:line="14605" pos:column="72">,</op:operator>
            <comment type="block" pos:line="14606" pos:column="13">/* [retval][out] */</comment> <name pos:line="14606" pos:column="33">__RPC__out</name> <name pos:line="14606" pos:column="44">void</name> <type:modifier pos:line="14606" pos:column="49">*</type:modifier><name pos:line="14606" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="14608" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="14608" pos:column="46">HRESULT</name></type> ( <name pos:line="14608" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14608" pos:column="74">*</type:modifier><name pos:line="14608" pos:column="75">AddRef</name> )<parameter_list pos:line="14608" pos:column="83">( 
            <param><decl><type><name pos:line="14609" pos:column="13">TaskItems2</name> <type:modifier pos:line="14609" pos:column="24">*</type:modifier></type> <name pos:line="14609" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14610" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14610" pos:column="33">__RPC__out</name> <name pos:line="14610" pos:column="44">unsigned</name> <name pos:line="14610" pos:column="53">long</name> <type:modifier pos:line="14610" pos:column="58">*</type:modifier></type><name pos:line="14610" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14612" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="14612" pos:column="46">HRESULT</name></type> ( <name pos:line="14612" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14612" pos:column="74">*</type:modifier><name pos:line="14612" pos:column="75">Release</name> )<parameter_list pos:line="14612" pos:column="84">( 
            <param><decl><type><name pos:line="14613" pos:column="13">TaskItems2</name> <type:modifier pos:line="14613" pos:column="24">*</type:modifier></type> <name pos:line="14613" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14614" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14614" pos:column="33">__RPC__out</name> <name pos:line="14614" pos:column="44">unsigned</name> <name pos:line="14614" pos:column="53">long</name> <type:modifier pos:line="14614" pos:column="58">*</type:modifier></type><name pos:line="14614" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14616" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="14616" pos:column="46">HRESULT</name></type> ( <name pos:line="14616" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14616" pos:column="74">*</type:modifier><name pos:line="14616" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="14616" pos:column="93">( 
            <param><decl><type><name pos:line="14617" pos:column="13">TaskItems2</name> <type:modifier pos:line="14617" pos:column="24">*</type:modifier></type> <name pos:line="14617" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14618" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="14618" pos:column="38">__RPC__out</name> <name pos:line="14618" pos:column="49">unsigned</name> <name pos:line="14618" pos:column="58">UINT</name> <type:modifier pos:line="14618" pos:column="63">*</type:modifier></type><name pos:line="14618" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="14619" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14619" pos:column="33">__RPC__out</name> <name pos:line="14619" pos:column="44">void</name> <type:modifier pos:line="14619" pos:column="49">*</type:modifier></type><name pos:line="14619" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14621" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="14621" pos:column="46">HRESULT</name></type> ( <name pos:line="14621" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14621" pos:column="74">*</type:modifier><name pos:line="14621" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="14621" pos:column="88">( 
            <param><decl><type><name pos:line="14622" pos:column="13">TaskItems2</name> <type:modifier pos:line="14622" pos:column="24">*</type:modifier></type> <name pos:line="14622" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14623" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14623" pos:column="37">unsigned</name> <name pos:line="14623" pos:column="46">UINT</name></type> <name pos:line="14623" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="14624" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14624" pos:column="37">unsigned</name> <name pos:line="14624" pos:column="46">long</name></type> <name pos:line="14624" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="14625" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="14625" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="14625" pos:column="59">void</name> <type:modifier pos:line="14625" pos:column="64">*</type:modifier><type:modifier pos:line="14625" pos:column="65">*</type:modifier></type><name pos:line="14625" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="14626" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14626" pos:column="33">__RPC__out</name> <name pos:line="14626" pos:column="44">void</name> <type:modifier pos:line="14626" pos:column="49">*</type:modifier></type><name pos:line="14626" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14628" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="14628" pos:column="46">HRESULT</name> <argument_list pos:line="14628" pos:column="54">( <argument pos:line="14628" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14628" pos:column="90">(</op:operator> 
            <name pos:line="14629" pos:column="13">TaskItems2</name> <op:operator pos:line="14629" pos:column="24">*</op:operator> <name pos:line="14629" pos:column="26">This</name><op:operator pos:line="14629" pos:column="30">,</op:operator>
            <comment type="block" pos:line="14630" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14630" pos:column="37">__RPC__in</name> struct <name pos:line="14630" pos:column="54">GUID</name> <op:operator pos:line="14630" pos:column="59">*</op:operator><name pos:line="14630" pos:column="60">riid</name><op:operator pos:line="14630" pos:column="64">,</op:operator>
            <comment type="block" pos:line="14631" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14631" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="14631" pos:column="57">signed</name> <name pos:line="14631" pos:column="64">char</name> <op:operator pos:line="14631" pos:column="69">*</op:operator><op:operator pos:line="14631" pos:column="70">*</op:operator><name pos:line="14631" pos:column="71">rgszNames</name><op:operator pos:line="14631" pos:column="80">,</op:operator>
            <comment type="block" pos:line="14632" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14632" pos:column="37">unsigned</name> <name pos:line="14632" pos:column="46">UINT</name> <name pos:line="14632" pos:column="51">cNames</name><op:operator pos:line="14632" pos:column="57">,</op:operator>
            <comment type="block" pos:line="14633" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14633" pos:column="37">unsigned</name> <name pos:line="14633" pos:column="46">long</name> <name pos:line="14633" pos:column="51">lcid</name><op:operator pos:line="14633" pos:column="55">,</op:operator>
            <comment type="block" pos:line="14634" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14634" pos:column="38">__RPC__out</name> <name pos:line="14634" pos:column="49">signed</name> <name pos:line="14634" pos:column="56">long</name> <op:operator pos:line="14634" pos:column="61">*</op:operator><name pos:line="14634" pos:column="62">rgdispid</name><op:operator pos:line="14634" pos:column="70">,</op:operator>
            <comment type="block" pos:line="14635" pos:column="13">/* [retval][out] */</comment> <name pos:line="14635" pos:column="33">__RPC__out</name> <name pos:line="14635" pos:column="44">void</name> <op:operator pos:line="14635" pos:column="49">*</op:operator><name pos:line="14635" pos:column="50">retval</name><op:operator pos:line="14635" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="14637" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="14637" pos:column="46">HRESULT</name> <argument_list pos:line="14637" pos:column="54">( <argument pos:line="14637" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14637" pos:column="83">(</op:operator> 
            <name pos:line="14638" pos:column="13">TaskItems2</name> <op:operator pos:line="14638" pos:column="24">*</op:operator> <name pos:line="14638" pos:column="26">This</name><op:operator pos:line="14638" pos:column="30">,</op:operator>
            <comment type="block" pos:line="14639" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14639" pos:column="37">signed</name> <name pos:line="14639" pos:column="44">long</name> <name pos:line="14639" pos:column="49">dispidMember</name><op:operator pos:line="14639" pos:column="61">,</op:operator>
            <comment type="block" pos:line="14640" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14640" pos:column="37">__RPC__in</name> struct <name pos:line="14640" pos:column="54">GUID</name> <op:operator pos:line="14640" pos:column="59">*</op:operator><name pos:line="14640" pos:column="60">riid</name><op:operator pos:line="14640" pos:column="64">,</op:operator>
            <comment type="block" pos:line="14641" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14641" pos:column="37">unsigned</name> <name pos:line="14641" pos:column="46">long</name> <name pos:line="14641" pos:column="51">lcid</name><op:operator pos:line="14641" pos:column="55">,</op:operator>
            <comment type="block" pos:line="14642" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14642" pos:column="37">unsigned</name> <name pos:line="14642" pos:column="46">short</name> <name pos:line="14642" pos:column="52">wFlags</name><op:operator pos:line="14642" pos:column="58">,</op:operator>
            <comment type="block" pos:line="14643" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14643" pos:column="37">__RPC__in</name> struct <name pos:line="14643" pos:column="54">DISPPARAMS</name> <op:operator pos:line="14643" pos:column="65">*</op:operator><name pos:line="14643" pos:column="66">pdispparams</name><op:operator pos:line="14643" pos:column="77">,</op:operator>
            <comment type="block" pos:line="14644" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14644" pos:column="38">__RPC__out</name> <name pos:line="14644" pos:column="49">VARIANT</name> <op:operator pos:line="14644" pos:column="57">*</op:operator><name pos:line="14644" pos:column="58">pvarResult</name><op:operator pos:line="14644" pos:column="68">,</op:operator>
            <comment type="block" pos:line="14645" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14645" pos:column="38">__RPC__out</name> struct <name pos:line="14645" pos:column="56">EXCEPINFO</name> <op:operator pos:line="14645" pos:column="66">*</op:operator><name pos:line="14645" pos:column="67">pexcepinfo</name><op:operator pos:line="14645" pos:column="77">,</op:operator>
            <comment type="block" pos:line="14646" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14646" pos:column="38">__RPC__out</name> <name pos:line="14646" pos:column="49">unsigned</name> <name pos:line="14646" pos:column="58">UINT</name> <op:operator pos:line="14646" pos:column="63">*</op:operator><name pos:line="14646" pos:column="64">puArgErr</name><op:operator pos:line="14646" pos:column="72">,</op:operator>
            <comment type="block" pos:line="14647" pos:column="13">/* [retval][out] */</comment> <name pos:line="14647" pos:column="33">__RPC__out</name> <name pos:line="14647" pos:column="44">void</name> <op:operator pos:line="14647" pos:column="49">*</op:operator><name pos:line="14647" pos:column="50">retval</name><op:operator pos:line="14647" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="14649" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14649" pos:column="43">HRESULT</name></type> ( <name pos:line="14649" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14649" pos:column="71">*</type:modifier><name pos:line="14649" pos:column="72">get_DTE</name> )<parameter_list pos:line="14649" pos:column="81">( 
            <param><decl><type><name pos:line="14650" pos:column="13">TaskItems2</name> <type:modifier pos:line="14650" pos:column="24">*</type:modifier></type> <name pos:line="14650" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14651" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14651" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="14651" pos:column="54">*</type:modifier><type:modifier pos:line="14651" pos:column="55">*</type:modifier></type><name pos:line="14651" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14653" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14653" pos:column="43">HRESULT</name></type> ( <name pos:line="14653" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14653" pos:column="71">*</type:modifier><name pos:line="14653" pos:column="72">get_Parent</name> )<parameter_list pos:line="14653" pos:column="84">( 
            <param><decl><type><name pos:line="14654" pos:column="13">TaskItems2</name> <type:modifier pos:line="14654" pos:column="24">*</type:modifier></type> <name pos:line="14654" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14655" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14655" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14655" pos:column="54">TaskList</name> <type:modifier pos:line="14655" pos:column="63">*</type:modifier><type:modifier pos:line="14655" pos:column="64">*</type:modifier></type><name pos:line="14655" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14657" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14657" pos:column="34">HRESULT</name></type> ( <name pos:line="14657" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14657" pos:column="62">*</type:modifier><name pos:line="14657" pos:column="63">Item</name> )<parameter_list pos:line="14657" pos:column="69">( 
            <param><decl><type><name pos:line="14658" pos:column="13">TaskItems2</name> <type:modifier pos:line="14658" pos:column="24">*</type:modifier></type> <name pos:line="14658" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14659" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14659" pos:column="37">VARIANT</name></type> <name pos:line="14659" pos:column="45">index</name></decl></param>,
            <comment type="block" pos:line="14660" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14660" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14660" pos:column="54">TaskItem</name> <type:modifier pos:line="14660" pos:column="63">*</type:modifier><type:modifier pos:line="14660" pos:column="64">*</type:modifier></type><name pos:line="14660" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14662" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14662" pos:column="43">HRESULT</name></type> ( <name pos:line="14662" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14662" pos:column="71">*</type:modifier><name pos:line="14662" pos:column="72">get_Count</name> )<parameter_list pos:line="14662" pos:column="83">( 
            <param><decl><type><name pos:line="14663" pos:column="13">TaskItems2</name> <type:modifier pos:line="14663" pos:column="24">*</type:modifier></type> <name pos:line="14663" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14664" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14664" pos:column="33">__RPC__out</name> <name pos:line="14664" pos:column="44">signed</name> <name pos:line="14664" pos:column="51">long</name> <type:modifier pos:line="14664" pos:column="56">*</type:modifier></type><name pos:line="14664" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14666" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="14666" pos:column="34">HRESULT</name> <argument_list pos:line="14666" pos:column="42">( <argument pos:line="14666" pos:column="44">STDMETHODCALLTYPE *Add</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14666" pos:column="68">(</op:operator> 
            <name pos:line="14667" pos:column="13">TaskItems2</name> <op:operator pos:line="14667" pos:column="24">*</op:operator> <name pos:line="14667" pos:column="26">This</name><op:operator pos:line="14667" pos:column="30">,</op:operator>
            <comment type="block" pos:line="14668" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14668" pos:column="37">__RPC__in</name> <name pos:line="14668" pos:column="47">BSTR</name> <name pos:line="14668" pos:column="52">Category</name><op:operator pos:line="14668" pos:column="60">,</op:operator>
            <comment type="block" pos:line="14669" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14669" pos:column="37">__RPC__in</name> <name pos:line="14669" pos:column="47">BSTR</name> <name pos:line="14669" pos:column="52">SubCategory</name><op:operator pos:line="14669" pos:column="63">,</op:operator>
            <comment type="block" pos:line="14670" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14670" pos:column="37">__RPC__in</name> <name pos:line="14670" pos:column="47">BSTR</name> <name pos:line="14670" pos:column="52">Description</name><op:operator pos:line="14670" pos:column="63">,</op:operator>
            <comment type="block" pos:line="14671" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="14671" pos:column="42">vsTaskPriority</name> <name pos:line="14671" pos:column="57">Priority</name><op:operator pos:line="14671" pos:column="65">,</op:operator>
            <comment type="block" pos:line="14672" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14672" pos:column="37">VARIANT</name> <name pos:line="14672" pos:column="45">Icon</name><op:operator pos:line="14672" pos:column="49">,</op:operator>
            <comment type="block" pos:line="14673" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14673" pos:column="37">BOOLEAN</name> <name pos:line="14673" pos:column="45">Checkable</name><op:operator pos:line="14673" pos:column="54">,</op:operator>
            <comment type="block" pos:line="14674" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14674" pos:column="37">__RPC__in</name> <name pos:line="14674" pos:column="47">BSTR</name> <name pos:line="14674" pos:column="52">File</name><op:operator pos:line="14674" pos:column="56">,</op:operator>
            <comment type="block" pos:line="14675" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14675" pos:column="37">signed</name> <name pos:line="14675" pos:column="44">long</name> <name pos:line="14675" pos:column="49">Line</name><op:operator pos:line="14675" pos:column="53">,</op:operator>
            <comment type="block" pos:line="14676" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14676" pos:column="37">BOOLEAN</name> <name pos:line="14676" pos:column="45">CanUserDelete</name><op:operator pos:line="14676" pos:column="58">,</op:operator>
            <comment type="block" pos:line="14677" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14677" pos:column="37">BOOLEAN</name> <name pos:line="14677" pos:column="45">FlushItem</name><op:operator pos:line="14677" pos:column="54">,</op:operator>
            <comment type="block" pos:line="14678" pos:column="13">/* [retval][out] */</comment> <name pos:line="14678" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14678" pos:column="54">TaskItem</name> <op:operator pos:line="14678" pos:column="63">*</op:operator><op:operator pos:line="14678" pos:column="64">*</op:operator><name pos:line="14678" pos:column="65">retval</name><op:operator pos:line="14678" pos:column="71">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="14680" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="14680" pos:column="46">HRESULT</name></type> ( <name pos:line="14680" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14680" pos:column="74">*</type:modifier><name pos:line="14680" pos:column="75">_NewEnum</name> )<parameter_list pos:line="14680" pos:column="85">( 
            <param><decl><type><name pos:line="14681" pos:column="13">TaskItems2</name> <type:modifier pos:line="14681" pos:column="24">*</type:modifier></type> <name pos:line="14681" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14682" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14682" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14682" pos:column="54">IUnknown</name> <type:modifier pos:line="14682" pos:column="63">*</type:modifier><type:modifier pos:line="14682" pos:column="64">*</type:modifier></type><name pos:line="14682" pos:column="65">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14684" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14684" pos:column="34">HRESULT</name></type> ( <name pos:line="14684" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14684" pos:column="62">*</type:modifier><name pos:line="14684" pos:column="63">ForceItemsToTaskList</name> )<parameter_list pos:line="14684" pos:column="85">( 
            <param><decl><type><name pos:line="14685" pos:column="13">TaskItems2</name> <type:modifier pos:line="14685" pos:column="24">*</type:modifier></type> <name pos:line="14685" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14686" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14686" pos:column="33">__RPC__out</name> <name pos:line="14686" pos:column="44">void</name> <type:modifier pos:line="14686" pos:column="49">*</type:modifier></type><name pos:line="14686" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14688" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="14688" pos:column="64">HRESULT</name></type> ( <name pos:line="14688" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="14688" pos:column="92">*</type:modifier><name pos:line="14688" pos:column="93">Add2</name> )<parameter_list pos:line="14688" pos:column="99">( 
            <param><decl><type><name pos:line="14689" pos:column="13">TaskItems2</name> <type:modifier pos:line="14689" pos:column="24">*</type:modifier></type> <name pos:line="14689" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14690" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14690" pos:column="24">__RPC__in</name> <name pos:line="14690" pos:column="34">BSTR</name></type> <name pos:line="14690" pos:column="39">Category</name></decl></param>,
            <comment type="block" pos:line="14691" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14691" pos:column="24">__RPC__in</name> <name pos:line="14691" pos:column="34">BSTR</name></type> <name pos:line="14691" pos:column="39">SubCategory</name></decl></param>,
            <comment type="block" pos:line="14692" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="14692" pos:column="24">__RPC__in</name> <name pos:line="14692" pos:column="34">BSTR</name></type> <name pos:line="14692" pos:column="39">Description</name></decl></param>,
            <comment type="block" pos:line="14693" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="14693" pos:column="38">long</name></type> <name pos:line="14693" pos:column="43">Priority</name></decl></param>,
            <comment type="block" pos:line="14694" pos:column="13">/* [optional][in] */</comment> <param><decl><type><name pos:line="14694" pos:column="34">VARIANT</name></type> <name pos:line="14694" pos:column="42">Icon</name></decl></param>,
            <comment type="block" pos:line="14695" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="14695" pos:column="38">VARIANT_BOOL</name></type> <name pos:line="14695" pos:column="51">Checkable</name></decl></param>,
            <comment type="block" pos:line="14696" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="14696" pos:column="38">__RPC__in</name> <name pos:line="14696" pos:column="48">BSTR</name></type> <name pos:line="14696" pos:column="53">File</name></decl></param>,
            <comment type="block" pos:line="14697" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="14697" pos:column="38">long</name></type> <name pos:line="14697" pos:column="43">Line</name></decl></param>,
            <comment type="block" pos:line="14698" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="14698" pos:column="38">VARIANT_BOOL</name></type> <name pos:line="14698" pos:column="51">CanUserDelete</name></decl></param>,
            <comment type="block" pos:line="14699" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="14699" pos:column="38">VARIANT_BOOL</name></type> <name pos:line="14699" pos:column="51">FlushItem</name></decl></param>,
            <comment type="block" pos:line="14700" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="14700" pos:column="38">VARIANT_BOOL</name></type> <name pos:line="14700" pos:column="51">AutoNavigate</name></decl></param>,
            <comment type="block" pos:line="14701" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14701" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="14701" pos:column="54">/* external definition not present */</comment> <name pos:line="14701" pos:column="92">TaskItem</name> <type:modifier pos:line="14701" pos:column="101">*</type:modifier><type:modifier pos:line="14701" pos:column="102">*</type:modifier></type><name pos:line="14701" pos:column="103">pTaskItem</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="14703" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="14704" pos:column="7">TaskItems2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="14706" pos:column="5">interface</name></type> <name pos:line="14706" pos:column="15">TaskItems2</name>
    <argument_list pos:line="14707" pos:column="5">{
        <argument><expr><name pos:line="14708" pos:column="9">CONST_VTBL</name> struct <name pos:line="14708" pos:column="27">TaskItems2Vtbl</name> <op:operator pos:line="14708" pos:column="42">*</op:operator><name pos:line="14708" pos:column="43">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="14713" pos:column="1">#<cpp:directive pos:line="14713" pos:column="2">ifdef</cpp:directive> <name pos:line="14713" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="14716" pos:column="1">#<cpp:directive pos:line="14716" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14716" pos:column="9">TaskItems2_QueryInterface</name><parameter_list pos:line="14716" pos:column="34">(<param><type><name pos:line="14716" pos:column="35">This</name></type></param>,<param><type><name pos:line="14716" pos:column="40">riid</name></type></param>,<param><type><name pos:line="14716" pos:column="45">ppvObj</name></type></param>,<param><type><name pos:line="14716" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14717" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14719" pos:column="1">#<cpp:directive pos:line="14719" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14719" pos:column="9">TaskItems2_AddRef</name><parameter_list pos:line="14719" pos:column="26">(<param><type><name pos:line="14719" pos:column="27">This</name></type></param>,<param><type><name pos:line="14719" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14720" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14722" pos:column="1">#<cpp:directive pos:line="14722" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14722" pos:column="9">TaskItems2_Release</name><parameter_list pos:line="14722" pos:column="27">(<param><type><name pos:line="14722" pos:column="28">This</name></type></param>,<param><type><name pos:line="14722" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14723" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14725" pos:column="1">#<cpp:directive pos:line="14725" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14725" pos:column="9">TaskItems2_GetTypeInfoCount</name><parameter_list pos:line="14725" pos:column="36">(<param><type><name pos:line="14725" pos:column="37">This</name></type></param>,<param><type><name pos:line="14725" pos:column="42">pctinfo</name></type></param>,<param><type><name pos:line="14725" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14726" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14728" pos:column="1">#<cpp:directive pos:line="14728" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14728" pos:column="9">TaskItems2_GetTypeInfo</name><parameter_list pos:line="14728" pos:column="31">(<param><type><name pos:line="14728" pos:column="32">This</name></type></param>,<param><type><name pos:line="14728" pos:column="37">itinfo</name></type></param>,<param><type><name pos:line="14728" pos:column="44">lcid</name></type></param>,<param><type><name pos:line="14728" pos:column="49">pptinfo</name></type></param>,<param><type><name pos:line="14728" pos:column="57">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14729" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14731" pos:column="1">#<cpp:directive pos:line="14731" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14731" pos:column="9">TaskItems2_GetIDsOfNames</name><parameter_list pos:line="14731" pos:column="33">(<param><type><name pos:line="14731" pos:column="34">This</name></type></param>,<param><type><name pos:line="14731" pos:column="39">riid</name></type></param>,<param><type><name pos:line="14731" pos:column="44">rgszNames</name></type></param>,<param><type><name pos:line="14731" pos:column="54">cNames</name></type></param>,<param><type><name pos:line="14731" pos:column="61">lcid</name></type></param>,<param><type><name pos:line="14731" pos:column="66">rgdispid</name></type></param>,<param><type><name pos:line="14731" pos:column="75">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14732" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14734" pos:column="1">#<cpp:directive pos:line="14734" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14734" pos:column="9">TaskItems2_Invoke</name><parameter_list pos:line="14734" pos:column="26">(<param><type><name pos:line="14734" pos:column="27">This</name></type></param>,<param><type><name pos:line="14734" pos:column="32">dispidMember</name></type></param>,<param><type><name pos:line="14734" pos:column="45">riid</name></type></param>,<param><type><name pos:line="14734" pos:column="50">lcid</name></type></param>,<param><type><name pos:line="14734" pos:column="55">wFlags</name></type></param>,<param><type><name pos:line="14734" pos:column="62">pdispparams</name></type></param>,<param><type><name pos:line="14734" pos:column="74">pvarResult</name></type></param>,<param><type><name pos:line="14734" pos:column="85">pexcepinfo</name></type></param>,<param><type><name pos:line="14734" pos:column="96">puArgErr</name></type></param>,<param><type><name pos:line="14734" pos:column="105">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14735" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14737" pos:column="1">#<cpp:directive pos:line="14737" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14737" pos:column="9">TaskItems2_get_DTE</name><parameter_list pos:line="14737" pos:column="27">(<param><type><name pos:line="14737" pos:column="28">This</name></type></param>,<param><type><name pos:line="14737" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14738" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14740" pos:column="1">#<cpp:directive pos:line="14740" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14740" pos:column="9">TaskItems2_get_Parent</name><parameter_list pos:line="14740" pos:column="30">(<param><type><name pos:line="14740" pos:column="31">This</name></type></param>,<param><type><name pos:line="14740" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14741" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14743" pos:column="1">#<cpp:directive pos:line="14743" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14743" pos:column="9">TaskItems2_Item</name><parameter_list pos:line="14743" pos:column="24">(<param><type><name pos:line="14743" pos:column="25">This</name></type></param>,<param><type><name pos:line="14743" pos:column="30">index</name></type></param>,<param><type><name pos:line="14743" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14744" pos:column="5">( (This)-&gt;lpVtbl -&gt; Item(This,index,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14746" pos:column="1">#<cpp:directive pos:line="14746" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14746" pos:column="9">TaskItems2_get_Count</name><parameter_list pos:line="14746" pos:column="29">(<param><type><name pos:line="14746" pos:column="30">This</name></type></param>,<param><type><name pos:line="14746" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14747" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Count(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14749" pos:column="1">#<cpp:directive pos:line="14749" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14749" pos:column="9">TaskItems2_Add</name><parameter_list pos:line="14749" pos:column="23">(<param><type><name pos:line="14749" pos:column="24">This</name></type></param>,<param><type><name pos:line="14749" pos:column="29">Category</name></type></param>,<param><type><name pos:line="14749" pos:column="38">SubCategory</name></type></param>,<param><type><name pos:line="14749" pos:column="50">Description</name></type></param>,<param><type><name pos:line="14749" pos:column="62">Priority</name></type></param>,<param><type><name pos:line="14749" pos:column="71">Icon</name></type></param>,<param><type><name pos:line="14749" pos:column="76">Checkable</name></type></param>,<param><type><name pos:line="14749" pos:column="86">File</name></type></param>,<param><type><name pos:line="14749" pos:column="91">Line</name></type></param>,<param><type><name pos:line="14749" pos:column="96">CanUserDelete</name></type></param>,<param><type><name pos:line="14749" pos:column="110">FlushItem</name></type></param>,<param><type><name pos:line="14749" pos:column="120">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14750" pos:column="5">( (This)-&gt;lpVtbl -&gt; Add(This,Category,SubCategory,Description,Priority,Icon,Checkable,File,Line,CanUserDelete,FlushItem,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14752" pos:column="1">#<cpp:directive pos:line="14752" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14752" pos:column="9">TaskItems2__NewEnum</name><parameter_list pos:line="14752" pos:column="28">(<param><type><name pos:line="14752" pos:column="29">This</name></type></param>,<param><type><name pos:line="14752" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14753" pos:column="5">( (This)-&gt;lpVtbl -&gt; _NewEnum(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="14755" pos:column="1">#<cpp:directive pos:line="14755" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14755" pos:column="9">TaskItems2_ForceItemsToTaskList</name><parameter_list pos:line="14755" pos:column="40">(<param><type><name pos:line="14755" pos:column="41">This</name></type></param>,<param><type><name pos:line="14755" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14756" pos:column="5">( (This)-&gt;lpVtbl -&gt; ForceItemsToTaskList(This,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="14759" pos:column="1">#<cpp:directive pos:line="14759" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14759" pos:column="9">TaskItems2_Add2</name><parameter_list pos:line="14759" pos:column="24">(<param><type><name pos:line="14759" pos:column="25">This</name></type></param>,<param><type><name pos:line="14759" pos:column="30">Category</name></type></param>,<param><type><name pos:line="14759" pos:column="39">SubCategory</name></type></param>,<param><type><name pos:line="14759" pos:column="51">Description</name></type></param>,<param><type><name pos:line="14759" pos:column="63">Priority</name></type></param>,<param><type><name pos:line="14759" pos:column="72">Icon</name></type></param>,<param><type><name pos:line="14759" pos:column="77">Checkable</name></type></param>,<param><type><name pos:line="14759" pos:column="87">File</name></type></param>,<param><type><name pos:line="14759" pos:column="92">Line</name></type></param>,<param><type><name pos:line="14759" pos:column="97">CanUserDelete</name></type></param>,<param><type><name pos:line="14759" pos:column="111">FlushItem</name></type></param>,<param><type><name pos:line="14759" pos:column="121">AutoNavigate</name></type></param>,<param><type><name pos:line="14759" pos:column="134">pTaskItem</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="14760" pos:column="5">( (This)-&gt;lpVtbl -&gt; Add2(This,Category,SubCategory,Description,Priority,Icon,Checkable,File,Line,CanUserDelete,FlushItem,AutoNavigate,pTaskItem) )</cpp:value></cpp:define> 

<cpp:endif pos:line="14762" pos:column="1">#<cpp:directive pos:line="14762" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="14762" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="14765" pos:column="1">#<cpp:directive pos:line="14765" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14765" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="14770" pos:column="1">#<cpp:directive pos:line="14770" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="14770" pos:column="9">/* __TaskItems2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="14773" pos:column="1">#<cpp:directive pos:line="14773" pos:column="2">ifndef</cpp:directive> <name pos:line="14773" pos:column="9">__EditPoint2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="14774" pos:column="1">#<cpp:directive pos:line="14774" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14774" pos:column="9">__EditPoint2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="14776" pos:column="1">/* interface EditPoint2 */</comment>
<comment type="block" pos:line="14777" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="14780" pos:column="1">EXTERN_C</name> <specifier pos:line="14780" pos:column="10">const</specifier> <name pos:line="14780" pos:column="16">IID</name></type> <name pos:line="14780" pos:column="20">IID_EditPoint2</name></decl>;</decl_stmt>

<cpp:if pos:line="14782" pos:column="1">#<cpp:directive pos:line="14782" pos:column="2">if</cpp:directive> <expr><call><name pos:line="14782" pos:column="5">defined</name><argument_list pos:line="14782" pos:column="12">(<argument><expr><name pos:line="14782" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="14782" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="14782" pos:column="29">!</op:operator><call><name pos:line="14782" pos:column="30">defined</name><argument_list pos:line="14782" pos:column="37">(<argument><expr><name pos:line="14782" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="14784" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="14784" pos:column="19">(<argument pos:line="14784" pos:column="20">"136AFA9F-F243-4abb-A8F8-4C2D26C47163"</argument>)</argument_list></macro>
    <label><name pos:line="14785" pos:column="5">EditPoint2</name> :</label> <expr_stmt><expr pos:line="14785" pos:column="18">public <name pos:line="14785" pos:column="25">EditPoint</name>
    <block pos:line="14786" pos:column="5">{
    <expr pos:line="14787" pos:column="5">public<op:operator pos:line="14787" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="14788" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="14788" pos:column="72">HRESULT</name> <name pos:line="14788" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="14788" pos:column="98">InsertNewLine</name><argument_list pos:line="14788" pos:column="111">( 
            <comment type="block" pos:line="14789" pos:column="13">/* [defaultvalue][in] */</comment> <argument pos:line="14789" pos:column="38">long Count = 1</argument>)</argument_list></macro> <op:operator pos:line="14789" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="14789" pos:column="56">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="14793" pos:column="1">#<cpp:directive pos:line="14793" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="14793" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="14795" pos:column="5">typedef <type><struct pos:line="14795" pos:column="13">struct <name pos:line="14795" pos:column="20">EditPoint2Vtbl</name>
    <block pos:line="14796" pos:column="5">{<public type="default" pos:line="14796" pos:column="6">
        <decl_stmt><decl><type><name pos:line="14797" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="14799" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="14799" pos:column="46">HRESULT</name></type> ( <name pos:line="14799" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14799" pos:column="74">*</type:modifier><name pos:line="14799" pos:column="75">QueryInterface</name> )<parameter_list pos:line="14799" pos:column="91">( 
            <param><decl><type><name pos:line="14800" pos:column="13">EditPoint2</name> <type:modifier pos:line="14800" pos:column="24">*</type:modifier></type> <name pos:line="14800" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14801" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="14801" pos:column="47">struct <name pos:line="14801" pos:column="54">GUID</name> <type:modifier pos:line="14801" pos:column="59">*</type:modifier></type><name pos:line="14801" pos:column="60">riid</name></decl><op:operator pos:line="14801" pos:column="64">,</op:operator>
            <comment type="block" pos:line="14802" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14802" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="14802" pos:column="59">void</name> <type:modifier pos:line="14802" pos:column="64">*</type:modifier><type:modifier pos:line="14802" pos:column="65">*</type:modifier><name pos:line="14802" pos:column="66">ppvObj</name><op:operator pos:line="14802" pos:column="72">,</op:operator>
            <comment type="block" pos:line="14803" pos:column="13">/* [retval][out] */</comment> <name pos:line="14803" pos:column="33">__RPC__out</name> <name pos:line="14803" pos:column="44">void</name> <type:modifier pos:line="14803" pos:column="49">*</type:modifier><name pos:line="14803" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="14805" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="14805" pos:column="46">HRESULT</name></type> ( <name pos:line="14805" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14805" pos:column="74">*</type:modifier><name pos:line="14805" pos:column="75">AddRef</name> )<parameter_list pos:line="14805" pos:column="83">( 
            <param><decl><type><name pos:line="14806" pos:column="13">EditPoint2</name> <type:modifier pos:line="14806" pos:column="24">*</type:modifier></type> <name pos:line="14806" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14807" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14807" pos:column="33">__RPC__out</name> <name pos:line="14807" pos:column="44">unsigned</name> <name pos:line="14807" pos:column="53">long</name> <type:modifier pos:line="14807" pos:column="58">*</type:modifier></type><name pos:line="14807" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14809" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="14809" pos:column="46">HRESULT</name></type> ( <name pos:line="14809" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14809" pos:column="74">*</type:modifier><name pos:line="14809" pos:column="75">Release</name> )<parameter_list pos:line="14809" pos:column="84">( 
            <param><decl><type><name pos:line="14810" pos:column="13">EditPoint2</name> <type:modifier pos:line="14810" pos:column="24">*</type:modifier></type> <name pos:line="14810" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14811" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14811" pos:column="33">__RPC__out</name> <name pos:line="14811" pos:column="44">unsigned</name> <name pos:line="14811" pos:column="53">long</name> <type:modifier pos:line="14811" pos:column="58">*</type:modifier></type><name pos:line="14811" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14813" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="14813" pos:column="46">HRESULT</name></type> ( <name pos:line="14813" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14813" pos:column="74">*</type:modifier><name pos:line="14813" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="14813" pos:column="93">( 
            <param><decl><type><name pos:line="14814" pos:column="13">EditPoint2</name> <type:modifier pos:line="14814" pos:column="24">*</type:modifier></type> <name pos:line="14814" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14815" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="14815" pos:column="38">__RPC__out</name> <name pos:line="14815" pos:column="49">unsigned</name> <name pos:line="14815" pos:column="58">UINT</name> <type:modifier pos:line="14815" pos:column="63">*</type:modifier></type><name pos:line="14815" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="14816" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14816" pos:column="33">__RPC__out</name> <name pos:line="14816" pos:column="44">void</name> <type:modifier pos:line="14816" pos:column="49">*</type:modifier></type><name pos:line="14816" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14818" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="14818" pos:column="46">HRESULT</name></type> ( <name pos:line="14818" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="14818" pos:column="74">*</type:modifier><name pos:line="14818" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="14818" pos:column="88">( 
            <param><decl><type><name pos:line="14819" pos:column="13">EditPoint2</name> <type:modifier pos:line="14819" pos:column="24">*</type:modifier></type> <name pos:line="14819" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14820" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14820" pos:column="37">unsigned</name> <name pos:line="14820" pos:column="46">UINT</name></type> <name pos:line="14820" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="14821" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14821" pos:column="37">unsigned</name> <name pos:line="14821" pos:column="46">long</name></type> <name pos:line="14821" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="14822" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="14822" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="14822" pos:column="59">void</name> <type:modifier pos:line="14822" pos:column="64">*</type:modifier><type:modifier pos:line="14822" pos:column="65">*</type:modifier></type><name pos:line="14822" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="14823" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14823" pos:column="33">__RPC__out</name> <name pos:line="14823" pos:column="44">void</name> <type:modifier pos:line="14823" pos:column="49">*</type:modifier></type><name pos:line="14823" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14825" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="14825" pos:column="46">HRESULT</name> <argument_list pos:line="14825" pos:column="54">( <argument pos:line="14825" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14825" pos:column="90">(</op:operator> 
            <name pos:line="14826" pos:column="13">EditPoint2</name> <op:operator pos:line="14826" pos:column="24">*</op:operator> <name pos:line="14826" pos:column="26">This</name><op:operator pos:line="14826" pos:column="30">,</op:operator>
            <comment type="block" pos:line="14827" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14827" pos:column="37">__RPC__in</name> struct <name pos:line="14827" pos:column="54">GUID</name> <op:operator pos:line="14827" pos:column="59">*</op:operator><name pos:line="14827" pos:column="60">riid</name><op:operator pos:line="14827" pos:column="64">,</op:operator>
            <comment type="block" pos:line="14828" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14828" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="14828" pos:column="57">signed</name> <name pos:line="14828" pos:column="64">char</name> <op:operator pos:line="14828" pos:column="69">*</op:operator><op:operator pos:line="14828" pos:column="70">*</op:operator><name pos:line="14828" pos:column="71">rgszNames</name><op:operator pos:line="14828" pos:column="80">,</op:operator>
            <comment type="block" pos:line="14829" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14829" pos:column="37">unsigned</name> <name pos:line="14829" pos:column="46">UINT</name> <name pos:line="14829" pos:column="51">cNames</name><op:operator pos:line="14829" pos:column="57">,</op:operator>
            <comment type="block" pos:line="14830" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14830" pos:column="37">unsigned</name> <name pos:line="14830" pos:column="46">long</name> <name pos:line="14830" pos:column="51">lcid</name><op:operator pos:line="14830" pos:column="55">,</op:operator>
            <comment type="block" pos:line="14831" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14831" pos:column="38">__RPC__out</name> <name pos:line="14831" pos:column="49">signed</name> <name pos:line="14831" pos:column="56">long</name> <op:operator pos:line="14831" pos:column="61">*</op:operator><name pos:line="14831" pos:column="62">rgdispid</name><op:operator pos:line="14831" pos:column="70">,</op:operator>
            <comment type="block" pos:line="14832" pos:column="13">/* [retval][out] */</comment> <name pos:line="14832" pos:column="33">__RPC__out</name> <name pos:line="14832" pos:column="44">void</name> <op:operator pos:line="14832" pos:column="49">*</op:operator><name pos:line="14832" pos:column="50">retval</name><op:operator pos:line="14832" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="14834" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="14834" pos:column="46">HRESULT</name> <argument_list pos:line="14834" pos:column="54">( <argument pos:line="14834" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14834" pos:column="83">(</op:operator> 
            <name pos:line="14835" pos:column="13">EditPoint2</name> <op:operator pos:line="14835" pos:column="24">*</op:operator> <name pos:line="14835" pos:column="26">This</name><op:operator pos:line="14835" pos:column="30">,</op:operator>
            <comment type="block" pos:line="14836" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14836" pos:column="37">signed</name> <name pos:line="14836" pos:column="44">long</name> <name pos:line="14836" pos:column="49">dispidMember</name><op:operator pos:line="14836" pos:column="61">,</op:operator>
            <comment type="block" pos:line="14837" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14837" pos:column="37">__RPC__in</name> struct <name pos:line="14837" pos:column="54">GUID</name> <op:operator pos:line="14837" pos:column="59">*</op:operator><name pos:line="14837" pos:column="60">riid</name><op:operator pos:line="14837" pos:column="64">,</op:operator>
            <comment type="block" pos:line="14838" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14838" pos:column="37">unsigned</name> <name pos:line="14838" pos:column="46">long</name> <name pos:line="14838" pos:column="51">lcid</name><op:operator pos:line="14838" pos:column="55">,</op:operator>
            <comment type="block" pos:line="14839" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14839" pos:column="37">unsigned</name> <name pos:line="14839" pos:column="46">short</name> <name pos:line="14839" pos:column="52">wFlags</name><op:operator pos:line="14839" pos:column="58">,</op:operator>
            <comment type="block" pos:line="14840" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="14840" pos:column="37">__RPC__in</name> struct <name pos:line="14840" pos:column="54">DISPPARAMS</name> <op:operator pos:line="14840" pos:column="65">*</op:operator><name pos:line="14840" pos:column="66">pdispparams</name><op:operator pos:line="14840" pos:column="77">,</op:operator>
            <comment type="block" pos:line="14841" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14841" pos:column="38">__RPC__out</name> <name pos:line="14841" pos:column="49">VARIANT</name> <op:operator pos:line="14841" pos:column="57">*</op:operator><name pos:line="14841" pos:column="58">pvarResult</name><op:operator pos:line="14841" pos:column="68">,</op:operator>
            <comment type="block" pos:line="14842" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14842" pos:column="38">__RPC__out</name> struct <name pos:line="14842" pos:column="56">EXCEPINFO</name> <op:operator pos:line="14842" pos:column="66">*</op:operator><name pos:line="14842" pos:column="67">pexcepinfo</name><op:operator pos:line="14842" pos:column="77">,</op:operator>
            <comment type="block" pos:line="14843" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="14843" pos:column="38">__RPC__out</name> <name pos:line="14843" pos:column="49">unsigned</name> <name pos:line="14843" pos:column="58">UINT</name> <op:operator pos:line="14843" pos:column="63">*</op:operator><name pos:line="14843" pos:column="64">puArgErr</name><op:operator pos:line="14843" pos:column="72">,</op:operator>
            <comment type="block" pos:line="14844" pos:column="13">/* [retval][out] */</comment> <name pos:line="14844" pos:column="33">__RPC__out</name> <name pos:line="14844" pos:column="44">void</name> <op:operator pos:line="14844" pos:column="49">*</op:operator><name pos:line="14844" pos:column="50">retval</name><op:operator pos:line="14844" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="14846" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14846" pos:column="43">HRESULT</name></type> ( <name pos:line="14846" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14846" pos:column="71">*</type:modifier><name pos:line="14846" pos:column="72">get_DTE</name> )<parameter_list pos:line="14846" pos:column="81">( 
            <param><decl><type><name pos:line="14847" pos:column="13">EditPoint2</name> <type:modifier pos:line="14847" pos:column="24">*</type:modifier></type> <name pos:line="14847" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14848" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14848" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="14848" pos:column="54">*</type:modifier><type:modifier pos:line="14848" pos:column="55">*</type:modifier></type><name pos:line="14848" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14850" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14850" pos:column="43">HRESULT</name></type> ( <name pos:line="14850" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14850" pos:column="71">*</type:modifier><name pos:line="14850" pos:column="72">get_Parent</name> )<parameter_list pos:line="14850" pos:column="84">( 
            <param><decl><type><name pos:line="14851" pos:column="13">EditPoint2</name> <type:modifier pos:line="14851" pos:column="24">*</type:modifier></type> <name pos:line="14851" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14852" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14852" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14852" pos:column="54">TextDocument</name> <type:modifier pos:line="14852" pos:column="67">*</type:modifier><type:modifier pos:line="14852" pos:column="68">*</type:modifier></type><name pos:line="14852" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14854" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14854" pos:column="43">HRESULT</name></type> ( <name pos:line="14854" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14854" pos:column="71">*</type:modifier><name pos:line="14854" pos:column="72">get_Line</name> )<parameter_list pos:line="14854" pos:column="82">( 
            <param><decl><type><name pos:line="14855" pos:column="13">EditPoint2</name> <type:modifier pos:line="14855" pos:column="24">*</type:modifier></type> <name pos:line="14855" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14856" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14856" pos:column="33">__RPC__out</name> <name pos:line="14856" pos:column="44">signed</name> <name pos:line="14856" pos:column="51">long</name> <type:modifier pos:line="14856" pos:column="56">*</type:modifier></type><name pos:line="14856" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14858" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14858" pos:column="43">HRESULT</name></type> ( <name pos:line="14858" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14858" pos:column="71">*</type:modifier><name pos:line="14858" pos:column="72">get_LineCharOffset</name> )<parameter_list pos:line="14858" pos:column="92">( 
            <param><decl><type><name pos:line="14859" pos:column="13">EditPoint2</name> <type:modifier pos:line="14859" pos:column="24">*</type:modifier></type> <name pos:line="14859" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14860" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14860" pos:column="33">__RPC__out</name> <name pos:line="14860" pos:column="44">signed</name> <name pos:line="14860" pos:column="51">long</name> <type:modifier pos:line="14860" pos:column="56">*</type:modifier></type><name pos:line="14860" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14862" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14862" pos:column="43">HRESULT</name></type> ( <name pos:line="14862" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14862" pos:column="71">*</type:modifier><name pos:line="14862" pos:column="72">get_AbsoluteCharOffset</name> )<parameter_list pos:line="14862" pos:column="96">( 
            <param><decl><type><name pos:line="14863" pos:column="13">EditPoint2</name> <type:modifier pos:line="14863" pos:column="24">*</type:modifier></type> <name pos:line="14863" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14864" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14864" pos:column="33">__RPC__out</name> <name pos:line="14864" pos:column="44">signed</name> <name pos:line="14864" pos:column="51">long</name> <type:modifier pos:line="14864" pos:column="56">*</type:modifier></type><name pos:line="14864" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14866" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14866" pos:column="43">HRESULT</name></type> ( <name pos:line="14866" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14866" pos:column="71">*</type:modifier><name pos:line="14866" pos:column="72">get_DisplayColumn</name> )<parameter_list pos:line="14866" pos:column="91">( 
            <param><decl><type><name pos:line="14867" pos:column="13">EditPoint2</name> <type:modifier pos:line="14867" pos:column="24">*</type:modifier></type> <name pos:line="14867" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14868" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14868" pos:column="33">__RPC__out</name> <name pos:line="14868" pos:column="44">signed</name> <name pos:line="14868" pos:column="51">long</name> <type:modifier pos:line="14868" pos:column="56">*</type:modifier></type><name pos:line="14868" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14870" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14870" pos:column="43">HRESULT</name></type> ( <name pos:line="14870" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14870" pos:column="71">*</type:modifier><name pos:line="14870" pos:column="72">get_AtEndOfDocument</name> )<parameter_list pos:line="14870" pos:column="93">( 
            <param><decl><type><name pos:line="14871" pos:column="13">EditPoint2</name> <type:modifier pos:line="14871" pos:column="24">*</type:modifier></type> <name pos:line="14871" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14872" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14872" pos:column="33">__RPC__out</name> <name pos:line="14872" pos:column="44">BOOLEAN</name> <type:modifier pos:line="14872" pos:column="52">*</type:modifier></type><name pos:line="14872" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14874" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14874" pos:column="43">HRESULT</name></type> ( <name pos:line="14874" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14874" pos:column="71">*</type:modifier><name pos:line="14874" pos:column="72">get_AtStartOfDocument</name> )<parameter_list pos:line="14874" pos:column="95">( 
            <param><decl><type><name pos:line="14875" pos:column="13">EditPoint2</name> <type:modifier pos:line="14875" pos:column="24">*</type:modifier></type> <name pos:line="14875" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14876" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14876" pos:column="33">__RPC__out</name> <name pos:line="14876" pos:column="44">BOOLEAN</name> <type:modifier pos:line="14876" pos:column="52">*</type:modifier></type><name pos:line="14876" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14878" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14878" pos:column="43">HRESULT</name></type> ( <name pos:line="14878" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14878" pos:column="71">*</type:modifier><name pos:line="14878" pos:column="72">get_AtEndOfLine</name> )<parameter_list pos:line="14878" pos:column="89">( 
            <param><decl><type><name pos:line="14879" pos:column="13">EditPoint2</name> <type:modifier pos:line="14879" pos:column="24">*</type:modifier></type> <name pos:line="14879" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14880" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14880" pos:column="33">__RPC__out</name> <name pos:line="14880" pos:column="44">BOOLEAN</name> <type:modifier pos:line="14880" pos:column="52">*</type:modifier></type><name pos:line="14880" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14882" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14882" pos:column="43">HRESULT</name></type> ( <name pos:line="14882" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14882" pos:column="71">*</type:modifier><name pos:line="14882" pos:column="72">get_AtStartOfLine</name> )<parameter_list pos:line="14882" pos:column="91">( 
            <param><decl><type><name pos:line="14883" pos:column="13">EditPoint2</name> <type:modifier pos:line="14883" pos:column="24">*</type:modifier></type> <name pos:line="14883" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14884" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14884" pos:column="33">__RPC__out</name> <name pos:line="14884" pos:column="44">BOOLEAN</name> <type:modifier pos:line="14884" pos:column="52">*</type:modifier></type><name pos:line="14884" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14886" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="14886" pos:column="43">HRESULT</name></type> ( <name pos:line="14886" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="14886" pos:column="71">*</type:modifier><name pos:line="14886" pos:column="72">get_LineLength</name> )<parameter_list pos:line="14886" pos:column="88">( 
            <param><decl><type><name pos:line="14887" pos:column="13">EditPoint2</name> <type:modifier pos:line="14887" pos:column="24">*</type:modifier></type> <name pos:line="14887" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14888" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14888" pos:column="33">__RPC__out</name> <name pos:line="14888" pos:column="44">signed</name> <name pos:line="14888" pos:column="51">long</name> <type:modifier pos:line="14888" pos:column="56">*</type:modifier></type><name pos:line="14888" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14890" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14890" pos:column="34">HRESULT</name></type> ( <name pos:line="14890" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14890" pos:column="62">*</type:modifier><name pos:line="14890" pos:column="63">EqualTo</name> )<parameter_list pos:line="14890" pos:column="72">( 
            <param><decl><type><name pos:line="14891" pos:column="13">EditPoint2</name> <type:modifier pos:line="14891" pos:column="24">*</type:modifier></type> <name pos:line="14891" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14892" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14892" pos:column="37">__RPC__in_opt</name> <name pos:line="14892" pos:column="51">TextPoint</name> <type:modifier pos:line="14892" pos:column="61">*</type:modifier></type><name pos:line="14892" pos:column="62">Point</name></decl></param>,
            <comment type="block" pos:line="14893" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14893" pos:column="33">__RPC__out</name> <name pos:line="14893" pos:column="44">BOOLEAN</name> <type:modifier pos:line="14893" pos:column="52">*</type:modifier></type><name pos:line="14893" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14895" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14895" pos:column="34">HRESULT</name></type> ( <name pos:line="14895" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14895" pos:column="62">*</type:modifier><name pos:line="14895" pos:column="63">LessThan</name> )<parameter_list pos:line="14895" pos:column="73">( 
            <param><decl><type><name pos:line="14896" pos:column="13">EditPoint2</name> <type:modifier pos:line="14896" pos:column="24">*</type:modifier></type> <name pos:line="14896" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14897" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14897" pos:column="37">__RPC__in_opt</name> <name pos:line="14897" pos:column="51">TextPoint</name> <type:modifier pos:line="14897" pos:column="61">*</type:modifier></type><name pos:line="14897" pos:column="62">Point</name></decl></param>,
            <comment type="block" pos:line="14898" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14898" pos:column="33">__RPC__out</name> <name pos:line="14898" pos:column="44">BOOLEAN</name> <type:modifier pos:line="14898" pos:column="52">*</type:modifier></type><name pos:line="14898" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14900" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14900" pos:column="34">HRESULT</name></type> ( <name pos:line="14900" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14900" pos:column="62">*</type:modifier><name pos:line="14900" pos:column="63">GreaterThan</name> )<parameter_list pos:line="14900" pos:column="76">( 
            <param><decl><type><name pos:line="14901" pos:column="13">EditPoint2</name> <type:modifier pos:line="14901" pos:column="24">*</type:modifier></type> <name pos:line="14901" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14902" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14902" pos:column="37">__RPC__in_opt</name> <name pos:line="14902" pos:column="51">TextPoint</name> <type:modifier pos:line="14902" pos:column="61">*</type:modifier></type><name pos:line="14902" pos:column="62">Point</name></decl></param>,
            <comment type="block" pos:line="14903" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14903" pos:column="33">__RPC__out</name> <name pos:line="14903" pos:column="44">BOOLEAN</name> <type:modifier pos:line="14903" pos:column="52">*</type:modifier></type><name pos:line="14903" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14905" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="14905" pos:column="34">HRESULT</name> <argument_list pos:line="14905" pos:column="42">( <argument pos:line="14905" pos:column="44">STDMETHODCALLTYPE *TryToShow</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14905" pos:column="74">(</op:operator> 
            <name pos:line="14906" pos:column="13">EditPoint2</name> <op:operator pos:line="14906" pos:column="24">*</op:operator> <name pos:line="14906" pos:column="26">This</name><op:operator pos:line="14906" pos:column="30">,</op:operator>
            <comment type="block" pos:line="14907" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="14907" pos:column="42">vsPaneShowHow</name> <name pos:line="14907" pos:column="56">How</name><op:operator pos:line="14907" pos:column="59">,</op:operator>
            <comment type="block" pos:line="14908" pos:column="13">/* [optional][in][idldescattr] */</comment> <name pos:line="14908" pos:column="47">VARIANT</name> <name pos:line="14908" pos:column="55">PointOrCount</name><op:operator pos:line="14908" pos:column="67">,</op:operator>
            <comment type="block" pos:line="14909" pos:column="13">/* [retval][out] */</comment> <name pos:line="14909" pos:column="33">__RPC__out</name> <name pos:line="14909" pos:column="44">BOOLEAN</name> <op:operator pos:line="14909" pos:column="52">*</op:operator><name pos:line="14909" pos:column="53">retval</name><op:operator pos:line="14909" pos:column="59">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="14911" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="14911" pos:column="43">HRESULT</name> <argument_list pos:line="14911" pos:column="51">( <argument pos:line="14911" pos:column="53">STDMETHODCALLTYPE *get_CodeElement</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="14911" pos:column="89">(</op:operator> 
            <name pos:line="14912" pos:column="13">EditPoint2</name> <op:operator pos:line="14912" pos:column="24">*</op:operator> <name pos:line="14912" pos:column="26">This</name><op:operator pos:line="14912" pos:column="30">,</op:operator>
            <comment type="block" pos:line="14913" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="14913" pos:column="42">vsCMElement</name> <name pos:line="14913" pos:column="54">Scope</name><op:operator pos:line="14913" pos:column="59">,</op:operator>
            <comment type="block" pos:line="14914" pos:column="13">/* [retval][out] */</comment> <name pos:line="14914" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14914" pos:column="54">CodeElement</name> <op:operator pos:line="14914" pos:column="66">*</op:operator><op:operator pos:line="14914" pos:column="67">*</op:operator><name pos:line="14914" pos:column="68">retval</name><op:operator pos:line="14914" pos:column="74">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="14916" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14916" pos:column="34">HRESULT</name></type> ( <name pos:line="14916" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14916" pos:column="62">*</type:modifier><name pos:line="14916" pos:column="63">CreateEditPoint</name> )<parameter_list pos:line="14916" pos:column="80">( 
            <param><decl><type><name pos:line="14917" pos:column="13">EditPoint2</name> <type:modifier pos:line="14917" pos:column="24">*</type:modifier></type> <name pos:line="14917" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14918" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14918" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="14918" pos:column="54">EditPoint</name> <type:modifier pos:line="14918" pos:column="64">*</type:modifier><type:modifier pos:line="14918" pos:column="65">*</type:modifier></type><name pos:line="14918" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14920" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14920" pos:column="34">HRESULT</name></type> ( <name pos:line="14920" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14920" pos:column="62">*</type:modifier><name pos:line="14920" pos:column="63">CharLeft</name> )<parameter_list pos:line="14920" pos:column="73">( 
            <param><decl><type><name pos:line="14921" pos:column="13">EditPoint2</name> <type:modifier pos:line="14921" pos:column="24">*</type:modifier></type> <name pos:line="14921" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14922" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14922" pos:column="37">signed</name> <name pos:line="14922" pos:column="44">long</name></type> <name pos:line="14922" pos:column="49">Count</name></decl></param>,
            <comment type="block" pos:line="14923" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14923" pos:column="33">__RPC__out</name> <name pos:line="14923" pos:column="44">void</name> <type:modifier pos:line="14923" pos:column="49">*</type:modifier></type><name pos:line="14923" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14925" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14925" pos:column="34">HRESULT</name></type> ( <name pos:line="14925" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14925" pos:column="62">*</type:modifier><name pos:line="14925" pos:column="63">CharRight</name> )<parameter_list pos:line="14925" pos:column="74">( 
            <param><decl><type><name pos:line="14926" pos:column="13">EditPoint2</name> <type:modifier pos:line="14926" pos:column="24">*</type:modifier></type> <name pos:line="14926" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14927" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14927" pos:column="37">signed</name> <name pos:line="14927" pos:column="44">long</name></type> <name pos:line="14927" pos:column="49">Count</name></decl></param>,
            <comment type="block" pos:line="14928" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14928" pos:column="33">__RPC__out</name> <name pos:line="14928" pos:column="44">void</name> <type:modifier pos:line="14928" pos:column="49">*</type:modifier></type><name pos:line="14928" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14930" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14930" pos:column="34">HRESULT</name></type> ( <name pos:line="14930" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14930" pos:column="62">*</type:modifier><name pos:line="14930" pos:column="63">EndOfLine</name> )<parameter_list pos:line="14930" pos:column="74">( 
            <param><decl><type><name pos:line="14931" pos:column="13">EditPoint2</name> <type:modifier pos:line="14931" pos:column="24">*</type:modifier></type> <name pos:line="14931" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14932" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14932" pos:column="33">__RPC__out</name> <name pos:line="14932" pos:column="44">void</name> <type:modifier pos:line="14932" pos:column="49">*</type:modifier></type><name pos:line="14932" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14934" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14934" pos:column="34">HRESULT</name></type> ( <name pos:line="14934" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14934" pos:column="62">*</type:modifier><name pos:line="14934" pos:column="63">StartOfLine</name> )<parameter_list pos:line="14934" pos:column="76">( 
            <param><decl><type><name pos:line="14935" pos:column="13">EditPoint2</name> <type:modifier pos:line="14935" pos:column="24">*</type:modifier></type> <name pos:line="14935" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14936" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14936" pos:column="33">__RPC__out</name> <name pos:line="14936" pos:column="44">void</name> <type:modifier pos:line="14936" pos:column="49">*</type:modifier></type><name pos:line="14936" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14938" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14938" pos:column="34">HRESULT</name></type> ( <name pos:line="14938" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14938" pos:column="62">*</type:modifier><name pos:line="14938" pos:column="63">EndOfDocument</name> )<parameter_list pos:line="14938" pos:column="78">( 
            <param><decl><type><name pos:line="14939" pos:column="13">EditPoint2</name> <type:modifier pos:line="14939" pos:column="24">*</type:modifier></type> <name pos:line="14939" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14940" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14940" pos:column="33">__RPC__out</name> <name pos:line="14940" pos:column="44">void</name> <type:modifier pos:line="14940" pos:column="49">*</type:modifier></type><name pos:line="14940" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14942" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14942" pos:column="34">HRESULT</name></type> ( <name pos:line="14942" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14942" pos:column="62">*</type:modifier><name pos:line="14942" pos:column="63">StartOfDocument</name> )<parameter_list pos:line="14942" pos:column="80">( 
            <param><decl><type><name pos:line="14943" pos:column="13">EditPoint2</name> <type:modifier pos:line="14943" pos:column="24">*</type:modifier></type> <name pos:line="14943" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14944" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14944" pos:column="33">__RPC__out</name> <name pos:line="14944" pos:column="44">void</name> <type:modifier pos:line="14944" pos:column="49">*</type:modifier></type><name pos:line="14944" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14946" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14946" pos:column="34">HRESULT</name></type> ( <name pos:line="14946" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14946" pos:column="62">*</type:modifier><name pos:line="14946" pos:column="63">WordLeft</name> )<parameter_list pos:line="14946" pos:column="73">( 
            <param><decl><type><name pos:line="14947" pos:column="13">EditPoint2</name> <type:modifier pos:line="14947" pos:column="24">*</type:modifier></type> <name pos:line="14947" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14948" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14948" pos:column="37">signed</name> <name pos:line="14948" pos:column="44">long</name></type> <name pos:line="14948" pos:column="49">Count</name></decl></param>,
            <comment type="block" pos:line="14949" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14949" pos:column="33">__RPC__out</name> <name pos:line="14949" pos:column="44">void</name> <type:modifier pos:line="14949" pos:column="49">*</type:modifier></type><name pos:line="14949" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14951" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14951" pos:column="34">HRESULT</name></type> ( <name pos:line="14951" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14951" pos:column="62">*</type:modifier><name pos:line="14951" pos:column="63">WordRight</name> )<parameter_list pos:line="14951" pos:column="74">( 
            <param><decl><type><name pos:line="14952" pos:column="13">EditPoint2</name> <type:modifier pos:line="14952" pos:column="24">*</type:modifier></type> <name pos:line="14952" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14953" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14953" pos:column="37">signed</name> <name pos:line="14953" pos:column="44">long</name></type> <name pos:line="14953" pos:column="49">Count</name></decl></param>,
            <comment type="block" pos:line="14954" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14954" pos:column="33">__RPC__out</name> <name pos:line="14954" pos:column="44">void</name> <type:modifier pos:line="14954" pos:column="49">*</type:modifier></type><name pos:line="14954" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14956" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14956" pos:column="34">HRESULT</name></type> ( <name pos:line="14956" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14956" pos:column="62">*</type:modifier><name pos:line="14956" pos:column="63">LineUp</name> )<parameter_list pos:line="14956" pos:column="71">( 
            <param><decl><type><name pos:line="14957" pos:column="13">EditPoint2</name> <type:modifier pos:line="14957" pos:column="24">*</type:modifier></type> <name pos:line="14957" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14958" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14958" pos:column="37">signed</name> <name pos:line="14958" pos:column="44">long</name></type> <name pos:line="14958" pos:column="49">Count</name></decl></param>,
            <comment type="block" pos:line="14959" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14959" pos:column="33">__RPC__out</name> <name pos:line="14959" pos:column="44">void</name> <type:modifier pos:line="14959" pos:column="49">*</type:modifier></type><name pos:line="14959" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14961" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14961" pos:column="34">HRESULT</name></type> ( <name pos:line="14961" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14961" pos:column="62">*</type:modifier><name pos:line="14961" pos:column="63">LineDown</name> )<parameter_list pos:line="14961" pos:column="73">( 
            <param><decl><type><name pos:line="14962" pos:column="13">EditPoint2</name> <type:modifier pos:line="14962" pos:column="24">*</type:modifier></type> <name pos:line="14962" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14963" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14963" pos:column="37">signed</name> <name pos:line="14963" pos:column="44">long</name></type> <name pos:line="14963" pos:column="49">Count</name></decl></param>,
            <comment type="block" pos:line="14964" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14964" pos:column="33">__RPC__out</name> <name pos:line="14964" pos:column="44">void</name> <type:modifier pos:line="14964" pos:column="49">*</type:modifier></type><name pos:line="14964" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14966" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14966" pos:column="34">HRESULT</name></type> ( <name pos:line="14966" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14966" pos:column="62">*</type:modifier><name pos:line="14966" pos:column="63">MoveToPoint</name> )<parameter_list pos:line="14966" pos:column="76">( 
            <param><decl><type><name pos:line="14967" pos:column="13">EditPoint2</name> <type:modifier pos:line="14967" pos:column="24">*</type:modifier></type> <name pos:line="14967" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14968" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14968" pos:column="37">__RPC__in_opt</name> <name pos:line="14968" pos:column="51">TextPoint</name> <type:modifier pos:line="14968" pos:column="61">*</type:modifier></type><name pos:line="14968" pos:column="62">Point</name></decl></param>,
            <comment type="block" pos:line="14969" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14969" pos:column="33">__RPC__out</name> <name pos:line="14969" pos:column="44">void</name> <type:modifier pos:line="14969" pos:column="49">*</type:modifier></type><name pos:line="14969" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14971" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14971" pos:column="34">HRESULT</name></type> ( <name pos:line="14971" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14971" pos:column="62">*</type:modifier><name pos:line="14971" pos:column="63">MoveToLineAndOffset</name> )<parameter_list pos:line="14971" pos:column="84">( 
            <param><decl><type><name pos:line="14972" pos:column="13">EditPoint2</name> <type:modifier pos:line="14972" pos:column="24">*</type:modifier></type> <name pos:line="14972" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14973" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14973" pos:column="37">signed</name> <name pos:line="14973" pos:column="44">long</name></type> <name pos:line="14973" pos:column="49">Line</name></decl></param>,
            <comment type="block" pos:line="14974" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14974" pos:column="37">signed</name> <name pos:line="14974" pos:column="44">long</name></type> <name pos:line="14974" pos:column="49">Offset</name></decl></param>,
            <comment type="block" pos:line="14975" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14975" pos:column="33">__RPC__out</name> <name pos:line="14975" pos:column="44">void</name> <type:modifier pos:line="14975" pos:column="49">*</type:modifier></type><name pos:line="14975" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14977" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14977" pos:column="34">HRESULT</name></type> ( <name pos:line="14977" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14977" pos:column="62">*</type:modifier><name pos:line="14977" pos:column="63">MoveToAbsoluteOffset</name> )<parameter_list pos:line="14977" pos:column="85">( 
            <param><decl><type><name pos:line="14978" pos:column="13">EditPoint2</name> <type:modifier pos:line="14978" pos:column="24">*</type:modifier></type> <name pos:line="14978" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14979" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="14979" pos:column="37">signed</name> <name pos:line="14979" pos:column="44">long</name></type> <name pos:line="14979" pos:column="49">Offset</name></decl></param>,
            <comment type="block" pos:line="14980" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14980" pos:column="33">__RPC__out</name> <name pos:line="14980" pos:column="44">void</name> <type:modifier pos:line="14980" pos:column="49">*</type:modifier></type><name pos:line="14980" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14982" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14982" pos:column="34">HRESULT</name></type> ( <name pos:line="14982" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14982" pos:column="62">*</type:modifier><name pos:line="14982" pos:column="63">SetBookmark</name> )<parameter_list pos:line="14982" pos:column="76">( 
            <param><decl><type><name pos:line="14983" pos:column="13">EditPoint2</name> <type:modifier pos:line="14983" pos:column="24">*</type:modifier></type> <name pos:line="14983" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14984" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14984" pos:column="33">__RPC__out</name> <name pos:line="14984" pos:column="44">void</name> <type:modifier pos:line="14984" pos:column="49">*</type:modifier></type><name pos:line="14984" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14986" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14986" pos:column="34">HRESULT</name></type> ( <name pos:line="14986" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14986" pos:column="62">*</type:modifier><name pos:line="14986" pos:column="63">ClearBookmark</name> )<parameter_list pos:line="14986" pos:column="78">( 
            <param><decl><type><name pos:line="14987" pos:column="13">EditPoint2</name> <type:modifier pos:line="14987" pos:column="24">*</type:modifier></type> <name pos:line="14987" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14988" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14988" pos:column="33">__RPC__out</name> <name pos:line="14988" pos:column="44">void</name> <type:modifier pos:line="14988" pos:column="49">*</type:modifier></type><name pos:line="14988" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14990" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14990" pos:column="34">HRESULT</name></type> ( <name pos:line="14990" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14990" pos:column="62">*</type:modifier><name pos:line="14990" pos:column="63">NextBookmark</name> )<parameter_list pos:line="14990" pos:column="77">( 
            <param><decl><type><name pos:line="14991" pos:column="13">EditPoint2</name> <type:modifier pos:line="14991" pos:column="24">*</type:modifier></type> <name pos:line="14991" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14992" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14992" pos:column="33">__RPC__out</name> <name pos:line="14992" pos:column="44">BOOLEAN</name> <type:modifier pos:line="14992" pos:column="52">*</type:modifier></type><name pos:line="14992" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14994" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14994" pos:column="34">HRESULT</name></type> ( <name pos:line="14994" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14994" pos:column="62">*</type:modifier><name pos:line="14994" pos:column="63">PreviousBookmark</name> )<parameter_list pos:line="14994" pos:column="81">( 
            <param><decl><type><name pos:line="14995" pos:column="13">EditPoint2</name> <type:modifier pos:line="14995" pos:column="24">*</type:modifier></type> <name pos:line="14995" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="14996" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="14996" pos:column="33">__RPC__out</name> <name pos:line="14996" pos:column="44">BOOLEAN</name> <type:modifier pos:line="14996" pos:column="52">*</type:modifier></type><name pos:line="14996" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="14998" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="14998" pos:column="34">HRESULT</name></type> ( <name pos:line="14998" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="14998" pos:column="62">*</type:modifier><name pos:line="14998" pos:column="63">PadToColumn</name> )<parameter_list pos:line="14998" pos:column="76">( 
            <param><decl><type><name pos:line="14999" pos:column="13">EditPoint2</name> <type:modifier pos:line="14999" pos:column="24">*</type:modifier></type> <name pos:line="14999" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15000" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15000" pos:column="37">signed</name> <name pos:line="15000" pos:column="44">long</name></type> <name pos:line="15000" pos:column="49">Column</name></decl></param>,
            <comment type="block" pos:line="15001" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15001" pos:column="33">__RPC__out</name> <name pos:line="15001" pos:column="44">void</name> <type:modifier pos:line="15001" pos:column="49">*</type:modifier></type><name pos:line="15001" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15003" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15003" pos:column="34">HRESULT</name></type> ( <name pos:line="15003" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15003" pos:column="62">*</type:modifier><name pos:line="15003" pos:column="63">Insert</name> )<parameter_list pos:line="15003" pos:column="71">( 
            <param><decl><type><name pos:line="15004" pos:column="13">EditPoint2</name> <type:modifier pos:line="15004" pos:column="24">*</type:modifier></type> <name pos:line="15004" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15005" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15005" pos:column="37">__RPC__in</name> <name pos:line="15005" pos:column="47">BSTR</name></type> <name pos:line="15005" pos:column="52">Text</name></decl></param>,
            <comment type="block" pos:line="15006" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15006" pos:column="33">__RPC__out</name> <name pos:line="15006" pos:column="44">void</name> <type:modifier pos:line="15006" pos:column="49">*</type:modifier></type><name pos:line="15006" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15008" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15008" pos:column="34">HRESULT</name></type> ( <name pos:line="15008" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15008" pos:column="62">*</type:modifier><name pos:line="15008" pos:column="63">InsertFromFile</name> )<parameter_list pos:line="15008" pos:column="79">( 
            <param><decl><type><name pos:line="15009" pos:column="13">EditPoint2</name> <type:modifier pos:line="15009" pos:column="24">*</type:modifier></type> <name pos:line="15009" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15010" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15010" pos:column="37">__RPC__in</name> <name pos:line="15010" pos:column="47">BSTR</name></type> <name pos:line="15010" pos:column="52">File</name></decl></param>,
            <comment type="block" pos:line="15011" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15011" pos:column="33">__RPC__out</name> <name pos:line="15011" pos:column="44">void</name> <type:modifier pos:line="15011" pos:column="49">*</type:modifier></type><name pos:line="15011" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15013" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15013" pos:column="34">HRESULT</name></type> ( <name pos:line="15013" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15013" pos:column="62">*</type:modifier><name pos:line="15013" pos:column="63">GetText</name> )<parameter_list pos:line="15013" pos:column="72">( 
            <param><decl><type><name pos:line="15014" pos:column="13">EditPoint2</name> <type:modifier pos:line="15014" pos:column="24">*</type:modifier></type> <name pos:line="15014" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15015" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15015" pos:column="37">VARIANT</name></type> <name pos:line="15015" pos:column="45">PointOrCount</name></decl></param>,
            <comment type="block" pos:line="15016" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15016" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="15016" pos:column="54">BSTR</name> <type:modifier pos:line="15016" pos:column="59">*</type:modifier></type><name pos:line="15016" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15018" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15018" pos:column="34">HRESULT</name></type> ( <name pos:line="15018" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15018" pos:column="62">*</type:modifier><name pos:line="15018" pos:column="63">GetLines</name> )<parameter_list pos:line="15018" pos:column="73">( 
            <param><decl><type><name pos:line="15019" pos:column="13">EditPoint2</name> <type:modifier pos:line="15019" pos:column="24">*</type:modifier></type> <name pos:line="15019" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15020" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15020" pos:column="37">signed</name> <name pos:line="15020" pos:column="44">long</name></type> <name pos:line="15020" pos:column="49">Start</name></decl></param>,
            <comment type="block" pos:line="15021" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15021" pos:column="37">signed</name> <name pos:line="15021" pos:column="44">long</name></type> <name pos:line="15021" pos:column="49">ExclusiveEnd</name></decl></param>,
            <comment type="block" pos:line="15022" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15022" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="15022" pos:column="54">BSTR</name> <type:modifier pos:line="15022" pos:column="59">*</type:modifier></type><name pos:line="15022" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15024" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15024" pos:column="34">HRESULT</name></type> ( <name pos:line="15024" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15024" pos:column="62">*</type:modifier><name pos:line="15024" pos:column="63">Copy</name> )<parameter_list pos:line="15024" pos:column="69">( 
            <param><decl><type><name pos:line="15025" pos:column="13">EditPoint2</name> <type:modifier pos:line="15025" pos:column="24">*</type:modifier></type> <name pos:line="15025" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15026" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15026" pos:column="37">VARIANT</name></type> <name pos:line="15026" pos:column="45">PointOrCount</name></decl></param>,
            <comment type="block" pos:line="15027" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15027" pos:column="37">BOOLEAN</name></type> <name pos:line="15027" pos:column="45">Append</name></decl></param>,
            <comment type="block" pos:line="15028" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15028" pos:column="33">__RPC__out</name> <name pos:line="15028" pos:column="44">void</name> <type:modifier pos:line="15028" pos:column="49">*</type:modifier></type><name pos:line="15028" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15030" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15030" pos:column="34">HRESULT</name></type> ( <name pos:line="15030" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15030" pos:column="62">*</type:modifier><name pos:line="15030" pos:column="63">Cut</name> )<parameter_list pos:line="15030" pos:column="68">( 
            <param><decl><type><name pos:line="15031" pos:column="13">EditPoint2</name> <type:modifier pos:line="15031" pos:column="24">*</type:modifier></type> <name pos:line="15031" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15032" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15032" pos:column="37">VARIANT</name></type> <name pos:line="15032" pos:column="45">PointOrCount</name></decl></param>,
            <comment type="block" pos:line="15033" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15033" pos:column="37">BOOLEAN</name></type> <name pos:line="15033" pos:column="45">Append</name></decl></param>,
            <comment type="block" pos:line="15034" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15034" pos:column="33">__RPC__out</name> <name pos:line="15034" pos:column="44">void</name> <type:modifier pos:line="15034" pos:column="49">*</type:modifier></type><name pos:line="15034" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15036" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15036" pos:column="34">HRESULT</name></type> ( <name pos:line="15036" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15036" pos:column="62">*</type:modifier><name pos:line="15036" pos:column="63">Delete</name> )<parameter_list pos:line="15036" pos:column="71">( 
            <param><decl><type><name pos:line="15037" pos:column="13">EditPoint2</name> <type:modifier pos:line="15037" pos:column="24">*</type:modifier></type> <name pos:line="15037" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15038" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15038" pos:column="37">VARIANT</name></type> <name pos:line="15038" pos:column="45">PointOrCount</name></decl></param>,
            <comment type="block" pos:line="15039" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15039" pos:column="33">__RPC__out</name> <name pos:line="15039" pos:column="44">void</name> <type:modifier pos:line="15039" pos:column="49">*</type:modifier></type><name pos:line="15039" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15041" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15041" pos:column="34">HRESULT</name></type> ( <name pos:line="15041" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15041" pos:column="62">*</type:modifier><name pos:line="15041" pos:column="63">Paste</name> )<parameter_list pos:line="15041" pos:column="70">( 
            <param><decl><type><name pos:line="15042" pos:column="13">EditPoint2</name> <type:modifier pos:line="15042" pos:column="24">*</type:modifier></type> <name pos:line="15042" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15043" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15043" pos:column="33">__RPC__out</name> <name pos:line="15043" pos:column="44">void</name> <type:modifier pos:line="15043" pos:column="49">*</type:modifier></type><name pos:line="15043" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15045" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15045" pos:column="34">HRESULT</name></type> ( <name pos:line="15045" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15045" pos:column="62">*</type:modifier><name pos:line="15045" pos:column="63">ReadOnly</name> )<parameter_list pos:line="15045" pos:column="73">( 
            <param><decl><type><name pos:line="15046" pos:column="13">EditPoint2</name> <type:modifier pos:line="15046" pos:column="24">*</type:modifier></type> <name pos:line="15046" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15047" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15047" pos:column="37">VARIANT</name></type> <name pos:line="15047" pos:column="45">PointOrCount</name></decl></param>,
            <comment type="block" pos:line="15048" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15048" pos:column="33">__RPC__out</name> <name pos:line="15048" pos:column="44">BOOLEAN</name> <type:modifier pos:line="15048" pos:column="52">*</type:modifier></type><name pos:line="15048" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15050" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15050" pos:column="34">HRESULT</name></type> ( <name pos:line="15050" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15050" pos:column="62">*</type:modifier><name pos:line="15050" pos:column="63">FindPattern</name> )<parameter_list pos:line="15050" pos:column="76">( 
            <param><decl><type><name pos:line="15051" pos:column="13">EditPoint2</name> <type:modifier pos:line="15051" pos:column="24">*</type:modifier></type> <name pos:line="15051" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15052" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15052" pos:column="37">__RPC__in</name> <name pos:line="15052" pos:column="47">BSTR</name></type> <name pos:line="15052" pos:column="52">Pattern</name></decl></param>,
            <comment type="block" pos:line="15053" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15053" pos:column="37">signed</name> <name pos:line="15053" pos:column="44">long</name></type> <name pos:line="15053" pos:column="49">vsFindOptionsValue</name></decl></param>,
            <comment type="block" pos:line="15054" pos:column="13">/* [out][in][idldescattr] */</comment> <param><decl><type><name pos:line="15054" pos:column="42">__RPC__deref_inout_opt</name> <name pos:line="15054" pos:column="65">EditPoint</name> <type:modifier pos:line="15054" pos:column="75">*</type:modifier><type:modifier pos:line="15054" pos:column="76">*</type:modifier></type><name pos:line="15054" pos:column="77">EndPoint</name></decl></param>,
            <comment type="block" pos:line="15055" pos:column="13">/* [out][in][idldescattr] */</comment> <param><decl><type><name pos:line="15055" pos:column="42">__RPC__deref_inout_opt</name> <name pos:line="15055" pos:column="65">TextRanges</name> <type:modifier pos:line="15055" pos:column="76">*</type:modifier><type:modifier pos:line="15055" pos:column="77">*</type:modifier></type><name pos:line="15055" pos:column="78">Tags</name></decl></param>,
            <comment type="block" pos:line="15056" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15056" pos:column="33">__RPC__out</name> <name pos:line="15056" pos:column="44">BOOLEAN</name> <type:modifier pos:line="15056" pos:column="52">*</type:modifier></type><name pos:line="15056" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15058" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15058" pos:column="34">HRESULT</name></type> ( <name pos:line="15058" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15058" pos:column="62">*</type:modifier><name pos:line="15058" pos:column="63">ReplacePattern</name> )<parameter_list pos:line="15058" pos:column="79">( 
            <param><decl><type><name pos:line="15059" pos:column="13">EditPoint2</name> <type:modifier pos:line="15059" pos:column="24">*</type:modifier></type> <name pos:line="15059" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15060" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15060" pos:column="37">__RPC__in_opt</name> <name pos:line="15060" pos:column="51">TextPoint</name> <type:modifier pos:line="15060" pos:column="61">*</type:modifier></type><name pos:line="15060" pos:column="62">Point</name></decl></param>,
            <comment type="block" pos:line="15061" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15061" pos:column="37">__RPC__in</name> <name pos:line="15061" pos:column="47">BSTR</name></type> <name pos:line="15061" pos:column="52">Pattern</name></decl></param>,
            <comment type="block" pos:line="15062" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15062" pos:column="37">__RPC__in</name> <name pos:line="15062" pos:column="47">BSTR</name></type> <name pos:line="15062" pos:column="52">Replace</name></decl></param>,
            <comment type="block" pos:line="15063" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15063" pos:column="37">signed</name> <name pos:line="15063" pos:column="44">long</name></type> <name pos:line="15063" pos:column="49">vsFindOptionsValue</name></decl></param>,
            <comment type="block" pos:line="15064" pos:column="13">/* [out][in][idldescattr] */</comment> <param><decl><type><name pos:line="15064" pos:column="42">__RPC__deref_inout_opt</name> <name pos:line="15064" pos:column="65">TextRanges</name> <type:modifier pos:line="15064" pos:column="76">*</type:modifier><type:modifier pos:line="15064" pos:column="77">*</type:modifier></type><name pos:line="15064" pos:column="78">Tags</name></decl></param>,
            <comment type="block" pos:line="15065" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15065" pos:column="33">__RPC__out</name> <name pos:line="15065" pos:column="44">BOOLEAN</name> <type:modifier pos:line="15065" pos:column="52">*</type:modifier></type><name pos:line="15065" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15067" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15067" pos:column="34">HRESULT</name></type> ( <name pos:line="15067" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15067" pos:column="62">*</type:modifier><name pos:line="15067" pos:column="63">Indent</name> )<parameter_list pos:line="15067" pos:column="71">( 
            <param><decl><type><name pos:line="15068" pos:column="13">EditPoint2</name> <type:modifier pos:line="15068" pos:column="24">*</type:modifier></type> <name pos:line="15068" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15069" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15069" pos:column="37">__RPC__in_opt</name> <name pos:line="15069" pos:column="51">TextPoint</name> <type:modifier pos:line="15069" pos:column="61">*</type:modifier></type><name pos:line="15069" pos:column="62">Point</name></decl></param>,
            <comment type="block" pos:line="15070" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15070" pos:column="37">signed</name> <name pos:line="15070" pos:column="44">long</name></type> <name pos:line="15070" pos:column="49">Count</name></decl></param>,
            <comment type="block" pos:line="15071" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15071" pos:column="33">__RPC__out</name> <name pos:line="15071" pos:column="44">void</name> <type:modifier pos:line="15071" pos:column="49">*</type:modifier></type><name pos:line="15071" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15073" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15073" pos:column="34">HRESULT</name></type> ( <name pos:line="15073" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15073" pos:column="62">*</type:modifier><name pos:line="15073" pos:column="63">Unindent</name> )<parameter_list pos:line="15073" pos:column="73">( 
            <param><decl><type><name pos:line="15074" pos:column="13">EditPoint2</name> <type:modifier pos:line="15074" pos:column="24">*</type:modifier></type> <name pos:line="15074" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15075" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15075" pos:column="37">__RPC__in_opt</name> <name pos:line="15075" pos:column="51">TextPoint</name> <type:modifier pos:line="15075" pos:column="61">*</type:modifier></type><name pos:line="15075" pos:column="62">Point</name></decl></param>,
            <comment type="block" pos:line="15076" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15076" pos:column="37">signed</name> <name pos:line="15076" pos:column="44">long</name></type> <name pos:line="15076" pos:column="49">Count</name></decl></param>,
            <comment type="block" pos:line="15077" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15077" pos:column="33">__RPC__out</name> <name pos:line="15077" pos:column="44">void</name> <type:modifier pos:line="15077" pos:column="49">*</type:modifier></type><name pos:line="15077" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15079" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15079" pos:column="34">HRESULT</name></type> ( <name pos:line="15079" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15079" pos:column="62">*</type:modifier><name pos:line="15079" pos:column="63">SmartFormat</name> )<parameter_list pos:line="15079" pos:column="76">( 
            <param><decl><type><name pos:line="15080" pos:column="13">EditPoint2</name> <type:modifier pos:line="15080" pos:column="24">*</type:modifier></type> <name pos:line="15080" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15081" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15081" pos:column="37">__RPC__in_opt</name> <name pos:line="15081" pos:column="51">TextPoint</name> <type:modifier pos:line="15081" pos:column="61">*</type:modifier></type><name pos:line="15081" pos:column="62">Point</name></decl></param>,
            <comment type="block" pos:line="15082" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15082" pos:column="33">__RPC__out</name> <name pos:line="15082" pos:column="44">void</name> <type:modifier pos:line="15082" pos:column="49">*</type:modifier></type><name pos:line="15082" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15084" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15084" pos:column="34">HRESULT</name></type> ( <name pos:line="15084" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15084" pos:column="62">*</type:modifier><name pos:line="15084" pos:column="63">OutlineSection</name> )<parameter_list pos:line="15084" pos:column="79">( 
            <param><decl><type><name pos:line="15085" pos:column="13">EditPoint2</name> <type:modifier pos:line="15085" pos:column="24">*</type:modifier></type> <name pos:line="15085" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15086" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15086" pos:column="37">VARIANT</name></type> <name pos:line="15086" pos:column="45">PointOrCount</name></decl></param>,
            <comment type="block" pos:line="15087" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15087" pos:column="33">__RPC__out</name> <name pos:line="15087" pos:column="44">void</name> <type:modifier pos:line="15087" pos:column="49">*</type:modifier></type><name pos:line="15087" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15089" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15089" pos:column="34">HRESULT</name></type> ( <name pos:line="15089" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15089" pos:column="62">*</type:modifier><name pos:line="15089" pos:column="63">ReplaceText</name> )<parameter_list pos:line="15089" pos:column="76">( 
            <param><decl><type><name pos:line="15090" pos:column="13">EditPoint2</name> <type:modifier pos:line="15090" pos:column="24">*</type:modifier></type> <name pos:line="15090" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15091" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15091" pos:column="37">VARIANT</name></type> <name pos:line="15091" pos:column="45">PointOrCount</name></decl></param>,
            <comment type="block" pos:line="15092" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15092" pos:column="37">__RPC__in</name> <name pos:line="15092" pos:column="47">BSTR</name></type> <name pos:line="15092" pos:column="52">Text</name></decl></param>,
            <comment type="block" pos:line="15093" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15093" pos:column="37">signed</name> <name pos:line="15093" pos:column="44">long</name></type> <name pos:line="15093" pos:column="49">Flags</name></decl></param>,
            <comment type="block" pos:line="15094" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15094" pos:column="33">__RPC__out</name> <name pos:line="15094" pos:column="44">void</name> <type:modifier pos:line="15094" pos:column="49">*</type:modifier></type><name pos:line="15094" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15096" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="15096" pos:column="34">HRESULT</name> <argument_list pos:line="15096" pos:column="42">( <argument pos:line="15096" pos:column="44">STDMETHODCALLTYPE *ChangeCase</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="15096" pos:column="75">(</op:operator> 
            <name pos:line="15097" pos:column="13">EditPoint2</name> <op:operator pos:line="15097" pos:column="24">*</op:operator> <name pos:line="15097" pos:column="26">This</name><op:operator pos:line="15097" pos:column="30">,</op:operator>
            <comment type="block" pos:line="15098" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="15098" pos:column="37">VARIANT</name> <name pos:line="15098" pos:column="45">PointOrCount</name><op:operator pos:line="15098" pos:column="57">,</op:operator>
            <comment type="block" pos:line="15099" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="15099" pos:column="42">vsCaseOptions</name> <name pos:line="15099" pos:column="56">How</name><op:operator pos:line="15099" pos:column="59">,</op:operator>
            <comment type="block" pos:line="15100" pos:column="13">/* [retval][out] */</comment> <name pos:line="15100" pos:column="33">__RPC__out</name> <name pos:line="15100" pos:column="44">void</name> <op:operator pos:line="15100" pos:column="49">*</op:operator><name pos:line="15100" pos:column="50">retval</name><op:operator pos:line="15100" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="15102" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="15102" pos:column="34">HRESULT</name> <argument_list pos:line="15102" pos:column="42">( <argument pos:line="15102" pos:column="44">STDMETHODCALLTYPE *DeleteWhitespace</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="15102" pos:column="81">(</op:operator> 
            <name pos:line="15103" pos:column="13">EditPoint2</name> <op:operator pos:line="15103" pos:column="24">*</op:operator> <name pos:line="15103" pos:column="26">This</name><op:operator pos:line="15103" pos:column="30">,</op:operator>
            <comment type="block" pos:line="15104" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="15104" pos:column="42">vsWhitespaceOptions</name> <name pos:line="15104" pos:column="62">Direction</name><op:operator pos:line="15104" pos:column="71">,</op:operator>
            <comment type="block" pos:line="15105" pos:column="13">/* [retval][out] */</comment> <name pos:line="15105" pos:column="33">__RPC__out</name> <name pos:line="15105" pos:column="44">void</name> <op:operator pos:line="15105" pos:column="49">*</op:operator><name pos:line="15105" pos:column="50">retval</name><op:operator pos:line="15105" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="15107" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="15107" pos:column="64">HRESULT</name></type> ( <name pos:line="15107" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="15107" pos:column="92">*</type:modifier><name pos:line="15107" pos:column="93">InsertNewLine</name> )<parameter_list pos:line="15107" pos:column="108">( 
            <param><decl><type><name pos:line="15108" pos:column="13">EditPoint2</name> <type:modifier pos:line="15108" pos:column="24">*</type:modifier></type> <name pos:line="15108" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="15109" pos:column="13">/* [defaultvalue][in] */</comment> <param><decl><type><name pos:line="15109" pos:column="38">long</name></type> <name pos:line="15109" pos:column="43">Count</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="15111" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="15112" pos:column="7">EditPoint2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="15114" pos:column="5">interface</name></type> <name pos:line="15114" pos:column="15">EditPoint2</name>
    <argument_list pos:line="15115" pos:column="5">{
        <argument><expr><name pos:line="15116" pos:column="9">CONST_VTBL</name> struct <name pos:line="15116" pos:column="27">EditPoint2Vtbl</name> <op:operator pos:line="15116" pos:column="42">*</op:operator><name pos:line="15116" pos:column="43">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="15121" pos:column="1">#<cpp:directive pos:line="15121" pos:column="2">ifdef</cpp:directive> <name pos:line="15121" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="15124" pos:column="1">#<cpp:directive pos:line="15124" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15124" pos:column="9">EditPoint2_QueryInterface</name><parameter_list pos:line="15124" pos:column="34">(<param><type><name pos:line="15124" pos:column="35">This</name></type></param>,<param><type><name pos:line="15124" pos:column="40">riid</name></type></param>,<param><type><name pos:line="15124" pos:column="45">ppvObj</name></type></param>,<param><type><name pos:line="15124" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15125" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15127" pos:column="1">#<cpp:directive pos:line="15127" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15127" pos:column="9">EditPoint2_AddRef</name><parameter_list pos:line="15127" pos:column="26">(<param><type><name pos:line="15127" pos:column="27">This</name></type></param>,<param><type><name pos:line="15127" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15128" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15130" pos:column="1">#<cpp:directive pos:line="15130" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15130" pos:column="9">EditPoint2_Release</name><parameter_list pos:line="15130" pos:column="27">(<param><type><name pos:line="15130" pos:column="28">This</name></type></param>,<param><type><name pos:line="15130" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15131" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15133" pos:column="1">#<cpp:directive pos:line="15133" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15133" pos:column="9">EditPoint2_GetTypeInfoCount</name><parameter_list pos:line="15133" pos:column="36">(<param><type><name pos:line="15133" pos:column="37">This</name></type></param>,<param><type><name pos:line="15133" pos:column="42">pctinfo</name></type></param>,<param><type><name pos:line="15133" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15134" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15136" pos:column="1">#<cpp:directive pos:line="15136" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15136" pos:column="9">EditPoint2_GetTypeInfo</name><parameter_list pos:line="15136" pos:column="31">(<param><type><name pos:line="15136" pos:column="32">This</name></type></param>,<param><type><name pos:line="15136" pos:column="37">itinfo</name></type></param>,<param><type><name pos:line="15136" pos:column="44">lcid</name></type></param>,<param><type><name pos:line="15136" pos:column="49">pptinfo</name></type></param>,<param><type><name pos:line="15136" pos:column="57">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15137" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15139" pos:column="1">#<cpp:directive pos:line="15139" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15139" pos:column="9">EditPoint2_GetIDsOfNames</name><parameter_list pos:line="15139" pos:column="33">(<param><type><name pos:line="15139" pos:column="34">This</name></type></param>,<param><type><name pos:line="15139" pos:column="39">riid</name></type></param>,<param><type><name pos:line="15139" pos:column="44">rgszNames</name></type></param>,<param><type><name pos:line="15139" pos:column="54">cNames</name></type></param>,<param><type><name pos:line="15139" pos:column="61">lcid</name></type></param>,<param><type><name pos:line="15139" pos:column="66">rgdispid</name></type></param>,<param><type><name pos:line="15139" pos:column="75">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15140" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15142" pos:column="1">#<cpp:directive pos:line="15142" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15142" pos:column="9">EditPoint2_Invoke</name><parameter_list pos:line="15142" pos:column="26">(<param><type><name pos:line="15142" pos:column="27">This</name></type></param>,<param><type><name pos:line="15142" pos:column="32">dispidMember</name></type></param>,<param><type><name pos:line="15142" pos:column="45">riid</name></type></param>,<param><type><name pos:line="15142" pos:column="50">lcid</name></type></param>,<param><type><name pos:line="15142" pos:column="55">wFlags</name></type></param>,<param><type><name pos:line="15142" pos:column="62">pdispparams</name></type></param>,<param><type><name pos:line="15142" pos:column="74">pvarResult</name></type></param>,<param><type><name pos:line="15142" pos:column="85">pexcepinfo</name></type></param>,<param><type><name pos:line="15142" pos:column="96">puArgErr</name></type></param>,<param><type><name pos:line="15142" pos:column="105">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15143" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15145" pos:column="1">#<cpp:directive pos:line="15145" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15145" pos:column="9">EditPoint2_get_DTE</name><parameter_list pos:line="15145" pos:column="27">(<param><type><name pos:line="15145" pos:column="28">This</name></type></param>,<param><type><name pos:line="15145" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15146" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15148" pos:column="1">#<cpp:directive pos:line="15148" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15148" pos:column="9">EditPoint2_get_Parent</name><parameter_list pos:line="15148" pos:column="30">(<param><type><name pos:line="15148" pos:column="31">This</name></type></param>,<param><type><name pos:line="15148" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15149" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15151" pos:column="1">#<cpp:directive pos:line="15151" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15151" pos:column="9">EditPoint2_get_Line</name><parameter_list pos:line="15151" pos:column="28">(<param><type><name pos:line="15151" pos:column="29">This</name></type></param>,<param><type><name pos:line="15151" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15152" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Line(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15154" pos:column="1">#<cpp:directive pos:line="15154" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15154" pos:column="9">EditPoint2_get_LineCharOffset</name><parameter_list pos:line="15154" pos:column="38">(<param><type><name pos:line="15154" pos:column="39">This</name></type></param>,<param><type><name pos:line="15154" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15155" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_LineCharOffset(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15157" pos:column="1">#<cpp:directive pos:line="15157" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15157" pos:column="9">EditPoint2_get_AbsoluteCharOffset</name><parameter_list pos:line="15157" pos:column="42">(<param><type><name pos:line="15157" pos:column="43">This</name></type></param>,<param><type><name pos:line="15157" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15158" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_AbsoluteCharOffset(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15160" pos:column="1">#<cpp:directive pos:line="15160" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15160" pos:column="9">EditPoint2_get_DisplayColumn</name><parameter_list pos:line="15160" pos:column="37">(<param><type><name pos:line="15160" pos:column="38">This</name></type></param>,<param><type><name pos:line="15160" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15161" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DisplayColumn(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15163" pos:column="1">#<cpp:directive pos:line="15163" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15163" pos:column="9">EditPoint2_get_AtEndOfDocument</name><parameter_list pos:line="15163" pos:column="39">(<param><type><name pos:line="15163" pos:column="40">This</name></type></param>,<param><type><name pos:line="15163" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15164" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_AtEndOfDocument(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15166" pos:column="1">#<cpp:directive pos:line="15166" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15166" pos:column="9">EditPoint2_get_AtStartOfDocument</name><parameter_list pos:line="15166" pos:column="41">(<param><type><name pos:line="15166" pos:column="42">This</name></type></param>,<param><type><name pos:line="15166" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15167" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_AtStartOfDocument(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15169" pos:column="1">#<cpp:directive pos:line="15169" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15169" pos:column="9">EditPoint2_get_AtEndOfLine</name><parameter_list pos:line="15169" pos:column="35">(<param><type><name pos:line="15169" pos:column="36">This</name></type></param>,<param><type><name pos:line="15169" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15170" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_AtEndOfLine(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15172" pos:column="1">#<cpp:directive pos:line="15172" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15172" pos:column="9">EditPoint2_get_AtStartOfLine</name><parameter_list pos:line="15172" pos:column="37">(<param><type><name pos:line="15172" pos:column="38">This</name></type></param>,<param><type><name pos:line="15172" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15173" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_AtStartOfLine(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15175" pos:column="1">#<cpp:directive pos:line="15175" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15175" pos:column="9">EditPoint2_get_LineLength</name><parameter_list pos:line="15175" pos:column="34">(<param><type><name pos:line="15175" pos:column="35">This</name></type></param>,<param><type><name pos:line="15175" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15176" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_LineLength(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15178" pos:column="1">#<cpp:directive pos:line="15178" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15178" pos:column="9">EditPoint2_EqualTo</name><parameter_list pos:line="15178" pos:column="27">(<param><type><name pos:line="15178" pos:column="28">This</name></type></param>,<param><type><name pos:line="15178" pos:column="33">Point</name></type></param>,<param><type><name pos:line="15178" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15179" pos:column="5">( (This)-&gt;lpVtbl -&gt; EqualTo(This,Point,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15181" pos:column="1">#<cpp:directive pos:line="15181" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15181" pos:column="9">EditPoint2_LessThan</name><parameter_list pos:line="15181" pos:column="28">(<param><type><name pos:line="15181" pos:column="29">This</name></type></param>,<param><type><name pos:line="15181" pos:column="34">Point</name></type></param>,<param><type><name pos:line="15181" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15182" pos:column="5">( (This)-&gt;lpVtbl -&gt; LessThan(This,Point,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15184" pos:column="1">#<cpp:directive pos:line="15184" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15184" pos:column="9">EditPoint2_GreaterThan</name><parameter_list pos:line="15184" pos:column="31">(<param><type><name pos:line="15184" pos:column="32">This</name></type></param>,<param><type><name pos:line="15184" pos:column="37">Point</name></type></param>,<param><type><name pos:line="15184" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15185" pos:column="5">( (This)-&gt;lpVtbl -&gt; GreaterThan(This,Point,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15187" pos:column="1">#<cpp:directive pos:line="15187" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15187" pos:column="9">EditPoint2_TryToShow</name><parameter_list pos:line="15187" pos:column="29">(<param><type><name pos:line="15187" pos:column="30">This</name></type></param>,<param><type><name pos:line="15187" pos:column="35">How</name></type></param>,<param><type><name pos:line="15187" pos:column="39">PointOrCount</name></type></param>,<param><type><name pos:line="15187" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15188" pos:column="5">( (This)-&gt;lpVtbl -&gt; TryToShow(This,How,PointOrCount,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15190" pos:column="1">#<cpp:directive pos:line="15190" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15190" pos:column="9">EditPoint2_get_CodeElement</name><parameter_list pos:line="15190" pos:column="35">(<param><type><name pos:line="15190" pos:column="36">This</name></type></param>,<param><type><name pos:line="15190" pos:column="41">Scope</name></type></param>,<param><type><name pos:line="15190" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15191" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_CodeElement(This,Scope,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15193" pos:column="1">#<cpp:directive pos:line="15193" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15193" pos:column="9">EditPoint2_CreateEditPoint</name><parameter_list pos:line="15193" pos:column="35">(<param><type><name pos:line="15193" pos:column="36">This</name></type></param>,<param><type><name pos:line="15193" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15194" pos:column="5">( (This)-&gt;lpVtbl -&gt; CreateEditPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15196" pos:column="1">#<cpp:directive pos:line="15196" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15196" pos:column="9">EditPoint2_CharLeft</name><parameter_list pos:line="15196" pos:column="28">(<param><type><name pos:line="15196" pos:column="29">This</name></type></param>,<param><type><name pos:line="15196" pos:column="34">Count</name></type></param>,<param><type><name pos:line="15196" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15197" pos:column="5">( (This)-&gt;lpVtbl -&gt; CharLeft(This,Count,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15199" pos:column="1">#<cpp:directive pos:line="15199" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15199" pos:column="9">EditPoint2_CharRight</name><parameter_list pos:line="15199" pos:column="29">(<param><type><name pos:line="15199" pos:column="30">This</name></type></param>,<param><type><name pos:line="15199" pos:column="35">Count</name></type></param>,<param><type><name pos:line="15199" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15200" pos:column="5">( (This)-&gt;lpVtbl -&gt; CharRight(This,Count,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15202" pos:column="1">#<cpp:directive pos:line="15202" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15202" pos:column="9">EditPoint2_EndOfLine</name><parameter_list pos:line="15202" pos:column="29">(<param><type><name pos:line="15202" pos:column="30">This</name></type></param>,<param><type><name pos:line="15202" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15203" pos:column="5">( (This)-&gt;lpVtbl -&gt; EndOfLine(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15205" pos:column="1">#<cpp:directive pos:line="15205" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15205" pos:column="9">EditPoint2_StartOfLine</name><parameter_list pos:line="15205" pos:column="31">(<param><type><name pos:line="15205" pos:column="32">This</name></type></param>,<param><type><name pos:line="15205" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15206" pos:column="5">( (This)-&gt;lpVtbl -&gt; StartOfLine(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15208" pos:column="1">#<cpp:directive pos:line="15208" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15208" pos:column="9">EditPoint2_EndOfDocument</name><parameter_list pos:line="15208" pos:column="33">(<param><type><name pos:line="15208" pos:column="34">This</name></type></param>,<param><type><name pos:line="15208" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15209" pos:column="5">( (This)-&gt;lpVtbl -&gt; EndOfDocument(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15211" pos:column="1">#<cpp:directive pos:line="15211" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15211" pos:column="9">EditPoint2_StartOfDocument</name><parameter_list pos:line="15211" pos:column="35">(<param><type><name pos:line="15211" pos:column="36">This</name></type></param>,<param><type><name pos:line="15211" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15212" pos:column="5">( (This)-&gt;lpVtbl -&gt; StartOfDocument(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15214" pos:column="1">#<cpp:directive pos:line="15214" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15214" pos:column="9">EditPoint2_WordLeft</name><parameter_list pos:line="15214" pos:column="28">(<param><type><name pos:line="15214" pos:column="29">This</name></type></param>,<param><type><name pos:line="15214" pos:column="34">Count</name></type></param>,<param><type><name pos:line="15214" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15215" pos:column="5">( (This)-&gt;lpVtbl -&gt; WordLeft(This,Count,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15217" pos:column="1">#<cpp:directive pos:line="15217" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15217" pos:column="9">EditPoint2_WordRight</name><parameter_list pos:line="15217" pos:column="29">(<param><type><name pos:line="15217" pos:column="30">This</name></type></param>,<param><type><name pos:line="15217" pos:column="35">Count</name></type></param>,<param><type><name pos:line="15217" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15218" pos:column="5">( (This)-&gt;lpVtbl -&gt; WordRight(This,Count,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15220" pos:column="1">#<cpp:directive pos:line="15220" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15220" pos:column="9">EditPoint2_LineUp</name><parameter_list pos:line="15220" pos:column="26">(<param><type><name pos:line="15220" pos:column="27">This</name></type></param>,<param><type><name pos:line="15220" pos:column="32">Count</name></type></param>,<param><type><name pos:line="15220" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15221" pos:column="5">( (This)-&gt;lpVtbl -&gt; LineUp(This,Count,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15223" pos:column="1">#<cpp:directive pos:line="15223" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15223" pos:column="9">EditPoint2_LineDown</name><parameter_list pos:line="15223" pos:column="28">(<param><type><name pos:line="15223" pos:column="29">This</name></type></param>,<param><type><name pos:line="15223" pos:column="34">Count</name></type></param>,<param><type><name pos:line="15223" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15224" pos:column="5">( (This)-&gt;lpVtbl -&gt; LineDown(This,Count,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15226" pos:column="1">#<cpp:directive pos:line="15226" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15226" pos:column="9">EditPoint2_MoveToPoint</name><parameter_list pos:line="15226" pos:column="31">(<param><type><name pos:line="15226" pos:column="32">This</name></type></param>,<param><type><name pos:line="15226" pos:column="37">Point</name></type></param>,<param><type><name pos:line="15226" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15227" pos:column="5">( (This)-&gt;lpVtbl -&gt; MoveToPoint(This,Point,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15229" pos:column="1">#<cpp:directive pos:line="15229" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15229" pos:column="9">EditPoint2_MoveToLineAndOffset</name><parameter_list pos:line="15229" pos:column="39">(<param><type><name pos:line="15229" pos:column="40">This</name></type></param>,<param><type><name pos:line="15229" pos:column="45">Line</name></type></param>,<param><type><name pos:line="15229" pos:column="50">Offset</name></type></param>,<param><type><name pos:line="15229" pos:column="57">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15230" pos:column="5">( (This)-&gt;lpVtbl -&gt; MoveToLineAndOffset(This,Line,Offset,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15232" pos:column="1">#<cpp:directive pos:line="15232" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15232" pos:column="9">EditPoint2_MoveToAbsoluteOffset</name><parameter_list pos:line="15232" pos:column="40">(<param><type><name pos:line="15232" pos:column="41">This</name></type></param>,<param><type><name pos:line="15232" pos:column="46">Offset</name></type></param>,<param><type><name pos:line="15232" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15233" pos:column="5">( (This)-&gt;lpVtbl -&gt; MoveToAbsoluteOffset(This,Offset,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15235" pos:column="1">#<cpp:directive pos:line="15235" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15235" pos:column="9">EditPoint2_SetBookmark</name><parameter_list pos:line="15235" pos:column="31">(<param><type><name pos:line="15235" pos:column="32">This</name></type></param>,<param><type><name pos:line="15235" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15236" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetBookmark(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15238" pos:column="1">#<cpp:directive pos:line="15238" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15238" pos:column="9">EditPoint2_ClearBookmark</name><parameter_list pos:line="15238" pos:column="33">(<param><type><name pos:line="15238" pos:column="34">This</name></type></param>,<param><type><name pos:line="15238" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15239" pos:column="5">( (This)-&gt;lpVtbl -&gt; ClearBookmark(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15241" pos:column="1">#<cpp:directive pos:line="15241" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15241" pos:column="9">EditPoint2_NextBookmark</name><parameter_list pos:line="15241" pos:column="32">(<param><type><name pos:line="15241" pos:column="33">This</name></type></param>,<param><type><name pos:line="15241" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15242" pos:column="5">( (This)-&gt;lpVtbl -&gt; NextBookmark(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15244" pos:column="1">#<cpp:directive pos:line="15244" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15244" pos:column="9">EditPoint2_PreviousBookmark</name><parameter_list pos:line="15244" pos:column="36">(<param><type><name pos:line="15244" pos:column="37">This</name></type></param>,<param><type><name pos:line="15244" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15245" pos:column="5">( (This)-&gt;lpVtbl -&gt; PreviousBookmark(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15247" pos:column="1">#<cpp:directive pos:line="15247" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15247" pos:column="9">EditPoint2_PadToColumn</name><parameter_list pos:line="15247" pos:column="31">(<param><type><name pos:line="15247" pos:column="32">This</name></type></param>,<param><type><name pos:line="15247" pos:column="37">Column</name></type></param>,<param><type><name pos:line="15247" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15248" pos:column="5">( (This)-&gt;lpVtbl -&gt; PadToColumn(This,Column,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15250" pos:column="1">#<cpp:directive pos:line="15250" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15250" pos:column="9">EditPoint2_Insert</name><parameter_list pos:line="15250" pos:column="26">(<param><type><name pos:line="15250" pos:column="27">This</name></type></param>,<param><type><name pos:line="15250" pos:column="32">Text</name></type></param>,<param><type><name pos:line="15250" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15251" pos:column="5">( (This)-&gt;lpVtbl -&gt; Insert(This,Text,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15253" pos:column="1">#<cpp:directive pos:line="15253" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15253" pos:column="9">EditPoint2_InsertFromFile</name><parameter_list pos:line="15253" pos:column="34">(<param><type><name pos:line="15253" pos:column="35">This</name></type></param>,<param><type><name pos:line="15253" pos:column="40">File</name></type></param>,<param><type><name pos:line="15253" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15254" pos:column="5">( (This)-&gt;lpVtbl -&gt; InsertFromFile(This,File,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15256" pos:column="1">#<cpp:directive pos:line="15256" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15256" pos:column="9">EditPoint2_GetText</name><parameter_list pos:line="15256" pos:column="27">(<param><type><name pos:line="15256" pos:column="28">This</name></type></param>,<param><type><name pos:line="15256" pos:column="33">PointOrCount</name></type></param>,<param><type><name pos:line="15256" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15257" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetText(This,PointOrCount,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15259" pos:column="1">#<cpp:directive pos:line="15259" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15259" pos:column="9">EditPoint2_GetLines</name><parameter_list pos:line="15259" pos:column="28">(<param><type><name pos:line="15259" pos:column="29">This</name></type></param>,<param><type><name pos:line="15259" pos:column="34">Start</name></type></param>,<param><type><name pos:line="15259" pos:column="40">ExclusiveEnd</name></type></param>,<param><type><name pos:line="15259" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15260" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLines(This,Start,ExclusiveEnd,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15262" pos:column="1">#<cpp:directive pos:line="15262" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15262" pos:column="9">EditPoint2_Copy</name><parameter_list pos:line="15262" pos:column="24">(<param><type><name pos:line="15262" pos:column="25">This</name></type></param>,<param><type><name pos:line="15262" pos:column="30">PointOrCount</name></type></param>,<param><type><name pos:line="15262" pos:column="43">Append</name></type></param>,<param><type><name pos:line="15262" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15263" pos:column="5">( (This)-&gt;lpVtbl -&gt; Copy(This,PointOrCount,Append,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15265" pos:column="1">#<cpp:directive pos:line="15265" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15265" pos:column="9">EditPoint2_Cut</name><parameter_list pos:line="15265" pos:column="23">(<param><type><name pos:line="15265" pos:column="24">This</name></type></param>,<param><type><name pos:line="15265" pos:column="29">PointOrCount</name></type></param>,<param><type><name pos:line="15265" pos:column="42">Append</name></type></param>,<param><type><name pos:line="15265" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15266" pos:column="5">( (This)-&gt;lpVtbl -&gt; Cut(This,PointOrCount,Append,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15268" pos:column="1">#<cpp:directive pos:line="15268" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15268" pos:column="9">EditPoint2_Delete</name><parameter_list pos:line="15268" pos:column="26">(<param><type><name pos:line="15268" pos:column="27">This</name></type></param>,<param><type><name pos:line="15268" pos:column="32">PointOrCount</name></type></param>,<param><type><name pos:line="15268" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15269" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This,PointOrCount,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15271" pos:column="1">#<cpp:directive pos:line="15271" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15271" pos:column="9">EditPoint2_Paste</name><parameter_list pos:line="15271" pos:column="25">(<param><type><name pos:line="15271" pos:column="26">This</name></type></param>,<param><type><name pos:line="15271" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15272" pos:column="5">( (This)-&gt;lpVtbl -&gt; Paste(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15274" pos:column="1">#<cpp:directive pos:line="15274" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15274" pos:column="9">EditPoint2_ReadOnly</name><parameter_list pos:line="15274" pos:column="28">(<param><type><name pos:line="15274" pos:column="29">This</name></type></param>,<param><type><name pos:line="15274" pos:column="34">PointOrCount</name></type></param>,<param><type><name pos:line="15274" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15275" pos:column="5">( (This)-&gt;lpVtbl -&gt; ReadOnly(This,PointOrCount,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15277" pos:column="1">#<cpp:directive pos:line="15277" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15277" pos:column="9">EditPoint2_FindPattern</name><parameter_list pos:line="15277" pos:column="31">(<param><type><name pos:line="15277" pos:column="32">This</name></type></param>,<param><type><name pos:line="15277" pos:column="37">Pattern</name></type></param>,<param><type><name pos:line="15277" pos:column="45">vsFindOptionsValue</name></type></param>,<param><type><name pos:line="15277" pos:column="64">EndPoint</name></type></param>,<param><type><name pos:line="15277" pos:column="73">Tags</name></type></param>,<param><type><name pos:line="15277" pos:column="78">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15278" pos:column="5">( (This)-&gt;lpVtbl -&gt; FindPattern(This,Pattern,vsFindOptionsValue,EndPoint,Tags,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15280" pos:column="1">#<cpp:directive pos:line="15280" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15280" pos:column="9">EditPoint2_ReplacePattern</name><parameter_list pos:line="15280" pos:column="34">(<param><type><name pos:line="15280" pos:column="35">This</name></type></param>,<param><type><name pos:line="15280" pos:column="40">Point</name></type></param>,<param><type><name pos:line="15280" pos:column="46">Pattern</name></type></param>,<param><type><name pos:line="15280" pos:column="54">Replace</name></type></param>,<param><type><name pos:line="15280" pos:column="62">vsFindOptionsValue</name></type></param>,<param><type><name pos:line="15280" pos:column="81">Tags</name></type></param>,<param><type><name pos:line="15280" pos:column="86">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15281" pos:column="5">( (This)-&gt;lpVtbl -&gt; ReplacePattern(This,Point,Pattern,Replace,vsFindOptionsValue,Tags,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15283" pos:column="1">#<cpp:directive pos:line="15283" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15283" pos:column="9">EditPoint2_Indent</name><parameter_list pos:line="15283" pos:column="26">(<param><type><name pos:line="15283" pos:column="27">This</name></type></param>,<param><type><name pos:line="15283" pos:column="32">Point</name></type></param>,<param><type><name pos:line="15283" pos:column="38">Count</name></type></param>,<param><type><name pos:line="15283" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15284" pos:column="5">( (This)-&gt;lpVtbl -&gt; Indent(This,Point,Count,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15286" pos:column="1">#<cpp:directive pos:line="15286" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15286" pos:column="9">EditPoint2_Unindent</name><parameter_list pos:line="15286" pos:column="28">(<param><type><name pos:line="15286" pos:column="29">This</name></type></param>,<param><type><name pos:line="15286" pos:column="34">Point</name></type></param>,<param><type><name pos:line="15286" pos:column="40">Count</name></type></param>,<param><type><name pos:line="15286" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15287" pos:column="5">( (This)-&gt;lpVtbl -&gt; Unindent(This,Point,Count,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15289" pos:column="1">#<cpp:directive pos:line="15289" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15289" pos:column="9">EditPoint2_SmartFormat</name><parameter_list pos:line="15289" pos:column="31">(<param><type><name pos:line="15289" pos:column="32">This</name></type></param>,<param><type><name pos:line="15289" pos:column="37">Point</name></type></param>,<param><type><name pos:line="15289" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15290" pos:column="5">( (This)-&gt;lpVtbl -&gt; SmartFormat(This,Point,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15292" pos:column="1">#<cpp:directive pos:line="15292" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15292" pos:column="9">EditPoint2_OutlineSection</name><parameter_list pos:line="15292" pos:column="34">(<param><type><name pos:line="15292" pos:column="35">This</name></type></param>,<param><type><name pos:line="15292" pos:column="40">PointOrCount</name></type></param>,<param><type><name pos:line="15292" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15293" pos:column="5">( (This)-&gt;lpVtbl -&gt; OutlineSection(This,PointOrCount,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15295" pos:column="1">#<cpp:directive pos:line="15295" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15295" pos:column="9">EditPoint2_ReplaceText</name><parameter_list pos:line="15295" pos:column="31">(<param><type><name pos:line="15295" pos:column="32">This</name></type></param>,<param><type><name pos:line="15295" pos:column="37">PointOrCount</name></type></param>,<param><type><name pos:line="15295" pos:column="50">Text</name></type></param>,<param><type><name pos:line="15295" pos:column="55">Flags</name></type></param>,<param><type><name pos:line="15295" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15296" pos:column="5">( (This)-&gt;lpVtbl -&gt; ReplaceText(This,PointOrCount,Text,Flags,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15298" pos:column="1">#<cpp:directive pos:line="15298" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15298" pos:column="9">EditPoint2_ChangeCase</name><parameter_list pos:line="15298" pos:column="30">(<param><type><name pos:line="15298" pos:column="31">This</name></type></param>,<param><type><name pos:line="15298" pos:column="36">PointOrCount</name></type></param>,<param><type><name pos:line="15298" pos:column="49">How</name></type></param>,<param><type><name pos:line="15298" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15299" pos:column="5">( (This)-&gt;lpVtbl -&gt; ChangeCase(This,PointOrCount,How,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="15301" pos:column="1">#<cpp:directive pos:line="15301" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15301" pos:column="9">EditPoint2_DeleteWhitespace</name><parameter_list pos:line="15301" pos:column="36">(<param><type><name pos:line="15301" pos:column="37">This</name></type></param>,<param><type><name pos:line="15301" pos:column="42">Direction</name></type></param>,<param><type><name pos:line="15301" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15302" pos:column="5">( (This)-&gt;lpVtbl -&gt; DeleteWhitespace(This,Direction,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="15305" pos:column="1">#<cpp:directive pos:line="15305" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15305" pos:column="9">EditPoint2_InsertNewLine</name><parameter_list pos:line="15305" pos:column="33">(<param><type><name pos:line="15305" pos:column="34">This</name></type></param>,<param><type><name pos:line="15305" pos:column="39">Count</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15306" pos:column="5">( (This)-&gt;lpVtbl -&gt; InsertNewLine(This,Count) )</cpp:value></cpp:define> 

<cpp:endif pos:line="15308" pos:column="1">#<cpp:directive pos:line="15308" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="15308" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="15311" pos:column="1">#<cpp:directive pos:line="15311" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15311" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="15316" pos:column="1">#<cpp:directive pos:line="15316" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15316" pos:column="9">/* __EditPoint2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="15319" pos:column="1">#<cpp:directive pos:line="15319" pos:column="2">ifndef</cpp:directive> <name pos:line="15319" pos:column="9">__IVsExtensibility2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="15320" pos:column="1">#<cpp:directive pos:line="15320" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15320" pos:column="9">__IVsExtensibility2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="15322" pos:column="1">/* interface IVsExtensibility2 */</comment>
<comment type="block" pos:line="15323" pos:column="1">/* [restricted][hidden][uuid][object][oleautomation] */</comment> 


<decl_stmt><decl><type><name pos:line="15326" pos:column="1">EXTERN_C</name> <specifier pos:line="15326" pos:column="10">const</specifier> <name pos:line="15326" pos:column="16">IID</name></type> <name pos:line="15326" pos:column="20">IID_IVsExtensibility2</name></decl>;</decl_stmt>

<cpp:if pos:line="15328" pos:column="1">#<cpp:directive pos:line="15328" pos:column="2">if</cpp:directive> <expr><call><name pos:line="15328" pos:column="5">defined</name><argument_list pos:line="15328" pos:column="12">(<argument><expr><name pos:line="15328" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="15328" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="15328" pos:column="29">!</op:operator><call><name pos:line="15328" pos:column="30">defined</name><argument_list pos:line="15328" pos:column="37">(<argument><expr><name pos:line="15328" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="15330" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="15330" pos:column="19">(<argument pos:line="15330" pos:column="20">"12133BC2-390A-4b30-AD5B-504C1D1C89E7"</argument>)</argument_list></macro>
    <label><name pos:line="15331" pos:column="5">IVsExtensibility2</name> :</label> <expr_stmt><expr pos:line="15331" pos:column="25">public <name pos:line="15331" pos:column="32">IVsExtensibility</name>
    <block pos:line="15332" pos:column="5">{
    <expr pos:line="15333" pos:column="5">public<op:operator pos:line="15333" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="15334" pos:column="17">/* [id] */</comment> <name pos:line="15334" pos:column="28">HRESULT</name> <name pos:line="15334" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="15334" pos:column="54">FireProjectsEvent_ItemAdded</name><argument_list pos:line="15334" pos:column="81">( 
            <comment type="block" pos:line="15335" pos:column="13">/* [in] */</comment> <argument pos:line="15335" pos:column="24">__RPC__in <comment type="block" pos:line="15335" pos:column="34">/* external definition not present */</comment> Project *Project</argument>)</argument_list></macro> <op:operator pos:line="15335" pos:column="90">=</op:operator> <lit:literal type="number" pos:line="15335" pos:column="92">0</lit:literal></expr>;
        
        <expr pos:line="15337" pos:column="9">virtual <comment type="block" pos:line="15337" pos:column="17">/* [id] */</comment> <name pos:line="15337" pos:column="28">HRESULT</name> <name pos:line="15337" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="15337" pos:column="54">FireProjectsEvent_ItemRemoved</name><argument_list pos:line="15337" pos:column="83">( 
            <comment type="block" pos:line="15338" pos:column="13">/* [in] */</comment> <argument pos:line="15338" pos:column="24">__RPC__in <comment type="block" pos:line="15338" pos:column="34">/* external definition not present */</comment> Project *Project</argument>)</argument_list></macro> <op:operator pos:line="15338" pos:column="90">=</op:operator> <lit:literal type="number" pos:line="15338" pos:column="92">0</lit:literal></expr>;
        
        <expr pos:line="15340" pos:column="9">virtual <comment type="block" pos:line="15340" pos:column="17">/* [id] */</comment> <name pos:line="15340" pos:column="28">HRESULT</name> <name pos:line="15340" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="15340" pos:column="54">FireProjectsEvent_ItemRenamed</name><argument_list pos:line="15340" pos:column="83">( 
            <comment type="block" pos:line="15341" pos:column="13">/* [in] */</comment> <argument pos:line="15341" pos:column="24">__RPC__in <comment type="block" pos:line="15341" pos:column="34">/* external definition not present */</comment> Project *Project</argument>,
            <comment type="block" pos:line="15342" pos:column="13">/* [in] */</comment> <argument pos:line="15342" pos:column="24">__RPC__in BSTR OldName</argument>)</argument_list></macro> <op:operator pos:line="15342" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="15342" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="15344" pos:column="9">virtual <comment type="block" pos:line="15344" pos:column="17">/* [id] */</comment> <name pos:line="15344" pos:column="28">HRESULT</name> <name pos:line="15344" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="15344" pos:column="54">FireProjectItemsEvent_ItemAdded</name><argument_list pos:line="15344" pos:column="85">( 
            <comment type="block" pos:line="15345" pos:column="13">/* [in] */</comment> <argument pos:line="15345" pos:column="24">__RPC__in <comment type="block" pos:line="15345" pos:column="34">/* external definition not present */</comment> ProjectItem *ProjectItem</argument>)</argument_list></macro> <op:operator pos:line="15345" pos:column="98">=</op:operator> <lit:literal type="number" pos:line="15345" pos:column="100">0</lit:literal></expr>;
        
        <expr pos:line="15347" pos:column="9">virtual <comment type="block" pos:line="15347" pos:column="17">/* [id] */</comment> <name pos:line="15347" pos:column="28">HRESULT</name> <name pos:line="15347" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="15347" pos:column="54">FireProjectItemsEvent_ItemRemoved</name><argument_list pos:line="15347" pos:column="87">( 
            <comment type="block" pos:line="15348" pos:column="13">/* [in] */</comment> <argument pos:line="15348" pos:column="24">__RPC__in <comment type="block" pos:line="15348" pos:column="34">/* external definition not present */</comment> ProjectItem *ProjectItem</argument>)</argument_list></macro> <op:operator pos:line="15348" pos:column="98">=</op:operator> <lit:literal type="number" pos:line="15348" pos:column="100">0</lit:literal></expr>;
        
        <expr pos:line="15350" pos:column="9">virtual <comment type="block" pos:line="15350" pos:column="17">/* [id] */</comment> <name pos:line="15350" pos:column="28">HRESULT</name> <name pos:line="15350" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="15350" pos:column="54">FireProjectItemsEvent_ItemRenamed</name><argument_list pos:line="15350" pos:column="87">( 
            <comment type="block" pos:line="15351" pos:column="13">/* [in] */</comment> <argument pos:line="15351" pos:column="24">__RPC__in <comment type="block" pos:line="15351" pos:column="34">/* external definition not present */</comment> ProjectItem *ProjectItem</argument>,
            <comment type="block" pos:line="15352" pos:column="13">/* [in] */</comment> <argument pos:line="15352" pos:column="24">__RPC__in BSTR OldName</argument>)</argument_list></macro> <op:operator pos:line="15352" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="15352" pos:column="50">0</lit:literal></expr>;
        
        <expr pos:line="15354" pos:column="9">virtual <comment type="block" pos:line="15354" pos:column="17">/* [id] */</comment> <name pos:line="15354" pos:column="28">HRESULT</name> <name pos:line="15354" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="15354" pos:column="54">BuildUIHierarchyFromTree</name><argument_list pos:line="15354" pos:column="78">( 
            <comment type="block" pos:line="15355" pos:column="13">/* external definition not present */</comment> <argument pos:line="15355" pos:column="51">OLE_HANDLE hwnd</argument>,
            <argument pos:line="15356" pos:column="13">__RPC__in <comment type="block" pos:line="15356" pos:column="23">/* external definition not present */</comment> Window *pParent</argument>,
            <comment type="block" pos:line="15357" pos:column="13">/* [retval][out] */</comment> <argument pos:line="15357" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="15357" pos:column="54">/* external definition not present */</comment> UIHierarchy **ppUIHierarchy</argument>)</argument_list></macro> <op:operator pos:line="15357" pos:column="121">=</op:operator> <lit:literal type="number" pos:line="15357" pos:column="123">0</lit:literal></expr>;
        
        <expr pos:line="15359" pos:column="9">virtual <comment type="block" pos:line="15359" pos:column="17">/* [id] */</comment> <name pos:line="15359" pos:column="28">HRESULT</name> <name pos:line="15359" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="15359" pos:column="54">FireCodeModelEvent</name><argument_list pos:line="15359" pos:column="72">( 
            <argument pos:line="15360" pos:column="13">DISPID dispid</argument>,
            <argument pos:line="15361" pos:column="13">__RPC__in <comment type="block" pos:line="15361" pos:column="23">/* external definition not present */</comment> CodeElement *pElement</argument>,
            <argument pos:line="15362" pos:column="13">vsCMChangeKind changeKind</argument>)</argument_list></macro> <op:operator pos:line="15362" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="15362" pos:column="42">0</lit:literal></expr>;
        
        <expr pos:line="15364" pos:column="9">virtual <comment type="block" pos:line="15364" pos:column="17">/* [id] */</comment> <name pos:line="15364" pos:column="28">HRESULT</name> <name pos:line="15364" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="15364" pos:column="54">IsFireCodeModelEventNeeded</name><argument_list pos:line="15364" pos:column="80">( 
            <argument pos:line="15365" pos:column="13">__RPC__in VARIANT_BOOL *vbNeeded</argument>)</argument_list></macro> <op:operator pos:line="15365" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="15365" pos:column="49">0</lit:literal></expr>;
        
        <expr pos:line="15367" pos:column="9">virtual <comment type="block" pos:line="15367" pos:column="17">/* [id] */</comment> <name pos:line="15367" pos:column="28">HRESULT</name> <name pos:line="15367" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="15367" pos:column="54">RunWizardFileEx</name><argument_list pos:line="15367" pos:column="69">( 
            <comment type="block" pos:line="15368" pos:column="13">/* [in] */</comment> <argument pos:line="15368" pos:column="24">__RPC__in BSTR bstrWizFilename</argument>,
            <comment type="block" pos:line="15369" pos:column="13">/* [in] */</comment> <argument pos:line="15369" pos:column="24">long hwndOwner</argument>,
            <comment type="block" pos:line="15370" pos:column="13">/* [in] */</comment> <argument pos:line="15370" pos:column="24">__RPC__deref_in_opt SAFEARRAY * *vContextParams</argument>,
            <comment type="block" pos:line="15371" pos:column="13">/* [in] */</comment> <argument pos:line="15371" pos:column="24">__RPC__deref_in_opt SAFEARRAY * *vCustomParams</argument>,
            <comment type="block" pos:line="15372" pos:column="13">/* [retval][out] */</comment> <argument pos:line="15372" pos:column="33">__RPC__out long *pResult</argument>)</argument_list></macro> <op:operator pos:line="15372" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="15372" pos:column="61">0</lit:literal></expr>;
        
        <expr pos:line="15374" pos:column="9">virtual <comment type="block" pos:line="15374" pos:column="17">/* [id] */</comment> <name pos:line="15374" pos:column="28">HRESULT</name> <name pos:line="15374" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="15374" pos:column="54">FireCodeModelEvent3</name><argument_list pos:line="15374" pos:column="73">( 
            <argument pos:line="15375" pos:column="13">DISPID dispid</argument>,
            <argument pos:line="15376" pos:column="13">__RPC__in_opt IDispatch *pParent</argument>,
            <argument pos:line="15377" pos:column="13">__RPC__in <comment type="block" pos:line="15377" pos:column="23">/* external definition not present */</comment> CodeElement *pElement</argument>,
            <argument pos:line="15378" pos:column="13">vsCMChangeKind changeKind</argument>)</argument_list></macro> <op:operator pos:line="15378" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="15378" pos:column="42">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="15382" pos:column="1">#<cpp:directive pos:line="15382" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="15382" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="15384" pos:column="5">typedef <type><struct pos:line="15384" pos:column="13">struct <name pos:line="15384" pos:column="20">IVsExtensibility2Vtbl</name>
    <block pos:line="15385" pos:column="5">{<public type="default" pos:line="15385" pos:column="6">
        <decl_stmt><decl><type><name pos:line="15386" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="15388" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="15388" pos:column="46">HRESULT</name></type> ( <name pos:line="15388" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="15388" pos:column="74">*</type:modifier><name pos:line="15388" pos:column="75">QueryInterface</name> )<parameter_list pos:line="15388" pos:column="91">( 
            <param><decl><type><name pos:line="15389" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15389" pos:column="31">*</type:modifier></type> <name pos:line="15389" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15390" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="15390" pos:column="47">struct <name pos:line="15390" pos:column="54">GUID</name> <type:modifier pos:line="15390" pos:column="59">*</type:modifier></type><name pos:line="15390" pos:column="60">riid</name></decl><op:operator pos:line="15390" pos:column="64">,</op:operator>
            <comment type="block" pos:line="15391" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="15391" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="15391" pos:column="59">void</name> <type:modifier pos:line="15391" pos:column="64">*</type:modifier><type:modifier pos:line="15391" pos:column="65">*</type:modifier><name pos:line="15391" pos:column="66">ppvObj</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="15393" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="15393" pos:column="46">unsigned</name> <name pos:line="15393" pos:column="55">long</name></type> ( <name pos:line="15393" pos:column="62">STDMETHODCALLTYPE</name> <type:modifier pos:line="15393" pos:column="80">*</type:modifier><name pos:line="15393" pos:column="81">AddRef</name> )<parameter_list pos:line="15393" pos:column="89">( 
            <param><decl><type><name pos:line="15394" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15394" pos:column="31">*</type:modifier></type> <name pos:line="15394" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15396" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="15396" pos:column="46">unsigned</name> <name pos:line="15396" pos:column="55">long</name></type> ( <name pos:line="15396" pos:column="62">STDMETHODCALLTYPE</name> <type:modifier pos:line="15396" pos:column="80">*</type:modifier><name pos:line="15396" pos:column="81">Release</name> )<parameter_list pos:line="15396" pos:column="90">( 
            <param><decl><type><name pos:line="15397" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15397" pos:column="31">*</type:modifier></type> <name pos:line="15397" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15399" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15399" pos:column="34">HRESULT</name></type> ( <name pos:line="15399" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15399" pos:column="62">*</type:modifier><name pos:line="15399" pos:column="63">get_Properties</name> )<parameter_list pos:line="15399" pos:column="79">( 
            <param><decl><type><name pos:line="15400" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15400" pos:column="31">*</type:modifier></type> <name pos:line="15400" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15401" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15401" pos:column="37">__RPC__in_opt</name> <name pos:line="15401" pos:column="51">ISupportVSProperties</name> <type:modifier pos:line="15401" pos:column="72">*</type:modifier></type><name pos:line="15401" pos:column="73">pParent</name></decl></param>,
            <comment type="block" pos:line="15402" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15402" pos:column="37">__RPC__in_opt</name> <name pos:line="15402" pos:column="51">IDispatch</name> <type:modifier pos:line="15402" pos:column="61">*</type:modifier></type><name pos:line="15402" pos:column="62">pdispPropObj</name></decl></param>,
            <comment type="block" pos:line="15403" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="15403" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="15403" pos:column="59">Properties</name> <type:modifier pos:line="15403" pos:column="70">*</type:modifier><type:modifier pos:line="15403" pos:column="71">*</type:modifier></type><name pos:line="15403" pos:column="72">ppProperties</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15405" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="15405" pos:column="34">HRESULT</name> <argument_list pos:line="15405" pos:column="42">( <argument pos:line="15405" pos:column="44">STDMETHODCALLTYPE *RunWizardFile</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="15405" pos:column="78">(</op:operator> 
            <name pos:line="15406" pos:column="13">IVsExtensibility2</name> <op:operator pos:line="15406" pos:column="31">*</op:operator> <name pos:line="15406" pos:column="33">This</name><op:operator pos:line="15406" pos:column="37">,</op:operator>
            <comment type="block" pos:line="15407" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="15407" pos:column="37">__RPC__in</name> <name pos:line="15407" pos:column="47">BSTR</name> <name pos:line="15407" pos:column="52">bstrWizFilename</name><op:operator pos:line="15407" pos:column="67">,</op:operator>
            <comment type="block" pos:line="15408" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="15408" pos:column="37">signed</name> <name pos:line="15408" pos:column="44">long</name> <name pos:line="15408" pos:column="49">hwndOwner</name><op:operator pos:line="15408" pos:column="58">,</op:operator>
            <comment type="block" pos:line="15409" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="15409" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="15409" pos:column="57">SAFEARRAY</name> <op:operator pos:line="15409" pos:column="67">*</op:operator> <op:operator pos:line="15409" pos:column="69">*</op:operator><name pos:line="15409" pos:column="70">vContextParams</name><op:operator pos:line="15409" pos:column="84">,</op:operator>
            <comment type="block" pos:line="15410" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="15410" pos:column="38">__RPC__out</name> enum <name pos:line="15410" pos:column="54">wizardResult</name> <op:operator pos:line="15410" pos:column="67">*</op:operator><name pos:line="15410" pos:column="68">pResult</name><op:operator pos:line="15410" pos:column="75">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="15412" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15412" pos:column="34">HRESULT</name></type> ( <name pos:line="15412" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15412" pos:column="62">*</type:modifier><name pos:line="15412" pos:column="63">Get_TextBuffer</name> )<parameter_list pos:line="15412" pos:column="79">( 
            <param><decl><type><name pos:line="15413" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15413" pos:column="31">*</type:modifier></type> <name pos:line="15413" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15414" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15414" pos:column="37">__RPC__in_opt</name> <name pos:line="15414" pos:column="51">IUnknown</name> <type:modifier pos:line="15414" pos:column="60">*</type:modifier></type><name pos:line="15414" pos:column="61">pVsTextStream</name></decl></param>,
            <comment type="block" pos:line="15415" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15415" pos:column="37">__RPC__in_opt</name> <name pos:line="15415" pos:column="51">IExtensibleObjectSite</name> <type:modifier pos:line="15415" pos:column="73">*</type:modifier></type><name pos:line="15415" pos:column="74">pParent</name></decl></param>,
            <comment type="block" pos:line="15416" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="15416" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="15416" pos:column="59">TextBuffer</name> <type:modifier pos:line="15416" pos:column="70">*</type:modifier><type:modifier pos:line="15416" pos:column="71">*</type:modifier></type><name pos:line="15416" pos:column="72">ppTextBuffer</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15418" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15418" pos:column="34">HRESULT</name></type> ( <name pos:line="15418" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15418" pos:column="62">*</type:modifier><name pos:line="15418" pos:column="63">EnterAutomationFunction</name> )<parameter_list pos:line="15418" pos:column="88">( 
            <param><decl><type><name pos:line="15419" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15419" pos:column="31">*</type:modifier></type> <name pos:line="15419" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15421" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15421" pos:column="34">HRESULT</name></type> ( <name pos:line="15421" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15421" pos:column="62">*</type:modifier><name pos:line="15421" pos:column="63">ExitAutomationFunction</name> )<parameter_list pos:line="15421" pos:column="87">( 
            <param><decl><type><name pos:line="15422" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15422" pos:column="31">*</type:modifier></type> <name pos:line="15422" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15424" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15424" pos:column="34">HRESULT</name></type> ( <name pos:line="15424" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15424" pos:column="62">*</type:modifier><name pos:line="15424" pos:column="63">IsInAutomationFunction</name> )<parameter_list pos:line="15424" pos:column="87">( 
            <param><decl><type><name pos:line="15425" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15425" pos:column="31">*</type:modifier></type> <name pos:line="15425" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15426" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="15426" pos:column="38">__RPC__out</name> <name pos:line="15426" pos:column="49">signed</name> <name pos:line="15426" pos:column="56">long</name> <type:modifier pos:line="15426" pos:column="61">*</type:modifier></type><name pos:line="15426" pos:column="62">pfInAutoFunc</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15428" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15428" pos:column="34">HRESULT</name></type> ( <name pos:line="15428" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15428" pos:column="62">*</type:modifier><name pos:line="15428" pos:column="63">GetUserControl</name> )<parameter_list pos:line="15428" pos:column="79">( 
            <param><decl><type><name pos:line="15429" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15429" pos:column="31">*</type:modifier></type> <name pos:line="15429" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15430" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="15430" pos:column="38">__RPC__out</name> <name pos:line="15430" pos:column="49">BOOLEAN</name> <type:modifier pos:line="15430" pos:column="57">*</type:modifier></type><name pos:line="15430" pos:column="58">fUserControl</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15432" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15432" pos:column="34">HRESULT</name></type> ( <name pos:line="15432" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15432" pos:column="62">*</type:modifier><name pos:line="15432" pos:column="63">SetUserControl</name> )<parameter_list pos:line="15432" pos:column="79">( 
            <param><decl><type><name pos:line="15433" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15433" pos:column="31">*</type:modifier></type> <name pos:line="15433" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15434" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15434" pos:column="37">BOOLEAN</name></type> <name pos:line="15434" pos:column="45">fUserControl</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15436" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15436" pos:column="34">HRESULT</name></type> ( <name pos:line="15436" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15436" pos:column="62">*</type:modifier><name pos:line="15436" pos:column="63">SetUserControlUnlatched</name> )<parameter_list pos:line="15436" pos:column="88">( 
            <param><decl><type><name pos:line="15437" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15437" pos:column="31">*</type:modifier></type> <name pos:line="15437" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15438" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15438" pos:column="37">BOOLEAN</name></type> <name pos:line="15438" pos:column="45">fUserControl</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15440" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15440" pos:column="34">HRESULT</name></type> ( <name pos:line="15440" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15440" pos:column="62">*</type:modifier><name pos:line="15440" pos:column="63">LockServer</name> )<parameter_list pos:line="15440" pos:column="75">( 
            <param><decl><type><name pos:line="15441" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15441" pos:column="31">*</type:modifier></type> <name pos:line="15441" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15442" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15442" pos:column="37">BOOLEAN</name></type> <name pos:line="15442" pos:column="45">__MIDL__IVsExtensibility0000</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15444" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15444" pos:column="34">HRESULT</name></type> ( <name pos:line="15444" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15444" pos:column="62">*</type:modifier><name pos:line="15444" pos:column="63">GetLockCount</name> )<parameter_list pos:line="15444" pos:column="77">( 
            <param><decl><type><name pos:line="15445" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15445" pos:column="31">*</type:modifier></type> <name pos:line="15445" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15446" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="15446" pos:column="38">__RPC__out</name> <name pos:line="15446" pos:column="49">signed</name> <name pos:line="15446" pos:column="56">long</name> <type:modifier pos:line="15446" pos:column="61">*</type:modifier></type><name pos:line="15446" pos:column="62">pCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15448" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15448" pos:column="34">HRESULT</name></type> ( <name pos:line="15448" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15448" pos:column="62">*</type:modifier><name pos:line="15448" pos:column="63">TestForShutdown</name> )<parameter_list pos:line="15448" pos:column="80">( 
            <param><decl><type><name pos:line="15449" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15449" pos:column="31">*</type:modifier></type> <name pos:line="15449" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15450" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="15450" pos:column="38">__RPC__out</name> <name pos:line="15450" pos:column="49">BOOLEAN</name> <type:modifier pos:line="15450" pos:column="57">*</type:modifier></type><name pos:line="15450" pos:column="58">fShutdown</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15452" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15452" pos:column="34">HRESULT</name></type> ( <name pos:line="15452" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15452" pos:column="62">*</type:modifier><name pos:line="15452" pos:column="63">GetGlobalsObject</name> )<parameter_list pos:line="15452" pos:column="81">( 
            <param><decl><type><name pos:line="15453" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15453" pos:column="31">*</type:modifier></type> <name pos:line="15453" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15454" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15454" pos:column="37">VARIANT</name></type> <name pos:line="15454" pos:column="45">ExtractFrom</name></decl></param>,
            <comment type="block" pos:line="15455" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="15455" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="15455" pos:column="59">Globals</name> <type:modifier pos:line="15455" pos:column="67">*</type:modifier><type:modifier pos:line="15455" pos:column="68">*</type:modifier></type><name pos:line="15455" pos:column="69">ppGlobals</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15457" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15457" pos:column="34">HRESULT</name></type> ( <name pos:line="15457" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15457" pos:column="62">*</type:modifier><name pos:line="15457" pos:column="63">GetConfigMgr</name> )<parameter_list pos:line="15457" pos:column="77">( 
            <param><decl><type><name pos:line="15458" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15458" pos:column="31">*</type:modifier></type> <name pos:line="15458" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15459" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15459" pos:column="37">__RPC__in_opt</name> <name pos:line="15459" pos:column="51">IUnknown</name> <type:modifier pos:line="15459" pos:column="60">*</type:modifier></type><name pos:line="15459" pos:column="61">pIVsProject</name></decl></param>,
            <comment type="block" pos:line="15460" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="15460" pos:column="33">ULONG_PTR</name></type> <name pos:line="15460" pos:column="43">itemid</name></decl></param>,
            <comment type="block" pos:line="15461" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="15461" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="15461" pos:column="59">ConfigurationManager</name> <type:modifier pos:line="15461" pos:column="80">*</type:modifier><type:modifier pos:line="15461" pos:column="81">*</type:modifier></type><name pos:line="15461" pos:column="82">ppCfgMgr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15463" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15463" pos:column="34">HRESULT</name></type> ( <name pos:line="15463" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15463" pos:column="62">*</type:modifier><name pos:line="15463" pos:column="63">FireMacroReset</name> )<parameter_list pos:line="15463" pos:column="79">( 
            <param><decl><type><name pos:line="15464" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15464" pos:column="31">*</type:modifier></type> <name pos:line="15464" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15466" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15466" pos:column="34">HRESULT</name></type> ( <name pos:line="15466" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15466" pos:column="62">*</type:modifier><name pos:line="15466" pos:column="63">GetDocumentFromDocCookie</name> )<parameter_list pos:line="15466" pos:column="89">( 
            <param><decl><type><name pos:line="15467" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15467" pos:column="31">*</type:modifier></type> <name pos:line="15467" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15468" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="15468" pos:column="33">LONG_PTR</name></type> <name pos:line="15468" pos:column="42">lDocCookie</name></decl></param>,
            <comment type="block" pos:line="15469" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="15469" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="15469" pos:column="59">Document</name> <type:modifier pos:line="15469" pos:column="68">*</type:modifier><type:modifier pos:line="15469" pos:column="69">*</type:modifier></type><name pos:line="15469" pos:column="70">ppDoc</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15471" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="15471" pos:column="34">HRESULT</name> <argument_list pos:line="15471" pos:column="42">( <argument pos:line="15471" pos:column="44">STDMETHODCALLTYPE *IsMethodDisabled</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="15471" pos:column="81">(</op:operator> 
            <name pos:line="15472" pos:column="13">IVsExtensibility2</name> <op:operator pos:line="15472" pos:column="31">*</op:operator> <name pos:line="15472" pos:column="33">This</name><op:operator pos:line="15472" pos:column="37">,</op:operator>
            <comment type="block" pos:line="15473" pos:column="13">/* [idldescattr] */</comment> <name pos:line="15473" pos:column="33">__RPC__in</name> struct <name pos:line="15473" pos:column="50">GUID</name> <op:operator pos:line="15473" pos:column="55">*</op:operator><name pos:line="15473" pos:column="56">pGUID</name><op:operator pos:line="15473" pos:column="61">,</op:operator>
            <comment type="block" pos:line="15474" pos:column="13">/* [idldescattr] */</comment> <name pos:line="15474" pos:column="33">signed</name> <name pos:line="15474" pos:column="40">long</name> <name pos:line="15474" pos:column="45">dispid</name><op:operator pos:line="15474" pos:column="51">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="15476" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15476" pos:column="34">HRESULT</name></type> ( <name pos:line="15476" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15476" pos:column="62">*</type:modifier><name pos:line="15476" pos:column="63">SetSuppressUI</name> )<parameter_list pos:line="15476" pos:column="78">( 
            <param><decl><type><name pos:line="15477" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15477" pos:column="31">*</type:modifier></type> <name pos:line="15477" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15478" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="15478" pos:column="33">BOOLEAN</name></type> <name pos:line="15478" pos:column="41">In</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15480" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="15480" pos:column="34">HRESULT</name></type> ( <name pos:line="15480" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="15480" pos:column="62">*</type:modifier><name pos:line="15480" pos:column="63">GetSuppressUI</name> )<parameter_list pos:line="15480" pos:column="78">( 
            <param><decl><type><name pos:line="15481" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15481" pos:column="31">*</type:modifier></type> <name pos:line="15481" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15482" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="15482" pos:column="33">__RPC__in</name> <name pos:line="15482" pos:column="43">BOOLEAN</name> <type:modifier pos:line="15482" pos:column="51">*</type:modifier></type><name pos:line="15482" pos:column="52">pOut</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15484" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="15484" pos:column="20">HRESULT</name></type> ( <name pos:line="15484" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="15484" pos:column="48">*</type:modifier><name pos:line="15484" pos:column="49">FireProjectsEvent_ItemAdded</name> )<parameter_list pos:line="15484" pos:column="78">( 
            <param><decl><type><name pos:line="15485" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15485" pos:column="31">*</type:modifier></type> <name pos:line="15485" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15486" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15486" pos:column="24">__RPC__in</name> <comment type="block" pos:line="15486" pos:column="34">/* external definition not present */</comment> <name pos:line="15486" pos:column="72">Project</name> <type:modifier pos:line="15486" pos:column="80">*</type:modifier></type><name pos:line="15486" pos:column="81">Project</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15488" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="15488" pos:column="20">HRESULT</name></type> ( <name pos:line="15488" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="15488" pos:column="48">*</type:modifier><name pos:line="15488" pos:column="49">FireProjectsEvent_ItemRemoved</name> )<parameter_list pos:line="15488" pos:column="80">( 
            <param><decl><type><name pos:line="15489" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15489" pos:column="31">*</type:modifier></type> <name pos:line="15489" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15490" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15490" pos:column="24">__RPC__in</name> <comment type="block" pos:line="15490" pos:column="34">/* external definition not present */</comment> <name pos:line="15490" pos:column="72">Project</name> <type:modifier pos:line="15490" pos:column="80">*</type:modifier></type><name pos:line="15490" pos:column="81">Project</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15492" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="15492" pos:column="20">HRESULT</name></type> ( <name pos:line="15492" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="15492" pos:column="48">*</type:modifier><name pos:line="15492" pos:column="49">FireProjectsEvent_ItemRenamed</name> )<parameter_list pos:line="15492" pos:column="80">( 
            <param><decl><type><name pos:line="15493" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15493" pos:column="31">*</type:modifier></type> <name pos:line="15493" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15494" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15494" pos:column="24">__RPC__in</name> <comment type="block" pos:line="15494" pos:column="34">/* external definition not present */</comment> <name pos:line="15494" pos:column="72">Project</name> <type:modifier pos:line="15494" pos:column="80">*</type:modifier></type><name pos:line="15494" pos:column="81">Project</name></decl></param>,
            <comment type="block" pos:line="15495" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15495" pos:column="24">__RPC__in</name> <name pos:line="15495" pos:column="34">BSTR</name></type> <name pos:line="15495" pos:column="39">OldName</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15497" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="15497" pos:column="20">HRESULT</name></type> ( <name pos:line="15497" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="15497" pos:column="48">*</type:modifier><name pos:line="15497" pos:column="49">FireProjectItemsEvent_ItemAdded</name> )<parameter_list pos:line="15497" pos:column="82">( 
            <param><decl><type><name pos:line="15498" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15498" pos:column="31">*</type:modifier></type> <name pos:line="15498" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15499" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15499" pos:column="24">__RPC__in</name> <comment type="block" pos:line="15499" pos:column="34">/* external definition not present */</comment> <name pos:line="15499" pos:column="72">ProjectItem</name> <type:modifier pos:line="15499" pos:column="84">*</type:modifier></type><name pos:line="15499" pos:column="85">ProjectItem</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15501" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="15501" pos:column="20">HRESULT</name></type> ( <name pos:line="15501" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="15501" pos:column="48">*</type:modifier><name pos:line="15501" pos:column="49">FireProjectItemsEvent_ItemRemoved</name> )<parameter_list pos:line="15501" pos:column="84">( 
            <param><decl><type><name pos:line="15502" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15502" pos:column="31">*</type:modifier></type> <name pos:line="15502" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15503" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15503" pos:column="24">__RPC__in</name> <comment type="block" pos:line="15503" pos:column="34">/* external definition not present */</comment> <name pos:line="15503" pos:column="72">ProjectItem</name> <type:modifier pos:line="15503" pos:column="84">*</type:modifier></type><name pos:line="15503" pos:column="85">ProjectItem</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15505" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="15505" pos:column="20">HRESULT</name></type> ( <name pos:line="15505" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="15505" pos:column="48">*</type:modifier><name pos:line="15505" pos:column="49">FireProjectItemsEvent_ItemRenamed</name> )<parameter_list pos:line="15505" pos:column="84">( 
            <param><decl><type><name pos:line="15506" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15506" pos:column="31">*</type:modifier></type> <name pos:line="15506" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15507" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15507" pos:column="24">__RPC__in</name> <comment type="block" pos:line="15507" pos:column="34">/* external definition not present */</comment> <name pos:line="15507" pos:column="72">ProjectItem</name> <type:modifier pos:line="15507" pos:column="84">*</type:modifier></type><name pos:line="15507" pos:column="85">ProjectItem</name></decl></param>,
            <comment type="block" pos:line="15508" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15508" pos:column="24">__RPC__in</name> <name pos:line="15508" pos:column="34">BSTR</name></type> <name pos:line="15508" pos:column="39">OldName</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15510" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="15510" pos:column="20">HRESULT</name></type> ( <name pos:line="15510" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="15510" pos:column="48">*</type:modifier><name pos:line="15510" pos:column="49">BuildUIHierarchyFromTree</name> )<parameter_list pos:line="15510" pos:column="75">( 
            <param><decl><type><name pos:line="15511" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15511" pos:column="31">*</type:modifier></type> <name pos:line="15511" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15512" pos:column="13">/* external definition not present */</comment> <param><decl><type><name pos:line="15512" pos:column="51">OLE_HANDLE</name></type> <name pos:line="15512" pos:column="62">hwnd</name></decl></param>,
            <param><decl><type><name pos:line="15513" pos:column="13">__RPC__in</name> <comment type="block" pos:line="15513" pos:column="23">/* external definition not present */</comment> <name pos:line="15513" pos:column="61">Window</name> <type:modifier pos:line="15513" pos:column="68">*</type:modifier></type><name pos:line="15513" pos:column="69">pParent</name></decl></param>,
            <comment type="block" pos:line="15514" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15514" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="15514" pos:column="54">/* external definition not present */</comment> <name pos:line="15514" pos:column="92">UIHierarchy</name> <type:modifier pos:line="15514" pos:column="104">*</type:modifier><type:modifier pos:line="15514" pos:column="105">*</type:modifier></type><name pos:line="15514" pos:column="106">ppUIHierarchy</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15516" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="15516" pos:column="20">HRESULT</name></type> ( <name pos:line="15516" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="15516" pos:column="48">*</type:modifier><name pos:line="15516" pos:column="49">FireCodeModelEvent</name> )<parameter_list pos:line="15516" pos:column="69">( 
            <param><decl><type><name pos:line="15517" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15517" pos:column="31">*</type:modifier></type> <name pos:line="15517" pos:column="33">This</name></decl></param>,
            <param><decl><type><name pos:line="15518" pos:column="13">DISPID</name></type> <name pos:line="15518" pos:column="20">dispid</name></decl></param>,
            <param><decl><type><name pos:line="15519" pos:column="13">__RPC__in</name> <comment type="block" pos:line="15519" pos:column="23">/* external definition not present */</comment> <name pos:line="15519" pos:column="61">CodeElement</name> <type:modifier pos:line="15519" pos:column="73">*</type:modifier></type><name pos:line="15519" pos:column="74">pElement</name></decl></param>,
            <param><decl><type><name pos:line="15520" pos:column="13">vsCMChangeKind</name></type> <name pos:line="15520" pos:column="28">changeKind</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15522" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="15522" pos:column="20">HRESULT</name></type> ( <name pos:line="15522" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="15522" pos:column="48">*</type:modifier><name pos:line="15522" pos:column="49">IsFireCodeModelEventNeeded</name> )<parameter_list pos:line="15522" pos:column="77">( 
            <param><decl><type><name pos:line="15523" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15523" pos:column="31">*</type:modifier></type> <name pos:line="15523" pos:column="33">This</name></decl></param>,
            <param><decl><type><name pos:line="15524" pos:column="13">__RPC__in</name> <name pos:line="15524" pos:column="23">VARIANT_BOOL</name> <type:modifier pos:line="15524" pos:column="36">*</type:modifier></type><name pos:line="15524" pos:column="37">vbNeeded</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15526" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="15526" pos:column="20">HRESULT</name></type> ( <name pos:line="15526" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="15526" pos:column="48">*</type:modifier><name pos:line="15526" pos:column="49">RunWizardFileEx</name> )<parameter_list pos:line="15526" pos:column="66">( 
            <param><decl><type><name pos:line="15527" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15527" pos:column="31">*</type:modifier></type> <name pos:line="15527" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="15528" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15528" pos:column="24">__RPC__in</name> <name pos:line="15528" pos:column="34">BSTR</name></type> <name pos:line="15528" pos:column="39">bstrWizFilename</name></decl></param>,
            <comment type="block" pos:line="15529" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15529" pos:column="24">long</name></type> <name pos:line="15529" pos:column="29">hwndOwner</name></decl></param>,
            <comment type="block" pos:line="15530" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15530" pos:column="24">__RPC__deref_in_opt</name> <name pos:line="15530" pos:column="44">SAFEARRAY</name> <type:modifier pos:line="15530" pos:column="54">*</type:modifier> <type:modifier pos:line="15530" pos:column="56">*</type:modifier></type><name pos:line="15530" pos:column="57">vContextParams</name></decl></param>,
            <comment type="block" pos:line="15531" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15531" pos:column="24">__RPC__deref_in_opt</name> <name pos:line="15531" pos:column="44">SAFEARRAY</name> <type:modifier pos:line="15531" pos:column="54">*</type:modifier> <type:modifier pos:line="15531" pos:column="56">*</type:modifier></type><name pos:line="15531" pos:column="57">vCustomParams</name></decl></param>,
            <comment type="block" pos:line="15532" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15532" pos:column="33">__RPC__out</name> <name pos:line="15532" pos:column="44">long</name> <type:modifier pos:line="15532" pos:column="49">*</type:modifier></type><name pos:line="15532" pos:column="50">pResult</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15534" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="15534" pos:column="20">HRESULT</name></type> ( <name pos:line="15534" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="15534" pos:column="48">*</type:modifier><name pos:line="15534" pos:column="49">FireCodeModelEvent3</name> )<parameter_list pos:line="15534" pos:column="70">( 
            <param><decl><type><name pos:line="15535" pos:column="13">IVsExtensibility2</name> <type:modifier pos:line="15535" pos:column="31">*</type:modifier></type> <name pos:line="15535" pos:column="33">This</name></decl></param>,
            <param><decl><type><name pos:line="15536" pos:column="13">DISPID</name></type> <name pos:line="15536" pos:column="20">dispid</name></decl></param>,
            <param><decl><type><name pos:line="15537" pos:column="13">__RPC__in_opt</name> <name pos:line="15537" pos:column="27">IDispatch</name> <type:modifier pos:line="15537" pos:column="37">*</type:modifier></type><name pos:line="15537" pos:column="38">pParent</name></decl></param>,
            <param><decl><type><name pos:line="15538" pos:column="13">__RPC__in</name> <comment type="block" pos:line="15538" pos:column="23">/* external definition not present */</comment> <name pos:line="15538" pos:column="61">CodeElement</name> <type:modifier pos:line="15538" pos:column="73">*</type:modifier></type><name pos:line="15538" pos:column="74">pElement</name></decl></param>,
            <param><decl><type><name pos:line="15539" pos:column="13">vsCMChangeKind</name></type> <name pos:line="15539" pos:column="28">changeKind</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="15541" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="15542" pos:column="7">IVsExtensibility2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="15544" pos:column="5">interface</name></type> <name pos:line="15544" pos:column="15">IVsExtensibility2</name>
    <argument_list pos:line="15545" pos:column="5">{
        <argument><expr><name pos:line="15546" pos:column="9">CONST_VTBL</name> struct <name pos:line="15546" pos:column="27">IVsExtensibility2Vtbl</name> <op:operator pos:line="15546" pos:column="49">*</op:operator><name pos:line="15546" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="15551" pos:column="1">#<cpp:directive pos:line="15551" pos:column="2">ifdef</cpp:directive> <name pos:line="15551" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="15554" pos:column="1">#<cpp:directive pos:line="15554" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15554" pos:column="9">IVsExtensibility2_QueryInterface</name><parameter_list pos:line="15554" pos:column="41">(<param><type><name pos:line="15554" pos:column="42">This</name></type></param>,<param><type><name pos:line="15554" pos:column="47">riid</name></type></param>,<param><type><name pos:line="15554" pos:column="52">ppvObj</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15555" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj) )</cpp:value></cpp:define> 

<cpp:define pos:line="15557" pos:column="1">#<cpp:directive pos:line="15557" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15557" pos:column="9">IVsExtensibility2_AddRef</name><parameter_list pos:line="15557" pos:column="33">(<param><type><name pos:line="15557" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15558" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="15560" pos:column="1">#<cpp:directive pos:line="15560" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15560" pos:column="9">IVsExtensibility2_Release</name><parameter_list pos:line="15560" pos:column="34">(<param><type><name pos:line="15560" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15561" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="15564" pos:column="1">#<cpp:directive pos:line="15564" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15564" pos:column="9">IVsExtensibility2_get_Properties</name><parameter_list pos:line="15564" pos:column="41">(<param><type><name pos:line="15564" pos:column="42">This</name></type></param>,<param><type><name pos:line="15564" pos:column="47">pParent</name></type></param>,<param><type><name pos:line="15564" pos:column="55">pdispPropObj</name></type></param>,<param><type><name pos:line="15564" pos:column="68">ppProperties</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15565" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Properties(This,pParent,pdispPropObj,ppProperties) )</cpp:value></cpp:define> 

<cpp:define pos:line="15567" pos:column="1">#<cpp:directive pos:line="15567" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15567" pos:column="9">IVsExtensibility2_RunWizardFile</name><parameter_list pos:line="15567" pos:column="40">(<param><type><name pos:line="15567" pos:column="41">This</name></type></param>,<param><type><name pos:line="15567" pos:column="46">bstrWizFilename</name></type></param>,<param><type><name pos:line="15567" pos:column="62">hwndOwner</name></type></param>,<param><type><name pos:line="15567" pos:column="72">vContextParams</name></type></param>,<param><type><name pos:line="15567" pos:column="87">pResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15568" pos:column="5">( (This)-&gt;lpVtbl -&gt; RunWizardFile(This,bstrWizFilename,hwndOwner,vContextParams,pResult) )</cpp:value></cpp:define> 

<cpp:define pos:line="15570" pos:column="1">#<cpp:directive pos:line="15570" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15570" pos:column="9">IVsExtensibility2_Get_TextBuffer</name><parameter_list pos:line="15570" pos:column="41">(<param><type><name pos:line="15570" pos:column="42">This</name></type></param>,<param><type><name pos:line="15570" pos:column="47">pVsTextStream</name></type></param>,<param><type><name pos:line="15570" pos:column="61">pParent</name></type></param>,<param><type><name pos:line="15570" pos:column="69">ppTextBuffer</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15571" pos:column="5">( (This)-&gt;lpVtbl -&gt; Get_TextBuffer(This,pVsTextStream,pParent,ppTextBuffer) )</cpp:value></cpp:define> 

<cpp:define pos:line="15573" pos:column="1">#<cpp:directive pos:line="15573" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15573" pos:column="9">IVsExtensibility2_EnterAutomationFunction</name><parameter_list pos:line="15573" pos:column="50">(<param><type><name pos:line="15573" pos:column="51">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15574" pos:column="5">( (This)-&gt;lpVtbl -&gt; EnterAutomationFunction(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="15576" pos:column="1">#<cpp:directive pos:line="15576" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15576" pos:column="9">IVsExtensibility2_ExitAutomationFunction</name><parameter_list pos:line="15576" pos:column="49">(<param><type><name pos:line="15576" pos:column="50">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15577" pos:column="5">( (This)-&gt;lpVtbl -&gt; ExitAutomationFunction(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="15579" pos:column="1">#<cpp:directive pos:line="15579" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15579" pos:column="9">IVsExtensibility2_IsInAutomationFunction</name><parameter_list pos:line="15579" pos:column="49">(<param><type><name pos:line="15579" pos:column="50">This</name></type></param>,<param><type><name pos:line="15579" pos:column="55">pfInAutoFunc</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15580" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsInAutomationFunction(This,pfInAutoFunc) )</cpp:value></cpp:define> 

<cpp:define pos:line="15582" pos:column="1">#<cpp:directive pos:line="15582" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15582" pos:column="9">IVsExtensibility2_GetUserControl</name><parameter_list pos:line="15582" pos:column="41">(<param><type><name pos:line="15582" pos:column="42">This</name></type></param>,<param><type><name pos:line="15582" pos:column="47">fUserControl</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15583" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetUserControl(This,fUserControl) )</cpp:value></cpp:define> 

<cpp:define pos:line="15585" pos:column="1">#<cpp:directive pos:line="15585" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15585" pos:column="9">IVsExtensibility2_SetUserControl</name><parameter_list pos:line="15585" pos:column="41">(<param><type><name pos:line="15585" pos:column="42">This</name></type></param>,<param><type><name pos:line="15585" pos:column="47">fUserControl</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15586" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetUserControl(This,fUserControl) )</cpp:value></cpp:define> 

<cpp:define pos:line="15588" pos:column="1">#<cpp:directive pos:line="15588" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15588" pos:column="9">IVsExtensibility2_SetUserControlUnlatched</name><parameter_list pos:line="15588" pos:column="50">(<param><type><name pos:line="15588" pos:column="51">This</name></type></param>,<param><type><name pos:line="15588" pos:column="56">fUserControl</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15589" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetUserControlUnlatched(This,fUserControl) )</cpp:value></cpp:define> 

<cpp:define pos:line="15591" pos:column="1">#<cpp:directive pos:line="15591" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15591" pos:column="9">IVsExtensibility2_LockServer</name><parameter_list pos:line="15591" pos:column="37">(<param><type><name pos:line="15591" pos:column="38">This</name></type></param>,<param><type><name pos:line="15591" pos:column="43">__MIDL__IVsExtensibility0000</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15592" pos:column="5">( (This)-&gt;lpVtbl -&gt; LockServer(This,__MIDL__IVsExtensibility0000) )</cpp:value></cpp:define> 

<cpp:define pos:line="15594" pos:column="1">#<cpp:directive pos:line="15594" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15594" pos:column="9">IVsExtensibility2_GetLockCount</name><parameter_list pos:line="15594" pos:column="39">(<param><type><name pos:line="15594" pos:column="40">This</name></type></param>,<param><type><name pos:line="15594" pos:column="45">pCount</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15595" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetLockCount(This,pCount) )</cpp:value></cpp:define> 

<cpp:define pos:line="15597" pos:column="1">#<cpp:directive pos:line="15597" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15597" pos:column="9">IVsExtensibility2_TestForShutdown</name><parameter_list pos:line="15597" pos:column="42">(<param><type><name pos:line="15597" pos:column="43">This</name></type></param>,<param><type><name pos:line="15597" pos:column="48">fShutdown</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15598" pos:column="5">( (This)-&gt;lpVtbl -&gt; TestForShutdown(This,fShutdown) )</cpp:value></cpp:define> 

<cpp:define pos:line="15600" pos:column="1">#<cpp:directive pos:line="15600" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15600" pos:column="9">IVsExtensibility2_GetGlobalsObject</name><parameter_list pos:line="15600" pos:column="43">(<param><type><name pos:line="15600" pos:column="44">This</name></type></param>,<param><type><name pos:line="15600" pos:column="49">ExtractFrom</name></type></param>,<param><type><name pos:line="15600" pos:column="61">ppGlobals</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15601" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetGlobalsObject(This,ExtractFrom,ppGlobals) )</cpp:value></cpp:define> 

<cpp:define pos:line="15603" pos:column="1">#<cpp:directive pos:line="15603" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15603" pos:column="9">IVsExtensibility2_GetConfigMgr</name><parameter_list pos:line="15603" pos:column="39">(<param><type><name pos:line="15603" pos:column="40">This</name></type></param>,<param><type><name pos:line="15603" pos:column="45">pIVsProject</name></type></param>,<param><type><name pos:line="15603" pos:column="57">itemid</name></type></param>,<param><type><name pos:line="15603" pos:column="64">ppCfgMgr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15604" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetConfigMgr(This,pIVsProject,itemid,ppCfgMgr) )</cpp:value></cpp:define> 

<cpp:define pos:line="15606" pos:column="1">#<cpp:directive pos:line="15606" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15606" pos:column="9">IVsExtensibility2_FireMacroReset</name><parameter_list pos:line="15606" pos:column="41">(<param><type><name pos:line="15606" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15607" pos:column="5">( (This)-&gt;lpVtbl -&gt; FireMacroReset(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="15609" pos:column="1">#<cpp:directive pos:line="15609" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15609" pos:column="9">IVsExtensibility2_GetDocumentFromDocCookie</name><parameter_list pos:line="15609" pos:column="51">(<param><type><name pos:line="15609" pos:column="52">This</name></type></param>,<param><type><name pos:line="15609" pos:column="57">lDocCookie</name></type></param>,<param><type><name pos:line="15609" pos:column="68">ppDoc</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15610" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetDocumentFromDocCookie(This,lDocCookie,ppDoc) )</cpp:value></cpp:define> 

<cpp:define pos:line="15612" pos:column="1">#<cpp:directive pos:line="15612" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15612" pos:column="9">IVsExtensibility2_IsMethodDisabled</name><parameter_list pos:line="15612" pos:column="43">(<param><type><name pos:line="15612" pos:column="44">This</name></type></param>,<param><type><name pos:line="15612" pos:column="49">pGUID</name></type></param>,<param><type><name pos:line="15612" pos:column="55">dispid</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15613" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsMethodDisabled(This,pGUID,dispid) )</cpp:value></cpp:define> 

<cpp:define pos:line="15615" pos:column="1">#<cpp:directive pos:line="15615" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15615" pos:column="9">IVsExtensibility2_SetSuppressUI</name><parameter_list pos:line="15615" pos:column="40">(<param><type><name pos:line="15615" pos:column="41">This</name></type></param>,<param><type><name pos:line="15615" pos:column="46">In</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15616" pos:column="5">( (This)-&gt;lpVtbl -&gt; SetSuppressUI(This,In) )</cpp:value></cpp:define> 

<cpp:define pos:line="15618" pos:column="1">#<cpp:directive pos:line="15618" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15618" pos:column="9">IVsExtensibility2_GetSuppressUI</name><parameter_list pos:line="15618" pos:column="40">(<param><type><name pos:line="15618" pos:column="41">This</name></type></param>,<param><type><name pos:line="15618" pos:column="46">pOut</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15619" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetSuppressUI(This,pOut) )</cpp:value></cpp:define> 


<cpp:define pos:line="15622" pos:column="1">#<cpp:directive pos:line="15622" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15622" pos:column="9">IVsExtensibility2_FireProjectsEvent_ItemAdded</name><parameter_list pos:line="15622" pos:column="54">(<param><type><name pos:line="15622" pos:column="55">This</name></type></param>,<param><type><name pos:line="15622" pos:column="60">Project</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15623" pos:column="5">( (This)-&gt;lpVtbl -&gt; FireProjectsEvent_ItemAdded(This,Project) )</cpp:value></cpp:define> 

<cpp:define pos:line="15625" pos:column="1">#<cpp:directive pos:line="15625" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15625" pos:column="9">IVsExtensibility2_FireProjectsEvent_ItemRemoved</name><parameter_list pos:line="15625" pos:column="56">(<param><type><name pos:line="15625" pos:column="57">This</name></type></param>,<param><type><name pos:line="15625" pos:column="62">Project</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15626" pos:column="5">( (This)-&gt;lpVtbl -&gt; FireProjectsEvent_ItemRemoved(This,Project) )</cpp:value></cpp:define> 

<cpp:define pos:line="15628" pos:column="1">#<cpp:directive pos:line="15628" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15628" pos:column="9">IVsExtensibility2_FireProjectsEvent_ItemRenamed</name><parameter_list pos:line="15628" pos:column="56">(<param><type><name pos:line="15628" pos:column="57">This</name></type></param>,<param><type><name pos:line="15628" pos:column="62">Project</name></type></param>,<param><type><name pos:line="15628" pos:column="70">OldName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15629" pos:column="5">( (This)-&gt;lpVtbl -&gt; FireProjectsEvent_ItemRenamed(This,Project,OldName) )</cpp:value></cpp:define> 

<cpp:define pos:line="15631" pos:column="1">#<cpp:directive pos:line="15631" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15631" pos:column="9">IVsExtensibility2_FireProjectItemsEvent_ItemAdded</name><parameter_list pos:line="15631" pos:column="58">(<param><type><name pos:line="15631" pos:column="59">This</name></type></param>,<param><type><name pos:line="15631" pos:column="64">ProjectItem</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15632" pos:column="5">( (This)-&gt;lpVtbl -&gt; FireProjectItemsEvent_ItemAdded(This,ProjectItem) )</cpp:value></cpp:define> 

<cpp:define pos:line="15634" pos:column="1">#<cpp:directive pos:line="15634" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15634" pos:column="9">IVsExtensibility2_FireProjectItemsEvent_ItemRemoved</name><parameter_list pos:line="15634" pos:column="60">(<param><type><name pos:line="15634" pos:column="61">This</name></type></param>,<param><type><name pos:line="15634" pos:column="66">ProjectItem</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15635" pos:column="5">( (This)-&gt;lpVtbl -&gt; FireProjectItemsEvent_ItemRemoved(This,ProjectItem) )</cpp:value></cpp:define> 

<cpp:define pos:line="15637" pos:column="1">#<cpp:directive pos:line="15637" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15637" pos:column="9">IVsExtensibility2_FireProjectItemsEvent_ItemRenamed</name><parameter_list pos:line="15637" pos:column="60">(<param><type><name pos:line="15637" pos:column="61">This</name></type></param>,<param><type><name pos:line="15637" pos:column="66">ProjectItem</name></type></param>,<param><type><name pos:line="15637" pos:column="78">OldName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15638" pos:column="5">( (This)-&gt;lpVtbl -&gt; FireProjectItemsEvent_ItemRenamed(This,ProjectItem,OldName) )</cpp:value></cpp:define> 

<cpp:define pos:line="15640" pos:column="1">#<cpp:directive pos:line="15640" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15640" pos:column="9">IVsExtensibility2_BuildUIHierarchyFromTree</name><parameter_list pos:line="15640" pos:column="51">(<param><type><name pos:line="15640" pos:column="52">This</name></type></param>,<param><type><name pos:line="15640" pos:column="57">hwnd</name></type></param>,<param><type><name pos:line="15640" pos:column="62">pParent</name></type></param>,<param><type><name pos:line="15640" pos:column="70">ppUIHierarchy</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15641" pos:column="5">( (This)-&gt;lpVtbl -&gt; BuildUIHierarchyFromTree(This,hwnd,pParent,ppUIHierarchy) )</cpp:value></cpp:define> 

<cpp:define pos:line="15643" pos:column="1">#<cpp:directive pos:line="15643" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15643" pos:column="9">IVsExtensibility2_FireCodeModelEvent</name><parameter_list pos:line="15643" pos:column="45">(<param><type><name pos:line="15643" pos:column="46">This</name></type></param>,<param><type><name pos:line="15643" pos:column="51">dispid</name></type></param>,<param><type><name pos:line="15643" pos:column="58">pElement</name></type></param>,<param><type><name pos:line="15643" pos:column="67">changeKind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15644" pos:column="5">( (This)-&gt;lpVtbl -&gt; FireCodeModelEvent(This,dispid,pElement,changeKind) )</cpp:value></cpp:define> 

<cpp:define pos:line="15646" pos:column="1">#<cpp:directive pos:line="15646" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15646" pos:column="9">IVsExtensibility2_IsFireCodeModelEventNeeded</name><parameter_list pos:line="15646" pos:column="53">(<param><type><name pos:line="15646" pos:column="54">This</name></type></param>,<param><type><name pos:line="15646" pos:column="59">vbNeeded</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15647" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsFireCodeModelEventNeeded(This,vbNeeded) )</cpp:value></cpp:define> 

<cpp:define pos:line="15649" pos:column="1">#<cpp:directive pos:line="15649" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15649" pos:column="9">IVsExtensibility2_RunWizardFileEx</name><parameter_list pos:line="15649" pos:column="42">(<param><type><name pos:line="15649" pos:column="43">This</name></type></param>,<param><type><name pos:line="15649" pos:column="48">bstrWizFilename</name></type></param>,<param><type><name pos:line="15649" pos:column="64">hwndOwner</name></type></param>,<param><type><name pos:line="15649" pos:column="74">vContextParams</name></type></param>,<param><type><name pos:line="15649" pos:column="89">vCustomParams</name></type></param>,<param><type><name pos:line="15649" pos:column="103">pResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15650" pos:column="5">( (This)-&gt;lpVtbl -&gt; RunWizardFileEx(This,bstrWizFilename,hwndOwner,vContextParams,vCustomParams,pResult) )</cpp:value></cpp:define> 

<cpp:define pos:line="15652" pos:column="1">#<cpp:directive pos:line="15652" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15652" pos:column="9">IVsExtensibility2_FireCodeModelEvent3</name><parameter_list pos:line="15652" pos:column="46">(<param><type><name pos:line="15652" pos:column="47">This</name></type></param>,<param><type><name pos:line="15652" pos:column="52">dispid</name></type></param>,<param><type><name pos:line="15652" pos:column="59">pParent</name></type></param>,<param><type><name pos:line="15652" pos:column="67">pElement</name></type></param>,<param><type><name pos:line="15652" pos:column="76">changeKind</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15653" pos:column="5">( (This)-&gt;lpVtbl -&gt; FireCodeModelEvent3(This,dispid,pParent,pElement,changeKind) )</cpp:value></cpp:define> 

<cpp:endif pos:line="15655" pos:column="1">#<cpp:directive pos:line="15655" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="15655" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="15658" pos:column="1">#<cpp:directive pos:line="15658" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15658" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="15663" pos:column="1">#<cpp:directive pos:line="15663" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15663" pos:column="9">/* __IVsExtensibility2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="15666" pos:column="1">#<cpp:directive pos:line="15666" pos:column="2">ifndef</cpp:directive> <name pos:line="15666" pos:column="9">__IInternalExtenderProvider_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="15667" pos:column="1">#<cpp:directive pos:line="15667" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15667" pos:column="9">__IInternalExtenderProvider_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="15669" pos:column="1">/* interface IInternalExtenderProvider */</comment>
<comment type="block" pos:line="15670" pos:column="1">/* [uuid][restricted][hidden][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="15673" pos:column="1">EXTERN_C</name> <specifier pos:line="15673" pos:column="10">const</specifier> <name pos:line="15673" pos:column="16">IID</name></type> <name pos:line="15673" pos:column="20">IID_IInternalExtenderProvider</name></decl>;</decl_stmt>

<cpp:if pos:line="15675" pos:column="1">#<cpp:directive pos:line="15675" pos:column="2">if</cpp:directive> <expr><call><name pos:line="15675" pos:column="5">defined</name><argument_list pos:line="15675" pos:column="12">(<argument><expr><name pos:line="15675" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="15675" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="15675" pos:column="29">!</op:operator><call><name pos:line="15675" pos:column="30">defined</name><argument_list pos:line="15675" pos:column="37">(<argument><expr><name pos:line="15675" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="15677" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="15677" pos:column="19">(<argument pos:line="15677" pos:column="20">"B85F43C4-C765-4984-AE3D-695E8CD8E992"</argument>)</argument_list></macro>
    <label><name pos:line="15678" pos:column="5">IInternalExtenderProvider</name> :</label> <expr_stmt><expr pos:line="15678" pos:column="33">public <name pos:line="15678" pos:column="40">IDispatch</name>
    <block pos:line="15679" pos:column="5">{
    <expr pos:line="15680" pos:column="5">public<op:operator pos:line="15680" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="15681" pos:column="17">/* [id] */</comment> <name pos:line="15681" pos:column="28">HRESULT</name> <name pos:line="15681" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="15681" pos:column="54">GetExtenderNames</name><argument_list pos:line="15681" pos:column="70">( 
            <comment type="block" pos:line="15682" pos:column="13">/* [in] */</comment> <argument pos:line="15682" pos:column="24">__RPC__in BSTR ExtenderCATID</argument>,
            <comment type="block" pos:line="15683" pos:column="13">/* [in] */</comment> <argument pos:line="15683" pos:column="24">__RPC__in_opt IUnknown *ExtendeeObject</argument>,
            <comment type="block" pos:line="15684" pos:column="13">/* [retval][out] */</comment> <argument pos:line="15684" pos:column="33">__RPC__out VARIANT *ExtenderNames</argument>)</argument_list></macro> <op:operator pos:line="15684" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="15684" pos:column="70">0</lit:literal></expr>;
        
        <expr pos:line="15686" pos:column="9">virtual <comment type="block" pos:line="15686" pos:column="17">/* [id] */</comment> <name pos:line="15686" pos:column="28">HRESULT</name> <name pos:line="15686" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="15686" pos:column="54">GetExtender</name><argument_list pos:line="15686" pos:column="65">( 
            <comment type="block" pos:line="15687" pos:column="13">/* [in] */</comment> <argument pos:line="15687" pos:column="24">__RPC__in BSTR ExtenderCATID</argument>,
            <comment type="block" pos:line="15688" pos:column="13">/* [in] */</comment> <argument pos:line="15688" pos:column="24">__RPC__in BSTR ExtenderName</argument>,
            <comment type="block" pos:line="15689" pos:column="13">/* [in] */</comment> <argument pos:line="15689" pos:column="24">__RPC__in_opt IDispatch *ExtendeeObject</argument>,
            <comment type="block" pos:line="15690" pos:column="13">/* [in] */</comment> <argument pos:line="15690" pos:column="24">__RPC__in <comment type="block" pos:line="15690" pos:column="34">/* external definition not present */</comment> IExtenderSite *ExtenderSite</argument>,
            <comment type="block" pos:line="15691" pos:column="13">/* [in] */</comment> <argument pos:line="15691" pos:column="24">long Cookie</argument>,
            <comment type="block" pos:line="15692" pos:column="13">/* [retval][out] */</comment> <argument pos:line="15692" pos:column="33">__RPC__deref_out_opt IDispatch **Extender</argument>)</argument_list></macro> <op:operator pos:line="15692" pos:column="76">=</op:operator> <lit:literal type="number" pos:line="15692" pos:column="78">0</lit:literal></expr>;
        
        <expr pos:line="15694" pos:column="9">virtual <comment type="block" pos:line="15694" pos:column="17">/* [id] */</comment> <name pos:line="15694" pos:column="28">HRESULT</name> <name pos:line="15694" pos:column="36">STDMETHODCALLTYPE</name> <macro><name pos:line="15694" pos:column="54">CanExtend</name><argument_list pos:line="15694" pos:column="63">( 
            <comment type="block" pos:line="15695" pos:column="13">/* [in] */</comment> <argument pos:line="15695" pos:column="24">__RPC__in BSTR ExtenderCATID</argument>,
            <comment type="block" pos:line="15696" pos:column="13">/* [in] */</comment> <argument pos:line="15696" pos:column="24">__RPC__in BSTR ExtenderName</argument>,
            <comment type="block" pos:line="15697" pos:column="13">/* [in] */</comment> <argument pos:line="15697" pos:column="24">__RPC__in_opt IDispatch *ExtendeeObject</argument>,
            <comment type="block" pos:line="15698" pos:column="13">/* [retval][out] */</comment> <argument pos:line="15698" pos:column="33">__RPC__out VARIANT_BOOL *fRetval</argument>)</argument_list></macro> <op:operator pos:line="15698" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="15698" pos:column="69">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="15702" pos:column="1">#<cpp:directive pos:line="15702" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="15702" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="15704" pos:column="5">typedef <type><struct pos:line="15704" pos:column="13">struct <name pos:line="15704" pos:column="20">IInternalExtenderProviderVtbl</name>
    <block pos:line="15705" pos:column="5">{<public type="default" pos:line="15705" pos:column="6">
        <function_decl><type><name pos:line="15706" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="15708" pos:column="9">HRESULT</name></type> ( <name pos:line="15708" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15708" pos:column="37">*</type:modifier><name pos:line="15708" pos:column="38">QueryInterface</name> )<parameter_list pos:line="15708" pos:column="54">( 
            <param><decl><type><name pos:line="15709" pos:column="13">IInternalExtenderProvider</name> <type:modifier pos:line="15709" pos:column="39">*</type:modifier></type> <name pos:line="15709" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="15710" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15710" pos:column="24">__RPC__in</name> <name pos:line="15710" pos:column="34">REFIID</name></type> <name pos:line="15710" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="15711" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="15712" pos:column="13">__RPC__deref_out</name>  <name pos:line="15712" pos:column="31">void</name> <type:modifier pos:line="15712" pos:column="36">*</type:modifier><type:modifier pos:line="15712" pos:column="37">*</type:modifier></type><name pos:line="15712" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15714" pos:column="9">ULONG</name></type> ( <name pos:line="15714" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15714" pos:column="35">*</type:modifier><name pos:line="15714" pos:column="36">AddRef</name> )<parameter_list pos:line="15714" pos:column="44">( 
            <param><decl><type><name pos:line="15715" pos:column="13">IInternalExtenderProvider</name> <type:modifier pos:line="15715" pos:column="39">*</type:modifier></type> <name pos:line="15715" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15717" pos:column="9">ULONG</name></type> ( <name pos:line="15717" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="15717" pos:column="35">*</type:modifier><name pos:line="15717" pos:column="36">Release</name> )<parameter_list pos:line="15717" pos:column="45">( 
            <param><decl><type><name pos:line="15718" pos:column="13">IInternalExtenderProvider</name> <type:modifier pos:line="15718" pos:column="39">*</type:modifier></type> <name pos:line="15718" pos:column="41">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15720" pos:column="9">HRESULT</name></type> ( <name pos:line="15720" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15720" pos:column="37">*</type:modifier><name pos:line="15720" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="15720" pos:column="56">( 
            <param><decl><type><name pos:line="15721" pos:column="13">IInternalExtenderProvider</name> <type:modifier pos:line="15721" pos:column="39">*</type:modifier></type> <name pos:line="15721" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="15722" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15722" pos:column="25">__RPC__out</name> <name pos:line="15722" pos:column="36">UINT</name> <type:modifier pos:line="15722" pos:column="41">*</type:modifier></type><name pos:line="15722" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="15724" pos:column="9">HRESULT</name></type> ( <name pos:line="15724" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="15724" pos:column="37">*</type:modifier><name pos:line="15724" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="15724" pos:column="51">( 
            <param><decl><type><name pos:line="15725" pos:column="13">IInternalExtenderProvider</name> <type:modifier pos:line="15725" pos:column="39">*</type:modifier></type> <name pos:line="15725" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="15726" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15726" pos:column="24">UINT</name></type> <name pos:line="15726" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="15727" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15727" pos:column="24">LCID</name></type> <name pos:line="15727" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="15728" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15728" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="15728" pos:column="46">ITypeInfo</name> <type:modifier pos:line="15728" pos:column="56">*</type:modifier><type:modifier pos:line="15728" pos:column="57">*</type:modifier></type><name pos:line="15728" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="15730" pos:column="9">HRESULT</name> <argument_list pos:line="15730" pos:column="17">( <argument pos:line="15730" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="15730" pos:column="53">(</op:operator> 
            <name pos:line="15731" pos:column="13">IInternalExtenderProvider</name> <op:operator pos:line="15731" pos:column="39">*</op:operator> <name pos:line="15731" pos:column="41">This</name><op:operator pos:line="15731" pos:column="45">,</op:operator>
            <comment type="block" pos:line="15732" pos:column="13">/* [in] */</comment> <name pos:line="15732" pos:column="24">__RPC__in</name> <name pos:line="15732" pos:column="34">REFIID</name> <name pos:line="15732" pos:column="41">riid</name><op:operator pos:line="15732" pos:column="45">,</op:operator>
            <comment type="block" pos:line="15733" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="15733" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="15733" pos:column="54">(<argument pos:line="15733" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="15733" pos:column="63">LPOLESTR</name> <op:operator pos:line="15733" pos:column="72">*</op:operator><name pos:line="15733" pos:column="73">rgszNames</name><op:operator pos:line="15733" pos:column="82">,</op:operator>
            <comment type="block" pos:line="15734" pos:column="13">/* [range][in] */</comment> <name pos:line="15734" pos:column="31">UINT</name> <name pos:line="15734" pos:column="36">cNames</name><op:operator pos:line="15734" pos:column="42">,</op:operator>
            <comment type="block" pos:line="15735" pos:column="13">/* [in] */</comment> <name pos:line="15735" pos:column="24">LCID</name> <name pos:line="15735" pos:column="29">lcid</name><op:operator pos:line="15735" pos:column="33">,</op:operator>
            <comment type="block" pos:line="15736" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="15736" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="15736" pos:column="56">(<argument pos:line="15736" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="15736" pos:column="65">DISPID</name> <op:operator pos:line="15736" pos:column="72">*</op:operator><name pos:line="15736" pos:column="73">rgDispId</name><op:operator pos:line="15736" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="15738" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="15738" pos:column="23">HRESULT</name></type> ( <name pos:line="15738" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="15738" pos:column="51">*</type:modifier><name pos:line="15738" pos:column="52">Invoke</name> )<parameter_list pos:line="15738" pos:column="60">( 
            <param><decl><type><name pos:line="15739" pos:column="13">IInternalExtenderProvider</name> <type:modifier pos:line="15739" pos:column="39">*</type:modifier></type> <name pos:line="15739" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="15740" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15740" pos:column="24">DISPID</name></type> <name pos:line="15740" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="15741" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15741" pos:column="24">REFIID</name></type> <name pos:line="15741" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="15742" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15742" pos:column="24">LCID</name></type> <name pos:line="15742" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="15743" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15743" pos:column="24">WORD</name></type> <name pos:line="15743" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="15744" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="15744" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="15744" pos:column="40">*</type:modifier></type><name pos:line="15744" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="15745" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15745" pos:column="25">VARIANT</name> <type:modifier pos:line="15745" pos:column="33">*</type:modifier></type><name pos:line="15745" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="15746" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15746" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="15746" pos:column="35">*</type:modifier></type><name pos:line="15746" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="15747" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="15747" pos:column="25">UINT</name> <type:modifier pos:line="15747" pos:column="30">*</type:modifier></type><name pos:line="15747" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15749" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="15749" pos:column="20">HRESULT</name></type> ( <name pos:line="15749" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="15749" pos:column="48">*</type:modifier><name pos:line="15749" pos:column="49">GetExtenderNames</name> )<parameter_list pos:line="15749" pos:column="67">( 
            <param><decl><type><name pos:line="15750" pos:column="13">IInternalExtenderProvider</name> <type:modifier pos:line="15750" pos:column="39">*</type:modifier></type> <name pos:line="15750" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="15751" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15751" pos:column="24">__RPC__in</name> <name pos:line="15751" pos:column="34">BSTR</name></type> <name pos:line="15751" pos:column="39">ExtenderCATID</name></decl></param>,
            <comment type="block" pos:line="15752" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15752" pos:column="24">__RPC__in_opt</name> <name pos:line="15752" pos:column="38">IUnknown</name> <type:modifier pos:line="15752" pos:column="47">*</type:modifier></type><name pos:line="15752" pos:column="48">ExtendeeObject</name></decl></param>,
            <comment type="block" pos:line="15753" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15753" pos:column="33">__RPC__out</name> <name pos:line="15753" pos:column="44">VARIANT</name> <type:modifier pos:line="15753" pos:column="52">*</type:modifier></type><name pos:line="15753" pos:column="53">ExtenderNames</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15755" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="15755" pos:column="20">HRESULT</name></type> ( <name pos:line="15755" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="15755" pos:column="48">*</type:modifier><name pos:line="15755" pos:column="49">GetExtender</name> )<parameter_list pos:line="15755" pos:column="62">( 
            <param><decl><type><name pos:line="15756" pos:column="13">IInternalExtenderProvider</name> <type:modifier pos:line="15756" pos:column="39">*</type:modifier></type> <name pos:line="15756" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="15757" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15757" pos:column="24">__RPC__in</name> <name pos:line="15757" pos:column="34">BSTR</name></type> <name pos:line="15757" pos:column="39">ExtenderCATID</name></decl></param>,
            <comment type="block" pos:line="15758" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15758" pos:column="24">__RPC__in</name> <name pos:line="15758" pos:column="34">BSTR</name></type> <name pos:line="15758" pos:column="39">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="15759" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15759" pos:column="24">__RPC__in_opt</name> <name pos:line="15759" pos:column="38">IDispatch</name> <type:modifier pos:line="15759" pos:column="48">*</type:modifier></type><name pos:line="15759" pos:column="49">ExtendeeObject</name></decl></param>,
            <comment type="block" pos:line="15760" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15760" pos:column="24">__RPC__in</name> <comment type="block" pos:line="15760" pos:column="34">/* external definition not present */</comment> <name pos:line="15760" pos:column="72">IExtenderSite</name> <type:modifier pos:line="15760" pos:column="86">*</type:modifier></type><name pos:line="15760" pos:column="87">ExtenderSite</name></decl></param>,
            <comment type="block" pos:line="15761" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15761" pos:column="24">long</name></type> <name pos:line="15761" pos:column="29">Cookie</name></decl></param>,
            <comment type="block" pos:line="15762" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15762" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="15762" pos:column="54">IDispatch</name> <type:modifier pos:line="15762" pos:column="64">*</type:modifier><type:modifier pos:line="15762" pos:column="65">*</type:modifier></type><name pos:line="15762" pos:column="66">Extender</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15764" pos:column="9">/* [id] */</comment> <function_decl><type><name pos:line="15764" pos:column="20">HRESULT</name></type> ( <name pos:line="15764" pos:column="30">STDMETHODCALLTYPE</name> <type:modifier pos:line="15764" pos:column="48">*</type:modifier><name pos:line="15764" pos:column="49">CanExtend</name> )<parameter_list pos:line="15764" pos:column="60">( 
            <param><decl><type><name pos:line="15765" pos:column="13">IInternalExtenderProvider</name> <type:modifier pos:line="15765" pos:column="39">*</type:modifier></type> <name pos:line="15765" pos:column="41">This</name></decl></param>,
            <comment type="block" pos:line="15766" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15766" pos:column="24">__RPC__in</name> <name pos:line="15766" pos:column="34">BSTR</name></type> <name pos:line="15766" pos:column="39">ExtenderCATID</name></decl></param>,
            <comment type="block" pos:line="15767" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15767" pos:column="24">__RPC__in</name> <name pos:line="15767" pos:column="34">BSTR</name></type> <name pos:line="15767" pos:column="39">ExtenderName</name></decl></param>,
            <comment type="block" pos:line="15768" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="15768" pos:column="24">__RPC__in_opt</name> <name pos:line="15768" pos:column="38">IDispatch</name> <type:modifier pos:line="15768" pos:column="48">*</type:modifier></type><name pos:line="15768" pos:column="49">ExtendeeObject</name></decl></param>,
            <comment type="block" pos:line="15769" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15769" pos:column="33">__RPC__out</name> <name pos:line="15769" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="15769" pos:column="57">*</type:modifier></type><name pos:line="15769" pos:column="58">fRetval</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="15771" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="15772" pos:column="7">IInternalExtenderProviderVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="15774" pos:column="5">interface</name></type> <name pos:line="15774" pos:column="15">IInternalExtenderProvider</name>
    <argument_list pos:line="15775" pos:column="5">{
        <argument><expr><name pos:line="15776" pos:column="9">CONST_VTBL</name> struct <name pos:line="15776" pos:column="27">IInternalExtenderProviderVtbl</name> <op:operator pos:line="15776" pos:column="57">*</op:operator><name pos:line="15776" pos:column="58">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="15781" pos:column="1">#<cpp:directive pos:line="15781" pos:column="2">ifdef</cpp:directive> <name pos:line="15781" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="15784" pos:column="1">#<cpp:directive pos:line="15784" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15784" pos:column="9">IInternalExtenderProvider_QueryInterface</name><parameter_list pos:line="15784" pos:column="49">(<param><type><name pos:line="15784" pos:column="50">This</name></type></param>,<param><type><name pos:line="15784" pos:column="55">riid</name></type></param>,<param><type><name pos:line="15784" pos:column="60">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15785" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="15787" pos:column="1">#<cpp:directive pos:line="15787" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15787" pos:column="9">IInternalExtenderProvider_AddRef</name><parameter_list pos:line="15787" pos:column="41">(<param><type><name pos:line="15787" pos:column="42">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15788" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="15790" pos:column="1">#<cpp:directive pos:line="15790" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15790" pos:column="9">IInternalExtenderProvider_Release</name><parameter_list pos:line="15790" pos:column="42">(<param><type><name pos:line="15790" pos:column="43">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15791" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="15794" pos:column="1">#<cpp:directive pos:line="15794" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15794" pos:column="9">IInternalExtenderProvider_GetTypeInfoCount</name><parameter_list pos:line="15794" pos:column="51">(<param><type><name pos:line="15794" pos:column="52">This</name></type></param>,<param><type><name pos:line="15794" pos:column="57">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15795" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="15797" pos:column="1">#<cpp:directive pos:line="15797" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15797" pos:column="9">IInternalExtenderProvider_GetTypeInfo</name><parameter_list pos:line="15797" pos:column="46">(<param><type><name pos:line="15797" pos:column="47">This</name></type></param>,<param><type><name pos:line="15797" pos:column="52">iTInfo</name></type></param>,<param><type><name pos:line="15797" pos:column="59">lcid</name></type></param>,<param><type><name pos:line="15797" pos:column="64">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15798" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="15800" pos:column="1">#<cpp:directive pos:line="15800" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15800" pos:column="9">IInternalExtenderProvider_GetIDsOfNames</name><parameter_list pos:line="15800" pos:column="48">(<param><type><name pos:line="15800" pos:column="49">This</name></type></param>,<param><type><name pos:line="15800" pos:column="54">riid</name></type></param>,<param><type><name pos:line="15800" pos:column="59">rgszNames</name></type></param>,<param><type><name pos:line="15800" pos:column="69">cNames</name></type></param>,<param><type><name pos:line="15800" pos:column="76">lcid</name></type></param>,<param><type><name pos:line="15800" pos:column="81">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15801" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="15803" pos:column="1">#<cpp:directive pos:line="15803" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15803" pos:column="9">IInternalExtenderProvider_Invoke</name><parameter_list pos:line="15803" pos:column="41">(<param><type><name pos:line="15803" pos:column="42">This</name></type></param>,<param><type><name pos:line="15803" pos:column="47">dispIdMember</name></type></param>,<param><type><name pos:line="15803" pos:column="60">riid</name></type></param>,<param><type><name pos:line="15803" pos:column="65">lcid</name></type></param>,<param><type><name pos:line="15803" pos:column="70">wFlags</name></type></param>,<param><type><name pos:line="15803" pos:column="77">pDispParams</name></type></param>,<param><type><name pos:line="15803" pos:column="89">pVarResult</name></type></param>,<param><type><name pos:line="15803" pos:column="100">pExcepInfo</name></type></param>,<param><type><name pos:line="15803" pos:column="111">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15804" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="15807" pos:column="1">#<cpp:directive pos:line="15807" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15807" pos:column="9">IInternalExtenderProvider_GetExtenderNames</name><parameter_list pos:line="15807" pos:column="51">(<param><type><name pos:line="15807" pos:column="52">This</name></type></param>,<param><type><name pos:line="15807" pos:column="57">ExtenderCATID</name></type></param>,<param><type><name pos:line="15807" pos:column="71">ExtendeeObject</name></type></param>,<param><type><name pos:line="15807" pos:column="86">ExtenderNames</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15808" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExtenderNames(This,ExtenderCATID,ExtendeeObject,ExtenderNames) )</cpp:value></cpp:define> 

<cpp:define pos:line="15810" pos:column="1">#<cpp:directive pos:line="15810" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15810" pos:column="9">IInternalExtenderProvider_GetExtender</name><parameter_list pos:line="15810" pos:column="46">(<param><type><name pos:line="15810" pos:column="47">This</name></type></param>,<param><type><name pos:line="15810" pos:column="52">ExtenderCATID</name></type></param>,<param><type><name pos:line="15810" pos:column="66">ExtenderName</name></type></param>,<param><type><name pos:line="15810" pos:column="79">ExtendeeObject</name></type></param>,<param><type><name pos:line="15810" pos:column="94">ExtenderSite</name></type></param>,<param><type><name pos:line="15810" pos:column="107">Cookie</name></type></param>,<param><type><name pos:line="15810" pos:column="114">Extender</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15811" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetExtender(This,ExtenderCATID,ExtenderName,ExtendeeObject,ExtenderSite,Cookie,Extender) )</cpp:value></cpp:define> 

<cpp:define pos:line="15813" pos:column="1">#<cpp:directive pos:line="15813" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15813" pos:column="9">IInternalExtenderProvider_CanExtend</name><parameter_list pos:line="15813" pos:column="44">(<param><type><name pos:line="15813" pos:column="45">This</name></type></param>,<param><type><name pos:line="15813" pos:column="50">ExtenderCATID</name></type></param>,<param><type><name pos:line="15813" pos:column="64">ExtenderName</name></type></param>,<param><type><name pos:line="15813" pos:column="77">ExtendeeObject</name></type></param>,<param><type><name pos:line="15813" pos:column="92">fRetval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="15814" pos:column="5">( (This)-&gt;lpVtbl -&gt; CanExtend(This,ExtenderCATID,ExtenderName,ExtendeeObject,fRetval) )</cpp:value></cpp:define> 

<cpp:endif pos:line="15816" pos:column="1">#<cpp:directive pos:line="15816" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="15816" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="15819" pos:column="1">#<cpp:directive pos:line="15819" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15819" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="15824" pos:column="1">#<cpp:directive pos:line="15824" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="15824" pos:column="9">/* __IInternalExtenderProvider_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="15827" pos:column="1">#<cpp:directive pos:line="15827" pos:column="2">ifndef</cpp:directive> <name pos:line="15827" pos:column="9">__Find2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="15828" pos:column="1">#<cpp:directive pos:line="15828" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15828" pos:column="9">__Find2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="15830" pos:column="1">/* interface Find2 */</comment>
<comment type="block" pos:line="15831" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="15834" pos:column="1">EXTERN_C</name> <specifier pos:line="15834" pos:column="10">const</specifier> <name pos:line="15834" pos:column="16">IID</name></type> <name pos:line="15834" pos:column="20">IID_Find2</name></decl>;</decl_stmt>

<cpp:if pos:line="15836" pos:column="1">#<cpp:directive pos:line="15836" pos:column="2">if</cpp:directive> <expr><call><name pos:line="15836" pos:column="5">defined</name><argument_list pos:line="15836" pos:column="12">(<argument><expr><name pos:line="15836" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="15836" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="15836" pos:column="29">!</op:operator><call><name pos:line="15836" pos:column="30">defined</name><argument_list pos:line="15836" pos:column="37">(<argument><expr><name pos:line="15836" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="15838" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="15838" pos:column="19">(<argument pos:line="15838" pos:column="20">"01568308-5b2a-4f30-8d0a-e10ee0f28f4a"</argument>)</argument_list></macro>
    <label><name pos:line="15839" pos:column="5">Find2</name> :</label> <expr_stmt><expr pos:line="15839" pos:column="13">public <name pos:line="15839" pos:column="20">Find</name>
    <block pos:line="15840" pos:column="5">{
    <expr pos:line="15841" pos:column="5">public<op:operator pos:line="15841" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="15842" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="15842" pos:column="81">HRESULT</name> <name pos:line="15842" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="15842" pos:column="107">get_WaitForFindToComplete</name><argument_list pos:line="15842" pos:column="132">( 
            <comment type="block" pos:line="15843" pos:column="13">/* [retval][out] */</comment> <argument pos:line="15843" pos:column="33">__RPC__out VARIANT_BOOL *pWait</argument>)</argument_list></macro> <op:operator pos:line="15843" pos:column="65">=</op:operator> <lit:literal type="number" pos:line="15843" pos:column="67">0</lit:literal></expr>;
        
        <expr pos:line="15845" pos:column="9">virtual <comment type="block" pos:line="15845" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="15845" pos:column="81">HRESULT</name> <name pos:line="15845" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="15845" pos:column="107">put_WaitForFindToComplete</name><argument_list pos:line="15845" pos:column="132">( 
            <argument pos:line="15846" pos:column="13">VARIANT_BOOL Wait</argument>)</argument_list></macro> <op:operator pos:line="15846" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="15846" pos:column="34">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="15850" pos:column="1">#<cpp:directive pos:line="15850" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="15850" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="15852" pos:column="5">typedef <type><struct pos:line="15852" pos:column="13">struct <name pos:line="15852" pos:column="20">Find2Vtbl</name>
    <block pos:line="15853" pos:column="5">{<public type="default" pos:line="15853" pos:column="6">
        <decl_stmt><decl><type><name pos:line="15854" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="15856" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="15856" pos:column="46">HRESULT</name></type> ( <name pos:line="15856" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="15856" pos:column="74">*</type:modifier><name pos:line="15856" pos:column="75">QueryInterface</name> )<parameter_list pos:line="15856" pos:column="91">( 
            <param><decl><type><name pos:line="15857" pos:column="13">Find2</name> <type:modifier pos:line="15857" pos:column="19">*</type:modifier></type> <name pos:line="15857" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15858" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="15858" pos:column="47">struct <name pos:line="15858" pos:column="54">GUID</name> <type:modifier pos:line="15858" pos:column="59">*</type:modifier></type><name pos:line="15858" pos:column="60">riid</name></decl><op:operator pos:line="15858" pos:column="64">,</op:operator>
            <comment type="block" pos:line="15859" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="15859" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="15859" pos:column="59">void</name> <type:modifier pos:line="15859" pos:column="64">*</type:modifier><type:modifier pos:line="15859" pos:column="65">*</type:modifier><name pos:line="15859" pos:column="66">ppvObj</name><op:operator pos:line="15859" pos:column="72">,</op:operator>
            <comment type="block" pos:line="15860" pos:column="13">/* [retval][out] */</comment> <name pos:line="15860" pos:column="33">__RPC__out</name> <name pos:line="15860" pos:column="44">void</name> <type:modifier pos:line="15860" pos:column="49">*</type:modifier><name pos:line="15860" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="15862" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="15862" pos:column="46">HRESULT</name></type> ( <name pos:line="15862" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="15862" pos:column="74">*</type:modifier><name pos:line="15862" pos:column="75">AddRef</name> )<parameter_list pos:line="15862" pos:column="83">( 
            <param><decl><type><name pos:line="15863" pos:column="13">Find2</name> <type:modifier pos:line="15863" pos:column="19">*</type:modifier></type> <name pos:line="15863" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15864" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15864" pos:column="33">__RPC__out</name> <name pos:line="15864" pos:column="44">unsigned</name> <name pos:line="15864" pos:column="53">long</name> <type:modifier pos:line="15864" pos:column="58">*</type:modifier></type><name pos:line="15864" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15866" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="15866" pos:column="46">HRESULT</name></type> ( <name pos:line="15866" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="15866" pos:column="74">*</type:modifier><name pos:line="15866" pos:column="75">Release</name> )<parameter_list pos:line="15866" pos:column="84">( 
            <param><decl><type><name pos:line="15867" pos:column="13">Find2</name> <type:modifier pos:line="15867" pos:column="19">*</type:modifier></type> <name pos:line="15867" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15868" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15868" pos:column="33">__RPC__out</name> <name pos:line="15868" pos:column="44">unsigned</name> <name pos:line="15868" pos:column="53">long</name> <type:modifier pos:line="15868" pos:column="58">*</type:modifier></type><name pos:line="15868" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15870" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="15870" pos:column="46">HRESULT</name></type> ( <name pos:line="15870" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="15870" pos:column="74">*</type:modifier><name pos:line="15870" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="15870" pos:column="93">( 
            <param><decl><type><name pos:line="15871" pos:column="13">Find2</name> <type:modifier pos:line="15871" pos:column="19">*</type:modifier></type> <name pos:line="15871" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15872" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="15872" pos:column="38">__RPC__out</name> <name pos:line="15872" pos:column="49">unsigned</name> <name pos:line="15872" pos:column="58">UINT</name> <type:modifier pos:line="15872" pos:column="63">*</type:modifier></type><name pos:line="15872" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="15873" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15873" pos:column="33">__RPC__out</name> <name pos:line="15873" pos:column="44">void</name> <type:modifier pos:line="15873" pos:column="49">*</type:modifier></type><name pos:line="15873" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15875" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="15875" pos:column="46">HRESULT</name></type> ( <name pos:line="15875" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="15875" pos:column="74">*</type:modifier><name pos:line="15875" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="15875" pos:column="88">( 
            <param><decl><type><name pos:line="15876" pos:column="13">Find2</name> <type:modifier pos:line="15876" pos:column="19">*</type:modifier></type> <name pos:line="15876" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15877" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15877" pos:column="37">unsigned</name> <name pos:line="15877" pos:column="46">UINT</name></type> <name pos:line="15877" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="15878" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15878" pos:column="37">unsigned</name> <name pos:line="15878" pos:column="46">long</name></type> <name pos:line="15878" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="15879" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="15879" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="15879" pos:column="59">void</name> <type:modifier pos:line="15879" pos:column="64">*</type:modifier><type:modifier pos:line="15879" pos:column="65">*</type:modifier></type><name pos:line="15879" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="15880" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15880" pos:column="33">__RPC__out</name> <name pos:line="15880" pos:column="44">void</name> <type:modifier pos:line="15880" pos:column="49">*</type:modifier></type><name pos:line="15880" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15882" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="15882" pos:column="46">HRESULT</name> <argument_list pos:line="15882" pos:column="54">( <argument pos:line="15882" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="15882" pos:column="90">(</op:operator> 
            <name pos:line="15883" pos:column="13">Find2</name> <op:operator pos:line="15883" pos:column="19">*</op:operator> <name pos:line="15883" pos:column="21">This</name><op:operator pos:line="15883" pos:column="25">,</op:operator>
            <comment type="block" pos:line="15884" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="15884" pos:column="37">__RPC__in</name> struct <name pos:line="15884" pos:column="54">GUID</name> <op:operator pos:line="15884" pos:column="59">*</op:operator><name pos:line="15884" pos:column="60">riid</name><op:operator pos:line="15884" pos:column="64">,</op:operator>
            <comment type="block" pos:line="15885" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="15885" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="15885" pos:column="57">signed</name> <name pos:line="15885" pos:column="64">char</name> <op:operator pos:line="15885" pos:column="69">*</op:operator><op:operator pos:line="15885" pos:column="70">*</op:operator><name pos:line="15885" pos:column="71">rgszNames</name><op:operator pos:line="15885" pos:column="80">,</op:operator>
            <comment type="block" pos:line="15886" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="15886" pos:column="37">unsigned</name> <name pos:line="15886" pos:column="46">UINT</name> <name pos:line="15886" pos:column="51">cNames</name><op:operator pos:line="15886" pos:column="57">,</op:operator>
            <comment type="block" pos:line="15887" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="15887" pos:column="37">unsigned</name> <name pos:line="15887" pos:column="46">long</name> <name pos:line="15887" pos:column="51">lcid</name><op:operator pos:line="15887" pos:column="55">,</op:operator>
            <comment type="block" pos:line="15888" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="15888" pos:column="38">__RPC__out</name> <name pos:line="15888" pos:column="49">signed</name> <name pos:line="15888" pos:column="56">long</name> <op:operator pos:line="15888" pos:column="61">*</op:operator><name pos:line="15888" pos:column="62">rgdispid</name><op:operator pos:line="15888" pos:column="70">,</op:operator>
            <comment type="block" pos:line="15889" pos:column="13">/* [retval][out] */</comment> <name pos:line="15889" pos:column="33">__RPC__out</name> <name pos:line="15889" pos:column="44">void</name> <op:operator pos:line="15889" pos:column="49">*</op:operator><name pos:line="15889" pos:column="50">retval</name><op:operator pos:line="15889" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="15891" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="15891" pos:column="46">HRESULT</name> <argument_list pos:line="15891" pos:column="54">( <argument pos:line="15891" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="15891" pos:column="83">(</op:operator> 
            <name pos:line="15892" pos:column="13">Find2</name> <op:operator pos:line="15892" pos:column="19">*</op:operator> <name pos:line="15892" pos:column="21">This</name><op:operator pos:line="15892" pos:column="25">,</op:operator>
            <comment type="block" pos:line="15893" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="15893" pos:column="37">signed</name> <name pos:line="15893" pos:column="44">long</name> <name pos:line="15893" pos:column="49">dispidMember</name><op:operator pos:line="15893" pos:column="61">,</op:operator>
            <comment type="block" pos:line="15894" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="15894" pos:column="37">__RPC__in</name> struct <name pos:line="15894" pos:column="54">GUID</name> <op:operator pos:line="15894" pos:column="59">*</op:operator><name pos:line="15894" pos:column="60">riid</name><op:operator pos:line="15894" pos:column="64">,</op:operator>
            <comment type="block" pos:line="15895" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="15895" pos:column="37">unsigned</name> <name pos:line="15895" pos:column="46">long</name> <name pos:line="15895" pos:column="51">lcid</name><op:operator pos:line="15895" pos:column="55">,</op:operator>
            <comment type="block" pos:line="15896" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="15896" pos:column="37">unsigned</name> <name pos:line="15896" pos:column="46">short</name> <name pos:line="15896" pos:column="52">wFlags</name><op:operator pos:line="15896" pos:column="58">,</op:operator>
            <comment type="block" pos:line="15897" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="15897" pos:column="37">__RPC__in</name> struct <name pos:line="15897" pos:column="54">DISPPARAMS</name> <op:operator pos:line="15897" pos:column="65">*</op:operator><name pos:line="15897" pos:column="66">pdispparams</name><op:operator pos:line="15897" pos:column="77">,</op:operator>
            <comment type="block" pos:line="15898" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="15898" pos:column="38">__RPC__out</name> <name pos:line="15898" pos:column="49">VARIANT</name> <op:operator pos:line="15898" pos:column="57">*</op:operator><name pos:line="15898" pos:column="58">pvarResult</name><op:operator pos:line="15898" pos:column="68">,</op:operator>
            <comment type="block" pos:line="15899" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="15899" pos:column="38">__RPC__out</name> struct <name pos:line="15899" pos:column="56">EXCEPINFO</name> <op:operator pos:line="15899" pos:column="66">*</op:operator><name pos:line="15899" pos:column="67">pexcepinfo</name><op:operator pos:line="15899" pos:column="77">,</op:operator>
            <comment type="block" pos:line="15900" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="15900" pos:column="38">__RPC__out</name> <name pos:line="15900" pos:column="49">unsigned</name> <name pos:line="15900" pos:column="58">UINT</name> <op:operator pos:line="15900" pos:column="63">*</op:operator><name pos:line="15900" pos:column="64">puArgErr</name><op:operator pos:line="15900" pos:column="72">,</op:operator>
            <comment type="block" pos:line="15901" pos:column="13">/* [retval][out] */</comment> <name pos:line="15901" pos:column="33">__RPC__out</name> <name pos:line="15901" pos:column="44">void</name> <op:operator pos:line="15901" pos:column="49">*</op:operator><name pos:line="15901" pos:column="50">retval</name><op:operator pos:line="15901" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="15903" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="15903" pos:column="43">HRESULT</name></type> ( <name pos:line="15903" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15903" pos:column="71">*</type:modifier><name pos:line="15903" pos:column="72">get_DTE</name> )<parameter_list pos:line="15903" pos:column="81">( 
            <param><decl><type><name pos:line="15904" pos:column="13">Find2</name> <type:modifier pos:line="15904" pos:column="19">*</type:modifier></type> <name pos:line="15904" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15905" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15905" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="15905" pos:column="54">*</type:modifier><type:modifier pos:line="15905" pos:column="55">*</type:modifier></type><name pos:line="15905" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15907" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="15907" pos:column="43">HRESULT</name></type> ( <name pos:line="15907" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15907" pos:column="71">*</type:modifier><name pos:line="15907" pos:column="72">get_Parent</name> )<parameter_list pos:line="15907" pos:column="84">( 
            <param><decl><type><name pos:line="15908" pos:column="13">Find2</name> <type:modifier pos:line="15908" pos:column="19">*</type:modifier></type> <name pos:line="15908" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15909" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15909" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="15909" pos:column="54">*</type:modifier><type:modifier pos:line="15909" pos:column="55">*</type:modifier></type><name pos:line="15909" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15911" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="15911" pos:column="43">HRESULT</name> <argument_list pos:line="15911" pos:column="51">( <argument pos:line="15911" pos:column="53">STDMETHODCALLTYPE *get_Action</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="15911" pos:column="84">(</op:operator> 
            <name pos:line="15912" pos:column="13">Find2</name> <op:operator pos:line="15912" pos:column="19">*</op:operator> <name pos:line="15912" pos:column="21">This</name><op:operator pos:line="15912" pos:column="25">,</op:operator>
            <comment type="block" pos:line="15913" pos:column="13">/* [retval][out] */</comment> <name pos:line="15913" pos:column="33">__RPC__out</name> enum <name pos:line="15913" pos:column="49">vsFindAction</name> <op:operator pos:line="15913" pos:column="62">*</op:operator><name pos:line="15913" pos:column="63">retval</name><op:operator pos:line="15913" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="15915" pos:column="9">/* [id][propput][funcdescattr] */</comment> <macro><name pos:line="15915" pos:column="43">HRESULT</name> <argument_list pos:line="15915" pos:column="51">( <argument pos:line="15915" pos:column="53">STDMETHODCALLTYPE *put_Action</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="15915" pos:column="84">(</op:operator> 
            <name pos:line="15916" pos:column="13">Find2</name> <op:operator pos:line="15916" pos:column="19">*</op:operator> <name pos:line="15916" pos:column="21">This</name><op:operator pos:line="15916" pos:column="25">,</op:operator>
            <comment type="block" pos:line="15917" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="15917" pos:column="42">vsFindAction</name> <name pos:line="15917" pos:column="55">noname</name><op:operator pos:line="15917" pos:column="61">,</op:operator>
            <comment type="block" pos:line="15918" pos:column="13">/* [retval][out] */</comment> <name pos:line="15918" pos:column="33">__RPC__out</name> <name pos:line="15918" pos:column="44">void</name> <op:operator pos:line="15918" pos:column="49">*</op:operator><name pos:line="15918" pos:column="50">retval</name><op:operator pos:line="15918" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="15920" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="15920" pos:column="43">HRESULT</name></type> ( <name pos:line="15920" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15920" pos:column="71">*</type:modifier><name pos:line="15920" pos:column="72">get_FindWhat</name> )<parameter_list pos:line="15920" pos:column="86">( 
            <param><decl><type><name pos:line="15921" pos:column="13">Find2</name> <type:modifier pos:line="15921" pos:column="19">*</type:modifier></type> <name pos:line="15921" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15922" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15922" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="15922" pos:column="54">BSTR</name> <type:modifier pos:line="15922" pos:column="59">*</type:modifier></type><name pos:line="15922" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15924" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="15924" pos:column="43">HRESULT</name></type> ( <name pos:line="15924" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15924" pos:column="71">*</type:modifier><name pos:line="15924" pos:column="72">put_FindWhat</name> )<parameter_list pos:line="15924" pos:column="86">( 
            <param><decl><type><name pos:line="15925" pos:column="13">Find2</name> <type:modifier pos:line="15925" pos:column="19">*</type:modifier></type> <name pos:line="15925" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15926" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15926" pos:column="37">__RPC__in</name> <name pos:line="15926" pos:column="47">BSTR</name></type> <name pos:line="15926" pos:column="52">noname</name></decl></param>,
            <comment type="block" pos:line="15927" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15927" pos:column="33">__RPC__out</name> <name pos:line="15927" pos:column="44">void</name> <type:modifier pos:line="15927" pos:column="49">*</type:modifier></type><name pos:line="15927" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15929" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="15929" pos:column="43">HRESULT</name></type> ( <name pos:line="15929" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15929" pos:column="71">*</type:modifier><name pos:line="15929" pos:column="72">get_MatchCase</name> )<parameter_list pos:line="15929" pos:column="87">( 
            <param><decl><type><name pos:line="15930" pos:column="13">Find2</name> <type:modifier pos:line="15930" pos:column="19">*</type:modifier></type> <name pos:line="15930" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15931" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15931" pos:column="33">__RPC__out</name> <name pos:line="15931" pos:column="44">BOOLEAN</name> <type:modifier pos:line="15931" pos:column="52">*</type:modifier></type><name pos:line="15931" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15933" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="15933" pos:column="43">HRESULT</name></type> ( <name pos:line="15933" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15933" pos:column="71">*</type:modifier><name pos:line="15933" pos:column="72">put_MatchCase</name> )<parameter_list pos:line="15933" pos:column="87">( 
            <param><decl><type><name pos:line="15934" pos:column="13">Find2</name> <type:modifier pos:line="15934" pos:column="19">*</type:modifier></type> <name pos:line="15934" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15935" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15935" pos:column="37">BOOLEAN</name></type> <name pos:line="15935" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="15936" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15936" pos:column="33">__RPC__out</name> <name pos:line="15936" pos:column="44">void</name> <type:modifier pos:line="15936" pos:column="49">*</type:modifier></type><name pos:line="15936" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15938" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="15938" pos:column="43">HRESULT</name></type> ( <name pos:line="15938" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15938" pos:column="71">*</type:modifier><name pos:line="15938" pos:column="72">get_MatchWholeWord</name> )<parameter_list pos:line="15938" pos:column="92">( 
            <param><decl><type><name pos:line="15939" pos:column="13">Find2</name> <type:modifier pos:line="15939" pos:column="19">*</type:modifier></type> <name pos:line="15939" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15940" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15940" pos:column="33">__RPC__out</name> <name pos:line="15940" pos:column="44">BOOLEAN</name> <type:modifier pos:line="15940" pos:column="52">*</type:modifier></type><name pos:line="15940" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15942" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="15942" pos:column="43">HRESULT</name></type> ( <name pos:line="15942" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15942" pos:column="71">*</type:modifier><name pos:line="15942" pos:column="72">put_MatchWholeWord</name> )<parameter_list pos:line="15942" pos:column="92">( 
            <param><decl><type><name pos:line="15943" pos:column="13">Find2</name> <type:modifier pos:line="15943" pos:column="19">*</type:modifier></type> <name pos:line="15943" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15944" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15944" pos:column="37">BOOLEAN</name></type> <name pos:line="15944" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="15945" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15945" pos:column="33">__RPC__out</name> <name pos:line="15945" pos:column="44">void</name> <type:modifier pos:line="15945" pos:column="49">*</type:modifier></type><name pos:line="15945" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15947" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="15947" pos:column="43">HRESULT</name></type> ( <name pos:line="15947" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15947" pos:column="71">*</type:modifier><name pos:line="15947" pos:column="72">get_MatchInHiddenText</name> )<parameter_list pos:line="15947" pos:column="95">( 
            <param><decl><type><name pos:line="15948" pos:column="13">Find2</name> <type:modifier pos:line="15948" pos:column="19">*</type:modifier></type> <name pos:line="15948" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15949" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15949" pos:column="33">__RPC__out</name> <name pos:line="15949" pos:column="44">BOOLEAN</name> <type:modifier pos:line="15949" pos:column="52">*</type:modifier></type><name pos:line="15949" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15951" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="15951" pos:column="43">HRESULT</name></type> ( <name pos:line="15951" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15951" pos:column="71">*</type:modifier><name pos:line="15951" pos:column="72">put_MatchInHiddenText</name> )<parameter_list pos:line="15951" pos:column="95">( 
            <param><decl><type><name pos:line="15952" pos:column="13">Find2</name> <type:modifier pos:line="15952" pos:column="19">*</type:modifier></type> <name pos:line="15952" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15953" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15953" pos:column="37">BOOLEAN</name></type> <name pos:line="15953" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="15954" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15954" pos:column="33">__RPC__out</name> <name pos:line="15954" pos:column="44">void</name> <type:modifier pos:line="15954" pos:column="49">*</type:modifier></type><name pos:line="15954" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15956" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="15956" pos:column="43">HRESULT</name></type> ( <name pos:line="15956" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15956" pos:column="71">*</type:modifier><name pos:line="15956" pos:column="72">get_Backwards</name> )<parameter_list pos:line="15956" pos:column="87">( 
            <param><decl><type><name pos:line="15957" pos:column="13">Find2</name> <type:modifier pos:line="15957" pos:column="19">*</type:modifier></type> <name pos:line="15957" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15958" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15958" pos:column="33">__RPC__out</name> <name pos:line="15958" pos:column="44">BOOLEAN</name> <type:modifier pos:line="15958" pos:column="52">*</type:modifier></type><name pos:line="15958" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15960" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="15960" pos:column="43">HRESULT</name></type> ( <name pos:line="15960" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15960" pos:column="71">*</type:modifier><name pos:line="15960" pos:column="72">put_Backwards</name> )<parameter_list pos:line="15960" pos:column="87">( 
            <param><decl><type><name pos:line="15961" pos:column="13">Find2</name> <type:modifier pos:line="15961" pos:column="19">*</type:modifier></type> <name pos:line="15961" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15962" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15962" pos:column="37">BOOLEAN</name></type> <name pos:line="15962" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="15963" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15963" pos:column="33">__RPC__out</name> <name pos:line="15963" pos:column="44">void</name> <type:modifier pos:line="15963" pos:column="49">*</type:modifier></type><name pos:line="15963" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15965" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="15965" pos:column="43">HRESULT</name></type> ( <name pos:line="15965" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15965" pos:column="71">*</type:modifier><name pos:line="15965" pos:column="72">get_SearchSubfolders</name> )<parameter_list pos:line="15965" pos:column="94">( 
            <param><decl><type><name pos:line="15966" pos:column="13">Find2</name> <type:modifier pos:line="15966" pos:column="19">*</type:modifier></type> <name pos:line="15966" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15967" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15967" pos:column="33">__RPC__out</name> <name pos:line="15967" pos:column="44">BOOLEAN</name> <type:modifier pos:line="15967" pos:column="52">*</type:modifier></type><name pos:line="15967" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15969" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="15969" pos:column="43">HRESULT</name></type> ( <name pos:line="15969" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15969" pos:column="71">*</type:modifier><name pos:line="15969" pos:column="72">put_SearchSubfolders</name> )<parameter_list pos:line="15969" pos:column="94">( 
            <param><decl><type><name pos:line="15970" pos:column="13">Find2</name> <type:modifier pos:line="15970" pos:column="19">*</type:modifier></type> <name pos:line="15970" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15971" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15971" pos:column="37">BOOLEAN</name></type> <name pos:line="15971" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="15972" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15972" pos:column="33">__RPC__out</name> <name pos:line="15972" pos:column="44">void</name> <type:modifier pos:line="15972" pos:column="49">*</type:modifier></type><name pos:line="15972" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15974" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="15974" pos:column="43">HRESULT</name></type> ( <name pos:line="15974" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15974" pos:column="71">*</type:modifier><name pos:line="15974" pos:column="72">get_KeepModifiedDocumentsOpen</name> )<parameter_list pos:line="15974" pos:column="103">( 
            <param><decl><type><name pos:line="15975" pos:column="13">Find2</name> <type:modifier pos:line="15975" pos:column="19">*</type:modifier></type> <name pos:line="15975" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15976" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15976" pos:column="33">__RPC__out</name> <name pos:line="15976" pos:column="44">BOOLEAN</name> <type:modifier pos:line="15976" pos:column="52">*</type:modifier></type><name pos:line="15976" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15978" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="15978" pos:column="43">HRESULT</name></type> ( <name pos:line="15978" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15978" pos:column="71">*</type:modifier><name pos:line="15978" pos:column="72">put_KeepModifiedDocumentsOpen</name> )<parameter_list pos:line="15978" pos:column="103">( 
            <param><decl><type><name pos:line="15979" pos:column="13">Find2</name> <type:modifier pos:line="15979" pos:column="19">*</type:modifier></type> <name pos:line="15979" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15980" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15980" pos:column="37">BOOLEAN</name></type> <name pos:line="15980" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="15981" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15981" pos:column="33">__RPC__out</name> <name pos:line="15981" pos:column="44">void</name> <type:modifier pos:line="15981" pos:column="49">*</type:modifier></type><name pos:line="15981" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15983" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="15983" pos:column="43">HRESULT</name> <argument_list pos:line="15983" pos:column="51">( <argument pos:line="15983" pos:column="53">STDMETHODCALLTYPE *get_PatternSyntax</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="15983" pos:column="91">(</op:operator> 
            <name pos:line="15984" pos:column="13">Find2</name> <op:operator pos:line="15984" pos:column="19">*</op:operator> <name pos:line="15984" pos:column="21">This</name><op:operator pos:line="15984" pos:column="25">,</op:operator>
            <comment type="block" pos:line="15985" pos:column="13">/* [retval][out] */</comment> <name pos:line="15985" pos:column="33">__RPC__out</name> enum <name pos:line="15985" pos:column="49">vsFindPatternSyntax</name> <op:operator pos:line="15985" pos:column="69">*</op:operator><name pos:line="15985" pos:column="70">retval</name><op:operator pos:line="15985" pos:column="76">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="15987" pos:column="9">/* [id][propput][funcdescattr] */</comment> <macro><name pos:line="15987" pos:column="43">HRESULT</name> <argument_list pos:line="15987" pos:column="51">( <argument pos:line="15987" pos:column="53">STDMETHODCALLTYPE *put_PatternSyntax</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="15987" pos:column="91">(</op:operator> 
            <name pos:line="15988" pos:column="13">Find2</name> <op:operator pos:line="15988" pos:column="19">*</op:operator> <name pos:line="15988" pos:column="21">This</name><op:operator pos:line="15988" pos:column="25">,</op:operator>
            <comment type="block" pos:line="15989" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="15989" pos:column="42">vsFindPatternSyntax</name> <name pos:line="15989" pos:column="62">noname</name><op:operator pos:line="15989" pos:column="68">,</op:operator>
            <comment type="block" pos:line="15990" pos:column="13">/* [retval][out] */</comment> <name pos:line="15990" pos:column="33">__RPC__out</name> <name pos:line="15990" pos:column="44">void</name> <op:operator pos:line="15990" pos:column="49">*</op:operator><name pos:line="15990" pos:column="50">retval</name><op:operator pos:line="15990" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="15992" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="15992" pos:column="43">HRESULT</name></type> ( <name pos:line="15992" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15992" pos:column="71">*</type:modifier><name pos:line="15992" pos:column="72">get_ReplaceWith</name> )<parameter_list pos:line="15992" pos:column="89">( 
            <param><decl><type><name pos:line="15993" pos:column="13">Find2</name> <type:modifier pos:line="15993" pos:column="19">*</type:modifier></type> <name pos:line="15993" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15994" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15994" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="15994" pos:column="54">BSTR</name> <type:modifier pos:line="15994" pos:column="59">*</type:modifier></type><name pos:line="15994" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="15996" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="15996" pos:column="43">HRESULT</name></type> ( <name pos:line="15996" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="15996" pos:column="71">*</type:modifier><name pos:line="15996" pos:column="72">put_ReplaceWith</name> )<parameter_list pos:line="15996" pos:column="89">( 
            <param><decl><type><name pos:line="15997" pos:column="13">Find2</name> <type:modifier pos:line="15997" pos:column="19">*</type:modifier></type> <name pos:line="15997" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="15998" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="15998" pos:column="37">__RPC__in</name> <name pos:line="15998" pos:column="47">BSTR</name></type> <name pos:line="15998" pos:column="52">noname</name></decl></param>,
            <comment type="block" pos:line="15999" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="15999" pos:column="33">__RPC__out</name> <name pos:line="15999" pos:column="44">void</name> <type:modifier pos:line="15999" pos:column="49">*</type:modifier></type><name pos:line="15999" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16001" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="16001" pos:column="43">HRESULT</name> <argument_list pos:line="16001" pos:column="51">( <argument pos:line="16001" pos:column="53">STDMETHODCALLTYPE *get_Target</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16001" pos:column="84">(</op:operator> 
            <name pos:line="16002" pos:column="13">Find2</name> <op:operator pos:line="16002" pos:column="19">*</op:operator> <name pos:line="16002" pos:column="21">This</name><op:operator pos:line="16002" pos:column="25">,</op:operator>
            <comment type="block" pos:line="16003" pos:column="13">/* [retval][out] */</comment> <name pos:line="16003" pos:column="33">__RPC__out</name> enum <name pos:line="16003" pos:column="49">vsFindTarget</name> <op:operator pos:line="16003" pos:column="62">*</op:operator><name pos:line="16003" pos:column="63">retval</name><op:operator pos:line="16003" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="16005" pos:column="9">/* [id][propput][funcdescattr] */</comment> <macro><name pos:line="16005" pos:column="43">HRESULT</name> <argument_list pos:line="16005" pos:column="51">( <argument pos:line="16005" pos:column="53">STDMETHODCALLTYPE *put_Target</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16005" pos:column="84">(</op:operator> 
            <name pos:line="16006" pos:column="13">Find2</name> <op:operator pos:line="16006" pos:column="19">*</op:operator> <name pos:line="16006" pos:column="21">This</name><op:operator pos:line="16006" pos:column="25">,</op:operator>
            <comment type="block" pos:line="16007" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="16007" pos:column="42">vsFindTarget</name> <name pos:line="16007" pos:column="55">noname</name><op:operator pos:line="16007" pos:column="61">,</op:operator>
            <comment type="block" pos:line="16008" pos:column="13">/* [retval][out] */</comment> <name pos:line="16008" pos:column="33">__RPC__out</name> <name pos:line="16008" pos:column="44">void</name> <op:operator pos:line="16008" pos:column="49">*</op:operator><name pos:line="16008" pos:column="50">retval</name><op:operator pos:line="16008" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="16010" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="16010" pos:column="43">HRESULT</name></type> ( <name pos:line="16010" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16010" pos:column="71">*</type:modifier><name pos:line="16010" pos:column="72">get_SearchPath</name> )<parameter_list pos:line="16010" pos:column="88">( 
            <param><decl><type><name pos:line="16011" pos:column="13">Find2</name> <type:modifier pos:line="16011" pos:column="19">*</type:modifier></type> <name pos:line="16011" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="16012" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16012" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="16012" pos:column="54">BSTR</name> <type:modifier pos:line="16012" pos:column="59">*</type:modifier></type><name pos:line="16012" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16014" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="16014" pos:column="43">HRESULT</name></type> ( <name pos:line="16014" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16014" pos:column="71">*</type:modifier><name pos:line="16014" pos:column="72">put_SearchPath</name> )<parameter_list pos:line="16014" pos:column="88">( 
            <param><decl><type><name pos:line="16015" pos:column="13">Find2</name> <type:modifier pos:line="16015" pos:column="19">*</type:modifier></type> <name pos:line="16015" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="16016" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="16016" pos:column="37">__RPC__in</name> <name pos:line="16016" pos:column="47">BSTR</name></type> <name pos:line="16016" pos:column="52">noname</name></decl></param>,
            <comment type="block" pos:line="16017" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16017" pos:column="33">__RPC__out</name> <name pos:line="16017" pos:column="44">void</name> <type:modifier pos:line="16017" pos:column="49">*</type:modifier></type><name pos:line="16017" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16019" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="16019" pos:column="43">HRESULT</name></type> ( <name pos:line="16019" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16019" pos:column="71">*</type:modifier><name pos:line="16019" pos:column="72">get_FilesOfType</name> )<parameter_list pos:line="16019" pos:column="89">( 
            <param><decl><type><name pos:line="16020" pos:column="13">Find2</name> <type:modifier pos:line="16020" pos:column="19">*</type:modifier></type> <name pos:line="16020" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="16021" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16021" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="16021" pos:column="54">BSTR</name> <type:modifier pos:line="16021" pos:column="59">*</type:modifier></type><name pos:line="16021" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16023" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="16023" pos:column="43">HRESULT</name></type> ( <name pos:line="16023" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16023" pos:column="71">*</type:modifier><name pos:line="16023" pos:column="72">put_FilesOfType</name> )<parameter_list pos:line="16023" pos:column="89">( 
            <param><decl><type><name pos:line="16024" pos:column="13">Find2</name> <type:modifier pos:line="16024" pos:column="19">*</type:modifier></type> <name pos:line="16024" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="16025" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="16025" pos:column="37">__RPC__in</name> <name pos:line="16025" pos:column="47">BSTR</name></type> <name pos:line="16025" pos:column="52">noname</name></decl></param>,
            <comment type="block" pos:line="16026" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16026" pos:column="33">__RPC__out</name> <name pos:line="16026" pos:column="44">void</name> <type:modifier pos:line="16026" pos:column="49">*</type:modifier></type><name pos:line="16026" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16028" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="16028" pos:column="43">HRESULT</name> <argument_list pos:line="16028" pos:column="51">( <argument pos:line="16028" pos:column="53">STDMETHODCALLTYPE *get_ResultsLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16028" pos:column="93">(</op:operator> 
            <name pos:line="16029" pos:column="13">Find2</name> <op:operator pos:line="16029" pos:column="19">*</op:operator> <name pos:line="16029" pos:column="21">This</name><op:operator pos:line="16029" pos:column="25">,</op:operator>
            <comment type="block" pos:line="16030" pos:column="13">/* [retval][out] */</comment> <name pos:line="16030" pos:column="33">__RPC__out</name> enum <name pos:line="16030" pos:column="49">vsFindResultsLocation</name> <op:operator pos:line="16030" pos:column="71">*</op:operator><name pos:line="16030" pos:column="72">retval</name><op:operator pos:line="16030" pos:column="78">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="16032" pos:column="9">/* [id][propput][funcdescattr] */</comment> <macro><name pos:line="16032" pos:column="43">HRESULT</name> <argument_list pos:line="16032" pos:column="51">( <argument pos:line="16032" pos:column="53">STDMETHODCALLTYPE *put_ResultsLocation</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16032" pos:column="93">(</op:operator> 
            <name pos:line="16033" pos:column="13">Find2</name> <op:operator pos:line="16033" pos:column="19">*</op:operator> <name pos:line="16033" pos:column="21">This</name><op:operator pos:line="16033" pos:column="25">,</op:operator>
            <comment type="block" pos:line="16034" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="16034" pos:column="42">vsFindResultsLocation</name> <name pos:line="16034" pos:column="64">noname</name><op:operator pos:line="16034" pos:column="70">,</op:operator>
            <comment type="block" pos:line="16035" pos:column="13">/* [retval][out] */</comment> <name pos:line="16035" pos:column="33">__RPC__out</name> <name pos:line="16035" pos:column="44">void</name> <op:operator pos:line="16035" pos:column="49">*</op:operator><name pos:line="16035" pos:column="50">retval</name><op:operator pos:line="16035" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="16037" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="16037" pos:column="34">HRESULT</name> <argument_list pos:line="16037" pos:column="42">( <argument pos:line="16037" pos:column="44">STDMETHODCALLTYPE *Execute</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16037" pos:column="72">(</op:operator> 
            <name pos:line="16038" pos:column="13">Find2</name> <op:operator pos:line="16038" pos:column="19">*</op:operator> <name pos:line="16038" pos:column="21">This</name><op:operator pos:line="16038" pos:column="25">,</op:operator>
            <comment type="block" pos:line="16039" pos:column="13">/* [retval][out] */</comment> <name pos:line="16039" pos:column="33">__RPC__out</name> enum <name pos:line="16039" pos:column="49">vsFindResult</name> <op:operator pos:line="16039" pos:column="62">*</op:operator><name pos:line="16039" pos:column="63">retval</name><op:operator pos:line="16039" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="16041" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="16041" pos:column="34">HRESULT</name> <argument_list pos:line="16041" pos:column="42">( <argument pos:line="16041" pos:column="44">STDMETHODCALLTYPE *FindReplace</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16041" pos:column="76">(</op:operator> 
            <name pos:line="16042" pos:column="13">Find2</name> <op:operator pos:line="16042" pos:column="19">*</op:operator> <name pos:line="16042" pos:column="21">This</name><op:operator pos:line="16042" pos:column="25">,</op:operator>
            <comment type="block" pos:line="16043" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="16043" pos:column="42">vsFindAction</name> <name pos:line="16043" pos:column="55">Action</name><op:operator pos:line="16043" pos:column="61">,</op:operator>
            <comment type="block" pos:line="16044" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16044" pos:column="37">__RPC__in</name> <name pos:line="16044" pos:column="47">BSTR</name> <name pos:line="16044" pos:column="52">FindWhat</name><op:operator pos:line="16044" pos:column="60">,</op:operator>
            <comment type="block" pos:line="16045" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16045" pos:column="37">signed</name> <name pos:line="16045" pos:column="44">long</name> <name pos:line="16045" pos:column="49">vsFindOptionsValue</name><op:operator pos:line="16045" pos:column="67">,</op:operator>
            <comment type="block" pos:line="16046" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16046" pos:column="37">__RPC__in</name> <name pos:line="16046" pos:column="47">BSTR</name> <name pos:line="16046" pos:column="52">ReplaceWith</name><op:operator pos:line="16046" pos:column="63">,</op:operator>
            <comment type="block" pos:line="16047" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="16047" pos:column="42">vsFindTarget</name> <name pos:line="16047" pos:column="55">Target</name><op:operator pos:line="16047" pos:column="61">,</op:operator>
            <comment type="block" pos:line="16048" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16048" pos:column="37">__RPC__in</name> <name pos:line="16048" pos:column="47">BSTR</name> <name pos:line="16048" pos:column="52">SearchPath</name><op:operator pos:line="16048" pos:column="62">,</op:operator>
            <comment type="block" pos:line="16049" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16049" pos:column="37">__RPC__in</name> <name pos:line="16049" pos:column="47">BSTR</name> <name pos:line="16049" pos:column="52">FilesOfType</name><op:operator pos:line="16049" pos:column="63">,</op:operator>
            <comment type="block" pos:line="16050" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="16050" pos:column="42">vsFindResultsLocation</name> <name pos:line="16050" pos:column="64">ResultsLocation</name><op:operator pos:line="16050" pos:column="79">,</op:operator>
            <comment type="block" pos:line="16051" pos:column="13">/* [retval][out] */</comment> <name pos:line="16051" pos:column="33">__RPC__out</name> enum <name pos:line="16051" pos:column="49">vsFindResult</name> <op:operator pos:line="16051" pos:column="62">*</op:operator><name pos:line="16051" pos:column="63">retval</name><op:operator pos:line="16051" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="16053" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="16053" pos:column="73">HRESULT</name></type> ( <name pos:line="16053" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="16053" pos:column="101">*</type:modifier><name pos:line="16053" pos:column="102">get_WaitForFindToComplete</name> )<parameter_list pos:line="16053" pos:column="129">( 
            <param><decl><type><name pos:line="16054" pos:column="13">Find2</name> <type:modifier pos:line="16054" pos:column="19">*</type:modifier></type> <name pos:line="16054" pos:column="21">This</name></decl></param>,
            <comment type="block" pos:line="16055" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16055" pos:column="33">__RPC__out</name> <name pos:line="16055" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="16055" pos:column="57">*</type:modifier></type><name pos:line="16055" pos:column="58">pWait</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16057" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="16057" pos:column="73">HRESULT</name></type> ( <name pos:line="16057" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="16057" pos:column="101">*</type:modifier><name pos:line="16057" pos:column="102">put_WaitForFindToComplete</name> )<parameter_list pos:line="16057" pos:column="129">( 
            <param><decl><type><name pos:line="16058" pos:column="13">Find2</name> <type:modifier pos:line="16058" pos:column="19">*</type:modifier></type> <name pos:line="16058" pos:column="21">This</name></decl></param>,
            <param><decl><type><name pos:line="16059" pos:column="13">VARIANT_BOOL</name></type> <name pos:line="16059" pos:column="26">Wait</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16061" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="16062" pos:column="7">Find2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="16064" pos:column="5">interface</name></type> <name pos:line="16064" pos:column="15">Find2</name>
    <argument_list pos:line="16065" pos:column="5">{
        <argument><expr><name pos:line="16066" pos:column="9">CONST_VTBL</name> struct <name pos:line="16066" pos:column="27">Find2Vtbl</name> <op:operator pos:line="16066" pos:column="37">*</op:operator><name pos:line="16066" pos:column="38">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="16071" pos:column="1">#<cpp:directive pos:line="16071" pos:column="2">ifdef</cpp:directive> <name pos:line="16071" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="16074" pos:column="1">#<cpp:directive pos:line="16074" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16074" pos:column="9">Find2_QueryInterface</name><parameter_list pos:line="16074" pos:column="29">(<param><type><name pos:line="16074" pos:column="30">This</name></type></param>,<param><type><name pos:line="16074" pos:column="35">riid</name></type></param>,<param><type><name pos:line="16074" pos:column="40">ppvObj</name></type></param>,<param><type><name pos:line="16074" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16075" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16077" pos:column="1">#<cpp:directive pos:line="16077" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16077" pos:column="9">Find2_AddRef</name><parameter_list pos:line="16077" pos:column="21">(<param><type><name pos:line="16077" pos:column="22">This</name></type></param>,<param><type><name pos:line="16077" pos:column="27">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16078" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16080" pos:column="1">#<cpp:directive pos:line="16080" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16080" pos:column="9">Find2_Release</name><parameter_list pos:line="16080" pos:column="22">(<param><type><name pos:line="16080" pos:column="23">This</name></type></param>,<param><type><name pos:line="16080" pos:column="28">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16081" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16083" pos:column="1">#<cpp:directive pos:line="16083" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16083" pos:column="9">Find2_GetTypeInfoCount</name><parameter_list pos:line="16083" pos:column="31">(<param><type><name pos:line="16083" pos:column="32">This</name></type></param>,<param><type><name pos:line="16083" pos:column="37">pctinfo</name></type></param>,<param><type><name pos:line="16083" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16084" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16086" pos:column="1">#<cpp:directive pos:line="16086" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16086" pos:column="9">Find2_GetTypeInfo</name><parameter_list pos:line="16086" pos:column="26">(<param><type><name pos:line="16086" pos:column="27">This</name></type></param>,<param><type><name pos:line="16086" pos:column="32">itinfo</name></type></param>,<param><type><name pos:line="16086" pos:column="39">lcid</name></type></param>,<param><type><name pos:line="16086" pos:column="44">pptinfo</name></type></param>,<param><type><name pos:line="16086" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16087" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16089" pos:column="1">#<cpp:directive pos:line="16089" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16089" pos:column="9">Find2_GetIDsOfNames</name><parameter_list pos:line="16089" pos:column="28">(<param><type><name pos:line="16089" pos:column="29">This</name></type></param>,<param><type><name pos:line="16089" pos:column="34">riid</name></type></param>,<param><type><name pos:line="16089" pos:column="39">rgszNames</name></type></param>,<param><type><name pos:line="16089" pos:column="49">cNames</name></type></param>,<param><type><name pos:line="16089" pos:column="56">lcid</name></type></param>,<param><type><name pos:line="16089" pos:column="61">rgdispid</name></type></param>,<param><type><name pos:line="16089" pos:column="70">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16090" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16092" pos:column="1">#<cpp:directive pos:line="16092" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16092" pos:column="9">Find2_Invoke</name><parameter_list pos:line="16092" pos:column="21">(<param><type><name pos:line="16092" pos:column="22">This</name></type></param>,<param><type><name pos:line="16092" pos:column="27">dispidMember</name></type></param>,<param><type><name pos:line="16092" pos:column="40">riid</name></type></param>,<param><type><name pos:line="16092" pos:column="45">lcid</name></type></param>,<param><type><name pos:line="16092" pos:column="50">wFlags</name></type></param>,<param><type><name pos:line="16092" pos:column="57">pdispparams</name></type></param>,<param><type><name pos:line="16092" pos:column="69">pvarResult</name></type></param>,<param><type><name pos:line="16092" pos:column="80">pexcepinfo</name></type></param>,<param><type><name pos:line="16092" pos:column="91">puArgErr</name></type></param>,<param><type><name pos:line="16092" pos:column="100">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16093" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16095" pos:column="1">#<cpp:directive pos:line="16095" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16095" pos:column="9">Find2_get_DTE</name><parameter_list pos:line="16095" pos:column="22">(<param><type><name pos:line="16095" pos:column="23">This</name></type></param>,<param><type><name pos:line="16095" pos:column="28">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16096" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16098" pos:column="1">#<cpp:directive pos:line="16098" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16098" pos:column="9">Find2_get_Parent</name><parameter_list pos:line="16098" pos:column="25">(<param><type><name pos:line="16098" pos:column="26">This</name></type></param>,<param><type><name pos:line="16098" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16099" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16101" pos:column="1">#<cpp:directive pos:line="16101" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16101" pos:column="9">Find2_get_Action</name><parameter_list pos:line="16101" pos:column="25">(<param><type><name pos:line="16101" pos:column="26">This</name></type></param>,<param><type><name pos:line="16101" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16102" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Action(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16104" pos:column="1">#<cpp:directive pos:line="16104" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16104" pos:column="9">Find2_put_Action</name><parameter_list pos:line="16104" pos:column="25">(<param><type><name pos:line="16104" pos:column="26">This</name></type></param>,<param><type><name pos:line="16104" pos:column="31">noname</name></type></param>,<param><type><name pos:line="16104" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16105" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Action(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16107" pos:column="1">#<cpp:directive pos:line="16107" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16107" pos:column="9">Find2_get_FindWhat</name><parameter_list pos:line="16107" pos:column="27">(<param><type><name pos:line="16107" pos:column="28">This</name></type></param>,<param><type><name pos:line="16107" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16108" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FindWhat(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16110" pos:column="1">#<cpp:directive pos:line="16110" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16110" pos:column="9">Find2_put_FindWhat</name><parameter_list pos:line="16110" pos:column="27">(<param><type><name pos:line="16110" pos:column="28">This</name></type></param>,<param><type><name pos:line="16110" pos:column="33">noname</name></type></param>,<param><type><name pos:line="16110" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16111" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_FindWhat(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16113" pos:column="1">#<cpp:directive pos:line="16113" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16113" pos:column="9">Find2_get_MatchCase</name><parameter_list pos:line="16113" pos:column="28">(<param><type><name pos:line="16113" pos:column="29">This</name></type></param>,<param><type><name pos:line="16113" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16114" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_MatchCase(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16116" pos:column="1">#<cpp:directive pos:line="16116" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16116" pos:column="9">Find2_put_MatchCase</name><parameter_list pos:line="16116" pos:column="28">(<param><type><name pos:line="16116" pos:column="29">This</name></type></param>,<param><type><name pos:line="16116" pos:column="34">noname</name></type></param>,<param><type><name pos:line="16116" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16117" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_MatchCase(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16119" pos:column="1">#<cpp:directive pos:line="16119" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16119" pos:column="9">Find2_get_MatchWholeWord</name><parameter_list pos:line="16119" pos:column="33">(<param><type><name pos:line="16119" pos:column="34">This</name></type></param>,<param><type><name pos:line="16119" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16120" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_MatchWholeWord(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16122" pos:column="1">#<cpp:directive pos:line="16122" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16122" pos:column="9">Find2_put_MatchWholeWord</name><parameter_list pos:line="16122" pos:column="33">(<param><type><name pos:line="16122" pos:column="34">This</name></type></param>,<param><type><name pos:line="16122" pos:column="39">noname</name></type></param>,<param><type><name pos:line="16122" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16123" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_MatchWholeWord(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16125" pos:column="1">#<cpp:directive pos:line="16125" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16125" pos:column="9">Find2_get_MatchInHiddenText</name><parameter_list pos:line="16125" pos:column="36">(<param><type><name pos:line="16125" pos:column="37">This</name></type></param>,<param><type><name pos:line="16125" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16126" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_MatchInHiddenText(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16128" pos:column="1">#<cpp:directive pos:line="16128" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16128" pos:column="9">Find2_put_MatchInHiddenText</name><parameter_list pos:line="16128" pos:column="36">(<param><type><name pos:line="16128" pos:column="37">This</name></type></param>,<param><type><name pos:line="16128" pos:column="42">noname</name></type></param>,<param><type><name pos:line="16128" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16129" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_MatchInHiddenText(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16131" pos:column="1">#<cpp:directive pos:line="16131" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16131" pos:column="9">Find2_get_Backwards</name><parameter_list pos:line="16131" pos:column="28">(<param><type><name pos:line="16131" pos:column="29">This</name></type></param>,<param><type><name pos:line="16131" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16132" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Backwards(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16134" pos:column="1">#<cpp:directive pos:line="16134" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16134" pos:column="9">Find2_put_Backwards</name><parameter_list pos:line="16134" pos:column="28">(<param><type><name pos:line="16134" pos:column="29">This</name></type></param>,<param><type><name pos:line="16134" pos:column="34">noname</name></type></param>,<param><type><name pos:line="16134" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16135" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Backwards(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16137" pos:column="1">#<cpp:directive pos:line="16137" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16137" pos:column="9">Find2_get_SearchSubfolders</name><parameter_list pos:line="16137" pos:column="35">(<param><type><name pos:line="16137" pos:column="36">This</name></type></param>,<param><type><name pos:line="16137" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16138" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SearchSubfolders(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16140" pos:column="1">#<cpp:directive pos:line="16140" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16140" pos:column="9">Find2_put_SearchSubfolders</name><parameter_list pos:line="16140" pos:column="35">(<param><type><name pos:line="16140" pos:column="36">This</name></type></param>,<param><type><name pos:line="16140" pos:column="41">noname</name></type></param>,<param><type><name pos:line="16140" pos:column="48">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16141" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_SearchSubfolders(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16143" pos:column="1">#<cpp:directive pos:line="16143" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16143" pos:column="9">Find2_get_KeepModifiedDocumentsOpen</name><parameter_list pos:line="16143" pos:column="44">(<param><type><name pos:line="16143" pos:column="45">This</name></type></param>,<param><type><name pos:line="16143" pos:column="50">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16144" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_KeepModifiedDocumentsOpen(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16146" pos:column="1">#<cpp:directive pos:line="16146" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16146" pos:column="9">Find2_put_KeepModifiedDocumentsOpen</name><parameter_list pos:line="16146" pos:column="44">(<param><type><name pos:line="16146" pos:column="45">This</name></type></param>,<param><type><name pos:line="16146" pos:column="50">noname</name></type></param>,<param><type><name pos:line="16146" pos:column="57">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16147" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_KeepModifiedDocumentsOpen(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16149" pos:column="1">#<cpp:directive pos:line="16149" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16149" pos:column="9">Find2_get_PatternSyntax</name><parameter_list pos:line="16149" pos:column="32">(<param><type><name pos:line="16149" pos:column="33">This</name></type></param>,<param><type><name pos:line="16149" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16150" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_PatternSyntax(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16152" pos:column="1">#<cpp:directive pos:line="16152" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16152" pos:column="9">Find2_put_PatternSyntax</name><parameter_list pos:line="16152" pos:column="32">(<param><type><name pos:line="16152" pos:column="33">This</name></type></param>,<param><type><name pos:line="16152" pos:column="38">noname</name></type></param>,<param><type><name pos:line="16152" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16153" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_PatternSyntax(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16155" pos:column="1">#<cpp:directive pos:line="16155" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16155" pos:column="9">Find2_get_ReplaceWith</name><parameter_list pos:line="16155" pos:column="30">(<param><type><name pos:line="16155" pos:column="31">This</name></type></param>,<param><type><name pos:line="16155" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16156" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ReplaceWith(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16158" pos:column="1">#<cpp:directive pos:line="16158" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16158" pos:column="9">Find2_put_ReplaceWith</name><parameter_list pos:line="16158" pos:column="30">(<param><type><name pos:line="16158" pos:column="31">This</name></type></param>,<param><type><name pos:line="16158" pos:column="36">noname</name></type></param>,<param><type><name pos:line="16158" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16159" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_ReplaceWith(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16161" pos:column="1">#<cpp:directive pos:line="16161" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16161" pos:column="9">Find2_get_Target</name><parameter_list pos:line="16161" pos:column="25">(<param><type><name pos:line="16161" pos:column="26">This</name></type></param>,<param><type><name pos:line="16161" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16162" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Target(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16164" pos:column="1">#<cpp:directive pos:line="16164" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16164" pos:column="9">Find2_put_Target</name><parameter_list pos:line="16164" pos:column="25">(<param><type><name pos:line="16164" pos:column="26">This</name></type></param>,<param><type><name pos:line="16164" pos:column="31">noname</name></type></param>,<param><type><name pos:line="16164" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16165" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Target(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16167" pos:column="1">#<cpp:directive pos:line="16167" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16167" pos:column="9">Find2_get_SearchPath</name><parameter_list pos:line="16167" pos:column="29">(<param><type><name pos:line="16167" pos:column="30">This</name></type></param>,<param><type><name pos:line="16167" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16168" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SearchPath(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16170" pos:column="1">#<cpp:directive pos:line="16170" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16170" pos:column="9">Find2_put_SearchPath</name><parameter_list pos:line="16170" pos:column="29">(<param><type><name pos:line="16170" pos:column="30">This</name></type></param>,<param><type><name pos:line="16170" pos:column="35">noname</name></type></param>,<param><type><name pos:line="16170" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16171" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_SearchPath(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16173" pos:column="1">#<cpp:directive pos:line="16173" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16173" pos:column="9">Find2_get_FilesOfType</name><parameter_list pos:line="16173" pos:column="30">(<param><type><name pos:line="16173" pos:column="31">This</name></type></param>,<param><type><name pos:line="16173" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16174" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_FilesOfType(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16176" pos:column="1">#<cpp:directive pos:line="16176" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16176" pos:column="9">Find2_put_FilesOfType</name><parameter_list pos:line="16176" pos:column="30">(<param><type><name pos:line="16176" pos:column="31">This</name></type></param>,<param><type><name pos:line="16176" pos:column="36">noname</name></type></param>,<param><type><name pos:line="16176" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16177" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_FilesOfType(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16179" pos:column="1">#<cpp:directive pos:line="16179" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16179" pos:column="9">Find2_get_ResultsLocation</name><parameter_list pos:line="16179" pos:column="34">(<param><type><name pos:line="16179" pos:column="35">This</name></type></param>,<param><type><name pos:line="16179" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16180" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ResultsLocation(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16182" pos:column="1">#<cpp:directive pos:line="16182" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16182" pos:column="9">Find2_put_ResultsLocation</name><parameter_list pos:line="16182" pos:column="34">(<param><type><name pos:line="16182" pos:column="35">This</name></type></param>,<param><type><name pos:line="16182" pos:column="40">noname</name></type></param>,<param><type><name pos:line="16182" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16183" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_ResultsLocation(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16185" pos:column="1">#<cpp:directive pos:line="16185" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16185" pos:column="9">Find2_Execute</name><parameter_list pos:line="16185" pos:column="22">(<param><type><name pos:line="16185" pos:column="23">This</name></type></param>,<param><type><name pos:line="16185" pos:column="28">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16186" pos:column="5">( (This)-&gt;lpVtbl -&gt; Execute(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16188" pos:column="1">#<cpp:directive pos:line="16188" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16188" pos:column="9">Find2_FindReplace</name><parameter_list pos:line="16188" pos:column="26">(<param><type><name pos:line="16188" pos:column="27">This</name></type></param>,<param><type><name pos:line="16188" pos:column="32">Action</name></type></param>,<param><type><name pos:line="16188" pos:column="39">FindWhat</name></type></param>,<param><type><name pos:line="16188" pos:column="48">vsFindOptionsValue</name></type></param>,<param><type><name pos:line="16188" pos:column="67">ReplaceWith</name></type></param>,<param><type><name pos:line="16188" pos:column="79">Target</name></type></param>,<param><type><name pos:line="16188" pos:column="86">SearchPath</name></type></param>,<param><type><name pos:line="16188" pos:column="97">FilesOfType</name></type></param>,<param><type><name pos:line="16188" pos:column="109">ResultsLocation</name></type></param>,<param><type><name pos:line="16188" pos:column="125">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16189" pos:column="5">( (This)-&gt;lpVtbl -&gt; FindReplace(This,Action,FindWhat,vsFindOptionsValue,ReplaceWith,Target,SearchPath,FilesOfType,ResultsLocation,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="16192" pos:column="1">#<cpp:directive pos:line="16192" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16192" pos:column="9">Find2_get_WaitForFindToComplete</name><parameter_list pos:line="16192" pos:column="40">(<param><type><name pos:line="16192" pos:column="41">This</name></type></param>,<param><type><name pos:line="16192" pos:column="46">pWait</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16193" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_WaitForFindToComplete(This,pWait) )</cpp:value></cpp:define> 

<cpp:define pos:line="16195" pos:column="1">#<cpp:directive pos:line="16195" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16195" pos:column="9">Find2_put_WaitForFindToComplete</name><parameter_list pos:line="16195" pos:column="40">(<param><type><name pos:line="16195" pos:column="41">This</name></type></param>,<param><type><name pos:line="16195" pos:column="46">Wait</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16196" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_WaitForFindToComplete(This,Wait) )</cpp:value></cpp:define> 

<cpp:endif pos:line="16198" pos:column="1">#<cpp:directive pos:line="16198" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="16198" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="16201" pos:column="1">#<cpp:directive pos:line="16201" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16201" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="16206" pos:column="1">#<cpp:directive pos:line="16206" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16206" pos:column="9">/* __Find2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="16209" pos:column="1">#<cpp:directive pos:line="16209" pos:column="2">ifndef</cpp:directive> <name pos:line="16209" pos:column="9">__LifetimeInformation_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="16210" pos:column="1">#<cpp:directive pos:line="16210" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16210" pos:column="9">__LifetimeInformation_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="16212" pos:column="1">/* interface LifetimeInformation */</comment>
<comment type="block" pos:line="16213" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="16216" pos:column="1">EXTERN_C</name> <specifier pos:line="16216" pos:column="10">const</specifier> <name pos:line="16216" pos:column="16">IID</name></type> <name pos:line="16216" pos:column="20">IID_LifetimeInformation</name></decl>;</decl_stmt>

<cpp:if pos:line="16218" pos:column="1">#<cpp:directive pos:line="16218" pos:column="2">if</cpp:directive> <expr><call><name pos:line="16218" pos:column="5">defined</name><argument_list pos:line="16218" pos:column="12">(<argument><expr><name pos:line="16218" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="16218" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="16218" pos:column="29">!</op:operator><call><name pos:line="16218" pos:column="30">defined</name><argument_list pos:line="16218" pos:column="37">(<argument><expr><name pos:line="16218" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="16220" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="16220" pos:column="19">(<argument pos:line="16220" pos:column="20">"C8F4F9CC-B7E5-4458-BCE3-E1542468F26B"</argument>)</argument_list></macro>
    <label><name pos:line="16221" pos:column="5">LifetimeInformation</name> :</label> <expr_stmt><expr pos:line="16221" pos:column="27">public <name pos:line="16221" pos:column="34">IDispatch</name>
    <block pos:line="16222" pos:column="5">{
    <expr pos:line="16223" pos:column="5">public<op:operator pos:line="16223" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="16224" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="16224" pos:column="81">HRESULT</name> <name pos:line="16224" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="16224" pos:column="107">get_HasBeenDeleted</name><argument_list pos:line="16224" pos:column="125">( 
            <comment type="block" pos:line="16225" pos:column="13">/* [retval][out] */</comment> <argument pos:line="16225" pos:column="33">__RPC__out VARIANT_BOOL *pDeleted</argument>)</argument_list></macro> <op:operator pos:line="16225" pos:column="68">=</op:operator> <lit:literal type="number" pos:line="16225" pos:column="70">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="16229" pos:column="1">#<cpp:directive pos:line="16229" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="16229" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="16231" pos:column="5">typedef <type><struct pos:line="16231" pos:column="13">struct <name pos:line="16231" pos:column="20">LifetimeInformationVtbl</name>
    <block pos:line="16232" pos:column="5">{<public type="default" pos:line="16232" pos:column="6">
        <function_decl><type><name pos:line="16233" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="16235" pos:column="9">HRESULT</name></type> ( <name pos:line="16235" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16235" pos:column="37">*</type:modifier><name pos:line="16235" pos:column="38">QueryInterface</name> )<parameter_list pos:line="16235" pos:column="54">( 
            <param><decl><type><name pos:line="16236" pos:column="13">LifetimeInformation</name> <type:modifier pos:line="16236" pos:column="33">*</type:modifier></type> <name pos:line="16236" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="16237" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16237" pos:column="24">__RPC__in</name> <name pos:line="16237" pos:column="34">REFIID</name></type> <name pos:line="16237" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="16238" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="16239" pos:column="13">__RPC__deref_out</name>  <name pos:line="16239" pos:column="31">void</name> <type:modifier pos:line="16239" pos:column="36">*</type:modifier><type:modifier pos:line="16239" pos:column="37">*</type:modifier></type><name pos:line="16239" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16241" pos:column="9">ULONG</name></type> ( <name pos:line="16241" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16241" pos:column="35">*</type:modifier><name pos:line="16241" pos:column="36">AddRef</name> )<parameter_list pos:line="16241" pos:column="44">( 
            <param><decl><type><name pos:line="16242" pos:column="13">LifetimeInformation</name> <type:modifier pos:line="16242" pos:column="33">*</type:modifier></type> <name pos:line="16242" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16244" pos:column="9">ULONG</name></type> ( <name pos:line="16244" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16244" pos:column="35">*</type:modifier><name pos:line="16244" pos:column="36">Release</name> )<parameter_list pos:line="16244" pos:column="45">( 
            <param><decl><type><name pos:line="16245" pos:column="13">LifetimeInformation</name> <type:modifier pos:line="16245" pos:column="33">*</type:modifier></type> <name pos:line="16245" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16247" pos:column="9">HRESULT</name></type> ( <name pos:line="16247" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16247" pos:column="37">*</type:modifier><name pos:line="16247" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="16247" pos:column="56">( 
            <param><decl><type><name pos:line="16248" pos:column="13">LifetimeInformation</name> <type:modifier pos:line="16248" pos:column="33">*</type:modifier></type> <name pos:line="16248" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="16249" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16249" pos:column="25">__RPC__out</name> <name pos:line="16249" pos:column="36">UINT</name> <type:modifier pos:line="16249" pos:column="41">*</type:modifier></type><name pos:line="16249" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16251" pos:column="9">HRESULT</name></type> ( <name pos:line="16251" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16251" pos:column="37">*</type:modifier><name pos:line="16251" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="16251" pos:column="51">( 
            <param><decl><type><name pos:line="16252" pos:column="13">LifetimeInformation</name> <type:modifier pos:line="16252" pos:column="33">*</type:modifier></type> <name pos:line="16252" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="16253" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16253" pos:column="24">UINT</name></type> <name pos:line="16253" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="16254" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16254" pos:column="24">LCID</name></type> <name pos:line="16254" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="16255" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16255" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="16255" pos:column="46">ITypeInfo</name> <type:modifier pos:line="16255" pos:column="56">*</type:modifier><type:modifier pos:line="16255" pos:column="57">*</type:modifier></type><name pos:line="16255" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16257" pos:column="9">HRESULT</name> <argument_list pos:line="16257" pos:column="17">( <argument pos:line="16257" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16257" pos:column="53">(</op:operator> 
            <name pos:line="16258" pos:column="13">LifetimeInformation</name> <op:operator pos:line="16258" pos:column="33">*</op:operator> <name pos:line="16258" pos:column="35">This</name><op:operator pos:line="16258" pos:column="39">,</op:operator>
            <comment type="block" pos:line="16259" pos:column="13">/* [in] */</comment> <name pos:line="16259" pos:column="24">__RPC__in</name> <name pos:line="16259" pos:column="34">REFIID</name> <name pos:line="16259" pos:column="41">riid</name><op:operator pos:line="16259" pos:column="45">,</op:operator>
            <comment type="block" pos:line="16260" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="16260" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="16260" pos:column="54">(<argument pos:line="16260" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="16260" pos:column="63">LPOLESTR</name> <op:operator pos:line="16260" pos:column="72">*</op:operator><name pos:line="16260" pos:column="73">rgszNames</name><op:operator pos:line="16260" pos:column="82">,</op:operator>
            <comment type="block" pos:line="16261" pos:column="13">/* [range][in] */</comment> <name pos:line="16261" pos:column="31">UINT</name> <name pos:line="16261" pos:column="36">cNames</name><op:operator pos:line="16261" pos:column="42">,</op:operator>
            <comment type="block" pos:line="16262" pos:column="13">/* [in] */</comment> <name pos:line="16262" pos:column="24">LCID</name> <name pos:line="16262" pos:column="29">lcid</name><op:operator pos:line="16262" pos:column="33">,</op:operator>
            <comment type="block" pos:line="16263" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="16263" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="16263" pos:column="56">(<argument pos:line="16263" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="16263" pos:column="65">DISPID</name> <op:operator pos:line="16263" pos:column="72">*</op:operator><name pos:line="16263" pos:column="73">rgDispId</name><op:operator pos:line="16263" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="16265" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="16265" pos:column="23">HRESULT</name></type> ( <name pos:line="16265" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="16265" pos:column="51">*</type:modifier><name pos:line="16265" pos:column="52">Invoke</name> )<parameter_list pos:line="16265" pos:column="60">( 
            <param><decl><type><name pos:line="16266" pos:column="13">LifetimeInformation</name> <type:modifier pos:line="16266" pos:column="33">*</type:modifier></type> <name pos:line="16266" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="16267" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16267" pos:column="24">DISPID</name></type> <name pos:line="16267" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="16268" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16268" pos:column="24">REFIID</name></type> <name pos:line="16268" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="16269" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16269" pos:column="24">LCID</name></type> <name pos:line="16269" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="16270" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16270" pos:column="24">WORD</name></type> <name pos:line="16270" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="16271" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="16271" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="16271" pos:column="40">*</type:modifier></type><name pos:line="16271" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="16272" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16272" pos:column="25">VARIANT</name> <type:modifier pos:line="16272" pos:column="33">*</type:modifier></type><name pos:line="16272" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="16273" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16273" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="16273" pos:column="35">*</type:modifier></type><name pos:line="16273" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="16274" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16274" pos:column="25">UINT</name> <type:modifier pos:line="16274" pos:column="30">*</type:modifier></type><name pos:line="16274" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16276" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="16276" pos:column="73">HRESULT</name></type> ( <name pos:line="16276" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="16276" pos:column="101">*</type:modifier><name pos:line="16276" pos:column="102">get_HasBeenDeleted</name> )<parameter_list pos:line="16276" pos:column="122">( 
            <param><decl><type><name pos:line="16277" pos:column="13">LifetimeInformation</name> <type:modifier pos:line="16277" pos:column="33">*</type:modifier></type> <name pos:line="16277" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="16278" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16278" pos:column="33">__RPC__out</name> <name pos:line="16278" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="16278" pos:column="57">*</type:modifier></type><name pos:line="16278" pos:column="58">pDeleted</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16280" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="16281" pos:column="7">LifetimeInformationVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="16283" pos:column="5">interface</name></type> <name pos:line="16283" pos:column="15">LifetimeInformation</name>
    <argument_list pos:line="16284" pos:column="5">{
        <argument><expr><name pos:line="16285" pos:column="9">CONST_VTBL</name> struct <name pos:line="16285" pos:column="27">LifetimeInformationVtbl</name> <op:operator pos:line="16285" pos:column="51">*</op:operator><name pos:line="16285" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="16290" pos:column="1">#<cpp:directive pos:line="16290" pos:column="2">ifdef</cpp:directive> <name pos:line="16290" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="16293" pos:column="1">#<cpp:directive pos:line="16293" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16293" pos:column="9">LifetimeInformation_QueryInterface</name><parameter_list pos:line="16293" pos:column="43">(<param><type><name pos:line="16293" pos:column="44">This</name></type></param>,<param><type><name pos:line="16293" pos:column="49">riid</name></type></param>,<param><type><name pos:line="16293" pos:column="54">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16294" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="16296" pos:column="1">#<cpp:directive pos:line="16296" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16296" pos:column="9">LifetimeInformation_AddRef</name><parameter_list pos:line="16296" pos:column="35">(<param><type><name pos:line="16296" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16297" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16299" pos:column="1">#<cpp:directive pos:line="16299" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16299" pos:column="9">LifetimeInformation_Release</name><parameter_list pos:line="16299" pos:column="36">(<param><type><name pos:line="16299" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16300" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="16303" pos:column="1">#<cpp:directive pos:line="16303" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16303" pos:column="9">LifetimeInformation_GetTypeInfoCount</name><parameter_list pos:line="16303" pos:column="45">(<param><type><name pos:line="16303" pos:column="46">This</name></type></param>,<param><type><name pos:line="16303" pos:column="51">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16304" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="16306" pos:column="1">#<cpp:directive pos:line="16306" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16306" pos:column="9">LifetimeInformation_GetTypeInfo</name><parameter_list pos:line="16306" pos:column="40">(<param><type><name pos:line="16306" pos:column="41">This</name></type></param>,<param><type><name pos:line="16306" pos:column="46">iTInfo</name></type></param>,<param><type><name pos:line="16306" pos:column="53">lcid</name></type></param>,<param><type><name pos:line="16306" pos:column="58">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16307" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="16309" pos:column="1">#<cpp:directive pos:line="16309" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16309" pos:column="9">LifetimeInformation_GetIDsOfNames</name><parameter_list pos:line="16309" pos:column="42">(<param><type><name pos:line="16309" pos:column="43">This</name></type></param>,<param><type><name pos:line="16309" pos:column="48">riid</name></type></param>,<param><type><name pos:line="16309" pos:column="53">rgszNames</name></type></param>,<param><type><name pos:line="16309" pos:column="63">cNames</name></type></param>,<param><type><name pos:line="16309" pos:column="70">lcid</name></type></param>,<param><type><name pos:line="16309" pos:column="75">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16310" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="16312" pos:column="1">#<cpp:directive pos:line="16312" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16312" pos:column="9">LifetimeInformation_Invoke</name><parameter_list pos:line="16312" pos:column="35">(<param><type><name pos:line="16312" pos:column="36">This</name></type></param>,<param><type><name pos:line="16312" pos:column="41">dispIdMember</name></type></param>,<param><type><name pos:line="16312" pos:column="54">riid</name></type></param>,<param><type><name pos:line="16312" pos:column="59">lcid</name></type></param>,<param><type><name pos:line="16312" pos:column="64">wFlags</name></type></param>,<param><type><name pos:line="16312" pos:column="71">pDispParams</name></type></param>,<param><type><name pos:line="16312" pos:column="83">pVarResult</name></type></param>,<param><type><name pos:line="16312" pos:column="94">pExcepInfo</name></type></param>,<param><type><name pos:line="16312" pos:column="105">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16313" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="16316" pos:column="1">#<cpp:directive pos:line="16316" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16316" pos:column="9">LifetimeInformation_get_HasBeenDeleted</name><parameter_list pos:line="16316" pos:column="47">(<param><type><name pos:line="16316" pos:column="48">This</name></type></param>,<param><type><name pos:line="16316" pos:column="53">pDeleted</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16317" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_HasBeenDeleted(This,pDeleted) )</cpp:value></cpp:define> 

<cpp:endif pos:line="16319" pos:column="1">#<cpp:directive pos:line="16319" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="16319" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="16322" pos:column="1">#<cpp:directive pos:line="16322" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16322" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="16327" pos:column="1">#<cpp:directive pos:line="16327" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16327" pos:column="9">/* __LifetimeInformation_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="16330" pos:column="1">#<cpp:directive pos:line="16330" pos:column="2">ifndef</cpp:directive> <name pos:line="16330" pos:column="9">__ToolBoxItem2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="16331" pos:column="1">#<cpp:directive pos:line="16331" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16331" pos:column="9">__ToolBoxItem2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="16333" pos:column="1">/* interface ToolBoxItem2 */</comment>
<comment type="block" pos:line="16334" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="16337" pos:column="1">EXTERN_C</name> <specifier pos:line="16337" pos:column="10">const</specifier> <name pos:line="16337" pos:column="16">IID</name></type> <name pos:line="16337" pos:column="20">IID_ToolBoxItem2</name></decl>;</decl_stmt>

<cpp:if pos:line="16339" pos:column="1">#<cpp:directive pos:line="16339" pos:column="2">if</cpp:directive> <expr><call><name pos:line="16339" pos:column="5">defined</name><argument_list pos:line="16339" pos:column="12">(<argument><expr><name pos:line="16339" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="16339" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="16339" pos:column="29">!</op:operator><call><name pos:line="16339" pos:column="30">defined</name><argument_list pos:line="16339" pos:column="37">(<argument><expr><name pos:line="16339" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="16341" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="16341" pos:column="19">(<argument pos:line="16341" pos:column="20">"82C9DBF2-1DA8-4ED6-A5EC-8B876B46317C"</argument>)</argument_list></macro>
    <label><name pos:line="16342" pos:column="5">ToolBoxItem2</name> :</label> <expr_stmt><expr pos:line="16342" pos:column="20">public <name pos:line="16342" pos:column="27">ToolBoxItem</name>
    <block pos:line="16343" pos:column="5">{
    <expr pos:line="16344" pos:column="5">public<op:operator pos:line="16344" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="16345" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="16345" pos:column="81">HRESULT</name> <name pos:line="16345" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="16345" pos:column="107">get_Data</name><argument_list pos:line="16345" pos:column="115">( 
            <comment type="block" pos:line="16346" pos:column="13">/* [retval][out] */</comment> <argument pos:line="16346" pos:column="33">__RPC__out VARIANT *pData</argument>)</argument_list></macro> <op:operator pos:line="16346" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="16346" pos:column="62">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="16350" pos:column="1">#<cpp:directive pos:line="16350" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="16350" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="16352" pos:column="5">typedef <type><struct pos:line="16352" pos:column="13">struct <name pos:line="16352" pos:column="20">ToolBoxItem2Vtbl</name>
    <block pos:line="16353" pos:column="5">{<public type="default" pos:line="16353" pos:column="6">
        <decl_stmt><decl><type><name pos:line="16354" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="16356" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="16356" pos:column="46">HRESULT</name></type> ( <name pos:line="16356" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16356" pos:column="74">*</type:modifier><name pos:line="16356" pos:column="75">QueryInterface</name> )<parameter_list pos:line="16356" pos:column="91">( 
            <param><decl><type><name pos:line="16357" pos:column="13">ToolBoxItem2</name> <type:modifier pos:line="16357" pos:column="26">*</type:modifier></type> <name pos:line="16357" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="16358" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="16358" pos:column="47">struct <name pos:line="16358" pos:column="54">GUID</name> <type:modifier pos:line="16358" pos:column="59">*</type:modifier></type><name pos:line="16358" pos:column="60">riid</name></decl><op:operator pos:line="16358" pos:column="64">,</op:operator>
            <comment type="block" pos:line="16359" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16359" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="16359" pos:column="59">void</name> <type:modifier pos:line="16359" pos:column="64">*</type:modifier><type:modifier pos:line="16359" pos:column="65">*</type:modifier><name pos:line="16359" pos:column="66">ppvObj</name><op:operator pos:line="16359" pos:column="72">,</op:operator>
            <comment type="block" pos:line="16360" pos:column="13">/* [retval][out] */</comment> <name pos:line="16360" pos:column="33">__RPC__out</name> <name pos:line="16360" pos:column="44">void</name> <type:modifier pos:line="16360" pos:column="49">*</type:modifier><name pos:line="16360" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="16362" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="16362" pos:column="46">HRESULT</name></type> ( <name pos:line="16362" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16362" pos:column="74">*</type:modifier><name pos:line="16362" pos:column="75">AddRef</name> )<parameter_list pos:line="16362" pos:column="83">( 
            <param><decl><type><name pos:line="16363" pos:column="13">ToolBoxItem2</name> <type:modifier pos:line="16363" pos:column="26">*</type:modifier></type> <name pos:line="16363" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="16364" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16364" pos:column="33">__RPC__out</name> <name pos:line="16364" pos:column="44">unsigned</name> <name pos:line="16364" pos:column="53">long</name> <type:modifier pos:line="16364" pos:column="58">*</type:modifier></type><name pos:line="16364" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16366" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="16366" pos:column="46">HRESULT</name></type> ( <name pos:line="16366" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16366" pos:column="74">*</type:modifier><name pos:line="16366" pos:column="75">Release</name> )<parameter_list pos:line="16366" pos:column="84">( 
            <param><decl><type><name pos:line="16367" pos:column="13">ToolBoxItem2</name> <type:modifier pos:line="16367" pos:column="26">*</type:modifier></type> <name pos:line="16367" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="16368" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16368" pos:column="33">__RPC__out</name> <name pos:line="16368" pos:column="44">unsigned</name> <name pos:line="16368" pos:column="53">long</name> <type:modifier pos:line="16368" pos:column="58">*</type:modifier></type><name pos:line="16368" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16370" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="16370" pos:column="46">HRESULT</name></type> ( <name pos:line="16370" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16370" pos:column="74">*</type:modifier><name pos:line="16370" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="16370" pos:column="93">( 
            <param><decl><type><name pos:line="16371" pos:column="13">ToolBoxItem2</name> <type:modifier pos:line="16371" pos:column="26">*</type:modifier></type> <name pos:line="16371" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="16372" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="16372" pos:column="38">__RPC__out</name> <name pos:line="16372" pos:column="49">unsigned</name> <name pos:line="16372" pos:column="58">UINT</name> <type:modifier pos:line="16372" pos:column="63">*</type:modifier></type><name pos:line="16372" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="16373" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16373" pos:column="33">__RPC__out</name> <name pos:line="16373" pos:column="44">void</name> <type:modifier pos:line="16373" pos:column="49">*</type:modifier></type><name pos:line="16373" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16375" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="16375" pos:column="46">HRESULT</name></type> ( <name pos:line="16375" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16375" pos:column="74">*</type:modifier><name pos:line="16375" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="16375" pos:column="88">( 
            <param><decl><type><name pos:line="16376" pos:column="13">ToolBoxItem2</name> <type:modifier pos:line="16376" pos:column="26">*</type:modifier></type> <name pos:line="16376" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="16377" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="16377" pos:column="37">unsigned</name> <name pos:line="16377" pos:column="46">UINT</name></type> <name pos:line="16377" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="16378" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="16378" pos:column="37">unsigned</name> <name pos:line="16378" pos:column="46">long</name></type> <name pos:line="16378" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="16379" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="16379" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="16379" pos:column="59">void</name> <type:modifier pos:line="16379" pos:column="64">*</type:modifier><type:modifier pos:line="16379" pos:column="65">*</type:modifier></type><name pos:line="16379" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="16380" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16380" pos:column="33">__RPC__out</name> <name pos:line="16380" pos:column="44">void</name> <type:modifier pos:line="16380" pos:column="49">*</type:modifier></type><name pos:line="16380" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16382" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="16382" pos:column="46">HRESULT</name> <argument_list pos:line="16382" pos:column="54">( <argument pos:line="16382" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16382" pos:column="90">(</op:operator> 
            <name pos:line="16383" pos:column="13">ToolBoxItem2</name> <op:operator pos:line="16383" pos:column="26">*</op:operator> <name pos:line="16383" pos:column="28">This</name><op:operator pos:line="16383" pos:column="32">,</op:operator>
            <comment type="block" pos:line="16384" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16384" pos:column="37">__RPC__in</name> struct <name pos:line="16384" pos:column="54">GUID</name> <op:operator pos:line="16384" pos:column="59">*</op:operator><name pos:line="16384" pos:column="60">riid</name><op:operator pos:line="16384" pos:column="64">,</op:operator>
            <comment type="block" pos:line="16385" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16385" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="16385" pos:column="57">signed</name> <name pos:line="16385" pos:column="64">char</name> <op:operator pos:line="16385" pos:column="69">*</op:operator><op:operator pos:line="16385" pos:column="70">*</op:operator><name pos:line="16385" pos:column="71">rgszNames</name><op:operator pos:line="16385" pos:column="80">,</op:operator>
            <comment type="block" pos:line="16386" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16386" pos:column="37">unsigned</name> <name pos:line="16386" pos:column="46">UINT</name> <name pos:line="16386" pos:column="51">cNames</name><op:operator pos:line="16386" pos:column="57">,</op:operator>
            <comment type="block" pos:line="16387" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16387" pos:column="37">unsigned</name> <name pos:line="16387" pos:column="46">long</name> <name pos:line="16387" pos:column="51">lcid</name><op:operator pos:line="16387" pos:column="55">,</op:operator>
            <comment type="block" pos:line="16388" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16388" pos:column="38">__RPC__out</name> <name pos:line="16388" pos:column="49">signed</name> <name pos:line="16388" pos:column="56">long</name> <op:operator pos:line="16388" pos:column="61">*</op:operator><name pos:line="16388" pos:column="62">rgdispid</name><op:operator pos:line="16388" pos:column="70">,</op:operator>
            <comment type="block" pos:line="16389" pos:column="13">/* [retval][out] */</comment> <name pos:line="16389" pos:column="33">__RPC__out</name> <name pos:line="16389" pos:column="44">void</name> <op:operator pos:line="16389" pos:column="49">*</op:operator><name pos:line="16389" pos:column="50">retval</name><op:operator pos:line="16389" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="16391" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="16391" pos:column="46">HRESULT</name> <argument_list pos:line="16391" pos:column="54">( <argument pos:line="16391" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16391" pos:column="83">(</op:operator> 
            <name pos:line="16392" pos:column="13">ToolBoxItem2</name> <op:operator pos:line="16392" pos:column="26">*</op:operator> <name pos:line="16392" pos:column="28">This</name><op:operator pos:line="16392" pos:column="32">,</op:operator>
            <comment type="block" pos:line="16393" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16393" pos:column="37">signed</name> <name pos:line="16393" pos:column="44">long</name> <name pos:line="16393" pos:column="49">dispidMember</name><op:operator pos:line="16393" pos:column="61">,</op:operator>
            <comment type="block" pos:line="16394" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16394" pos:column="37">__RPC__in</name> struct <name pos:line="16394" pos:column="54">GUID</name> <op:operator pos:line="16394" pos:column="59">*</op:operator><name pos:line="16394" pos:column="60">riid</name><op:operator pos:line="16394" pos:column="64">,</op:operator>
            <comment type="block" pos:line="16395" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16395" pos:column="37">unsigned</name> <name pos:line="16395" pos:column="46">long</name> <name pos:line="16395" pos:column="51">lcid</name><op:operator pos:line="16395" pos:column="55">,</op:operator>
            <comment type="block" pos:line="16396" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16396" pos:column="37">unsigned</name> <name pos:line="16396" pos:column="46">short</name> <name pos:line="16396" pos:column="52">wFlags</name><op:operator pos:line="16396" pos:column="58">,</op:operator>
            <comment type="block" pos:line="16397" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16397" pos:column="37">__RPC__in</name> struct <name pos:line="16397" pos:column="54">DISPPARAMS</name> <op:operator pos:line="16397" pos:column="65">*</op:operator><name pos:line="16397" pos:column="66">pdispparams</name><op:operator pos:line="16397" pos:column="77">,</op:operator>
            <comment type="block" pos:line="16398" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16398" pos:column="38">__RPC__out</name> <name pos:line="16398" pos:column="49">VARIANT</name> <op:operator pos:line="16398" pos:column="57">*</op:operator><name pos:line="16398" pos:column="58">pvarResult</name><op:operator pos:line="16398" pos:column="68">,</op:operator>
            <comment type="block" pos:line="16399" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16399" pos:column="38">__RPC__out</name> struct <name pos:line="16399" pos:column="56">EXCEPINFO</name> <op:operator pos:line="16399" pos:column="66">*</op:operator><name pos:line="16399" pos:column="67">pexcepinfo</name><op:operator pos:line="16399" pos:column="77">,</op:operator>
            <comment type="block" pos:line="16400" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16400" pos:column="38">__RPC__out</name> <name pos:line="16400" pos:column="49">unsigned</name> <name pos:line="16400" pos:column="58">UINT</name> <op:operator pos:line="16400" pos:column="63">*</op:operator><name pos:line="16400" pos:column="64">puArgErr</name><op:operator pos:line="16400" pos:column="72">,</op:operator>
            <comment type="block" pos:line="16401" pos:column="13">/* [retval][out] */</comment> <name pos:line="16401" pos:column="33">__RPC__out</name> <name pos:line="16401" pos:column="44">void</name> <op:operator pos:line="16401" pos:column="49">*</op:operator><name pos:line="16401" pos:column="50">retval</name><op:operator pos:line="16401" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="16403" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="16403" pos:column="43">HRESULT</name></type> ( <name pos:line="16403" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16403" pos:column="71">*</type:modifier><name pos:line="16403" pos:column="72">get_Name</name> )<parameter_list pos:line="16403" pos:column="82">( 
            <param><decl><type><name pos:line="16404" pos:column="13">ToolBoxItem2</name> <type:modifier pos:line="16404" pos:column="26">*</type:modifier></type> <name pos:line="16404" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="16405" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16405" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="16405" pos:column="54">BSTR</name> <type:modifier pos:line="16405" pos:column="59">*</type:modifier></type><name pos:line="16405" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16407" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="16407" pos:column="43">HRESULT</name></type> ( <name pos:line="16407" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16407" pos:column="71">*</type:modifier><name pos:line="16407" pos:column="72">put_Name</name> )<parameter_list pos:line="16407" pos:column="82">( 
            <param><decl><type><name pos:line="16408" pos:column="13">ToolBoxItem2</name> <type:modifier pos:line="16408" pos:column="26">*</type:modifier></type> <name pos:line="16408" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="16409" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="16409" pos:column="37">__RPC__in</name> <name pos:line="16409" pos:column="47">BSTR</name></type> <name pos:line="16409" pos:column="52">noname</name></decl></param>,
            <comment type="block" pos:line="16410" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16410" pos:column="33">__RPC__out</name> <name pos:line="16410" pos:column="44">void</name> <type:modifier pos:line="16410" pos:column="49">*</type:modifier></type><name pos:line="16410" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16412" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="16412" pos:column="43">HRESULT</name></type> ( <name pos:line="16412" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16412" pos:column="71">*</type:modifier><name pos:line="16412" pos:column="72">get_Collection</name> )<parameter_list pos:line="16412" pos:column="88">( 
            <param><decl><type><name pos:line="16413" pos:column="13">ToolBoxItem2</name> <type:modifier pos:line="16413" pos:column="26">*</type:modifier></type> <name pos:line="16413" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="16414" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16414" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="16414" pos:column="54">ToolBoxItems</name> <type:modifier pos:line="16414" pos:column="67">*</type:modifier><type:modifier pos:line="16414" pos:column="68">*</type:modifier></type><name pos:line="16414" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16416" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="16416" pos:column="43">HRESULT</name></type> ( <name pos:line="16416" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16416" pos:column="71">*</type:modifier><name pos:line="16416" pos:column="72">get_DTE</name> )<parameter_list pos:line="16416" pos:column="81">( 
            <param><decl><type><name pos:line="16417" pos:column="13">ToolBoxItem2</name> <type:modifier pos:line="16417" pos:column="26">*</type:modifier></type> <name pos:line="16417" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="16418" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16418" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="16418" pos:column="54">*</type:modifier><type:modifier pos:line="16418" pos:column="55">*</type:modifier></type><name pos:line="16418" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16420" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="16420" pos:column="34">HRESULT</name></type> ( <name pos:line="16420" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="16420" pos:column="62">*</type:modifier><name pos:line="16420" pos:column="63">Delete</name> )<parameter_list pos:line="16420" pos:column="71">( 
            <param><decl><type><name pos:line="16421" pos:column="13">ToolBoxItem2</name> <type:modifier pos:line="16421" pos:column="26">*</type:modifier></type> <name pos:line="16421" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="16422" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16422" pos:column="33">__RPC__out</name> <name pos:line="16422" pos:column="44">void</name> <type:modifier pos:line="16422" pos:column="49">*</type:modifier></type><name pos:line="16422" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16424" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="16424" pos:column="34">HRESULT</name></type> ( <name pos:line="16424" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="16424" pos:column="62">*</type:modifier><name pos:line="16424" pos:column="63">Select</name> )<parameter_list pos:line="16424" pos:column="71">( 
            <param><decl><type><name pos:line="16425" pos:column="13">ToolBoxItem2</name> <type:modifier pos:line="16425" pos:column="26">*</type:modifier></type> <name pos:line="16425" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="16426" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16426" pos:column="33">__RPC__out</name> <name pos:line="16426" pos:column="44">void</name> <type:modifier pos:line="16426" pos:column="49">*</type:modifier></type><name pos:line="16426" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16428" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="16428" pos:column="73">HRESULT</name></type> ( <name pos:line="16428" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="16428" pos:column="101">*</type:modifier><name pos:line="16428" pos:column="102">get_Data</name> )<parameter_list pos:line="16428" pos:column="112">( 
            <param><decl><type><name pos:line="16429" pos:column="13">ToolBoxItem2</name> <type:modifier pos:line="16429" pos:column="26">*</type:modifier></type> <name pos:line="16429" pos:column="28">This</name></decl></param>,
            <comment type="block" pos:line="16430" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16430" pos:column="33">__RPC__out</name> <name pos:line="16430" pos:column="44">VARIANT</name> <type:modifier pos:line="16430" pos:column="52">*</type:modifier></type><name pos:line="16430" pos:column="53">pData</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16432" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="16433" pos:column="7">ToolBoxItem2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="16435" pos:column="5">interface</name></type> <name pos:line="16435" pos:column="15">ToolBoxItem2</name>
    <argument_list pos:line="16436" pos:column="5">{
        <argument><expr><name pos:line="16437" pos:column="9">CONST_VTBL</name> struct <name pos:line="16437" pos:column="27">ToolBoxItem2Vtbl</name> <op:operator pos:line="16437" pos:column="44">*</op:operator><name pos:line="16437" pos:column="45">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="16442" pos:column="1">#<cpp:directive pos:line="16442" pos:column="2">ifdef</cpp:directive> <name pos:line="16442" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="16445" pos:column="1">#<cpp:directive pos:line="16445" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16445" pos:column="9">ToolBoxItem2_QueryInterface</name><parameter_list pos:line="16445" pos:column="36">(<param><type><name pos:line="16445" pos:column="37">This</name></type></param>,<param><type><name pos:line="16445" pos:column="42">riid</name></type></param>,<param><type><name pos:line="16445" pos:column="47">ppvObj</name></type></param>,<param><type><name pos:line="16445" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16446" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16448" pos:column="1">#<cpp:directive pos:line="16448" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16448" pos:column="9">ToolBoxItem2_AddRef</name><parameter_list pos:line="16448" pos:column="28">(<param><type><name pos:line="16448" pos:column="29">This</name></type></param>,<param><type><name pos:line="16448" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16449" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16451" pos:column="1">#<cpp:directive pos:line="16451" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16451" pos:column="9">ToolBoxItem2_Release</name><parameter_list pos:line="16451" pos:column="29">(<param><type><name pos:line="16451" pos:column="30">This</name></type></param>,<param><type><name pos:line="16451" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16452" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16454" pos:column="1">#<cpp:directive pos:line="16454" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16454" pos:column="9">ToolBoxItem2_GetTypeInfoCount</name><parameter_list pos:line="16454" pos:column="38">(<param><type><name pos:line="16454" pos:column="39">This</name></type></param>,<param><type><name pos:line="16454" pos:column="44">pctinfo</name></type></param>,<param><type><name pos:line="16454" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16455" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16457" pos:column="1">#<cpp:directive pos:line="16457" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16457" pos:column="9">ToolBoxItem2_GetTypeInfo</name><parameter_list pos:line="16457" pos:column="33">(<param><type><name pos:line="16457" pos:column="34">This</name></type></param>,<param><type><name pos:line="16457" pos:column="39">itinfo</name></type></param>,<param><type><name pos:line="16457" pos:column="46">lcid</name></type></param>,<param><type><name pos:line="16457" pos:column="51">pptinfo</name></type></param>,<param><type><name pos:line="16457" pos:column="59">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16458" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16460" pos:column="1">#<cpp:directive pos:line="16460" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16460" pos:column="9">ToolBoxItem2_GetIDsOfNames</name><parameter_list pos:line="16460" pos:column="35">(<param><type><name pos:line="16460" pos:column="36">This</name></type></param>,<param><type><name pos:line="16460" pos:column="41">riid</name></type></param>,<param><type><name pos:line="16460" pos:column="46">rgszNames</name></type></param>,<param><type><name pos:line="16460" pos:column="56">cNames</name></type></param>,<param><type><name pos:line="16460" pos:column="63">lcid</name></type></param>,<param><type><name pos:line="16460" pos:column="68">rgdispid</name></type></param>,<param><type><name pos:line="16460" pos:column="77">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16461" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16463" pos:column="1">#<cpp:directive pos:line="16463" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16463" pos:column="9">ToolBoxItem2_Invoke</name><parameter_list pos:line="16463" pos:column="28">(<param><type><name pos:line="16463" pos:column="29">This</name></type></param>,<param><type><name pos:line="16463" pos:column="34">dispidMember</name></type></param>,<param><type><name pos:line="16463" pos:column="47">riid</name></type></param>,<param><type><name pos:line="16463" pos:column="52">lcid</name></type></param>,<param><type><name pos:line="16463" pos:column="57">wFlags</name></type></param>,<param><type><name pos:line="16463" pos:column="64">pdispparams</name></type></param>,<param><type><name pos:line="16463" pos:column="76">pvarResult</name></type></param>,<param><type><name pos:line="16463" pos:column="87">pexcepinfo</name></type></param>,<param><type><name pos:line="16463" pos:column="98">puArgErr</name></type></param>,<param><type><name pos:line="16463" pos:column="107">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16464" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16466" pos:column="1">#<cpp:directive pos:line="16466" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16466" pos:column="9">ToolBoxItem2_get_Name</name><parameter_list pos:line="16466" pos:column="30">(<param><type><name pos:line="16466" pos:column="31">This</name></type></param>,<param><type><name pos:line="16466" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16467" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16469" pos:column="1">#<cpp:directive pos:line="16469" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16469" pos:column="9">ToolBoxItem2_put_Name</name><parameter_list pos:line="16469" pos:column="30">(<param><type><name pos:line="16469" pos:column="31">This</name></type></param>,<param><type><name pos:line="16469" pos:column="36">noname</name></type></param>,<param><type><name pos:line="16469" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16470" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16472" pos:column="1">#<cpp:directive pos:line="16472" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16472" pos:column="9">ToolBoxItem2_get_Collection</name><parameter_list pos:line="16472" pos:column="36">(<param><type><name pos:line="16472" pos:column="37">This</name></type></param>,<param><type><name pos:line="16472" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16473" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16475" pos:column="1">#<cpp:directive pos:line="16475" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16475" pos:column="9">ToolBoxItem2_get_DTE</name><parameter_list pos:line="16475" pos:column="29">(<param><type><name pos:line="16475" pos:column="30">This</name></type></param>,<param><type><name pos:line="16475" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16476" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16478" pos:column="1">#<cpp:directive pos:line="16478" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16478" pos:column="9">ToolBoxItem2_Delete</name><parameter_list pos:line="16478" pos:column="28">(<param><type><name pos:line="16478" pos:column="29">This</name></type></param>,<param><type><name pos:line="16478" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16479" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16481" pos:column="1">#<cpp:directive pos:line="16481" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16481" pos:column="9">ToolBoxItem2_Select</name><parameter_list pos:line="16481" pos:column="28">(<param><type><name pos:line="16481" pos:column="29">This</name></type></param>,<param><type><name pos:line="16481" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16482" pos:column="5">( (This)-&gt;lpVtbl -&gt; Select(This,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="16485" pos:column="1">#<cpp:directive pos:line="16485" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16485" pos:column="9">ToolBoxItem2_get_Data</name><parameter_list pos:line="16485" pos:column="30">(<param><type><name pos:line="16485" pos:column="31">This</name></type></param>,<param><type><name pos:line="16485" pos:column="36">pData</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16486" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Data(This,pData) )</cpp:value></cpp:define> 

<cpp:endif pos:line="16488" pos:column="1">#<cpp:directive pos:line="16488" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="16488" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="16491" pos:column="1">#<cpp:directive pos:line="16491" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16491" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="16496" pos:column="1">#<cpp:directive pos:line="16496" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16496" pos:column="9">/* __ToolBoxItem2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="16499" pos:column="1">#<cpp:directive pos:line="16499" pos:column="2">ifndef</cpp:directive> <name pos:line="16499" pos:column="9">__ToolBoxTab2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="16500" pos:column="1">#<cpp:directive pos:line="16500" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16500" pos:column="9">__ToolBoxTab2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="16502" pos:column="1">/* interface ToolBoxTab2 */</comment>
<comment type="block" pos:line="16503" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="16506" pos:column="1">EXTERN_C</name> <specifier pos:line="16506" pos:column="10">const</specifier> <name pos:line="16506" pos:column="16">IID</name></type> <name pos:line="16506" pos:column="20">IID_ToolBoxTab2</name></decl>;</decl_stmt>

<cpp:if pos:line="16508" pos:column="1">#<cpp:directive pos:line="16508" pos:column="2">if</cpp:directive> <expr><call><name pos:line="16508" pos:column="5">defined</name><argument_list pos:line="16508" pos:column="12">(<argument><expr><name pos:line="16508" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="16508" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="16508" pos:column="29">!</op:operator><call><name pos:line="16508" pos:column="30">defined</name><argument_list pos:line="16508" pos:column="37">(<argument><expr><name pos:line="16508" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="16510" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="16510" pos:column="19">(<argument pos:line="16510" pos:column="20">"A64715CB-85D7-41c3-8E71-2302D4EEBC34"</argument>)</argument_list></macro>
    <label><name pos:line="16511" pos:column="5">ToolBoxTab2</name> :</label> <expr_stmt><expr pos:line="16511" pos:column="19">public <name pos:line="16511" pos:column="26">ToolBoxTab</name>
    <block pos:line="16512" pos:column="5">{
    <expr pos:line="16513" pos:column="5">public<op:operator pos:line="16513" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="16514" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="16514" pos:column="81">HRESULT</name> <name pos:line="16514" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="16514" pos:column="107">get_UniqueID</name><argument_list pos:line="16514" pos:column="119">( 
            <comment type="block" pos:line="16515" pos:column="13">/* [retval][out] */</comment> <argument pos:line="16515" pos:column="33">__RPC__deref_out_opt BSTR *pbstrID</argument>)</argument_list></macro> <op:operator pos:line="16515" pos:column="69">=</op:operator> <lit:literal type="number" pos:line="16515" pos:column="71">0</lit:literal></expr>;
        
        <expr pos:line="16517" pos:column="9">virtual <comment type="block" pos:line="16517" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <name pos:line="16517" pos:column="81">HRESULT</name> <name pos:line="16517" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="16517" pos:column="107">put_UniqueID</name><argument_list pos:line="16517" pos:column="119">( 
            <comment type="block" pos:line="16518" pos:column="13">/* [in] */</comment> <argument pos:line="16518" pos:column="24">__RPC__in BSTR bstrID</argument>)</argument_list></macro> <op:operator pos:line="16518" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="16518" pos:column="49">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="16522" pos:column="1">#<cpp:directive pos:line="16522" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="16522" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="16524" pos:column="5">typedef <type><struct pos:line="16524" pos:column="13">struct <name pos:line="16524" pos:column="20">ToolBoxTab2Vtbl</name>
    <block pos:line="16525" pos:column="5">{<public type="default" pos:line="16525" pos:column="6">
        <decl_stmt><decl><type><name pos:line="16526" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="16528" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="16528" pos:column="46">HRESULT</name></type> ( <name pos:line="16528" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16528" pos:column="74">*</type:modifier><name pos:line="16528" pos:column="75">QueryInterface</name> )<parameter_list pos:line="16528" pos:column="91">( 
            <param><decl><type><name pos:line="16529" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16529" pos:column="25">*</type:modifier></type> <name pos:line="16529" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16530" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="16530" pos:column="47">struct <name pos:line="16530" pos:column="54">GUID</name> <type:modifier pos:line="16530" pos:column="59">*</type:modifier></type><name pos:line="16530" pos:column="60">riid</name></decl><op:operator pos:line="16530" pos:column="64">,</op:operator>
            <comment type="block" pos:line="16531" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16531" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="16531" pos:column="59">void</name> <type:modifier pos:line="16531" pos:column="64">*</type:modifier><type:modifier pos:line="16531" pos:column="65">*</type:modifier><name pos:line="16531" pos:column="66">ppvObj</name><op:operator pos:line="16531" pos:column="72">,</op:operator>
            <comment type="block" pos:line="16532" pos:column="13">/* [retval][out] */</comment> <name pos:line="16532" pos:column="33">__RPC__out</name> <name pos:line="16532" pos:column="44">void</name> <type:modifier pos:line="16532" pos:column="49">*</type:modifier><name pos:line="16532" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="16534" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="16534" pos:column="46">HRESULT</name></type> ( <name pos:line="16534" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16534" pos:column="74">*</type:modifier><name pos:line="16534" pos:column="75">AddRef</name> )<parameter_list pos:line="16534" pos:column="83">( 
            <param><decl><type><name pos:line="16535" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16535" pos:column="25">*</type:modifier></type> <name pos:line="16535" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16536" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16536" pos:column="33">__RPC__out</name> <name pos:line="16536" pos:column="44">unsigned</name> <name pos:line="16536" pos:column="53">long</name> <type:modifier pos:line="16536" pos:column="58">*</type:modifier></type><name pos:line="16536" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16538" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="16538" pos:column="46">HRESULT</name></type> ( <name pos:line="16538" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16538" pos:column="74">*</type:modifier><name pos:line="16538" pos:column="75">Release</name> )<parameter_list pos:line="16538" pos:column="84">( 
            <param><decl><type><name pos:line="16539" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16539" pos:column="25">*</type:modifier></type> <name pos:line="16539" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16540" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16540" pos:column="33">__RPC__out</name> <name pos:line="16540" pos:column="44">unsigned</name> <name pos:line="16540" pos:column="53">long</name> <type:modifier pos:line="16540" pos:column="58">*</type:modifier></type><name pos:line="16540" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16542" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="16542" pos:column="46">HRESULT</name></type> ( <name pos:line="16542" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16542" pos:column="74">*</type:modifier><name pos:line="16542" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="16542" pos:column="93">( 
            <param><decl><type><name pos:line="16543" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16543" pos:column="25">*</type:modifier></type> <name pos:line="16543" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16544" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="16544" pos:column="38">__RPC__out</name> <name pos:line="16544" pos:column="49">unsigned</name> <name pos:line="16544" pos:column="58">UINT</name> <type:modifier pos:line="16544" pos:column="63">*</type:modifier></type><name pos:line="16544" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="16545" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16545" pos:column="33">__RPC__out</name> <name pos:line="16545" pos:column="44">void</name> <type:modifier pos:line="16545" pos:column="49">*</type:modifier></type><name pos:line="16545" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16547" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="16547" pos:column="46">HRESULT</name></type> ( <name pos:line="16547" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16547" pos:column="74">*</type:modifier><name pos:line="16547" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="16547" pos:column="88">( 
            <param><decl><type><name pos:line="16548" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16548" pos:column="25">*</type:modifier></type> <name pos:line="16548" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16549" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="16549" pos:column="37">unsigned</name> <name pos:line="16549" pos:column="46">UINT</name></type> <name pos:line="16549" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="16550" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="16550" pos:column="37">unsigned</name> <name pos:line="16550" pos:column="46">long</name></type> <name pos:line="16550" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="16551" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="16551" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="16551" pos:column="59">void</name> <type:modifier pos:line="16551" pos:column="64">*</type:modifier><type:modifier pos:line="16551" pos:column="65">*</type:modifier></type><name pos:line="16551" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="16552" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16552" pos:column="33">__RPC__out</name> <name pos:line="16552" pos:column="44">void</name> <type:modifier pos:line="16552" pos:column="49">*</type:modifier></type><name pos:line="16552" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16554" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="16554" pos:column="46">HRESULT</name> <argument_list pos:line="16554" pos:column="54">( <argument pos:line="16554" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16554" pos:column="90">(</op:operator> 
            <name pos:line="16555" pos:column="13">ToolBoxTab2</name> <op:operator pos:line="16555" pos:column="25">*</op:operator> <name pos:line="16555" pos:column="27">This</name><op:operator pos:line="16555" pos:column="31">,</op:operator>
            <comment type="block" pos:line="16556" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16556" pos:column="37">__RPC__in</name> struct <name pos:line="16556" pos:column="54">GUID</name> <op:operator pos:line="16556" pos:column="59">*</op:operator><name pos:line="16556" pos:column="60">riid</name><op:operator pos:line="16556" pos:column="64">,</op:operator>
            <comment type="block" pos:line="16557" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16557" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="16557" pos:column="57">signed</name> <name pos:line="16557" pos:column="64">char</name> <op:operator pos:line="16557" pos:column="69">*</op:operator><op:operator pos:line="16557" pos:column="70">*</op:operator><name pos:line="16557" pos:column="71">rgszNames</name><op:operator pos:line="16557" pos:column="80">,</op:operator>
            <comment type="block" pos:line="16558" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16558" pos:column="37">unsigned</name> <name pos:line="16558" pos:column="46">UINT</name> <name pos:line="16558" pos:column="51">cNames</name><op:operator pos:line="16558" pos:column="57">,</op:operator>
            <comment type="block" pos:line="16559" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16559" pos:column="37">unsigned</name> <name pos:line="16559" pos:column="46">long</name> <name pos:line="16559" pos:column="51">lcid</name><op:operator pos:line="16559" pos:column="55">,</op:operator>
            <comment type="block" pos:line="16560" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16560" pos:column="38">__RPC__out</name> <name pos:line="16560" pos:column="49">signed</name> <name pos:line="16560" pos:column="56">long</name> <op:operator pos:line="16560" pos:column="61">*</op:operator><name pos:line="16560" pos:column="62">rgdispid</name><op:operator pos:line="16560" pos:column="70">,</op:operator>
            <comment type="block" pos:line="16561" pos:column="13">/* [retval][out] */</comment> <name pos:line="16561" pos:column="33">__RPC__out</name> <name pos:line="16561" pos:column="44">void</name> <op:operator pos:line="16561" pos:column="49">*</op:operator><name pos:line="16561" pos:column="50">retval</name><op:operator pos:line="16561" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="16563" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="16563" pos:column="46">HRESULT</name> <argument_list pos:line="16563" pos:column="54">( <argument pos:line="16563" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16563" pos:column="83">(</op:operator> 
            <name pos:line="16564" pos:column="13">ToolBoxTab2</name> <op:operator pos:line="16564" pos:column="25">*</op:operator> <name pos:line="16564" pos:column="27">This</name><op:operator pos:line="16564" pos:column="31">,</op:operator>
            <comment type="block" pos:line="16565" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16565" pos:column="37">signed</name> <name pos:line="16565" pos:column="44">long</name> <name pos:line="16565" pos:column="49">dispidMember</name><op:operator pos:line="16565" pos:column="61">,</op:operator>
            <comment type="block" pos:line="16566" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16566" pos:column="37">__RPC__in</name> struct <name pos:line="16566" pos:column="54">GUID</name> <op:operator pos:line="16566" pos:column="59">*</op:operator><name pos:line="16566" pos:column="60">riid</name><op:operator pos:line="16566" pos:column="64">,</op:operator>
            <comment type="block" pos:line="16567" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16567" pos:column="37">unsigned</name> <name pos:line="16567" pos:column="46">long</name> <name pos:line="16567" pos:column="51">lcid</name><op:operator pos:line="16567" pos:column="55">,</op:operator>
            <comment type="block" pos:line="16568" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16568" pos:column="37">unsigned</name> <name pos:line="16568" pos:column="46">short</name> <name pos:line="16568" pos:column="52">wFlags</name><op:operator pos:line="16568" pos:column="58">,</op:operator>
            <comment type="block" pos:line="16569" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16569" pos:column="37">__RPC__in</name> struct <name pos:line="16569" pos:column="54">DISPPARAMS</name> <op:operator pos:line="16569" pos:column="65">*</op:operator><name pos:line="16569" pos:column="66">pdispparams</name><op:operator pos:line="16569" pos:column="77">,</op:operator>
            <comment type="block" pos:line="16570" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16570" pos:column="38">__RPC__out</name> <name pos:line="16570" pos:column="49">VARIANT</name> <op:operator pos:line="16570" pos:column="57">*</op:operator><name pos:line="16570" pos:column="58">pvarResult</name><op:operator pos:line="16570" pos:column="68">,</op:operator>
            <comment type="block" pos:line="16571" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16571" pos:column="38">__RPC__out</name> struct <name pos:line="16571" pos:column="56">EXCEPINFO</name> <op:operator pos:line="16571" pos:column="66">*</op:operator><name pos:line="16571" pos:column="67">pexcepinfo</name><op:operator pos:line="16571" pos:column="77">,</op:operator>
            <comment type="block" pos:line="16572" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16572" pos:column="38">__RPC__out</name> <name pos:line="16572" pos:column="49">unsigned</name> <name pos:line="16572" pos:column="58">UINT</name> <op:operator pos:line="16572" pos:column="63">*</op:operator><name pos:line="16572" pos:column="64">puArgErr</name><op:operator pos:line="16572" pos:column="72">,</op:operator>
            <comment type="block" pos:line="16573" pos:column="13">/* [retval][out] */</comment> <name pos:line="16573" pos:column="33">__RPC__out</name> <name pos:line="16573" pos:column="44">void</name> <op:operator pos:line="16573" pos:column="49">*</op:operator><name pos:line="16573" pos:column="50">retval</name><op:operator pos:line="16573" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="16575" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="16575" pos:column="43">HRESULT</name></type> ( <name pos:line="16575" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16575" pos:column="71">*</type:modifier><name pos:line="16575" pos:column="72">get_Name</name> )<parameter_list pos:line="16575" pos:column="82">( 
            <param><decl><type><name pos:line="16576" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16576" pos:column="25">*</type:modifier></type> <name pos:line="16576" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16577" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16577" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="16577" pos:column="54">BSTR</name> <type:modifier pos:line="16577" pos:column="59">*</type:modifier></type><name pos:line="16577" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16579" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="16579" pos:column="43">HRESULT</name></type> ( <name pos:line="16579" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16579" pos:column="71">*</type:modifier><name pos:line="16579" pos:column="72">put_Name</name> )<parameter_list pos:line="16579" pos:column="82">( 
            <param><decl><type><name pos:line="16580" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16580" pos:column="25">*</type:modifier></type> <name pos:line="16580" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16581" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="16581" pos:column="37">__RPC__in</name> <name pos:line="16581" pos:column="47">BSTR</name></type> <name pos:line="16581" pos:column="52">noname</name></decl></param>,
            <comment type="block" pos:line="16582" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16582" pos:column="33">__RPC__out</name> <name pos:line="16582" pos:column="44">void</name> <type:modifier pos:line="16582" pos:column="49">*</type:modifier></type><name pos:line="16582" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16584" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="16584" pos:column="43">HRESULT</name></type> ( <name pos:line="16584" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16584" pos:column="71">*</type:modifier><name pos:line="16584" pos:column="72">get_Collection</name> )<parameter_list pos:line="16584" pos:column="88">( 
            <param><decl><type><name pos:line="16585" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16585" pos:column="25">*</type:modifier></type> <name pos:line="16585" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16586" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16586" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="16586" pos:column="54">ToolBoxTabs</name> <type:modifier pos:line="16586" pos:column="66">*</type:modifier><type:modifier pos:line="16586" pos:column="67">*</type:modifier></type><name pos:line="16586" pos:column="68">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16588" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="16588" pos:column="43">HRESULT</name></type> ( <name pos:line="16588" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16588" pos:column="71">*</type:modifier><name pos:line="16588" pos:column="72">get_DTE</name> )<parameter_list pos:line="16588" pos:column="81">( 
            <param><decl><type><name pos:line="16589" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16589" pos:column="25">*</type:modifier></type> <name pos:line="16589" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16590" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16590" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="16590" pos:column="54">*</type:modifier><type:modifier pos:line="16590" pos:column="55">*</type:modifier></type><name pos:line="16590" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16592" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="16592" pos:column="34">HRESULT</name></type> ( <name pos:line="16592" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="16592" pos:column="62">*</type:modifier><name pos:line="16592" pos:column="63">Activate</name> )<parameter_list pos:line="16592" pos:column="73">( 
            <param><decl><type><name pos:line="16593" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16593" pos:column="25">*</type:modifier></type> <name pos:line="16593" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16594" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16594" pos:column="33">__RPC__out</name> <name pos:line="16594" pos:column="44">void</name> <type:modifier pos:line="16594" pos:column="49">*</type:modifier></type><name pos:line="16594" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16596" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="16596" pos:column="34">HRESULT</name></type> ( <name pos:line="16596" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="16596" pos:column="62">*</type:modifier><name pos:line="16596" pos:column="63">Delete</name> )<parameter_list pos:line="16596" pos:column="71">( 
            <param><decl><type><name pos:line="16597" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16597" pos:column="25">*</type:modifier></type> <name pos:line="16597" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16598" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16598" pos:column="33">__RPC__out</name> <name pos:line="16598" pos:column="44">void</name> <type:modifier pos:line="16598" pos:column="49">*</type:modifier></type><name pos:line="16598" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16600" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="16600" pos:column="43">HRESULT</name></type> ( <name pos:line="16600" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16600" pos:column="71">*</type:modifier><name pos:line="16600" pos:column="72">get_ToolBoxItems</name> )<parameter_list pos:line="16600" pos:column="90">( 
            <param><decl><type><name pos:line="16601" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16601" pos:column="25">*</type:modifier></type> <name pos:line="16601" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16602" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16602" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="16602" pos:column="54">ToolBoxItems</name> <type:modifier pos:line="16602" pos:column="67">*</type:modifier><type:modifier pos:line="16602" pos:column="68">*</type:modifier></type><name pos:line="16602" pos:column="69">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16604" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="16604" pos:column="43">HRESULT</name></type> ( <name pos:line="16604" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16604" pos:column="71">*</type:modifier><name pos:line="16604" pos:column="72">get_ListView</name> )<parameter_list pos:line="16604" pos:column="86">( 
            <param><decl><type><name pos:line="16605" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16605" pos:column="25">*</type:modifier></type> <name pos:line="16605" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16606" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16606" pos:column="33">__RPC__out</name> <name pos:line="16606" pos:column="44">BOOLEAN</name> <type:modifier pos:line="16606" pos:column="52">*</type:modifier></type><name pos:line="16606" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16608" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="16608" pos:column="43">HRESULT</name></type> ( <name pos:line="16608" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16608" pos:column="71">*</type:modifier><name pos:line="16608" pos:column="72">put_ListView</name> )<parameter_list pos:line="16608" pos:column="86">( 
            <param><decl><type><name pos:line="16609" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16609" pos:column="25">*</type:modifier></type> <name pos:line="16609" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16610" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="16610" pos:column="37">BOOLEAN</name></type> <name pos:line="16610" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="16611" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16611" pos:column="33">__RPC__out</name> <name pos:line="16611" pos:column="44">void</name> <type:modifier pos:line="16611" pos:column="49">*</type:modifier></type><name pos:line="16611" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16613" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="16613" pos:column="73">HRESULT</name></type> ( <name pos:line="16613" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="16613" pos:column="101">*</type:modifier><name pos:line="16613" pos:column="102">get_UniqueID</name> )<parameter_list pos:line="16613" pos:column="116">( 
            <param><decl><type><name pos:line="16614" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16614" pos:column="25">*</type:modifier></type> <name pos:line="16614" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16615" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16615" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="16615" pos:column="54">BSTR</name> <type:modifier pos:line="16615" pos:column="59">*</type:modifier></type><name pos:line="16615" pos:column="60">pbstrID</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16617" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propput][id] */</comment> <function_decl><type><name pos:line="16617" pos:column="73">HRESULT</name></type> ( <name pos:line="16617" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="16617" pos:column="101">*</type:modifier><name pos:line="16617" pos:column="102">put_UniqueID</name> )<parameter_list pos:line="16617" pos:column="116">( 
            <param><decl><type><name pos:line="16618" pos:column="13">ToolBoxTab2</name> <type:modifier pos:line="16618" pos:column="25">*</type:modifier></type> <name pos:line="16618" pos:column="27">This</name></decl></param>,
            <comment type="block" pos:line="16619" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16619" pos:column="24">__RPC__in</name> <name pos:line="16619" pos:column="34">BSTR</name></type> <name pos:line="16619" pos:column="39">bstrID</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16621" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="16622" pos:column="7">ToolBoxTab2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="16624" pos:column="5">interface</name></type> <name pos:line="16624" pos:column="15">ToolBoxTab2</name>
    <argument_list pos:line="16625" pos:column="5">{
        <argument><expr><name pos:line="16626" pos:column="9">CONST_VTBL</name> struct <name pos:line="16626" pos:column="27">ToolBoxTab2Vtbl</name> <op:operator pos:line="16626" pos:column="43">*</op:operator><name pos:line="16626" pos:column="44">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="16631" pos:column="1">#<cpp:directive pos:line="16631" pos:column="2">ifdef</cpp:directive> <name pos:line="16631" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="16634" pos:column="1">#<cpp:directive pos:line="16634" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16634" pos:column="9">ToolBoxTab2_QueryInterface</name><parameter_list pos:line="16634" pos:column="35">(<param><type><name pos:line="16634" pos:column="36">This</name></type></param>,<param><type><name pos:line="16634" pos:column="41">riid</name></type></param>,<param><type><name pos:line="16634" pos:column="46">ppvObj</name></type></param>,<param><type><name pos:line="16634" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16635" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16637" pos:column="1">#<cpp:directive pos:line="16637" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16637" pos:column="9">ToolBoxTab2_AddRef</name><parameter_list pos:line="16637" pos:column="27">(<param><type><name pos:line="16637" pos:column="28">This</name></type></param>,<param><type><name pos:line="16637" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16638" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16640" pos:column="1">#<cpp:directive pos:line="16640" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16640" pos:column="9">ToolBoxTab2_Release</name><parameter_list pos:line="16640" pos:column="28">(<param><type><name pos:line="16640" pos:column="29">This</name></type></param>,<param><type><name pos:line="16640" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16641" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16643" pos:column="1">#<cpp:directive pos:line="16643" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16643" pos:column="9">ToolBoxTab2_GetTypeInfoCount</name><parameter_list pos:line="16643" pos:column="37">(<param><type><name pos:line="16643" pos:column="38">This</name></type></param>,<param><type><name pos:line="16643" pos:column="43">pctinfo</name></type></param>,<param><type><name pos:line="16643" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16644" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16646" pos:column="1">#<cpp:directive pos:line="16646" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16646" pos:column="9">ToolBoxTab2_GetTypeInfo</name><parameter_list pos:line="16646" pos:column="32">(<param><type><name pos:line="16646" pos:column="33">This</name></type></param>,<param><type><name pos:line="16646" pos:column="38">itinfo</name></type></param>,<param><type><name pos:line="16646" pos:column="45">lcid</name></type></param>,<param><type><name pos:line="16646" pos:column="50">pptinfo</name></type></param>,<param><type><name pos:line="16646" pos:column="58">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16647" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16649" pos:column="1">#<cpp:directive pos:line="16649" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16649" pos:column="9">ToolBoxTab2_GetIDsOfNames</name><parameter_list pos:line="16649" pos:column="34">(<param><type><name pos:line="16649" pos:column="35">This</name></type></param>,<param><type><name pos:line="16649" pos:column="40">riid</name></type></param>,<param><type><name pos:line="16649" pos:column="45">rgszNames</name></type></param>,<param><type><name pos:line="16649" pos:column="55">cNames</name></type></param>,<param><type><name pos:line="16649" pos:column="62">lcid</name></type></param>,<param><type><name pos:line="16649" pos:column="67">rgdispid</name></type></param>,<param><type><name pos:line="16649" pos:column="76">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16650" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16652" pos:column="1">#<cpp:directive pos:line="16652" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16652" pos:column="9">ToolBoxTab2_Invoke</name><parameter_list pos:line="16652" pos:column="27">(<param><type><name pos:line="16652" pos:column="28">This</name></type></param>,<param><type><name pos:line="16652" pos:column="33">dispidMember</name></type></param>,<param><type><name pos:line="16652" pos:column="46">riid</name></type></param>,<param><type><name pos:line="16652" pos:column="51">lcid</name></type></param>,<param><type><name pos:line="16652" pos:column="56">wFlags</name></type></param>,<param><type><name pos:line="16652" pos:column="63">pdispparams</name></type></param>,<param><type><name pos:line="16652" pos:column="75">pvarResult</name></type></param>,<param><type><name pos:line="16652" pos:column="86">pexcepinfo</name></type></param>,<param><type><name pos:line="16652" pos:column="97">puArgErr</name></type></param>,<param><type><name pos:line="16652" pos:column="106">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16653" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16655" pos:column="1">#<cpp:directive pos:line="16655" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16655" pos:column="9">ToolBoxTab2_get_Name</name><parameter_list pos:line="16655" pos:column="29">(<param><type><name pos:line="16655" pos:column="30">This</name></type></param>,<param><type><name pos:line="16655" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16656" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16658" pos:column="1">#<cpp:directive pos:line="16658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16658" pos:column="9">ToolBoxTab2_put_Name</name><parameter_list pos:line="16658" pos:column="29">(<param><type><name pos:line="16658" pos:column="30">This</name></type></param>,<param><type><name pos:line="16658" pos:column="35">noname</name></type></param>,<param><type><name pos:line="16658" pos:column="42">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16659" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_Name(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16661" pos:column="1">#<cpp:directive pos:line="16661" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16661" pos:column="9">ToolBoxTab2_get_Collection</name><parameter_list pos:line="16661" pos:column="35">(<param><type><name pos:line="16661" pos:column="36">This</name></type></param>,<param><type><name pos:line="16661" pos:column="41">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16662" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16664" pos:column="1">#<cpp:directive pos:line="16664" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16664" pos:column="9">ToolBoxTab2_get_DTE</name><parameter_list pos:line="16664" pos:column="28">(<param><type><name pos:line="16664" pos:column="29">This</name></type></param>,<param><type><name pos:line="16664" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16665" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16667" pos:column="1">#<cpp:directive pos:line="16667" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16667" pos:column="9">ToolBoxTab2_Activate</name><parameter_list pos:line="16667" pos:column="29">(<param><type><name pos:line="16667" pos:column="30">This</name></type></param>,<param><type><name pos:line="16667" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16668" pos:column="5">( (This)-&gt;lpVtbl -&gt; Activate(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16670" pos:column="1">#<cpp:directive pos:line="16670" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16670" pos:column="9">ToolBoxTab2_Delete</name><parameter_list pos:line="16670" pos:column="27">(<param><type><name pos:line="16670" pos:column="28">This</name></type></param>,<param><type><name pos:line="16670" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16671" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16673" pos:column="1">#<cpp:directive pos:line="16673" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16673" pos:column="9">ToolBoxTab2_get_ToolBoxItems</name><parameter_list pos:line="16673" pos:column="37">(<param><type><name pos:line="16673" pos:column="38">This</name></type></param>,<param><type><name pos:line="16673" pos:column="43">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16674" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ToolBoxItems(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16676" pos:column="1">#<cpp:directive pos:line="16676" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16676" pos:column="9">ToolBoxTab2_get_ListView</name><parameter_list pos:line="16676" pos:column="33">(<param><type><name pos:line="16676" pos:column="34">This</name></type></param>,<param><type><name pos:line="16676" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16677" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ListView(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="16679" pos:column="1">#<cpp:directive pos:line="16679" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16679" pos:column="9">ToolBoxTab2_put_ListView</name><parameter_list pos:line="16679" pos:column="33">(<param><type><name pos:line="16679" pos:column="34">This</name></type></param>,<param><type><name pos:line="16679" pos:column="39">noname</name></type></param>,<param><type><name pos:line="16679" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16680" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_ListView(This,noname,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="16683" pos:column="1">#<cpp:directive pos:line="16683" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16683" pos:column="9">ToolBoxTab2_get_UniqueID</name><parameter_list pos:line="16683" pos:column="33">(<param><type><name pos:line="16683" pos:column="34">This</name></type></param>,<param><type><name pos:line="16683" pos:column="39">pbstrID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16684" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_UniqueID(This,pbstrID) )</cpp:value></cpp:define> 

<cpp:define pos:line="16686" pos:column="1">#<cpp:directive pos:line="16686" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16686" pos:column="9">ToolBoxTab2_put_UniqueID</name><parameter_list pos:line="16686" pos:column="33">(<param><type><name pos:line="16686" pos:column="34">This</name></type></param>,<param><type><name pos:line="16686" pos:column="39">bstrID</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16687" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_UniqueID(This,bstrID) )</cpp:value></cpp:define> 

<cpp:endif pos:line="16689" pos:column="1">#<cpp:directive pos:line="16689" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="16689" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="16692" pos:column="1">#<cpp:directive pos:line="16692" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16692" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="16697" pos:column="1">#<cpp:directive pos:line="16697" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16697" pos:column="9">/* __ToolBoxTab2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="16700" pos:column="1">#<cpp:directive pos:line="16700" pos:column="2">ifndef</cpp:directive> <name pos:line="16700" pos:column="9">__IncrementalSearch_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="16701" pos:column="1">#<cpp:directive pos:line="16701" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16701" pos:column="9">__IncrementalSearch_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="16703" pos:column="1">/* interface IncrementalSearch */</comment>
<comment type="block" pos:line="16704" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="16707" pos:column="1">EXTERN_C</name> <specifier pos:line="16707" pos:column="10">const</specifier> <name pos:line="16707" pos:column="16">IID</name></type> <name pos:line="16707" pos:column="20">IID_IncrementalSearch</name></decl>;</decl_stmt>

<cpp:if pos:line="16709" pos:column="1">#<cpp:directive pos:line="16709" pos:column="2">if</cpp:directive> <expr><call><name pos:line="16709" pos:column="5">defined</name><argument_list pos:line="16709" pos:column="12">(<argument><expr><name pos:line="16709" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="16709" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="16709" pos:column="29">!</op:operator><call><name pos:line="16709" pos:column="30">defined</name><argument_list pos:line="16709" pos:column="37">(<argument><expr><name pos:line="16709" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="16711" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="16711" pos:column="19">(<argument pos:line="16711" pos:column="20">"C5BEE6D8-ED45-4317-96BF-97EB88EA3A07"</argument>)</argument_list></macro>
    <label><name pos:line="16712" pos:column="5">IncrementalSearch</name> :</label> <expr_stmt><expr pos:line="16712" pos:column="25">public <name pos:line="16712" pos:column="32">IDispatch</name>
    <block pos:line="16713" pos:column="5">{
    <expr pos:line="16714" pos:column="5">public<op:operator pos:line="16714" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="16715" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="16715" pos:column="81">HRESULT</name> <name pos:line="16715" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="16715" pos:column="107">get_DTE</name><argument_list pos:line="16715" pos:column="114">( 
            <comment type="block" pos:line="16716" pos:column="13">/* [retval][out] */</comment> <argument pos:line="16716" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="16716" pos:column="54">/* external definition not present */</comment> DTE **DTEObject</argument>)</argument_list></macro> <op:operator pos:line="16716" pos:column="109">=</op:operator> <lit:literal type="number" pos:line="16716" pos:column="111">0</lit:literal></expr>;
        
        <expr pos:line="16718" pos:column="9">virtual <comment type="block" pos:line="16718" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="16718" pos:column="72">HRESULT</name> <name pos:line="16718" pos:column="80">STDMETHODCALLTYPE</name> <call><name pos:line="16718" pos:column="98">StartForward</name><argument_list pos:line="16718" pos:column="110">( <argument><expr><name pos:line="16718" pos:column="112">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="16718" pos:column="118">=</op:operator> <lit:literal type="number" pos:line="16718" pos:column="120">0</lit:literal></expr>;
        
        <expr pos:line="16720" pos:column="9">virtual <comment type="block" pos:line="16720" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="16720" pos:column="72">HRESULT</name> <name pos:line="16720" pos:column="80">STDMETHODCALLTYPE</name> <call><name pos:line="16720" pos:column="98">StartBackward</name><argument_list pos:line="16720" pos:column="111">( <argument><expr><name pos:line="16720" pos:column="113">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="16720" pos:column="119">=</op:operator> <lit:literal type="number" pos:line="16720" pos:column="121">0</lit:literal></expr>;
        
        <expr pos:line="16722" pos:column="9">virtual <comment type="block" pos:line="16722" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="16722" pos:column="81">HRESULT</name> <name pos:line="16722" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="16722" pos:column="107">get_IncrementalSearchModeOn</name><argument_list pos:line="16722" pos:column="134">( 
            <comment type="block" pos:line="16723" pos:column="13">/* [retval][out] */</comment> <argument pos:line="16723" pos:column="33">__RPC__out VARIANT_BOOL *pOn</argument>)</argument_list></macro> <op:operator pos:line="16723" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="16723" pos:column="65">0</lit:literal></expr>;
        
        <expr pos:line="16725" pos:column="9">virtual <comment type="block" pos:line="16725" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="16725" pos:column="72">HRESULT</name> <name pos:line="16725" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="16725" pos:column="98">SearchWithLastPattern</name><argument_list pos:line="16725" pos:column="119">( 
            <comment type="block" pos:line="16726" pos:column="13">/* [retval][out] */</comment> <argument pos:line="16726" pos:column="33">__RPC__out vsIncrementalSearchResult *pResult</argument>)</argument_list></macro> <op:operator pos:line="16726" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="16726" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="16728" pos:column="9">virtual <comment type="block" pos:line="16728" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="16728" pos:column="81">HRESULT</name> <name pos:line="16728" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="16728" pos:column="107">get_Pattern</name><argument_list pos:line="16728" pos:column="118">( 
            <comment type="block" pos:line="16729" pos:column="13">/* [retval][out] */</comment> <argument pos:line="16729" pos:column="33">__RPC__deref_out_opt BSTR *pPattern</argument>)</argument_list></macro> <op:operator pos:line="16729" pos:column="70">=</op:operator> <lit:literal type="number" pos:line="16729" pos:column="72">0</lit:literal></expr>;
        
        <expr pos:line="16731" pos:column="9">virtual <comment type="block" pos:line="16731" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="16731" pos:column="72">HRESULT</name> <name pos:line="16731" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="16731" pos:column="98">AppendCharAndSearch</name><argument_list pos:line="16731" pos:column="117">( 
            <argument pos:line="16732" pos:column="13">short Character</argument>,
            <comment type="block" pos:line="16733" pos:column="13">/* [retval][out] */</comment> <argument pos:line="16733" pos:column="33">__RPC__out vsIncrementalSearchResult *pResult</argument>)</argument_list></macro> <op:operator pos:line="16733" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="16733" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="16735" pos:column="9">virtual <comment type="block" pos:line="16735" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="16735" pos:column="72">HRESULT</name> <name pos:line="16735" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="16735" pos:column="98">DeleteCharAndBackup</name><argument_list pos:line="16735" pos:column="117">( 
            <comment type="block" pos:line="16736" pos:column="13">/* [retval][out] */</comment> <argument pos:line="16736" pos:column="33">__RPC__out vsIncrementalSearchResult *pResult</argument>)</argument_list></macro> <op:operator pos:line="16736" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="16736" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="16738" pos:column="9">virtual <comment type="block" pos:line="16738" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="16738" pos:column="72">HRESULT</name> <name pos:line="16738" pos:column="80">STDMETHODCALLTYPE</name> <call><name pos:line="16738" pos:column="98">Exit</name><argument_list pos:line="16738" pos:column="102">( <argument><expr><name pos:line="16738" pos:column="104">void</name></expr></argument>)</argument_list></call> <op:operator pos:line="16738" pos:column="110">=</op:operator> <lit:literal type="number" pos:line="16738" pos:column="112">0</lit:literal></expr>;
        
        <expr pos:line="16740" pos:column="9">virtual <comment type="block" pos:line="16740" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="16740" pos:column="72">HRESULT</name> <name pos:line="16740" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="16740" pos:column="98">SearchForward</name><argument_list pos:line="16740" pos:column="111">( 
            <comment type="block" pos:line="16741" pos:column="13">/* [retval][out] */</comment> <argument pos:line="16741" pos:column="33">__RPC__out vsIncrementalSearchResult *pResult</argument>)</argument_list></macro> <op:operator pos:line="16741" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="16741" pos:column="82">0</lit:literal></expr>;
        
        <expr pos:line="16743" pos:column="9">virtual <comment type="block" pos:line="16743" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="16743" pos:column="72">HRESULT</name> <name pos:line="16743" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="16743" pos:column="98">SearchBackward</name><argument_list pos:line="16743" pos:column="112">( 
            <comment type="block" pos:line="16744" pos:column="13">/* [retval][out] */</comment> <argument pos:line="16744" pos:column="33">__RPC__out vsIncrementalSearchResult *pResult</argument>)</argument_list></macro> <op:operator pos:line="16744" pos:column="80">=</op:operator> <lit:literal type="number" pos:line="16744" pos:column="82">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="16748" pos:column="1">#<cpp:directive pos:line="16748" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="16748" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="16750" pos:column="5">typedef <type><struct pos:line="16750" pos:column="13">struct <name pos:line="16750" pos:column="20">IncrementalSearchVtbl</name>
    <block pos:line="16751" pos:column="5">{<public type="default" pos:line="16751" pos:column="6">
        <function_decl><type><name pos:line="16752" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="16754" pos:column="9">HRESULT</name></type> ( <name pos:line="16754" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16754" pos:column="37">*</type:modifier><name pos:line="16754" pos:column="38">QueryInterface</name> )<parameter_list pos:line="16754" pos:column="54">( 
            <param><decl><type><name pos:line="16755" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16755" pos:column="31">*</type:modifier></type> <name pos:line="16755" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="16756" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16756" pos:column="24">__RPC__in</name> <name pos:line="16756" pos:column="34">REFIID</name></type> <name pos:line="16756" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="16757" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="16758" pos:column="13">__RPC__deref_out</name>  <name pos:line="16758" pos:column="31">void</name> <type:modifier pos:line="16758" pos:column="36">*</type:modifier><type:modifier pos:line="16758" pos:column="37">*</type:modifier></type><name pos:line="16758" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16760" pos:column="9">ULONG</name></type> ( <name pos:line="16760" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16760" pos:column="35">*</type:modifier><name pos:line="16760" pos:column="36">AddRef</name> )<parameter_list pos:line="16760" pos:column="44">( 
            <param><decl><type><name pos:line="16761" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16761" pos:column="31">*</type:modifier></type> <name pos:line="16761" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16763" pos:column="9">ULONG</name></type> ( <name pos:line="16763" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="16763" pos:column="35">*</type:modifier><name pos:line="16763" pos:column="36">Release</name> )<parameter_list pos:line="16763" pos:column="45">( 
            <param><decl><type><name pos:line="16764" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16764" pos:column="31">*</type:modifier></type> <name pos:line="16764" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16766" pos:column="9">HRESULT</name></type> ( <name pos:line="16766" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16766" pos:column="37">*</type:modifier><name pos:line="16766" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="16766" pos:column="56">( 
            <param><decl><type><name pos:line="16767" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16767" pos:column="31">*</type:modifier></type> <name pos:line="16767" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="16768" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16768" pos:column="25">__RPC__out</name> <name pos:line="16768" pos:column="36">UINT</name> <type:modifier pos:line="16768" pos:column="41">*</type:modifier></type><name pos:line="16768" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="16770" pos:column="9">HRESULT</name></type> ( <name pos:line="16770" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="16770" pos:column="37">*</type:modifier><name pos:line="16770" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="16770" pos:column="51">( 
            <param><decl><type><name pos:line="16771" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16771" pos:column="31">*</type:modifier></type> <name pos:line="16771" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="16772" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16772" pos:column="24">UINT</name></type> <name pos:line="16772" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="16773" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16773" pos:column="24">LCID</name></type> <name pos:line="16773" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="16774" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16774" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="16774" pos:column="46">ITypeInfo</name> <type:modifier pos:line="16774" pos:column="56">*</type:modifier><type:modifier pos:line="16774" pos:column="57">*</type:modifier></type><name pos:line="16774" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16776" pos:column="9">HRESULT</name> <argument_list pos:line="16776" pos:column="17">( <argument pos:line="16776" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16776" pos:column="53">(</op:operator> 
            <name pos:line="16777" pos:column="13">IncrementalSearch</name> <op:operator pos:line="16777" pos:column="31">*</op:operator> <name pos:line="16777" pos:column="33">This</name><op:operator pos:line="16777" pos:column="37">,</op:operator>
            <comment type="block" pos:line="16778" pos:column="13">/* [in] */</comment> <name pos:line="16778" pos:column="24">__RPC__in</name> <name pos:line="16778" pos:column="34">REFIID</name> <name pos:line="16778" pos:column="41">riid</name><op:operator pos:line="16778" pos:column="45">,</op:operator>
            <comment type="block" pos:line="16779" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="16779" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="16779" pos:column="54">(<argument pos:line="16779" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="16779" pos:column="63">LPOLESTR</name> <op:operator pos:line="16779" pos:column="72">*</op:operator><name pos:line="16779" pos:column="73">rgszNames</name><op:operator pos:line="16779" pos:column="82">,</op:operator>
            <comment type="block" pos:line="16780" pos:column="13">/* [range][in] */</comment> <name pos:line="16780" pos:column="31">UINT</name> <name pos:line="16780" pos:column="36">cNames</name><op:operator pos:line="16780" pos:column="42">,</op:operator>
            <comment type="block" pos:line="16781" pos:column="13">/* [in] */</comment> <name pos:line="16781" pos:column="24">LCID</name> <name pos:line="16781" pos:column="29">lcid</name><op:operator pos:line="16781" pos:column="33">,</op:operator>
            <comment type="block" pos:line="16782" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="16782" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="16782" pos:column="56">(<argument pos:line="16782" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="16782" pos:column="65">DISPID</name> <op:operator pos:line="16782" pos:column="72">*</op:operator><name pos:line="16782" pos:column="73">rgDispId</name><op:operator pos:line="16782" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="16784" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="16784" pos:column="23">HRESULT</name></type> ( <name pos:line="16784" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="16784" pos:column="51">*</type:modifier><name pos:line="16784" pos:column="52">Invoke</name> )<parameter_list pos:line="16784" pos:column="60">( 
            <param><decl><type><name pos:line="16785" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16785" pos:column="31">*</type:modifier></type> <name pos:line="16785" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="16786" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16786" pos:column="24">DISPID</name></type> <name pos:line="16786" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="16787" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16787" pos:column="24">REFIID</name></type> <name pos:line="16787" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="16788" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16788" pos:column="24">LCID</name></type> <name pos:line="16788" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="16789" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="16789" pos:column="24">WORD</name></type> <name pos:line="16789" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="16790" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="16790" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="16790" pos:column="40">*</type:modifier></type><name pos:line="16790" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="16791" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16791" pos:column="25">VARIANT</name> <type:modifier pos:line="16791" pos:column="33">*</type:modifier></type><name pos:line="16791" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="16792" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16792" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="16792" pos:column="35">*</type:modifier></type><name pos:line="16792" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="16793" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="16793" pos:column="25">UINT</name> <type:modifier pos:line="16793" pos:column="30">*</type:modifier></type><name pos:line="16793" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16795" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="16795" pos:column="73">HRESULT</name></type> ( <name pos:line="16795" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="16795" pos:column="101">*</type:modifier><name pos:line="16795" pos:column="102">get_DTE</name> )<parameter_list pos:line="16795" pos:column="111">( 
            <param><decl><type><name pos:line="16796" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16796" pos:column="31">*</type:modifier></type> <name pos:line="16796" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="16797" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16797" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="16797" pos:column="54">/* external definition not present */</comment> <name pos:line="16797" pos:column="92">DTE</name> <type:modifier pos:line="16797" pos:column="96">*</type:modifier><type:modifier pos:line="16797" pos:column="97">*</type:modifier></type><name pos:line="16797" pos:column="98">DTEObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16799" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="16799" pos:column="64">HRESULT</name></type> ( <name pos:line="16799" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="16799" pos:column="92">*</type:modifier><name pos:line="16799" pos:column="93">StartForward</name> )<parameter_list pos:line="16799" pos:column="107">( 
            <param><decl><type><name pos:line="16800" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16800" pos:column="31">*</type:modifier></type> <name pos:line="16800" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16802" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="16802" pos:column="64">HRESULT</name></type> ( <name pos:line="16802" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="16802" pos:column="92">*</type:modifier><name pos:line="16802" pos:column="93">StartBackward</name> )<parameter_list pos:line="16802" pos:column="108">( 
            <param><decl><type><name pos:line="16803" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16803" pos:column="31">*</type:modifier></type> <name pos:line="16803" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16805" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="16805" pos:column="73">HRESULT</name></type> ( <name pos:line="16805" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="16805" pos:column="101">*</type:modifier><name pos:line="16805" pos:column="102">get_IncrementalSearchModeOn</name> )<parameter_list pos:line="16805" pos:column="131">( 
            <param><decl><type><name pos:line="16806" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16806" pos:column="31">*</type:modifier></type> <name pos:line="16806" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="16807" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16807" pos:column="33">__RPC__out</name> <name pos:line="16807" pos:column="44">VARIANT_BOOL</name> <type:modifier pos:line="16807" pos:column="57">*</type:modifier></type><name pos:line="16807" pos:column="58">pOn</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16809" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="16809" pos:column="64">HRESULT</name></type> ( <name pos:line="16809" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="16809" pos:column="92">*</type:modifier><name pos:line="16809" pos:column="93">SearchWithLastPattern</name> )<parameter_list pos:line="16809" pos:column="116">( 
            <param><decl><type><name pos:line="16810" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16810" pos:column="31">*</type:modifier></type> <name pos:line="16810" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="16811" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16811" pos:column="33">__RPC__out</name> <name pos:line="16811" pos:column="44">vsIncrementalSearchResult</name> <type:modifier pos:line="16811" pos:column="70">*</type:modifier></type><name pos:line="16811" pos:column="71">pResult</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16813" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="16813" pos:column="73">HRESULT</name></type> ( <name pos:line="16813" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="16813" pos:column="101">*</type:modifier><name pos:line="16813" pos:column="102">get_Pattern</name> )<parameter_list pos:line="16813" pos:column="115">( 
            <param><decl><type><name pos:line="16814" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16814" pos:column="31">*</type:modifier></type> <name pos:line="16814" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="16815" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16815" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="16815" pos:column="54">BSTR</name> <type:modifier pos:line="16815" pos:column="59">*</type:modifier></type><name pos:line="16815" pos:column="60">pPattern</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16817" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="16817" pos:column="64">HRESULT</name></type> ( <name pos:line="16817" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="16817" pos:column="92">*</type:modifier><name pos:line="16817" pos:column="93">AppendCharAndSearch</name> )<parameter_list pos:line="16817" pos:column="114">( 
            <param><decl><type><name pos:line="16818" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16818" pos:column="31">*</type:modifier></type> <name pos:line="16818" pos:column="33">This</name></decl></param>,
            <param><decl><type><name pos:line="16819" pos:column="13">short</name></type> <name pos:line="16819" pos:column="19">Character</name></decl></param>,
            <comment type="block" pos:line="16820" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16820" pos:column="33">__RPC__out</name> <name pos:line="16820" pos:column="44">vsIncrementalSearchResult</name> <type:modifier pos:line="16820" pos:column="70">*</type:modifier></type><name pos:line="16820" pos:column="71">pResult</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16822" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="16822" pos:column="64">HRESULT</name></type> ( <name pos:line="16822" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="16822" pos:column="92">*</type:modifier><name pos:line="16822" pos:column="93">DeleteCharAndBackup</name> )<parameter_list pos:line="16822" pos:column="114">( 
            <param><decl><type><name pos:line="16823" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16823" pos:column="31">*</type:modifier></type> <name pos:line="16823" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="16824" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16824" pos:column="33">__RPC__out</name> <name pos:line="16824" pos:column="44">vsIncrementalSearchResult</name> <type:modifier pos:line="16824" pos:column="70">*</type:modifier></type><name pos:line="16824" pos:column="71">pResult</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16826" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="16826" pos:column="64">HRESULT</name></type> ( <name pos:line="16826" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="16826" pos:column="92">*</type:modifier><name pos:line="16826" pos:column="93">Exit</name> )<parameter_list pos:line="16826" pos:column="99">( 
            <param><decl><type><name pos:line="16827" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16827" pos:column="31">*</type:modifier></type> <name pos:line="16827" pos:column="33">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16829" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="16829" pos:column="64">HRESULT</name></type> ( <name pos:line="16829" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="16829" pos:column="92">*</type:modifier><name pos:line="16829" pos:column="93">SearchForward</name> )<parameter_list pos:line="16829" pos:column="108">( 
            <param><decl><type><name pos:line="16830" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16830" pos:column="31">*</type:modifier></type> <name pos:line="16830" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="16831" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16831" pos:column="33">__RPC__out</name> <name pos:line="16831" pos:column="44">vsIncrementalSearchResult</name> <type:modifier pos:line="16831" pos:column="70">*</type:modifier></type><name pos:line="16831" pos:column="71">pResult</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16833" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="16833" pos:column="64">HRESULT</name></type> ( <name pos:line="16833" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="16833" pos:column="92">*</type:modifier><name pos:line="16833" pos:column="93">SearchBackward</name> )<parameter_list pos:line="16833" pos:column="109">( 
            <param><decl><type><name pos:line="16834" pos:column="13">IncrementalSearch</name> <type:modifier pos:line="16834" pos:column="31">*</type:modifier></type> <name pos:line="16834" pos:column="33">This</name></decl></param>,
            <comment type="block" pos:line="16835" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16835" pos:column="33">__RPC__out</name> <name pos:line="16835" pos:column="44">vsIncrementalSearchResult</name> <type:modifier pos:line="16835" pos:column="70">*</type:modifier></type><name pos:line="16835" pos:column="71">pResult</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="16837" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="16838" pos:column="7">IncrementalSearchVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="16840" pos:column="5">interface</name></type> <name pos:line="16840" pos:column="15">IncrementalSearch</name>
    <argument_list pos:line="16841" pos:column="5">{
        <argument><expr><name pos:line="16842" pos:column="9">CONST_VTBL</name> struct <name pos:line="16842" pos:column="27">IncrementalSearchVtbl</name> <op:operator pos:line="16842" pos:column="49">*</op:operator><name pos:line="16842" pos:column="50">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="16847" pos:column="1">#<cpp:directive pos:line="16847" pos:column="2">ifdef</cpp:directive> <name pos:line="16847" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="16850" pos:column="1">#<cpp:directive pos:line="16850" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16850" pos:column="9">IncrementalSearch_QueryInterface</name><parameter_list pos:line="16850" pos:column="41">(<param><type><name pos:line="16850" pos:column="42">This</name></type></param>,<param><type><name pos:line="16850" pos:column="47">riid</name></type></param>,<param><type><name pos:line="16850" pos:column="52">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16851" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="16853" pos:column="1">#<cpp:directive pos:line="16853" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16853" pos:column="9">IncrementalSearch_AddRef</name><parameter_list pos:line="16853" pos:column="33">(<param><type><name pos:line="16853" pos:column="34">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16854" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16856" pos:column="1">#<cpp:directive pos:line="16856" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16856" pos:column="9">IncrementalSearch_Release</name><parameter_list pos:line="16856" pos:column="34">(<param><type><name pos:line="16856" pos:column="35">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16857" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="16860" pos:column="1">#<cpp:directive pos:line="16860" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16860" pos:column="9">IncrementalSearch_GetTypeInfoCount</name><parameter_list pos:line="16860" pos:column="43">(<param><type><name pos:line="16860" pos:column="44">This</name></type></param>,<param><type><name pos:line="16860" pos:column="49">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16861" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="16863" pos:column="1">#<cpp:directive pos:line="16863" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16863" pos:column="9">IncrementalSearch_GetTypeInfo</name><parameter_list pos:line="16863" pos:column="38">(<param><type><name pos:line="16863" pos:column="39">This</name></type></param>,<param><type><name pos:line="16863" pos:column="44">iTInfo</name></type></param>,<param><type><name pos:line="16863" pos:column="51">lcid</name></type></param>,<param><type><name pos:line="16863" pos:column="56">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16864" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="16866" pos:column="1">#<cpp:directive pos:line="16866" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16866" pos:column="9">IncrementalSearch_GetIDsOfNames</name><parameter_list pos:line="16866" pos:column="40">(<param><type><name pos:line="16866" pos:column="41">This</name></type></param>,<param><type><name pos:line="16866" pos:column="46">riid</name></type></param>,<param><type><name pos:line="16866" pos:column="51">rgszNames</name></type></param>,<param><type><name pos:line="16866" pos:column="61">cNames</name></type></param>,<param><type><name pos:line="16866" pos:column="68">lcid</name></type></param>,<param><type><name pos:line="16866" pos:column="73">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16867" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="16869" pos:column="1">#<cpp:directive pos:line="16869" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16869" pos:column="9">IncrementalSearch_Invoke</name><parameter_list pos:line="16869" pos:column="33">(<param><type><name pos:line="16869" pos:column="34">This</name></type></param>,<param><type><name pos:line="16869" pos:column="39">dispIdMember</name></type></param>,<param><type><name pos:line="16869" pos:column="52">riid</name></type></param>,<param><type><name pos:line="16869" pos:column="57">lcid</name></type></param>,<param><type><name pos:line="16869" pos:column="62">wFlags</name></type></param>,<param><type><name pos:line="16869" pos:column="69">pDispParams</name></type></param>,<param><type><name pos:line="16869" pos:column="81">pVarResult</name></type></param>,<param><type><name pos:line="16869" pos:column="92">pExcepInfo</name></type></param>,<param><type><name pos:line="16869" pos:column="103">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16870" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="16873" pos:column="1">#<cpp:directive pos:line="16873" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16873" pos:column="9">IncrementalSearch_get_DTE</name><parameter_list pos:line="16873" pos:column="34">(<param><type><name pos:line="16873" pos:column="35">This</name></type></param>,<param><type><name pos:line="16873" pos:column="40">DTEObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16874" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTEObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="16876" pos:column="1">#<cpp:directive pos:line="16876" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16876" pos:column="9">IncrementalSearch_StartForward</name><parameter_list pos:line="16876" pos:column="39">(<param><type><name pos:line="16876" pos:column="40">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16877" pos:column="5">( (This)-&gt;lpVtbl -&gt; StartForward(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16879" pos:column="1">#<cpp:directive pos:line="16879" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16879" pos:column="9">IncrementalSearch_StartBackward</name><parameter_list pos:line="16879" pos:column="40">(<param><type><name pos:line="16879" pos:column="41">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16880" pos:column="5">( (This)-&gt;lpVtbl -&gt; StartBackward(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16882" pos:column="1">#<cpp:directive pos:line="16882" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16882" pos:column="9">IncrementalSearch_get_IncrementalSearchModeOn</name><parameter_list pos:line="16882" pos:column="54">(<param><type><name pos:line="16882" pos:column="55">This</name></type></param>,<param><type><name pos:line="16882" pos:column="60">pOn</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16883" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IncrementalSearchModeOn(This,pOn) )</cpp:value></cpp:define> 

<cpp:define pos:line="16885" pos:column="1">#<cpp:directive pos:line="16885" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16885" pos:column="9">IncrementalSearch_SearchWithLastPattern</name><parameter_list pos:line="16885" pos:column="48">(<param><type><name pos:line="16885" pos:column="49">This</name></type></param>,<param><type><name pos:line="16885" pos:column="54">pResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16886" pos:column="5">( (This)-&gt;lpVtbl -&gt; SearchWithLastPattern(This,pResult) )</cpp:value></cpp:define> 

<cpp:define pos:line="16888" pos:column="1">#<cpp:directive pos:line="16888" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16888" pos:column="9">IncrementalSearch_get_Pattern</name><parameter_list pos:line="16888" pos:column="38">(<param><type><name pos:line="16888" pos:column="39">This</name></type></param>,<param><type><name pos:line="16888" pos:column="44">pPattern</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16889" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Pattern(This,pPattern) )</cpp:value></cpp:define> 

<cpp:define pos:line="16891" pos:column="1">#<cpp:directive pos:line="16891" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16891" pos:column="9">IncrementalSearch_AppendCharAndSearch</name><parameter_list pos:line="16891" pos:column="46">(<param><type><name pos:line="16891" pos:column="47">This</name></type></param>,<param><type><name pos:line="16891" pos:column="52">Character</name></type></param>,<param><type><name pos:line="16891" pos:column="62">pResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16892" pos:column="5">( (This)-&gt;lpVtbl -&gt; AppendCharAndSearch(This,Character,pResult) )</cpp:value></cpp:define> 

<cpp:define pos:line="16894" pos:column="1">#<cpp:directive pos:line="16894" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16894" pos:column="9">IncrementalSearch_DeleteCharAndBackup</name><parameter_list pos:line="16894" pos:column="46">(<param><type><name pos:line="16894" pos:column="47">This</name></type></param>,<param><type><name pos:line="16894" pos:column="52">pResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16895" pos:column="5">( (This)-&gt;lpVtbl -&gt; DeleteCharAndBackup(This,pResult) )</cpp:value></cpp:define> 

<cpp:define pos:line="16897" pos:column="1">#<cpp:directive pos:line="16897" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16897" pos:column="9">IncrementalSearch_Exit</name><parameter_list pos:line="16897" pos:column="31">(<param><type><name pos:line="16897" pos:column="32">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16898" pos:column="5">( (This)-&gt;lpVtbl -&gt; Exit(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="16900" pos:column="1">#<cpp:directive pos:line="16900" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16900" pos:column="9">IncrementalSearch_SearchForward</name><parameter_list pos:line="16900" pos:column="40">(<param><type><name pos:line="16900" pos:column="41">This</name></type></param>,<param><type><name pos:line="16900" pos:column="46">pResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16901" pos:column="5">( (This)-&gt;lpVtbl -&gt; SearchForward(This,pResult) )</cpp:value></cpp:define> 

<cpp:define pos:line="16903" pos:column="1">#<cpp:directive pos:line="16903" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16903" pos:column="9">IncrementalSearch_SearchBackward</name><parameter_list pos:line="16903" pos:column="41">(<param><type><name pos:line="16903" pos:column="42">This</name></type></param>,<param><type><name pos:line="16903" pos:column="47">pResult</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="16904" pos:column="5">( (This)-&gt;lpVtbl -&gt; SearchBackward(This,pResult) )</cpp:value></cpp:define> 

<cpp:endif pos:line="16906" pos:column="1">#<cpp:directive pos:line="16906" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="16906" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="16909" pos:column="1">#<cpp:directive pos:line="16909" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16909" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="16914" pos:column="1">#<cpp:directive pos:line="16914" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="16914" pos:column="9">/* __IncrementalSearch_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="16917" pos:column="1">#<cpp:directive pos:line="16917" pos:column="2">ifndef</cpp:directive> <name pos:line="16917" pos:column="9">__TextPane2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="16918" pos:column="1">#<cpp:directive pos:line="16918" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16918" pos:column="9">__TextPane2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="16920" pos:column="1">/* interface TextPane2 */</comment>
<comment type="block" pos:line="16921" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="16924" pos:column="1">EXTERN_C</name> <specifier pos:line="16924" pos:column="10">const</specifier> <name pos:line="16924" pos:column="16">IID</name></type> <name pos:line="16924" pos:column="20">IID_TextPane2</name></decl>;</decl_stmt>

<cpp:if pos:line="16926" pos:column="1">#<cpp:directive pos:line="16926" pos:column="2">if</cpp:directive> <expr><call><name pos:line="16926" pos:column="5">defined</name><argument_list pos:line="16926" pos:column="12">(<argument><expr><name pos:line="16926" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="16926" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="16926" pos:column="29">!</op:operator><call><name pos:line="16926" pos:column="30">defined</name><argument_list pos:line="16926" pos:column="37">(<argument><expr><name pos:line="16926" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="16928" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="16928" pos:column="19">(<argument pos:line="16928" pos:column="20">"ACE19C7B-A0AC-4089-94FD-749CF4380E1F"</argument>)</argument_list></macro>
    <label><name pos:line="16929" pos:column="5">TextPane2</name> :</label> <expr_stmt><expr pos:line="16929" pos:column="17">public <name pos:line="16929" pos:column="24">TextPane</name>
    <block pos:line="16930" pos:column="5">{
    <expr pos:line="16931" pos:column="5">public<op:operator pos:line="16931" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="16932" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="16932" pos:column="81">HRESULT</name> <name pos:line="16932" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="16932" pos:column="107">get_IncrementalSearch</name><argument_list pos:line="16932" pos:column="128">( 
            <comment type="block" pos:line="16933" pos:column="13">/* [retval][out] */</comment> <argument pos:line="16933" pos:column="33">__RPC__deref_out_opt IncrementalSearch **ppIncrementalSearch</argument>)</argument_list></macro> <op:operator pos:line="16933" pos:column="95">=</op:operator> <lit:literal type="number" pos:line="16933" pos:column="97">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="16937" pos:column="1">#<cpp:directive pos:line="16937" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="16937" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="16939" pos:column="5">typedef <type><struct pos:line="16939" pos:column="13">struct <name pos:line="16939" pos:column="20">TextPane2Vtbl</name>
    <block pos:line="16940" pos:column="5">{<public type="default" pos:line="16940" pos:column="6">
        <decl_stmt><decl><type><name pos:line="16941" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="16943" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="16943" pos:column="46">HRESULT</name></type> ( <name pos:line="16943" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16943" pos:column="74">*</type:modifier><name pos:line="16943" pos:column="75">QueryInterface</name> )<parameter_list pos:line="16943" pos:column="91">( 
            <param><decl><type><name pos:line="16944" pos:column="13">TextPane2</name> <type:modifier pos:line="16944" pos:column="23">*</type:modifier></type> <name pos:line="16944" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="16945" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="16945" pos:column="47">struct <name pos:line="16945" pos:column="54">GUID</name> <type:modifier pos:line="16945" pos:column="59">*</type:modifier></type><name pos:line="16945" pos:column="60">riid</name></decl><op:operator pos:line="16945" pos:column="64">,</op:operator>
            <comment type="block" pos:line="16946" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16946" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="16946" pos:column="59">void</name> <type:modifier pos:line="16946" pos:column="64">*</type:modifier><type:modifier pos:line="16946" pos:column="65">*</type:modifier><name pos:line="16946" pos:column="66">ppvObj</name><op:operator pos:line="16946" pos:column="72">,</op:operator>
            <comment type="block" pos:line="16947" pos:column="13">/* [retval][out] */</comment> <name pos:line="16947" pos:column="33">__RPC__out</name> <name pos:line="16947" pos:column="44">void</name> <type:modifier pos:line="16947" pos:column="49">*</type:modifier><name pos:line="16947" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="16949" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="16949" pos:column="46">HRESULT</name></type> ( <name pos:line="16949" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16949" pos:column="74">*</type:modifier><name pos:line="16949" pos:column="75">AddRef</name> )<parameter_list pos:line="16949" pos:column="83">( 
            <param><decl><type><name pos:line="16950" pos:column="13">TextPane2</name> <type:modifier pos:line="16950" pos:column="23">*</type:modifier></type> <name pos:line="16950" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="16951" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16951" pos:column="33">__RPC__out</name> <name pos:line="16951" pos:column="44">unsigned</name> <name pos:line="16951" pos:column="53">long</name> <type:modifier pos:line="16951" pos:column="58">*</type:modifier></type><name pos:line="16951" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16953" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="16953" pos:column="46">HRESULT</name></type> ( <name pos:line="16953" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16953" pos:column="74">*</type:modifier><name pos:line="16953" pos:column="75">Release</name> )<parameter_list pos:line="16953" pos:column="84">( 
            <param><decl><type><name pos:line="16954" pos:column="13">TextPane2</name> <type:modifier pos:line="16954" pos:column="23">*</type:modifier></type> <name pos:line="16954" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="16955" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16955" pos:column="33">__RPC__out</name> <name pos:line="16955" pos:column="44">unsigned</name> <name pos:line="16955" pos:column="53">long</name> <type:modifier pos:line="16955" pos:column="58">*</type:modifier></type><name pos:line="16955" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16957" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="16957" pos:column="46">HRESULT</name></type> ( <name pos:line="16957" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16957" pos:column="74">*</type:modifier><name pos:line="16957" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="16957" pos:column="93">( 
            <param><decl><type><name pos:line="16958" pos:column="13">TextPane2</name> <type:modifier pos:line="16958" pos:column="23">*</type:modifier></type> <name pos:line="16958" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="16959" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="16959" pos:column="38">__RPC__out</name> <name pos:line="16959" pos:column="49">unsigned</name> <name pos:line="16959" pos:column="58">UINT</name> <type:modifier pos:line="16959" pos:column="63">*</type:modifier></type><name pos:line="16959" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="16960" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16960" pos:column="33">__RPC__out</name> <name pos:line="16960" pos:column="44">void</name> <type:modifier pos:line="16960" pos:column="49">*</type:modifier></type><name pos:line="16960" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16962" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="16962" pos:column="46">HRESULT</name></type> ( <name pos:line="16962" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="16962" pos:column="74">*</type:modifier><name pos:line="16962" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="16962" pos:column="88">( 
            <param><decl><type><name pos:line="16963" pos:column="13">TextPane2</name> <type:modifier pos:line="16963" pos:column="23">*</type:modifier></type> <name pos:line="16963" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="16964" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="16964" pos:column="37">unsigned</name> <name pos:line="16964" pos:column="46">UINT</name></type> <name pos:line="16964" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="16965" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="16965" pos:column="37">unsigned</name> <name pos:line="16965" pos:column="46">long</name></type> <name pos:line="16965" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="16966" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="16966" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="16966" pos:column="59">void</name> <type:modifier pos:line="16966" pos:column="64">*</type:modifier><type:modifier pos:line="16966" pos:column="65">*</type:modifier></type><name pos:line="16966" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="16967" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16967" pos:column="33">__RPC__out</name> <name pos:line="16967" pos:column="44">void</name> <type:modifier pos:line="16967" pos:column="49">*</type:modifier></type><name pos:line="16967" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16969" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="16969" pos:column="46">HRESULT</name> <argument_list pos:line="16969" pos:column="54">( <argument pos:line="16969" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16969" pos:column="90">(</op:operator> 
            <name pos:line="16970" pos:column="13">TextPane2</name> <op:operator pos:line="16970" pos:column="23">*</op:operator> <name pos:line="16970" pos:column="25">This</name><op:operator pos:line="16970" pos:column="29">,</op:operator>
            <comment type="block" pos:line="16971" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16971" pos:column="37">__RPC__in</name> struct <name pos:line="16971" pos:column="54">GUID</name> <op:operator pos:line="16971" pos:column="59">*</op:operator><name pos:line="16971" pos:column="60">riid</name><op:operator pos:line="16971" pos:column="64">,</op:operator>
            <comment type="block" pos:line="16972" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16972" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="16972" pos:column="57">signed</name> <name pos:line="16972" pos:column="64">char</name> <op:operator pos:line="16972" pos:column="69">*</op:operator><op:operator pos:line="16972" pos:column="70">*</op:operator><name pos:line="16972" pos:column="71">rgszNames</name><op:operator pos:line="16972" pos:column="80">,</op:operator>
            <comment type="block" pos:line="16973" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16973" pos:column="37">unsigned</name> <name pos:line="16973" pos:column="46">UINT</name> <name pos:line="16973" pos:column="51">cNames</name><op:operator pos:line="16973" pos:column="57">,</op:operator>
            <comment type="block" pos:line="16974" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16974" pos:column="37">unsigned</name> <name pos:line="16974" pos:column="46">long</name> <name pos:line="16974" pos:column="51">lcid</name><op:operator pos:line="16974" pos:column="55">,</op:operator>
            <comment type="block" pos:line="16975" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16975" pos:column="38">__RPC__out</name> <name pos:line="16975" pos:column="49">signed</name> <name pos:line="16975" pos:column="56">long</name> <op:operator pos:line="16975" pos:column="61">*</op:operator><name pos:line="16975" pos:column="62">rgdispid</name><op:operator pos:line="16975" pos:column="70">,</op:operator>
            <comment type="block" pos:line="16976" pos:column="13">/* [retval][out] */</comment> <name pos:line="16976" pos:column="33">__RPC__out</name> <name pos:line="16976" pos:column="44">void</name> <op:operator pos:line="16976" pos:column="49">*</op:operator><name pos:line="16976" pos:column="50">retval</name><op:operator pos:line="16976" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="16978" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="16978" pos:column="46">HRESULT</name> <argument_list pos:line="16978" pos:column="54">( <argument pos:line="16978" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="16978" pos:column="83">(</op:operator> 
            <name pos:line="16979" pos:column="13">TextPane2</name> <op:operator pos:line="16979" pos:column="23">*</op:operator> <name pos:line="16979" pos:column="25">This</name><op:operator pos:line="16979" pos:column="29">,</op:operator>
            <comment type="block" pos:line="16980" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16980" pos:column="37">signed</name> <name pos:line="16980" pos:column="44">long</name> <name pos:line="16980" pos:column="49">dispidMember</name><op:operator pos:line="16980" pos:column="61">,</op:operator>
            <comment type="block" pos:line="16981" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16981" pos:column="37">__RPC__in</name> struct <name pos:line="16981" pos:column="54">GUID</name> <op:operator pos:line="16981" pos:column="59">*</op:operator><name pos:line="16981" pos:column="60">riid</name><op:operator pos:line="16981" pos:column="64">,</op:operator>
            <comment type="block" pos:line="16982" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16982" pos:column="37">unsigned</name> <name pos:line="16982" pos:column="46">long</name> <name pos:line="16982" pos:column="51">lcid</name><op:operator pos:line="16982" pos:column="55">,</op:operator>
            <comment type="block" pos:line="16983" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16983" pos:column="37">unsigned</name> <name pos:line="16983" pos:column="46">short</name> <name pos:line="16983" pos:column="52">wFlags</name><op:operator pos:line="16983" pos:column="58">,</op:operator>
            <comment type="block" pos:line="16984" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="16984" pos:column="37">__RPC__in</name> struct <name pos:line="16984" pos:column="54">DISPPARAMS</name> <op:operator pos:line="16984" pos:column="65">*</op:operator><name pos:line="16984" pos:column="66">pdispparams</name><op:operator pos:line="16984" pos:column="77">,</op:operator>
            <comment type="block" pos:line="16985" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16985" pos:column="38">__RPC__out</name> <name pos:line="16985" pos:column="49">VARIANT</name> <op:operator pos:line="16985" pos:column="57">*</op:operator><name pos:line="16985" pos:column="58">pvarResult</name><op:operator pos:line="16985" pos:column="68">,</op:operator>
            <comment type="block" pos:line="16986" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16986" pos:column="38">__RPC__out</name> struct <name pos:line="16986" pos:column="56">EXCEPINFO</name> <op:operator pos:line="16986" pos:column="66">*</op:operator><name pos:line="16986" pos:column="67">pexcepinfo</name><op:operator pos:line="16986" pos:column="77">,</op:operator>
            <comment type="block" pos:line="16987" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="16987" pos:column="38">__RPC__out</name> <name pos:line="16987" pos:column="49">unsigned</name> <name pos:line="16987" pos:column="58">UINT</name> <op:operator pos:line="16987" pos:column="63">*</op:operator><name pos:line="16987" pos:column="64">puArgErr</name><op:operator pos:line="16987" pos:column="72">,</op:operator>
            <comment type="block" pos:line="16988" pos:column="13">/* [retval][out] */</comment> <name pos:line="16988" pos:column="33">__RPC__out</name> <name pos:line="16988" pos:column="44">void</name> <op:operator pos:line="16988" pos:column="49">*</op:operator><name pos:line="16988" pos:column="50">retval</name><op:operator pos:line="16988" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="16990" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="16990" pos:column="43">HRESULT</name></type> ( <name pos:line="16990" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16990" pos:column="71">*</type:modifier><name pos:line="16990" pos:column="72">get_DTE</name> )<parameter_list pos:line="16990" pos:column="81">( 
            <param><decl><type><name pos:line="16991" pos:column="13">TextPane2</name> <type:modifier pos:line="16991" pos:column="23">*</type:modifier></type> <name pos:line="16991" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="16992" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16992" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="16992" pos:column="54">*</type:modifier><type:modifier pos:line="16992" pos:column="55">*</type:modifier></type><name pos:line="16992" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16994" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="16994" pos:column="43">HRESULT</name></type> ( <name pos:line="16994" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16994" pos:column="71">*</type:modifier><name pos:line="16994" pos:column="72">get_Collection</name> )<parameter_list pos:line="16994" pos:column="88">( 
            <param><decl><type><name pos:line="16995" pos:column="13">TextPane2</name> <type:modifier pos:line="16995" pos:column="23">*</type:modifier></type> <name pos:line="16995" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="16996" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="16996" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="16996" pos:column="54">TextPanes</name> <type:modifier pos:line="16996" pos:column="64">*</type:modifier><type:modifier pos:line="16996" pos:column="65">*</type:modifier></type><name pos:line="16996" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="16998" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="16998" pos:column="43">HRESULT</name></type> ( <name pos:line="16998" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="16998" pos:column="71">*</type:modifier><name pos:line="16998" pos:column="72">get_Window</name> )<parameter_list pos:line="16998" pos:column="84">( 
            <param><decl><type><name pos:line="16999" pos:column="13">TextPane2</name> <type:modifier pos:line="16999" pos:column="23">*</type:modifier></type> <name pos:line="16999" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="17000" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17000" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="17000" pos:column="54">Window</name> <type:modifier pos:line="17000" pos:column="61">*</type:modifier><type:modifier pos:line="17000" pos:column="62">*</type:modifier></type><name pos:line="17000" pos:column="63">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17002" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17002" pos:column="43">HRESULT</name></type> ( <name pos:line="17002" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17002" pos:column="71">*</type:modifier><name pos:line="17002" pos:column="72">get_Height</name> )<parameter_list pos:line="17002" pos:column="84">( 
            <param><decl><type><name pos:line="17003" pos:column="13">TextPane2</name> <type:modifier pos:line="17003" pos:column="23">*</type:modifier></type> <name pos:line="17003" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="17004" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17004" pos:column="33">__RPC__out</name> <name pos:line="17004" pos:column="44">signed</name> <name pos:line="17004" pos:column="51">long</name> <type:modifier pos:line="17004" pos:column="56">*</type:modifier></type><name pos:line="17004" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17006" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17006" pos:column="43">HRESULT</name></type> ( <name pos:line="17006" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17006" pos:column="71">*</type:modifier><name pos:line="17006" pos:column="72">get_Width</name> )<parameter_list pos:line="17006" pos:column="83">( 
            <param><decl><type><name pos:line="17007" pos:column="13">TextPane2</name> <type:modifier pos:line="17007" pos:column="23">*</type:modifier></type> <name pos:line="17007" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="17008" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17008" pos:column="33">__RPC__out</name> <name pos:line="17008" pos:column="44">signed</name> <name pos:line="17008" pos:column="51">long</name> <type:modifier pos:line="17008" pos:column="56">*</type:modifier></type><name pos:line="17008" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17010" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17010" pos:column="43">HRESULT</name></type> ( <name pos:line="17010" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17010" pos:column="71">*</type:modifier><name pos:line="17010" pos:column="72">get_Selection</name> )<parameter_list pos:line="17010" pos:column="87">( 
            <param><decl><type><name pos:line="17011" pos:column="13">TextPane2</name> <type:modifier pos:line="17011" pos:column="23">*</type:modifier></type> <name pos:line="17011" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="17012" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17012" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="17012" pos:column="54">TextSelection</name> <type:modifier pos:line="17012" pos:column="68">*</type:modifier><type:modifier pos:line="17012" pos:column="69">*</type:modifier></type><name pos:line="17012" pos:column="70">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17014" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17014" pos:column="43">HRESULT</name></type> ( <name pos:line="17014" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17014" pos:column="71">*</type:modifier><name pos:line="17014" pos:column="72">get_StartPoint</name> )<parameter_list pos:line="17014" pos:column="88">( 
            <param><decl><type><name pos:line="17015" pos:column="13">TextPane2</name> <type:modifier pos:line="17015" pos:column="23">*</type:modifier></type> <name pos:line="17015" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="17016" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17016" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="17016" pos:column="54">TextPoint</name> <type:modifier pos:line="17016" pos:column="64">*</type:modifier><type:modifier pos:line="17016" pos:column="65">*</type:modifier></type><name pos:line="17016" pos:column="66">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17018" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17018" pos:column="34">HRESULT</name></type> ( <name pos:line="17018" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17018" pos:column="62">*</type:modifier><name pos:line="17018" pos:column="63">Activate</name> )<parameter_list pos:line="17018" pos:column="73">( 
            <param><decl><type><name pos:line="17019" pos:column="13">TextPane2</name> <type:modifier pos:line="17019" pos:column="23">*</type:modifier></type> <name pos:line="17019" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="17020" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17020" pos:column="33">__RPC__out</name> <name pos:line="17020" pos:column="44">void</name> <type:modifier pos:line="17020" pos:column="49">*</type:modifier></type><name pos:line="17020" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17022" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17022" pos:column="34">HRESULT</name></type> ( <name pos:line="17022" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17022" pos:column="62">*</type:modifier><name pos:line="17022" pos:column="63">IsVisible</name> )<parameter_list pos:line="17022" pos:column="74">( 
            <param><decl><type><name pos:line="17023" pos:column="13">TextPane2</name> <type:modifier pos:line="17023" pos:column="23">*</type:modifier></type> <name pos:line="17023" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="17024" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17024" pos:column="37">__RPC__in_opt</name> <name pos:line="17024" pos:column="51">TextPoint</name> <type:modifier pos:line="17024" pos:column="61">*</type:modifier></type><name pos:line="17024" pos:column="62">Point</name></decl></param>,
            <comment type="block" pos:line="17025" pos:column="13">/* [optional][in][idldescattr] */</comment> <param><decl><type><name pos:line="17025" pos:column="47">VARIANT</name></type> <name pos:line="17025" pos:column="55">PointOrCount</name></decl></param>,
            <comment type="block" pos:line="17026" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17026" pos:column="33">__RPC__out</name> <name pos:line="17026" pos:column="44">BOOLEAN</name> <type:modifier pos:line="17026" pos:column="52">*</type:modifier></type><name pos:line="17026" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17028" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="17028" pos:column="34">HRESULT</name> <argument_list pos:line="17028" pos:column="42">( <argument pos:line="17028" pos:column="44">STDMETHODCALLTYPE *TryToShow</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="17028" pos:column="74">(</op:operator> 
            <name pos:line="17029" pos:column="13">TextPane2</name> <op:operator pos:line="17029" pos:column="23">*</op:operator> <name pos:line="17029" pos:column="25">This</name><op:operator pos:line="17029" pos:column="29">,</op:operator>
            <comment type="block" pos:line="17030" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17030" pos:column="37">__RPC__in_opt</name> <name pos:line="17030" pos:column="51">TextPoint</name> <op:operator pos:line="17030" pos:column="61">*</op:operator><name pos:line="17030" pos:column="62">Point</name><op:operator pos:line="17030" pos:column="67">,</op:operator>
            <comment type="block" pos:line="17031" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="17031" pos:column="42">vsPaneShowHow</name> <name pos:line="17031" pos:column="56">How</name><op:operator pos:line="17031" pos:column="59">,</op:operator>
            <comment type="block" pos:line="17032" pos:column="13">/* [optional][in][idldescattr] */</comment> <name pos:line="17032" pos:column="47">VARIANT</name> <name pos:line="17032" pos:column="55">PointOrCount</name><op:operator pos:line="17032" pos:column="67">,</op:operator>
            <comment type="block" pos:line="17033" pos:column="13">/* [retval][out] */</comment> <name pos:line="17033" pos:column="33">__RPC__out</name> <name pos:line="17033" pos:column="44">BOOLEAN</name> <op:operator pos:line="17033" pos:column="52">*</op:operator><name pos:line="17033" pos:column="53">retval</name><op:operator pos:line="17033" pos:column="59">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="17035" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="17035" pos:column="73">HRESULT</name></type> ( <name pos:line="17035" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="17035" pos:column="101">*</type:modifier><name pos:line="17035" pos:column="102">get_IncrementalSearch</name> )<parameter_list pos:line="17035" pos:column="125">( 
            <param><decl><type><name pos:line="17036" pos:column="13">TextPane2</name> <type:modifier pos:line="17036" pos:column="23">*</type:modifier></type> <name pos:line="17036" pos:column="25">This</name></decl></param>,
            <comment type="block" pos:line="17037" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17037" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="17037" pos:column="54">IncrementalSearch</name> <type:modifier pos:line="17037" pos:column="72">*</type:modifier><type:modifier pos:line="17037" pos:column="73">*</type:modifier></type><name pos:line="17037" pos:column="74">ppIncrementalSearch</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17039" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17040" pos:column="7">TextPane2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17042" pos:column="5">interface</name></type> <name pos:line="17042" pos:column="15">TextPane2</name>
    <argument_list pos:line="17043" pos:column="5">{
        <argument><expr><name pos:line="17044" pos:column="9">CONST_VTBL</name> struct <name pos:line="17044" pos:column="27">TextPane2Vtbl</name> <op:operator pos:line="17044" pos:column="41">*</op:operator><name pos:line="17044" pos:column="42">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17049" pos:column="1">#<cpp:directive pos:line="17049" pos:column="2">ifdef</cpp:directive> <name pos:line="17049" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="17052" pos:column="1">#<cpp:directive pos:line="17052" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17052" pos:column="9">TextPane2_QueryInterface</name><parameter_list pos:line="17052" pos:column="33">(<param><type><name pos:line="17052" pos:column="34">This</name></type></param>,<param><type><name pos:line="17052" pos:column="39">riid</name></type></param>,<param><type><name pos:line="17052" pos:column="44">ppvObj</name></type></param>,<param><type><name pos:line="17052" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17053" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17055" pos:column="1">#<cpp:directive pos:line="17055" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17055" pos:column="9">TextPane2_AddRef</name><parameter_list pos:line="17055" pos:column="25">(<param><type><name pos:line="17055" pos:column="26">This</name></type></param>,<param><type><name pos:line="17055" pos:column="31">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17056" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17058" pos:column="1">#<cpp:directive pos:line="17058" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17058" pos:column="9">TextPane2_Release</name><parameter_list pos:line="17058" pos:column="26">(<param><type><name pos:line="17058" pos:column="27">This</name></type></param>,<param><type><name pos:line="17058" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17059" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17061" pos:column="1">#<cpp:directive pos:line="17061" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17061" pos:column="9">TextPane2_GetTypeInfoCount</name><parameter_list pos:line="17061" pos:column="35">(<param><type><name pos:line="17061" pos:column="36">This</name></type></param>,<param><type><name pos:line="17061" pos:column="41">pctinfo</name></type></param>,<param><type><name pos:line="17061" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17062" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17064" pos:column="1">#<cpp:directive pos:line="17064" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17064" pos:column="9">TextPane2_GetTypeInfo</name><parameter_list pos:line="17064" pos:column="30">(<param><type><name pos:line="17064" pos:column="31">This</name></type></param>,<param><type><name pos:line="17064" pos:column="36">itinfo</name></type></param>,<param><type><name pos:line="17064" pos:column="43">lcid</name></type></param>,<param><type><name pos:line="17064" pos:column="48">pptinfo</name></type></param>,<param><type><name pos:line="17064" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17065" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17067" pos:column="1">#<cpp:directive pos:line="17067" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17067" pos:column="9">TextPane2_GetIDsOfNames</name><parameter_list pos:line="17067" pos:column="32">(<param><type><name pos:line="17067" pos:column="33">This</name></type></param>,<param><type><name pos:line="17067" pos:column="38">riid</name></type></param>,<param><type><name pos:line="17067" pos:column="43">rgszNames</name></type></param>,<param><type><name pos:line="17067" pos:column="53">cNames</name></type></param>,<param><type><name pos:line="17067" pos:column="60">lcid</name></type></param>,<param><type><name pos:line="17067" pos:column="65">rgdispid</name></type></param>,<param><type><name pos:line="17067" pos:column="74">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17068" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17070" pos:column="1">#<cpp:directive pos:line="17070" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17070" pos:column="9">TextPane2_Invoke</name><parameter_list pos:line="17070" pos:column="25">(<param><type><name pos:line="17070" pos:column="26">This</name></type></param>,<param><type><name pos:line="17070" pos:column="31">dispidMember</name></type></param>,<param><type><name pos:line="17070" pos:column="44">riid</name></type></param>,<param><type><name pos:line="17070" pos:column="49">lcid</name></type></param>,<param><type><name pos:line="17070" pos:column="54">wFlags</name></type></param>,<param><type><name pos:line="17070" pos:column="61">pdispparams</name></type></param>,<param><type><name pos:line="17070" pos:column="73">pvarResult</name></type></param>,<param><type><name pos:line="17070" pos:column="84">pexcepinfo</name></type></param>,<param><type><name pos:line="17070" pos:column="95">puArgErr</name></type></param>,<param><type><name pos:line="17070" pos:column="104">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17071" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17073" pos:column="1">#<cpp:directive pos:line="17073" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17073" pos:column="9">TextPane2_get_DTE</name><parameter_list pos:line="17073" pos:column="26">(<param><type><name pos:line="17073" pos:column="27">This</name></type></param>,<param><type><name pos:line="17073" pos:column="32">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17074" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17076" pos:column="1">#<cpp:directive pos:line="17076" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17076" pos:column="9">TextPane2_get_Collection</name><parameter_list pos:line="17076" pos:column="33">(<param><type><name pos:line="17076" pos:column="34">This</name></type></param>,<param><type><name pos:line="17076" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17077" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17079" pos:column="1">#<cpp:directive pos:line="17079" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17079" pos:column="9">TextPane2_get_Window</name><parameter_list pos:line="17079" pos:column="29">(<param><type><name pos:line="17079" pos:column="30">This</name></type></param>,<param><type><name pos:line="17079" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17080" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Window(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17082" pos:column="1">#<cpp:directive pos:line="17082" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17082" pos:column="9">TextPane2_get_Height</name><parameter_list pos:line="17082" pos:column="29">(<param><type><name pos:line="17082" pos:column="30">This</name></type></param>,<param><type><name pos:line="17082" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17083" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Height(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17085" pos:column="1">#<cpp:directive pos:line="17085" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17085" pos:column="9">TextPane2_get_Width</name><parameter_list pos:line="17085" pos:column="28">(<param><type><name pos:line="17085" pos:column="29">This</name></type></param>,<param><type><name pos:line="17085" pos:column="34">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17086" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Width(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17088" pos:column="1">#<cpp:directive pos:line="17088" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17088" pos:column="9">TextPane2_get_Selection</name><parameter_list pos:line="17088" pos:column="32">(<param><type><name pos:line="17088" pos:column="33">This</name></type></param>,<param><type><name pos:line="17088" pos:column="38">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17089" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Selection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17091" pos:column="1">#<cpp:directive pos:line="17091" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17091" pos:column="9">TextPane2_get_StartPoint</name><parameter_list pos:line="17091" pos:column="33">(<param><type><name pos:line="17091" pos:column="34">This</name></type></param>,<param><type><name pos:line="17091" pos:column="39">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17092" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartPoint(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17094" pos:column="1">#<cpp:directive pos:line="17094" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17094" pos:column="9">TextPane2_Activate</name><parameter_list pos:line="17094" pos:column="27">(<param><type><name pos:line="17094" pos:column="28">This</name></type></param>,<param><type><name pos:line="17094" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17095" pos:column="5">( (This)-&gt;lpVtbl -&gt; Activate(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17097" pos:column="1">#<cpp:directive pos:line="17097" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17097" pos:column="9">TextPane2_IsVisible</name><parameter_list pos:line="17097" pos:column="28">(<param><type><name pos:line="17097" pos:column="29">This</name></type></param>,<param><type><name pos:line="17097" pos:column="34">Point</name></type></param>,<param><type><name pos:line="17097" pos:column="40">PointOrCount</name></type></param>,<param><type><name pos:line="17097" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17098" pos:column="5">( (This)-&gt;lpVtbl -&gt; IsVisible(This,Point,PointOrCount,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17100" pos:column="1">#<cpp:directive pos:line="17100" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17100" pos:column="9">TextPane2_TryToShow</name><parameter_list pos:line="17100" pos:column="28">(<param><type><name pos:line="17100" pos:column="29">This</name></type></param>,<param><type><name pos:line="17100" pos:column="34">Point</name></type></param>,<param><type><name pos:line="17100" pos:column="40">How</name></type></param>,<param><type><name pos:line="17100" pos:column="44">PointOrCount</name></type></param>,<param><type><name pos:line="17100" pos:column="57">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17101" pos:column="5">( (This)-&gt;lpVtbl -&gt; TryToShow(This,Point,How,PointOrCount,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="17104" pos:column="1">#<cpp:directive pos:line="17104" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17104" pos:column="9">TextPane2_get_IncrementalSearch</name><parameter_list pos:line="17104" pos:column="40">(<param><type><name pos:line="17104" pos:column="41">This</name></type></param>,<param><type><name pos:line="17104" pos:column="46">ppIncrementalSearch</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17105" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_IncrementalSearch(This,ppIncrementalSearch) )</cpp:value></cpp:define> 

<cpp:endif pos:line="17107" pos:column="1">#<cpp:directive pos:line="17107" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17107" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="17110" pos:column="1">#<cpp:directive pos:line="17110" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17110" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="17115" pos:column="1">#<cpp:directive pos:line="17115" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17115" pos:column="9">/* __TextPane2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="17118" pos:column="1">#<cpp:directive pos:line="17118" pos:column="2">ifndef</cpp:directive> <name pos:line="17118" pos:column="9">__SolutionConfiguration2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="17119" pos:column="1">#<cpp:directive pos:line="17119" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17119" pos:column="9">__SolutionConfiguration2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="17121" pos:column="1">/* interface SolutionConfiguration2 */</comment>
<comment type="block" pos:line="17122" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="17125" pos:column="1">EXTERN_C</name> <specifier pos:line="17125" pos:column="10">const</specifier> <name pos:line="17125" pos:column="16">IID</name></type> <name pos:line="17125" pos:column="20">IID_SolutionConfiguration2</name></decl>;</decl_stmt>

<cpp:if pos:line="17127" pos:column="1">#<cpp:directive pos:line="17127" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17127" pos:column="5">defined</name><argument_list pos:line="17127" pos:column="12">(<argument><expr><name pos:line="17127" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="17127" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="17127" pos:column="29">!</op:operator><call><name pos:line="17127" pos:column="30">defined</name><argument_list pos:line="17127" pos:column="37">(<argument><expr><name pos:line="17127" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="17129" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="17129" pos:column="19">(<argument pos:line="17129" pos:column="20">"1099AAA6-4169-430D-9F57-0B4C76624B3B"</argument>)</argument_list></macro>
    <label><name pos:line="17130" pos:column="5">SolutionConfiguration2</name> :</label> <expr_stmt><expr pos:line="17130" pos:column="30">public <name pos:line="17130" pos:column="37">SolutionConfiguration</name>
    <block pos:line="17131" pos:column="5">{
    <expr pos:line="17132" pos:column="5">public<op:operator pos:line="17132" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="17133" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="17133" pos:column="49">HRESULT</name> <name pos:line="17133" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="17133" pos:column="75">get_PlatformName</name><argument_list pos:line="17133" pos:column="91">( 
            <comment type="block" pos:line="17134" pos:column="13">/* [retval][out] */</comment> <argument pos:line="17134" pos:column="33">__RPC__deref_out_opt BSTR *pName</argument>)</argument_list></macro> <op:operator pos:line="17134" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="17134" pos:column="69">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="17138" pos:column="1">#<cpp:directive pos:line="17138" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="17138" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="17140" pos:column="5">typedef <type><struct pos:line="17140" pos:column="13">struct <name pos:line="17140" pos:column="20">SolutionConfiguration2Vtbl</name>
    <block pos:line="17141" pos:column="5">{<public type="default" pos:line="17141" pos:column="6">
        <decl_stmt><decl><type><name pos:line="17142" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="17144" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="17144" pos:column="46">HRESULT</name></type> ( <name pos:line="17144" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="17144" pos:column="74">*</type:modifier><name pos:line="17144" pos:column="75">QueryInterface</name> )<parameter_list pos:line="17144" pos:column="91">( 
            <param><decl><type><name pos:line="17145" pos:column="13">SolutionConfiguration2</name> <type:modifier pos:line="17145" pos:column="36">*</type:modifier></type> <name pos:line="17145" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="17146" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="17146" pos:column="47">struct <name pos:line="17146" pos:column="54">GUID</name> <type:modifier pos:line="17146" pos:column="59">*</type:modifier></type><name pos:line="17146" pos:column="60">riid</name></decl><op:operator pos:line="17146" pos:column="64">,</op:operator>
            <comment type="block" pos:line="17147" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="17147" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="17147" pos:column="59">void</name> <type:modifier pos:line="17147" pos:column="64">*</type:modifier><type:modifier pos:line="17147" pos:column="65">*</type:modifier><name pos:line="17147" pos:column="66">ppvObj</name><op:operator pos:line="17147" pos:column="72">,</op:operator>
            <comment type="block" pos:line="17148" pos:column="13">/* [retval][out] */</comment> <name pos:line="17148" pos:column="33">__RPC__out</name> <name pos:line="17148" pos:column="44">void</name> <type:modifier pos:line="17148" pos:column="49">*</type:modifier><name pos:line="17148" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="17150" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="17150" pos:column="46">HRESULT</name></type> ( <name pos:line="17150" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="17150" pos:column="74">*</type:modifier><name pos:line="17150" pos:column="75">AddRef</name> )<parameter_list pos:line="17150" pos:column="83">( 
            <param><decl><type><name pos:line="17151" pos:column="13">SolutionConfiguration2</name> <type:modifier pos:line="17151" pos:column="36">*</type:modifier></type> <name pos:line="17151" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="17152" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17152" pos:column="33">__RPC__out</name> <name pos:line="17152" pos:column="44">unsigned</name> <name pos:line="17152" pos:column="53">long</name> <type:modifier pos:line="17152" pos:column="58">*</type:modifier></type><name pos:line="17152" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17154" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="17154" pos:column="46">HRESULT</name></type> ( <name pos:line="17154" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="17154" pos:column="74">*</type:modifier><name pos:line="17154" pos:column="75">Release</name> )<parameter_list pos:line="17154" pos:column="84">( 
            <param><decl><type><name pos:line="17155" pos:column="13">SolutionConfiguration2</name> <type:modifier pos:line="17155" pos:column="36">*</type:modifier></type> <name pos:line="17155" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="17156" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17156" pos:column="33">__RPC__out</name> <name pos:line="17156" pos:column="44">unsigned</name> <name pos:line="17156" pos:column="53">long</name> <type:modifier pos:line="17156" pos:column="58">*</type:modifier></type><name pos:line="17156" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17158" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="17158" pos:column="46">HRESULT</name></type> ( <name pos:line="17158" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="17158" pos:column="74">*</type:modifier><name pos:line="17158" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="17158" pos:column="93">( 
            <param><decl><type><name pos:line="17159" pos:column="13">SolutionConfiguration2</name> <type:modifier pos:line="17159" pos:column="36">*</type:modifier></type> <name pos:line="17159" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="17160" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="17160" pos:column="38">__RPC__out</name> <name pos:line="17160" pos:column="49">unsigned</name> <name pos:line="17160" pos:column="58">UINT</name> <type:modifier pos:line="17160" pos:column="63">*</type:modifier></type><name pos:line="17160" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="17161" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17161" pos:column="33">__RPC__out</name> <name pos:line="17161" pos:column="44">void</name> <type:modifier pos:line="17161" pos:column="49">*</type:modifier></type><name pos:line="17161" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17163" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="17163" pos:column="46">HRESULT</name></type> ( <name pos:line="17163" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="17163" pos:column="74">*</type:modifier><name pos:line="17163" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="17163" pos:column="88">( 
            <param><decl><type><name pos:line="17164" pos:column="13">SolutionConfiguration2</name> <type:modifier pos:line="17164" pos:column="36">*</type:modifier></type> <name pos:line="17164" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="17165" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17165" pos:column="37">unsigned</name> <name pos:line="17165" pos:column="46">UINT</name></type> <name pos:line="17165" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="17166" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17166" pos:column="37">unsigned</name> <name pos:line="17166" pos:column="46">long</name></type> <name pos:line="17166" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="17167" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="17167" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="17167" pos:column="59">void</name> <type:modifier pos:line="17167" pos:column="64">*</type:modifier><type:modifier pos:line="17167" pos:column="65">*</type:modifier></type><name pos:line="17167" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="17168" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17168" pos:column="33">__RPC__out</name> <name pos:line="17168" pos:column="44">void</name> <type:modifier pos:line="17168" pos:column="49">*</type:modifier></type><name pos:line="17168" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17170" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="17170" pos:column="46">HRESULT</name> <argument_list pos:line="17170" pos:column="54">( <argument pos:line="17170" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="17170" pos:column="90">(</op:operator> 
            <name pos:line="17171" pos:column="13">SolutionConfiguration2</name> <op:operator pos:line="17171" pos:column="36">*</op:operator> <name pos:line="17171" pos:column="38">This</name><op:operator pos:line="17171" pos:column="42">,</op:operator>
            <comment type="block" pos:line="17172" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17172" pos:column="37">__RPC__in</name> struct <name pos:line="17172" pos:column="54">GUID</name> <op:operator pos:line="17172" pos:column="59">*</op:operator><name pos:line="17172" pos:column="60">riid</name><op:operator pos:line="17172" pos:column="64">,</op:operator>
            <comment type="block" pos:line="17173" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17173" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="17173" pos:column="57">signed</name> <name pos:line="17173" pos:column="64">char</name> <op:operator pos:line="17173" pos:column="69">*</op:operator><op:operator pos:line="17173" pos:column="70">*</op:operator><name pos:line="17173" pos:column="71">rgszNames</name><op:operator pos:line="17173" pos:column="80">,</op:operator>
            <comment type="block" pos:line="17174" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17174" pos:column="37">unsigned</name> <name pos:line="17174" pos:column="46">UINT</name> <name pos:line="17174" pos:column="51">cNames</name><op:operator pos:line="17174" pos:column="57">,</op:operator>
            <comment type="block" pos:line="17175" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17175" pos:column="37">unsigned</name> <name pos:line="17175" pos:column="46">long</name> <name pos:line="17175" pos:column="51">lcid</name><op:operator pos:line="17175" pos:column="55">,</op:operator>
            <comment type="block" pos:line="17176" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="17176" pos:column="38">__RPC__out</name> <name pos:line="17176" pos:column="49">signed</name> <name pos:line="17176" pos:column="56">long</name> <op:operator pos:line="17176" pos:column="61">*</op:operator><name pos:line="17176" pos:column="62">rgdispid</name><op:operator pos:line="17176" pos:column="70">,</op:operator>
            <comment type="block" pos:line="17177" pos:column="13">/* [retval][out] */</comment> <name pos:line="17177" pos:column="33">__RPC__out</name> <name pos:line="17177" pos:column="44">void</name> <op:operator pos:line="17177" pos:column="49">*</op:operator><name pos:line="17177" pos:column="50">retval</name><op:operator pos:line="17177" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="17179" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="17179" pos:column="46">HRESULT</name> <argument_list pos:line="17179" pos:column="54">( <argument pos:line="17179" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="17179" pos:column="83">(</op:operator> 
            <name pos:line="17180" pos:column="13">SolutionConfiguration2</name> <op:operator pos:line="17180" pos:column="36">*</op:operator> <name pos:line="17180" pos:column="38">This</name><op:operator pos:line="17180" pos:column="42">,</op:operator>
            <comment type="block" pos:line="17181" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17181" pos:column="37">signed</name> <name pos:line="17181" pos:column="44">long</name> <name pos:line="17181" pos:column="49">dispidMember</name><op:operator pos:line="17181" pos:column="61">,</op:operator>
            <comment type="block" pos:line="17182" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17182" pos:column="37">__RPC__in</name> struct <name pos:line="17182" pos:column="54">GUID</name> <op:operator pos:line="17182" pos:column="59">*</op:operator><name pos:line="17182" pos:column="60">riid</name><op:operator pos:line="17182" pos:column="64">,</op:operator>
            <comment type="block" pos:line="17183" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17183" pos:column="37">unsigned</name> <name pos:line="17183" pos:column="46">long</name> <name pos:line="17183" pos:column="51">lcid</name><op:operator pos:line="17183" pos:column="55">,</op:operator>
            <comment type="block" pos:line="17184" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17184" pos:column="37">unsigned</name> <name pos:line="17184" pos:column="46">short</name> <name pos:line="17184" pos:column="52">wFlags</name><op:operator pos:line="17184" pos:column="58">,</op:operator>
            <comment type="block" pos:line="17185" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17185" pos:column="37">__RPC__in</name> struct <name pos:line="17185" pos:column="54">DISPPARAMS</name> <op:operator pos:line="17185" pos:column="65">*</op:operator><name pos:line="17185" pos:column="66">pdispparams</name><op:operator pos:line="17185" pos:column="77">,</op:operator>
            <comment type="block" pos:line="17186" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="17186" pos:column="38">__RPC__out</name> <name pos:line="17186" pos:column="49">VARIANT</name> <op:operator pos:line="17186" pos:column="57">*</op:operator><name pos:line="17186" pos:column="58">pvarResult</name><op:operator pos:line="17186" pos:column="68">,</op:operator>
            <comment type="block" pos:line="17187" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="17187" pos:column="38">__RPC__out</name> struct <name pos:line="17187" pos:column="56">EXCEPINFO</name> <op:operator pos:line="17187" pos:column="66">*</op:operator><name pos:line="17187" pos:column="67">pexcepinfo</name><op:operator pos:line="17187" pos:column="77">,</op:operator>
            <comment type="block" pos:line="17188" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="17188" pos:column="38">__RPC__out</name> <name pos:line="17188" pos:column="49">unsigned</name> <name pos:line="17188" pos:column="58">UINT</name> <op:operator pos:line="17188" pos:column="63">*</op:operator><name pos:line="17188" pos:column="64">puArgErr</name><op:operator pos:line="17188" pos:column="72">,</op:operator>
            <comment type="block" pos:line="17189" pos:column="13">/* [retval][out] */</comment> <name pos:line="17189" pos:column="33">__RPC__out</name> <name pos:line="17189" pos:column="44">void</name> <op:operator pos:line="17189" pos:column="49">*</op:operator><name pos:line="17189" pos:column="50">retval</name><op:operator pos:line="17189" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="17191" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17191" pos:column="43">HRESULT</name></type> ( <name pos:line="17191" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17191" pos:column="71">*</type:modifier><name pos:line="17191" pos:column="72">get_DTE</name> )<parameter_list pos:line="17191" pos:column="81">( 
            <param><decl><type><name pos:line="17192" pos:column="13">SolutionConfiguration2</name> <type:modifier pos:line="17192" pos:column="36">*</type:modifier></type> <name pos:line="17192" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="17193" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17193" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="17193" pos:column="54">*</type:modifier><type:modifier pos:line="17193" pos:column="55">*</type:modifier></type><name pos:line="17193" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17195" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17195" pos:column="43">HRESULT</name></type> ( <name pos:line="17195" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17195" pos:column="71">*</type:modifier><name pos:line="17195" pos:column="72">get_Collection</name> )<parameter_list pos:line="17195" pos:column="88">( 
            <param><decl><type><name pos:line="17196" pos:column="13">SolutionConfiguration2</name> <type:modifier pos:line="17196" pos:column="36">*</type:modifier></type> <name pos:line="17196" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="17197" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17197" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="17197" pos:column="54">SolutionConfigurations</name> <type:modifier pos:line="17197" pos:column="77">*</type:modifier><type:modifier pos:line="17197" pos:column="78">*</type:modifier></type><name pos:line="17197" pos:column="79">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17199" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17199" pos:column="43">HRESULT</name></type> ( <name pos:line="17199" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17199" pos:column="71">*</type:modifier><name pos:line="17199" pos:column="72">get_Name</name> )<parameter_list pos:line="17199" pos:column="82">( 
            <param><decl><type><name pos:line="17200" pos:column="13">SolutionConfiguration2</name> <type:modifier pos:line="17200" pos:column="36">*</type:modifier></type> <name pos:line="17200" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="17201" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17201" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="17201" pos:column="54">BSTR</name> <type:modifier pos:line="17201" pos:column="59">*</type:modifier></type><name pos:line="17201" pos:column="60">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17203" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17203" pos:column="43">HRESULT</name></type> ( <name pos:line="17203" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17203" pos:column="71">*</type:modifier><name pos:line="17203" pos:column="72">get_SolutionContexts</name> )<parameter_list pos:line="17203" pos:column="94">( 
            <param><decl><type><name pos:line="17204" pos:column="13">SolutionConfiguration2</name> <type:modifier pos:line="17204" pos:column="36">*</type:modifier></type> <name pos:line="17204" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="17205" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17205" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="17205" pos:column="54">SolutionContexts</name> <type:modifier pos:line="17205" pos:column="71">*</type:modifier><type:modifier pos:line="17205" pos:column="72">*</type:modifier></type><name pos:line="17205" pos:column="73">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17207" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17207" pos:column="34">HRESULT</name></type> ( <name pos:line="17207" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17207" pos:column="62">*</type:modifier><name pos:line="17207" pos:column="63">Delete</name> )<parameter_list pos:line="17207" pos:column="71">( 
            <param><decl><type><name pos:line="17208" pos:column="13">SolutionConfiguration2</name> <type:modifier pos:line="17208" pos:column="36">*</type:modifier></type> <name pos:line="17208" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="17209" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17209" pos:column="33">__RPC__out</name> <name pos:line="17209" pos:column="44">void</name> <type:modifier pos:line="17209" pos:column="49">*</type:modifier></type><name pos:line="17209" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17211" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17211" pos:column="34">HRESULT</name></type> ( <name pos:line="17211" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17211" pos:column="62">*</type:modifier><name pos:line="17211" pos:column="63">Activate</name> )<parameter_list pos:line="17211" pos:column="73">( 
            <param><decl><type><name pos:line="17212" pos:column="13">SolutionConfiguration2</name> <type:modifier pos:line="17212" pos:column="36">*</type:modifier></type> <name pos:line="17212" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="17213" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17213" pos:column="33">__RPC__out</name> <name pos:line="17213" pos:column="44">void</name> <type:modifier pos:line="17213" pos:column="49">*</type:modifier></type><name pos:line="17213" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17215" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="17215" pos:column="41">HRESULT</name></type> ( <name pos:line="17215" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="17215" pos:column="69">*</type:modifier><name pos:line="17215" pos:column="70">get_PlatformName</name> )<parameter_list pos:line="17215" pos:column="88">( 
            <param><decl><type><name pos:line="17216" pos:column="13">SolutionConfiguration2</name> <type:modifier pos:line="17216" pos:column="36">*</type:modifier></type> <name pos:line="17216" pos:column="38">This</name></decl></param>,
            <comment type="block" pos:line="17217" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17217" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="17217" pos:column="54">BSTR</name> <type:modifier pos:line="17217" pos:column="59">*</type:modifier></type><name pos:line="17217" pos:column="60">pName</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17219" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17220" pos:column="7">SolutionConfiguration2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17222" pos:column="5">interface</name></type> <name pos:line="17222" pos:column="15">SolutionConfiguration2</name>
    <argument_list pos:line="17223" pos:column="5">{
        <argument><expr><name pos:line="17224" pos:column="9">CONST_VTBL</name> struct <name pos:line="17224" pos:column="27">SolutionConfiguration2Vtbl</name> <op:operator pos:line="17224" pos:column="54">*</op:operator><name pos:line="17224" pos:column="55">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17229" pos:column="1">#<cpp:directive pos:line="17229" pos:column="2">ifdef</cpp:directive> <name pos:line="17229" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="17232" pos:column="1">#<cpp:directive pos:line="17232" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17232" pos:column="9">SolutionConfiguration2_QueryInterface</name><parameter_list pos:line="17232" pos:column="46">(<param><type><name pos:line="17232" pos:column="47">This</name></type></param>,<param><type><name pos:line="17232" pos:column="52">riid</name></type></param>,<param><type><name pos:line="17232" pos:column="57">ppvObj</name></type></param>,<param><type><name pos:line="17232" pos:column="64">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17233" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17235" pos:column="1">#<cpp:directive pos:line="17235" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17235" pos:column="9">SolutionConfiguration2_AddRef</name><parameter_list pos:line="17235" pos:column="38">(<param><type><name pos:line="17235" pos:column="39">This</name></type></param>,<param><type><name pos:line="17235" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17236" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17238" pos:column="1">#<cpp:directive pos:line="17238" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17238" pos:column="9">SolutionConfiguration2_Release</name><parameter_list pos:line="17238" pos:column="39">(<param><type><name pos:line="17238" pos:column="40">This</name></type></param>,<param><type><name pos:line="17238" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17239" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17241" pos:column="1">#<cpp:directive pos:line="17241" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17241" pos:column="9">SolutionConfiguration2_GetTypeInfoCount</name><parameter_list pos:line="17241" pos:column="48">(<param><type><name pos:line="17241" pos:column="49">This</name></type></param>,<param><type><name pos:line="17241" pos:column="54">pctinfo</name></type></param>,<param><type><name pos:line="17241" pos:column="62">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17242" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17244" pos:column="1">#<cpp:directive pos:line="17244" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17244" pos:column="9">SolutionConfiguration2_GetTypeInfo</name><parameter_list pos:line="17244" pos:column="43">(<param><type><name pos:line="17244" pos:column="44">This</name></type></param>,<param><type><name pos:line="17244" pos:column="49">itinfo</name></type></param>,<param><type><name pos:line="17244" pos:column="56">lcid</name></type></param>,<param><type><name pos:line="17244" pos:column="61">pptinfo</name></type></param>,<param><type><name pos:line="17244" pos:column="69">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17245" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17247" pos:column="1">#<cpp:directive pos:line="17247" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17247" pos:column="9">SolutionConfiguration2_GetIDsOfNames</name><parameter_list pos:line="17247" pos:column="45">(<param><type><name pos:line="17247" pos:column="46">This</name></type></param>,<param><type><name pos:line="17247" pos:column="51">riid</name></type></param>,<param><type><name pos:line="17247" pos:column="56">rgszNames</name></type></param>,<param><type><name pos:line="17247" pos:column="66">cNames</name></type></param>,<param><type><name pos:line="17247" pos:column="73">lcid</name></type></param>,<param><type><name pos:line="17247" pos:column="78">rgdispid</name></type></param>,<param><type><name pos:line="17247" pos:column="87">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17248" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17250" pos:column="1">#<cpp:directive pos:line="17250" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17250" pos:column="9">SolutionConfiguration2_Invoke</name><parameter_list pos:line="17250" pos:column="38">(<param><type><name pos:line="17250" pos:column="39">This</name></type></param>,<param><type><name pos:line="17250" pos:column="44">dispidMember</name></type></param>,<param><type><name pos:line="17250" pos:column="57">riid</name></type></param>,<param><type><name pos:line="17250" pos:column="62">lcid</name></type></param>,<param><type><name pos:line="17250" pos:column="67">wFlags</name></type></param>,<param><type><name pos:line="17250" pos:column="74">pdispparams</name></type></param>,<param><type><name pos:line="17250" pos:column="86">pvarResult</name></type></param>,<param><type><name pos:line="17250" pos:column="97">pexcepinfo</name></type></param>,<param><type><name pos:line="17250" pos:column="108">puArgErr</name></type></param>,<param><type><name pos:line="17250" pos:column="117">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17251" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17253" pos:column="1">#<cpp:directive pos:line="17253" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17253" pos:column="9">SolutionConfiguration2_get_DTE</name><parameter_list pos:line="17253" pos:column="39">(<param><type><name pos:line="17253" pos:column="40">This</name></type></param>,<param><type><name pos:line="17253" pos:column="45">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17254" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17256" pos:column="1">#<cpp:directive pos:line="17256" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17256" pos:column="9">SolutionConfiguration2_get_Collection</name><parameter_list pos:line="17256" pos:column="46">(<param><type><name pos:line="17256" pos:column="47">This</name></type></param>,<param><type><name pos:line="17256" pos:column="52">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17257" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Collection(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17259" pos:column="1">#<cpp:directive pos:line="17259" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17259" pos:column="9">SolutionConfiguration2_get_Name</name><parameter_list pos:line="17259" pos:column="40">(<param><type><name pos:line="17259" pos:column="41">This</name></type></param>,<param><type><name pos:line="17259" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17260" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Name(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17262" pos:column="1">#<cpp:directive pos:line="17262" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17262" pos:column="9">SolutionConfiguration2_get_SolutionContexts</name><parameter_list pos:line="17262" pos:column="52">(<param><type><name pos:line="17262" pos:column="53">This</name></type></param>,<param><type><name pos:line="17262" pos:column="58">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17263" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SolutionContexts(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17265" pos:column="1">#<cpp:directive pos:line="17265" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17265" pos:column="9">SolutionConfiguration2_Delete</name><parameter_list pos:line="17265" pos:column="38">(<param><type><name pos:line="17265" pos:column="39">This</name></type></param>,<param><type><name pos:line="17265" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17266" pos:column="5">( (This)-&gt;lpVtbl -&gt; Delete(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17268" pos:column="1">#<cpp:directive pos:line="17268" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17268" pos:column="9">SolutionConfiguration2_Activate</name><parameter_list pos:line="17268" pos:column="40">(<param><type><name pos:line="17268" pos:column="41">This</name></type></param>,<param><type><name pos:line="17268" pos:column="46">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17269" pos:column="5">( (This)-&gt;lpVtbl -&gt; Activate(This,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="17272" pos:column="1">#<cpp:directive pos:line="17272" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17272" pos:column="9">SolutionConfiguration2_get_PlatformName</name><parameter_list pos:line="17272" pos:column="48">(<param><type><name pos:line="17272" pos:column="49">This</name></type></param>,<param><type><name pos:line="17272" pos:column="54">pName</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17273" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_PlatformName(This,pName) )</cpp:value></cpp:define> 

<cpp:endif pos:line="17275" pos:column="1">#<cpp:directive pos:line="17275" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17275" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="17278" pos:column="1">#<cpp:directive pos:line="17278" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17278" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="17283" pos:column="1">#<cpp:directive pos:line="17283" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17283" pos:column="9">/* __SolutionConfiguration2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="17286" pos:column="1">#<cpp:directive pos:line="17286" pos:column="2">ifndef</cpp:directive> <name pos:line="17286" pos:column="9">__IVsProfferCommands2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="17287" pos:column="1">#<cpp:directive pos:line="17287" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17287" pos:column="9">__IVsProfferCommands2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="17289" pos:column="1">/* interface IVsProfferCommands2 */</comment>
<comment type="block" pos:line="17290" pos:column="1">/* [object][restricted][hidden][version][uuid] */</comment> 


<decl_stmt><decl><type><name pos:line="17293" pos:column="1">EXTERN_C</name> <specifier pos:line="17293" pos:column="10">const</specifier> <name pos:line="17293" pos:column="16">IID</name></type> <name pos:line="17293" pos:column="20">IID_IVsProfferCommands2</name></decl>;</decl_stmt>

<cpp:if pos:line="17295" pos:column="1">#<cpp:directive pos:line="17295" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17295" pos:column="5">defined</name><argument_list pos:line="17295" pos:column="12">(<argument><expr><name pos:line="17295" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="17295" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="17295" pos:column="29">!</op:operator><call><name pos:line="17295" pos:column="30">defined</name><argument_list pos:line="17295" pos:column="37">(<argument><expr><name pos:line="17295" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="17297" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="17297" pos:column="19">(<argument pos:line="17297" pos:column="20">"c508b13c-06c5-40c7-b405-d327d4f8e268"</argument>)</argument_list></macro>
    <label><name pos:line="17298" pos:column="5">IVsProfferCommands2</name> :</label> <expr_stmt><expr pos:line="17298" pos:column="27">public <name pos:line="17298" pos:column="34">IVsProfferCommands</name>
    <block pos:line="17299" pos:column="5">{
    <expr pos:line="17300" pos:column="5">public<op:operator pos:line="17300" pos:column="11">:</op:operator>
        virtual <name pos:line="17301" pos:column="17">HRESULT</name> <name pos:line="17301" pos:column="25">STDMETHODCALLTYPE</name> <macro><name pos:line="17301" pos:column="43">AddNamedCommand2</name><argument_list pos:line="17301" pos:column="59">( 
            <comment type="block" pos:line="17302" pos:column="13">/* [in] */</comment> <argument pos:line="17302" pos:column="24">__RPC__in const GUID *pguidPackage</argument>,
            <comment type="block" pos:line="17303" pos:column="13">/* [in] */</comment> <argument pos:line="17303" pos:column="24">__RPC__in const GUID *pguidCmdGroup</argument>,
            <comment type="block" pos:line="17304" pos:column="13">/* [string][in] */</comment> <argument pos:line="17304" pos:column="32">__RPC__in const LPCOLESTR pszCmdNameCanonical</argument>,
            <comment type="block" pos:line="17305" pos:column="13">/* [out] */</comment> <argument pos:line="17305" pos:column="25">__RPC__out DWORD *pdwCmdId</argument>,
            <comment type="block" pos:line="17306" pos:column="13">/* [string][in] */</comment> <argument pos:line="17306" pos:column="32">__RPC__in const LPCOLESTR pszCmdNameLocalized</argument>,
            <comment type="block" pos:line="17307" pos:column="13">/* [string][in] */</comment> <argument pos:line="17307" pos:column="32">__RPC__in const LPCOLESTR pszBtnText</argument>,
            <comment type="block" pos:line="17308" pos:column="13">/* [string][in] */</comment> <argument pos:line="17308" pos:column="32">__RPC__in const LPCOLESTR pszCmdTooltip</argument>,
            <comment type="block" pos:line="17309" pos:column="13">/* [string][in] */</comment> <argument pos:line="17309" pos:column="32">__RPC__in const LPCOLESTR pszSatelliteDLL</argument>,
            <comment type="block" pos:line="17310" pos:column="13">/* [in] */</comment> <argument pos:line="17310" pos:column="24">DWORD dwBitmapResourceId</argument>,
            <comment type="block" pos:line="17311" pos:column="13">/* [in] */</comment> <argument pos:line="17311" pos:column="24">DWORD dwBitmapImageIndex</argument>,
            <comment type="block" pos:line="17312" pos:column="13">/* [in] */</comment> <argument pos:line="17312" pos:column="24">DWORD dwCmdFlagsDefault</argument>,
            <comment type="block" pos:line="17313" pos:column="13">/* [in] */</comment> <argument pos:line="17313" pos:column="24">DWORD cUIContexts</argument>,
            <comment type="block" pos:line="17314" pos:column="13">/* [size_is][in] */</comment> <argument pos:line="17314" pos:column="33">__RPC__in_ecount_full(cUIContexts) const GUID *rgguidUIContexts</argument>,
            <comment type="block" pos:line="17315" pos:column="13">/* [in] */</comment> <argument pos:line="17315" pos:column="24">DWORD dwUIElementType</argument>)</argument_list></macro> <op:operator pos:line="17315" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="17315" pos:column="49">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="17319" pos:column="1">#<cpp:directive pos:line="17319" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="17319" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="17321" pos:column="5">typedef <type><struct pos:line="17321" pos:column="13">struct <name pos:line="17321" pos:column="20">IVsProfferCommands2Vtbl</name>
    <block pos:line="17322" pos:column="5">{<public type="default" pos:line="17322" pos:column="6">
        <decl_stmt><decl><type><name pos:line="17323" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="17325" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="17325" pos:column="46">HRESULT</name></type> ( <name pos:line="17325" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="17325" pos:column="74">*</type:modifier><name pos:line="17325" pos:column="75">QueryInterface</name> )<parameter_list pos:line="17325" pos:column="91">( 
            <param><decl><type><name pos:line="17326" pos:column="13">IVsProfferCommands2</name> <type:modifier pos:line="17326" pos:column="33">*</type:modifier></type> <name pos:line="17326" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="17327" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="17327" pos:column="47">struct <name pos:line="17327" pos:column="54">GUID</name> <type:modifier pos:line="17327" pos:column="59">*</type:modifier></type><name pos:line="17327" pos:column="60">riid</name></decl><op:operator pos:line="17327" pos:column="64">,</op:operator>
            <comment type="block" pos:line="17328" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="17328" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="17328" pos:column="59">void</name> <type:modifier pos:line="17328" pos:column="64">*</type:modifier><type:modifier pos:line="17328" pos:column="65">*</type:modifier><name pos:line="17328" pos:column="66">ppvObj</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="17330" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="17330" pos:column="46">unsigned</name> <name pos:line="17330" pos:column="55">long</name></type> ( <name pos:line="17330" pos:column="62">STDMETHODCALLTYPE</name> <type:modifier pos:line="17330" pos:column="80">*</type:modifier><name pos:line="17330" pos:column="81">AddRef</name> )<parameter_list pos:line="17330" pos:column="89">( 
            <param><decl><type><name pos:line="17331" pos:column="13">IVsProfferCommands2</name> <type:modifier pos:line="17331" pos:column="33">*</type:modifier></type> <name pos:line="17331" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17333" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="17333" pos:column="46">unsigned</name> <name pos:line="17333" pos:column="55">long</name></type> ( <name pos:line="17333" pos:column="62">STDMETHODCALLTYPE</name> <type:modifier pos:line="17333" pos:column="80">*</type:modifier><name pos:line="17333" pos:column="81">Release</name> )<parameter_list pos:line="17333" pos:column="90">( 
            <param><decl><type><name pos:line="17334" pos:column="13">IVsProfferCommands2</name> <type:modifier pos:line="17334" pos:column="33">*</type:modifier></type> <name pos:line="17334" pos:column="35">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17336" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="17336" pos:column="34">HRESULT</name> <argument_list pos:line="17336" pos:column="42">( <argument pos:line="17336" pos:column="44">STDMETHODCALLTYPE *AddNamedCommand</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="17336" pos:column="80">(</op:operator> 
            <name pos:line="17337" pos:column="13">IVsProfferCommands2</name> <op:operator pos:line="17337" pos:column="33">*</op:operator> <name pos:line="17337" pos:column="35">This</name><op:operator pos:line="17337" pos:column="39">,</op:operator>
            <comment type="block" pos:line="17338" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17338" pos:column="37">__RPC__in</name> struct <name pos:line="17338" pos:column="54">GUID</name> <op:operator pos:line="17338" pos:column="59">*</op:operator><name pos:line="17338" pos:column="60">pguidPackage</name><op:operator pos:line="17338" pos:column="72">,</op:operator>
            <comment type="block" pos:line="17339" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17339" pos:column="37">__RPC__in</name> struct <name pos:line="17339" pos:column="54">GUID</name> <op:operator pos:line="17339" pos:column="59">*</op:operator><name pos:line="17339" pos:column="60">pguidCmdGroup</name><op:operator pos:line="17339" pos:column="73">,</op:operator>
            <comment type="block" pos:line="17340" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17340" pos:column="37">LPWSTR</name> <name pos:line="17340" pos:column="44">pszCmdNameCanonical</name><op:operator pos:line="17340" pos:column="63">,</op:operator>
            <comment type="block" pos:line="17341" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="17341" pos:column="38">__RPC__out</name> <name pos:line="17341" pos:column="49">unsigned</name> <name pos:line="17341" pos:column="58">long</name> <op:operator pos:line="17341" pos:column="63">*</op:operator><name pos:line="17341" pos:column="64">pdwCmdId</name><op:operator pos:line="17341" pos:column="72">,</op:operator>
            <comment type="block" pos:line="17342" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17342" pos:column="37">LPWSTR</name> <name pos:line="17342" pos:column="44">pszCmdNameLocalized</name><op:operator pos:line="17342" pos:column="63">,</op:operator>
            <comment type="block" pos:line="17343" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17343" pos:column="37">LPWSTR</name> <name pos:line="17343" pos:column="44">pszBtnText</name><op:operator pos:line="17343" pos:column="54">,</op:operator>
            <comment type="block" pos:line="17344" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17344" pos:column="37">LPWSTR</name> <name pos:line="17344" pos:column="44">pszCmdTooltip</name><op:operator pos:line="17344" pos:column="57">,</op:operator>
            <comment type="block" pos:line="17345" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17345" pos:column="37">LPWSTR</name> <name pos:line="17345" pos:column="44">pszSatelliteDLL</name><op:operator pos:line="17345" pos:column="59">,</op:operator>
            <comment type="block" pos:line="17346" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17346" pos:column="37">unsigned</name> <name pos:line="17346" pos:column="46">long</name> <name pos:line="17346" pos:column="51">dwBitmapResourceId</name><op:operator pos:line="17346" pos:column="69">,</op:operator>
            <comment type="block" pos:line="17347" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17347" pos:column="37">unsigned</name> <name pos:line="17347" pos:column="46">long</name> <name pos:line="17347" pos:column="51">dwBitmapImageIndex</name><op:operator pos:line="17347" pos:column="69">,</op:operator>
            <comment type="block" pos:line="17348" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17348" pos:column="37">unsigned</name> <name pos:line="17348" pos:column="46">long</name> <name pos:line="17348" pos:column="51">dwCmdFlagsDefault</name><op:operator pos:line="17348" pos:column="68">,</op:operator>
            <comment type="block" pos:line="17349" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17349" pos:column="37">unsigned</name> <name pos:line="17349" pos:column="46">long</name> <name pos:line="17349" pos:column="51">cUIContexts</name><op:operator pos:line="17349" pos:column="62">,</op:operator>
            <comment type="block" pos:line="17350" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17350" pos:column="37">__RPC__in</name> struct <name pos:line="17350" pos:column="54">GUID</name> <op:operator pos:line="17350" pos:column="59">*</op:operator><name pos:line="17350" pos:column="60">rgguidUIContexts</name><op:operator pos:line="17350" pos:column="76">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="17352" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17352" pos:column="34">HRESULT</name></type> ( <name pos:line="17352" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17352" pos:column="62">*</type:modifier><name pos:line="17352" pos:column="63">RemoveNamedCommand</name> )<parameter_list pos:line="17352" pos:column="83">( 
            <param><decl><type><name pos:line="17353" pos:column="13">IVsProfferCommands2</name> <type:modifier pos:line="17353" pos:column="33">*</type:modifier></type> <name pos:line="17353" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="17354" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17354" pos:column="37">LPWSTR</name></type> <name pos:line="17354" pos:column="44">pszCmdNameCanonical</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17356" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17356" pos:column="34">HRESULT</name></type> ( <name pos:line="17356" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17356" pos:column="62">*</type:modifier><name pos:line="17356" pos:column="63">RenameNamedCommand</name> )<parameter_list pos:line="17356" pos:column="83">( 
            <param><decl><type><name pos:line="17357" pos:column="13">IVsProfferCommands2</name> <type:modifier pos:line="17357" pos:column="33">*</type:modifier></type> <name pos:line="17357" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="17358" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17358" pos:column="37">LPWSTR</name></type> <name pos:line="17358" pos:column="44">pszCmdNameCanonical</name></decl></param>,
            <comment type="block" pos:line="17359" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17359" pos:column="37">LPWSTR</name></type> <name pos:line="17359" pos:column="44">pszCmdNameCanonicalNew</name></decl></param>,
            <comment type="block" pos:line="17360" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17360" pos:column="37">LPWSTR</name></type> <name pos:line="17360" pos:column="44">pszCmdNameLocalizedNew</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17362" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17362" pos:column="34">HRESULT</name></type> ( <name pos:line="17362" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17362" pos:column="62">*</type:modifier><name pos:line="17362" pos:column="63">AddCommandBarControl</name> )<parameter_list pos:line="17362" pos:column="85">( 
            <param><decl><type><name pos:line="17363" pos:column="13">IVsProfferCommands2</name> <type:modifier pos:line="17363" pos:column="33">*</type:modifier></type> <name pos:line="17363" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="17364" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17364" pos:column="37">LPWSTR</name></type> <name pos:line="17364" pos:column="44">pszCmdNameCanonical</name></decl></param>,
            <comment type="block" pos:line="17365" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17365" pos:column="37">__RPC__in_opt</name> <name pos:line="17365" pos:column="51">IDispatch</name> <type:modifier pos:line="17365" pos:column="61">*</type:modifier></type><name pos:line="17365" pos:column="62">pCmdBarParent</name></decl></param>,
            <comment type="block" pos:line="17366" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17366" pos:column="37">unsigned</name> <name pos:line="17366" pos:column="46">long</name></type> <name pos:line="17366" pos:column="51">dwIndex</name></decl></param>,
            <comment type="block" pos:line="17367" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17367" pos:column="37">unsigned</name> <name pos:line="17367" pos:column="46">long</name></type> <name pos:line="17367" pos:column="51">dwCmdType</name></decl></param>,
            <comment type="block" pos:line="17368" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="17368" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="17368" pos:column="59">IDispatch</name> <type:modifier pos:line="17368" pos:column="69">*</type:modifier><type:modifier pos:line="17368" pos:column="70">*</type:modifier></type><name pos:line="17368" pos:column="71">ppCmdBarCtrl</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17370" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17370" pos:column="34">HRESULT</name></type> ( <name pos:line="17370" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17370" pos:column="62">*</type:modifier><name pos:line="17370" pos:column="63">RemoveCommandBarControl</name> )<parameter_list pos:line="17370" pos:column="88">( 
            <param><decl><type><name pos:line="17371" pos:column="13">IVsProfferCommands2</name> <type:modifier pos:line="17371" pos:column="33">*</type:modifier></type> <name pos:line="17371" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="17372" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17372" pos:column="37">__RPC__in_opt</name> <name pos:line="17372" pos:column="51">IDispatch</name> <type:modifier pos:line="17372" pos:column="61">*</type:modifier></type><name pos:line="17372" pos:column="62">pCmdBarCtrl</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17374" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="17374" pos:column="34">HRESULT</name> <argument_list pos:line="17374" pos:column="42">( <argument pos:line="17374" pos:column="44">STDMETHODCALLTYPE *AddCommandBar</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="17374" pos:column="78">(</op:operator> 
            <name pos:line="17375" pos:column="13">IVsProfferCommands2</name> <op:operator pos:line="17375" pos:column="33">*</op:operator> <name pos:line="17375" pos:column="35">This</name><op:operator pos:line="17375" pos:column="39">,</op:operator>
            <comment type="block" pos:line="17376" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17376" pos:column="37">LPWSTR</name> <name pos:line="17376" pos:column="44">pszCmdBarName</name><op:operator pos:line="17376" pos:column="57">,</op:operator>
            <comment type="block" pos:line="17377" pos:column="13">/* [in][idldescattr] */</comment> enum <name pos:line="17377" pos:column="42">vsCommandBarType</name> <name pos:line="17377" pos:column="59">dwType</name><op:operator pos:line="17377" pos:column="65">,</op:operator>
            <comment type="block" pos:line="17378" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17378" pos:column="37">__RPC__in_opt</name> <name pos:line="17378" pos:column="51">IDispatch</name> <op:operator pos:line="17378" pos:column="61">*</op:operator><name pos:line="17378" pos:column="62">pCmdBarParent</name><op:operator pos:line="17378" pos:column="75">,</op:operator>
            <comment type="block" pos:line="17379" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17379" pos:column="37">unsigned</name> <name pos:line="17379" pos:column="46">long</name> <name pos:line="17379" pos:column="51">dwIndex</name><op:operator pos:line="17379" pos:column="58">,</op:operator>
            <comment type="block" pos:line="17380" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="17380" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="17380" pos:column="59">IDispatch</name> <op:operator pos:line="17380" pos:column="69">*</op:operator><op:operator pos:line="17380" pos:column="70">*</op:operator><name pos:line="17380" pos:column="71">ppCmdBar</name><op:operator pos:line="17380" pos:column="79">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="17382" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17382" pos:column="34">HRESULT</name></type> ( <name pos:line="17382" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17382" pos:column="62">*</type:modifier><name pos:line="17382" pos:column="63">RemoveCommandBar</name> )<parameter_list pos:line="17382" pos:column="81">( 
            <param><decl><type><name pos:line="17383" pos:column="13">IVsProfferCommands2</name> <type:modifier pos:line="17383" pos:column="33">*</type:modifier></type> <name pos:line="17383" pos:column="35">This</name></decl></param>,
            <comment type="block" pos:line="17384" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17384" pos:column="37">__RPC__in_opt</name> <name pos:line="17384" pos:column="51">IDispatch</name> <type:modifier pos:line="17384" pos:column="61">*</type:modifier></type><name pos:line="17384" pos:column="62">pCmdBar</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17386" pos:column="9">/* [id][funcdescattr] */</comment> <macro><name pos:line="17386" pos:column="34">HRESULT</name> <argument_list pos:line="17386" pos:column="42">( <argument pos:line="17386" pos:column="44">STDMETHODCALLTYPE *FindCommandBar</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="17386" pos:column="79">(</op:operator> 
            <name pos:line="17387" pos:column="13">IVsProfferCommands2</name> <op:operator pos:line="17387" pos:column="33">*</op:operator> <name pos:line="17387" pos:column="35">This</name><op:operator pos:line="17387" pos:column="39">,</op:operator>
            <comment type="block" pos:line="17388" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17388" pos:column="37">__RPC__in</name> <name pos:line="17388" pos:column="47">void</name> <op:operator pos:line="17388" pos:column="52">*</op:operator><name pos:line="17388" pos:column="53">pToolbarSet</name><op:operator pos:line="17388" pos:column="64">,</op:operator>
            <comment type="block" pos:line="17389" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17389" pos:column="37">__RPC__in</name> struct <name pos:line="17389" pos:column="54">GUID</name> <op:operator pos:line="17389" pos:column="59">*</op:operator><name pos:line="17389" pos:column="60">pguidCmdGroup</name><op:operator pos:line="17389" pos:column="73">,</op:operator>
            <comment type="block" pos:line="17390" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17390" pos:column="37">unsigned</name> <name pos:line="17390" pos:column="46">long</name> <name pos:line="17390" pos:column="51">dwMenuId</name><op:operator pos:line="17390" pos:column="59">,</op:operator>
            <comment type="block" pos:line="17391" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="17391" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="17391" pos:column="59">IDispatch</name> <op:operator pos:line="17391" pos:column="69">*</op:operator><op:operator pos:line="17391" pos:column="70">*</op:operator><name pos:line="17391" pos:column="71">ppdispCmdBar</name><op:operator pos:line="17391" pos:column="83">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="17393" pos:column="9">HRESULT</name> <argument_list pos:line="17393" pos:column="17">( <argument pos:line="17393" pos:column="19">STDMETHODCALLTYPE *AddNamedCommand2</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="17393" pos:column="56">(</op:operator> 
            <name pos:line="17394" pos:column="13">IVsProfferCommands2</name> <op:operator pos:line="17394" pos:column="33">*</op:operator> <name pos:line="17394" pos:column="35">This</name><op:operator pos:line="17394" pos:column="39">,</op:operator>
            <comment type="block" pos:line="17395" pos:column="13">/* [in] */</comment> <name pos:line="17395" pos:column="24">__RPC__in</name> const <name pos:line="17395" pos:column="40">GUID</name> <op:operator pos:line="17395" pos:column="45">*</op:operator><name pos:line="17395" pos:column="46">pguidPackage</name><op:operator pos:line="17395" pos:column="58">,</op:operator>
            <comment type="block" pos:line="17396" pos:column="13">/* [in] */</comment> <name pos:line="17396" pos:column="24">__RPC__in</name> const <name pos:line="17396" pos:column="40">GUID</name> <op:operator pos:line="17396" pos:column="45">*</op:operator><name pos:line="17396" pos:column="46">pguidCmdGroup</name><op:operator pos:line="17396" pos:column="59">,</op:operator>
            <comment type="block" pos:line="17397" pos:column="13">/* [string][in] */</comment> <name pos:line="17397" pos:column="32">__RPC__in</name> const <name pos:line="17397" pos:column="48">LPCOLESTR</name> <name pos:line="17397" pos:column="58">pszCmdNameCanonical</name><op:operator pos:line="17397" pos:column="77">,</op:operator>
            <comment type="block" pos:line="17398" pos:column="13">/* [out] */</comment> <name pos:line="17398" pos:column="25">__RPC__out</name> <name pos:line="17398" pos:column="36">DWORD</name> <op:operator pos:line="17398" pos:column="42">*</op:operator><name pos:line="17398" pos:column="43">pdwCmdId</name><op:operator pos:line="17398" pos:column="51">,</op:operator>
            <comment type="block" pos:line="17399" pos:column="13">/* [string][in] */</comment> <name pos:line="17399" pos:column="32">__RPC__in</name> const <name pos:line="17399" pos:column="48">LPCOLESTR</name> <name pos:line="17399" pos:column="58">pszCmdNameLocalized</name><op:operator pos:line="17399" pos:column="77">,</op:operator>
            <comment type="block" pos:line="17400" pos:column="13">/* [string][in] */</comment> <name pos:line="17400" pos:column="32">__RPC__in</name> const <name pos:line="17400" pos:column="48">LPCOLESTR</name> <name pos:line="17400" pos:column="58">pszBtnText</name><op:operator pos:line="17400" pos:column="68">,</op:operator>
            <comment type="block" pos:line="17401" pos:column="13">/* [string][in] */</comment> <name pos:line="17401" pos:column="32">__RPC__in</name> const <name pos:line="17401" pos:column="48">LPCOLESTR</name> <name pos:line="17401" pos:column="58">pszCmdTooltip</name><op:operator pos:line="17401" pos:column="71">,</op:operator>
            <comment type="block" pos:line="17402" pos:column="13">/* [string][in] */</comment> <name pos:line="17402" pos:column="32">__RPC__in</name> const <name pos:line="17402" pos:column="48">LPCOLESTR</name> <name pos:line="17402" pos:column="58">pszSatelliteDLL</name><op:operator pos:line="17402" pos:column="73">,</op:operator>
            <comment type="block" pos:line="17403" pos:column="13">/* [in] */</comment> <name pos:line="17403" pos:column="24">DWORD</name> <name pos:line="17403" pos:column="30">dwBitmapResourceId</name><op:operator pos:line="17403" pos:column="48">,</op:operator>
            <comment type="block" pos:line="17404" pos:column="13">/* [in] */</comment> <name pos:line="17404" pos:column="24">DWORD</name> <name pos:line="17404" pos:column="30">dwBitmapImageIndex</name><op:operator pos:line="17404" pos:column="48">,</op:operator>
            <comment type="block" pos:line="17405" pos:column="13">/* [in] */</comment> <name pos:line="17405" pos:column="24">DWORD</name> <name pos:line="17405" pos:column="30">dwCmdFlagsDefault</name><op:operator pos:line="17405" pos:column="47">,</op:operator>
            <comment type="block" pos:line="17406" pos:column="13">/* [in] */</comment> <name pos:line="17406" pos:column="24">DWORD</name> <name pos:line="17406" pos:column="30">cUIContexts</name><op:operator pos:line="17406" pos:column="41">,</op:operator>
            <comment type="block" pos:line="17407" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="17407" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="17407" pos:column="54">(<argument pos:line="17407" pos:column="55">cUIContexts</argument>)</argument_list></macro> const <name pos:line="17407" pos:column="74">GUID</name> <op:operator pos:line="17407" pos:column="79">*</op:operator><name pos:line="17407" pos:column="80">rgguidUIContexts</name><op:operator pos:line="17407" pos:column="96">,</op:operator>
            <comment type="block" pos:line="17408" pos:column="13">/* [in] */</comment> <name pos:line="17408" pos:column="24">DWORD</name> <name pos:line="17408" pos:column="30">dwUIElementType</name><op:operator pos:line="17408" pos:column="45">)</op:operator></expr>;</expr_stmt>
        
        <macro><name pos:line="17410" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17411" pos:column="7">IVsProfferCommands2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17413" pos:column="5">interface</name></type> <name pos:line="17413" pos:column="15">IVsProfferCommands2</name>
    <argument_list pos:line="17414" pos:column="5">{
        <argument><expr><name pos:line="17415" pos:column="9">CONST_VTBL</name> struct <name pos:line="17415" pos:column="27">IVsProfferCommands2Vtbl</name> <op:operator pos:line="17415" pos:column="51">*</op:operator><name pos:line="17415" pos:column="52">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17420" pos:column="1">#<cpp:directive pos:line="17420" pos:column="2">ifdef</cpp:directive> <name pos:line="17420" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="17423" pos:column="1">#<cpp:directive pos:line="17423" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17423" pos:column="9">IVsProfferCommands2_QueryInterface</name><parameter_list pos:line="17423" pos:column="43">(<param><type><name pos:line="17423" pos:column="44">This</name></type></param>,<param><type><name pos:line="17423" pos:column="49">riid</name></type></param>,<param><type><name pos:line="17423" pos:column="54">ppvObj</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17424" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj) )</cpp:value></cpp:define> 

<cpp:define pos:line="17426" pos:column="1">#<cpp:directive pos:line="17426" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17426" pos:column="9">IVsProfferCommands2_AddRef</name><parameter_list pos:line="17426" pos:column="35">(<param><type><name pos:line="17426" pos:column="36">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17427" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="17429" pos:column="1">#<cpp:directive pos:line="17429" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17429" pos:column="9">IVsProfferCommands2_Release</name><parameter_list pos:line="17429" pos:column="36">(<param><type><name pos:line="17429" pos:column="37">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17430" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="17433" pos:column="1">#<cpp:directive pos:line="17433" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17433" pos:column="9">IVsProfferCommands2_AddNamedCommand</name><parameter_list pos:line="17433" pos:column="44">(<param><type><name pos:line="17433" pos:column="45">This</name></type></param>,<param><type><name pos:line="17433" pos:column="50">pguidPackage</name></type></param>,<param><type><name pos:line="17433" pos:column="63">pguidCmdGroup</name></type></param>,<param><type><name pos:line="17433" pos:column="77">pszCmdNameCanonical</name></type></param>,<param><type><name pos:line="17433" pos:column="97">pdwCmdId</name></type></param>,<param><type><name pos:line="17433" pos:column="106">pszCmdNameLocalized</name></type></param>,<param><type><name pos:line="17433" pos:column="126">pszBtnText</name></type></param>,<param><type><name pos:line="17433" pos:column="137">pszCmdTooltip</name></type></param>,<param><type><name pos:line="17433" pos:column="151">pszSatelliteDLL</name></type></param>,<param><type><name pos:line="17433" pos:column="167">dwBitmapResourceId</name></type></param>,<param><type><name pos:line="17433" pos:column="186">dwBitmapImageIndex</name></type></param>,<param><type><name pos:line="17433" pos:column="205">dwCmdFlagsDefault</name></type></param>,<param><type><name pos:line="17433" pos:column="223">cUIContexts</name></type></param>,<param><type><name pos:line="17433" pos:column="235">rgguidUIContexts</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17434" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddNamedCommand(This,pguidPackage,pguidCmdGroup,pszCmdNameCanonical,pdwCmdId,pszCmdNameLocalized,pszBtnText,pszCmdTooltip,pszSatelliteDLL,dwBitmapResourceId,dwBitmapImageIndex,dwCmdFlagsDefault,cUIContexts,rgguidUIContexts) )</cpp:value></cpp:define> 

<cpp:define pos:line="17436" pos:column="1">#<cpp:directive pos:line="17436" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17436" pos:column="9">IVsProfferCommands2_RemoveNamedCommand</name><parameter_list pos:line="17436" pos:column="47">(<param><type><name pos:line="17436" pos:column="48">This</name></type></param>,<param><type><name pos:line="17436" pos:column="53">pszCmdNameCanonical</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17437" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveNamedCommand(This,pszCmdNameCanonical) )</cpp:value></cpp:define> 

<cpp:define pos:line="17439" pos:column="1">#<cpp:directive pos:line="17439" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17439" pos:column="9">IVsProfferCommands2_RenameNamedCommand</name><parameter_list pos:line="17439" pos:column="47">(<param><type><name pos:line="17439" pos:column="48">This</name></type></param>,<param><type><name pos:line="17439" pos:column="53">pszCmdNameCanonical</name></type></param>,<param><type><name pos:line="17439" pos:column="73">pszCmdNameCanonicalNew</name></type></param>,<param><type><name pos:line="17439" pos:column="96">pszCmdNameLocalizedNew</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17440" pos:column="5">( (This)-&gt;lpVtbl -&gt; RenameNamedCommand(This,pszCmdNameCanonical,pszCmdNameCanonicalNew,pszCmdNameLocalizedNew) )</cpp:value></cpp:define> 

<cpp:define pos:line="17442" pos:column="1">#<cpp:directive pos:line="17442" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17442" pos:column="9">IVsProfferCommands2_AddCommandBarControl</name><parameter_list pos:line="17442" pos:column="49">(<param><type><name pos:line="17442" pos:column="50">This</name></type></param>,<param><type><name pos:line="17442" pos:column="55">pszCmdNameCanonical</name></type></param>,<param><type><name pos:line="17442" pos:column="75">pCmdBarParent</name></type></param>,<param><type><name pos:line="17442" pos:column="89">dwIndex</name></type></param>,<param><type><name pos:line="17442" pos:column="97">dwCmdType</name></type></param>,<param><type><name pos:line="17442" pos:column="107">ppCmdBarCtrl</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17443" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddCommandBarControl(This,pszCmdNameCanonical,pCmdBarParent,dwIndex,dwCmdType,ppCmdBarCtrl) )</cpp:value></cpp:define> 

<cpp:define pos:line="17445" pos:column="1">#<cpp:directive pos:line="17445" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17445" pos:column="9">IVsProfferCommands2_RemoveCommandBarControl</name><parameter_list pos:line="17445" pos:column="52">(<param><type><name pos:line="17445" pos:column="53">This</name></type></param>,<param><type><name pos:line="17445" pos:column="58">pCmdBarCtrl</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17446" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveCommandBarControl(This,pCmdBarCtrl) )</cpp:value></cpp:define> 

<cpp:define pos:line="17448" pos:column="1">#<cpp:directive pos:line="17448" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17448" pos:column="9">IVsProfferCommands2_AddCommandBar</name><parameter_list pos:line="17448" pos:column="42">(<param><type><name pos:line="17448" pos:column="43">This</name></type></param>,<param><type><name pos:line="17448" pos:column="48">pszCmdBarName</name></type></param>,<param><type><name pos:line="17448" pos:column="62">dwType</name></type></param>,<param><type><name pos:line="17448" pos:column="69">pCmdBarParent</name></type></param>,<param><type><name pos:line="17448" pos:column="83">dwIndex</name></type></param>,<param><type><name pos:line="17448" pos:column="91">ppCmdBar</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17449" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddCommandBar(This,pszCmdBarName,dwType,pCmdBarParent,dwIndex,ppCmdBar) )</cpp:value></cpp:define> 

<cpp:define pos:line="17451" pos:column="1">#<cpp:directive pos:line="17451" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17451" pos:column="9">IVsProfferCommands2_RemoveCommandBar</name><parameter_list pos:line="17451" pos:column="45">(<param><type><name pos:line="17451" pos:column="46">This</name></type></param>,<param><type><name pos:line="17451" pos:column="51">pCmdBar</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17452" pos:column="5">( (This)-&gt;lpVtbl -&gt; RemoveCommandBar(This,pCmdBar) )</cpp:value></cpp:define> 

<cpp:define pos:line="17454" pos:column="1">#<cpp:directive pos:line="17454" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17454" pos:column="9">IVsProfferCommands2_FindCommandBar</name><parameter_list pos:line="17454" pos:column="43">(<param><type><name pos:line="17454" pos:column="44">This</name></type></param>,<param><type><name pos:line="17454" pos:column="49">pToolbarSet</name></type></param>,<param><type><name pos:line="17454" pos:column="61">pguidCmdGroup</name></type></param>,<param><type><name pos:line="17454" pos:column="75">dwMenuId</name></type></param>,<param><type><name pos:line="17454" pos:column="84">ppdispCmdBar</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17455" pos:column="5">( (This)-&gt;lpVtbl -&gt; FindCommandBar(This,pToolbarSet,pguidCmdGroup,dwMenuId,ppdispCmdBar) )</cpp:value></cpp:define> 


<cpp:define pos:line="17458" pos:column="1">#<cpp:directive pos:line="17458" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17458" pos:column="9">IVsProfferCommands2_AddNamedCommand2</name><parameter_list pos:line="17458" pos:column="45">(<param><type><name pos:line="17458" pos:column="46">This</name></type></param>,<param><type><name pos:line="17458" pos:column="51">pguidPackage</name></type></param>,<param><type><name pos:line="17458" pos:column="64">pguidCmdGroup</name></type></param>,<param><type><name pos:line="17458" pos:column="78">pszCmdNameCanonical</name></type></param>,<param><type><name pos:line="17458" pos:column="98">pdwCmdId</name></type></param>,<param><type><name pos:line="17458" pos:column="107">pszCmdNameLocalized</name></type></param>,<param><type><name pos:line="17458" pos:column="127">pszBtnText</name></type></param>,<param><type><name pos:line="17458" pos:column="138">pszCmdTooltip</name></type></param>,<param><type><name pos:line="17458" pos:column="152">pszSatelliteDLL</name></type></param>,<param><type><name pos:line="17458" pos:column="168">dwBitmapResourceId</name></type></param>,<param><type><name pos:line="17458" pos:column="187">dwBitmapImageIndex</name></type></param>,<param><type><name pos:line="17458" pos:column="206">dwCmdFlagsDefault</name></type></param>,<param><type><name pos:line="17458" pos:column="224">cUIContexts</name></type></param>,<param><type><name pos:line="17458" pos:column="236">rgguidUIContexts</name></type></param>,<param><type><name pos:line="17458" pos:column="253">dwUIElementType</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17459" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddNamedCommand2(This,pguidPackage,pguidCmdGroup,pszCmdNameCanonical,pdwCmdId,pszCmdNameLocalized,pszBtnText,pszCmdTooltip,pszSatelliteDLL,dwBitmapResourceId,dwBitmapImageIndex,dwCmdFlagsDefault,cUIContexts,rgguidUIContexts,dwUIElementType) )</cpp:value></cpp:define> 

<cpp:endif pos:line="17461" pos:column="1">#<cpp:directive pos:line="17461" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17461" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="17464" pos:column="1">#<cpp:directive pos:line="17464" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17464" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="17469" pos:column="1">#<cpp:directive pos:line="17469" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17469" pos:column="9">/* __IVsProfferCommands2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="17472" pos:column="1">#<cpp:directive pos:line="17472" pos:column="2">ifndef</cpp:directive> <name pos:line="17472" pos:column="9">__SolutionBuild2_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="17473" pos:column="1">#<cpp:directive pos:line="17473" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17473" pos:column="9">__SolutionBuild2_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="17475" pos:column="1">/* interface SolutionBuild2 */</comment>
<comment type="block" pos:line="17476" pos:column="1">/* [helpstringcontext][helpstring][helpcontext][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="17479" pos:column="1">EXTERN_C</name> <specifier pos:line="17479" pos:column="10">const</specifier> <name pos:line="17479" pos:column="16">IID</name></type> <name pos:line="17479" pos:column="20">IID_SolutionBuild2</name></decl>;</decl_stmt>

<cpp:if pos:line="17481" pos:column="1">#<cpp:directive pos:line="17481" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17481" pos:column="5">defined</name><argument_list pos:line="17481" pos:column="12">(<argument><expr><name pos:line="17481" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="17481" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="17481" pos:column="29">!</op:operator><call><name pos:line="17481" pos:column="30">defined</name><argument_list pos:line="17481" pos:column="37">(<argument><expr><name pos:line="17481" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="17483" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="17483" pos:column="19">(<argument pos:line="17483" pos:column="20">"c2516e4b-5d69-459d-b539-c95a71c4fa3d"</argument>)</argument_list></macro>
    <label><name pos:line="17484" pos:column="5">SolutionBuild2</name> :</label> <expr_stmt><expr pos:line="17484" pos:column="22">public <name pos:line="17484" pos:column="29">SolutionBuild</name>
    <block pos:line="17485" pos:column="5">{
    <expr pos:line="17486" pos:column="5">public<op:operator pos:line="17486" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="17487" pos:column="17">/* [helpstring][id] */</comment> <name pos:line="17487" pos:column="40">HRESULT</name> <name pos:line="17487" pos:column="48">STDMETHODCALLTYPE</name> <macro><name pos:line="17487" pos:column="66">Publish</name><argument_list pos:line="17487" pos:column="73">( 
            <comment type="block" pos:line="17488" pos:column="13">/* [defaultvalue] */</comment> <argument pos:line="17488" pos:column="34">VARIANT_BOOL WaitForPublishToFinish = 0</argument>)</argument_list></macro> <op:operator pos:line="17488" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="17488" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="17490" pos:column="9">virtual <comment type="block" pos:line="17490" pos:column="17">/* [helpstring][id] */</comment> <name pos:line="17490" pos:column="40">HRESULT</name> <name pos:line="17490" pos:column="48">STDMETHODCALLTYPE</name> <macro><name pos:line="17490" pos:column="66">PublishProject</name><argument_list pos:line="17490" pos:column="80">( 
            <argument pos:line="17491" pos:column="13">__RPC__in BSTR SolutionConfiguration</argument>,
            <argument pos:line="17492" pos:column="13">__RPC__in BSTR ProjectUniqueName</argument>,
            <comment type="block" pos:line="17493" pos:column="13">/* [defaultvalue] */</comment> <argument pos:line="17493" pos:column="34">VARIANT_BOOL WaitForPublishToFinish = 0</argument>)</argument_list></macro> <op:operator pos:line="17493" pos:column="75">=</op:operator> <lit:literal type="number" pos:line="17493" pos:column="77">0</lit:literal></expr>;
        
        <expr pos:line="17495" pos:column="9">virtual <comment type="block" pos:line="17495" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="17495" pos:column="49">HRESULT</name> <name pos:line="17495" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="17495" pos:column="75">get_LastPublishInfo</name><argument_list pos:line="17495" pos:column="94">( 
            <comment type="block" pos:line="17496" pos:column="13">/* [retval][out] */</comment> <argument pos:line="17496" pos:column="33">__RPC__out long *Info</argument>)</argument_list></macro> <op:operator pos:line="17496" pos:column="56">=</op:operator> <lit:literal type="number" pos:line="17496" pos:column="58">0</lit:literal></expr>;
        
        <expr pos:line="17498" pos:column="9">virtual <comment type="block" pos:line="17498" pos:column="17">/* [helpstring][propget][id] */</comment> <name pos:line="17498" pos:column="49">HRESULT</name> <name pos:line="17498" pos:column="57">STDMETHODCALLTYPE</name> <macro><name pos:line="17498" pos:column="75">get_PublishState</name><argument_list pos:line="17498" pos:column="91">( 
            <comment type="block" pos:line="17499" pos:column="13">/* [retval][out] */</comment> <argument pos:line="17499" pos:column="33">__RPC__out vsPublishState *State</argument>)</argument_list></macro> <op:operator pos:line="17499" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="17499" pos:column="69">0</lit:literal></expr>;
        
        <expr pos:line="17501" pos:column="9">virtual <comment type="block" pos:line="17501" pos:column="17">/* [helpstring][id] */</comment> <name pos:line="17501" pos:column="40">HRESULT</name> <name pos:line="17501" pos:column="48">STDMETHODCALLTYPE</name> <macro><name pos:line="17501" pos:column="66">DeployProject</name><argument_list pos:line="17501" pos:column="79">( 
            <argument pos:line="17502" pos:column="13">__RPC__in BSTR SolutionConfiguration</argument>,
            <argument pos:line="17503" pos:column="13">__RPC__in BSTR ProjectUniqueName</argument>,
            <comment type="block" pos:line="17504" pos:column="13">/* [defaultvalue] */</comment> <argument pos:line="17504" pos:column="34">VARIANT_BOOL WaitForDeployToFinish = 0</argument>)</argument_list></macro> <op:operator pos:line="17504" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="17504" pos:column="76">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="17508" pos:column="1">#<cpp:directive pos:line="17508" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="17508" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="17510" pos:column="5">typedef <type><struct pos:line="17510" pos:column="13">struct <name pos:line="17510" pos:column="20">SolutionBuild2Vtbl</name>
    <block pos:line="17511" pos:column="5">{<public type="default" pos:line="17511" pos:column="6">
        <decl_stmt><decl><type><name pos:line="17512" pos:column="9">BEGIN_INTERFACE</name>
        
        <comment type="block" pos:line="17514" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <name pos:line="17514" pos:column="46">HRESULT</name></type> ( <name pos:line="17514" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="17514" pos:column="74">*</type:modifier><name pos:line="17514" pos:column="75">QueryInterface</name> )<parameter_list pos:line="17514" pos:column="91">( 
            <param><decl><type><name pos:line="17515" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17515" pos:column="28">*</type:modifier></type> <name pos:line="17515" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17516" pos:column="13">/* [in][idldescattr] */</comment> <param><decl/></param></parameter_list>__RPC__in <decl_stmt><decl><type pos:line="17516" pos:column="47">struct <name pos:line="17516" pos:column="54">GUID</name> <type:modifier pos:line="17516" pos:column="59">*</type:modifier></type><name pos:line="17516" pos:column="60">riid</name></decl><op:operator pos:line="17516" pos:column="64">,</op:operator>
            <comment type="block" pos:line="17517" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="17517" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="17517" pos:column="59">void</name> <type:modifier pos:line="17517" pos:column="64">*</type:modifier><type:modifier pos:line="17517" pos:column="65">*</type:modifier><name pos:line="17517" pos:column="66">ppvObj</name><op:operator pos:line="17517" pos:column="72">,</op:operator>
            <comment type="block" pos:line="17518" pos:column="13">/* [retval][out] */</comment> <name pos:line="17518" pos:column="33">__RPC__out</name> <name pos:line="17518" pos:column="44">void</name> <type:modifier pos:line="17518" pos:column="49">*</type:modifier><name pos:line="17518" pos:column="50">retval</name>);</decl_stmt></decl></decl_stmt>
        
        <comment type="block" pos:line="17520" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="17520" pos:column="46">HRESULT</name></type> ( <name pos:line="17520" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="17520" pos:column="74">*</type:modifier><name pos:line="17520" pos:column="75">AddRef</name> )<parameter_list pos:line="17520" pos:column="83">( 
            <param><decl><type><name pos:line="17521" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17521" pos:column="28">*</type:modifier></type> <name pos:line="17521" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17522" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17522" pos:column="33">__RPC__out</name> <name pos:line="17522" pos:column="44">unsigned</name> <name pos:line="17522" pos:column="53">long</name> <type:modifier pos:line="17522" pos:column="58">*</type:modifier></type><name pos:line="17522" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17524" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="17524" pos:column="46">HRESULT</name></type> ( <name pos:line="17524" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="17524" pos:column="74">*</type:modifier><name pos:line="17524" pos:column="75">Release</name> )<parameter_list pos:line="17524" pos:column="84">( 
            <param><decl><type><name pos:line="17525" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17525" pos:column="28">*</type:modifier></type> <name pos:line="17525" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17526" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17526" pos:column="33">__RPC__out</name> <name pos:line="17526" pos:column="44">unsigned</name> <name pos:line="17526" pos:column="53">long</name> <type:modifier pos:line="17526" pos:column="58">*</type:modifier></type><name pos:line="17526" pos:column="59">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17528" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="17528" pos:column="46">HRESULT</name></type> ( <name pos:line="17528" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="17528" pos:column="74">*</type:modifier><name pos:line="17528" pos:column="75">GetTypeInfoCount</name> )<parameter_list pos:line="17528" pos:column="93">( 
            <param><decl><type><name pos:line="17529" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17529" pos:column="28">*</type:modifier></type> <name pos:line="17529" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17530" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="17530" pos:column="38">__RPC__out</name> <name pos:line="17530" pos:column="49">unsigned</name> <name pos:line="17530" pos:column="58">UINT</name> <type:modifier pos:line="17530" pos:column="63">*</type:modifier></type><name pos:line="17530" pos:column="64">pctinfo</name></decl></param>,
            <comment type="block" pos:line="17531" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17531" pos:column="33">__RPC__out</name> <name pos:line="17531" pos:column="44">void</name> <type:modifier pos:line="17531" pos:column="49">*</type:modifier></type><name pos:line="17531" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17533" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <function_decl><type><name pos:line="17533" pos:column="46">HRESULT</name></type> ( <name pos:line="17533" pos:column="56">STDMETHODCALLTYPE</name> <type:modifier pos:line="17533" pos:column="74">*</type:modifier><name pos:line="17533" pos:column="75">GetTypeInfo</name> )<parameter_list pos:line="17533" pos:column="88">( 
            <param><decl><type><name pos:line="17534" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17534" pos:column="28">*</type:modifier></type> <name pos:line="17534" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17535" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17535" pos:column="37">unsigned</name> <name pos:line="17535" pos:column="46">UINT</name></type> <name pos:line="17535" pos:column="51">itinfo</name></decl></param>,
            <comment type="block" pos:line="17536" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17536" pos:column="37">unsigned</name> <name pos:line="17536" pos:column="46">long</name></type> <name pos:line="17536" pos:column="51">lcid</name></decl></param>,
            <comment type="block" pos:line="17537" pos:column="13">/* [out][idldescattr] */</comment> <param><decl><type><name pos:line="17537" pos:column="38">__RPC__deref_out_opt</name> <name pos:line="17537" pos:column="59">void</name> <type:modifier pos:line="17537" pos:column="64">*</type:modifier><type:modifier pos:line="17537" pos:column="65">*</type:modifier></type><name pos:line="17537" pos:column="66">pptinfo</name></decl></param>,
            <comment type="block" pos:line="17538" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17538" pos:column="33">__RPC__out</name> <name pos:line="17538" pos:column="44">void</name> <type:modifier pos:line="17538" pos:column="49">*</type:modifier></type><name pos:line="17538" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17540" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="17540" pos:column="46">HRESULT</name> <argument_list pos:line="17540" pos:column="54">( <argument pos:line="17540" pos:column="56">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="17540" pos:column="90">(</op:operator> 
            <name pos:line="17541" pos:column="13">SolutionBuild2</name> <op:operator pos:line="17541" pos:column="28">*</op:operator> <name pos:line="17541" pos:column="30">This</name><op:operator pos:line="17541" pos:column="34">,</op:operator>
            <comment type="block" pos:line="17542" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17542" pos:column="37">__RPC__in</name> struct <name pos:line="17542" pos:column="54">GUID</name> <op:operator pos:line="17542" pos:column="59">*</op:operator><name pos:line="17542" pos:column="60">riid</name><op:operator pos:line="17542" pos:column="64">,</op:operator>
            <comment type="block" pos:line="17543" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17543" pos:column="37">__RPC__deref_in_opt</name> <name pos:line="17543" pos:column="57">signed</name> <name pos:line="17543" pos:column="64">char</name> <op:operator pos:line="17543" pos:column="69">*</op:operator><op:operator pos:line="17543" pos:column="70">*</op:operator><name pos:line="17543" pos:column="71">rgszNames</name><op:operator pos:line="17543" pos:column="80">,</op:operator>
            <comment type="block" pos:line="17544" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17544" pos:column="37">unsigned</name> <name pos:line="17544" pos:column="46">UINT</name> <name pos:line="17544" pos:column="51">cNames</name><op:operator pos:line="17544" pos:column="57">,</op:operator>
            <comment type="block" pos:line="17545" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17545" pos:column="37">unsigned</name> <name pos:line="17545" pos:column="46">long</name> <name pos:line="17545" pos:column="51">lcid</name><op:operator pos:line="17545" pos:column="55">,</op:operator>
            <comment type="block" pos:line="17546" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="17546" pos:column="38">__RPC__out</name> <name pos:line="17546" pos:column="49">signed</name> <name pos:line="17546" pos:column="56">long</name> <op:operator pos:line="17546" pos:column="61">*</op:operator><name pos:line="17546" pos:column="62">rgdispid</name><op:operator pos:line="17546" pos:column="70">,</op:operator>
            <comment type="block" pos:line="17547" pos:column="13">/* [retval][out] */</comment> <name pos:line="17547" pos:column="33">__RPC__out</name> <name pos:line="17547" pos:column="44">void</name> <op:operator pos:line="17547" pos:column="49">*</op:operator><name pos:line="17547" pos:column="50">retval</name><op:operator pos:line="17547" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="17549" pos:column="9">/* [id][restricted][funcdescattr] */</comment> <macro><name pos:line="17549" pos:column="46">HRESULT</name> <argument_list pos:line="17549" pos:column="54">( <argument pos:line="17549" pos:column="56">STDMETHODCALLTYPE *Invoke</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="17549" pos:column="83">(</op:operator> 
            <name pos:line="17550" pos:column="13">SolutionBuild2</name> <op:operator pos:line="17550" pos:column="28">*</op:operator> <name pos:line="17550" pos:column="30">This</name><op:operator pos:line="17550" pos:column="34">,</op:operator>
            <comment type="block" pos:line="17551" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17551" pos:column="37">signed</name> <name pos:line="17551" pos:column="44">long</name> <name pos:line="17551" pos:column="49">dispidMember</name><op:operator pos:line="17551" pos:column="61">,</op:operator>
            <comment type="block" pos:line="17552" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17552" pos:column="37">__RPC__in</name> struct <name pos:line="17552" pos:column="54">GUID</name> <op:operator pos:line="17552" pos:column="59">*</op:operator><name pos:line="17552" pos:column="60">riid</name><op:operator pos:line="17552" pos:column="64">,</op:operator>
            <comment type="block" pos:line="17553" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17553" pos:column="37">unsigned</name> <name pos:line="17553" pos:column="46">long</name> <name pos:line="17553" pos:column="51">lcid</name><op:operator pos:line="17553" pos:column="55">,</op:operator>
            <comment type="block" pos:line="17554" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17554" pos:column="37">unsigned</name> <name pos:line="17554" pos:column="46">short</name> <name pos:line="17554" pos:column="52">wFlags</name><op:operator pos:line="17554" pos:column="58">,</op:operator>
            <comment type="block" pos:line="17555" pos:column="13">/* [in][idldescattr] */</comment> <name pos:line="17555" pos:column="37">__RPC__in</name> struct <name pos:line="17555" pos:column="54">DISPPARAMS</name> <op:operator pos:line="17555" pos:column="65">*</op:operator><name pos:line="17555" pos:column="66">pdispparams</name><op:operator pos:line="17555" pos:column="77">,</op:operator>
            <comment type="block" pos:line="17556" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="17556" pos:column="38">__RPC__out</name> <name pos:line="17556" pos:column="49">VARIANT</name> <op:operator pos:line="17556" pos:column="57">*</op:operator><name pos:line="17556" pos:column="58">pvarResult</name><op:operator pos:line="17556" pos:column="68">,</op:operator>
            <comment type="block" pos:line="17557" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="17557" pos:column="38">__RPC__out</name> struct <name pos:line="17557" pos:column="56">EXCEPINFO</name> <op:operator pos:line="17557" pos:column="66">*</op:operator><name pos:line="17557" pos:column="67">pexcepinfo</name><op:operator pos:line="17557" pos:column="77">,</op:operator>
            <comment type="block" pos:line="17558" pos:column="13">/* [out][idldescattr] */</comment> <name pos:line="17558" pos:column="38">__RPC__out</name> <name pos:line="17558" pos:column="49">unsigned</name> <name pos:line="17558" pos:column="58">UINT</name> <op:operator pos:line="17558" pos:column="63">*</op:operator><name pos:line="17558" pos:column="64">puArgErr</name><op:operator pos:line="17558" pos:column="72">,</op:operator>
            <comment type="block" pos:line="17559" pos:column="13">/* [retval][out] */</comment> <name pos:line="17559" pos:column="33">__RPC__out</name> <name pos:line="17559" pos:column="44">void</name> <op:operator pos:line="17559" pos:column="49">*</op:operator><name pos:line="17559" pos:column="50">retval</name><op:operator pos:line="17559" pos:column="56">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="17561" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17561" pos:column="43">HRESULT</name></type> ( <name pos:line="17561" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17561" pos:column="71">*</type:modifier><name pos:line="17561" pos:column="72">get_DTE</name> )<parameter_list pos:line="17561" pos:column="81">( 
            <param><decl><type><name pos:line="17562" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17562" pos:column="28">*</type:modifier></type> <name pos:line="17562" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17563" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17563" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="17563" pos:column="54">*</type:modifier><type:modifier pos:line="17563" pos:column="55">*</type:modifier></type><name pos:line="17563" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17565" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17565" pos:column="43">HRESULT</name></type> ( <name pos:line="17565" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17565" pos:column="71">*</type:modifier><name pos:line="17565" pos:column="72">get_Parent</name> )<parameter_list pos:line="17565" pos:column="84">( 
            <param><decl><type><name pos:line="17566" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17566" pos:column="28">*</type:modifier></type> <name pos:line="17566" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17567" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17567" pos:column="33">__RPC__deref_out_opt</name> <type:modifier pos:line="17567" pos:column="54">*</type:modifier><type:modifier pos:line="17567" pos:column="55">*</type:modifier></type><name pos:line="17567" pos:column="56">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17569" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17569" pos:column="43">HRESULT</name></type> ( <name pos:line="17569" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17569" pos:column="71">*</type:modifier><name pos:line="17569" pos:column="72">get_ActiveConfiguration</name> )<parameter_list pos:line="17569" pos:column="97">( 
            <param><decl><type><name pos:line="17570" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17570" pos:column="28">*</type:modifier></type> <name pos:line="17570" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17571" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17571" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="17571" pos:column="54">SolutionConfiguration</name> <type:modifier pos:line="17571" pos:column="76">*</type:modifier><type:modifier pos:line="17571" pos:column="77">*</type:modifier></type><name pos:line="17571" pos:column="78">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17573" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17573" pos:column="43">HRESULT</name></type> ( <name pos:line="17573" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17573" pos:column="71">*</type:modifier><name pos:line="17573" pos:column="72">get_BuildDependencies</name> )<parameter_list pos:line="17573" pos:column="95">( 
            <param><decl><type><name pos:line="17574" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17574" pos:column="28">*</type:modifier></type> <name pos:line="17574" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17575" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17575" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="17575" pos:column="54">BuildDependencies</name> <type:modifier pos:line="17575" pos:column="72">*</type:modifier><type:modifier pos:line="17575" pos:column="73">*</type:modifier></type><name pos:line="17575" pos:column="74">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17577" pos:column="9">/* [id][propget][funcdescattr] */</comment> <macro><name pos:line="17577" pos:column="43">HRESULT</name> <argument_list pos:line="17577" pos:column="51">( <argument pos:line="17577" pos:column="53">STDMETHODCALLTYPE *get_BuildState</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="17577" pos:column="88">(</op:operator> 
            <name pos:line="17578" pos:column="13">SolutionBuild2</name> <op:operator pos:line="17578" pos:column="28">*</op:operator> <name pos:line="17578" pos:column="30">This</name><op:operator pos:line="17578" pos:column="34">,</op:operator>
            <comment type="block" pos:line="17579" pos:column="13">/* [retval][out] */</comment> <name pos:line="17579" pos:column="33">__RPC__out</name> enum <name pos:line="17579" pos:column="49">vsBuildState</name> <op:operator pos:line="17579" pos:column="62">*</op:operator><name pos:line="17579" pos:column="63">retval</name><op:operator pos:line="17579" pos:column="69">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="17581" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17581" pos:column="43">HRESULT</name></type> ( <name pos:line="17581" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17581" pos:column="71">*</type:modifier><name pos:line="17581" pos:column="72">get_LastBuildInfo</name> )<parameter_list pos:line="17581" pos:column="91">( 
            <param><decl><type><name pos:line="17582" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17582" pos:column="28">*</type:modifier></type> <name pos:line="17582" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17583" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17583" pos:column="33">__RPC__out</name> <name pos:line="17583" pos:column="44">signed</name> <name pos:line="17583" pos:column="51">long</name> <type:modifier pos:line="17583" pos:column="56">*</type:modifier></type><name pos:line="17583" pos:column="57">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17585" pos:column="9">/* [id][propput][funcdescattr] */</comment> <function_decl><type><name pos:line="17585" pos:column="43">HRESULT</name></type> ( <name pos:line="17585" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17585" pos:column="71">*</type:modifier><name pos:line="17585" pos:column="72">put_StartupProjects</name> )<parameter_list pos:line="17585" pos:column="93">( 
            <param><decl><type><name pos:line="17586" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17586" pos:column="28">*</type:modifier></type> <name pos:line="17586" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17587" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17587" pos:column="37">VARIANT</name></type> <name pos:line="17587" pos:column="45">noname</name></decl></param>,
            <comment type="block" pos:line="17588" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17588" pos:column="33">__RPC__out</name> <name pos:line="17588" pos:column="44">void</name> <type:modifier pos:line="17588" pos:column="49">*</type:modifier></type><name pos:line="17588" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17590" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17590" pos:column="43">HRESULT</name></type> ( <name pos:line="17590" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17590" pos:column="71">*</type:modifier><name pos:line="17590" pos:column="72">get_StartupProjects</name> )<parameter_list pos:line="17590" pos:column="93">( 
            <param><decl><type><name pos:line="17591" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17591" pos:column="28">*</type:modifier></type> <name pos:line="17591" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17592" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17592" pos:column="33">__RPC__out</name> <name pos:line="17592" pos:column="44">VARIANT</name> <type:modifier pos:line="17592" pos:column="52">*</type:modifier></type><name pos:line="17592" pos:column="53">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17594" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17594" pos:column="34">HRESULT</name></type> ( <name pos:line="17594" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17594" pos:column="62">*</type:modifier><name pos:line="17594" pos:column="63">Build</name> )<parameter_list pos:line="17594" pos:column="70">( 
            <param><decl><type><name pos:line="17595" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17595" pos:column="28">*</type:modifier></type> <name pos:line="17595" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17596" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17596" pos:column="37">BOOLEAN</name></type> <name pos:line="17596" pos:column="45">WaitForBuildToFinish</name></decl></param>,
            <comment type="block" pos:line="17597" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17597" pos:column="33">__RPC__out</name> <name pos:line="17597" pos:column="44">void</name> <type:modifier pos:line="17597" pos:column="49">*</type:modifier></type><name pos:line="17597" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17599" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17599" pos:column="34">HRESULT</name></type> ( <name pos:line="17599" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17599" pos:column="62">*</type:modifier><name pos:line="17599" pos:column="63">Debug</name> )<parameter_list pos:line="17599" pos:column="70">( 
            <param><decl><type><name pos:line="17600" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17600" pos:column="28">*</type:modifier></type> <name pos:line="17600" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17601" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17601" pos:column="33">__RPC__out</name> <name pos:line="17601" pos:column="44">void</name> <type:modifier pos:line="17601" pos:column="49">*</type:modifier></type><name pos:line="17601" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17603" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17603" pos:column="34">HRESULT</name></type> ( <name pos:line="17603" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17603" pos:column="62">*</type:modifier><name pos:line="17603" pos:column="63">Deploy</name> )<parameter_list pos:line="17603" pos:column="71">( 
            <param><decl><type><name pos:line="17604" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17604" pos:column="28">*</type:modifier></type> <name pos:line="17604" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17605" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17605" pos:column="37">BOOLEAN</name></type> <name pos:line="17605" pos:column="45">WaitForDeployToFinish</name></decl></param>,
            <comment type="block" pos:line="17606" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17606" pos:column="33">__RPC__out</name> <name pos:line="17606" pos:column="44">void</name> <type:modifier pos:line="17606" pos:column="49">*</type:modifier></type><name pos:line="17606" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17608" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17608" pos:column="34">HRESULT</name></type> ( <name pos:line="17608" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17608" pos:column="62">*</type:modifier><name pos:line="17608" pos:column="63">Clean</name> )<parameter_list pos:line="17608" pos:column="70">( 
            <param><decl><type><name pos:line="17609" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17609" pos:column="28">*</type:modifier></type> <name pos:line="17609" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17610" pos:column="13">/* [in][idldescattr] */</comment> <param><decl><type><name pos:line="17610" pos:column="37">BOOLEAN</name></type> <name pos:line="17610" pos:column="45">WaitForCleanToFinish</name></decl></param>,
            <comment type="block" pos:line="17611" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17611" pos:column="33">__RPC__out</name> <name pos:line="17611" pos:column="44">void</name> <type:modifier pos:line="17611" pos:column="49">*</type:modifier></type><name pos:line="17611" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17613" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17613" pos:column="34">HRESULT</name></type> ( <name pos:line="17613" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17613" pos:column="62">*</type:modifier><name pos:line="17613" pos:column="63">Run</name> )<parameter_list pos:line="17613" pos:column="68">( 
            <param><decl><type><name pos:line="17614" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17614" pos:column="28">*</type:modifier></type> <name pos:line="17614" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17615" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17615" pos:column="33">__RPC__out</name> <name pos:line="17615" pos:column="44">void</name> <type:modifier pos:line="17615" pos:column="49">*</type:modifier></type><name pos:line="17615" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17617" pos:column="9">/* [id][propget][funcdescattr] */</comment> <function_decl><type><name pos:line="17617" pos:column="43">HRESULT</name></type> ( <name pos:line="17617" pos:column="53">STDMETHODCALLTYPE</name> <type:modifier pos:line="17617" pos:column="71">*</type:modifier><name pos:line="17617" pos:column="72">get_SolutionConfigurations</name> )<parameter_list pos:line="17617" pos:column="100">( 
            <param><decl><type><name pos:line="17618" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17618" pos:column="28">*</type:modifier></type> <name pos:line="17618" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17619" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17619" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="17619" pos:column="54">SolutionConfigurations</name> <type:modifier pos:line="17619" pos:column="77">*</type:modifier><type:modifier pos:line="17619" pos:column="78">*</type:modifier></type><name pos:line="17619" pos:column="79">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17621" pos:column="9">/* [id][funcdescattr] */</comment> <function_decl><type><name pos:line="17621" pos:column="34">HRESULT</name></type> ( <name pos:line="17621" pos:column="44">STDMETHODCALLTYPE</name> <type:modifier pos:line="17621" pos:column="62">*</type:modifier><name pos:line="17621" pos:column="63">BuildProject</name> )<parameter_list pos:line="17621" pos:column="77">( 
            <param><decl><type><name pos:line="17622" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17622" pos:column="28">*</type:modifier></type> <name pos:line="17622" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17623" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="17623" pos:column="33">__RPC__in</name> <name pos:line="17623" pos:column="43">BSTR</name></type> <name pos:line="17623" pos:column="48">SolutionConfiguration</name></decl></param>,
            <comment type="block" pos:line="17624" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="17624" pos:column="33">__RPC__in</name> <name pos:line="17624" pos:column="43">BSTR</name></type> <name pos:line="17624" pos:column="48">ProjectUniqueName</name></decl></param>,
            <comment type="block" pos:line="17625" pos:column="13">/* [idldescattr] */</comment> <param><decl><type><name pos:line="17625" pos:column="33">BOOLEAN</name></type> <name pos:line="17625" pos:column="41">WaitForBuildToFinish</name></decl></param>,
            <comment type="block" pos:line="17626" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17626" pos:column="33">__RPC__out</name> <name pos:line="17626" pos:column="44">void</name> <type:modifier pos:line="17626" pos:column="49">*</type:modifier></type><name pos:line="17626" pos:column="50">retval</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17628" pos:column="9">/* [helpstring][id] */</comment> <function_decl><type><name pos:line="17628" pos:column="32">HRESULT</name></type> ( <name pos:line="17628" pos:column="42">STDMETHODCALLTYPE</name> <type:modifier pos:line="17628" pos:column="60">*</type:modifier><name pos:line="17628" pos:column="61">Publish</name> )<parameter_list pos:line="17628" pos:column="70">( 
            <param><decl><type><name pos:line="17629" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17629" pos:column="28">*</type:modifier></type> <name pos:line="17629" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17630" pos:column="13">/* [defaultvalue] */</comment> <param><decl><type><name pos:line="17630" pos:column="34">VARIANT_BOOL</name></type> <name pos:line="17630" pos:column="47">WaitForPublishToFinish</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17632" pos:column="9">/* [helpstring][id] */</comment> <function_decl><type><name pos:line="17632" pos:column="32">HRESULT</name></type> ( <name pos:line="17632" pos:column="42">STDMETHODCALLTYPE</name> <type:modifier pos:line="17632" pos:column="60">*</type:modifier><name pos:line="17632" pos:column="61">PublishProject</name> )<parameter_list pos:line="17632" pos:column="77">( 
            <param><decl><type><name pos:line="17633" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17633" pos:column="28">*</type:modifier></type> <name pos:line="17633" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="17634" pos:column="13">__RPC__in</name> <name pos:line="17634" pos:column="23">BSTR</name></type> <name pos:line="17634" pos:column="28">SolutionConfiguration</name></decl></param>,
            <param><decl><type><name pos:line="17635" pos:column="13">__RPC__in</name> <name pos:line="17635" pos:column="23">BSTR</name></type> <name pos:line="17635" pos:column="28">ProjectUniqueName</name></decl></param>,
            <comment type="block" pos:line="17636" pos:column="13">/* [defaultvalue] */</comment> <param><decl><type><name pos:line="17636" pos:column="34">VARIANT_BOOL</name></type> <name pos:line="17636" pos:column="47">WaitForPublishToFinish</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17638" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="17638" pos:column="41">HRESULT</name></type> ( <name pos:line="17638" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="17638" pos:column="69">*</type:modifier><name pos:line="17638" pos:column="70">get_LastPublishInfo</name> )<parameter_list pos:line="17638" pos:column="91">( 
            <param><decl><type><name pos:line="17639" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17639" pos:column="28">*</type:modifier></type> <name pos:line="17639" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17640" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17640" pos:column="33">__RPC__out</name> <name pos:line="17640" pos:column="44">long</name> <type:modifier pos:line="17640" pos:column="49">*</type:modifier></type><name pos:line="17640" pos:column="50">Info</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17642" pos:column="9">/* [helpstring][propget][id] */</comment> <function_decl><type><name pos:line="17642" pos:column="41">HRESULT</name></type> ( <name pos:line="17642" pos:column="51">STDMETHODCALLTYPE</name> <type:modifier pos:line="17642" pos:column="69">*</type:modifier><name pos:line="17642" pos:column="70">get_PublishState</name> )<parameter_list pos:line="17642" pos:column="88">( 
            <param><decl><type><name pos:line="17643" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17643" pos:column="28">*</type:modifier></type> <name pos:line="17643" pos:column="30">This</name></decl></param>,
            <comment type="block" pos:line="17644" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17644" pos:column="33">__RPC__out</name> <name pos:line="17644" pos:column="44">vsPublishState</name> <type:modifier pos:line="17644" pos:column="59">*</type:modifier></type><name pos:line="17644" pos:column="60">State</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17646" pos:column="9">/* [helpstring][id] */</comment> <function_decl><type><name pos:line="17646" pos:column="32">HRESULT</name></type> ( <name pos:line="17646" pos:column="42">STDMETHODCALLTYPE</name> <type:modifier pos:line="17646" pos:column="60">*</type:modifier><name pos:line="17646" pos:column="61">DeployProject</name> )<parameter_list pos:line="17646" pos:column="76">( 
            <param><decl><type><name pos:line="17647" pos:column="13">SolutionBuild2</name> <type:modifier pos:line="17647" pos:column="28">*</type:modifier></type> <name pos:line="17647" pos:column="30">This</name></decl></param>,
            <param><decl><type><name pos:line="17648" pos:column="13">__RPC__in</name> <name pos:line="17648" pos:column="23">BSTR</name></type> <name pos:line="17648" pos:column="28">SolutionConfiguration</name></decl></param>,
            <param><decl><type><name pos:line="17649" pos:column="13">__RPC__in</name> <name pos:line="17649" pos:column="23">BSTR</name></type> <name pos:line="17649" pos:column="28">ProjectUniqueName</name></decl></param>,
            <comment type="block" pos:line="17650" pos:column="13">/* [defaultvalue] */</comment> <param><decl><type><name pos:line="17650" pos:column="34">VARIANT_BOOL</name></type> <name pos:line="17650" pos:column="47">WaitForDeployToFinish</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17652" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17653" pos:column="7">SolutionBuild2Vtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17655" pos:column="5">interface</name></type> <name pos:line="17655" pos:column="15">SolutionBuild2</name>
    <argument_list pos:line="17656" pos:column="5">{
        <argument><expr><name pos:line="17657" pos:column="9">CONST_VTBL</name> struct <name pos:line="17657" pos:column="27">SolutionBuild2Vtbl</name> <op:operator pos:line="17657" pos:column="46">*</op:operator><name pos:line="17657" pos:column="47">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17662" pos:column="1">#<cpp:directive pos:line="17662" pos:column="2">ifdef</cpp:directive> <name pos:line="17662" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="17665" pos:column="1">#<cpp:directive pos:line="17665" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17665" pos:column="9">SolutionBuild2_QueryInterface</name><parameter_list pos:line="17665" pos:column="38">(<param><type><name pos:line="17665" pos:column="39">This</name></type></param>,<param><type><name pos:line="17665" pos:column="44">riid</name></type></param>,<param><type><name pos:line="17665" pos:column="49">ppvObj</name></type></param>,<param><type><name pos:line="17665" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17666" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObj,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17668" pos:column="1">#<cpp:directive pos:line="17668" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17668" pos:column="9">SolutionBuild2_AddRef</name><parameter_list pos:line="17668" pos:column="30">(<param><type><name pos:line="17668" pos:column="31">This</name></type></param>,<param><type><name pos:line="17668" pos:column="36">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17669" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17671" pos:column="1">#<cpp:directive pos:line="17671" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17671" pos:column="9">SolutionBuild2_Release</name><parameter_list pos:line="17671" pos:column="31">(<param><type><name pos:line="17671" pos:column="32">This</name></type></param>,<param><type><name pos:line="17671" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17672" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17674" pos:column="1">#<cpp:directive pos:line="17674" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17674" pos:column="9">SolutionBuild2_GetTypeInfoCount</name><parameter_list pos:line="17674" pos:column="40">(<param><type><name pos:line="17674" pos:column="41">This</name></type></param>,<param><type><name pos:line="17674" pos:column="46">pctinfo</name></type></param>,<param><type><name pos:line="17674" pos:column="54">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17675" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17677" pos:column="1">#<cpp:directive pos:line="17677" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17677" pos:column="9">SolutionBuild2_GetTypeInfo</name><parameter_list pos:line="17677" pos:column="35">(<param><type><name pos:line="17677" pos:column="36">This</name></type></param>,<param><type><name pos:line="17677" pos:column="41">itinfo</name></type></param>,<param><type><name pos:line="17677" pos:column="48">lcid</name></type></param>,<param><type><name pos:line="17677" pos:column="53">pptinfo</name></type></param>,<param><type><name pos:line="17677" pos:column="61">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17678" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,itinfo,lcid,pptinfo,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17680" pos:column="1">#<cpp:directive pos:line="17680" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17680" pos:column="9">SolutionBuild2_GetIDsOfNames</name><parameter_list pos:line="17680" pos:column="37">(<param><type><name pos:line="17680" pos:column="38">This</name></type></param>,<param><type><name pos:line="17680" pos:column="43">riid</name></type></param>,<param><type><name pos:line="17680" pos:column="48">rgszNames</name></type></param>,<param><type><name pos:line="17680" pos:column="58">cNames</name></type></param>,<param><type><name pos:line="17680" pos:column="65">lcid</name></type></param>,<param><type><name pos:line="17680" pos:column="70">rgdispid</name></type></param>,<param><type><name pos:line="17680" pos:column="79">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17681" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgdispid,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17683" pos:column="1">#<cpp:directive pos:line="17683" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17683" pos:column="9">SolutionBuild2_Invoke</name><parameter_list pos:line="17683" pos:column="30">(<param><type><name pos:line="17683" pos:column="31">This</name></type></param>,<param><type><name pos:line="17683" pos:column="36">dispidMember</name></type></param>,<param><type><name pos:line="17683" pos:column="49">riid</name></type></param>,<param><type><name pos:line="17683" pos:column="54">lcid</name></type></param>,<param><type><name pos:line="17683" pos:column="59">wFlags</name></type></param>,<param><type><name pos:line="17683" pos:column="66">pdispparams</name></type></param>,<param><type><name pos:line="17683" pos:column="78">pvarResult</name></type></param>,<param><type><name pos:line="17683" pos:column="89">pexcepinfo</name></type></param>,<param><type><name pos:line="17683" pos:column="100">puArgErr</name></type></param>,<param><type><name pos:line="17683" pos:column="109">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17684" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispidMember,riid,lcid,wFlags,pdispparams,pvarResult,pexcepinfo,puArgErr,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17686" pos:column="1">#<cpp:directive pos:line="17686" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17686" pos:column="9">SolutionBuild2_get_DTE</name><parameter_list pos:line="17686" pos:column="31">(<param><type><name pos:line="17686" pos:column="32">This</name></type></param>,<param><type><name pos:line="17686" pos:column="37">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17687" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17689" pos:column="1">#<cpp:directive pos:line="17689" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17689" pos:column="9">SolutionBuild2_get_Parent</name><parameter_list pos:line="17689" pos:column="34">(<param><type><name pos:line="17689" pos:column="35">This</name></type></param>,<param><type><name pos:line="17689" pos:column="40">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17690" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17692" pos:column="1">#<cpp:directive pos:line="17692" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17692" pos:column="9">SolutionBuild2_get_ActiveConfiguration</name><parameter_list pos:line="17692" pos:column="47">(<param><type><name pos:line="17692" pos:column="48">This</name></type></param>,<param><type><name pos:line="17692" pos:column="53">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17693" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_ActiveConfiguration(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17695" pos:column="1">#<cpp:directive pos:line="17695" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17695" pos:column="9">SolutionBuild2_get_BuildDependencies</name><parameter_list pos:line="17695" pos:column="45">(<param><type><name pos:line="17695" pos:column="46">This</name></type></param>,<param><type><name pos:line="17695" pos:column="51">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17696" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_BuildDependencies(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17698" pos:column="1">#<cpp:directive pos:line="17698" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17698" pos:column="9">SolutionBuild2_get_BuildState</name><parameter_list pos:line="17698" pos:column="38">(<param><type><name pos:line="17698" pos:column="39">This</name></type></param>,<param><type><name pos:line="17698" pos:column="44">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17699" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_BuildState(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17701" pos:column="1">#<cpp:directive pos:line="17701" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17701" pos:column="9">SolutionBuild2_get_LastBuildInfo</name><parameter_list pos:line="17701" pos:column="41">(<param><type><name pos:line="17701" pos:column="42">This</name></type></param>,<param><type><name pos:line="17701" pos:column="47">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17702" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_LastBuildInfo(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17704" pos:column="1">#<cpp:directive pos:line="17704" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17704" pos:column="9">SolutionBuild2_put_StartupProjects</name><parameter_list pos:line="17704" pos:column="43">(<param><type><name pos:line="17704" pos:column="44">This</name></type></param>,<param><type><name pos:line="17704" pos:column="49">noname</name></type></param>,<param><type><name pos:line="17704" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17705" pos:column="5">( (This)-&gt;lpVtbl -&gt; put_StartupProjects(This,noname,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17707" pos:column="1">#<cpp:directive pos:line="17707" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17707" pos:column="9">SolutionBuild2_get_StartupProjects</name><parameter_list pos:line="17707" pos:column="43">(<param><type><name pos:line="17707" pos:column="44">This</name></type></param>,<param><type><name pos:line="17707" pos:column="49">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17708" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_StartupProjects(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17710" pos:column="1">#<cpp:directive pos:line="17710" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17710" pos:column="9">SolutionBuild2_Build</name><parameter_list pos:line="17710" pos:column="29">(<param><type><name pos:line="17710" pos:column="30">This</name></type></param>,<param><type><name pos:line="17710" pos:column="35">WaitForBuildToFinish</name></type></param>,<param><type><name pos:line="17710" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17711" pos:column="5">( (This)-&gt;lpVtbl -&gt; Build(This,WaitForBuildToFinish,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17713" pos:column="1">#<cpp:directive pos:line="17713" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17713" pos:column="9">SolutionBuild2_Debug</name><parameter_list pos:line="17713" pos:column="29">(<param><type><name pos:line="17713" pos:column="30">This</name></type></param>,<param><type><name pos:line="17713" pos:column="35">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17714" pos:column="5">( (This)-&gt;lpVtbl -&gt; Debug(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17716" pos:column="1">#<cpp:directive pos:line="17716" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17716" pos:column="9">SolutionBuild2_Deploy</name><parameter_list pos:line="17716" pos:column="30">(<param><type><name pos:line="17716" pos:column="31">This</name></type></param>,<param><type><name pos:line="17716" pos:column="36">WaitForDeployToFinish</name></type></param>,<param><type><name pos:line="17716" pos:column="58">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17717" pos:column="5">( (This)-&gt;lpVtbl -&gt; Deploy(This,WaitForDeployToFinish,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17719" pos:column="1">#<cpp:directive pos:line="17719" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17719" pos:column="9">SolutionBuild2_Clean</name><parameter_list pos:line="17719" pos:column="29">(<param><type><name pos:line="17719" pos:column="30">This</name></type></param>,<param><type><name pos:line="17719" pos:column="35">WaitForCleanToFinish</name></type></param>,<param><type><name pos:line="17719" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17720" pos:column="5">( (This)-&gt;lpVtbl -&gt; Clean(This,WaitForCleanToFinish,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17722" pos:column="1">#<cpp:directive pos:line="17722" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17722" pos:column="9">SolutionBuild2_Run</name><parameter_list pos:line="17722" pos:column="27">(<param><type><name pos:line="17722" pos:column="28">This</name></type></param>,<param><type><name pos:line="17722" pos:column="33">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17723" pos:column="5">( (This)-&gt;lpVtbl -&gt; Run(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17725" pos:column="1">#<cpp:directive pos:line="17725" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17725" pos:column="9">SolutionBuild2_get_SolutionConfigurations</name><parameter_list pos:line="17725" pos:column="50">(<param><type><name pos:line="17725" pos:column="51">This</name></type></param>,<param><type><name pos:line="17725" pos:column="56">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17726" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_SolutionConfigurations(This,retval) )</cpp:value></cpp:define> 

<cpp:define pos:line="17728" pos:column="1">#<cpp:directive pos:line="17728" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17728" pos:column="9">SolutionBuild2_BuildProject</name><parameter_list pos:line="17728" pos:column="36">(<param><type><name pos:line="17728" pos:column="37">This</name></type></param>,<param><type><name pos:line="17728" pos:column="42">SolutionConfiguration</name></type></param>,<param><type><name pos:line="17728" pos:column="64">ProjectUniqueName</name></type></param>,<param><type><name pos:line="17728" pos:column="82">WaitForBuildToFinish</name></type></param>,<param><type><name pos:line="17728" pos:column="103">retval</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17729" pos:column="5">( (This)-&gt;lpVtbl -&gt; BuildProject(This,SolutionConfiguration,ProjectUniqueName,WaitForBuildToFinish,retval) )</cpp:value></cpp:define> 


<cpp:define pos:line="17732" pos:column="1">#<cpp:directive pos:line="17732" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17732" pos:column="9">SolutionBuild2_Publish</name><parameter_list pos:line="17732" pos:column="31">(<param><type><name pos:line="17732" pos:column="32">This</name></type></param>,<param><type><name pos:line="17732" pos:column="37">WaitForPublishToFinish</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17733" pos:column="5">( (This)-&gt;lpVtbl -&gt; Publish(This,WaitForPublishToFinish) )</cpp:value></cpp:define> 

<cpp:define pos:line="17735" pos:column="1">#<cpp:directive pos:line="17735" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17735" pos:column="9">SolutionBuild2_PublishProject</name><parameter_list pos:line="17735" pos:column="38">(<param><type><name pos:line="17735" pos:column="39">This</name></type></param>,<param><type><name pos:line="17735" pos:column="44">SolutionConfiguration</name></type></param>,<param><type><name pos:line="17735" pos:column="66">ProjectUniqueName</name></type></param>,<param><type><name pos:line="17735" pos:column="84">WaitForPublishToFinish</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17736" pos:column="5">( (This)-&gt;lpVtbl -&gt; PublishProject(This,SolutionConfiguration,ProjectUniqueName,WaitForPublishToFinish) )</cpp:value></cpp:define> 

<cpp:define pos:line="17738" pos:column="1">#<cpp:directive pos:line="17738" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17738" pos:column="9">SolutionBuild2_get_LastPublishInfo</name><parameter_list pos:line="17738" pos:column="43">(<param><type><name pos:line="17738" pos:column="44">This</name></type></param>,<param><type><name pos:line="17738" pos:column="49">Info</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17739" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_LastPublishInfo(This,Info) )</cpp:value></cpp:define> 

<cpp:define pos:line="17741" pos:column="1">#<cpp:directive pos:line="17741" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17741" pos:column="9">SolutionBuild2_get_PublishState</name><parameter_list pos:line="17741" pos:column="40">(<param><type><name pos:line="17741" pos:column="41">This</name></type></param>,<param><type><name pos:line="17741" pos:column="46">State</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17742" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_PublishState(This,State) )</cpp:value></cpp:define> 

<cpp:define pos:line="17744" pos:column="1">#<cpp:directive pos:line="17744" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17744" pos:column="9">SolutionBuild2_DeployProject</name><parameter_list pos:line="17744" pos:column="37">(<param><type><name pos:line="17744" pos:column="38">This</name></type></param>,<param><type><name pos:line="17744" pos:column="43">SolutionConfiguration</name></type></param>,<param><type><name pos:line="17744" pos:column="65">ProjectUniqueName</name></type></param>,<param><type><name pos:line="17744" pos:column="83">WaitForDeployToFinish</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17745" pos:column="5">( (This)-&gt;lpVtbl -&gt; DeployProject(This,SolutionConfiguration,ProjectUniqueName,WaitForDeployToFinish) )</cpp:value></cpp:define> 

<cpp:endif pos:line="17747" pos:column="1">#<cpp:directive pos:line="17747" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17747" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="17750" pos:column="1">#<cpp:directive pos:line="17750" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17750" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="17755" pos:column="1">#<cpp:directive pos:line="17755" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17755" pos:column="9">/* __SolutionBuild2_INTERFACE_DEFINED__ */</comment>


<cpp:ifndef pos:line="17758" pos:column="1">#<cpp:directive pos:line="17758" pos:column="2">ifndef</cpp:directive> <name pos:line="17758" pos:column="9">__ErrorItems_INTERFACE_DEFINED__</name></cpp:ifndef>
<cpp:define pos:line="17759" pos:column="1">#<cpp:directive pos:line="17759" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17759" pos:column="9">__ErrorItems_INTERFACE_DEFINED__</name></cpp:macro></cpp:define>

<comment type="block" pos:line="17761" pos:column="1">/* interface ErrorItems */</comment>
<comment type="block" pos:line="17762" pos:column="1">/* [helpstring][uuid][object][oleautomation][dual] */</comment> 


<decl_stmt><decl><type><name pos:line="17765" pos:column="1">EXTERN_C</name> <specifier pos:line="17765" pos:column="10">const</specifier> <name pos:line="17765" pos:column="16">IID</name></type> <name pos:line="17765" pos:column="20">IID_ErrorItems</name></decl>;</decl_stmt>

<cpp:if pos:line="17767" pos:column="1">#<cpp:directive pos:line="17767" pos:column="2">if</cpp:directive> <expr><call><name pos:line="17767" pos:column="5">defined</name><argument_list pos:line="17767" pos:column="12">(<argument><expr><name pos:line="17767" pos:column="13">__cplusplus</name></expr></argument>)</argument_list></call> <op:operator pos:line="17767" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="17767" pos:column="29">!</op:operator><call><name pos:line="17767" pos:column="30">defined</name><argument_list pos:line="17767" pos:column="37">(<argument><expr><name pos:line="17767" pos:column="38">CINTERFACE</name></expr></argument>)</argument_list></call></expr></cpp:if>
    
    <macro><name pos:line="17769" pos:column="5">MIDL_INTERFACE</name><argument_list pos:line="17769" pos:column="19">(<argument pos:line="17769" pos:column="20">"dcf93a30-d013-42f4-8aee-9f5ba215fb8b"</argument>)</argument_list></macro>
    <label><name pos:line="17770" pos:column="5">ErrorItems</name> :</label> <expr_stmt><expr pos:line="17770" pos:column="18">public <name pos:line="17770" pos:column="25">IDispatch</name>
    <block pos:line="17771" pos:column="5">{
    <expr pos:line="17772" pos:column="5">public<op:operator pos:line="17772" pos:column="11">:</op:operator>
        virtual <comment type="block" pos:line="17773" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="17773" pos:column="81">HRESULT</name> <name pos:line="17773" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="17773" pos:column="107">get_DTE</name><argument_list pos:line="17773" pos:column="114">( 
            <comment type="block" pos:line="17774" pos:column="13">/* [retval][out] */</comment> <argument pos:line="17774" pos:column="33">__RPC__deref_out_opt <comment type="block" pos:line="17774" pos:column="54">/* external definition not present */</comment> DTE **DTEObject</argument>)</argument_list></macro> <op:operator pos:line="17774" pos:column="109">=</op:operator> <lit:literal type="number" pos:line="17774" pos:column="111">0</lit:literal></expr>;
        
        <expr pos:line="17776" pos:column="9">virtual <comment type="block" pos:line="17776" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="17776" pos:column="81">HRESULT</name> <name pos:line="17776" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="17776" pos:column="107">get_Parent</name><argument_list pos:line="17776" pos:column="117">( 
            <comment type="block" pos:line="17777" pos:column="13">/* [retval][out] */</comment> <argument pos:line="17777" pos:column="33">__RPC__deref_out_opt ErrorList **ErrorList</argument>)</argument_list></macro> <op:operator pos:line="17777" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="17777" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="17779" pos:column="9">virtual <comment type="block" pos:line="17779" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <name pos:line="17779" pos:column="72">HRESULT</name> <name pos:line="17779" pos:column="80">STDMETHODCALLTYPE</name> <macro><name pos:line="17779" pos:column="98">Item</name><argument_list pos:line="17779" pos:column="102">( 
            <comment type="block" pos:line="17780" pos:column="13">/* [in] */</comment> <argument pos:line="17780" pos:column="24">VARIANT index</argument>,
            <comment type="block" pos:line="17781" pos:column="13">/* [retval][out] */</comment> <argument pos:line="17781" pos:column="33">__RPC__deref_out_opt ErrorItem **ErrorItem</argument>)</argument_list></macro> <op:operator pos:line="17781" pos:column="77">=</op:operator> <lit:literal type="number" pos:line="17781" pos:column="79">0</lit:literal></expr>;
        
        <expr pos:line="17783" pos:column="9">virtual <comment type="block" pos:line="17783" pos:column="17">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <name pos:line="17783" pos:column="81">HRESULT</name> <name pos:line="17783" pos:column="89">STDMETHODCALLTYPE</name> <macro><name pos:line="17783" pos:column="107">get_Count</name><argument_list pos:line="17783" pos:column="116">( 
            <comment type="block" pos:line="17784" pos:column="13">/* [retval][out] */</comment> <argument pos:line="17784" pos:column="33">__RPC__out long *Count</argument>)</argument_list></macro> <op:operator pos:line="17784" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="17784" pos:column="59">0</lit:literal></expr>;
        
    }</block></expr>;</expr_stmt>
    
<cpp:else pos:line="17788" pos:column="1">#<cpp:directive pos:line="17788" pos:column="2">else</cpp:directive></cpp:else> 	<comment type="block" pos:line="17788" pos:column="9">/* C style interface */</comment>

    <typedef pos:line="17790" pos:column="5">typedef <type><struct pos:line="17790" pos:column="13">struct <name pos:line="17790" pos:column="20">ErrorItemsVtbl</name>
    <block pos:line="17791" pos:column="5">{<public type="default" pos:line="17791" pos:column="6">
        <function_decl><type><name pos:line="17792" pos:column="9">BEGIN_INTERFACE</name>
        
        <name pos:line="17794" pos:column="9">HRESULT</name></type> ( <name pos:line="17794" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17794" pos:column="37">*</type:modifier><name pos:line="17794" pos:column="38">QueryInterface</name> )<parameter_list pos:line="17794" pos:column="54">( 
            <param><decl><type><name pos:line="17795" pos:column="13">ErrorItems</name> <type:modifier pos:line="17795" pos:column="24">*</type:modifier></type> <name pos:line="17795" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="17796" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17796" pos:column="24">__RPC__in</name> <name pos:line="17796" pos:column="34">REFIID</name></type> <name pos:line="17796" pos:column="41">riid</name></decl></param>,
            <comment type="block" pos:line="17797" pos:column="13">/* [iid_is][out] */</comment> 
            <param><decl><type><name pos:line="17798" pos:column="13">__RPC__deref_out</name>  <name pos:line="17798" pos:column="31">void</name> <type:modifier pos:line="17798" pos:column="36">*</type:modifier><type:modifier pos:line="17798" pos:column="37">*</type:modifier></type><name pos:line="17798" pos:column="38">ppvObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17800" pos:column="9">ULONG</name></type> ( <name pos:line="17800" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17800" pos:column="35">*</type:modifier><name pos:line="17800" pos:column="36">AddRef</name> )<parameter_list pos:line="17800" pos:column="44">( 
            <param><decl><type><name pos:line="17801" pos:column="13">ErrorItems</name> <type:modifier pos:line="17801" pos:column="24">*</type:modifier></type> <name pos:line="17801" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17803" pos:column="9">ULONG</name></type> ( <name pos:line="17803" pos:column="17">STDMETHODCALLTYPE</name> <type:modifier pos:line="17803" pos:column="35">*</type:modifier><name pos:line="17803" pos:column="36">Release</name> )<parameter_list pos:line="17803" pos:column="45">( 
            <param><decl><type><name pos:line="17804" pos:column="13">ErrorItems</name> <type:modifier pos:line="17804" pos:column="24">*</type:modifier></type> <name pos:line="17804" pos:column="26">This</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17806" pos:column="9">HRESULT</name></type> ( <name pos:line="17806" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17806" pos:column="37">*</type:modifier><name pos:line="17806" pos:column="38">GetTypeInfoCount</name> )<parameter_list pos:line="17806" pos:column="56">( 
            <param><decl><type><name pos:line="17807" pos:column="13">ErrorItems</name> <type:modifier pos:line="17807" pos:column="24">*</type:modifier></type> <name pos:line="17807" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="17808" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17808" pos:column="25">__RPC__out</name> <name pos:line="17808" pos:column="36">UINT</name> <type:modifier pos:line="17808" pos:column="41">*</type:modifier></type><name pos:line="17808" pos:column="42">pctinfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><name pos:line="17810" pos:column="9">HRESULT</name></type> ( <name pos:line="17810" pos:column="19">STDMETHODCALLTYPE</name> <type:modifier pos:line="17810" pos:column="37">*</type:modifier><name pos:line="17810" pos:column="38">GetTypeInfo</name> )<parameter_list pos:line="17810" pos:column="51">( 
            <param><decl><type><name pos:line="17811" pos:column="13">ErrorItems</name> <type:modifier pos:line="17811" pos:column="24">*</type:modifier></type> <name pos:line="17811" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="17812" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17812" pos:column="24">UINT</name></type> <name pos:line="17812" pos:column="29">iTInfo</name></decl></param>,
            <comment type="block" pos:line="17813" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17813" pos:column="24">LCID</name></type> <name pos:line="17813" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="17814" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17814" pos:column="25">__RPC__deref_out_opt</name> <name pos:line="17814" pos:column="46">ITypeInfo</name> <type:modifier pos:line="17814" pos:column="56">*</type:modifier><type:modifier pos:line="17814" pos:column="57">*</type:modifier></type><name pos:line="17814" pos:column="58">ppTInfo</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17816" pos:column="9">HRESULT</name> <argument_list pos:line="17816" pos:column="17">( <argument pos:line="17816" pos:column="19">STDMETHODCALLTYPE *GetIDsOfNames</argument> )</argument_list></macro><expr_stmt><expr><op:operator pos:line="17816" pos:column="53">(</op:operator> 
            <name pos:line="17817" pos:column="13">ErrorItems</name> <op:operator pos:line="17817" pos:column="24">*</op:operator> <name pos:line="17817" pos:column="26">This</name><op:operator pos:line="17817" pos:column="30">,</op:operator>
            <comment type="block" pos:line="17818" pos:column="13">/* [in] */</comment> <name pos:line="17818" pos:column="24">__RPC__in</name> <name pos:line="17818" pos:column="34">REFIID</name> <name pos:line="17818" pos:column="41">riid</name><op:operator pos:line="17818" pos:column="45">,</op:operator>
            <comment type="block" pos:line="17819" pos:column="13">/* [size_is][in] */</comment> <macro><name pos:line="17819" pos:column="33">__RPC__in_ecount_full</name><argument_list pos:line="17819" pos:column="54">(<argument pos:line="17819" pos:column="55">cNames</argument>)</argument_list></macro> <name pos:line="17819" pos:column="63">LPOLESTR</name> <op:operator pos:line="17819" pos:column="72">*</op:operator><name pos:line="17819" pos:column="73">rgszNames</name><op:operator pos:line="17819" pos:column="82">,</op:operator>
            <comment type="block" pos:line="17820" pos:column="13">/* [range][in] */</comment> <name pos:line="17820" pos:column="31">UINT</name> <name pos:line="17820" pos:column="36">cNames</name><op:operator pos:line="17820" pos:column="42">,</op:operator>
            <comment type="block" pos:line="17821" pos:column="13">/* [in] */</comment> <name pos:line="17821" pos:column="24">LCID</name> <name pos:line="17821" pos:column="29">lcid</name><op:operator pos:line="17821" pos:column="33">,</op:operator>
            <comment type="block" pos:line="17822" pos:column="13">/* [size_is][out] */</comment> <macro><name pos:line="17822" pos:column="34">__RPC__out_ecount_full</name><argument_list pos:line="17822" pos:column="56">(<argument pos:line="17822" pos:column="57">cNames</argument>)</argument_list></macro> <name pos:line="17822" pos:column="65">DISPID</name> <op:operator pos:line="17822" pos:column="72">*</op:operator><name pos:line="17822" pos:column="73">rgDispId</name><op:operator pos:line="17822" pos:column="81">)</op:operator></expr>;</expr_stmt>
        
        <comment type="block" pos:line="17824" pos:column="9">/* [local] */</comment> <function_decl><type><name pos:line="17824" pos:column="23">HRESULT</name></type> ( <name pos:line="17824" pos:column="33">STDMETHODCALLTYPE</name> <type:modifier pos:line="17824" pos:column="51">*</type:modifier><name pos:line="17824" pos:column="52">Invoke</name> )<parameter_list pos:line="17824" pos:column="60">( 
            <param><decl><type><name pos:line="17825" pos:column="13">ErrorItems</name> <type:modifier pos:line="17825" pos:column="24">*</type:modifier></type> <name pos:line="17825" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="17826" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17826" pos:column="24">DISPID</name></type> <name pos:line="17826" pos:column="31">dispIdMember</name></decl></param>,
            <comment type="block" pos:line="17827" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17827" pos:column="24">REFIID</name></type> <name pos:line="17827" pos:column="31">riid</name></decl></param>,
            <comment type="block" pos:line="17828" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17828" pos:column="24">LCID</name></type> <name pos:line="17828" pos:column="29">lcid</name></decl></param>,
            <comment type="block" pos:line="17829" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17829" pos:column="24">WORD</name></type> <name pos:line="17829" pos:column="29">wFlags</name></decl></param>,
            <comment type="block" pos:line="17830" pos:column="13">/* [out][in] */</comment> <param><decl><type><name pos:line="17830" pos:column="29">DISPPARAMS</name> <type:modifier pos:line="17830" pos:column="40">*</type:modifier></type><name pos:line="17830" pos:column="41">pDispParams</name></decl></param>,
            <comment type="block" pos:line="17831" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17831" pos:column="25">VARIANT</name> <type:modifier pos:line="17831" pos:column="33">*</type:modifier></type><name pos:line="17831" pos:column="34">pVarResult</name></decl></param>,
            <comment type="block" pos:line="17832" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17832" pos:column="25">EXCEPINFO</name> <type:modifier pos:line="17832" pos:column="35">*</type:modifier></type><name pos:line="17832" pos:column="36">pExcepInfo</name></decl></param>,
            <comment type="block" pos:line="17833" pos:column="13">/* [out] */</comment> <param><decl><type><name pos:line="17833" pos:column="25">UINT</name> <type:modifier pos:line="17833" pos:column="30">*</type:modifier></type><name pos:line="17833" pos:column="31">puArgErr</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17835" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="17835" pos:column="73">HRESULT</name></type> ( <name pos:line="17835" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="17835" pos:column="101">*</type:modifier><name pos:line="17835" pos:column="102">get_DTE</name> )<parameter_list pos:line="17835" pos:column="111">( 
            <param><decl><type><name pos:line="17836" pos:column="13">ErrorItems</name> <type:modifier pos:line="17836" pos:column="24">*</type:modifier></type> <name pos:line="17836" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="17837" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17837" pos:column="33">__RPC__deref_out_opt</name> <comment type="block" pos:line="17837" pos:column="54">/* external definition not present */</comment> <name pos:line="17837" pos:column="92">DTE</name> <type:modifier pos:line="17837" pos:column="96">*</type:modifier><type:modifier pos:line="17837" pos:column="97">*</type:modifier></type><name pos:line="17837" pos:column="98">DTEObject</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17839" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="17839" pos:column="73">HRESULT</name></type> ( <name pos:line="17839" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="17839" pos:column="101">*</type:modifier><name pos:line="17839" pos:column="102">get_Parent</name> )<parameter_list pos:line="17839" pos:column="114">( 
            <param><decl><type><name pos:line="17840" pos:column="13">ErrorItems</name> <type:modifier pos:line="17840" pos:column="24">*</type:modifier></type> <name pos:line="17840" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="17841" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17841" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="17841" pos:column="54">ErrorList</name> <type:modifier pos:line="17841" pos:column="64">*</type:modifier><type:modifier pos:line="17841" pos:column="65">*</type:modifier></type><name pos:line="17841" pos:column="66">ErrorList</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17843" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][id] */</comment> <function_decl><type><name pos:line="17843" pos:column="64">HRESULT</name></type> ( <name pos:line="17843" pos:column="74">STDMETHODCALLTYPE</name> <type:modifier pos:line="17843" pos:column="92">*</type:modifier><name pos:line="17843" pos:column="93">Item</name> )<parameter_list pos:line="17843" pos:column="99">( 
            <param><decl><type><name pos:line="17844" pos:column="13">ErrorItems</name> <type:modifier pos:line="17844" pos:column="24">*</type:modifier></type> <name pos:line="17844" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="17845" pos:column="13">/* [in] */</comment> <param><decl><type><name pos:line="17845" pos:column="24">VARIANT</name></type> <name pos:line="17845" pos:column="32">index</name></decl></param>,
            <comment type="block" pos:line="17846" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17846" pos:column="33">__RPC__deref_out_opt</name> <name pos:line="17846" pos:column="54">ErrorItem</name> <type:modifier pos:line="17846" pos:column="64">*</type:modifier><type:modifier pos:line="17846" pos:column="65">*</type:modifier></type><name pos:line="17846" pos:column="66">ErrorItem</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="block" pos:line="17848" pos:column="9">/* [helpstringcontext][helpstring][helpcontext][propget][id] */</comment> <function_decl><type><name pos:line="17848" pos:column="73">HRESULT</name></type> ( <name pos:line="17848" pos:column="83">STDMETHODCALLTYPE</name> <type:modifier pos:line="17848" pos:column="101">*</type:modifier><name pos:line="17848" pos:column="102">get_Count</name> )<parameter_list pos:line="17848" pos:column="113">( 
            <param><decl><type><name pos:line="17849" pos:column="13">ErrorItems</name> <type:modifier pos:line="17849" pos:column="24">*</type:modifier></type> <name pos:line="17849" pos:column="26">This</name></decl></param>,
            <comment type="block" pos:line="17850" pos:column="13">/* [retval][out] */</comment> <param><decl><type><name pos:line="17850" pos:column="33">__RPC__out</name> <name pos:line="17850" pos:column="44">long</name> <type:modifier pos:line="17850" pos:column="49">*</type:modifier></type><name pos:line="17850" pos:column="50">Count</name></decl></param>)</parameter_list>;</function_decl>
        
        <macro><name pos:line="17852" pos:column="9">END_INTERFACE</name></macro>
    </public>}</block></struct></type> <name pos:line="17853" pos:column="7">ErrorItemsVtbl</name>;</typedef>

    <decl_stmt><decl><type><name pos:line="17855" pos:column="5">interface</name></type> <name pos:line="17855" pos:column="15">ErrorItems</name>
    <argument_list pos:line="17856" pos:column="5">{
        <argument><expr><name pos:line="17857" pos:column="9">CONST_VTBL</name> struct <name pos:line="17857" pos:column="27">ErrorItemsVtbl</name> <op:operator pos:line="17857" pos:column="42">*</op:operator><name pos:line="17857" pos:column="43">lpVtbl</name></expr></argument>;
    }</argument_list></decl>;</decl_stmt>

    

<cpp:ifdef pos:line="17862" pos:column="1">#<cpp:directive pos:line="17862" pos:column="2">ifdef</cpp:directive> <name pos:line="17862" pos:column="8">COBJMACROS</name></cpp:ifdef>


<cpp:define pos:line="17865" pos:column="1">#<cpp:directive pos:line="17865" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17865" pos:column="9">ErrorItems_QueryInterface</name><parameter_list pos:line="17865" pos:column="34">(<param><type><name pos:line="17865" pos:column="35">This</name></type></param>,<param><type><name pos:line="17865" pos:column="40">riid</name></type></param>,<param><type><name pos:line="17865" pos:column="45">ppvObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17866" pos:column="5">( (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="17868" pos:column="1">#<cpp:directive pos:line="17868" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17868" pos:column="9">ErrorItems_AddRef</name><parameter_list pos:line="17868" pos:column="26">(<param><type><name pos:line="17868" pos:column="27">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17869" pos:column="5">( (This)-&gt;lpVtbl -&gt; AddRef(This) )</cpp:value></cpp:define> 

<cpp:define pos:line="17871" pos:column="1">#<cpp:directive pos:line="17871" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17871" pos:column="9">ErrorItems_Release</name><parameter_list pos:line="17871" pos:column="27">(<param><type><name pos:line="17871" pos:column="28">This</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17872" pos:column="5">( (This)-&gt;lpVtbl -&gt; Release(This) )</cpp:value></cpp:define> 


<cpp:define pos:line="17875" pos:column="1">#<cpp:directive pos:line="17875" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17875" pos:column="9">ErrorItems_GetTypeInfoCount</name><parameter_list pos:line="17875" pos:column="36">(<param><type><name pos:line="17875" pos:column="37">This</name></type></param>,<param><type><name pos:line="17875" pos:column="42">pctinfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17876" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="17878" pos:column="1">#<cpp:directive pos:line="17878" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17878" pos:column="9">ErrorItems_GetTypeInfo</name><parameter_list pos:line="17878" pos:column="31">(<param><type><name pos:line="17878" pos:column="32">This</name></type></param>,<param><type><name pos:line="17878" pos:column="37">iTInfo</name></type></param>,<param><type><name pos:line="17878" pos:column="44">lcid</name></type></param>,<param><type><name pos:line="17878" pos:column="49">ppTInfo</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17879" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) )</cpp:value></cpp:define> 

<cpp:define pos:line="17881" pos:column="1">#<cpp:directive pos:line="17881" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17881" pos:column="9">ErrorItems_GetIDsOfNames</name><parameter_list pos:line="17881" pos:column="33">(<param><type><name pos:line="17881" pos:column="34">This</name></type></param>,<param><type><name pos:line="17881" pos:column="39">riid</name></type></param>,<param><type><name pos:line="17881" pos:column="44">rgszNames</name></type></param>,<param><type><name pos:line="17881" pos:column="54">cNames</name></type></param>,<param><type><name pos:line="17881" pos:column="61">lcid</name></type></param>,<param><type><name pos:line="17881" pos:column="66">rgDispId</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17882" pos:column="5">( (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) )</cpp:value></cpp:define> 

<cpp:define pos:line="17884" pos:column="1">#<cpp:directive pos:line="17884" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17884" pos:column="9">ErrorItems_Invoke</name><parameter_list pos:line="17884" pos:column="26">(<param><type><name pos:line="17884" pos:column="27">This</name></type></param>,<param><type><name pos:line="17884" pos:column="32">dispIdMember</name></type></param>,<param><type><name pos:line="17884" pos:column="45">riid</name></type></param>,<param><type><name pos:line="17884" pos:column="50">lcid</name></type></param>,<param><type><name pos:line="17884" pos:column="55">wFlags</name></type></param>,<param><type><name pos:line="17884" pos:column="62">pDispParams</name></type></param>,<param><type><name pos:line="17884" pos:column="74">pVarResult</name></type></param>,<param><type><name pos:line="17884" pos:column="85">pExcepInfo</name></type></param>,<param><type><name pos:line="17884" pos:column="96">puArgErr</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17885" pos:column="5">( (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) )</cpp:value></cpp:define> 


<cpp:define pos:line="17888" pos:column="1">#<cpp:directive pos:line="17888" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17888" pos:column="9">ErrorItems_get_DTE</name><parameter_list pos:line="17888" pos:column="27">(<param><type><name pos:line="17888" pos:column="28">This</name></type></param>,<param><type><name pos:line="17888" pos:column="33">DTEObject</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17889" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_DTE(This,DTEObject) )</cpp:value></cpp:define> 

<cpp:define pos:line="17891" pos:column="1">#<cpp:directive pos:line="17891" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17891" pos:column="9">ErrorItems_get_Parent</name><parameter_list pos:line="17891" pos:column="30">(<param><type><name pos:line="17891" pos:column="31">This</name></type></param>,<param><type><name pos:line="17891" pos:column="36">ErrorList</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17892" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Parent(This,ErrorList) )</cpp:value></cpp:define> 

<cpp:define pos:line="17894" pos:column="1">#<cpp:directive pos:line="17894" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17894" pos:column="9">ErrorItems_Item</name><parameter_list pos:line="17894" pos:column="24">(<param><type><name pos:line="17894" pos:column="25">This</name></type></param>,<param><type><name pos:line="17894" pos:column="30">index</name></type></param>,<param><type><name pos:line="17894" pos:column="36">ErrorItem</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17895" pos:column="5">( (This)-&gt;lpVtbl -&gt; Item(This,index,ErrorItem) )</cpp:value></cpp:define> 

<cpp:define pos:line="17897" pos:column="1">#<cpp:directive pos:line="17897" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17897" pos:column="9">ErrorItems_get_Count</name><parameter_list pos:line="17897" pos:column="29">(<param><type><name pos:line="17897" pos:column="30">This</name></type></param>,<param><type><name pos:line="17897" pos:column="35">Count</name></type></param>)</parameter_list></cpp:macro>	\
    <cpp:value pos:line="17898" pos:column="5">( (This)-&gt;lpVtbl -&gt; get_Count(This,Count) )</cpp:value></cpp:define> 

<cpp:endif pos:line="17900" pos:column="1">#<cpp:directive pos:line="17900" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17900" pos:column="8">/* COBJMACROS */</comment>


<cpp:endif pos:line="17903" pos:column="1">#<cpp:directive pos:line="17903" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17903" pos:column="9">/* C style interface */</comment>




<cpp:endif pos:line="17908" pos:column="1">#<cpp:directive pos:line="17908" pos:column="2">endif</cpp:directive></cpp:endif> 	<comment type="block" pos:line="17908" pos:column="9">/* __ErrorItems_INTERFACE_DEFINED__ */</comment>

<cpp:endif pos:line="17910" pos:column="1">#<cpp:directive pos:line="17910" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="17910" pos:column="8">/* __EnvDTE80_LIBRARY_DEFINED__ */</comment>

<comment type="block" pos:line="17912" pos:column="1">/* Additional Prototypes for ALL interfaces */</comment>

<comment type="block" pos:line="17914" pos:column="1">/* end of Additional Prototypes */</comment>

<cpp:ifdef pos:line="17916" pos:column="1">#<cpp:directive pos:line="17916" pos:column="2">ifdef</cpp:directive> <name pos:line="17916" pos:column="8">__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif pos:line="17918" pos:column="1">#<cpp:directive pos:line="17918" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="17920" pos:column="1">#<cpp:directive pos:line="17920" pos:column="2">endif</cpp:directive></cpp:endif>


</unit>
