<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\VisualStudio\ABB.SrcML.VisualStudio.SrcMLService\SourceMonitor.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2013 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Vinay Augustine (ABB Group) - Initial implementation
 *****************************************************************************/</comment>

<using pos:line="12" pos:column="1">using <name pos:line="12" pos:column="7">EnvDTE</name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Microsoft</name><op:operator pos:line="13" pos:column="16">.</op:operator><name pos:line="13" pos:column="17">VisualStudio</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">Microsoft</name><op:operator pos:line="14" pos:column="16">.</op:operator><name pos:line="14" pos:column="17">VisualStudio</name><op:operator pos:line="14" pos:column="29">.</op:operator><name pos:line="14" pos:column="30">Shell</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">Microsoft</name><op:operator pos:line="15" pos:column="16">.</op:operator><name pos:line="15" pos:column="17">VisualStudio</name><op:operator pos:line="15" pos:column="29">.</op:operator><name pos:line="15" pos:column="30">Shell</name><op:operator pos:line="15" pos:column="35">.</op:operator><name pos:line="15" pos:column="36">Interop</name></name>;</using>
<using pos:line="16" pos:column="1">using <name pos:line="16" pos:column="7">System</name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">System</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Collections</name><op:operator pos:line="17" pos:column="25">.</op:operator><name pos:line="17" pos:column="26">Generic</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">System</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">IO</name></name>;</using>
<using pos:line="19" pos:column="1">using <name><name pos:line="19" pos:column="7">System</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">Linq</name></name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">System</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">Threading</name><op:operator pos:line="20" pos:column="23">.</op:operator><name pos:line="20" pos:column="24">Tasks</name></name>;</using>

<namespace pos:line="22" pos:column="1">namespace <name><name pos:line="22" pos:column="11">ABB</name><op:operator pos:line="22" pos:column="14">.</op:operator><name pos:line="22" pos:column="15">SrcML</name><op:operator pos:line="22" pos:column="20">.</op:operator><name pos:line="22" pos:column="21">VisualStudio</name></name> <block pos:line="22" pos:column="34">{

    <class><specifier pos:line="24" pos:column="5">public</specifier> class <name pos:line="24" pos:column="18">SourceMonitor</name> <super pos:line="24" pos:column="32">: <name pos:line="24" pos:column="34">DirectoryScanningMonitor</name>, <name pos:line="24" pos:column="60">IVsRunningDocTableEvents</name></super> <block pos:line="24" pos:column="85">{
        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">private</specifier> <specifier pos:line="25" pos:column="17">const</specifier> <name pos:line="25" pos:column="23">int</name></type> <name pos:line="25" pos:column="27">MaxNumberOfFilesInSolutionDirectory</name> <init pos:line="25" pos:column="63">= <expr><lit:literal type="number" pos:line="25" pos:column="65">1000</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="26" pos:column="9">private</specifier> <name pos:line="26" pos:column="17">IVsRunningDocumentTable</name></type> <name pos:line="26" pos:column="41">DocumentTable</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="27" pos:column="9">private</specifier> <name pos:line="27" pos:column="17">uint</name></type> <name pos:line="27" pos:column="22">DocumentTableItemId</name></decl>;</decl_stmt>

        <comment type="line" pos:line="29" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="30" pos:column="9">/// Creates a new source monitor</comment>
        <comment type="line" pos:line="31" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="32" pos:column="9">/// &lt;param name="solution"&gt;The solution to monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="33" pos:column="9">/// &lt;param name="foldersToMonitor"&gt;A list of folders to monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="34" pos:column="9">/// &lt;param name="scanInterval"&gt;The interval at which to scan the folders (in</comment>
        <comment type="line" pos:line="35" pos:column="9">/// seconds) &lt;/param&gt;</comment>
        <comment type="line" pos:line="36" pos:column="9">/// &lt;param name="baseDirectory"&gt;The base directory for this monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="37" pos:column="9">/// &lt;param name="defaultArchive"&gt;The default archive to route files to&lt;/param&gt;</comment>
        <comment type="line" pos:line="38" pos:column="9">/// &lt;param name="otherArchives"&gt;Other archives to route files to&lt;/param&gt;</comment>
        <constructor><specifier pos:line="39" pos:column="9">public</specifier> <name pos:line="39" pos:column="16">SourceMonitor</name><parameter_list pos:line="39" pos:column="29">(<param><decl><type><name pos:line="39" pos:column="30">Solution</name></type> <name pos:line="39" pos:column="39">solution</name></decl></param>, <param><decl><type><name pos:line="39" pos:column="49">double</name></type> <name pos:line="39" pos:column="56">scanInterval</name></decl></param>, <param><decl><type><name pos:line="39" pos:column="70">TaskScheduler</name></type> <name pos:line="39" pos:column="84">scheduler</name></decl></param>, <param><decl><type><name pos:line="39" pos:column="95">string</name></type> <name pos:line="39" pos:column="102">baseDirectory</name></decl></param>)</parameter_list> <member_list pos:line="39" pos:column="117">: <call><name pos:line="39" pos:column="119">this</name><argument_list pos:line="39" pos:column="123">(<argument><expr><name pos:line="39" pos:column="124">solution</name></expr></argument>, <argument><expr><name pos:line="39" pos:column="134">scanInterval</name></expr></argument>, <argument><expr><name pos:line="39" pos:column="148">scheduler</name></expr></argument>, <argument><expr><name pos:line="39" pos:column="159">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="39" pos:column="174">null</name></expr></argument>, <argument><expr><name pos:line="39" pos:column="180">null</name></expr></argument>)</argument_list></call> </member_list><block pos:line="39" pos:column="186">{ }</block></constructor>

        <comment type="line" pos:line="41" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="42" pos:column="9">/// Creates a new source monitor</comment>
        <comment type="line" pos:line="43" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="44" pos:column="9">/// &lt;param name="solution"&gt;The solution to monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="45" pos:column="9">/// &lt;param name="foldersToMonitor"&gt;A list of folders to monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="46" pos:column="9">/// &lt;param name="scanInterval"&gt;The interval at which to scan the folders (in</comment>
        <comment type="line" pos:line="47" pos:column="9">/// seconds) &lt;/param&gt;</comment>
        <comment type="line" pos:line="48" pos:column="9">/// &lt;param name="baseDirectory"&gt;The base directory for this monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="49" pos:column="9">/// &lt;param name="defaultArchive"&gt;The default archive to route files to&lt;/param&gt;</comment>
        <comment type="line" pos:line="50" pos:column="9">/// &lt;param name="otherArchives"&gt;Other archives to route files to&lt;/param&gt;</comment>
        <constructor><specifier pos:line="51" pos:column="9">public</specifier> <name pos:line="51" pos:column="16">SourceMonitor</name><parameter_list pos:line="51" pos:column="29">(<param><decl><type><name pos:line="51" pos:column="30">Solution</name></type> <name pos:line="51" pos:column="39">solution</name></decl></param>, <param><decl><type><name pos:line="51" pos:column="49">double</name></type> <name pos:line="51" pos:column="56">scanInterval</name></decl></param>, <param><decl><type><name pos:line="51" pos:column="70">TaskScheduler</name></type> <name pos:line="51" pos:column="84">scheduler</name></decl></param>, <param><decl><type><name pos:line="51" pos:column="95">string</name></type> <name pos:line="51" pos:column="102">baseDirectory</name></decl></param>, <param><decl><type><name pos:line="51" pos:column="117">AbstractArchive</name></type> <name pos:line="51" pos:column="133">defaultArchive</name></decl></param>, <param><decl><type><name pos:line="51" pos:column="149">SrcMLArchive</name></type> <name pos:line="51" pos:column="162">sourceArchive</name></decl></param>, <param><decl><type><specifier pos:line="51" pos:column="177">params</specifier> <name><name pos:line="51" pos:column="184">AbstractArchive</name><index pos:line="51" pos:column="199">[]</index></name></type> <name pos:line="51" pos:column="202">otherArchives</name></decl></param>)</parameter_list>
            <member_list pos:line="52" pos:column="13">: <call><name pos:line="52" pos:column="15">base</name><argument_list pos:line="52" pos:column="19">(<argument><expr><name><name pos:line="52" pos:column="20">DirectoryScanningMonitor</name><op:operator pos:line="52" pos:column="44">.</op:operator><name pos:line="52" pos:column="45">MONITOR_LIST_FILENAME</name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="68">scanInterval</name></expr></argument>, <argument><expr><name pos:line="52" pos:column="82">scheduler</name></expr></argument>, <argument><expr><name pos:line="52" pos:column="93">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="52" pos:column="108">defaultArchive</name></expr></argument>, <argument><expr><name pos:line="52" pos:column="124">otherArchives</name></expr></argument>)</argument_list></call> </member_list><block pos:line="52" pos:column="139">{
            <if pos:line="53" pos:column="13">if<condition pos:line="53" pos:column="15">(<expr><name pos:line="53" pos:column="16">null</name> <op:operator pos:line="53" pos:column="21">!=</op:operator> <name pos:line="53" pos:column="24">sourceArchive</name></expr>)</condition><then pos:line="53" pos:column="38"> <block pos:line="53" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="54" pos:column="17">RegisterArchive</name><argument_list pos:line="54" pos:column="32">(<argument><expr><name pos:line="54" pos:column="33">sourceArchive</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="54" pos:column="48">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><name><name pos:line="56" pos:column="13">this</name><op:operator pos:line="56" pos:column="17">.</op:operator><name pos:line="56" pos:column="18">MonitoredSolution</name></name> <op:operator pos:line="56" pos:column="36">=</op:operator> <name pos:line="56" pos:column="38">solution</name></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="59" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="60" pos:column="9">/// Creates a new source monitor</comment>
        <comment type="line" pos:line="61" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="62" pos:column="9">/// &lt;param name="solution"&gt;The solution to monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="63" pos:column="9">/// &lt;param name="foldersToMonitor"&gt;A list of folders to monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="64" pos:column="9">/// &lt;param name="baseDirectory"&gt;The base directory for this monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="65" pos:column="9">/// &lt;param name="defaultArchive"&gt;The default archive to route files to&lt;/param&gt;</comment>
        <comment type="line" pos:line="66" pos:column="9">/// &lt;param name="otherArchives"&gt;Other archives to route files to&lt;/param&gt;</comment>
        <constructor><specifier pos:line="67" pos:column="9">public</specifier> <name pos:line="67" pos:column="16">SourceMonitor</name><parameter_list pos:line="67" pos:column="29">(<param><decl><type><name pos:line="67" pos:column="30">Solution</name></type> <name pos:line="67" pos:column="39">solution</name></decl></param>, <param><decl><type><name pos:line="67" pos:column="49">string</name></type> <name pos:line="67" pos:column="56">baseDirectory</name></decl></param>, <param><decl><type><name pos:line="67" pos:column="71">AbstractArchive</name></type> <name pos:line="67" pos:column="87">defaultArchive</name></decl></param>, <param><decl><type><name pos:line="67" pos:column="103">SrcMLArchive</name></type> <name pos:line="67" pos:column="116">sourceArchive</name></decl></param>, <param><decl><type><specifier pos:line="67" pos:column="131">params</specifier> <name><name pos:line="67" pos:column="138">AbstractArchive</name><index pos:line="67" pos:column="153">[]</index></name></type> <name pos:line="67" pos:column="156">otherArchives</name></decl></param>)</parameter_list>
            <member_list pos:line="68" pos:column="13">: <call><name pos:line="68" pos:column="15">this</name><argument_list pos:line="68" pos:column="19">(<argument><expr><name pos:line="68" pos:column="20">solution</name></expr></argument>, <argument><expr><name pos:line="68" pos:column="30">DEFAULT_SCAN_INTERVAL</name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="53">TaskScheduler</name><op:operator pos:line="68" pos:column="66">.</op:operator><name pos:line="68" pos:column="67">Default</name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="76">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="68" pos:column="91">defaultArchive</name></expr></argument>, <argument><expr><name pos:line="68" pos:column="107">sourceArchive</name></expr></argument>, <argument><expr><name pos:line="68" pos:column="122">otherArchives</name></expr></argument>)</argument_list></call> </member_list><block pos:line="68" pos:column="137">{ }</block></constructor>

        <comment type="line" pos:line="70" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="71" pos:column="9">/// The solution being monitored</comment>
        <comment type="line" pos:line="72" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="73" pos:column="9">public</specifier> <name pos:line="73" pos:column="16">Solution</name></type> <name pos:line="73" pos:column="25">MonitoredSolution</name> <block pos:line="73" pos:column="43">{ <function_decl><name pos:line="73" pos:column="45">get</name>;</function_decl> <function_decl><specifier pos:line="73" pos:column="50">private</specifier> <name pos:line="73" pos:column="58">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="75" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="76" pos:column="9">/// Gets a list of all the files from the solution</comment>
        <comment type="line" pos:line="77" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="78" pos:column="9">/// &lt;param name="solution"&gt;The solution to get the files from&lt;/param&gt;</comment>
        <comment type="line" pos:line="79" pos:column="9">/// &lt;returns&gt;A list of the solution files&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="80" pos:column="9">public</specifier> <specifier pos:line="80" pos:column="16">static</specifier> <name><name pos:line="80" pos:column="23">List</name><argument_list pos:line="80" pos:column="27">&lt;<argument><name pos:line="80" pos:column="28">string</name></argument>&gt;</argument_list></name></type> <name pos:line="80" pos:column="36">GetSolutionFiles</name><parameter_list pos:line="80" pos:column="52">(<param><decl><type><name pos:line="80" pos:column="53">Solution</name></type> <name pos:line="80" pos:column="62">solution</name></decl></param>)</parameter_list> <block pos:line="80" pos:column="72">{
            <if pos:line="81" pos:column="13">if<condition pos:line="81" pos:column="15">(<expr><name pos:line="81" pos:column="16">solution</name> <op:operator pos:line="81" pos:column="25">==</op:operator> <name pos:line="81" pos:column="28">null</name></expr>)</condition><then pos:line="81" pos:column="33">
                <throw pos:line="82" pos:column="17">throw <expr><op:operator pos:line="82" pos:column="23">new</op:operator> <call><name pos:line="82" pos:column="27">ArgumentNullException</name><argument_list pos:line="82" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="82" pos:column="49">"solution"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

            <decl_stmt><decl><type><name><name pos:line="84" pos:column="13">List</name><argument_list pos:line="84" pos:column="17">&lt;<argument><name pos:line="84" pos:column="18">string</name></argument>&gt;</argument_list></name></type> <name pos:line="84" pos:column="26">solutionFiles</name> <init pos:line="84" pos:column="40">= <expr><op:operator pos:line="84" pos:column="42">new</op:operator> <call><name><name pos:line="84" pos:column="46">List</name><argument_list pos:line="84" pos:column="50">&lt;<argument><name pos:line="84" pos:column="51">string</name></argument>&gt;</argument_list></name><argument_list pos:line="84" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="85" pos:column="13">var</name></type> <name pos:line="85" pos:column="17">projectEnumerator</name> <init pos:line="85" pos:column="35">= <expr><call><name><name pos:line="85" pos:column="37">solution</name><op:operator pos:line="85" pos:column="45">.</op:operator><name pos:line="85" pos:column="46">Projects</name><op:operator pos:line="85" pos:column="54">.</op:operator><name pos:line="85" pos:column="55">GetEnumerator</name></name><argument_list pos:line="85" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <while pos:line="86" pos:column="13">while<condition pos:line="86" pos:column="18">(<expr><call><name><name pos:line="86" pos:column="19">projectEnumerator</name><op:operator pos:line="86" pos:column="36">.</op:operator><name pos:line="86" pos:column="37">MoveNext</name></name><argument_list pos:line="86" pos:column="45">()</argument_list></call></expr>)</condition> <block pos:line="86" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="87" pos:column="17">SearchProjectForFiles</name><argument_list pos:line="87" pos:column="38">(<argument><expr><name pos:line="87" pos:column="39">solutionFiles</name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="54">projectEnumerator</name><op:operator pos:line="87" pos:column="71">.</op:operator><name pos:line="87" pos:column="72">Current</name></name> <op:operator pos:line="87" pos:column="80">as</op:operator> <name pos:line="87" pos:column="83">Project</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            <return pos:line="89" pos:column="13">return <expr><name pos:line="89" pos:column="20">solutionFiles</name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="92" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="93" pos:column="9">/// Gets the set of full directory paths that contains the</comment>
        <comment type="line" pos:line="94" pos:column="9">/// &lt;paramref name="solution"/&gt;&lt;/summary&gt;</comment>
        <comment type="line" pos:line="95" pos:column="9">/// &lt;param name="solution"&gt;The solution&lt;/param&gt;</comment>
        <comment type="line" pos:line="96" pos:column="9">/// &lt;returns&gt;The set of absolute paths to the directory that contains the solution's files&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="97" pos:column="9">public</specifier> <specifier pos:line="97" pos:column="16">static</specifier> <name><name pos:line="97" pos:column="23">List</name><argument_list pos:line="97" pos:column="27">&lt;<argument><name pos:line="97" pos:column="28">string</name></argument>&gt;</argument_list></name></type> <name pos:line="97" pos:column="36">GetSolutionPaths</name><parameter_list pos:line="97" pos:column="52">(<param><decl><type><name pos:line="97" pos:column="53">Solution</name></type> <name pos:line="97" pos:column="62">solution</name></decl></param>)</parameter_list> <block pos:line="97" pos:column="72">{
            <if pos:line="98" pos:column="13">if<condition pos:line="98" pos:column="15">(<expr><name pos:line="98" pos:column="16">null</name> <op:operator pos:line="98" pos:column="21">==</op:operator> <name pos:line="98" pos:column="24">solution</name></expr>)</condition><then pos:line="98" pos:column="33"> <block pos:line="98" pos:column="34">{
                <throw pos:line="99" pos:column="17">throw <expr><op:operator pos:line="99" pos:column="23">new</op:operator> <call><name pos:line="99" pos:column="27">ArgumentNullException</name><argument_list pos:line="99" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="99" pos:column="49">"solution"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="102" pos:column="13">var</name></type> <name pos:line="102" pos:column="17">solutionFiles</name> <init pos:line="102" pos:column="31">= <expr><call><name pos:line="102" pos:column="33">GetSolutionFiles</name><argument_list pos:line="102" pos:column="49">(<argument><expr><name pos:line="102" pos:column="50">solution</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="103" pos:column="13">solutionFiles</name><op:operator pos:line="103" pos:column="26">.</op:operator><name pos:line="103" pos:column="27">Add</name></name><argument_list pos:line="103" pos:column="30">(<argument><expr><name><name pos:line="103" pos:column="31">solution</name><op:operator pos:line="103" pos:column="39">.</op:operator><name pos:line="103" pos:column="40">FullName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="104" pos:column="13">var</name></type> <name pos:line="104" pos:column="17">commonPaths</name> <init pos:line="104" pos:column="29">= <expr><call><name><name pos:line="104" pos:column="31">Utilities</name><op:operator pos:line="104" pos:column="40">.</op:operator><name pos:line="104" pos:column="41">FileHelper</name><op:operator pos:line="104" pos:column="51">.</op:operator><name pos:line="104" pos:column="52">GetCommonPathList</name></name><argument_list pos:line="104" pos:column="69">(<argument><expr><name pos:line="104" pos:column="70">solutionFiles</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="105" pos:column="13">return <expr><name pos:line="105" pos:column="20">commonPaths</name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="108" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="109" pos:column="9">/// Adds the directories for the &lt;see cref="MonitoredSolution"&gt;monitored solution&lt;/see&gt;</comment>
        <comment type="line" pos:line="110" pos:column="9">/// to &lt;see cref="DirectoryScanningMonitor.MonitoredDirectories"/&gt;.</comment>
        <comment type="line" pos:line="111" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="112" pos:column="9">public</specifier> <name pos:line="112" pos:column="16">void</name></type> <name pos:line="112" pos:column="21">AddSolutionDirectories</name><parameter_list pos:line="112" pos:column="43">()</parameter_list> <block pos:line="112" pos:column="46">{
            <decl_stmt><decl><type><name pos:line="113" pos:column="13">var</name></type> <name pos:line="113" pos:column="17">solutionPaths</name> <init pos:line="113" pos:column="31">= <expr><call><name pos:line="113" pos:column="33">GetSolutionPaths</name><argument_list pos:line="113" pos:column="49">(<argument><expr><name pos:line="113" pos:column="50">MonitoredSolution</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="114" pos:column="13">foreach (<init><decl><type><name pos:line="114" pos:column="22">var</name></type> <name pos:line="114" pos:column="26">solutionPath</name> <range pos:line="114" pos:column="39">in <expr><name pos:line="114" pos:column="42">solutionPaths</name></expr></range></decl></init>)
            <block pos:line="115" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="116" pos:column="17">AddDirectory</name><argument_list pos:line="116" pos:column="29">(<argument><expr><name pos:line="116" pos:column="30">solutionPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <comment type="line" pos:line="120" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="121" pos:column="9">/// Update the</comment>
        <comment type="line" pos:line="122" pos:column="9">/// &lt;paramref name="docCookie"&gt;referenced file&lt;/paramref&gt;</comment>
        <comment type="line" pos:line="123" pos:column="9">/// &lt;see cref="DirectoryScanningMonitor.IsMonitoringFile(string)"&gt;if it is being</comment>
        <comment type="line" pos:line="124" pos:column="9">/// monitored&lt;/see&gt;</comment>
        <comment type="line" pos:line="125" pos:column="9">/// &lt;paramref name="docCookie"&gt;file&lt;/paramref&gt; if the</comment>
        <comment type="line" pos:line="126" pos:column="9">/// &lt;paramref name="grfAttribs"&gt;changed attribute&lt;/paramref&gt; is</comment>
        <comment type="line" pos:line="127" pos:column="9">/// &lt;see cref="__VSRDTATTRIB.RDTA_DocDataReloaded"/&gt;.</comment>
        <comment type="line" pos:line="128" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="129" pos:column="9">/// &lt;param name="docCookie"&gt;The cookie for the changed document&lt;/param&gt;</comment>
        <comment type="line" pos:line="130" pos:column="9">/// &lt;param name="grfAttribs"&gt;The document attributes&lt;/param&gt;</comment>
        <comment type="line" pos:line="131" pos:column="9">/// &lt;returns&gt;If the method succeeds, it returns &lt;see cref="VSConstants.S_OK"/&gt;. If it fails,</comment>
        <comment type="line" pos:line="132" pos:column="9">/// it returns an error code.&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="133" pos:column="9">public</specifier> <name pos:line="133" pos:column="16">int</name></type> <name pos:line="133" pos:column="20">OnAfterAttributeChange</name><parameter_list pos:line="133" pos:column="42">(<param><decl><type><name pos:line="133" pos:column="43">uint</name></type> <name pos:line="133" pos:column="48">docCookie</name></decl></param>, <param><decl><type><name pos:line="133" pos:column="59">uint</name></type> <name pos:line="133" pos:column="64">grfAttribs</name></decl></param>)</parameter_list> <block pos:line="133" pos:column="76">{
            <if pos:line="134" pos:column="13">if<condition pos:line="134" pos:column="15">(<expr><name pos:line="134" pos:column="16">grfAttribs</name> <op:operator pos:line="134" pos:column="27">==</op:operator> <op:operator pos:line="134" pos:column="30">(</op:operator><name pos:line="134" pos:column="31">uint</name><op:operator pos:line="134" pos:column="35">)</op:operator> <name><name pos:line="134" pos:column="37">__VSRDTATTRIB</name><op:operator pos:line="134" pos:column="50">.</op:operator><name pos:line="134" pos:column="51">RDTA_DocDataReloaded</name></name></expr>)</condition><then pos:line="134" pos:column="72"> <block pos:line="134" pos:column="73">{
                <return pos:line="135" pos:column="17">return <expr><call><name pos:line="135" pos:column="24">UpdateVisualStudioDocument</name><argument_list pos:line="135" pos:column="50">(<argument><expr><name pos:line="135" pos:column="51">docCookie</name></expr></argument>)</argument_list></call></expr>;</return>
            }</block></then></if>
            <return pos:line="137" pos:column="13">return <expr><name><name pos:line="137" pos:column="20">VSConstants</name><op:operator pos:line="137" pos:column="31">.</op:operator><name pos:line="137" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="140" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="141" pos:column="9">/// Ignored</comment>
        <comment type="line" pos:line="142" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="143" pos:column="9">/// &lt;param name="docCookie"&gt;Unused&lt;/param&gt;</comment>
        <comment type="line" pos:line="144" pos:column="9">/// &lt;param name="pFrame"&gt;Unused&lt;/param&gt;</comment>
        <comment type="line" pos:line="145" pos:column="9">/// &lt;returns&gt;returns see cref="VSConstants.S_OK"/&gt;.&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="146" pos:column="9">public</specifier> <name pos:line="146" pos:column="16">int</name></type> <name pos:line="146" pos:column="20">OnAfterDocumentWindowHide</name><parameter_list pos:line="146" pos:column="45">(<param><decl><type><name pos:line="146" pos:column="46">uint</name></type> <name pos:line="146" pos:column="51">docCookie</name></decl></param>, <param><decl><type><name pos:line="146" pos:column="62">IVsWindowFrame</name></type> <name pos:line="146" pos:column="77">pFrame</name></decl></param>)</parameter_list> <block pos:line="146" pos:column="85">{
            <return pos:line="147" pos:column="13">return <expr><name><name pos:line="147" pos:column="20">VSConstants</name><op:operator pos:line="147" pos:column="31">.</op:operator><name pos:line="147" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="150" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="151" pos:column="9">/// Ignored.</comment>
        <comment type="line" pos:line="152" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="153" pos:column="9">/// &lt;param name="docCookie"&gt;Unused&lt;/param&gt;</comment>
        <comment type="line" pos:line="154" pos:column="9">/// &lt;param name="dwRDTLockType"&gt;Unused&lt;/param&gt;</comment>
        <comment type="line" pos:line="155" pos:column="9">/// &lt;param name="dwReadLocksRemaining"&gt;Unused&lt;/param&gt;</comment>
        <comment type="line" pos:line="156" pos:column="9">/// &lt;param name="dwEditLocksRemaining"&gt;Unused&lt;/param&gt;</comment>
        <comment type="line" pos:line="157" pos:column="9">///&lt;returns&gt;returns &lt;see cref="VSConstants.S_OK"/&gt;.&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="158" pos:column="9">public</specifier> <name pos:line="158" pos:column="16">int</name></type> <name pos:line="158" pos:column="20">OnAfterFirstDocumentLock</name><parameter_list pos:line="158" pos:column="44">(<param><decl><type><name pos:line="158" pos:column="45">uint</name></type> <name pos:line="158" pos:column="50">docCookie</name></decl></param>, <param><decl><type><name pos:line="158" pos:column="61">uint</name></type> <name pos:line="158" pos:column="66">dwRDTLockType</name></decl></param>, <param><decl><type><name pos:line="158" pos:column="81">uint</name></type> <name pos:line="158" pos:column="86">dwReadLocksRemaining</name></decl></param>, <param><decl><type><name pos:line="158" pos:column="108">uint</name></type> <name pos:line="158" pos:column="113">dwEditLocksRemaining</name></decl></param>)</parameter_list> <block pos:line="158" pos:column="135">{
            <return pos:line="159" pos:column="13">return <expr><name><name pos:line="159" pos:column="20">VSConstants</name><op:operator pos:line="159" pos:column="31">.</op:operator><name pos:line="159" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="162" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="163" pos:column="9">/// Respond to visual studio file saves by updating the monitor if the file</comment>
        <comment type="line" pos:line="164" pos:column="9">/// &lt;see cref="DirectoryScanningMonitor.IsMonitoringFile(string)"&gt;is being monitored&lt;/see&gt;</comment>
        <comment type="line" pos:line="165" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="166" pos:column="9">/// &lt;param name="docCookie"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="167" pos:column="9">/// &lt;returns&gt;If the method succeeds, it returns &lt;see cref="VSConstants.S_OK"/&gt;. If it fails,</comment>
        <comment type="line" pos:line="168" pos:column="9">/// it returns an error code.&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="169" pos:column="9">public</specifier> <name pos:line="169" pos:column="16">int</name></type> <name pos:line="169" pos:column="20">OnAfterSave</name><parameter_list pos:line="169" pos:column="31">(<param><decl><type><name pos:line="169" pos:column="32">uint</name></type> <name pos:line="169" pos:column="37">docCookie</name></decl></param>)</parameter_list> <block pos:line="169" pos:column="48">{
            <return pos:line="170" pos:column="13">return <expr><call><name pos:line="170" pos:column="20">UpdateVisualStudioDocument</name><argument_list pos:line="170" pos:column="46">(<argument><expr><name pos:line="170" pos:column="47">docCookie</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="173" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="174" pos:column="9">/// Ignored.</comment>
        <comment type="line" pos:line="175" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="176" pos:column="9">/// &lt;param name="docCookie"&gt;Unused&lt;/param&gt;</comment>
        <comment type="line" pos:line="177" pos:column="9">/// &lt;param name="fFirstShow"&gt;Unused&lt;/param&gt;</comment>
        <comment type="line" pos:line="178" pos:column="9">/// &lt;param name="pFrame"&gt;Unused&lt;/param&gt;</comment>
        <comment type="line" pos:line="179" pos:column="9">/// &lt;returns&gt;returns see cref="VSConstants.S_OK"/&gt;.&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="180" pos:column="9">public</specifier> <name pos:line="180" pos:column="16">int</name></type> <name pos:line="180" pos:column="20">OnBeforeDocumentWindowShow</name><parameter_list pos:line="180" pos:column="46">(<param><decl><type><name pos:line="180" pos:column="47">uint</name></type> <name pos:line="180" pos:column="52">docCookie</name></decl></param>, <param><decl><type><name pos:line="180" pos:column="63">int</name></type> <name pos:line="180" pos:column="67">fFirstShow</name></decl></param>, <param><decl><type><name pos:line="180" pos:column="79">IVsWindowFrame</name></type> <name pos:line="180" pos:column="94">pFrame</name></decl></param>)</parameter_list> <block pos:line="180" pos:column="102">{
            <return pos:line="181" pos:column="13">return <expr><name><name pos:line="181" pos:column="20">VSConstants</name><op:operator pos:line="181" pos:column="31">.</op:operator><name pos:line="181" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="184" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="185" pos:column="9">/// Ignored.</comment>
        <comment type="line" pos:line="186" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="187" pos:column="9">/// &lt;param name="docCookie"&gt;Unused&lt;/param&gt;</comment>
        <comment type="line" pos:line="188" pos:column="9">/// &lt;param name="dwRDTLockType"&gt;Unused&lt;/param&gt;</comment>
        <comment type="line" pos:line="189" pos:column="9">/// &lt;param name="dwReadLocksRemaining"&gt;Unused&lt;/param&gt;</comment>
        <comment type="line" pos:line="190" pos:column="9">/// &lt;param name="dwEditLocksRemaining"&gt;Unused&lt;/param&gt;</comment>
        <comment type="line" pos:line="191" pos:column="9">/// &lt;returns&gt;returns see cref="VSConstants.S_OK"/&gt;.&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="192" pos:column="9">public</specifier> <name pos:line="192" pos:column="16">int</name></type> <name pos:line="192" pos:column="20">OnBeforeLastDocumentUnlock</name><parameter_list pos:line="192" pos:column="46">(<param><decl><type><name pos:line="192" pos:column="47">uint</name></type> <name pos:line="192" pos:column="52">docCookie</name></decl></param>, <param><decl><type><name pos:line="192" pos:column="63">uint</name></type> <name pos:line="192" pos:column="68">dwRDTLockType</name></decl></param>, <param><decl><type><name pos:line="192" pos:column="83">uint</name></type> <name pos:line="192" pos:column="88">dwReadLocksRemaining</name></decl></param>, <param><decl><type><name pos:line="192" pos:column="110">uint</name></type> <name pos:line="192" pos:column="115">dwEditLocksRemaining</name></decl></param>)</parameter_list> <block pos:line="192" pos:column="137">{
            <return pos:line="193" pos:column="13">return <expr><name><name pos:line="193" pos:column="20">VSConstants</name><op:operator pos:line="193" pos:column="31">.</op:operator><name pos:line="193" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="196" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="197" pos:column="9">/// Subscribe to the visual studio &lt;see cref="IVsRunningDocumentTable"/&gt; and then</comment>
        <comment type="line" pos:line="198" pos:column="9">/// &lt;see cref="DirectoryScanningMonitor.StartMonitoring()"&gt;start monitoring the</comment>
        <comment type="line" pos:line="199" pos:column="9">/// directories&lt;/see&gt;.</comment>
        <comment type="line" pos:line="200" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="201" pos:column="9">public</specifier> <specifier pos:line="201" pos:column="16">override</specifier> <name pos:line="201" pos:column="25">void</name></type> <name pos:line="201" pos:column="30">StartMonitoring</name><parameter_list pos:line="201" pos:column="45">()</parameter_list> <block pos:line="201" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="202" pos:column="13">SubscribeToEvents</name><argument_list pos:line="202" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="203" pos:column="13">base</name><op:operator pos:line="203" pos:column="17">.</op:operator><name pos:line="203" pos:column="18">StartMonitoring</name></name><argument_list pos:line="203" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="206" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="207" pos:column="9">/// Unsubscribe from the &lt;see cref="IVsRunningDocumentTable"/&gt; and then</comment>
        <comment type="line" pos:line="208" pos:column="9">/// &lt;see cref="DirectoryScanningMonitor.StopMonitoring()"&gt;stop monitoring the</comment>
        <comment type="line" pos:line="209" pos:column="9">/// directories.&lt;/see&gt;</comment>
        <comment type="line" pos:line="210" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="211" pos:column="9">public</specifier> <specifier pos:line="211" pos:column="16">override</specifier> <name pos:line="211" pos:column="25">void</name></type> <name pos:line="211" pos:column="30">StopMonitoring</name><parameter_list pos:line="211" pos:column="44">()</parameter_list> <block pos:line="211" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="212" pos:column="13">UnsubscribeFromEvents</name><argument_list pos:line="212" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="213" pos:column="13">base</name><op:operator pos:line="213" pos:column="17">.</op:operator><name pos:line="213" pos:column="18">StopMonitoring</name></name><argument_list pos:line="213" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="216" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="217" pos:column="9">/// Dispose of this source monitor</comment>
        <comment type="line" pos:line="218" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="219" pos:column="9">/// &lt;param name="disposing"&gt;&lt;/param&gt;</comment>
        <function><type><specifier pos:line="220" pos:column="9">protected</specifier> <specifier pos:line="220" pos:column="19">override</specifier> <name pos:line="220" pos:column="28">void</name></type> <name pos:line="220" pos:column="33">Dispose</name><parameter_list pos:line="220" pos:column="40">(<param><decl><type><name pos:line="220" pos:column="41">bool</name></type> <name pos:line="220" pos:column="46">disposing</name></decl></param>)</parameter_list> <block pos:line="220" pos:column="57">{
            <expr_stmt><expr><call><name><name pos:line="221" pos:column="13">base</name><op:operator pos:line="221" pos:column="17">.</op:operator><name pos:line="221" pos:column="18">Dispose</name></name><argument_list pos:line="221" pos:column="25">(<argument><expr><name pos:line="221" pos:column="26">disposing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="224" pos:column="9">private</specifier> <specifier pos:line="224" pos:column="17">static</specifier> <name pos:line="224" pos:column="24">void</name></type> <name pos:line="224" pos:column="29">SearchProjectForFiles</name><parameter_list pos:line="224" pos:column="50">(<param><decl><type><name><name pos:line="224" pos:column="51">List</name><argument_list pos:line="224" pos:column="55">&lt;<argument><name pos:line="224" pos:column="56">string</name></argument>&gt;</argument_list></name></type> <name pos:line="224" pos:column="64">solutionFiles</name></decl></param>, <param><decl><type><name pos:line="224" pos:column="79">Project</name></type> <name pos:line="224" pos:column="87">project</name></decl></param>)</parameter_list> <block pos:line="224" pos:column="96">{
            <if pos:line="225" pos:column="13">if<condition pos:line="225" pos:column="15">(<expr><name pos:line="225" pos:column="16">project</name> <op:operator pos:line="225" pos:column="24">!=</op:operator> <name pos:line="225" pos:column="27">null</name></expr>)</condition><then pos:line="225" pos:column="32">
                <if pos:line="226" pos:column="17">if<condition pos:line="226" pos:column="19">(<expr><name><name pos:line="226" pos:column="20">project</name><op:operator pos:line="226" pos:column="27">.</op:operator><name pos:line="226" pos:column="28">ProjectItems</name></name> <op:operator pos:line="226" pos:column="41">!=</op:operator> <name pos:line="226" pos:column="44">null</name></expr>)</condition><then pos:line="226" pos:column="49"> <block pos:line="226" pos:column="50">{
                    <decl_stmt><decl><type><name pos:line="227" pos:column="21">var</name></type> <name pos:line="227" pos:column="25">itemEnumerator</name> <init pos:line="227" pos:column="40">= <expr><call><name><name pos:line="227" pos:column="42">project</name><op:operator pos:line="227" pos:column="49">.</op:operator><name pos:line="227" pos:column="50">ProjectItems</name><op:operator pos:line="227" pos:column="62">.</op:operator><name pos:line="227" pos:column="63">GetEnumerator</name></name><argument_list pos:line="227" pos:column="76">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <while pos:line="228" pos:column="21">while<condition pos:line="228" pos:column="26">(<expr><call><name><name pos:line="228" pos:column="27">itemEnumerator</name><op:operator pos:line="228" pos:column="41">.</op:operator><name pos:line="228" pos:column="42">MoveNext</name></name><argument_list pos:line="228" pos:column="50">()</argument_list></call></expr>)</condition> <block pos:line="228" pos:column="54">{
                        <decl_stmt><decl><type><name pos:line="229" pos:column="25">var</name></type> <name pos:line="229" pos:column="29">item</name> <init pos:line="229" pos:column="34">= <expr><name><name pos:line="229" pos:column="36">itemEnumerator</name><op:operator pos:line="229" pos:column="50">.</op:operator><name pos:line="229" pos:column="51">Current</name></name> <op:operator pos:line="229" pos:column="59">as</op:operator> <name pos:line="229" pos:column="62">ProjectItem</name></expr></init></decl>;</decl_stmt>
                        <if pos:line="230" pos:column="25">if<condition pos:line="230" pos:column="27">(<expr><name pos:line="230" pos:column="28">item</name> <op:operator pos:line="230" pos:column="33">!=</op:operator> <name pos:line="230" pos:column="36">null</name> <op:operator pos:line="230" pos:column="41">&amp;&amp;</op:operator> <name><name pos:line="230" pos:column="44">item</name><op:operator pos:line="230" pos:column="48">.</op:operator><name pos:line="230" pos:column="49">Name</name></name> <op:operator pos:line="230" pos:column="54">!=</op:operator> <name pos:line="230" pos:column="57">null</name> <op:operator pos:line="230" pos:column="62">&amp;&amp;</op:operator> <name><name pos:line="230" pos:column="65">item</name><op:operator pos:line="230" pos:column="69">.</op:operator><name pos:line="230" pos:column="70">FileCount</name></name> <op:operator pos:line="230" pos:column="80">&gt;</op:operator> <lit:literal type="number" pos:line="230" pos:column="82">0</lit:literal></expr>)</condition><then pos:line="230" pos:column="84"> <block pos:line="230" pos:column="85">{
                            <try pos:line="231" pos:column="29">try <block pos:line="231" pos:column="33">{
                                <decl_stmt><decl><type><name pos:line="232" pos:column="33">var</name></type> <name pos:line="232" pos:column="37">myPath</name> <init pos:line="232" pos:column="44">= <expr><call><name><name pos:line="232" pos:column="46">Path</name><op:operator pos:line="232" pos:column="50">.</op:operator><name pos:line="232" pos:column="51">GetFullPath</name></name><argument_list pos:line="232" pos:column="62">(<argument><expr><name><name pos:line="232" pos:column="63">item</name><op:operator pos:line="232" pos:column="67">.</op:operator><name pos:line="232" pos:column="68">FileNames</name><index pos:line="232" pos:column="77">[<expr><lit:literal type="number" pos:line="232" pos:column="78">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                                <if pos:line="233" pos:column="33">if<condition pos:line="233" pos:column="35">(<expr><op:operator pos:line="233" pos:column="36">!</op:operator><call><name><name pos:line="233" pos:column="37">String</name><op:operator pos:line="233" pos:column="43">.</op:operator><name pos:line="233" pos:column="44">IsNullOrEmpty</name></name><argument_list pos:line="233" pos:column="57">(<argument><expr><call><name><name pos:line="233" pos:column="58">Path</name><op:operator pos:line="233" pos:column="62">.</op:operator><name pos:line="233" pos:column="63">GetExtension</name></name><argument_list pos:line="233" pos:column="75">(<argument><expr><name pos:line="233" pos:column="76">myPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="233" pos:column="85">
                                    <expr_stmt><expr><call><name><name pos:line="234" pos:column="37">solutionFiles</name><op:operator pos:line="234" pos:column="50">.</op:operator><name pos:line="234" pos:column="51">Add</name></name><argument_list pos:line="234" pos:column="54">(<argument><expr><name pos:line="234" pos:column="55">myPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
                            }</block> <catch pos:line="235" pos:column="31">catch<parameter_list pos:line="235" pos:column="36">(<param><decl><type><name pos:line="235" pos:column="37">ArgumentException</name></type></decl></param>)</parameter_list> <block pos:line="235" pos:column="56">{ }</block></catch></try>
                            <decl_stmt><decl><type><name pos:line="236" pos:column="29">var</name></type> <name pos:line="236" pos:column="33">proj</name> <init pos:line="236" pos:column="38">= <expr><name><name pos:line="236" pos:column="40">item</name><op:operator pos:line="236" pos:column="44">.</op:operator><name pos:line="236" pos:column="45">SubProject</name></name> <op:operator pos:line="236" pos:column="56">as</op:operator> <name pos:line="236" pos:column="59">Project</name></expr></init></decl>;</decl_stmt>
                            <if pos:line="237" pos:column="29">if<condition pos:line="237" pos:column="31">(<expr><name pos:line="237" pos:column="32">proj</name> <op:operator pos:line="237" pos:column="37">!=</op:operator> <name pos:line="237" pos:column="40">null</name></expr>)</condition><then pos:line="237" pos:column="45"> <block pos:line="237" pos:column="46">{
                                <expr_stmt><expr><call><name pos:line="238" pos:column="33">SearchProjectForFiles</name><argument_list pos:line="238" pos:column="54">(<argument><expr><name pos:line="238" pos:column="55">solutionFiles</name></expr></argument>, <argument><expr><name pos:line="238" pos:column="70">proj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then></if>
                        }</block></then></if>
                    }</block></while>
                }</block></then></if></then></if>
        }</block></function>

        <comment type="line" pos:line="245" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="246" pos:column="9">/// Subscribe to the running document table events</comment>
        <comment type="line" pos:line="247" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="248" pos:column="9">private</specifier> <name pos:line="248" pos:column="17">void</name></type> <name pos:line="248" pos:column="22">SubscribeToEvents</name><parameter_list pos:line="248" pos:column="39">()</parameter_list> <block pos:line="248" pos:column="42">{
            <expr_stmt><expr><name pos:line="249" pos:column="13">DocumentTable</name> <op:operator pos:line="249" pos:column="27">=</op:operator> <call><name><name pos:line="249" pos:column="29">Package</name><op:operator pos:line="249" pos:column="36">.</op:operator><name pos:line="249" pos:column="37">GetGlobalService</name></name><argument_list pos:line="249" pos:column="53">(<argument><expr><call><name pos:line="249" pos:column="54">typeof</name><argument_list pos:line="249" pos:column="60">(<argument><expr><name pos:line="249" pos:column="61">SVsRunningDocumentTable</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="249" pos:column="87">as</op:operator> <name pos:line="249" pos:column="90">IVsRunningDocumentTable</name></expr>;</expr_stmt>
            <if pos:line="250" pos:column="13">if<condition pos:line="250" pos:column="15">(<expr><name pos:line="250" pos:column="16">DocumentTable</name> <op:operator pos:line="250" pos:column="30">!=</op:operator> <name pos:line="250" pos:column="33">null</name></expr>)</condition><then pos:line="250" pos:column="38"> <block pos:line="250" pos:column="39">{
                <decl_stmt><decl><type><name pos:line="251" pos:column="17">int</name></type> <name pos:line="251" pos:column="21">result</name> <init pos:line="251" pos:column="28">= <expr><call><name><name pos:line="251" pos:column="30">DocumentTable</name><op:operator pos:line="251" pos:column="43">.</op:operator><name pos:line="251" pos:column="44">AdviseRunningDocTableEvents</name></name><argument_list pos:line="251" pos:column="71">(<argument><expr><name pos:line="251" pos:column="72">this</name></expr></argument>, <argument><expr pos:line="251" pos:column="78">out <name pos:line="251" pos:column="82">DocumentTableItemId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="252" pos:column="17">ErrorHandler</name><op:operator pos:line="252" pos:column="29">.</op:operator><name pos:line="252" pos:column="30">ThrowOnFailure</name></name><argument_list pos:line="252" pos:column="44">(<argument><expr><name pos:line="252" pos:column="45">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="256" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="257" pos:column="9">/// Unsubscribe from the running document table events</comment>
        <comment type="line" pos:line="258" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="259" pos:column="9">private</specifier> <name pos:line="259" pos:column="17">void</name></type> <name pos:line="259" pos:column="22">UnsubscribeFromEvents</name><parameter_list pos:line="259" pos:column="43">()</parameter_list> <block pos:line="259" pos:column="46">{
            <if pos:line="260" pos:column="13">if<condition pos:line="260" pos:column="15">(<expr><name pos:line="260" pos:column="16">DocumentTable</name> <op:operator pos:line="260" pos:column="30">!=</op:operator> <name pos:line="260" pos:column="33">null</name></expr>)</condition><then pos:line="260" pos:column="38"> <block pos:line="260" pos:column="39">{
                <decl_stmt><decl><type><name pos:line="261" pos:column="17">int</name></type> <name pos:line="261" pos:column="21">result</name> <init pos:line="261" pos:column="28">= <expr><call><name><name pos:line="261" pos:column="30">DocumentTable</name><op:operator pos:line="261" pos:column="43">.</op:operator><name pos:line="261" pos:column="44">UnadviseRunningDocTableEvents</name></name><argument_list pos:line="261" pos:column="73">(<argument><expr><name pos:line="261" pos:column="74">DocumentTableItemId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="262" pos:column="17">ErrorHandler</name><op:operator pos:line="262" pos:column="29">.</op:operator><name pos:line="262" pos:column="30">Succeeded</name></name><argument_list pos:line="262" pos:column="39">(<argument><expr><name pos:line="262" pos:column="40">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="266" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="267" pos:column="9">/// Update the visual studio document referred to by</comment>
        <comment type="line" pos:line="268" pos:column="9">/// &lt;paramref name="docCookie"/&gt;&lt;/summary&gt;</comment>
        <comment type="line" pos:line="269" pos:column="9">/// &lt;param name="docCookie"&gt;The identifier for the visula studio document&lt;/param&gt;</comment>
        <comment type="line" pos:line="270" pos:column="9">/// &lt;returns&gt;The &lt;see cref="VSConstants"/&gt; indicating whether or not the document was</comment>
        <comment type="line" pos:line="271" pos:column="9">/// found&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="272" pos:column="9">private</specifier> <name pos:line="272" pos:column="17">int</name></type> <name pos:line="272" pos:column="21">UpdateVisualStudioDocument</name><parameter_list pos:line="272" pos:column="47">(<param><decl><type><name pos:line="272" pos:column="48">uint</name></type> <name pos:line="272" pos:column="53">docCookie</name></decl></param>)</parameter_list> <block pos:line="272" pos:column="64">{
            <decl_stmt><decl><type><name pos:line="273" pos:column="13">uint</name></type> <name pos:line="273" pos:column="18">flags</name></decl><op:operator pos:line="273" pos:column="23">,</op:operator> <decl><type ref="prev"/><name pos:line="273" pos:column="25">readingLocks</name></decl><op:operator pos:line="273" pos:column="37">,</op:operator> <decl><type ref="prev"/><name pos:line="273" pos:column="39">editLocks</name></decl><op:operator pos:line="273" pos:column="48">,</op:operator> <decl><type ref="prev"/><name pos:line="273" pos:column="50">documentId</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="274" pos:column="13">string</name></type> <name pos:line="274" pos:column="20">filePath</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="275" pos:column="13">IVsHierarchy</name></type> <name pos:line="275" pos:column="26">hierarchy</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="276" pos:column="13">IntPtr</name></type> <name pos:line="276" pos:column="20">documentData</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="277" pos:column="13">int</name></type> <name pos:line="277" pos:column="17">status</name> <init pos:line="277" pos:column="24">= <expr><call><name><name pos:line="277" pos:column="26">DocumentTable</name><op:operator pos:line="277" pos:column="39">.</op:operator><name pos:line="277" pos:column="40">GetDocumentInfo</name></name><argument_list pos:line="277" pos:column="55">(<argument><expr><name pos:line="277" pos:column="56">docCookie</name></expr></argument>, <argument><expr pos:line="277" pos:column="67">out <name pos:line="277" pos:column="71">flags</name></expr></argument>, <argument><expr pos:line="277" pos:column="78">out <name pos:line="277" pos:column="82">readingLocks</name></expr></argument>, <argument><expr pos:line="277" pos:column="96">out <name pos:line="277" pos:column="100">editLocks</name></expr></argument>, <argument><expr pos:line="277" pos:column="111">out <name pos:line="277" pos:column="115">filePath</name></expr></argument>, <argument><expr pos:line="277" pos:column="125">out <name pos:line="277" pos:column="129">hierarchy</name></expr></argument>, <argument><expr pos:line="277" pos:column="140">out <name pos:line="277" pos:column="144">documentId</name></expr></argument>, <argument><expr pos:line="277" pos:column="156">out <name pos:line="277" pos:column="160">documentData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="278" pos:column="13">var</name></type> <name pos:line="278" pos:column="17">archive</name> <init pos:line="278" pos:column="25">= <expr><call><name pos:line="278" pos:column="27">GetArchiveForFile</name><argument_list pos:line="278" pos:column="44">(<argument><expr><name pos:line="278" pos:column="45">filePath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="279" pos:column="13">if<condition pos:line="279" pos:column="15">(<expr><name pos:line="279" pos:column="16">status</name> <op:operator pos:line="279" pos:column="23">==</op:operator> <name><name pos:line="279" pos:column="26">VSConstants</name><op:operator pos:line="279" pos:column="37">.</op:operator><name pos:line="279" pos:column="38">S_OK</name> <type:modifier pos:line="279" pos:column="43">&amp;&amp;</type:modifier></name> <call><name pos:line="279" pos:column="46">IsMonitoringFile</name><argument_list pos:line="279" pos:column="62">(<argument><expr><name pos:line="279" pos:column="63">filePath</name></expr></argument>)</argument_list></call> <op:operator pos:line="279" pos:column="73">&amp;&amp;</op:operator> <call><name><name pos:line="279" pos:column="76">archive</name><op:operator pos:line="279" pos:column="83">.</op:operator><name pos:line="279" pos:column="84">IsOutdated</name></name><argument_list pos:line="279" pos:column="94">(<argument><expr><name pos:line="279" pos:column="95">filePath</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="279" pos:column="105"> <block pos:line="279" pos:column="106">{
                <expr_stmt><expr><call><name pos:line="280" pos:column="17">UpdateFileAsync</name><argument_list pos:line="280" pos:column="32">(<argument><expr><name pos:line="280" pos:column="33">filePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <return pos:line="282" pos:column="13">return <expr><name pos:line="282" pos:column="20">status</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
