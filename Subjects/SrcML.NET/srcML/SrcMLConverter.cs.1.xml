<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\Tools\ABB.SrcML.Tools.Src2SrcMLPreview\SrcMLConverter.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2010 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Vinay Augustine (ABB Group) - initial API, implementation, &amp; documentation
 *****************************************************************************/</comment>

<using pos:line="12" pos:column="1">using <name pos:line="12" pos:column="7">System</name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Collections</name><op:operator pos:line="13" pos:column="25">.</op:operator><name pos:line="13" pos:column="26">Generic</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Linq</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">Text</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Windows</name><op:operator pos:line="16" pos:column="21">.</op:operator><name pos:line="16" pos:column="22">Data</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">System</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Xml</name><op:operator pos:line="17" pos:column="17">.</op:operator><name pos:line="17" pos:column="18">Linq</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">System</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">Windows</name><op:operator pos:line="18" pos:column="21">.</op:operator><name pos:line="18" pos:column="22">Controls</name></name>;</using>
<using pos:line="19" pos:column="1">using <name><name pos:line="19" pos:column="7">System</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">Windows</name><op:operator pos:line="19" pos:column="21">.</op:operator><name pos:line="19" pos:column="22">Documents</name></name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">System</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">Windows</name></name>;</using>

<namespace pos:line="22" pos:column="1">namespace <name><name pos:line="22" pos:column="11">ABB</name><op:operator pos:line="22" pos:column="14">.</op:operator><name pos:line="22" pos:column="15">SrcML</name><op:operator pos:line="22" pos:column="20">.</op:operator><name pos:line="22" pos:column="21">Tools</name><op:operator pos:line="22" pos:column="26">.</op:operator><name pos:line="22" pos:column="27">Src2SrcMLPreview</name></name>
<block pos:line="23" pos:column="1">{
    <class pos:line="24" pos:column="5">class <name pos:line="24" pos:column="11">SrcMLConverter</name> <super pos:line="24" pos:column="26">: <name pos:line="24" pos:column="28">IValueConverter</name></super>
    <block pos:line="25" pos:column="5">{

        <cpp:region pos:line="27" pos:column="9">#<cpp:directive pos:line="27" pos:column="10">region</cpp:directive> IValueConverter Members</cpp:region>

        <function><type><specifier pos:line="29" pos:column="9">public</specifier> <name pos:line="29" pos:column="16">object</name></type> <name pos:line="29" pos:column="23">Convert</name><parameter_list pos:line="29" pos:column="30">(<param><decl><type><name pos:line="29" pos:column="31">object</name></type> <name pos:line="29" pos:column="38">value</name></decl></param>, <param><decl><type><name pos:line="29" pos:column="45">Type</name></type> <name pos:line="29" pos:column="50">targetType</name></decl></param>, <param><decl><type><name pos:line="29" pos:column="62">object</name></type> <name pos:line="29" pos:column="69">parameter</name></decl></param>, <param><decl><type><name><name pos:line="29" pos:column="80">System</name><op:operator pos:line="29" pos:column="86">.</op:operator><name pos:line="29" pos:column="87">Globalization</name><op:operator pos:line="29" pos:column="100">.</op:operator><name pos:line="29" pos:column="101">CultureInfo</name></name></type> <name pos:line="29" pos:column="113">culture</name></decl></param>)</parameter_list>
        <block pos:line="30" pos:column="9">{
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><name pos:line="31" pos:column="17">null</name> <op:operator pos:line="31" pos:column="22">!=</op:operator> <name pos:line="31" pos:column="25">value</name></expr>)</condition><then pos:line="31" pos:column="31">
            <block pos:line="32" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="33" pos:column="17">XElement</name></type> <name pos:line="33" pos:column="26">element</name> <init pos:line="33" pos:column="34">= <expr><name pos:line="33" pos:column="36">value</name> <op:operator pos:line="33" pos:column="42">as</op:operator> <name pos:line="33" pos:column="45">XElement</name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="34" pos:column="17">var</name></type> <name pos:line="34" pos:column="21">tb</name> <init pos:line="34" pos:column="24">= <expr><op:operator pos:line="34" pos:column="26">new</op:operator> <call><name pos:line="34" pos:column="30">TextBlock</name><argument_list pos:line="34" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><call><name><name pos:line="36" pos:column="17">tb</name><op:operator pos:line="36" pos:column="19">.</op:operator><name pos:line="36" pos:column="20">Inlines</name><op:operator pos:line="36" pos:column="27">.</op:operator><name pos:line="36" pos:column="28">Add</name></name><argument_list pos:line="36" pos:column="31">(<argument><expr><op:operator pos:line="36" pos:column="32">new</op:operator> <name pos:line="36" pos:column="36">Run</name> <block pos:line="36" pos:column="40">{ <expr><name pos:line="36" pos:column="42">Text</name> <op:operator pos:line="36" pos:column="47">=</op:operator> <name><name pos:line="36" pos:column="49">element</name><op:operator pos:line="36" pos:column="56">.</op:operator><name pos:line="36" pos:column="57">Name</name><op:operator pos:line="36" pos:column="61">.</op:operator><name pos:line="36" pos:column="62">LocalName</name></name> <op:operator pos:line="36" pos:column="72">+</op:operator> <lit:literal type="string" pos:line="36" pos:column="74">" "</lit:literal></expr><op:operator pos:line="36" pos:column="77">,</op:operator> <expr><name pos:line="36" pos:column="79">FontWeight</name> <op:operator pos:line="36" pos:column="90">=</op:operator> <name><name pos:line="36" pos:column="92">FontWeights</name><op:operator pos:line="36" pos:column="103">.</op:operator><name pos:line="36" pos:column="104">Bold</name></name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="37" pos:column="17">tb</name><op:operator pos:line="37" pos:column="19">.</op:operator><name pos:line="37" pos:column="20">Inlines</name><op:operator pos:line="37" pos:column="27">.</op:operator><name pos:line="37" pos:column="28">Add</name></name><argument_list pos:line="37" pos:column="31">(<argument><expr><op:operator pos:line="37" pos:column="32">new</op:operator> <name pos:line="37" pos:column="36">Run</name> <block pos:line="37" pos:column="40">{ <expr><name pos:line="37" pos:column="42">Text</name> <op:operator pos:line="37" pos:column="47">=</op:operator> <name><name pos:line="37" pos:column="49">element</name><op:operator pos:line="37" pos:column="56">.</op:operator><name pos:line="37" pos:column="57">Value</name></name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="38" pos:column="17">return <expr><name pos:line="38" pos:column="24">tb</name></expr>;</return>
                <comment type="line" pos:line="39" pos:column="17">//return String.Format("{0} : {1}", element.Name.LocalName, element.Value);</comment>
            }</block></then></if>
            <return pos:line="41" pos:column="13">return <expr><name><name pos:line="41" pos:column="20">String</name><op:operator pos:line="41" pos:column="26">.</op:operator><name pos:line="41" pos:column="27">Empty</name></name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="44" pos:column="9">public</specifier> <name pos:line="44" pos:column="16">object</name></type> <name pos:line="44" pos:column="23">ConvertBack</name><parameter_list pos:line="44" pos:column="34">(<param><decl><type><name pos:line="44" pos:column="35">object</name></type> <name pos:line="44" pos:column="42">value</name></decl></param>, <param><decl><type><name pos:line="44" pos:column="49">Type</name></type> <name pos:line="44" pos:column="54">targetType</name></decl></param>, <param><decl><type><name pos:line="44" pos:column="66">object</name></type> <name pos:line="44" pos:column="73">parameter</name></decl></param>, <param><decl><type><name><name pos:line="44" pos:column="84">System</name><op:operator pos:line="44" pos:column="90">.</op:operator><name pos:line="44" pos:column="91">Globalization</name><op:operator pos:line="44" pos:column="104">.</op:operator><name pos:line="44" pos:column="105">CultureInfo</name></name></type> <name pos:line="44" pos:column="117">culture</name></decl></param>)</parameter_list>
        <block pos:line="45" pos:column="9">{
            <throw pos:line="46" pos:column="13">throw <expr><op:operator pos:line="46" pos:column="19">new</op:operator> <call><name pos:line="46" pos:column="23">NotImplementedException</name><argument_list pos:line="46" pos:column="46">()</argument_list></call></expr>;</throw>
        }</block></function>

        <cpp:endregion pos:line="49" pos:column="9">#<cpp:directive pos:line="49" pos:column="10">endregion</cpp:directive></cpp:endregion>
    }</block></class>
}</block></namespace>
</unit>
