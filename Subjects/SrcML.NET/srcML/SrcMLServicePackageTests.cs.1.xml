<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\VisualStudio\ABB.SrcML.VisualStudio.SrcMLService.UnitTests\SrcMLServicePackageTests.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Text</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Reflection</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Microsoft</name><op:operator pos:line="5" pos:column="16">.</op:operator><name pos:line="5" pos:column="17">VsSDK</name><op:operator pos:line="5" pos:column="22">.</op:operator><name pos:line="5" pos:column="23">UnitTestLibrary</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Microsoft</name><op:operator pos:line="6" pos:column="16">.</op:operator><name pos:line="6" pos:column="17">VisualStudio</name><op:operator pos:line="6" pos:column="29">.</op:operator><name pos:line="6" pos:column="30">Shell</name><op:operator pos:line="6" pos:column="35">.</op:operator><name pos:line="6" pos:column="36">Interop</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Microsoft</name><op:operator pos:line="7" pos:column="16">.</op:operator><name pos:line="7" pos:column="17">VisualStudio</name><op:operator pos:line="7" pos:column="29">.</op:operator><name pos:line="7" pos:column="30">TestTools</name><op:operator pos:line="7" pos:column="39">.</op:operator><name pos:line="7" pos:column="40">UnitTesting</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">ABB</name><op:operator pos:line="8" pos:column="10">.</op:operator><name pos:line="8" pos:column="11">SrcML</name><op:operator pos:line="8" pos:column="16">.</op:operator><name pos:line="8" pos:column="17">VisualStudio</name><op:operator pos:line="8" pos:column="29">.</op:operator><name pos:line="8" pos:column="30">SrcMLService</name></name>;</using>

<comment type="line" pos:line="10" pos:column="1">// New added references</comment>
<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">EnvDTE</name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">Microsoft</name><op:operator pos:line="12" pos:column="16">.</op:operator><name pos:line="12" pos:column="17">VisualStudio</name><op:operator pos:line="12" pos:column="29">.</op:operator><name pos:line="12" pos:column="30">ComponentModelHost</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Microsoft</name><op:operator pos:line="13" pos:column="16">.</op:operator><name pos:line="13" pos:column="17">VSSDK</name><op:operator pos:line="13" pos:column="22">.</op:operator><name pos:line="13" pos:column="23">Tools</name><op:operator pos:line="13" pos:column="28">.</op:operator><name pos:line="13" pos:column="29">VsIdeTesting</name></name>;</using>

<namespace pos:line="15" pos:column="1">namespace <name><name pos:line="15" pos:column="11">ABB</name><op:operator pos:line="15" pos:column="14">.</op:operator><name pos:line="15" pos:column="15">SrcML</name><op:operator pos:line="15" pos:column="20">.</op:operator><name pos:line="15" pos:column="21">VisualStudio</name><op:operator pos:line="15" pos:column="33">.</op:operator><name pos:line="15" pos:column="34">SrcMLService</name><op:operator pos:line="15" pos:column="46">.</op:operator><name pos:line="15" pos:column="47">UnitTests</name></name> <block pos:line="15" pos:column="57">{
    <class><attribute pos:line="16" pos:column="5">[<expr><call><name pos:line="16" pos:column="6">TestClass</name><argument_list pos:line="16" pos:column="15">()</argument_list></call></expr>]</attribute>
    <specifier pos:line="17" pos:column="5">public</specifier> class <name pos:line="17" pos:column="18">SrcMLServicePackageTests</name> <block pos:line="17" pos:column="43">{
        <function><type><attribute pos:line="18" pos:column="9">[<expr><call><name pos:line="18" pos:column="10">TestMethod</name><argument_list pos:line="18" pos:column="20">()</argument_list></call></expr>]</attribute>
        <comment type="line" pos:line="19" pos:column="9">// TODO: remove?</comment>
        <specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">void</name></type> <name pos:line="20" pos:column="21">CreateInstance</name><parameter_list pos:line="20" pos:column="35">()</parameter_list> <block pos:line="20" pos:column="38">{
            <decl_stmt><decl><type><name pos:line="21" pos:column="13">SrcMLServicePackage</name></type> <name pos:line="21" pos:column="33">package</name> <init pos:line="21" pos:column="41">= <expr><op:operator pos:line="21" pos:column="43">new</op:operator> <call><name pos:line="21" pos:column="47">SrcMLServicePackage</name><argument_list pos:line="21" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
        }</block></function>

        <function><type><attribute pos:line="24" pos:column="9">[<expr><call><name pos:line="24" pos:column="10">TestMethod</name><argument_list pos:line="24" pos:column="20">()</argument_list></call></expr>]</attribute>
        <specifier pos:line="25" pos:column="9">public</specifier> <name pos:line="25" pos:column="16">void</name></type> <name pos:line="25" pos:column="21">IsIVsPackage</name><parameter_list pos:line="25" pos:column="33">()</parameter_list> <block pos:line="25" pos:column="36">{
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">SrcMLServicePackage</name></type> <name pos:line="26" pos:column="33">package</name> <init pos:line="26" pos:column="41">= <expr><op:operator pos:line="26" pos:column="43">new</op:operator> <call><name pos:line="26" pos:column="47">SrcMLServicePackage</name><argument_list pos:line="26" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">Assert</name><op:operator pos:line="27" pos:column="19">.</op:operator><name pos:line="27" pos:column="20">IsNotNull</name></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">package</name> <op:operator pos:line="27" pos:column="38">as</op:operator> <name pos:line="27" pos:column="41">IVsPackage</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="27" pos:column="53">"The object does not implement IVsPackage"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="30" pos:column="9">[<expr><call><name pos:line="30" pos:column="10">TestMethod</name><argument_list pos:line="30" pos:column="20">()</argument_list></call></expr>]</attribute>
        <specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">void</name></type> <name pos:line="31" pos:column="21">SetSite</name><parameter_list pos:line="31" pos:column="28">()</parameter_list> <block pos:line="31" pos:column="31">{
            <comment type="line" pos:line="32" pos:column="13">// Create the package</comment>
            <decl_stmt><decl><type><name pos:line="33" pos:column="13">IVsPackage</name></type> <name pos:line="33" pos:column="24">package</name> <init pos:line="33" pos:column="32">= <expr><op:operator pos:line="33" pos:column="34">new</op:operator> <call><name pos:line="33" pos:column="38">SrcMLServicePackage</name><argument_list pos:line="33" pos:column="57">()</argument_list></call> <op:operator pos:line="33" pos:column="60">as</op:operator> <name pos:line="33" pos:column="63">IVsPackage</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="34" pos:column="13">Assert</name><op:operator pos:line="34" pos:column="19">.</op:operator><name pos:line="34" pos:column="20">IsNotNull</name></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">package</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="34" pos:column="39">"The object does not implement IVsPackage"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="35" pos:column="13">// Create a basic service provider</comment>
            <decl_stmt><decl><type><name pos:line="36" pos:column="13">OleServiceProvider</name></type> <name pos:line="36" pos:column="32">serviceProvider</name> <init pos:line="36" pos:column="48">= <expr><call><name><name pos:line="36" pos:column="50">OleServiceProvider</name><op:operator pos:line="36" pos:column="68">.</op:operator><name pos:line="36" pos:column="69">CreateOleServiceProviderWithBasicServices</name></name><argument_list pos:line="36" pos:column="110">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="37" pos:column="13">// Site the package</comment>
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">Assert</name><op:operator pos:line="38" pos:column="19">.</op:operator><name pos:line="38" pos:column="20">AreEqual</name></name><argument_list pos:line="38" pos:column="28">(<argument><expr><lit:literal type="number" pos:line="38" pos:column="29">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="38" pos:column="32">package</name><op:operator pos:line="38" pos:column="39">.</op:operator><name pos:line="38" pos:column="40">SetSite</name></name><argument_list pos:line="38" pos:column="47">(<argument><expr><name pos:line="38" pos:column="48">serviceProvider</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="38" pos:column="66">"SetSite did not return S_OK"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="39" pos:column="13">// Unsite the package</comment>
            <expr_stmt><expr><call><name><name pos:line="40" pos:column="13">Assert</name><op:operator pos:line="40" pos:column="19">.</op:operator><name pos:line="40" pos:column="20">AreEqual</name></name><argument_list pos:line="40" pos:column="28">(<argument><expr><lit:literal type="number" pos:line="40" pos:column="29">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="40" pos:column="32">package</name><op:operator pos:line="40" pos:column="39">.</op:operator><name pos:line="40" pos:column="40">SetSite</name></name><argument_list pos:line="40" pos:column="47">(<argument><expr><name pos:line="40" pos:column="48">null</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="40" pos:column="55">"SetSite(null) did not return S_OK"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

<comment type="line" pos:line="43" pos:column="1">////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</comment>

        <function><type><attribute pos:line="45" pos:column="9">[<expr><call><name pos:line="45" pos:column="10">TestMethod</name><argument_list pos:line="45" pos:column="20">()</argument_list></call></expr>]</attribute>
        <specifier pos:line="46" pos:column="9">public</specifier> <name pos:line="46" pos:column="16">void</name></type> <name pos:line="46" pos:column="21">SetSiteSimple</name><parameter_list pos:line="46" pos:column="34">()</parameter_list> <block pos:line="46" pos:column="37">{
            <decl_stmt><decl><type><name pos:line="47" pos:column="13">SrcMLServicePackage</name></type> <name pos:line="47" pos:column="33">packageObject</name> <init pos:line="47" pos:column="47">= <expr><op:operator pos:line="47" pos:column="49">new</op:operator> <call><name pos:line="47" pos:column="53">SrcMLServicePackage</name><argument_list pos:line="47" pos:column="72">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="48" pos:column="13">IVsPackage</name></type> <name pos:line="48" pos:column="24">package</name> <init pos:line="48" pos:column="32">= <expr><op:operator pos:line="48" pos:column="34">(</op:operator><name pos:line="48" pos:column="35">IVsPackage</name><op:operator pos:line="48" pos:column="45">)</op:operator><name pos:line="48" pos:column="46">packageObject</name></expr></init></decl>;</decl_stmt>
            <using pos:line="49" pos:column="13">using(<decl><type><name pos:line="49" pos:column="19">OleServiceProvider</name></type> <name pos:line="49" pos:column="38">provider</name> <init pos:line="49" pos:column="47">= <expr><call><name><name pos:line="49" pos:column="49">OleServiceProvider</name><op:operator pos:line="49" pos:column="67">.</op:operator><name pos:line="49" pos:column="68">CreateOleServiceProviderWithBasicServices</name></name><argument_list pos:line="49" pos:column="109">()</argument_list></call></expr></init></decl>) <block pos:line="49" pos:column="113">{
                <decl_stmt><decl><type><name pos:line="50" pos:column="17">int</name></type> <name pos:line="50" pos:column="21">result</name> <init pos:line="50" pos:column="28">= <expr><call><name><name pos:line="50" pos:column="30">package</name><op:operator pos:line="50" pos:column="37">.</op:operator><name pos:line="50" pos:column="38">SetSite</name></name><argument_list pos:line="50" pos:column="45">(<argument><expr><name pos:line="50" pos:column="46">provider</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="51" pos:column="17">Assert</name><op:operator pos:line="51" pos:column="23">.</op:operator><name pos:line="51" pos:column="24">IsTrue</name></name><argument_list pos:line="51" pos:column="30">(<argument><expr><call><name><name pos:line="51" pos:column="31">Microsoft</name><op:operator pos:line="51" pos:column="40">.</op:operator><name pos:line="51" pos:column="41">VisualStudio</name><op:operator pos:line="51" pos:column="53">.</op:operator><name pos:line="51" pos:column="54">ErrorHandler</name><op:operator pos:line="51" pos:column="66">.</op:operator><name pos:line="51" pos:column="67">Succeeded</name></name><argument_list pos:line="51" pos:column="76">(<argument><expr><name pos:line="51" pos:column="77">result</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="51" pos:column="86">"SetSite failed."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></using>
            <expr_stmt><expr><call><name><name pos:line="53" pos:column="13">package</name><op:operator pos:line="53" pos:column="20">.</op:operator><name pos:line="53" pos:column="21">SetSite</name></name><argument_list pos:line="53" pos:column="28">(<argument><expr><name pos:line="53" pos:column="29">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="54" pos:column="13">package</name><op:operator pos:line="54" pos:column="20">.</op:operator><name pos:line="54" pos:column="21">Close</name></name><argument_list pos:line="54" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>


        <comment type="line" pos:line="58" pos:column="9">////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</comment>

        <function><type><attribute pos:line="60" pos:column="9">[<expr><call><name pos:line="60" pos:column="10">TestMethod</name><argument_list pos:line="60" pos:column="20">()</argument_list></call></expr>]</attribute>
        <specifier pos:line="61" pos:column="9">public</specifier> <name pos:line="61" pos:column="16">void</name></type> <name pos:line="61" pos:column="21">GetGlobalServiceSimple</name><parameter_list pos:line="61" pos:column="43">()</parameter_list> <block pos:line="61" pos:column="46">{
            <decl_stmt><decl><type><name pos:line="62" pos:column="13">SrcMLServicePackage</name></type> <name pos:line="62" pos:column="33">packageObject</name> <init pos:line="62" pos:column="47">= <expr><op:operator pos:line="62" pos:column="49">new</op:operator> <call><name pos:line="62" pos:column="53">SrcMLServicePackage</name><argument_list pos:line="62" pos:column="72">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="63" pos:column="13">IVsPackage</name></type> <name pos:line="63" pos:column="24">package</name> <init pos:line="63" pos:column="32">= <expr><op:operator pos:line="63" pos:column="34">(</op:operator><name pos:line="63" pos:column="35">IVsPackage</name><op:operator pos:line="63" pos:column="45">)</op:operator><name pos:line="63" pos:column="46">packageObject</name></expr></init></decl>;</decl_stmt>
            <using pos:line="64" pos:column="13">using(<decl><type><name pos:line="64" pos:column="19">OleServiceProvider</name></type> <name pos:line="64" pos:column="38">provider</name> <init pos:line="64" pos:column="47">= <expr><call><name><name pos:line="64" pos:column="49">OleServiceProvider</name><op:operator pos:line="64" pos:column="67">.</op:operator><name pos:line="64" pos:column="68">CreateOleServiceProviderWithBasicServices</name></name><argument_list pos:line="64" pos:column="109">()</argument_list></call></expr></init></decl>) <block pos:line="64" pos:column="113">{
                <decl_stmt><decl><type><name pos:line="65" pos:column="17">int</name></type> <name pos:line="65" pos:column="21">result</name> <init pos:line="65" pos:column="28">= <expr><call><name><name pos:line="65" pos:column="30">package</name><op:operator pos:line="65" pos:column="37">.</op:operator><name pos:line="65" pos:column="38">SetSite</name></name><argument_list pos:line="65" pos:column="45">(<argument><expr><name pos:line="65" pos:column="46">provider</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="66" pos:column="17">Assert</name><op:operator pos:line="66" pos:column="23">.</op:operator><name pos:line="66" pos:column="24">IsTrue</name></name><argument_list pos:line="66" pos:column="30">(<argument><expr><call><name><name pos:line="66" pos:column="31">Microsoft</name><op:operator pos:line="66" pos:column="40">.</op:operator><name pos:line="66" pos:column="41">VisualStudio</name><op:operator pos:line="66" pos:column="53">.</op:operator><name pos:line="66" pos:column="54">ErrorHandler</name><op:operator pos:line="66" pos:column="66">.</op:operator><name pos:line="66" pos:column="67">Succeeded</name></name><argument_list pos:line="66" pos:column="76">(<argument><expr><name pos:line="66" pos:column="77">result</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="66" pos:column="86">"SetSite failed."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="67" pos:column="17">IServiceProvider</name></type> <name pos:line="67" pos:column="34">serviceProvider</name> <init pos:line="67" pos:column="50">= <expr><name pos:line="67" pos:column="52">package</name> <op:operator pos:line="67" pos:column="60">as</op:operator> <name pos:line="67" pos:column="63">IServiceProvider</name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="68" pos:column="17">object</name></type> <name pos:line="68" pos:column="24">o</name> <init pos:line="68" pos:column="26">= <expr><call><name><name pos:line="68" pos:column="28">serviceProvider</name><op:operator pos:line="68" pos:column="43">.</op:operator><name pos:line="68" pos:column="44">GetService</name></name><argument_list pos:line="68" pos:column="54">(<argument><expr><call><name pos:line="68" pos:column="55">typeof</name><argument_list pos:line="68" pos:column="61">(<argument><expr><name pos:line="68" pos:column="62">SSrcMLGlobalService</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="69" pos:column="17">Assert</name><op:operator pos:line="69" pos:column="23">.</op:operator><name pos:line="69" pos:column="24">IsNotNull</name></name><argument_list pos:line="69" pos:column="33">(<argument><expr><name pos:line="69" pos:column="34">o</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="69" pos:column="37">"GetService returned null for the global service."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="70" pos:column="17">ISrcMLGlobalService</name></type> <name pos:line="70" pos:column="37">service</name> <init pos:line="70" pos:column="45">= <expr><name pos:line="70" pos:column="47">o</name> <op:operator pos:line="70" pos:column="49">as</op:operator> <name pos:line="70" pos:column="52">ISrcMLGlobalService</name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="71" pos:column="17">Assert</name><op:operator pos:line="71" pos:column="23">.</op:operator><name pos:line="71" pos:column="24">IsNotNull</name></name><argument_list pos:line="71" pos:column="33">(<argument><expr><name pos:line="71" pos:column="34">service</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="71" pos:column="43">"The service SSrcMLGlobalService does not implements ISrcMLGlobalService."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:line="73" pos:column="17">///////service.GlobalServiceFunction();</comment>

            }</block></using>
            <expr_stmt><expr><call><name><name pos:line="76" pos:column="13">package</name><op:operator pos:line="76" pos:column="20">.</op:operator><name pos:line="76" pos:column="21">SetSite</name></name><argument_list pos:line="76" pos:column="28">(<argument><expr><name pos:line="76" pos:column="29">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="77" pos:column="13">package</name><op:operator pos:line="77" pos:column="20">.</op:operator><name pos:line="77" pos:column="21">Close</name></name><argument_list pos:line="77" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="80" pos:column="9">////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</comment>
    }</block></class>
}</block></namespace>
</unit>
