<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\ABB.SrcML\SrcMLProject.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2014 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Vinay Augustine (ABB Group) - initial API, implementation, &amp; documentation
 *    Patrick Francis (ABB Group) - initial API, implementation, &amp; documentation
 *****************************************************************************/</comment>

<using pos:line="13" pos:column="1">using <name pos:line="13" pos:column="7">System</name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Collections</name><op:operator pos:line="14" pos:column="25">.</op:operator><name pos:line="14" pos:column="26">Generic</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">IO</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Linq</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">System</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Text</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">System</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">Threading</name><op:operator pos:line="18" pos:column="23">.</op:operator><name pos:line="18" pos:column="24">Tasks</name></name>;</using>

<namespace pos:line="20" pos:column="1">namespace <name><name pos:line="20" pos:column="11">ABB</name><op:operator pos:line="20" pos:column="14">.</op:operator><name pos:line="20" pos:column="15">SrcML</name></name> <block pos:line="20" pos:column="21">{
    <comment type="line" pos:line="21" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="22" pos:column="5">/// The SrcML Project object creates an &lt;see cref="AbstractFileMonitor"/&gt;, &lt;see cref="NonSourceArchive"/&gt;,  &lt;see cref="SourceArchive"/&gt; and wires them all up".</comment>
    <comment type="line" pos:line="23" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="24" pos:column="5">public</specifier> class <name pos:line="24" pos:column="18">SrcMLProject</name> <super pos:line="24" pos:column="31">: <name pos:line="24" pos:column="33">IDisposable</name></super> <block pos:line="24" pos:column="45">{
        <comment type="line" pos:line="25" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="26" pos:column="9">/// Creates a new project object</comment>
        <comment type="line" pos:line="27" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="28" pos:column="9">/// &lt;param name="baseDirectory"&gt;The directory to store the data in&lt;/param&gt;</comment>
        <comment type="line" pos:line="29" pos:column="9">/// &lt;param name="monitoredDirectory"&gt;The directory to monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="30" pos:column="9">/// &lt;param name="srcMLBinaryDirectory"&gt;The directory that contains &lt;c&gt;src2srcml.exe&lt;/c&gt;&lt;/param&gt;</comment>
        <constructor><specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">SrcMLProject</name><parameter_list pos:line="31" pos:column="28">(<param><decl><type><name pos:line="31" pos:column="29">string</name></type> <name pos:line="31" pos:column="36">baseDirectory</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="51">string</name></type> <name pos:line="31" pos:column="58">monitoredDirectory</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="78">string</name></type> <name pos:line="31" pos:column="85">srcMLBinaryDirectory</name></decl></param>)</parameter_list>
            <member_list pos:line="32" pos:column="13">: <call><name pos:line="32" pos:column="15">this</name><argument_list pos:line="32" pos:column="19">(<argument><expr><name><name pos:line="32" pos:column="20">TaskScheduler</name><op:operator pos:line="32" pos:column="33">.</op:operator><name pos:line="32" pos:column="34">Default</name></name></expr></argument>, <argument><expr><op:operator pos:line="32" pos:column="43">new</op:operator> <call><name pos:line="32" pos:column="47">FileSystemFolderMonitor</name><argument_list pos:line="32" pos:column="70">(<argument><expr><name pos:line="32" pos:column="71">monitoredDirectory</name></expr></argument>, <argument><expr><name pos:line="32" pos:column="91">baseDirectory</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="32" pos:column="107">new</op:operator> <call><name pos:line="32" pos:column="111">SrcMLGenerator</name><argument_list pos:line="32" pos:column="125">(<argument><expr><name pos:line="32" pos:column="126">srcMLBinaryDirectory</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> </member_list><block pos:line="32" pos:column="149">{ }</block></constructor>

        <comment type="line" pos:line="34" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="35" pos:column="9">/// Creates a new project object</comment>
        <comment type="line" pos:line="36" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="37" pos:column="9">/// &lt;param name="scheduler"&gt;The task scheduler&lt;/param&gt;</comment>
        <comment type="line" pos:line="38" pos:column="9">/// &lt;param name="monitor"&gt;The file monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="39" pos:column="9">///&lt;param name="generator"&gt;The SrcML generator to use&lt;/param&gt;</comment>
        <constructor><specifier pos:line="40" pos:column="9">public</specifier> <name pos:line="40" pos:column="16">SrcMLProject</name><parameter_list pos:line="40" pos:column="28">(<param><decl><type><name pos:line="40" pos:column="29">TaskScheduler</name></type> <name pos:line="40" pos:column="43">scheduler</name></decl></param>, <param><decl><type><name pos:line="40" pos:column="54">AbstractFileMonitor</name></type> <name pos:line="40" pos:column="74">monitor</name></decl></param>, <param><decl><type><name pos:line="40" pos:column="83">SrcMLGenerator</name></type> <name pos:line="40" pos:column="98">generator</name></decl></param>)</parameter_list> <block pos:line="40" pos:column="109">{
            <expr_stmt><expr><name pos:line="41" pos:column="13">Scheduler</name> <op:operator pos:line="41" pos:column="23">=</op:operator> <name pos:line="41" pos:column="25">scheduler</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="42" pos:column="13">Monitor</name> <op:operator pos:line="42" pos:column="21">=</op:operator> <name pos:line="42" pos:column="23">monitor</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">SetupMonitor</name><argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">generator</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="44" pos:column="13">SourceArchive</name><op:operator pos:line="44" pos:column="26">.</op:operator><name pos:line="44" pos:column="27">Generator</name><op:operator pos:line="44" pos:column="36">.</op:operator><name pos:line="44" pos:column="37">IsLoggingErrors</name></name> <op:operator pos:line="44" pos:column="53">=</op:operator> <lit:literal type="boolean" pos:line="44" pos:column="55">true</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="45" pos:column="13">SourceArchive</name><op:operator pos:line="45" pos:column="26">.</op:operator><name pos:line="45" pos:column="27">Generator</name><op:operator pos:line="45" pos:column="36">.</op:operator><name pos:line="45" pos:column="37">ErrorLog</name></name> <op:operator pos:line="45" pos:column="46">=</op:operator> <op:operator pos:line="45" pos:column="48">new</op:operator> <call><name pos:line="45" pos:column="52">StreamWriter</name><argument_list pos:line="45" pos:column="64">(<argument><expr><call><name><name pos:line="45" pos:column="65">Path</name><op:operator pos:line="45" pos:column="69">.</op:operator><name pos:line="45" pos:column="70">Combine</name></name><argument_list pos:line="45" pos:column="77">(<argument><expr><name pos:line="45" pos:column="78">StoragePath</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="45" pos:column="91">"error.log"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="45" pos:column="105">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="48" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="49" pos:column="9">/// The stream to write errors to. If null, no errors are written</comment>
        <comment type="line" pos:line="50" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="51" pos:column="9">public</specifier> <specifier pos:line="51" pos:column="16">virtual</specifier> <name pos:line="51" pos:column="24">TextWriter</name></type> <name pos:line="51" pos:column="35">ErrorLog</name> <block pos:line="51" pos:column="44">{
            <function><name pos:line="52" pos:column="13">get</name> <block pos:line="52" pos:column="17">{ <return pos:line="52" pos:column="19">return <expr><name><name pos:line="52" pos:column="26">SourceArchive</name><op:operator pos:line="52" pos:column="39">.</op:operator><name pos:line="52" pos:column="40">Generator</name><op:operator pos:line="52" pos:column="49">.</op:operator><name pos:line="52" pos:column="50">ErrorLog</name></name></expr>;</return> }</block></function>
            <function><name pos:line="53" pos:column="13">set</name> <block pos:line="53" pos:column="17">{ <expr_stmt><expr><name><name pos:line="53" pos:column="19">SourceArchive</name><op:operator pos:line="53" pos:column="32">.</op:operator><name pos:line="53" pos:column="33">Generator</name><op:operator pos:line="53" pos:column="42">.</op:operator><name pos:line="53" pos:column="43">ErrorLog</name></name> <op:operator pos:line="53" pos:column="52">=</op:operator> <name pos:line="53" pos:column="54">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="56" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="57" pos:column="9">/// Whether or not to log exceptions. If this is false, then exceptions will be thrown. If true, they will be caught and logged to &lt;see cref="ErrorLog"/&gt;.</comment>
        <comment type="line" pos:line="58" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="59" pos:column="9">public</specifier> <specifier pos:line="59" pos:column="16">virtual</specifier> <name pos:line="59" pos:column="24">bool</name></type> <name pos:line="59" pos:column="29">IsLoggingErrors</name> <block pos:line="59" pos:column="45">{
            <function><name pos:line="60" pos:column="13">get</name> <block pos:line="60" pos:column="17">{ <return pos:line="60" pos:column="19">return <expr><name><name pos:line="60" pos:column="26">SourceArchive</name><op:operator pos:line="60" pos:column="39">.</op:operator><name pos:line="60" pos:column="40">Generator</name><op:operator pos:line="60" pos:column="49">.</op:operator><name pos:line="60" pos:column="50">IsLoggingErrors</name></name></expr>;</return> }</block></function>
            <function><name pos:line="61" pos:column="13">set</name> <block pos:line="61" pos:column="17">{ <expr_stmt><expr><name><name pos:line="61" pos:column="19">SourceArchive</name><op:operator pos:line="61" pos:column="32">.</op:operator><name pos:line="61" pos:column="33">Generator</name><op:operator pos:line="61" pos:column="42">.</op:operator><name pos:line="61" pos:column="43">IsLoggingErrors</name></name> <op:operator pos:line="61" pos:column="59">=</op:operator> <name pos:line="61" pos:column="61">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="64" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="65" pos:column="9">/// The link between the project and the project files</comment>
        <comment type="line" pos:line="66" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="67" pos:column="9">public</specifier> <name pos:line="67" pos:column="16">AbstractFileMonitor</name></type> <name pos:line="67" pos:column="36">Monitor</name> <block pos:line="67" pos:column="44">{ <function_decl><name pos:line="67" pos:column="46">get</name>;</function_decl> <function_decl><specifier pos:line="67" pos:column="51">private</specifier> <name pos:line="67" pos:column="59">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="69" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="70" pos:column="9">/// The archive that stores non-source files</comment>
        <comment type="line" pos:line="71" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="72" pos:column="9">public</specifier> <name pos:line="72" pos:column="16">LastModifiedArchive</name></type> <name pos:line="72" pos:column="36">NonSourceArchive</name> <block pos:line="72" pos:column="53">{ <function_decl><name pos:line="72" pos:column="55">get</name>;</function_decl> <function_decl><specifier pos:line="72" pos:column="60">private</specifier> <name pos:line="72" pos:column="68">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="74" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="75" pos:column="9">/// The archive for srcML</comment>
        <comment type="line" pos:line="76" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="77" pos:column="9">public</specifier> <name pos:line="77" pos:column="16">SrcMLArchive</name></type> <name pos:line="77" pos:column="29">SourceArchive</name> <block pos:line="77" pos:column="43">{ <function_decl><name pos:line="77" pos:column="45">get</name>;</function_decl> <function_decl><specifier pos:line="77" pos:column="50">private</specifier> <name pos:line="77" pos:column="58">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="79" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="80" pos:column="9">/// The scheduler to use for this monitor</comment>
        <comment type="line" pos:line="81" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="82" pos:column="9">protected</specifier> <name pos:line="82" pos:column="19">TaskScheduler</name></type> <name pos:line="82" pos:column="33">Scheduler</name> <block pos:line="82" pos:column="43">{ <function_decl><name pos:line="82" pos:column="45">get</name>;</function_decl> <function_decl><specifier pos:line="82" pos:column="50">private</specifier> <name pos:line="82" pos:column="58">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="84" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="85" pos:column="9">/// The path to store all of the data for this project</comment>
        <comment type="line" pos:line="86" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="87" pos:column="9">public</specifier> <name pos:line="87" pos:column="16">string</name></type> <name pos:line="87" pos:column="23">StoragePath</name> <block pos:line="87" pos:column="35">{ <function><name pos:line="87" pos:column="37">get</name> <block pos:line="87" pos:column="41">{ <return pos:line="87" pos:column="43">return <expr><name><name pos:line="87" pos:column="50">Monitor</name><op:operator pos:line="87" pos:column="57">.</op:operator><name pos:line="87" pos:column="58">MonitorStoragePath</name></name></expr>;</return> }</block></function> }</block></decl></decl_stmt>

        <comment type="line" pos:line="89" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="90" pos:column="9">/// Wires all of the properties together</comment>
        <comment type="line" pos:line="91" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="92" pos:column="9">protected</specifier> <name pos:line="92" pos:column="19">void</name></type> <name pos:line="92" pos:column="24">SetupMonitor</name><parameter_list pos:line="92" pos:column="36">(<param><decl><type><name pos:line="92" pos:column="37">SrcMLGenerator</name></type> <name pos:line="92" pos:column="52">generator</name></decl></param>)</parameter_list> <block pos:line="92" pos:column="63">{
            <comment type="line" pos:line="93" pos:column="13">// setup the file monitor</comment>
            <expr_stmt><expr><name pos:line="94" pos:column="13">NonSourceArchive</name> <op:operator pos:line="94" pos:column="30">=</op:operator> <op:operator pos:line="94" pos:column="32">new</op:operator> <call><name pos:line="94" pos:column="36">LastModifiedArchive</name><argument_list pos:line="94" pos:column="55">(<argument><expr><name pos:line="94" pos:column="56">StoragePath</name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="69">LastModifiedArchive</name><op:operator pos:line="94" pos:column="88">.</op:operator><name pos:line="94" pos:column="89">DEFAULT_FILENAME</name></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="107">Scheduler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="95" pos:column="13">var</name></type> <name pos:line="95" pos:column="17">archiveDirectory</name> <init pos:line="95" pos:column="34">= <expr><call><name><name pos:line="95" pos:column="36">Path</name><op:operator pos:line="95" pos:column="40">.</op:operator><name pos:line="95" pos:column="41">Combine</name></name><argument_list pos:line="95" pos:column="48">(<argument><expr><name pos:line="95" pos:column="49">StoragePath</name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="62">SrcMLArchive</name><op:operator pos:line="95" pos:column="74">.</op:operator><name pos:line="95" pos:column="75">DEFAULT_ARCHIVE_DIRECTORY</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name pos:line="96" pos:column="13">SourceArchive</name> <op:operator pos:line="96" pos:column="27">=</op:operator> <op:operator pos:line="96" pos:column="29">new</op:operator> <call><name pos:line="96" pos:column="33">SrcMLArchive</name><argument_list pos:line="96" pos:column="45">(<argument><expr><name pos:line="96" pos:column="46">StoragePath</name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="59">SrcMLArchive</name><op:operator pos:line="96" pos:column="71">.</op:operator><name pos:line="96" pos:column="72">DEFAULT_ARCHIVE_DIRECTORY</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="96" pos:column="99">true</lit:literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="105">generator</name></expr></argument>, <argument><expr><op:operator pos:line="96" pos:column="116">new</op:operator> <call><name pos:line="96" pos:column="120">SrcMLFileNameMapping</name><argument_list pos:line="96" pos:column="140">(<argument><expr><name pos:line="96" pos:column="141">archiveDirectory</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="96" pos:column="160">Scheduler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="97" pos:column="13">Monitor</name><op:operator pos:line="97" pos:column="20">.</op:operator><name pos:line="97" pos:column="21">RegisterArchive</name></name><argument_list pos:line="97" pos:column="36">(<argument><expr><name pos:line="97" pos:column="37">NonSourceArchive</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="97" pos:column="55">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="98" pos:column="13">Monitor</name><op:operator pos:line="98" pos:column="20">.</op:operator><name pos:line="98" pos:column="21">RegisterArchive</name></name><argument_list pos:line="98" pos:column="36">(<argument><expr><name pos:line="98" pos:column="37">SourceArchive</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="98" pos:column="52">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="101" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="102" pos:column="9">/// Updates the archives based on &lt;see cref="Monitor"/&gt;</comment>
        <comment type="line" pos:line="103" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="104" pos:column="9">public</specifier> <specifier pos:line="104" pos:column="16">virtual</specifier> <name pos:line="104" pos:column="24">void</name></type> <name pos:line="104" pos:column="29">Update</name><parameter_list pos:line="104" pos:column="35">()</parameter_list> <block pos:line="104" pos:column="38">{
            <expr_stmt><expr><call><name><name pos:line="105" pos:column="13">Monitor</name><op:operator pos:line="105" pos:column="20">.</op:operator><name pos:line="105" pos:column="21">UpdateArchives</name></name><argument_list pos:line="105" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="108" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="109" pos:column="9">/// Updates the archives asynchronously</comment>
        <comment type="line" pos:line="110" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="111" pos:column="9">/// &lt;returns&gt;The update task&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="112" pos:column="9">public</specifier> <specifier pos:line="112" pos:column="16">virtual</specifier> <name pos:line="112" pos:column="24">Task</name></type> <name pos:line="112" pos:column="29">UpdateAsync</name><parameter_list pos:line="112" pos:column="40">()</parameter_list> <block pos:line="112" pos:column="43">{
            <return pos:line="113" pos:column="13">return <expr><call><name><name pos:line="113" pos:column="20">Monitor</name><op:operator pos:line="113" pos:column="27">.</op:operator><name pos:line="113" pos:column="28">UpdateArchivesAsync</name></name><argument_list pos:line="113" pos:column="47">()</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="116" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="117" pos:column="9">/// Starts monitoring</comment>
        <comment type="line" pos:line="118" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="119" pos:column="9">public</specifier> <specifier pos:line="119" pos:column="16">virtual</specifier> <name pos:line="119" pos:column="24">void</name></type> <name pos:line="119" pos:column="29">StartMonitoring</name><parameter_list pos:line="119" pos:column="44">()</parameter_list> <block pos:line="119" pos:column="47">{
            <expr_stmt><expr><call><name><name pos:line="120" pos:column="13">Monitor</name><op:operator pos:line="120" pos:column="20">.</op:operator><name pos:line="120" pos:column="21">StartMonitoring</name></name><argument_list pos:line="120" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="123" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="124" pos:column="9">/// Stops monitoring</comment>
        <comment type="line" pos:line="125" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="126" pos:column="9">public</specifier> <specifier pos:line="126" pos:column="16">virtual</specifier> <name pos:line="126" pos:column="24">void</name></type> <name pos:line="126" pos:column="29">StopMonitoring</name><parameter_list pos:line="126" pos:column="43">()</parameter_list> <block pos:line="126" pos:column="46">{
            <expr_stmt><expr><call><name><name pos:line="127" pos:column="13">Monitor</name><op:operator pos:line="127" pos:column="20">.</op:operator><name pos:line="127" pos:column="21">StopMonitoring</name></name><argument_list pos:line="127" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>
        
        <comment type="line" pos:line="130" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="131" pos:column="9">/// Dispose of this SrcML Project object</comment>
        <comment type="line" pos:line="132" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="133" pos:column="9">public</specifier> <name pos:line="133" pos:column="16">void</name></type> <name pos:line="133" pos:column="21">Dispose</name><parameter_list pos:line="133" pos:column="28">()</parameter_list> <block pos:line="133" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="134" pos:column="13">StopMonitoring</name><argument_list pos:line="134" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="135" pos:column="13">SourceArchive</name><op:operator pos:line="135" pos:column="26">.</op:operator><name pos:line="135" pos:column="27">Save</name></name><argument_list pos:line="135" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="136" pos:column="13">NonSourceArchive</name><op:operator pos:line="136" pos:column="29">.</op:operator><name pos:line="136" pos:column="30">Save</name></name><argument_list pos:line="136" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
            <if pos:line="137" pos:column="13">if<condition pos:line="137" pos:column="15">(<expr><name pos:line="137" pos:column="16">null</name> <op:operator pos:line="137" pos:column="21">!=</op:operator> <name><name pos:line="137" pos:column="24">SourceArchive</name><op:operator pos:line="137" pos:column="37">.</op:operator><name pos:line="137" pos:column="38">Generator</name><op:operator pos:line="137" pos:column="47">.</op:operator><name pos:line="137" pos:column="48">ErrorLog</name></name></expr>)</condition><then pos:line="137" pos:column="57"> <block pos:line="137" pos:column="58">{
                <expr_stmt><expr><call><name><name pos:line="138" pos:column="17">SourceArchive</name><op:operator pos:line="138" pos:column="30">.</op:operator><name pos:line="138" pos:column="31">Generator</name><op:operator pos:line="138" pos:column="40">.</op:operator><name pos:line="138" pos:column="41">ErrorLog</name><op:operator pos:line="138" pos:column="49">.</op:operator><name pos:line="138" pos:column="50">Dispose</name></name><argument_list pos:line="138" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="140" pos:column="13">Monitor</name><op:operator pos:line="140" pos:column="20">.</op:operator><name pos:line="140" pos:column="21">Dispose</name></name><argument_list pos:line="140" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
