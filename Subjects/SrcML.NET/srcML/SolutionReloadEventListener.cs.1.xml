<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\VisualStudio\ABB.SrcML.VisualStudio.SrcMLService\SolutionReloadEventListener.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2013 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Jiang Zheng (ABB Group) - Initial implementation
 *****************************************************************************/</comment>
<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">System</name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">System</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">Collections</name><op:operator pos:line="12" pos:column="25">.</op:operator><name pos:line="12" pos:column="26">Generic</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Linq</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Text</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">Microsoft</name><op:operator pos:line="15" pos:column="16">.</op:operator><name pos:line="15" pos:column="17">VisualStudio</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">Microsoft</name><op:operator pos:line="16" pos:column="16">.</op:operator><name pos:line="16" pos:column="17">VisualStudio</name><op:operator pos:line="16" pos:column="29">.</op:operator><name pos:line="16" pos:column="30">Shell</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">Microsoft</name><op:operator pos:line="17" pos:column="16">.</op:operator><name pos:line="17" pos:column="17">VisualStudio</name><op:operator pos:line="17" pos:column="29">.</op:operator><name pos:line="17" pos:column="30">Shell</name><op:operator pos:line="17" pos:column="35">.</op:operator><name pos:line="17" pos:column="36">Interop</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">ABB</name><op:operator pos:line="18" pos:column="10">.</op:operator><name pos:line="18" pos:column="11">SrcML</name><op:operator pos:line="18" pos:column="16">.</op:operator><name pos:line="18" pos:column="17">Utilities</name></name>;</using>
<using pos:line="19" pos:column="1">using <name pos:line="19" pos:column="7">log4net</name>;</using>

<namespace pos:line="21" pos:column="1">namespace <name><name pos:line="21" pos:column="11">ABB</name><op:operator pos:line="21" pos:column="14">.</op:operator><name pos:line="21" pos:column="15">SrcML</name><op:operator pos:line="21" pos:column="20">.</op:operator><name pos:line="21" pos:column="21">VisualStudio</name></name> <block pos:line="21" pos:column="34">{
    <comment type="line" pos:line="22" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="23" pos:column="5">/// Adapted from https://github.com/shanselman/RestoreAfterReloadVSIX</comment>
    <comment type="line" pos:line="24" pos:column="5">/// IVsSolutionEvents: Listening interface that monitors any notifications of changes to the solution.</comment>
    <comment type="line" pos:line="25" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="26" pos:column="5">public</specifier> class <name pos:line="26" pos:column="18">SolutionChangeEventListener</name> <super pos:line="26" pos:column="46">: <name pos:line="26" pos:column="48">IVsSolutionEvents</name></super> <block pos:line="26" pos:column="66">{
        <comment type="line" pos:line="27" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="28" pos:column="9">/// IVsSolution: Provides top-level manipulation or maintenance of the solution.</comment>
        <comment type="line" pos:line="29" pos:column="9">/// solutionEventsCookie is used in registering/unregistering events.</comment>
        <comment type="line" pos:line="30" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="31" pos:column="9">private</specifier> <name pos:line="31" pos:column="17">IVsSolution</name></type> <name pos:line="31" pos:column="29">solution</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="32" pos:column="9">private</specifier> <name pos:line="32" pos:column="17">uint</name></type> <name pos:line="32" pos:column="22">solutionEventsCookie</name></decl>;</decl_stmt>

        <comment type="line" pos:line="34" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="35" pos:column="9">/// TODO</comment>
        <comment type="line" pos:line="36" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="37" pos:column="9">public</specifier> <specifier pos:line="37" pos:column="16">event</specifier> <name pos:line="37" pos:column="22">Action</name></type> <name pos:line="37" pos:column="29">OnQueryUnloadProject</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="38" pos:column="9">public</specifier> <specifier pos:line="38" pos:column="16">event</specifier> <name pos:line="38" pos:column="22">Action</name></type> <name pos:line="38" pos:column="29">OnAfterOpenProject</name></decl>;</decl_stmt>

        <comment type="line" pos:line="40" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="41" pos:column="9">/// Constructor.</comment>
        <comment type="line" pos:line="42" pos:column="9">/// Register Solution events.</comment>
        <comment type="line" pos:line="43" pos:column="9">/// &lt;/summary&gt;</comment>
        <constructor><specifier pos:line="44" pos:column="9">public</specifier> <name pos:line="44" pos:column="16">SolutionChangeEventListener</name><parameter_list pos:line="44" pos:column="43">()</parameter_list> <block pos:line="44" pos:column="46">{
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">InitNullEvents</name><argument_list pos:line="45" pos:column="27">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="47" pos:column="13">solution</name> <op:operator pos:line="47" pos:column="22">=</op:operator> <call><name><name pos:line="47" pos:column="24">Package</name><op:operator pos:line="47" pos:column="31">.</op:operator><name pos:line="47" pos:column="32">GetGlobalService</name></name><argument_list pos:line="47" pos:column="48">(<argument><expr><call><name pos:line="47" pos:column="49">typeof</name><argument_list pos:line="47" pos:column="55">(<argument><expr><name pos:line="47" pos:column="56">SVsSolution</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="47" pos:column="70">as</op:operator> <name pos:line="47" pos:column="73">IVsSolution</name></expr>;</expr_stmt>
            <if pos:line="48" pos:column="13">if<condition pos:line="48" pos:column="15">(<expr><name pos:line="48" pos:column="16">solution</name> <op:operator pos:line="48" pos:column="25">!=</op:operator> <name pos:line="48" pos:column="28">null</name></expr>)</condition><then pos:line="48" pos:column="33"> <block pos:line="48" pos:column="34">{
                <expr_stmt><expr><call><name><name pos:line="49" pos:column="17">solution</name><op:operator pos:line="49" pos:column="25">.</op:operator><name pos:line="49" pos:column="26">AdviseSolutionEvents</name></name><argument_list pos:line="49" pos:column="46">(<argument><expr><name pos:line="49" pos:column="47">this</name></expr></argument>, <argument><expr pos:line="49" pos:column="53">out <name pos:line="49" pos:column="57">solutionEventsCookie</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></constructor>

        <comment type="line" pos:line="53" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="54" pos:column="9">/// Initialize null events.</comment>
        <comment type="line" pos:line="55" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="56" pos:column="9">private</specifier> <name pos:line="56" pos:column="17">void</name></type> <name pos:line="56" pos:column="22">InitNullEvents</name><parameter_list pos:line="56" pos:column="36">()</parameter_list> <block pos:line="56" pos:column="39">{
            <expr_stmt><expr><name pos:line="57" pos:column="13">OnQueryUnloadProject</name> <op:operator pos:line="57" pos:column="34">+=</op:operator> <lambda><parameter_list pos:line="57" pos:column="37">()</parameter_list> <op:operator pos:line="57" pos:column="40">=&gt;</op:operator> <block pos:line="57" pos:column="43">{ }</block></lambda></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="59" pos:column="13">OnAfterOpenProject</name> <op:operator pos:line="59" pos:column="32">+=</op:operator> <lambda><parameter_list pos:line="59" pos:column="35">()</parameter_list> <op:operator pos:line="59" pos:column="38">=&gt;</op:operator> <block pos:line="59" pos:column="41">{ }</block></lambda></expr>;</expr_stmt>
        }</block></function>

        <cpp:region pos:line="62" pos:column="9">#<cpp:directive pos:line="62" pos:column="10">region</cpp:directive> IVsSolutionEvents Members</cpp:region>
        <comment type="line" pos:line="63" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="64" pos:column="9">/// Notifies listening clients that a solution has been closed.</comment>
        <comment type="line" pos:line="65" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="66" pos:column="9">/// &lt;param name="pUnkReserved"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="67" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="68" pos:column="9">int</name></type> <name><name pos:line="68" pos:column="13">IVsSolutionEvents</name><op:operator pos:line="68" pos:column="30">.</op:operator><name pos:line="68" pos:column="31">OnAfterCloseSolution</name></name><parameter_list pos:line="68" pos:column="51">(<param><decl><type><name pos:line="68" pos:column="52">object</name></type> <name pos:line="68" pos:column="59">pUnkReserved</name></decl></param>)</parameter_list> <block pos:line="68" pos:column="73">{
            <comment type="line" pos:line="69" pos:column="13">////SrcMLFileLogger.DefaultLogger.Info("=======&gt; Triggered IVsSolutionEvents.OnAfterCloseSolution()");</comment>
            <return pos:line="70" pos:column="13">return <expr><name><name pos:line="70" pos:column="20">VSConstants</name><op:operator pos:line="70" pos:column="31">.</op:operator><name pos:line="70" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="73" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="74" pos:column="9">/// Notifies listening clients that the project has been loaded.</comment>
        <comment type="line" pos:line="75" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="76" pos:column="9">/// &lt;param name="pStubHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="77" pos:column="9">/// &lt;param name="pRealHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="78" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="79" pos:column="9">int</name></type> <name><name pos:line="79" pos:column="13">IVsSolutionEvents</name><op:operator pos:line="79" pos:column="30">.</op:operator><name pos:line="79" pos:column="31">OnAfterLoadProject</name></name><parameter_list pos:line="79" pos:column="49">(<param><decl><type><name pos:line="79" pos:column="50">IVsHierarchy</name></type> <name pos:line="79" pos:column="63">pStubHierarchy</name></decl></param>, <param><decl><type><name pos:line="79" pos:column="79">IVsHierarchy</name></type> <name pos:line="79" pos:column="92">pRealHierarchy</name></decl></param>)</parameter_list> <block pos:line="79" pos:column="108">{
            <comment type="line" pos:line="80" pos:column="13">////SrcMLFileLogger.DefaultLogger.Info("=======&gt; Triggered IVsSolutionEvents.OnAfterLoadProject()");</comment>
            <return pos:line="81" pos:column="13">return <expr><name><name pos:line="81" pos:column="20">VSConstants</name><op:operator pos:line="81" pos:column="31">.</op:operator><name pos:line="81" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="84" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="85" pos:column="9">/// Notifies listening clients that the project has been opened.</comment>
        <comment type="line" pos:line="86" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="87" pos:column="9">/// &lt;param name="pHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="88" pos:column="9">/// &lt;param name="fAdded"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="89" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="90" pos:column="9">int</name></type> <name><name pos:line="90" pos:column="13">IVsSolutionEvents</name><op:operator pos:line="90" pos:column="30">.</op:operator><name pos:line="90" pos:column="31">OnAfterOpenProject</name></name><parameter_list pos:line="90" pos:column="49">(<param><decl><type><name pos:line="90" pos:column="50">IVsHierarchy</name></type> <name pos:line="90" pos:column="63">pHierarchy</name></decl></param>, <param><decl><type><name pos:line="90" pos:column="75">int</name></type> <name pos:line="90" pos:column="79">fAdded</name></decl></param>)</parameter_list> <block pos:line="90" pos:column="87">{
            <comment type="line" pos:line="91" pos:column="13">////SrcMLFileLogger.DefaultLogger.Info("=======&gt; Triggered IVsSolutionEvents.OnAfterOpenProject()");</comment>
            <expr_stmt><expr><call><name pos:line="92" pos:column="13">OnAfterOpenProject</name><argument_list pos:line="92" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="93" pos:column="13">return <expr><name><name pos:line="93" pos:column="20">VSConstants</name><op:operator pos:line="93" pos:column="31">.</op:operator><name pos:line="93" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="96" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="97" pos:column="9">/// Notifies listening clients that the solution has been opened.</comment>
        <comment type="line" pos:line="98" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="99" pos:column="9">/// &lt;param name="pUnkReserved"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="100" pos:column="9">/// &lt;param name="fNewSolution"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="101" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="102" pos:column="9">int</name></type> <name><name pos:line="102" pos:column="13">IVsSolutionEvents</name><op:operator pos:line="102" pos:column="30">.</op:operator><name pos:line="102" pos:column="31">OnAfterOpenSolution</name></name><parameter_list pos:line="102" pos:column="50">(<param><decl><type><name pos:line="102" pos:column="51">object</name></type> <name pos:line="102" pos:column="58">pUnkReserved</name></decl></param>, <param><decl><type><name pos:line="102" pos:column="72">int</name></type> <name pos:line="102" pos:column="76">fNewSolution</name></decl></param>)</parameter_list> <block pos:line="102" pos:column="90">{
            <comment type="line" pos:line="103" pos:column="13">////SrcMLFileLogger.DefaultLogger.Info("=======&gt; Triggered IVsSolutionEvents.OnAfterOpenSolution()");</comment>
            <return pos:line="104" pos:column="13">return <expr><name><name pos:line="104" pos:column="20">VSConstants</name><op:operator pos:line="104" pos:column="31">.</op:operator><name pos:line="104" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="107" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="108" pos:column="9">/// Notifies listening clients that the project is about to be closed.</comment>
        <comment type="line" pos:line="109" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="110" pos:column="9">/// &lt;param name="pHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="111" pos:column="9">/// &lt;param name="fRemoved"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="112" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="113" pos:column="9">int</name></type> <name><name pos:line="113" pos:column="13">IVsSolutionEvents</name><op:operator pos:line="113" pos:column="30">.</op:operator><name pos:line="113" pos:column="31">OnBeforeCloseProject</name></name><parameter_list pos:line="113" pos:column="51">(<param><decl><type><name pos:line="113" pos:column="52">IVsHierarchy</name></type> <name pos:line="113" pos:column="65">pHierarchy</name></decl></param>, <param><decl><type><name pos:line="113" pos:column="77">int</name></type> <name pos:line="113" pos:column="81">fRemoved</name></decl></param>)</parameter_list> <block pos:line="113" pos:column="91">{
            <comment type="line" pos:line="114" pos:column="13">////SrcMLFileLogger.DefaultLogger.Info("=======&gt; Triggered IVsSolutionEvents.OnBeforeCloseProject()");</comment>
            <return pos:line="115" pos:column="13">return <expr><name><name pos:line="115" pos:column="20">VSConstants</name><op:operator pos:line="115" pos:column="31">.</op:operator><name pos:line="115" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="118" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="119" pos:column="9">/// Notifies listening clients that the solution is about to be closed.</comment>
        <comment type="line" pos:line="120" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="121" pos:column="9">/// &lt;param name="pUnkReserved"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="122" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="123" pos:column="9">int</name></type> <name><name pos:line="123" pos:column="13">IVsSolutionEvents</name><op:operator pos:line="123" pos:column="30">.</op:operator><name pos:line="123" pos:column="31">OnBeforeCloseSolution</name></name><parameter_list pos:line="123" pos:column="52">(<param><decl><type><name pos:line="123" pos:column="53">object</name></type> <name pos:line="123" pos:column="60">pUnkReserved</name></decl></param>)</parameter_list> <block pos:line="123" pos:column="74">{
            <comment type="line" pos:line="124" pos:column="13">////SrcMLFileLogger.DefaultLogger.Info("=======&gt; Triggered IVsSolutionEvents.OnBeforeCloseSolution()");</comment>
            <return pos:line="125" pos:column="13">return <expr><name><name pos:line="125" pos:column="20">VSConstants</name><op:operator pos:line="125" pos:column="31">.</op:operator><name pos:line="125" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="128" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="129" pos:column="9">/// Notifies listening clients that the project is about to be unloaded.</comment>
        <comment type="line" pos:line="130" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="131" pos:column="9">/// &lt;param name="pRealHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="132" pos:column="9">/// &lt;param name="pStubHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="133" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="134" pos:column="9">int</name></type> <name><name pos:line="134" pos:column="13">IVsSolutionEvents</name><op:operator pos:line="134" pos:column="30">.</op:operator><name pos:line="134" pos:column="31">OnBeforeUnloadProject</name></name><parameter_list pos:line="134" pos:column="52">(<param><decl><type><name pos:line="134" pos:column="53">IVsHierarchy</name></type> <name pos:line="134" pos:column="66">pRealHierarchy</name></decl></param>, <param><decl><type><name pos:line="134" pos:column="82">IVsHierarchy</name></type> <name pos:line="134" pos:column="95">pStubHierarchy</name></decl></param>)</parameter_list> <block pos:line="134" pos:column="111">{
            <comment type="line" pos:line="135" pos:column="13">////SrcMLFileLogger.DefaultLogger.Info("=======&gt; Triggered IVsSolutionEvents.OnBeforeUnloadProject()");</comment>
            <return pos:line="136" pos:column="13">return <expr><name><name pos:line="136" pos:column="20">VSConstants</name><op:operator pos:line="136" pos:column="31">.</op:operator><name pos:line="136" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="139" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="140" pos:column="9">/// Queries listening clients as to whether the project can be closed.</comment>
        <comment type="line" pos:line="141" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="142" pos:column="9">/// &lt;param name="pHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="143" pos:column="9">/// &lt;param name="fRemoving"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="144" pos:column="9">/// &lt;param name="pfCancel"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="145" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="146" pos:column="9">int</name></type> <name><name pos:line="146" pos:column="13">IVsSolutionEvents</name><op:operator pos:line="146" pos:column="30">.</op:operator><name pos:line="146" pos:column="31">OnQueryCloseProject</name></name><parameter_list pos:line="146" pos:column="50">(<param><decl><type><name pos:line="146" pos:column="51">IVsHierarchy</name></type> <name pos:line="146" pos:column="64">pHierarchy</name></decl></param>, <param><decl><type><name pos:line="146" pos:column="76">int</name></type> <name pos:line="146" pos:column="80">fRemoving</name></decl></param>, <param><decl><type><specifier pos:line="146" pos:column="91">ref</specifier> <name pos:line="146" pos:column="95">int</name></type> <name pos:line="146" pos:column="99">pfCancel</name></decl></param>)</parameter_list> <block pos:line="146" pos:column="109">{
            <expr_stmt><expr><call><name><name pos:line="147" pos:column="13">SrcMLFileLogger</name><op:operator pos:line="147" pos:column="28">.</op:operator><name pos:line="147" pos:column="29">DefaultLogger</name><op:operator pos:line="147" pos:column="42">.</op:operator><name pos:line="147" pos:column="43">Info</name></name><argument_list pos:line="147" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="147" pos:column="48">"=======&gt; Triggered IVsSolutionEvents.OnQueryCloseProject()"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="148" pos:column="13">return <expr><name><name pos:line="148" pos:column="20">VSConstants</name><op:operator pos:line="148" pos:column="31">.</op:operator><name pos:line="148" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="151" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="152" pos:column="9">/// Queries listening clients as to whether the solution can be closed.</comment>
        <comment type="line" pos:line="153" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="154" pos:column="9">/// &lt;param name="pUnkReserved"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="155" pos:column="9">/// &lt;param name="pfCancel"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="156" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="157" pos:column="9">int</name></type> <name><name pos:line="157" pos:column="13">IVsSolutionEvents</name><op:operator pos:line="157" pos:column="30">.</op:operator><name pos:line="157" pos:column="31">OnQueryCloseSolution</name></name><parameter_list pos:line="157" pos:column="51">(<param><decl><type><name pos:line="157" pos:column="52">object</name></type> <name pos:line="157" pos:column="59">pUnkReserved</name></decl></param>, <param><decl><type><specifier pos:line="157" pos:column="73">ref</specifier> <name pos:line="157" pos:column="77">int</name></type> <name pos:line="157" pos:column="81">pfCancel</name></decl></param>)</parameter_list> <block pos:line="157" pos:column="91">{
            <expr_stmt><expr><call><name><name pos:line="158" pos:column="13">SrcMLFileLogger</name><op:operator pos:line="158" pos:column="28">.</op:operator><name pos:line="158" pos:column="29">DefaultLogger</name><op:operator pos:line="158" pos:column="42">.</op:operator><name pos:line="158" pos:column="43">Info</name></name><argument_list pos:line="158" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="158" pos:column="48">"=======&gt; Triggered IVsSolutionEvents.OnQueryCloseSolution()"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="159" pos:column="13">return <expr><name><name pos:line="159" pos:column="20">VSConstants</name><op:operator pos:line="159" pos:column="31">.</op:operator><name pos:line="159" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="162" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="163" pos:column="9">/// Queries listening clients as to whether the project can be unloaded.</comment>
        <comment type="line" pos:line="164" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="165" pos:column="9">/// &lt;param name="pRealHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="166" pos:column="9">/// &lt;param name="pfCancel"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="167" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="168" pos:column="9">int</name></type> <name><name pos:line="168" pos:column="13">IVsSolutionEvents</name><op:operator pos:line="168" pos:column="30">.</op:operator><name pos:line="168" pos:column="31">OnQueryUnloadProject</name></name><parameter_list pos:line="168" pos:column="51">(<param><decl><type><name pos:line="168" pos:column="52">IVsHierarchy</name></type> <name pos:line="168" pos:column="65">pRealHierarchy</name></decl></param>, <param><decl><type><specifier pos:line="168" pos:column="81">ref</specifier> <name pos:line="168" pos:column="85">int</name></type> <name pos:line="168" pos:column="89">pfCancel</name></decl></param>)</parameter_list> <block pos:line="168" pos:column="99">{
            <expr_stmt><expr><call><name><name pos:line="169" pos:column="13">SrcMLFileLogger</name><op:operator pos:line="169" pos:column="28">.</op:operator><name pos:line="169" pos:column="29">DefaultLogger</name><op:operator pos:line="169" pos:column="42">.</op:operator><name pos:line="169" pos:column="43">Info</name></name><argument_list pos:line="169" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="169" pos:column="48">"=======&gt; Triggered IVsSolutionEvents.OnQueryUnloadProject()"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="170" pos:column="13">OnQueryUnloadProject</name><argument_list pos:line="170" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="171" pos:column="13">return <expr><name><name pos:line="171" pos:column="20">VSConstants</name><op:operator pos:line="171" pos:column="31">.</op:operator><name pos:line="171" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>
        <cpp:endregion pos:line="173" pos:column="9">#<cpp:directive pos:line="173" pos:column="10">endregion</cpp:directive></cpp:endregion>

        <cpp:region pos:line="175" pos:column="9">#<cpp:directive pos:line="175" pos:column="10">region</cpp:directive> IDisposable Members</cpp:region>
        <comment type="line" pos:line="176" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="177" pos:column="9">/// Dispose.</comment>
        <comment type="line" pos:line="178" pos:column="9">/// Unregister Solution events.</comment>
        <comment type="line" pos:line="179" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="180" pos:column="9">public</specifier> <name pos:line="180" pos:column="16">void</name></type> <name pos:line="180" pos:column="21">Dispose</name><parameter_list pos:line="180" pos:column="28">()</parameter_list> <block pos:line="180" pos:column="31">{
            <if pos:line="181" pos:column="13">if<condition pos:line="181" pos:column="15">(<expr><name pos:line="181" pos:column="16">solution</name> <op:operator pos:line="181" pos:column="25">!=</op:operator> <name pos:line="181" pos:column="28">null</name> <op:operator pos:line="181" pos:column="33">&amp;&amp;</op:operator> <name pos:line="181" pos:column="36">solutionEventsCookie</name> <op:operator pos:line="181" pos:column="57">!=</op:operator> <lit:literal type="number" pos:line="181" pos:column="60">0</lit:literal></expr>)</condition><then pos:line="181" pos:column="62"> <block pos:line="181" pos:column="63">{
                <expr_stmt><expr><call><name><name pos:line="182" pos:column="17">GC</name><op:operator pos:line="182" pos:column="19">.</op:operator><name pos:line="182" pos:column="20">SuppressFinalize</name></name><argument_list pos:line="182" pos:column="36">(<argument><expr><name pos:line="182" pos:column="37">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="183" pos:column="17">solution</name><op:operator pos:line="183" pos:column="25">.</op:operator><name pos:line="183" pos:column="26">UnadviseSolutionEvents</name></name><argument_list pos:line="183" pos:column="48">(<argument><expr><name pos:line="183" pos:column="49">solutionEventsCookie</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="184" pos:column="17">OnQueryUnloadProject</name> <op:operator pos:line="184" pos:column="38">=</op:operator> <name pos:line="184" pos:column="40">null</name></expr>;</expr_stmt>

                <expr_stmt><expr><name pos:line="186" pos:column="17">OnAfterOpenProject</name> <op:operator pos:line="186" pos:column="36">=</op:operator> <name pos:line="186" pos:column="38">null</name></expr>;</expr_stmt>


                <expr_stmt><expr><name pos:line="189" pos:column="17">solutionEventsCookie</name> <op:operator pos:line="189" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="189" pos:column="40">0</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="190" pos:column="17">solution</name> <op:operator pos:line="190" pos:column="26">=</op:operator> <name pos:line="190" pos:column="28">null</name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
        <cpp:endregion pos:line="193" pos:column="9">#<cpp:directive pos:line="193" pos:column="10">endregion</cpp:directive></cpp:endregion>
    }</block></class>
}</block></namespace></unit>
