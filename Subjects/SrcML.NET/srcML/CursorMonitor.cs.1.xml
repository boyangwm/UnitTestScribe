<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\VisualStudio\ABB.SrcML.VisualStudio.SrcMLService\CursorMonitor.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2015 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Vinay Augustine (ABB Group) - Initial implementation
 *****************************************************************************/</comment>

<using pos:line="12" pos:column="1">using <name pos:line="12" pos:column="7">EnvDTE</name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Microsoft</name><op:operator pos:line="13" pos:column="16">.</op:operator><name pos:line="13" pos:column="17">VisualStudio</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">Microsoft</name><op:operator pos:line="14" pos:column="16">.</op:operator><name pos:line="14" pos:column="17">VisualStudio</name><op:operator pos:line="14" pos:column="29">.</op:operator><name pos:line="14" pos:column="30">OLE</name><op:operator pos:line="14" pos:column="33">.</op:operator><name pos:line="14" pos:column="34">Interop</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">Microsoft</name><op:operator pos:line="15" pos:column="16">.</op:operator><name pos:line="15" pos:column="17">VisualStudio</name><op:operator pos:line="15" pos:column="29">.</op:operator><name pos:line="15" pos:column="30">Shell</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">Microsoft</name><op:operator pos:line="16" pos:column="16">.</op:operator><name pos:line="16" pos:column="17">VisualStudio</name><op:operator pos:line="16" pos:column="29">.</op:operator><name pos:line="16" pos:column="30">Shell</name><op:operator pos:line="16" pos:column="35">.</op:operator><name pos:line="16" pos:column="36">Interop</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">Microsoft</name><op:operator pos:line="17" pos:column="16">.</op:operator><name pos:line="17" pos:column="17">VisualStudio</name><op:operator pos:line="17" pos:column="29">.</op:operator><name pos:line="17" pos:column="30">TextManager</name><op:operator pos:line="17" pos:column="41">.</op:operator><name pos:line="17" pos:column="42">Interop</name></name>;</using>
<using pos:line="18" pos:column="1">using <name pos:line="18" pos:column="7">System</name>;</using>
<using pos:line="19" pos:column="1">using <name><name pos:line="19" pos:column="7">System</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">Collections</name><op:operator pos:line="19" pos:column="25">.</op:operator><name pos:line="19" pos:column="26">Generic</name></name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">System</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">ComponentModel</name></name>;</using>
<using pos:line="21" pos:column="1">using <name><name pos:line="21" pos:column="7">System</name><op:operator pos:line="21" pos:column="13">.</op:operator><name pos:line="21" pos:column="14">Linq</name></name>;</using>
<using pos:line="22" pos:column="1">using <name><name pos:line="22" pos:column="7">System</name><op:operator pos:line="22" pos:column="13">.</op:operator><name pos:line="22" pos:column="14">Text</name></name>;</using>
<using pos:line="23" pos:column="1">using <name pos:line="23" pos:column="7">IServiceProvider</name> <init pos:line="23" pos:column="24">= <expr><name><name pos:line="23" pos:column="26">System</name><op:operator pos:line="23" pos:column="32">.</op:operator><name pos:line="23" pos:column="33">IServiceProvider</name></name></expr></init>;</using>

<namespace pos:line="25" pos:column="1">namespace <name><name pos:line="25" pos:column="11">ABB</name><op:operator pos:line="25" pos:column="14">.</op:operator><name pos:line="25" pos:column="15">VisualStudio</name></name> <block pos:line="25" pos:column="28">{
    <class pos:line="26" pos:column="5">class <name pos:line="26" pos:column="11">CursorMonitor</name> <super pos:line="26" pos:column="25">: <name pos:line="26" pos:column="27">ICursorMonitorService</name>, <name pos:line="26" pos:column="50">SCursorMonitorService</name></super> <block pos:line="26" pos:column="72">{
        <decl_stmt><decl><type><specifier pos:line="27" pos:column="9">private</specifier> <specifier pos:line="27" pos:column="17">static</specifier> <name pos:line="27" pos:column="24">Guid</name></type> <name pos:line="27" pos:column="29">textViewGuid</name> <init pos:line="27" pos:column="42">= <expr><op:operator pos:line="27" pos:column="44">new</op:operator> <call><name pos:line="27" pos:column="48">Guid</name><argument_list pos:line="27" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="27" pos:column="53">"E1965DA9-E791-49E2-9F9D-ED766D885967"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="29" pos:column="9">private</specifier> <name pos:line="29" pos:column="17">IServiceProvider</name></type> <name pos:line="29" pos:column="34">serviceProvider</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="30" pos:column="9">private</specifier> <name pos:line="30" pos:column="17">DTE</name></type> <name pos:line="30" pos:column="21">vsEnvironment</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="31" pos:column="9">private</specifier> <name pos:line="31" pos:column="17">WindowEvents</name></type> <name pos:line="31" pos:column="30">windowEvents</name></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="33" pos:column="9">private</specifier> <name><name pos:line="33" pos:column="17">Dictionary</name><argument_list pos:line="33" pos:column="27">&lt;<argument><name pos:line="33" pos:column="28">Window</name></argument>, <argument><name><name pos:line="33" pos:column="36">Tuple</name><argument_list pos:line="33" pos:column="41">&lt;<argument><name pos:line="33" pos:column="42">uint</name></argument>,<argument><name pos:line="33" pos:column="47">IConnectionPoint</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:line="33" pos:column="66">activeWindows</name></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><specifier pos:line="35" pos:column="9">private</specifier> <name pos:line="35" pos:column="17">string</name></type> <name pos:line="35" pos:column="24">_currentFileName</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="36" pos:column="9">private</specifier> <name pos:line="36" pos:column="17">int</name></type> <name pos:line="36" pos:column="21">_currentLineNumber</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="37" pos:column="9">private</specifier> <name pos:line="37" pos:column="17">int</name></type> <name pos:line="37" pos:column="21">_currentColumnNumber</name></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="39" pos:column="9">public</specifier> <specifier pos:line="39" pos:column="16">event</specifier> <name pos:line="39" pos:column="22">PropertyChangedEventHandler</name></type> <name pos:line="39" pos:column="50">PropertyChanged</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="41" pos:column="9">public</specifier> <name pos:line="41" pos:column="16">CursorMonitor</name><parameter_list pos:line="41" pos:column="29">(<param><decl><type><name pos:line="41" pos:column="30">IServiceProvider</name></type> <name pos:line="41" pos:column="47">provider</name></decl></param>)</parameter_list> <block pos:line="41" pos:column="57">{

            <expr_stmt><expr><name><name pos:line="43" pos:column="13">this</name><op:operator pos:line="43" pos:column="17">.</op:operator><name pos:line="43" pos:column="18">serviceProvider</name></name> <op:operator pos:line="43" pos:column="34">=</op:operator> <name pos:line="43" pos:column="36">provider</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="44" pos:column="13">this</name><op:operator pos:line="44" pos:column="17">.</op:operator><name pos:line="44" pos:column="18">vsEnvironment</name></name> <op:operator pos:line="44" pos:column="32">=</op:operator> <call><name><name pos:line="44" pos:column="34">serviceProvider</name><op:operator pos:line="44" pos:column="49">.</op:operator><name pos:line="44" pos:column="50">GetService</name></name><argument_list pos:line="44" pos:column="60">(<argument><expr><call><name pos:line="44" pos:column="61">typeof</name><argument_list pos:line="44" pos:column="67">(<argument><expr><name pos:line="44" pos:column="68">DTE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="44" pos:column="74">as</op:operator> <name pos:line="44" pos:column="77">DTE</name></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="46" pos:column="13">activeWindows</name> <op:operator pos:line="46" pos:column="27">=</op:operator> <op:operator pos:line="46" pos:column="29">new</op:operator> <call><name><name pos:line="46" pos:column="33">Dictionary</name><argument_list pos:line="46" pos:column="43">&lt;<argument><name pos:line="46" pos:column="44">Window</name></argument>, <argument><name><name pos:line="46" pos:column="52">Tuple</name><argument_list pos:line="46" pos:column="57">&lt;<argument><name pos:line="46" pos:column="58">uint</name></argument>, <argument><name pos:line="46" pos:column="64">IConnectionPoint</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list pos:line="46" pos:column="82">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">Setup</name><argument_list pos:line="47" pos:column="18">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="50" pos:column="9">public</specifier> <name pos:line="50" pos:column="16">string</name></type> <name pos:line="50" pos:column="23">CurrentFileName</name> <block pos:line="50" pos:column="39">{
            <function><name pos:line="51" pos:column="13">get</name> <block pos:line="51" pos:column="17">{ <return pos:line="51" pos:column="19">return <expr><name pos:line="51" pos:column="26">_currentFileName</name></expr>;</return> }</block></function>
            <function><specifier pos:line="52" pos:column="13">private</specifier> <name pos:line="52" pos:column="21">set</name> <block pos:line="52" pos:column="25">{
                <if pos:line="53" pos:column="17">if<condition pos:line="53" pos:column="19">(<expr><call><name pos:line="53" pos:column="20">SetField</name><argument_list pos:line="53" pos:column="28">(<argument><expr pos:line="53" pos:column="29">ref <name pos:line="53" pos:column="33">_currentFileName</name></expr></argument>, <argument><expr><name pos:line="53" pos:column="51">value</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="53" pos:column="58">"CurrentFileName"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="77">StringComparer</name><op:operator pos:line="53" pos:column="91">.</op:operator><name pos:line="53" pos:column="92">CurrentCultureIgnoreCase</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="53" pos:column="118"> <block pos:line="53" pos:column="119">{
                    <expr_stmt><expr><name pos:line="54" pos:column="21">LastUpdated</name> <op:operator pos:line="54" pos:column="33">=</op:operator> <name><name pos:line="54" pos:column="35">DateTime</name><op:operator pos:line="54" pos:column="43">.</op:operator><name pos:line="54" pos:column="44">Now</name></name></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="59" pos:column="9">public</specifier> <name pos:line="59" pos:column="16">int</name></type> <name pos:line="59" pos:column="20">CurrentColumnNumber</name> <block pos:line="59" pos:column="40">{
            <function><name pos:line="60" pos:column="13">get</name> <block pos:line="60" pos:column="17">{ <return pos:line="60" pos:column="19">return <expr><name pos:line="60" pos:column="26">_currentColumnNumber</name></expr>;</return> }</block></function>
            <function><specifier pos:line="61" pos:column="13">private</specifier> <name pos:line="61" pos:column="21">set</name> <block pos:line="61" pos:column="25">{
                <if pos:line="62" pos:column="17">if<condition pos:line="62" pos:column="19">(<expr><call><name pos:line="62" pos:column="20">SetField</name><argument_list pos:line="62" pos:column="28">(<argument><expr pos:line="62" pos:column="29">ref <name pos:line="62" pos:column="33">_currentColumnNumber</name></expr></argument>, <argument><expr><name pos:line="62" pos:column="55">value</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="62" pos:column="62">"CurrentColumnNumber"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="62" pos:column="85"> <block pos:line="62" pos:column="86">{
                    <expr_stmt><expr><name pos:line="63" pos:column="21">LastUpdated</name> <op:operator pos:line="63" pos:column="33">=</op:operator> <name><name pos:line="63" pos:column="35">DateTime</name><op:operator pos:line="63" pos:column="43">.</op:operator><name pos:line="63" pos:column="44">Now</name></name></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="68" pos:column="9">public</specifier> <name pos:line="68" pos:column="16">int</name></type> <name pos:line="68" pos:column="20">CurrentLineNumber</name> <block pos:line="68" pos:column="38">{
            <function><name pos:line="69" pos:column="13">get</name> <block pos:line="69" pos:column="17">{ <return pos:line="69" pos:column="19">return <expr><name pos:line="69" pos:column="26">_currentLineNumber</name></expr>;</return> }</block></function>
            <function><specifier pos:line="70" pos:column="13">private</specifier> <name pos:line="70" pos:column="21">set</name> <block pos:line="70" pos:column="25">{
                <if pos:line="71" pos:column="17">if<condition pos:line="71" pos:column="19">(<expr><call><name pos:line="71" pos:column="20">SetField</name><argument_list pos:line="71" pos:column="28">(<argument><expr pos:line="71" pos:column="29">ref <name pos:line="71" pos:column="33">_currentLineNumber</name></expr></argument>, <argument><expr><name pos:line="71" pos:column="53">value</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="71" pos:column="60">"CurrentLineNumber"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="71" pos:column="81"> <block pos:line="71" pos:column="82">{
                    <expr_stmt><expr><name pos:line="72" pos:column="21">LastUpdated</name> <op:operator pos:line="72" pos:column="33">=</op:operator> <name><name pos:line="72" pos:column="35">DateTime</name><op:operator pos:line="72" pos:column="43">.</op:operator><name pos:line="72" pos:column="44">Now</name></name></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="77" pos:column="9">public</specifier> <name pos:line="77" pos:column="16">DateTime</name></type> <name pos:line="77" pos:column="25">LastUpdated</name> <block pos:line="77" pos:column="37">{ <function_decl><name pos:line="77" pos:column="39">get</name>;</function_decl> <function_decl><specifier pos:line="77" pos:column="44">private</specifier> <name pos:line="77" pos:column="52">set</name>;</function_decl> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="79" pos:column="9">protected</specifier> <specifier pos:line="79" pos:column="19">virtual</specifier> <name pos:line="79" pos:column="27">void</name></type> <name pos:line="79" pos:column="32">OnPropertyChanged</name><parameter_list pos:line="79" pos:column="49">(<param><decl><type><name pos:line="79" pos:column="50">PropertyChangedEventArgs</name></type> <name pos:line="79" pos:column="75">e</name></decl></param>)</parameter_list> <block pos:line="79" pos:column="78">{
            <decl_stmt><decl><type><name pos:line="80" pos:column="13">var</name></type> <name pos:line="80" pos:column="17">handler</name> <init pos:line="80" pos:column="25">= <expr><name pos:line="80" pos:column="27">PropertyChanged</name></expr></init></decl>;</decl_stmt>
            <if pos:line="81" pos:column="13">if<condition pos:line="81" pos:column="15">(<expr><name pos:line="81" pos:column="16">null</name> <op:operator pos:line="81" pos:column="21">!=</op:operator> <name pos:line="81" pos:column="24">handler</name></expr>)</condition><then pos:line="81" pos:column="32"> <block pos:line="81" pos:column="33">{
                <expr_stmt><expr><call><name pos:line="82" pos:column="17">handler</name><argument_list pos:line="82" pos:column="24">(<argument><expr><name pos:line="82" pos:column="25">this</name></expr></argument>, <argument><expr><name pos:line="82" pos:column="31">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="86" pos:column="9">private</specifier> <name pos:line="86" pos:column="17">IConnectionPoint</name></type> <name pos:line="86" pos:column="34">GetConnectionPoint</name><parameter_list pos:line="86" pos:column="52">(<param><decl><type><name pos:line="86" pos:column="53">string</name></type> <name pos:line="86" pos:column="60">path</name></decl></param>)</parameter_list> <block pos:line="86" pos:column="66">{
            <if pos:line="87" pos:column="13">if<condition pos:line="87" pos:column="15">(<expr><call><name><name pos:line="87" pos:column="16">string</name><op:operator pos:line="87" pos:column="22">.</op:operator><name pos:line="87" pos:column="23">IsNullOrEmpty</name></name><argument_list pos:line="87" pos:column="36">(<argument><expr><name pos:line="87" pos:column="37">path</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="87" pos:column="43"> <block pos:line="87" pos:column="44">{ <return pos:line="87" pos:column="46">return <expr><name pos:line="87" pos:column="53">null</name></expr>;</return> }</block></then></if>

            <decl_stmt><decl><type><name pos:line="89" pos:column="13">IVsUIHierarchy</name></type> <name pos:line="89" pos:column="28">uiHierarchy</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="90" pos:column="13">uint</name></type> <name pos:line="90" pos:column="18">itemId</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="91" pos:column="13">IVsWindowFrame</name></type> <name pos:line="91" pos:column="28">windowFrame</name></decl>;</decl_stmt>

            <if pos:line="93" pos:column="13">if<condition pos:line="93" pos:column="15">(<expr><call><name><name pos:line="93" pos:column="16">VsShellUtilities</name><op:operator pos:line="93" pos:column="32">.</op:operator><name pos:line="93" pos:column="33">IsDocumentOpen</name></name><argument_list pos:line="93" pos:column="47">(<argument><expr><name><name pos:line="93" pos:column="48">this</name><op:operator pos:line="93" pos:column="52">.</op:operator><name pos:line="93" pos:column="53">serviceProvider</name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="70">path</name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="76">Guid</name><op:operator pos:line="93" pos:column="80">.</op:operator><name pos:line="93" pos:column="81">Empty</name></name></expr></argument>, <argument><expr pos:line="93" pos:column="88">out <name pos:line="93" pos:column="92">uiHierarchy</name></expr></argument>, <argument><expr pos:line="93" pos:column="105">out <name pos:line="93" pos:column="109">itemId</name></expr></argument>, <argument><expr pos:line="93" pos:column="117">out <name pos:line="93" pos:column="121">windowFrame</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="93" pos:column="134"> <block pos:line="93" pos:column="135">{
                <decl_stmt><decl><type><name pos:line="94" pos:column="17">var</name></type> <name pos:line="94" pos:column="21">view</name> <init pos:line="94" pos:column="26">= <expr><call><name><name pos:line="94" pos:column="28">VsShellUtilities</name><op:operator pos:line="94" pos:column="44">.</op:operator><name pos:line="94" pos:column="45">GetTextView</name></name><argument_list pos:line="94" pos:column="56">(<argument><expr><name pos:line="94" pos:column="57">windowFrame</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="95" pos:column="17">var</name></type> <name pos:line="95" pos:column="21">container</name> <init pos:line="95" pos:column="31">= <expr><name pos:line="95" pos:column="33">view</name> <op:operator pos:line="95" pos:column="38">as</op:operator> <name pos:line="95" pos:column="41">IConnectionPointContainer</name></expr></init></decl>;</decl_stmt>
                <if pos:line="96" pos:column="17">if<condition pos:line="96" pos:column="19">(<expr><name pos:line="96" pos:column="20">null</name> <op:operator pos:line="96" pos:column="25">!=</op:operator> <name pos:line="96" pos:column="28">container</name></expr>)</condition><then pos:line="96" pos:column="38"> <block pos:line="96" pos:column="39">{
                    <decl_stmt><decl><type><name pos:line="97" pos:column="21">IConnectionPoint</name></type> <name pos:line="97" pos:column="38">connectionPoint</name></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="98" pos:column="21">container</name><op:operator pos:line="98" pos:column="30">.</op:operator><name pos:line="98" pos:column="31">FindConnectionPoint</name></name><argument_list pos:line="98" pos:column="50">(<argument><expr pos:line="98" pos:column="51">ref <name pos:line="98" pos:column="55">textViewGuid</name></expr></argument>, <argument><expr pos:line="98" pos:column="69">out <name pos:line="98" pos:column="73">connectionPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return pos:line="99" pos:column="21">return <expr><name pos:line="99" pos:column="28">connectionPoint</name></expr>;</return>
                }</block></then></if>
            }</block></then></if>

            <return pos:line="103" pos:column="13">return <expr><name pos:line="103" pos:column="20">null</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="106" pos:column="9">private</specifier> <name pos:line="106" pos:column="17">string</name></type> <name pos:line="106" pos:column="24">GetWindowPath</name><parameter_list pos:line="106" pos:column="37">(<param><decl><type><name pos:line="106" pos:column="38">Window</name></type> <name pos:line="106" pos:column="45">window</name></decl></param>)</parameter_list> <block pos:line="106" pos:column="53">{
            <try pos:line="107" pos:column="13">try <block pos:line="107" pos:column="17">{
                <if pos:line="108" pos:column="17">if<condition pos:line="108" pos:column="19">(<expr><name pos:line="108" pos:column="20">null</name> <op:operator pos:line="108" pos:column="25">==</op:operator> <name pos:line="108" pos:column="28">window</name> <op:operator pos:line="108" pos:column="35">||</op:operator> <name pos:line="108" pos:column="38">null</name> <op:operator pos:line="108" pos:column="43">==</op:operator> <name><name pos:line="108" pos:column="46">window</name><op:operator pos:line="108" pos:column="52">.</op:operator><name pos:line="108" pos:column="53">Document</name></name></expr>)</condition><then pos:line="108" pos:column="62"> <block pos:line="108" pos:column="63">{ <return pos:line="108" pos:column="65">return <expr><name pos:line="108" pos:column="72">null</name></expr>;</return> }</block></then></if>
                <return pos:line="109" pos:column="17">return <expr><name><name pos:line="109" pos:column="24">window</name><op:operator pos:line="109" pos:column="30">.</op:operator><name pos:line="109" pos:column="31">Document</name><op:operator pos:line="109" pos:column="39">.</op:operator><name pos:line="109" pos:column="40">FullName</name></name></expr>;</return>
            }</block> <catch pos:line="110" pos:column="15">catch<parameter_list pos:line="110" pos:column="20">(<param><decl><type><name pos:line="110" pos:column="21">Exception</name></type></decl></param>)</parameter_list> <block pos:line="110" pos:column="32">{
                <return pos:line="111" pos:column="17">return <expr><name><name pos:line="111" pos:column="24">String</name><op:operator pos:line="111" pos:column="30">.</op:operator><name pos:line="111" pos:column="31">Empty</name></name></expr>;</return>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="115" pos:column="9">private</specifier> <name pos:line="115" pos:column="17">bool</name></type> <name><name pos:line="115" pos:column="22">SetField</name><argument_list pos:line="115" pos:column="30">&lt;<argument><name pos:line="115" pos:column="31">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="115" pos:column="33">(<param><decl><type><specifier pos:line="115" pos:column="34">ref</specifier> <name pos:line="115" pos:column="38">T</name></type> <name pos:line="115" pos:column="40">field</name></decl></param>, <param><decl><type><name pos:line="115" pos:column="47">T</name></type> <name pos:line="115" pos:column="49">value</name></decl></param>, <param><decl><type><name pos:line="115" pos:column="56">string</name></type> <name pos:line="115" pos:column="63">propertyName</name></decl></param>)</parameter_list> <block pos:line="115" pos:column="77">{
            <return pos:line="116" pos:column="13">return <expr><call><name><name pos:line="116" pos:column="20">SetField</name><argument_list pos:line="116" pos:column="28">&lt;<argument><name pos:line="116" pos:column="29">T</name></argument>&gt;</argument_list></name><argument_list pos:line="116" pos:column="31">(<argument><expr pos:line="116" pos:column="32">ref <name pos:line="116" pos:column="36">field</name></expr></argument>, <argument><expr><name pos:line="116" pos:column="43">value</name></expr></argument>, <argument><expr><name pos:line="116" pos:column="50">propertyName</name></expr></argument>, <argument><expr><name><name><name pos:line="116" pos:column="64">EqualityComparer</name><argument_list pos:line="116" pos:column="80">&lt;<argument><name pos:line="116" pos:column="81">T</name></argument>&gt;</argument_list></name><op:operator pos:line="116" pos:column="83">.</op:operator><name pos:line="116" pos:column="84">Default</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="119" pos:column="9">private</specifier> <name pos:line="119" pos:column="17">bool</name></type> <name><name pos:line="119" pos:column="22">SetField</name><argument_list pos:line="119" pos:column="30">&lt;<argument><name pos:line="119" pos:column="31">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="119" pos:column="33">(<param><decl><type><specifier pos:line="119" pos:column="34">ref</specifier> <name pos:line="119" pos:column="38">T</name></type> <name pos:line="119" pos:column="40">field</name></decl></param>, <param><decl><type><name pos:line="119" pos:column="47">T</name></type> <name pos:line="119" pos:column="49">value</name></decl></param>, <param><decl><type><name pos:line="119" pos:column="56">string</name></type> <name pos:line="119" pos:column="63">propertyName</name></decl></param>, <param><decl><type><name><name pos:line="119" pos:column="77">IEqualityComparer</name><argument_list pos:line="119" pos:column="94">&lt;<argument><name pos:line="119" pos:column="95">T</name></argument>&gt;</argument_list></name></type> <name pos:line="119" pos:column="98">comparer</name></decl></param>)</parameter_list> <block pos:line="119" pos:column="108">{
            <if pos:line="120" pos:column="13">if<condition pos:line="120" pos:column="15">(<expr><call><name><name pos:line="120" pos:column="16">comparer</name><op:operator pos:line="120" pos:column="24">.</op:operator><name pos:line="120" pos:column="25">Equals</name></name><argument_list pos:line="120" pos:column="31">(<argument><expr><name pos:line="120" pos:column="32">field</name></expr></argument>, <argument><expr><name pos:line="120" pos:column="39">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="120" pos:column="46"> <block pos:line="120" pos:column="47">{ <return pos:line="120" pos:column="49">return <expr><lit:literal type="boolean" pos:line="120" pos:column="56">false</lit:literal></expr>;</return> }</block></then></if>
            <expr_stmt><expr><name pos:line="121" pos:column="13">field</name> <op:operator pos:line="121" pos:column="19">=</op:operator> <name pos:line="121" pos:column="21">value</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="122" pos:column="13">OnPropertyChanged</name><argument_list pos:line="122" pos:column="30">(<argument><expr><op:operator pos:line="122" pos:column="31">new</op:operator> <call><name pos:line="122" pos:column="35">PropertyChangedEventArgs</name><argument_list pos:line="122" pos:column="59">(<argument><expr><name pos:line="122" pos:column="60">propertyName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="123" pos:column="13">return <expr><lit:literal type="boolean" pos:line="123" pos:column="20">true</lit:literal></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="126" pos:column="9">private</specifier> <name pos:line="126" pos:column="17">void</name></type> <name pos:line="126" pos:column="22">Setup</name><parameter_list pos:line="126" pos:column="27">()</parameter_list> <block pos:line="126" pos:column="30">{
            <if pos:line="127" pos:column="13">if<condition pos:line="127" pos:column="15">(<expr><name pos:line="127" pos:column="16">null</name> <op:operator pos:line="127" pos:column="21">==</op:operator> <name pos:line="127" pos:column="24">vsEnvironment</name></expr>)</condition><then pos:line="127" pos:column="38"> <block pos:line="127" pos:column="39">{ <throw pos:line="127" pos:column="41">throw <expr><op:operator pos:line="127" pos:column="47">new</op:operator> <call><name pos:line="127" pos:column="51">InvalidOperationException</name><argument_list pos:line="127" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="127" pos:column="77">"no DTE"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw> }</block></then></if>

            <expr_stmt><expr><name><name pos:line="129" pos:column="13">vsEnvironment</name><op:operator pos:line="129" pos:column="26">.</op:operator><name pos:line="129" pos:column="27">Events</name><op:operator pos:line="129" pos:column="33">.</op:operator><name pos:line="129" pos:column="34">DTEEvents</name><op:operator pos:line="129" pos:column="43">.</op:operator><name pos:line="129" pos:column="44">OnBeginShutdown</name></name> <op:operator pos:line="129" pos:column="60">+=</op:operator> <name pos:line="129" pos:column="63">Teardown</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="130" pos:column="13">windowEvents</name> <op:operator pos:line="130" pos:column="26">=</op:operator> <name><name pos:line="130" pos:column="28">vsEnvironment</name><op:operator pos:line="130" pos:column="41">.</op:operator><name pos:line="130" pos:column="42">Events</name><op:operator pos:line="130" pos:column="48">.</op:operator><name pos:line="130" pos:column="49">WindowEvents</name></name></expr>;</expr_stmt>

            <if pos:line="132" pos:column="13">if<condition pos:line="132" pos:column="15">(<expr><name pos:line="132" pos:column="16">null</name> <op:operator pos:line="132" pos:column="21">!=</op:operator> <name><name pos:line="132" pos:column="24">this</name><op:operator pos:line="132" pos:column="28">.</op:operator><name pos:line="132" pos:column="29">windowEvents</name></name></expr>)</condition><then pos:line="132" pos:column="42"> <block pos:line="132" pos:column="43">{
                <expr_stmt><expr><name><name pos:line="133" pos:column="17">this</name><op:operator pos:line="133" pos:column="21">.</op:operator><name pos:line="133" pos:column="22">windowEvents</name><op:operator pos:line="133" pos:column="34">.</op:operator><name pos:line="133" pos:column="35">WindowActivated</name></name> <op:operator pos:line="133" pos:column="51">+=</op:operator> <name pos:line="133" pos:column="54">windowEvents_WindowActivated</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="134" pos:column="17">this</name><op:operator pos:line="134" pos:column="21">.</op:operator><name pos:line="134" pos:column="22">windowEvents</name><op:operator pos:line="134" pos:column="34">.</op:operator><name pos:line="134" pos:column="35">WindowClosing</name></name> <op:operator pos:line="134" pos:column="49">+=</op:operator> <name pos:line="134" pos:column="52">windowEvents_WindowClosing</name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><name pos:line="138" pos:column="9">void</name></type> <name pos:line="138" pos:column="14">Teardown</name><parameter_list pos:line="138" pos:column="22">()</parameter_list> <block pos:line="138" pos:column="25">{
            <if pos:line="139" pos:column="13">if<condition pos:line="139" pos:column="15">(<expr><name pos:line="139" pos:column="16">null</name> <op:operator pos:line="139" pos:column="21">!=</op:operator> <name><name pos:line="139" pos:column="24">this</name><op:operator pos:line="139" pos:column="28">.</op:operator><name pos:line="139" pos:column="29">windowEvents</name></name></expr>)</condition><then pos:line="139" pos:column="42"> <block pos:line="139" pos:column="43">{
                <expr_stmt><expr><name><name pos:line="140" pos:column="17">this</name><op:operator pos:line="140" pos:column="21">.</op:operator><name pos:line="140" pos:column="22">windowEvents</name><op:operator pos:line="140" pos:column="34">.</op:operator><name pos:line="140" pos:column="35">WindowActivated</name></name> <op:operator pos:line="140" pos:column="51">-=</op:operator> <name pos:line="140" pos:column="54">windowEvents_WindowActivated</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="141" pos:column="17">this</name><op:operator pos:line="141" pos:column="21">.</op:operator><name pos:line="141" pos:column="22">windowEvents</name><op:operator pos:line="141" pos:column="34">.</op:operator><name pos:line="141" pos:column="35">WindowClosing</name></name> <op:operator pos:line="141" pos:column="49">-=</op:operator> <name pos:line="141" pos:column="52">windowEvents_WindowClosing</name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><name pos:line="145" pos:column="9">void</name></type> <name pos:line="145" pos:column="14">windowEvents_WindowActivated</name><parameter_list pos:line="145" pos:column="42">(<param><decl><type><name pos:line="145" pos:column="43">Window</name></type> <name pos:line="145" pos:column="50">GotFocus</name></decl></param>, <param><decl><type><name pos:line="145" pos:column="60">Window</name></type> <name pos:line="145" pos:column="67">LostFocus</name></decl></param>)</parameter_list> <block pos:line="145" pos:column="78">{
            <if pos:line="146" pos:column="13">if<condition pos:line="146" pos:column="15">(<expr><name pos:line="146" pos:column="16">null</name> <op:operator pos:line="146" pos:column="21">==</op:operator> <name pos:line="146" pos:column="24">GotFocus</name> <op:operator pos:line="146" pos:column="33">||</op:operator> <call><name><name pos:line="146" pos:column="36">activeWindows</name><op:operator pos:line="146" pos:column="49">.</op:operator><name pos:line="146" pos:column="50">ContainsKey</name></name><argument_list pos:line="146" pos:column="61">(<argument><expr><name pos:line="146" pos:column="62">GotFocus</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="146" pos:column="72"> <block pos:line="146" pos:column="73">{ <return pos:line="146" pos:column="75">return;</return> }</block></then></if>

            <decl_stmt><decl><type><name pos:line="148" pos:column="13">var</name></type> <name pos:line="148" pos:column="17">filePath</name> <init pos:line="148" pos:column="26">= <expr><call><name pos:line="148" pos:column="28">GetWindowPath</name><argument_list pos:line="148" pos:column="41">(<argument><expr><name pos:line="148" pos:column="42">GotFocus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="149" pos:column="13">var</name></type> <name pos:line="149" pos:column="17">connectionPoint</name> <init pos:line="149" pos:column="33">= <expr><call><name pos:line="149" pos:column="35">GetConnectionPoint</name><argument_list pos:line="149" pos:column="53">(<argument><expr><name pos:line="149" pos:column="54">filePath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="150" pos:column="13">if<condition pos:line="150" pos:column="15">(<expr><name pos:line="150" pos:column="16">null</name> <op:operator pos:line="150" pos:column="21">==</op:operator> <name pos:line="150" pos:column="24">connectionPoint</name></expr>)</condition><then pos:line="150" pos:column="40"> <block pos:line="150" pos:column="41">{ <return pos:line="150" pos:column="43">return;</return> }</block></then></if>
            

            <decl_stmt><decl><type><name pos:line="153" pos:column="13">var</name></type> <name pos:line="153" pos:column="17">listener</name> <init pos:line="153" pos:column="26">= <expr><op:operator pos:line="153" pos:column="28">new</op:operator> <call><name pos:line="153" pos:column="32">TextViewListener</name><argument_list pos:line="153" pos:column="48">(<argument><expr><name pos:line="153" pos:column="49">this</name></expr></argument>, <argument><expr><name pos:line="153" pos:column="55">filePath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="154" pos:column="13">uint</name></type> <name pos:line="154" pos:column="18">cookie</name></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="155" pos:column="13">connectionPoint</name><op:operator pos:line="155" pos:column="28">.</op:operator><name pos:line="155" pos:column="29">Advise</name></name><argument_list pos:line="155" pos:column="35">(<argument><expr><name pos:line="155" pos:column="36">listener</name></expr></argument>, <argument><expr pos:line="155" pos:column="46">out <name pos:line="155" pos:column="50">cookie</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="156" pos:column="13">activeWindows</name><op:operator pos:line="156" pos:column="26">.</op:operator><name pos:line="156" pos:column="27">Add</name></name><argument_list pos:line="156" pos:column="30">(<argument><expr><name pos:line="156" pos:column="31">GotFocus</name></expr></argument>, <argument><expr><call><name><name pos:line="156" pos:column="41">Tuple</name><op:operator pos:line="156" pos:column="46">.</op:operator><name pos:line="156" pos:column="47">Create</name></name><argument_list pos:line="156" pos:column="53">(<argument><expr><name pos:line="156" pos:column="54">cookie</name></expr></argument>, <argument><expr><name pos:line="156" pos:column="62">connectionPoint</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><name pos:line="159" pos:column="9">void</name></type> <name pos:line="159" pos:column="14">windowEvents_WindowClosing</name><parameter_list pos:line="159" pos:column="40">(<param><decl><type><name pos:line="159" pos:column="41">Window</name></type> <name pos:line="159" pos:column="48">Window</name></decl></param>)</parameter_list> <block pos:line="159" pos:column="56">{
            <if pos:line="160" pos:column="13">if<condition pos:line="160" pos:column="15">(<expr><op:operator pos:line="160" pos:column="16">!</op:operator><call><name><name pos:line="160" pos:column="17">activeWindows</name><op:operator pos:line="160" pos:column="30">.</op:operator><name pos:line="160" pos:column="31">ContainsKey</name></name><argument_list pos:line="160" pos:column="42">(<argument><expr><name pos:line="160" pos:column="43">Window</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="160" pos:column="51"> <block pos:line="160" pos:column="52">{ <return pos:line="160" pos:column="54">return;</return> }</block></then></if>

            <expr_stmt><expr><name><name pos:line="162" pos:column="13">activeWindows</name><index pos:line="162" pos:column="26">[<expr><name pos:line="162" pos:column="27">Window</name></expr>]</index></name><op:operator pos:line="162" pos:column="34">.</op:operator><call><name><name pos:line="162" pos:column="35">Item2</name><op:operator pos:line="162" pos:column="40">.</op:operator><name pos:line="162" pos:column="41">Unadvise</name></name><argument_list pos:line="162" pos:column="49">(<argument><expr><name><name pos:line="162" pos:column="50">activeWindows</name><index pos:line="162" pos:column="63">[<expr><name pos:line="162" pos:column="64">Window</name></expr>]</index></name><op:operator pos:line="162" pos:column="71">.</op:operator><name pos:line="162" pos:column="72">Item1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="163" pos:column="13">activeWindows</name><op:operator pos:line="163" pos:column="26">.</op:operator><name pos:line="163" pos:column="27">Remove</name></name><argument_list pos:line="163" pos:column="33">(<argument><expr><name pos:line="163" pos:column="34">Window</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <class><specifier pos:line="166" pos:column="9">private</specifier> class <name pos:line="166" pos:column="23">TextViewListener</name> <super pos:line="166" pos:column="40">: <name pos:line="166" pos:column="42">IVsTextViewEvents</name></super> <block pos:line="166" pos:column="60">{
            <decl_stmt><decl><type><specifier pos:line="167" pos:column="13">private</specifier> <name pos:line="167" pos:column="21">CursorMonitor</name></type> <name pos:line="167" pos:column="35">monitor</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="168" pos:column="13">private</specifier> <name pos:line="168" pos:column="21">string</name></type> <name pos:line="168" pos:column="28">filePath</name></decl>;</decl_stmt>

            <constructor><specifier pos:line="170" pos:column="13">public</specifier> <name pos:line="170" pos:column="20">TextViewListener</name><parameter_list pos:line="170" pos:column="36">(<param><decl><type><name pos:line="170" pos:column="37">CursorMonitor</name></type> <name pos:line="170" pos:column="51">monitor</name></decl></param>, <param><decl><type><name pos:line="170" pos:column="60">string</name></type> <name pos:line="170" pos:column="67">filePath</name></decl></param>)</parameter_list> <block pos:line="170" pos:column="77">{
                <expr_stmt><expr><name><name pos:line="171" pos:column="17">this</name><op:operator pos:line="171" pos:column="21">.</op:operator><name pos:line="171" pos:column="22">monitor</name></name> <op:operator pos:line="171" pos:column="30">=</op:operator> <name pos:line="171" pos:column="32">monitor</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="172" pos:column="17">this</name><op:operator pos:line="172" pos:column="21">.</op:operator><name pos:line="172" pos:column="22">filePath</name></name> <op:operator pos:line="172" pos:column="31">=</op:operator> <name pos:line="172" pos:column="33">filePath</name></expr>;</expr_stmt>
            }</block></constructor>
            <function><type><specifier pos:line="174" pos:column="13">public</specifier> <name pos:line="174" pos:column="20">void</name></type> <name pos:line="174" pos:column="25">OnChangeCaretLine</name><parameter_list pos:line="174" pos:column="42">(<param><decl><type><name pos:line="174" pos:column="43">IVsTextView</name></type> <name pos:line="174" pos:column="55">pView</name></decl></param>, <param><decl><type><name pos:line="174" pos:column="62">int</name></type> <name pos:line="174" pos:column="66">iNewLine</name></decl></param>, <param><decl><type><name pos:line="174" pos:column="76">int</name></type> <name pos:line="174" pos:column="80">iOldLine</name></decl></param>)</parameter_list> <block pos:line="174" pos:column="90">{
                <expr_stmt><expr><call><name pos:line="175" pos:column="17">OnSetFocus</name><argument_list pos:line="175" pos:column="27">(<argument><expr><name pos:line="175" pos:column="28">pView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></function>

            <function><type><specifier pos:line="178" pos:column="13">public</specifier> <name pos:line="178" pos:column="20">void</name></type> <name pos:line="178" pos:column="25">OnSetFocus</name><parameter_list pos:line="178" pos:column="35">(<param><decl><type><name pos:line="178" pos:column="36">IVsTextView</name></type> <name pos:line="178" pos:column="48">pView</name></decl></param>)</parameter_list> <block pos:line="178" pos:column="55">{
                <if pos:line="179" pos:column="17">if<condition pos:line="179" pos:column="19">(<expr><name pos:line="179" pos:column="20">null</name> <op:operator pos:line="179" pos:column="25">==</op:operator> <name pos:line="179" pos:column="28">pView</name></expr>)</condition><then pos:line="179" pos:column="34"> <block pos:line="179" pos:column="35">{ <return pos:line="179" pos:column="37">return;</return> }</block></then></if>
                <decl_stmt><decl><type><name pos:line="180" pos:column="17">var</name></type> <name pos:line="180" pos:column="21">position</name> <init pos:line="180" pos:column="30">= <expr><call><name pos:line="180" pos:column="32">GetPosition</name><argument_list pos:line="180" pos:column="43">(<argument><expr><name pos:line="180" pos:column="44">pView</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><name><name pos:line="182" pos:column="17">monitor</name><op:operator pos:line="182" pos:column="24">.</op:operator><name pos:line="182" pos:column="25">CurrentFileName</name></name> <op:operator pos:line="182" pos:column="41">=</op:operator> <name><name pos:line="182" pos:column="43">this</name><op:operator pos:line="182" pos:column="47">.</op:operator><name pos:line="182" pos:column="48">filePath</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="183" pos:column="17">monitor</name><op:operator pos:line="183" pos:column="24">.</op:operator><name pos:line="183" pos:column="25">CurrentLineNumber</name></name> <op:operator pos:line="183" pos:column="43">=</op:operator> <name><name pos:line="183" pos:column="45">position</name><op:operator pos:line="183" pos:column="53">.</op:operator><name pos:line="183" pos:column="54">Item1</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="184" pos:column="17">monitor</name><op:operator pos:line="184" pos:column="24">.</op:operator><name pos:line="184" pos:column="25">CurrentColumnNumber</name></name> <op:operator pos:line="184" pos:column="45">=</op:operator> <name><name pos:line="184" pos:column="47">position</name><op:operator pos:line="184" pos:column="55">.</op:operator><name pos:line="184" pos:column="56">Item2</name></name></expr>;</expr_stmt>
            }</block></function>

            <function><type><specifier pos:line="187" pos:column="13">private</specifier> <name><name pos:line="187" pos:column="21">Tuple</name><argument_list pos:line="187" pos:column="26">&lt;<argument><name pos:line="187" pos:column="27">int</name></argument>, <argument><name pos:line="187" pos:column="32">int</name></argument>&gt;</argument_list></name></type> <name pos:line="187" pos:column="37">GetPosition</name><parameter_list pos:line="187" pos:column="48">(<param><decl><type><name pos:line="187" pos:column="49">IVsTextView</name></type> <name pos:line="187" pos:column="61">view</name></decl></param>)</parameter_list> <block pos:line="187" pos:column="67">{
                <decl_stmt><decl><type><name pos:line="188" pos:column="17">int</name></type> <name pos:line="188" pos:column="21">line</name></decl><op:operator pos:line="188" pos:column="25">,</op:operator> <decl><type ref="prev"/><name pos:line="188" pos:column="27">column</name></decl>;</decl_stmt>
                <if pos:line="189" pos:column="17">if<condition pos:line="189" pos:column="19">(<expr><name><name pos:line="189" pos:column="20">VSConstants</name><op:operator pos:line="189" pos:column="31">.</op:operator><name pos:line="189" pos:column="32">S_OK</name></name> <op:operator pos:line="189" pos:column="37">==</op:operator> <call><name><name pos:line="189" pos:column="40">view</name><op:operator pos:line="189" pos:column="44">.</op:operator><name pos:line="189" pos:column="45">GetCaretPos</name></name><argument_list pos:line="189" pos:column="56">(<argument><expr pos:line="189" pos:column="57">out <name pos:line="189" pos:column="61">line</name></expr></argument>, <argument><expr pos:line="189" pos:column="67">out <name pos:line="189" pos:column="71">column</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="189" pos:column="79"> <block pos:line="189" pos:column="80">{
                    <return pos:line="190" pos:column="21">return <expr><call><name><name pos:line="190" pos:column="28">Tuple</name><op:operator pos:line="190" pos:column="33">.</op:operator><name><name pos:line="190" pos:column="34">Create</name><argument_list pos:line="190" pos:column="40">&lt;<argument><name pos:line="190" pos:column="41">int</name></argument>, <argument><name pos:line="190" pos:column="46">int</name></argument>&gt;</argument_list></name></name><argument_list pos:line="190" pos:column="50">(<argument><expr><name pos:line="190" pos:column="51">line</name> <op:operator pos:line="190" pos:column="56">+</op:operator> <lit:literal type="number" pos:line="190" pos:column="58">1</lit:literal></expr></argument>, <argument><expr><name pos:line="190" pos:column="61">column</name> <op:operator pos:line="190" pos:column="68">+</op:operator> <lit:literal type="number" pos:line="190" pos:column="70">1</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
                }</block></then></if>
                <return pos:line="192" pos:column="17">return <expr><name pos:line="192" pos:column="24">null</name></expr>;</return>
            }</block></function>

            <cpp:region pos:line="195" pos:column="13">#<cpp:directive pos:line="195" pos:column="14">region</cpp:directive> not implemented</cpp:region>
            <function><type><specifier pos:line="196" pos:column="13">public</specifier> <name pos:line="196" pos:column="20">void</name></type> <name pos:line="196" pos:column="25">OnChangeScrollInfo</name><parameter_list pos:line="196" pos:column="43">(<param><decl><type><name pos:line="196" pos:column="44">IVsTextView</name></type> <name pos:line="196" pos:column="56">pView</name></decl></param>, <param><decl><type><name pos:line="196" pos:column="63">int</name></type> <name pos:line="196" pos:column="67">iBar</name></decl></param>, <param><decl><type><name pos:line="196" pos:column="73">int</name></type> <name pos:line="196" pos:column="77">iMinUnit</name></decl></param>, <param><decl><type><name pos:line="196" pos:column="87">int</name></type> <name pos:line="196" pos:column="91">iMaxUnits</name></decl></param>, <param><decl><type><name pos:line="196" pos:column="102">int</name></type> <name pos:line="196" pos:column="106">iVisibleUnits</name></decl></param>, <param><decl><type><name pos:line="196" pos:column="121">int</name></type> <name pos:line="196" pos:column="125">iFirstVisibleUnit</name></decl></param>)</parameter_list> <block pos:line="196" pos:column="144">{
                <comment type="line" pos:line="197" pos:column="17">// not implemented</comment>
            }</block></function>

            <function><type><specifier pos:line="200" pos:column="13">public</specifier> <name pos:line="200" pos:column="20">void</name></type> <name pos:line="200" pos:column="25">OnKillFocus</name><parameter_list pos:line="200" pos:column="36">(<param><decl><type><name pos:line="200" pos:column="37">IVsTextView</name></type> <name pos:line="200" pos:column="49">pView</name></decl></param>)</parameter_list> <block pos:line="200" pos:column="56">{
                <comment type="line" pos:line="201" pos:column="17">// not implemented</comment>
            }</block></function>

            <function><type><specifier pos:line="204" pos:column="13">public</specifier> <name pos:line="204" pos:column="20">void</name></type> <name pos:line="204" pos:column="25">OnSetBuffer</name><parameter_list pos:line="204" pos:column="36">(<param><decl><type><name pos:line="204" pos:column="37">IVsTextView</name></type> <name pos:line="204" pos:column="49">pView</name></decl></param>, <param><decl><type><name pos:line="204" pos:column="56">IVsTextLines</name></type> <name pos:line="204" pos:column="69">pBuffer</name></decl></param>)</parameter_list> <block pos:line="204" pos:column="78">{
                <comment type="line" pos:line="205" pos:column="17">// not implemented</comment>
            }</block></function>
            <cpp:endregion pos:line="207" pos:column="13">#<cpp:directive pos:line="207" pos:column="14">endregion</cpp:directive> not implemented</cpp:endregion>
        }</block></class>
    }</block></class>
}</block></namespace>
</unit>
