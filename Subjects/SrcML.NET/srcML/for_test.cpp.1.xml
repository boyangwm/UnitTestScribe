<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\SrcML.NET\TestInputs\for_test.cpp" pos:tabs="8"><cpp:include pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">include</cpp:directive> <cpp:file pos:line="1" pos:column="10">&lt;iostream&gt;</cpp:file></cpp:include>
<function><type><name pos:line="2" pos:column="1">int</name></type> <name pos:line="2" pos:column="5">main</name><parameter_list pos:line="2" pos:column="9">()</parameter_list> <block pos:line="2" pos:column="12">{
  <for pos:line="3" pos:column="3">for(<init><decl><type><name pos:line="3" pos:column="7">int</name></type> <name pos:line="3" pos:column="11">i</name> <init pos:line="3" pos:column="13">= <expr><lit:literal type="number" pos:line="3" pos:column="15">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="3" pos:column="18">i</name> <op:operator pos:line="3" pos:column="20">&lt;</op:operator> <lit:literal type="number" pos:line="3" pos:column="22">10</lit:literal></expr>;</condition> <incr><expr><name pos:line="3" pos:column="26">i</name><op:operator pos:line="3" pos:column="27">++</op:operator></expr></incr>)<block pos:line="3" pos:column="30">{<comment type="line" pos:line="3" pos:column="31">// variable declaration (i)</comment>
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">std</name><op:operator pos:line="4" pos:column="8">::</op:operator><name pos:line="4" pos:column="10">cout</name></name> <op:operator pos:line="4" pos:column="15">&lt;&lt;</op:operator> <name pos:line="4" pos:column="18">i</name> <op:operator pos:line="4" pos:column="20">&lt;&lt;</op:operator> <name><name pos:line="4" pos:column="23">std</name><op:operator pos:line="4" pos:column="26">::</op:operator><name pos:line="4" pos:column="28">endl</name></name></expr>;</expr_stmt><comment type="line" pos:line="4" pos:column="33">// variable use (i)</comment>
  }</block></for>
  <return pos:line="6" pos:column="3">return <expr><lit:literal type="number" pos:line="6" pos:column="10">0</lit:literal></expr>;</return>
}</block></function>
</unit>
