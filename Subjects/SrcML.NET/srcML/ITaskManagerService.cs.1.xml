<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\VisualStudio\ABB.SrcML.VisualStudio.SrcMLService\ITaskManagerService.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2014 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Vinay Augustine (ABB Group) - Initial implementation
 *****************************************************************************/</comment>

<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">ABB</name><op:operator pos:line="12" pos:column="10">.</op:operator><name pos:line="12" pos:column="11">SrcML</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">ABB</name><op:operator pos:line="13" pos:column="10">.</op:operator><name pos:line="13" pos:column="11">SrcML</name><op:operator pos:line="13" pos:column="16">.</op:operator><name pos:line="13" pos:column="17">VisualStudio</name></name>;</using>
<using pos:line="14" pos:column="1">using <name pos:line="14" pos:column="7">System</name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">Collections</name><op:operator pos:line="15" pos:column="25">.</op:operator><name pos:line="15" pos:column="26">Generic</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Linq</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">System</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Runtime</name><op:operator pos:line="17" pos:column="21">.</op:operator><name pos:line="17" pos:column="22">InteropServices</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">System</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">Text</name></name>;</using>
<using pos:line="19" pos:column="1">using <name><name pos:line="19" pos:column="7">System</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">Threading</name><op:operator pos:line="19" pos:column="23">.</op:operator><name pos:line="19" pos:column="24">Tasks</name></name>;</using>

<namespace pos:line="21" pos:column="1">namespace <name><name pos:line="21" pos:column="11">ABB</name><op:operator pos:line="21" pos:column="14">.</op:operator><name pos:line="21" pos:column="15">VisualStudio</name></name> <block pos:line="21" pos:column="28">{
    <comment type="line" pos:line="22" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="23" pos:column="5">/// This is the interface that will be implemented by the global service exposed by the package</comment>
    <comment type="line" pos:line="24" pos:column="5">/// defined in ABB.VisualStudio.SrcMLService. Notice that we have to define this interface</comment>
    <comment type="line" pos:line="25" pos:column="5">/// as COM visible so that it will be possible to query for it from the native version of</comment>
    <comment type="line" pos:line="26" pos:column="5">/// IServiceProvider.</comment>
    <comment type="line" pos:line="27" pos:column="5">/// &lt;/summary&gt;</comment>
    <class type="interface"><attribute pos:line="28" pos:column="5">[<expr><call><name pos:line="28" pos:column="6">Guid</name><argument_list pos:line="28" pos:column="10">(<argument><expr><name><name pos:line="28" pos:column="11">GuidList</name><op:operator pos:line="28" pos:column="19">.</op:operator><name pos:line="28" pos:column="20">ITaskManagerServiceId</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
    <attribute pos:line="29" pos:column="5">[<expr><call><name pos:line="29" pos:column="6">ComVisible</name><argument_list pos:line="29" pos:column="16">(<argument><expr><lit:literal type="boolean" pos:line="29" pos:column="17">true</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
    <specifier pos:line="30" pos:column="5">public</specifier> interface <name pos:line="30" pos:column="22">ITaskManagerService</name> <block pos:line="30" pos:column="42">{
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">TaskScheduler</name></type> <name pos:line="31" pos:column="23">GlobalScheduler</name> <block pos:line="31" pos:column="39">{ <function_decl><name pos:line="31" pos:column="41">get</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><name pos:line="33" pos:column="9">TaskFactory</name></type> <name pos:line="33" pos:column="21">GlobalFactory</name> <block pos:line="33" pos:column="35">{ <function_decl><name pos:line="33" pos:column="37">get</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="35" pos:column="9">event</specifier> <name pos:line="35" pos:column="15">EventHandler</name></type> <name pos:line="35" pos:column="28">SchedulerIdled</name></decl>;</decl_stmt>

        <function_decl><type><name pos:line="37" pos:column="9">void</name></type> <name pos:line="37" pos:column="14">Start</name><parameter_list pos:line="37" pos:column="19">()</parameter_list>;</function_decl>
        <function_decl><type><name pos:line="38" pos:column="9">void</name></type> <name pos:line="38" pos:column="14">Stop</name><parameter_list pos:line="38" pos:column="18">()</parameter_list>;</function_decl>
    }</block></class>


    <comment type="line" pos:line="42" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="43" pos:column="5">/// The goal of this interface is actually just to define a Type (or Guid from the native</comment>
    <comment type="line" pos:line="44" pos:column="5">/// client's point of view) that will be used to identify the service. In theory, we could use</comment>
    <comment type="line" pos:line="45" pos:column="5">/// the interface defined above, but it is a good practice to always define a new type as the</comment>
    <comment type="line" pos:line="46" pos:column="5">/// service's identifier because a service can expose different interfaces.</comment>
    <comment type="line" pos:line="47" pos:column="5">///</comment>
    <comment type="line" pos:line="48" pos:column="5">/// It is registered at: HKEY_USERS\S-1-5-21-1472859983-109138142-169162935-138973\Software\Microsoft\VisualStudio\11.0Exp_Config\Services\{4B917BC0-C42E-447C-B732-6A675EDF4EB9}</comment>
    <comment type="line" pos:line="49" pos:column="5">/// &lt;/summary&gt;</comment>
    <class type="interface"><attribute pos:line="50" pos:column="5">[<expr><call><name pos:line="50" pos:column="6">Guid</name><argument_list pos:line="50" pos:column="10">(<argument><expr><name><name pos:line="50" pos:column="11">GuidList</name><op:operator pos:line="50" pos:column="19">.</op:operator><name pos:line="50" pos:column="20">STaskManagerServiceId</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
    <specifier pos:line="51" pos:column="5">public</specifier> interface <name pos:line="51" pos:column="22">STaskManagerService</name> <block pos:line="51" pos:column="42">{

    }</block></class>
}</block></namespace>
</unit>
