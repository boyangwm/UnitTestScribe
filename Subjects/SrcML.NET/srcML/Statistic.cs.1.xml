<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\Tools\ABB.SrcML.Tools.MethodCallSurvey\Statistic.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">ComponentModel</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Linq</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Text</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">ABB</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">SrcML</name><op:operator pos:line="7" pos:column="20">.</op:operator><name pos:line="7" pos:column="21">Tools</name><op:operator pos:line="7" pos:column="26">.</op:operator><name pos:line="7" pos:column="27">MethodCallSurvey</name></name> <block pos:line="7" pos:column="44">{

    <class><specifier pos:line="9" pos:column="5">public</specifier> class <name pos:line="9" pos:column="18">Statistic</name> <super pos:line="9" pos:column="28">: <name pos:line="9" pos:column="30">INotifyPropertyChanged</name></super> <block pos:line="9" pos:column="53">{
        <decl_stmt><decl><type><specifier pos:line="10" pos:column="9">private</specifier> <name pos:line="10" pos:column="17">int</name></type> <name pos:line="10" pos:column="21">_count</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">private</specifier> <name pos:line="11" pos:column="17">int</name></type> <name pos:line="11" pos:column="21">_sampleSize</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">private</specifier> <name pos:line="12" pos:column="17">double</name></type> <name pos:line="12" pos:column="24">_value</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="14" pos:column="9">public</specifier> <name pos:line="14" pos:column="16">Statistic</name><parameter_list pos:line="14" pos:column="25">(<param><decl><type><name pos:line="14" pos:column="26">string</name></type> <name pos:line="14" pos:column="33">name</name></decl></param>, <param><decl><type><name pos:line="14" pos:column="39">int</name></type> <name pos:line="14" pos:column="43">sampleSize</name></decl></param>)</parameter_list> <block pos:line="14" pos:column="55">{
            <expr_stmt><expr><name><name pos:line="15" pos:column="13">this</name><op:operator pos:line="15" pos:column="17">.</op:operator><name pos:line="15" pos:column="18">_count</name></name> <op:operator pos:line="15" pos:column="25">=</op:operator> <lit:literal type="number" pos:line="15" pos:column="27">0</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="16" pos:column="13">this</name><op:operator pos:line="16" pos:column="17">.</op:operator><name pos:line="16" pos:column="18">SampleSize</name></name> <op:operator pos:line="16" pos:column="29">=</op:operator> <name pos:line="16" pos:column="31">sampleSize</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="17" pos:column="13">this</name><op:operator pos:line="17" pos:column="17">.</op:operator><name pos:line="17" pos:column="18">Name</name></name> <op:operator pos:line="17" pos:column="23">=</op:operator> <name pos:line="17" pos:column="25">name</name></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">public</specifier> <specifier pos:line="20" pos:column="16">event</specifier> <name pos:line="20" pos:column="22">PropertyChangedEventHandler</name></type> <name pos:line="20" pos:column="50">PropertyChanged</name></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="22" pos:column="9">public</specifier> <name pos:line="22" pos:column="16">int</name></type> <name pos:line="22" pos:column="20">Count</name> <block pos:line="22" pos:column="26">{
            <function><name pos:line="23" pos:column="13">get</name> <block pos:line="23" pos:column="17">{ <return pos:line="23" pos:column="19">return <expr><name><name pos:line="23" pos:column="26">this</name><op:operator pos:line="23" pos:column="30">.</op:operator><name pos:line="23" pos:column="31">_count</name></name></expr>;</return> }</block></function>
            <function><name pos:line="24" pos:column="13">set</name> <block pos:line="24" pos:column="17">{
                <if pos:line="25" pos:column="17">if<condition pos:line="25" pos:column="19">(<expr><name pos:line="25" pos:column="20">value</name> <op:operator pos:line="25" pos:column="26">!=</op:operator> <name pos:line="25" pos:column="29">_count</name></expr>)</condition><then pos:line="25" pos:column="36"> <block pos:line="25" pos:column="37">{
                    <expr_stmt><expr><name pos:line="26" pos:column="21">_count</name> <op:operator pos:line="26" pos:column="28">=</op:operator> <name pos:line="26" pos:column="30">value</name></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="27" pos:column="21">OnPropertyChanged</name><argument_list pos:line="27" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="27" pos:column="39">"Value"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="32" pos:column="9">public</specifier> <name pos:line="32" pos:column="16">string</name></type> <name pos:line="32" pos:column="23">Name</name> <block pos:line="32" pos:column="28">{ <function_decl><name pos:line="32" pos:column="30">get</name>;</function_decl> <function_decl><specifier pos:line="32" pos:column="35">private</specifier> <name pos:line="32" pos:column="43">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="34" pos:column="9">public</specifier> <name pos:line="34" pos:column="16">int</name></type> <name pos:line="34" pos:column="20">SampleSize</name> <block pos:line="34" pos:column="31">{
            <function><name pos:line="35" pos:column="13">get</name> <block pos:line="35" pos:column="17">{ <return pos:line="35" pos:column="19">return <expr><name><name pos:line="35" pos:column="26">this</name><op:operator pos:line="35" pos:column="30">.</op:operator><name pos:line="35" pos:column="31">_sampleSize</name></name></expr>;</return> }</block></function>
            <function><name pos:line="36" pos:column="13">set</name> <block pos:line="36" pos:column="17">{
                <if pos:line="37" pos:column="17">if<condition pos:line="37" pos:column="19">(<expr><name pos:line="37" pos:column="20">value</name> <op:operator pos:line="37" pos:column="26">!=</op:operator> <name pos:line="37" pos:column="29">_sampleSize</name></expr>)</condition><then pos:line="37" pos:column="41"> <block pos:line="37" pos:column="42">{
                    <expr_stmt><expr><name pos:line="38" pos:column="21">_sampleSize</name> <op:operator pos:line="38" pos:column="33">=</op:operator> <name pos:line="38" pos:column="35">value</name></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="39" pos:column="21">OnPropertyChanged</name><argument_list pos:line="39" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="39" pos:column="39">"Value"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="44" pos:column="9">public</specifier> <name pos:line="44" pos:column="16">double</name></type> <name pos:line="44" pos:column="23">Value</name> <block pos:line="44" pos:column="29">{
            <function><name pos:line="45" pos:column="13">get</name> <block pos:line="45" pos:column="17">{
                <return pos:line="46" pos:column="17">return <expr><name pos:line="46" pos:column="24">_sampleSize</name> <op:operator pos:line="46" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="46" pos:column="39">0</lit:literal> <op:operator pos:line="46" pos:column="41">?</op:operator> <lit:literal type="number" pos:line="46" pos:column="43">0</lit:literal> <op:operator pos:line="46" pos:column="45">:</op:operator> <op:operator pos:line="46" pos:column="47">(</op:operator><name pos:line="46" pos:column="48">double</name><op:operator pos:line="46" pos:column="54">)</op:operator> <name pos:line="46" pos:column="56">Count</name> <op:operator pos:line="46" pos:column="62">/</op:operator> <op:operator pos:line="46" pos:column="64">(</op:operator><name pos:line="46" pos:column="65">double</name><op:operator pos:line="46" pos:column="71">)</op:operator> <name pos:line="46" pos:column="73">SampleSize</name> <op:operator pos:line="46" pos:column="84">*</op:operator> <lit:literal type="number" pos:line="46" pos:column="86">100.0</lit:literal></expr>;</return>
            }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="50" pos:column="9">public</specifier> <specifier pos:line="50" pos:column="16">static</specifier> <name pos:line="50" pos:column="23">bool</name><type:modifier pos:line="50" pos:column="27">?</type:modifier></type> <name pos:line="50" pos:column="29">GetPropertyValue</name><parameter_list pos:line="50" pos:column="45">(<param><decl><type><name pos:line="50" pos:column="46">object</name></type> <name pos:line="50" pos:column="53">source</name></decl></param>, <param><decl><type><name pos:line="50" pos:column="61">string</name></type> <name pos:line="50" pos:column="68">propertyName</name></decl></param>)</parameter_list> <block pos:line="50" pos:column="82">{
            <decl_stmt><decl><type><name pos:line="51" pos:column="13">var</name></type> <name pos:line="51" pos:column="17">type</name> <init pos:line="51" pos:column="22">= <expr><call><name><name pos:line="51" pos:column="24">source</name><op:operator pos:line="51" pos:column="30">.</op:operator><name pos:line="51" pos:column="31">GetType</name></name><argument_list pos:line="51" pos:column="38">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="52" pos:column="13">if<condition pos:line="52" pos:column="15">(<expr><name pos:line="52" pos:column="16">type</name> <op:operator pos:line="52" pos:column="21">!=</op:operator> <name pos:line="52" pos:column="24">null</name></expr>)</condition><then pos:line="52" pos:column="29"> <block pos:line="52" pos:column="30">{
                <decl_stmt><decl><type><name pos:line="53" pos:column="17">var</name></type> <name pos:line="53" pos:column="21">property</name> <init pos:line="53" pos:column="30">= <expr><call><name><name pos:line="53" pos:column="32">type</name><op:operator pos:line="53" pos:column="36">.</op:operator><name pos:line="53" pos:column="37">GetProperty</name></name><argument_list pos:line="53" pos:column="48">(<argument><expr><name pos:line="53" pos:column="49">propertyName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="54" pos:column="17">if<condition pos:line="54" pos:column="19">(<expr><name pos:line="54" pos:column="20">property</name> <op:operator pos:line="54" pos:column="29">!=</op:operator> <name pos:line="54" pos:column="32">null</name></expr>)</condition><then pos:line="54" pos:column="37"> <block pos:line="54" pos:column="38">{
                    <return pos:line="55" pos:column="21">return <expr><call><name><name pos:line="55" pos:column="28">property</name><op:operator pos:line="55" pos:column="36">.</op:operator><name pos:line="55" pos:column="37">GetValue</name></name><argument_list pos:line="55" pos:column="45">(<argument><expr><name pos:line="55" pos:column="46">source</name></expr></argument>, <argument><expr><name pos:line="55" pos:column="54">null</name></expr></argument>)</argument_list></call> <op:operator pos:line="55" pos:column="60">as</op:operator> <name pos:line="55" pos:column="63">bool</name><op:operator pos:line="55" pos:column="67">?</op:operator></expr>;</return>
                }</block></then></if>
            }</block></then></if>
            <return pos:line="58" pos:column="13">return <expr><name pos:line="58" pos:column="20">null</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="61" pos:column="9">public</specifier> <name pos:line="61" pos:column="16">void</name></type> <name pos:line="61" pos:column="21">Connect</name><parameter_list pos:line="61" pos:column="28">(<param><decl><type><name pos:line="61" pos:column="29">MethodCallSample</name></type> <name pos:line="61" pos:column="46">sample</name></decl></param>)</parameter_list> <block pos:line="61" pos:column="54">{
            <expr_stmt><expr><name><name pos:line="62" pos:column="13">sample</name><op:operator pos:line="62" pos:column="19">.</op:operator><name pos:line="62" pos:column="20">PropertyChanged</name></name> <op:operator pos:line="62" pos:column="36">+=</op:operator> <name pos:line="62" pos:column="39">sample_PropertyChanged</name></expr>;</expr_stmt>
            <foreach pos:line="63" pos:column="13">foreach(<init><decl><type><name pos:line="63" pos:column="21">var</name></type> <name pos:line="63" pos:column="25">call</name> <range pos:line="63" pos:column="30">in <expr><name><name pos:line="63" pos:column="33">sample</name><op:operator pos:line="63" pos:column="39">.</op:operator><name pos:line="63" pos:column="40">CallSample</name></name></expr></range></decl></init>) <block pos:line="63" pos:column="52">{
                <expr_stmt><expr><name><name pos:line="64" pos:column="17">call</name><op:operator pos:line="64" pos:column="21">.</op:operator><name pos:line="64" pos:column="22">PropertyChanged</name></name> <op:operator pos:line="64" pos:column="38">+=</op:operator> <name pos:line="64" pos:column="41">call_PropertyChanged</name></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="68" pos:column="9">public</specifier> <specifier pos:line="68" pos:column="16">override</specifier> <name pos:line="68" pos:column="25">string</name></type> <name pos:line="68" pos:column="32">ToString</name><parameter_list pos:line="68" pos:column="40">()</parameter_list> <block pos:line="68" pos:column="43">{
            <return pos:line="69" pos:column="13">return <expr><call><name><name pos:line="69" pos:column="20">this</name><op:operator pos:line="69" pos:column="24">.</op:operator><name pos:line="69" pos:column="25">Value</name><op:operator pos:line="69" pos:column="30">.</op:operator><name pos:line="69" pos:column="31">ToString</name></name><argument_list pos:line="69" pos:column="39">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="72" pos:column="9">protected</specifier> <name pos:line="72" pos:column="19">void</name></type> <name pos:line="72" pos:column="24">OnPropertyChanged</name><parameter_list pos:line="72" pos:column="41">(<param><decl><type><name pos:line="72" pos:column="42">string</name></type> <name pos:line="72" pos:column="49">name</name></decl></param>)</parameter_list> <block pos:line="72" pos:column="55">{
            <decl_stmt><decl><type><name pos:line="73" pos:column="13">PropertyChangedEventHandler</name></type> <name pos:line="73" pos:column="41">handler</name> <init pos:line="73" pos:column="49">= <expr><name pos:line="73" pos:column="51">PropertyChanged</name></expr></init></decl>;</decl_stmt>
            <if pos:line="74" pos:column="13">if<condition pos:line="74" pos:column="15">(<expr><name pos:line="74" pos:column="16">handler</name> <op:operator pos:line="74" pos:column="24">!=</op:operator> <name pos:line="74" pos:column="27">null</name></expr>)</condition><then pos:line="74" pos:column="32"> <block pos:line="74" pos:column="33">{
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">handler</name><argument_list pos:line="75" pos:column="24">(<argument><expr><name pos:line="75" pos:column="25">this</name></expr></argument>, <argument><expr><op:operator pos:line="75" pos:column="31">new</op:operator> <call><name pos:line="75" pos:column="35">PropertyChangedEventArgs</name><argument_list pos:line="75" pos:column="59">(<argument><expr><name pos:line="75" pos:column="60">name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="79" pos:column="9">private</specifier> <name pos:line="79" pos:column="17">void</name></type> <name pos:line="79" pos:column="22">call_PropertyChanged</name><parameter_list pos:line="79" pos:column="42">(<param><decl><type><name pos:line="79" pos:column="43">object</name></type> <name pos:line="79" pos:column="50">sender</name></decl></param>, <param><decl><type><name pos:line="79" pos:column="58">PropertyChangedEventArgs</name></type> <name pos:line="79" pos:column="83">e</name></decl></param>)</parameter_list> <block pos:line="79" pos:column="86">{
            <if pos:line="80" pos:column="13">if<condition pos:line="80" pos:column="15">(<expr><name><name pos:line="80" pos:column="16">e</name><op:operator pos:line="80" pos:column="17">.</op:operator><name pos:line="80" pos:column="18">PropertyName</name></name> <op:operator pos:line="80" pos:column="31">==</op:operator> <name><name pos:line="80" pos:column="34">this</name><op:operator pos:line="80" pos:column="38">.</op:operator><name pos:line="80" pos:column="39">Name</name></name></expr>)</condition><then pos:line="80" pos:column="44"> <block pos:line="80" pos:column="45">{
                <decl_stmt><decl><type><name pos:line="81" pos:column="17">var</name></type> <name pos:line="81" pos:column="21">newValue</name> <init pos:line="81" pos:column="30">= <expr><call><name pos:line="81" pos:column="32">GetPropertyValue</name><argument_list pos:line="81" pos:column="48">(<argument><expr><name pos:line="81" pos:column="49">sender</name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="57">this</name><op:operator pos:line="81" pos:column="61">.</op:operator><name pos:line="81" pos:column="62">Name</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="82" pos:column="17">if<condition pos:line="82" pos:column="19">(<expr><name pos:line="82" pos:column="20">newValue</name> <op:operator pos:line="82" pos:column="29">!=</op:operator> <name pos:line="82" pos:column="32">null</name></expr>)</condition><then pos:line="82" pos:column="37"> <block pos:line="82" pos:column="38">{
                    <expr_stmt><expr><name><name pos:line="83" pos:column="21">this</name><op:operator pos:line="83" pos:column="25">.</op:operator><name pos:line="83" pos:column="26">Count</name></name> <op:operator pos:line="83" pos:column="32">+=</op:operator> <op:operator pos:line="83" pos:column="35">(</op:operator><name pos:line="83" pos:column="36">newValue</name> <op:operator pos:line="83" pos:column="45">==</op:operator> <lit:literal type="boolean" pos:line="83" pos:column="48">true</lit:literal> <op:operator pos:line="83" pos:column="53">?</op:operator> <lit:literal type="number" pos:line="83" pos:column="55">1</lit:literal> <op:operator pos:line="83" pos:column="57">:</op:operator> <op:operator pos:line="83" pos:column="59">-</op:operator><lit:literal type="number" pos:line="83" pos:column="60">1</lit:literal><op:operator pos:line="83" pos:column="61">)</op:operator></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="88" pos:column="9">private</specifier> <name pos:line="88" pos:column="17">void</name></type> <name pos:line="88" pos:column="22">sample_PropertyChanged</name><parameter_list pos:line="88" pos:column="44">(<param><decl><type><name pos:line="88" pos:column="45">object</name></type> <name pos:line="88" pos:column="52">sender</name></decl></param>, <param><decl><type><name pos:line="88" pos:column="60">PropertyChangedEventArgs</name></type> <name pos:line="88" pos:column="85">e</name></decl></param>)</parameter_list> <block pos:line="88" pos:column="88">{
            <if pos:line="89" pos:column="13">if<condition pos:line="89" pos:column="15">(<expr><name><name pos:line="89" pos:column="16">e</name><op:operator pos:line="89" pos:column="17">.</op:operator><name pos:line="89" pos:column="18">PropertyName</name></name> <op:operator pos:line="89" pos:column="31">==</op:operator> <lit:literal type="string" pos:line="89" pos:column="34">"SampleSize"</lit:literal></expr>)</condition><then pos:line="89" pos:column="47"> <block pos:line="89" pos:column="48">{
                <decl_stmt><decl><type><name pos:line="90" pos:column="17">var</name></type> <name pos:line="90" pos:column="21">sample</name> <init pos:line="90" pos:column="28">= <expr><op:operator pos:line="90" pos:column="30">(</op:operator><name pos:line="90" pos:column="31">sender</name> <op:operator pos:line="90" pos:column="38">as</op:operator> <name pos:line="90" pos:column="41">MethodCallSample</name><op:operator pos:line="90" pos:column="57">)</op:operator></expr></init></decl>;</decl_stmt>
                <if pos:line="91" pos:column="17">if<condition pos:line="91" pos:column="19">(<expr><name pos:line="91" pos:column="20">sample</name> <op:operator pos:line="91" pos:column="27">!=</op:operator> <name pos:line="91" pos:column="30">null</name></expr>)</condition><then pos:line="91" pos:column="35"> <block pos:line="91" pos:column="36">{
                    <expr_stmt><expr><name><name pos:line="92" pos:column="21">this</name><op:operator pos:line="92" pos:column="25">.</op:operator><name pos:line="92" pos:column="26">SampleSize</name></name> <op:operator pos:line="92" pos:column="37">=</op:operator> <name><name pos:line="92" pos:column="39">sample</name><op:operator pos:line="92" pos:column="45">.</op:operator><name pos:line="92" pos:column="46">SampleSize</name></name></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
