<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\ABB.SrcML.Data\DataArchive.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2014 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Vinay Augustine (ABB Group) - Initial implementation
 *****************************************************************************/</comment>

<using pos:line="12" pos:column="1">using <name pos:line="12" pos:column="7">System</name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Collections</name><op:operator pos:line="13" pos:column="25">.</op:operator><name pos:line="13" pos:column="26">Generic</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">IO</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">Linq</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Text</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">System</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Threading</name><op:operator pos:line="17" pos:column="23">.</op:operator><name pos:line="17" pos:column="24">Tasks</name></name>;</using>

<namespace pos:line="19" pos:column="1">namespace <name><name pos:line="19" pos:column="11">ABB</name><op:operator pos:line="19" pos:column="14">.</op:operator><name pos:line="19" pos:column="15">SrcML</name><op:operator pos:line="19" pos:column="20">.</op:operator><name pos:line="19" pos:column="21">Data</name></name> <block pos:line="19" pos:column="26">{
    <comment type="line" pos:line="20" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="21" pos:column="5">/// The data archive uses a &lt;see cref="MonitoredArchive"&gt;SrcML Archive&lt;/see&gt; to generate and store SrcML Data for each &lt;see cref="SrcMLArchive.FileUnits"&gt;file unit&lt;/see&gt;.</comment>
    <comment type="line" pos:line="22" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="23" pos:column="5">public</specifier> class <name pos:line="23" pos:column="18">DataArchive</name> <super pos:line="23" pos:column="30">: <name><name pos:line="23" pos:column="32">GeneratorArchive</name><argument_list pos:line="23" pos:column="48">&lt;<argument><name pos:line="23" pos:column="49">DataGenerator</name></argument>&gt;</argument_list></name></super> <block pos:line="23" pos:column="64">{
        <comment type="line" pos:line="24" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="25" pos:column="9">/// The default directory to store the data contents in</comment>
        <comment type="line" pos:line="26" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="27" pos:column="9">public</specifier> <specifier pos:line="27" pos:column="16">const</specifier> <name pos:line="27" pos:column="22">string</name></type> <name pos:line="27" pos:column="29">DEFAULT_ARCHIVE_DIRECTORY</name> <init pos:line="27" pos:column="55">= <expr><lit:literal type="string" pos:line="27" pos:column="57">"data"</lit:literal></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:line="29" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="30" pos:column="9">/// The srcML archive to monitor for changes</comment>
        <comment type="line" pos:line="31" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="32" pos:column="9">public</specifier> <name pos:line="32" pos:column="16">SrcMLArchive</name></type> <name pos:line="32" pos:column="29">MonitoredArchive</name> <block pos:line="32" pos:column="46">{ <function_decl><name pos:line="32" pos:column="48">get</name>;</function_decl> <function_decl><name pos:line="32" pos:column="53">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="34" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="35" pos:column="9">/// Creates a data archive in &lt;see cref="DEFAULT_ARCHIVE_DIRECTORY"/&gt; within &lt;see cref="Environment.CurrentDirectory"/&gt; with no &lt;see cref="MonitoredArchive"/&gt;.</comment>
        <comment type="line" pos:line="36" pos:column="9">/// &lt;/summary&gt;</comment>
        <constructor><specifier pos:line="37" pos:column="9">public</specifier> <name pos:line="37" pos:column="16">DataArchive</name><parameter_list pos:line="37" pos:column="27">()</parameter_list> <member_list pos:line="37" pos:column="30">: <call><name pos:line="37" pos:column="32">this</name><argument_list pos:line="37" pos:column="36">(<argument><expr><name><name pos:line="37" pos:column="37">Environment</name><op:operator pos:line="37" pos:column="48">.</op:operator><name pos:line="37" pos:column="49">CurrentDirectory</name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="67">null</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="37" pos:column="73">true</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="37" pos:column="79">{ }</block></constructor>

        <comment type="line" pos:line="39" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="40" pos:column="9">/// Creates a new data archive</comment>
        <comment type="line" pos:line="41" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="42" pos:column="9">/// &lt;param name="baseDirectory"&gt;The base directory&lt;/param&gt;</comment>
        <comment type="line" pos:line="43" pos:column="9">/// /// &lt;param name="monitoredArchive"&gt;The srcML archive to monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="44" pos:column="9">/// &lt;param name="useExistingData"&gt;If true, any existing data files in &lt;see cref="AbstractArchive.ArchivePath"/&gt; will be used.&lt;/param&gt;</comment>
        
        <constructor><specifier pos:line="46" pos:column="9">public</specifier> <name pos:line="46" pos:column="16">DataArchive</name><parameter_list pos:line="46" pos:column="27">(<param><decl><type><name pos:line="46" pos:column="28">string</name></type> <name pos:line="46" pos:column="35">baseDirectory</name></decl></param>, <param><decl><type><name pos:line="46" pos:column="50">SrcMLArchive</name></type> <name pos:line="46" pos:column="63">monitoredArchive</name></decl></param>, <param><decl><type><name pos:line="46" pos:column="81">bool</name></type> <name pos:line="46" pos:column="86">useExistingData</name></decl></param>)</parameter_list>
            <member_list pos:line="47" pos:column="13">: <call><name pos:line="47" pos:column="15">this</name><argument_list pos:line="47" pos:column="19">(<argument><expr><name pos:line="47" pos:column="20">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="47" pos:column="35">DEFAULT_ARCHIVE_DIRECTORY</name></expr></argument>, <argument><expr><name pos:line="47" pos:column="62">useExistingData</name></expr></argument>, <argument><expr><name pos:line="47" pos:column="79">monitoredArchive</name></expr></argument>, <argument><expr><op:operator pos:line="47" pos:column="97">new</op:operator> <call><name pos:line="47" pos:column="101">DataGenerator</name><argument_list pos:line="47" pos:column="114">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="47" pos:column="118">new</op:operator> <call><name pos:line="47" pos:column="122">DataFileNameMapping</name><argument_list pos:line="47" pos:column="141">(<argument><expr><call><name><name pos:line="47" pos:column="142">Path</name><op:operator pos:line="47" pos:column="146">.</op:operator><name pos:line="47" pos:column="147">Combine</name></name><argument_list pos:line="47" pos:column="154">(<argument><expr><name pos:line="47" pos:column="155">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="47" pos:column="170">DEFAULT_ARCHIVE_DIRECTORY</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="199">TaskScheduler</name><op:operator pos:line="47" pos:column="212">.</op:operator><name pos:line="47" pos:column="213">Default</name></name></expr></argument>)</argument_list></call> </member_list><block pos:line="47" pos:column="222">{ }</block></constructor>

        <comment type="line" pos:line="49" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="50" pos:column="9">/// Creates a new data archive</comment>
        <comment type="line" pos:line="51" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="52" pos:column="9">/// &lt;param name="baseDirectory"&gt;The base directory&lt;/param&gt;</comment>
        <comment type="line" pos:line="53" pos:column="9">/// &lt;param name="monitoredArchive"&gt;The srcML archive to monitor&lt;/param&gt;</comment>
        <constructor><specifier pos:line="54" pos:column="9">public</specifier> <name pos:line="54" pos:column="16">DataArchive</name><parameter_list pos:line="54" pos:column="27">(<param><decl><type><name pos:line="54" pos:column="28">string</name></type> <name pos:line="54" pos:column="35">baseDirectory</name></decl></param>, <param><decl><type><name pos:line="54" pos:column="50">SrcMLArchive</name></type> <name pos:line="54" pos:column="63">monitoredArchive</name></decl></param>)</parameter_list>
            <member_list pos:line="55" pos:column="13">: <call><name pos:line="55" pos:column="15">this</name><argument_list pos:line="55" pos:column="19">(<argument><expr><name pos:line="55" pos:column="20">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="55" pos:column="35">DEFAULT_ARCHIVE_DIRECTORY</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="55" pos:column="62">true</lit:literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="68">monitoredArchive</name></expr></argument>, <argument><expr><op:operator pos:line="55" pos:column="86">new</op:operator> <call><name pos:line="55" pos:column="90">DataGenerator</name><argument_list pos:line="55" pos:column="103">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="55" pos:column="107">new</op:operator> <call><name pos:line="55" pos:column="111">DataFileNameMapping</name><argument_list pos:line="55" pos:column="130">(<argument><expr><call><name><name pos:line="55" pos:column="131">Path</name><op:operator pos:line="55" pos:column="135">.</op:operator><name pos:line="55" pos:column="136">Combine</name></name><argument_list pos:line="55" pos:column="143">(<argument><expr><name pos:line="55" pos:column="144">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="55" pos:column="159">DEFAULT_ARCHIVE_DIRECTORY</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="188">TaskScheduler</name><op:operator pos:line="55" pos:column="201">.</op:operator><name pos:line="55" pos:column="202">Default</name></name></expr></argument>)</argument_list></call> </member_list><block pos:line="55" pos:column="211">{ }</block></constructor>

        <comment type="line" pos:line="57" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="58" pos:column="9">/// Creates a new data archive</comment>
        <comment type="line" pos:line="59" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="60" pos:column="9">/// &lt;param name="baseDirectory"&gt;The base directory&lt;/param&gt;</comment>
        <comment type="line" pos:line="61" pos:column="9">/// &lt;param name="monitoredArchive"&gt;The srcML archive to monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="62" pos:column="9">/// &lt;param name="scheduler"&gt;The task scheduler to use for asynchronous tasks&lt;/param&gt;</comment>
        <constructor><specifier pos:line="63" pos:column="9">public</specifier> <name pos:line="63" pos:column="16">DataArchive</name><parameter_list pos:line="63" pos:column="27">(<param><decl><type><name pos:line="63" pos:column="28">string</name></type> <name pos:line="63" pos:column="35">baseDirectory</name></decl></param>, <param><decl><type><name pos:line="63" pos:column="50">SrcMLArchive</name></type> <name pos:line="63" pos:column="63">monitoredArchive</name></decl></param>, <param><decl><type><name pos:line="63" pos:column="81">TaskScheduler</name></type> <name pos:line="63" pos:column="95">scheduler</name></decl></param>)</parameter_list>
            <member_list pos:line="64" pos:column="13">: <call><name pos:line="64" pos:column="15">this</name><argument_list pos:line="64" pos:column="19">(<argument><expr><name pos:line="64" pos:column="20">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="64" pos:column="35">DEFAULT_ARCHIVE_DIRECTORY</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="64" pos:column="62">true</lit:literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="68">monitoredArchive</name></expr></argument>, <argument><expr><op:operator pos:line="64" pos:column="86">new</op:operator> <call><name pos:line="64" pos:column="90">DataGenerator</name><argument_list pos:line="64" pos:column="103">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="64" pos:column="107">new</op:operator> <call><name pos:line="64" pos:column="111">DataFileNameMapping</name><argument_list pos:line="64" pos:column="130">(<argument><expr><call><name><name pos:line="64" pos:column="131">Path</name><op:operator pos:line="64" pos:column="135">.</op:operator><name pos:line="64" pos:column="136">Combine</name></name><argument_list pos:line="64" pos:column="143">(<argument><expr><name pos:line="64" pos:column="144">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="64" pos:column="159">DEFAULT_ARCHIVE_DIRECTORY</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="64" pos:column="188">scheduler</name></expr></argument>)</argument_list></call> </member_list><block pos:line="64" pos:column="199">{ }</block></constructor>

        <comment type="line" pos:line="66" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="67" pos:column="9">/// Creates a new data archive</comment>
        <comment type="line" pos:line="68" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="69" pos:column="9">/// &lt;param name="baseDirectory"&gt;The base directory&lt;/param&gt;</comment>
        <comment type="line" pos:line="70" pos:column="9">/// &lt;param name="dataDirectory"&gt;the directory to store the data files in. This will be created as a subdirectory of &lt;paramref name="baseDirectory"/&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="71" pos:column="9">/// &lt;param name="useExistingData"&gt;If true, any existing data files in &lt;see cref="AbstractArchive.ArchivePath"/&gt; will be used.&lt;/param&gt;</comment>
        <comment type="line" pos:line="72" pos:column="9">/// &lt;param name="monitoredArchive"&gt;The srcML archive to monitor&lt;/param&gt;</comment>
        <constructor><specifier pos:line="73" pos:column="9">public</specifier> <name pos:line="73" pos:column="16">DataArchive</name><parameter_list pos:line="73" pos:column="27">(<param><decl><type><name pos:line="73" pos:column="28">string</name></type> <name pos:line="73" pos:column="35">baseDirectory</name></decl></param>, <param><decl><type><name pos:line="73" pos:column="50">string</name></type> <name pos:line="73" pos:column="57">dataDirectory</name></decl></param>, <param><decl><type><name pos:line="73" pos:column="72">bool</name></type> <name pos:line="73" pos:column="77">useExistingData</name></decl></param>, <param><decl><type><name pos:line="73" pos:column="94">SrcMLArchive</name></type> <name pos:line="73" pos:column="107">monitoredArchive</name></decl></param>)</parameter_list>
            <member_list pos:line="74" pos:column="13">: <call><name pos:line="74" pos:column="15">this</name><argument_list pos:line="74" pos:column="19">(<argument><expr><name pos:line="74" pos:column="20">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="74" pos:column="35">dataDirectory</name></expr></argument>, <argument><expr><name pos:line="74" pos:column="50">useExistingData</name></expr></argument>, <argument><expr><name pos:line="74" pos:column="67">monitoredArchive</name></expr></argument>, <argument><expr><op:operator pos:line="74" pos:column="85">new</op:operator> <call><name pos:line="74" pos:column="89">DataGenerator</name><argument_list pos:line="74" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="74" pos:column="106">new</op:operator> <call><name pos:line="74" pos:column="110">DataFileNameMapping</name><argument_list pos:line="74" pos:column="129">(<argument><expr><call><name><name pos:line="74" pos:column="130">Path</name><op:operator pos:line="74" pos:column="134">.</op:operator><name pos:line="74" pos:column="135">Combine</name></name><argument_list pos:line="74" pos:column="142">(<argument><expr><name pos:line="74" pos:column="143">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="74" pos:column="158">dataDirectory</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="175">TaskScheduler</name><op:operator pos:line="74" pos:column="188">.</op:operator><name pos:line="74" pos:column="189">Default</name></name></expr></argument>)</argument_list></call> </member_list><block pos:line="74" pos:column="198">{ }</block></constructor>

        <comment type="line" pos:line="76" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="77" pos:column="9">/// Creates a new data archive</comment>
        <comment type="line" pos:line="78" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="79" pos:column="9">/// &lt;param name="baseDirectory"&gt;The base directory&lt;/param&gt;</comment>
        <comment type="line" pos:line="80" pos:column="9">/// &lt;param name="dataDirectory"&gt;the directory to store the data files in. This will be created as a subdirectory of &lt;paramref name="baseDirectory"/&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="81" pos:column="9">/// &lt;param name="useExistingData"&gt;If true, any existing data files in &lt;see cref="AbstractArchive.ArchivePath"/&gt; will be used.&lt;/param&gt;</comment>
        <comment type="line" pos:line="82" pos:column="9">/// &lt;param name="generator"&gt;The data generator to use for this archive&lt;/param&gt;</comment>
        <comment type="line" pos:line="83" pos:column="9">/// &lt;param name="monitoredArchive"&gt;The srcML archive to monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="84" pos:column="9">/// &lt;param name="mapping"&gt;the &lt;see cref="AbstractFileNameMapping"/&gt; to use to map source paths to data file paths&lt;/param&gt;</comment>
        <comment type="line" pos:line="85" pos:column="9">/// &lt;param name="scheduler"&gt;The task scheduler to use for asynchronous tasks&lt;/param&gt;</comment>
        <constructor><specifier pos:line="86" pos:column="9">public</specifier> <name pos:line="86" pos:column="16">DataArchive</name><parameter_list pos:line="86" pos:column="27">(<param><decl><type><name pos:line="86" pos:column="28">string</name></type> <name pos:line="86" pos:column="35">baseDirectory</name></decl></param>, <param><decl><type><name pos:line="86" pos:column="50">string</name></type> <name pos:line="86" pos:column="57">dataDirectory</name></decl></param>, <param><decl><type><name pos:line="86" pos:column="72">bool</name></type> <name pos:line="86" pos:column="77">useExistingData</name></decl></param>, <param><decl><type><name pos:line="86" pos:column="94">SrcMLArchive</name></type> <name pos:line="86" pos:column="107">monitoredArchive</name></decl></param>, <param><decl><type><name pos:line="86" pos:column="125">DataGenerator</name></type> <name pos:line="86" pos:column="139">generator</name></decl></param>, <param><decl><type><name pos:line="86" pos:column="150">AbstractFileNameMapping</name></type> <name pos:line="86" pos:column="174">mapping</name></decl></param>, <param><decl><type><name pos:line="86" pos:column="183">TaskScheduler</name></type> <name pos:line="86" pos:column="197">scheduler</name></decl></param>)</parameter_list>
            <member_list pos:line="87" pos:column="13">: <call><name pos:line="87" pos:column="15">base</name><argument_list pos:line="87" pos:column="19">(<argument><expr><name pos:line="87" pos:column="20">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="87" pos:column="35">dataDirectory</name></expr></argument>, <argument><expr><name pos:line="87" pos:column="50">useExistingData</name></expr></argument>, <argument><expr><name pos:line="87" pos:column="67">generator</name></expr></argument>, <argument><expr><name pos:line="87" pos:column="78">mapping</name></expr></argument>, <argument><expr><name pos:line="87" pos:column="87">scheduler</name></expr></argument>)</argument_list></call> </member_list><block pos:line="87" pos:column="98">{
            <expr_stmt><expr><name><name pos:line="88" pos:column="13">this</name><op:operator pos:line="88" pos:column="17">.</op:operator><name pos:line="88" pos:column="18">MonitoredArchive</name></name> <op:operator pos:line="88" pos:column="35">=</op:operator> <name pos:line="88" pos:column="37">monitoredArchive</name></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="91" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="92" pos:column="9">/// Gets the stored data for &lt;paramref name="sourceFileName"/&gt;</comment>
        <comment type="line" pos:line="93" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="94" pos:column="9">/// &lt;param name="sourceFileName"&gt;The source file to get data for&lt;/param&gt;</comment>
        <comment type="line" pos:line="95" pos:column="9">/// &lt;returns&gt;the namespace definition for &lt;paramref name="sourceFileName"/&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="96" pos:column="9">public</specifier> <specifier pos:line="96" pos:column="16">virtual</specifier> <name pos:line="96" pos:column="24">NamespaceDefinition</name></type> <name pos:line="96" pos:column="44">GetData</name><parameter_list pos:line="96" pos:column="51">(<param><decl><type><name pos:line="96" pos:column="52">string</name></type> <name pos:line="96" pos:column="59">sourceFileName</name></decl></param>)</parameter_list> <block pos:line="96" pos:column="75">{
            <if pos:line="97" pos:column="13">if<condition pos:line="97" pos:column="15">(<expr><op:operator pos:line="97" pos:column="16">!</op:operator><call><name><name pos:line="97" pos:column="17">File</name><op:operator pos:line="97" pos:column="21">.</op:operator><name pos:line="97" pos:column="22">Exists</name></name><argument_list pos:line="97" pos:column="28">(<argument><expr><name pos:line="97" pos:column="29">sourceFileName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="97" pos:column="45"> <block pos:line="97" pos:column="46">{
                <return pos:line="98" pos:column="17">return <expr><name pos:line="98" pos:column="24">null</name></expr>;</return>
            }</block></then> <else pos:line="99" pos:column="15">else <block pos:line="99" pos:column="20">{
                <decl_stmt><decl><type><name pos:line="100" pos:column="17">string</name></type> <name pos:line="100" pos:column="24">xmlPath</name> <init pos:line="100" pos:column="32">= <expr><call><name pos:line="100" pos:column="34">GetArchivePath</name><argument_list pos:line="100" pos:column="48">(<argument><expr><name pos:line="100" pos:column="49">sourceFileName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <return pos:line="102" pos:column="17">return <expr><op:operator pos:line="102" pos:column="24">(</op:operator><call><name><name pos:line="102" pos:column="25">File</name><op:operator pos:line="102" pos:column="29">.</op:operator><name pos:line="102" pos:column="30">Exists</name></name><argument_list pos:line="102" pos:column="36">(<argument><expr><name pos:line="102" pos:column="37">xmlPath</name></expr></argument>)</argument_list></call> <op:operator pos:line="102" pos:column="46">?</op:operator> <call><name><name pos:line="102" pos:column="48">XmlSerialization</name><op:operator pos:line="102" pos:column="64">.</op:operator><name pos:line="102" pos:column="65">Load</name></name><argument_list pos:line="102" pos:column="69">(<argument><expr><name pos:line="102" pos:column="70">xmlPath</name></expr></argument>)</argument_list></call> <op:operator pos:line="102" pos:column="79">as</op:operator> <name pos:line="102" pos:column="82">NamespaceDefinition</name> <op:operator pos:line="102" pos:column="102">:</op:operator> <name pos:line="102" pos:column="104">null</name><op:operator pos:line="102" pos:column="108">)</op:operator></expr>;</return>
            }</block></else></if>
        }</block></function>

        <comment type="line" pos:line="106" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="107" pos:column="9">/// Overrides &lt;see cref="GeneratorArchive{TGenerator}.GetInputPath"/&gt; in order to provide a srcML file to the</comment>
        <comment type="line" pos:line="108" pos:column="9">/// &lt;see cref="GeneratorArchive{TGenerator}.Generator"/&gt;. It does this by calling &lt;see cref="GeneratorArchive{TGenerator}.GetArchivePath"/&gt;</comment>
        <comment type="line" pos:line="109" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="110" pos:column="9">/// &lt;param name="sourcePath"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="111" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="112" pos:column="9">protected</specifier> <specifier pos:line="112" pos:column="19">override</specifier> <name pos:line="112" pos:column="28">string</name></type> <name pos:line="112" pos:column="35">GetInputPath</name><parameter_list pos:line="112" pos:column="47">(<param><decl><type><name pos:line="112" pos:column="48">string</name></type> <name pos:line="112" pos:column="55">sourcePath</name></decl></param>)</parameter_list> <block pos:line="112" pos:column="67">{
            <return pos:line="113" pos:column="13">return <expr><call><name><name pos:line="113" pos:column="20">MonitoredArchive</name><op:operator pos:line="113" pos:column="36">.</op:operator><name pos:line="113" pos:column="37">GetArchivePath</name></name><argument_list pos:line="113" pos:column="51">(<argument><expr><name pos:line="113" pos:column="52">sourcePath</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
