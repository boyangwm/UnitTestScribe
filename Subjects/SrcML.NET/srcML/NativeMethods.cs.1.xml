<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\VisualStudio\ABB.SrcML.VisualStudio.SrcMLService.IntegrationTests\IntegrationTest Library\NativeMethods.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/***************************************************************************

Copyright (c) Microsoft Corporation. All rights reserved.
This code is licensed under the Visual Studio SDK license terms.
THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.

***************************************************************************/</comment>

<namespace pos:line="12" pos:column="1">namespace <name><name pos:line="12" pos:column="11">Microsoft</name><op:operator pos:line="12" pos:column="20">.</op:operator><name pos:line="12" pos:column="21">VsSDK</name><op:operator pos:line="12" pos:column="26">.</op:operator><name pos:line="12" pos:column="27">IntegrationTestLibrary</name></name> <block pos:line="12" pos:column="50">{
    <using pos:line="13" pos:column="5">using <name pos:line="13" pos:column="11">System</name>;</using>
    <using pos:line="14" pos:column="5">using <name><name pos:line="14" pos:column="11">System</name><op:operator pos:line="14" pos:column="17">.</op:operator><name pos:line="14" pos:column="18">Collections</name><op:operator pos:line="14" pos:column="29">.</op:operator><name pos:line="14" pos:column="30">Generic</name></name>;</using>
    <using pos:line="15" pos:column="5">using <name><name pos:line="15" pos:column="11">System</name><op:operator pos:line="15" pos:column="17">.</op:operator><name pos:line="15" pos:column="18">Text</name></name>;</using>
    <using pos:line="16" pos:column="5">using <name><name pos:line="16" pos:column="11">System</name><op:operator pos:line="16" pos:column="17">.</op:operator><name pos:line="16" pos:column="18">Runtime</name><op:operator pos:line="16" pos:column="25">.</op:operator><name pos:line="16" pos:column="26">InteropServices</name></name>;</using>
    <using pos:line="17" pos:column="5">using <name><name pos:line="17" pos:column="11">System</name><op:operator pos:line="17" pos:column="17">.</op:operator><name pos:line="17" pos:column="18">Threading</name></name>;</using>
    <using pos:line="18" pos:column="5">using <name><name pos:line="18" pos:column="11">Microsoft</name><op:operator pos:line="18" pos:column="20">.</op:operator><name pos:line="18" pos:column="21">VisualStudio</name><op:operator pos:line="18" pos:column="33">.</op:operator><name pos:line="18" pos:column="34">Shell</name><op:operator pos:line="18" pos:column="39">.</op:operator><name pos:line="18" pos:column="40">Interop</name></name>;</using>

    <comment type="line" pos:line="20" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="21" pos:column="5">/// Defines pinvoked utility methods and internal VS Constants</comment>
    <comment type="line" pos:line="22" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="23" pos:column="5">internal</specifier> <specifier pos:line="23" pos:column="14">static</specifier> class <name pos:line="23" pos:column="27">NativeMethods</name> <block pos:line="23" pos:column="41">{
        <function_decl><type><specifier pos:line="24" pos:column="9">internal</specifier> <specifier pos:line="24" pos:column="18">delegate</specifier> <name pos:line="24" pos:column="27">bool</name></type> <name pos:line="24" pos:column="32">CallBack</name><parameter_list pos:line="24" pos:column="40">(<param><decl><type><name pos:line="24" pos:column="41">IntPtr</name></type> <name pos:line="24" pos:column="48">hwnd</name></decl></param>, <param><decl><type><name pos:line="24" pos:column="54">IntPtr</name></type> <name pos:line="24" pos:column="61">lParam</name></decl></param>)</parameter_list>;</function_decl>

        <comment type="line" pos:line="26" pos:column="9">// Declare two overloaded SendMessage functions</comment>
        <function_decl><type><attribute pos:line="27" pos:column="9">[<expr><call><name pos:line="27" pos:column="10">DllImport</name><argument_list pos:line="27" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="27" pos:column="20">"user32.dll"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="28" pos:column="9">internal</specifier> <specifier pos:line="28" pos:column="18">static</specifier> <specifier pos:line="28" pos:column="25">extern</specifier> <name pos:line="28" pos:column="32">UInt32</name></type> <name pos:line="28" pos:column="39">SendMessage</name><parameter_list pos:line="28" pos:column="50">(<param><decl><type><name pos:line="28" pos:column="51">IntPtr</name></type> <name pos:line="28" pos:column="58">hWnd</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="64">UInt32</name></type> <name pos:line="28" pos:column="71">Msg</name></decl></param>,
            <param><decl><type><name pos:line="29" pos:column="13">UInt32</name></type> <name pos:line="29" pos:column="20">wParam</name></decl></param>, <param><decl><type><name pos:line="29" pos:column="28">IntPtr</name></type> <name pos:line="29" pos:column="35">lParam</name></decl></param>)</parameter_list>;</function_decl>

        <function_decl><type><attribute pos:line="31" pos:column="9">[<expr><call><name pos:line="31" pos:column="10">DllImport</name><argument_list pos:line="31" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="31" pos:column="20">"user32.dll"</lit:literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">CharSet</name> <op:operator pos:line="31" pos:column="42">=</op:operator> <name><name pos:line="31" pos:column="44">System</name><op:operator pos:line="31" pos:column="50">.</op:operator><name pos:line="31" pos:column="51">Runtime</name><op:operator pos:line="31" pos:column="58">.</op:operator><name pos:line="31" pos:column="59">InteropServices</name><op:operator pos:line="31" pos:column="74">.</op:operator><name pos:line="31" pos:column="75">CharSet</name><op:operator pos:line="31" pos:column="82">.</op:operator><name pos:line="31" pos:column="83">Auto</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="32" pos:column="9">internal</specifier> <specifier pos:line="32" pos:column="18">static</specifier> <specifier pos:line="32" pos:column="25">extern</specifier> <name pos:line="32" pos:column="32">bool</name></type> <name pos:line="32" pos:column="37">PeekMessage</name><parameter_list pos:line="32" pos:column="48">(<param><decl><type><attribute pos:line="32" pos:column="49">[<expr><name pos:line="32" pos:column="50">In</name></expr><op:operator pos:line="32" pos:column="52">,</op:operator> <expr><name pos:line="32" pos:column="54">Out</name></expr>]</attribute> <specifier pos:line="32" pos:column="59">ref</specifier> <name><name pos:line="32" pos:column="63">Microsoft</name><op:operator pos:line="32" pos:column="72">.</op:operator><name pos:line="32" pos:column="73">VisualStudio</name><op:operator pos:line="32" pos:column="85">.</op:operator><name pos:line="32" pos:column="86">OLE</name><op:operator pos:line="32" pos:column="89">.</op:operator><name pos:line="32" pos:column="90">Interop</name><op:operator pos:line="32" pos:column="97">.</op:operator><name pos:line="32" pos:column="98">MSG</name></name></type> <name pos:line="32" pos:column="102">msg</name></decl></param>, <param><decl><type><name pos:line="32" pos:column="107">HandleRef</name></type> <name pos:line="32" pos:column="117">hwnd</name></decl></param>, <param><decl><type><name pos:line="32" pos:column="123">int</name></type> <name pos:line="32" pos:column="127">msgMin</name></decl></param>, <param><decl><type><name pos:line="32" pos:column="135">int</name></type> <name pos:line="32" pos:column="139">msgMax</name></decl></param>, <param><decl><type><name pos:line="32" pos:column="147">int</name></type> <name pos:line="32" pos:column="151">remove</name></decl></param>)</parameter_list>;</function_decl>

        <function_decl><type><attribute pos:line="34" pos:column="9">[<expr><call><name pos:line="34" pos:column="10">DllImport</name><argument_list pos:line="34" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="34" pos:column="20">"user32.dll"</lit:literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="34">CharSet</name> <op:operator pos:line="34" pos:column="42">=</op:operator> <name><name pos:line="34" pos:column="44">System</name><op:operator pos:line="34" pos:column="50">.</op:operator><name pos:line="34" pos:column="51">Runtime</name><op:operator pos:line="34" pos:column="58">.</op:operator><name pos:line="34" pos:column="59">InteropServices</name><op:operator pos:line="34" pos:column="74">.</op:operator><name pos:line="34" pos:column="75">CharSet</name><op:operator pos:line="34" pos:column="82">.</op:operator><name pos:line="34" pos:column="83">Auto</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="35" pos:column="9">internal</specifier> <specifier pos:line="35" pos:column="18">static</specifier> <specifier pos:line="35" pos:column="25">extern</specifier> <name pos:line="35" pos:column="32">bool</name></type> <name pos:line="35" pos:column="37">TranslateMessage</name><parameter_list pos:line="35" pos:column="53">(<param><decl><type><attribute pos:line="35" pos:column="54">[<expr><name pos:line="35" pos:column="55">In</name></expr><op:operator pos:line="35" pos:column="57">,</op:operator> <expr><name pos:line="35" pos:column="59">Out</name></expr>]</attribute> <specifier pos:line="35" pos:column="64">ref</specifier> <name><name pos:line="35" pos:column="68">Microsoft</name><op:operator pos:line="35" pos:column="77">.</op:operator><name pos:line="35" pos:column="78">VisualStudio</name><op:operator pos:line="35" pos:column="90">.</op:operator><name pos:line="35" pos:column="91">OLE</name><op:operator pos:line="35" pos:column="94">.</op:operator><name pos:line="35" pos:column="95">Interop</name><op:operator pos:line="35" pos:column="102">.</op:operator><name pos:line="35" pos:column="103">MSG</name></name></type> <name pos:line="35" pos:column="107">msg</name></decl></param>)</parameter_list>;</function_decl>

        <function_decl><type><attribute pos:line="37" pos:column="9">[<expr><call><name pos:line="37" pos:column="10">DllImport</name><argument_list pos:line="37" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="37" pos:column="20">"user32.dll"</lit:literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">CharSet</name> <op:operator pos:line="37" pos:column="42">=</op:operator> <name><name pos:line="37" pos:column="44">System</name><op:operator pos:line="37" pos:column="50">.</op:operator><name pos:line="37" pos:column="51">Runtime</name><op:operator pos:line="37" pos:column="58">.</op:operator><name pos:line="37" pos:column="59">InteropServices</name><op:operator pos:line="37" pos:column="74">.</op:operator><name pos:line="37" pos:column="75">CharSet</name><op:operator pos:line="37" pos:column="82">.</op:operator><name pos:line="37" pos:column="83">Auto</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="38" pos:column="9">internal</specifier> <specifier pos:line="38" pos:column="18">static</specifier> <specifier pos:line="38" pos:column="25">extern</specifier> <name pos:line="38" pos:column="32">int</name></type> <name pos:line="38" pos:column="36">DispatchMessage</name><parameter_list pos:line="38" pos:column="51">(<param><decl><type><attribute pos:line="38" pos:column="52">[<expr><name pos:line="38" pos:column="53">In</name></expr>]</attribute> <specifier pos:line="38" pos:column="57">ref</specifier> <name><name pos:line="38" pos:column="61">Microsoft</name><op:operator pos:line="38" pos:column="70">.</op:operator><name pos:line="38" pos:column="71">VisualStudio</name><op:operator pos:line="38" pos:column="83">.</op:operator><name pos:line="38" pos:column="84">OLE</name><op:operator pos:line="38" pos:column="87">.</op:operator><name pos:line="38" pos:column="88">Interop</name><op:operator pos:line="38" pos:column="95">.</op:operator><name pos:line="38" pos:column="96">MSG</name></name></type> <name pos:line="38" pos:column="100">msg</name></decl></param>)</parameter_list>;</function_decl>

        <function_decl><type><attribute pos:line="40" pos:column="9">[<expr><call><name pos:line="40" pos:column="10">DllImport</name><argument_list pos:line="40" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="40" pos:column="20">"user32.dll"</lit:literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="34">CharSet</name> <op:operator pos:line="40" pos:column="42">=</op:operator> <name><name pos:line="40" pos:column="44">System</name><op:operator pos:line="40" pos:column="50">.</op:operator><name pos:line="40" pos:column="51">Runtime</name><op:operator pos:line="40" pos:column="58">.</op:operator><name pos:line="40" pos:column="59">InteropServices</name><op:operator pos:line="40" pos:column="74">.</op:operator><name pos:line="40" pos:column="75">CharSet</name><op:operator pos:line="40" pos:column="82">.</op:operator><name pos:line="40" pos:column="83">Auto</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="41" pos:column="9">internal</specifier> <specifier pos:line="41" pos:column="18">static</specifier> <specifier pos:line="41" pos:column="25">extern</specifier> <name pos:line="41" pos:column="32">bool</name></type> <name pos:line="41" pos:column="37">AttachThreadInput</name><parameter_list pos:line="41" pos:column="54">(<param><decl><type><name pos:line="41" pos:column="55">uint</name></type> <name pos:line="41" pos:column="60">idAttach</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="70">uint</name></type> <name pos:line="41" pos:column="75">idAttachTo</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="87">bool</name></type> <name pos:line="41" pos:column="92">attach</name></decl></param>)</parameter_list>;</function_decl>

        <function_decl><type><attribute pos:line="43" pos:column="9">[<expr><call><name pos:line="43" pos:column="10">DllImport</name><argument_list pos:line="43" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="43" pos:column="20">"user32.dll"</lit:literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="34">CharSet</name> <op:operator pos:line="43" pos:column="42">=</op:operator> <name><name pos:line="43" pos:column="44">System</name><op:operator pos:line="43" pos:column="50">.</op:operator><name pos:line="43" pos:column="51">Runtime</name><op:operator pos:line="43" pos:column="58">.</op:operator><name pos:line="43" pos:column="59">InteropServices</name><op:operator pos:line="43" pos:column="74">.</op:operator><name pos:line="43" pos:column="75">CharSet</name><op:operator pos:line="43" pos:column="82">.</op:operator><name pos:line="43" pos:column="83">Auto</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="44" pos:column="9">internal</specifier> <specifier pos:line="44" pos:column="18">static</specifier> <specifier pos:line="44" pos:column="25">extern</specifier> <name pos:line="44" pos:column="32">uint</name></type> <name pos:line="44" pos:column="37">GetWindowThreadProcessId</name><parameter_list pos:line="44" pos:column="61">(<param><decl><type><name pos:line="44" pos:column="62">IntPtr</name></type> <name pos:line="44" pos:column="69">hWnd</name></decl></param>, <param><decl><type><specifier pos:line="44" pos:column="75">out</specifier> <name pos:line="44" pos:column="79">uint</name></type> <name pos:line="44" pos:column="84">lpdwProcessId</name></decl></param>)</parameter_list>;</function_decl>

        <function_decl><type><attribute pos:line="46" pos:column="9">[<expr><call><name pos:line="46" pos:column="10">DllImport</name><argument_list pos:line="46" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="20">"kernel32.dll"</lit:literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="36">CharSet</name> <op:operator pos:line="46" pos:column="44">=</op:operator> <name><name pos:line="46" pos:column="46">System</name><op:operator pos:line="46" pos:column="52">.</op:operator><name pos:line="46" pos:column="53">Runtime</name><op:operator pos:line="46" pos:column="60">.</op:operator><name pos:line="46" pos:column="61">InteropServices</name><op:operator pos:line="46" pos:column="76">.</op:operator><name pos:line="46" pos:column="77">CharSet</name><op:operator pos:line="46" pos:column="84">.</op:operator><name pos:line="46" pos:column="85">Auto</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="47" pos:column="9">internal</specifier> <specifier pos:line="47" pos:column="18">static</specifier> <specifier pos:line="47" pos:column="25">extern</specifier> <name pos:line="47" pos:column="32">uint</name></type> <name pos:line="47" pos:column="37">GetCurrentThreadId</name><parameter_list pos:line="47" pos:column="55">()</parameter_list>;</function_decl>

        <function_decl><type><attribute pos:line="49" pos:column="9">[<expr><call><name pos:line="49" pos:column="10">DllImport</name><argument_list pos:line="49" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="49" pos:column="20">"user32"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="50" pos:column="9">internal</specifier> <specifier pos:line="50" pos:column="18">static</specifier> <specifier pos:line="50" pos:column="25">extern</specifier> <name pos:line="50" pos:column="32">int</name></type> <name pos:line="50" pos:column="36">EnumChildWindows</name><parameter_list pos:line="50" pos:column="52">(<param><decl><type><name pos:line="50" pos:column="53">IntPtr</name></type> <name pos:line="50" pos:column="60">hwnd</name></decl></param>, <param><decl><type><name pos:line="50" pos:column="66">CallBack</name></type> <name pos:line="50" pos:column="75">x</name></decl></param>, <param><decl><type><name pos:line="50" pos:column="78">IntPtr</name></type> <name pos:line="50" pos:column="85">y</name></decl></param>)</parameter_list>;</function_decl>

        <function_decl><type><attribute pos:line="52" pos:column="9">[<expr><call><name pos:line="52" pos:column="10">DllImport</name><argument_list pos:line="52" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="20">"user32"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="53" pos:column="9">internal</specifier> <specifier pos:line="53" pos:column="18">static</specifier> <specifier pos:line="53" pos:column="25">extern</specifier> <name pos:line="53" pos:column="32">bool</name></type> <name pos:line="53" pos:column="37">IsWindowVisible</name><parameter_list pos:line="53" pos:column="52">(<param><decl><type><name pos:line="53" pos:column="53">IntPtr</name></type> <name pos:line="53" pos:column="60">hDlg</name></decl></param>)</parameter_list>;</function_decl>

        <function_decl><type><attribute pos:line="55" pos:column="9">[<expr><call><name pos:line="55" pos:column="10">DllImport</name><argument_list pos:line="55" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="20">"user32.dll"</lit:literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="34">CharSet</name> <op:operator pos:line="55" pos:column="42">=</op:operator> <name><name pos:line="55" pos:column="44">System</name><op:operator pos:line="55" pos:column="50">.</op:operator><name pos:line="55" pos:column="51">Runtime</name><op:operator pos:line="55" pos:column="58">.</op:operator><name pos:line="55" pos:column="59">InteropServices</name><op:operator pos:line="55" pos:column="74">.</op:operator><name pos:line="55" pos:column="75">CharSet</name><op:operator pos:line="55" pos:column="82">.</op:operator><name pos:line="55" pos:column="83">Auto</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="56" pos:column="9">internal</specifier> <specifier pos:line="56" pos:column="18">static</specifier> <specifier pos:line="56" pos:column="25">extern</specifier> <name pos:line="56" pos:column="32">IntPtr</name></type> <name pos:line="56" pos:column="39">SetFocus</name><parameter_list pos:line="56" pos:column="47">(<param><decl><type><name pos:line="56" pos:column="48">IntPtr</name></type> <name pos:line="56" pos:column="55">hWnd</name></decl></param>)</parameter_list>;</function_decl>

        <function_decl><type><attribute pos:line="58" pos:column="9">[<expr><call><name pos:line="58" pos:column="10">DllImport</name><argument_list pos:line="58" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="58" pos:column="20">"user32"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="59" pos:column="9">internal</specifier> <specifier pos:line="59" pos:column="18">static</specifier> <specifier pos:line="59" pos:column="25">extern</specifier> <name pos:line="59" pos:column="32">int</name></type> <name pos:line="59" pos:column="36">GetClassName</name><parameter_list pos:line="59" pos:column="48">(<param><decl><type><name pos:line="59" pos:column="49">IntPtr</name></type> <name pos:line="59" pos:column="56">hWnd</name></decl></param>,
                                               <param><decl><type><name pos:line="60" pos:column="48">StringBuilder</name></type> <name pos:line="60" pos:column="62">className</name></decl></param>,
                                               <param><decl><type><name pos:line="61" pos:column="48">int</name></type> <name pos:line="61" pos:column="52">stringLength</name></decl></param>)</parameter_list>;</function_decl>
        <function_decl><type><attribute pos:line="62" pos:column="9">[<expr><call><name pos:line="62" pos:column="10">DllImport</name><argument_list pos:line="62" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="62" pos:column="20">"user32"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="63" pos:column="9">internal</specifier> <specifier pos:line="63" pos:column="18">static</specifier> <specifier pos:line="63" pos:column="25">extern</specifier> <name pos:line="63" pos:column="32">int</name></type> <name pos:line="63" pos:column="36">GetWindowText</name><parameter_list pos:line="63" pos:column="49">(<param><decl><type><name pos:line="63" pos:column="50">IntPtr</name></type> <name pos:line="63" pos:column="57">hWnd</name></decl></param>, <param><decl><type><name pos:line="63" pos:column="63">StringBuilder</name></type> <name pos:line="63" pos:column="77">className</name></decl></param>, <param><decl><type><name pos:line="63" pos:column="88">int</name></type> <name pos:line="63" pos:column="92">stringLength</name></decl></param>)</parameter_list>;</function_decl>


        <function_decl><type><attribute pos:line="66" pos:column="9">[<expr><call><name pos:line="66" pos:column="10">DllImport</name><argument_list pos:line="66" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="66" pos:column="20">"user32"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="67" pos:column="9">internal</specifier> <specifier pos:line="67" pos:column="18">static</specifier> <specifier pos:line="67" pos:column="25">extern</specifier> <name pos:line="67" pos:column="32">bool</name></type> <name pos:line="67" pos:column="37">EndDialog</name><parameter_list pos:line="67" pos:column="46">(<param><decl><type><name pos:line="67" pos:column="47">IntPtr</name></type> <name pos:line="67" pos:column="54">hDlg</name></decl></param>, <param><decl><type><name pos:line="67" pos:column="60">int</name></type> <name pos:line="67" pos:column="64">result</name></decl></param>)</parameter_list>;</function_decl>

        <function_decl><type><attribute pos:line="69" pos:column="9">[<expr><call><name pos:line="69" pos:column="10">DllImport</name><argument_list pos:line="69" pos:column="19">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="20">"Kernel32"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="70" pos:column="9">internal</specifier> <specifier pos:line="70" pos:column="18">static</specifier> <specifier pos:line="70" pos:column="25">extern</specifier> <name pos:line="70" pos:column="32">long</name></type> <name pos:line="70" pos:column="37">GetLastError</name><parameter_list pos:line="70" pos:column="49">()</parameter_list>;</function_decl>

        <decl_stmt><decl><type><specifier pos:line="72" pos:column="9">internal</specifier> <specifier pos:line="72" pos:column="18">const</specifier> <name pos:line="72" pos:column="24">int</name></type> <name pos:line="72" pos:column="28">QS_KEY</name> <init pos:line="72" pos:column="35">= <expr><lit:literal type="number" pos:line="72" pos:column="37">0x0001</lit:literal></expr></init><op:operator pos:line="72" pos:column="43">,</op:operator>
                        <name pos:line="73" pos:column="25">QS_MOUSEMOVE</name> <init pos:line="73" pos:column="38">= <expr><lit:literal type="number" pos:line="73" pos:column="40">0x0002</lit:literal></expr></init><op:operator pos:line="73" pos:column="46">,</op:operator>
                        <name pos:line="74" pos:column="25">QS_MOUSEBUTTON</name> <init pos:line="74" pos:column="40">= <expr><lit:literal type="number" pos:line="74" pos:column="42">0x0004</lit:literal></expr></init><op:operator pos:line="74" pos:column="48">,</op:operator>
                        <name pos:line="75" pos:column="25">QS_POSTMESSAGE</name> <init pos:line="75" pos:column="40">= <expr><lit:literal type="number" pos:line="75" pos:column="42">0x0008</lit:literal></expr></init><op:operator pos:line="75" pos:column="48">,</op:operator>
                        <name pos:line="76" pos:column="25">QS_TIMER</name> <init pos:line="76" pos:column="34">= <expr><lit:literal type="number" pos:line="76" pos:column="36">0x0010</lit:literal></expr></init><op:operator pos:line="76" pos:column="42">,</op:operator>
                        <name pos:line="77" pos:column="25">QS_PAINT</name> <init pos:line="77" pos:column="34">= <expr><lit:literal type="number" pos:line="77" pos:column="36">0x0020</lit:literal></expr></init><op:operator pos:line="77" pos:column="42">,</op:operator>
                        <name pos:line="78" pos:column="25">QS_SENDMESSAGE</name> <init pos:line="78" pos:column="40">= <expr><lit:literal type="number" pos:line="78" pos:column="42">0x0040</lit:literal></expr></init><op:operator pos:line="78" pos:column="48">,</op:operator>
                        <name pos:line="79" pos:column="25">QS_HOTKEY</name> <init pos:line="79" pos:column="35">= <expr><lit:literal type="number" pos:line="79" pos:column="37">0x0080</lit:literal></expr></init><op:operator pos:line="79" pos:column="43">,</op:operator>
                        <name pos:line="80" pos:column="25">QS_ALLPOSTMESSAGE</name> <init pos:line="80" pos:column="43">= <expr><lit:literal type="number" pos:line="80" pos:column="45">0x0100</lit:literal></expr></init><op:operator pos:line="80" pos:column="51">,</op:operator>
                        <name pos:line="81" pos:column="25">QS_MOUSE</name> <init pos:line="81" pos:column="34">= <expr><name pos:line="81" pos:column="36">QS_MOUSEMOVE</name> <op:operator pos:line="81" pos:column="49">|</op:operator> <name pos:line="81" pos:column="51">QS_MOUSEBUTTON</name></expr></init><op:operator pos:line="81" pos:column="65">,</op:operator>
                        <name pos:line="82" pos:column="25">QS_INPUT</name> <init pos:line="82" pos:column="34">= <expr><name pos:line="82" pos:column="36">QS_MOUSE</name> <op:operator pos:line="82" pos:column="45">|</op:operator> <name pos:line="82" pos:column="47">QS_KEY</name></expr></init><op:operator pos:line="82" pos:column="53">,</op:operator>
                        <name pos:line="83" pos:column="25">QS_ALLEVENTS</name> <init pos:line="83" pos:column="38">= <expr><name pos:line="83" pos:column="40">QS_INPUT</name> <op:operator pos:line="83" pos:column="49">|</op:operator> <name pos:line="83" pos:column="51">QS_POSTMESSAGE</name> <op:operator pos:line="83" pos:column="66">|</op:operator> <name pos:line="83" pos:column="68">QS_TIMER</name> <op:operator pos:line="83" pos:column="77">|</op:operator> <name pos:line="83" pos:column="79">QS_PAINT</name> <op:operator pos:line="83" pos:column="88">|</op:operator> <name pos:line="83" pos:column="90">QS_HOTKEY</name></expr></init><op:operator pos:line="83" pos:column="99">,</op:operator>
                        <name pos:line="84" pos:column="25">QS_ALLINPUT</name> <init pos:line="84" pos:column="37">= <expr><name pos:line="84" pos:column="39">QS_INPUT</name> <op:operator pos:line="84" pos:column="48">|</op:operator> <name pos:line="84" pos:column="50">QS_POSTMESSAGE</name> <op:operator pos:line="84" pos:column="65">|</op:operator> <name pos:line="84" pos:column="67">QS_TIMER</name> <op:operator pos:line="84" pos:column="76">|</op:operator> <name pos:line="84" pos:column="78">QS_PAINT</name> <op:operator pos:line="84" pos:column="87">|</op:operator> <name pos:line="84" pos:column="89">QS_HOTKEY</name> <op:operator pos:line="84" pos:column="99">|</op:operator> <name pos:line="84" pos:column="101">QS_SENDMESSAGE</name></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="86" pos:column="9">internal</specifier> <specifier pos:line="86" pos:column="18">const</specifier> <name pos:line="86" pos:column="24">int</name></type> <name pos:line="86" pos:column="28">Facility_Win32</name> <init pos:line="86" pos:column="43">= <expr><lit:literal type="number" pos:line="86" pos:column="45">7</lit:literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="88" pos:column="9">internal</specifier> <specifier pos:line="88" pos:column="18">const</specifier> <name pos:line="88" pos:column="24">int</name></type> <name pos:line="88" pos:column="28">WM_CLOSE</name> <init pos:line="88" pos:column="37">= <expr><lit:literal type="number" pos:line="88" pos:column="39">0x0010</lit:literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="90" pos:column="9">internal</specifier> <specifier pos:line="90" pos:column="18">const</specifier> <name pos:line="90" pos:column="24">int</name></type>
                       <name pos:line="91" pos:column="24">S_FALSE</name> <init pos:line="91" pos:column="32">= <expr><lit:literal type="number" pos:line="91" pos:column="34">0x00000001</lit:literal></expr></init><op:operator pos:line="91" pos:column="44">,</op:operator>
                       <name pos:line="92" pos:column="24">S_OK</name> <init pos:line="92" pos:column="29">= <expr><lit:literal type="number" pos:line="92" pos:column="31">0x00000000</lit:literal></expr></init><op:operator pos:line="92" pos:column="41">,</op:operator>

                       <name pos:line="94" pos:column="24">IDOK</name> <init pos:line="94" pos:column="29">= <expr><lit:literal type="number" pos:line="94" pos:column="31">1</lit:literal></expr></init><op:operator pos:line="94" pos:column="32">,</op:operator>
                       <name pos:line="95" pos:column="24">IDCANCEL</name> <init pos:line="95" pos:column="33">= <expr><lit:literal type="number" pos:line="95" pos:column="35">2</lit:literal></expr></init><op:operator pos:line="95" pos:column="36">,</op:operator>
                       <name pos:line="96" pos:column="24">IDABORT</name> <init pos:line="96" pos:column="32">= <expr><lit:literal type="number" pos:line="96" pos:column="34">3</lit:literal></expr></init><op:operator pos:line="96" pos:column="35">,</op:operator>
                       <name pos:line="97" pos:column="24">IDRETRY</name> <init pos:line="97" pos:column="32">= <expr><lit:literal type="number" pos:line="97" pos:column="34">4</lit:literal></expr></init><op:operator pos:line="97" pos:column="35">,</op:operator>
                       <name pos:line="98" pos:column="24">IDIGNORE</name> <init pos:line="98" pos:column="33">= <expr><lit:literal type="number" pos:line="98" pos:column="35">5</lit:literal></expr></init><op:operator pos:line="98" pos:column="36">,</op:operator>
                       <name pos:line="99" pos:column="24">IDYES</name> <init pos:line="99" pos:column="30">= <expr><lit:literal type="number" pos:line="99" pos:column="32">6</lit:literal></expr></init><op:operator pos:line="99" pos:column="33">,</op:operator>
                       <name pos:line="100" pos:column="24">IDNO</name> <init pos:line="100" pos:column="29">= <expr><lit:literal type="number" pos:line="100" pos:column="31">7</lit:literal></expr></init><op:operator pos:line="100" pos:column="32">,</op:operator>
                       <name pos:line="101" pos:column="24">IDCLOSE</name> <init pos:line="101" pos:column="32">= <expr><lit:literal type="number" pos:line="101" pos:column="34">8</lit:literal></expr></init><op:operator pos:line="101" pos:column="35">,</op:operator>
                       <name pos:line="102" pos:column="24">IDHELP</name> <init pos:line="102" pos:column="31">= <expr><lit:literal type="number" pos:line="102" pos:column="33">9</lit:literal></expr></init><op:operator pos:line="102" pos:column="34">,</op:operator>
                       <name pos:line="103" pos:column="24">IDTRYAGAIN</name> <init pos:line="103" pos:column="35">= <expr><lit:literal type="number" pos:line="103" pos:column="37">10</lit:literal></expr></init><op:operator pos:line="103" pos:column="39">,</op:operator>
                       <name pos:line="104" pos:column="24">IDCONTINUE</name> <init pos:line="104" pos:column="35">= <expr><lit:literal type="number" pos:line="104" pos:column="37">11</lit:literal></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="106" pos:column="9">internal</specifier> <specifier pos:line="106" pos:column="18">static</specifier> <name pos:line="106" pos:column="25">long</name></type> <name pos:line="106" pos:column="30">HResultFromWin32</name><parameter_list pos:line="106" pos:column="46">(<param><decl><type><name pos:line="106" pos:column="47">long</name></type> <name pos:line="106" pos:column="52">error</name></decl></param>)</parameter_list> <block pos:line="106" pos:column="59">{
            <if pos:line="107" pos:column="13">if<condition pos:line="107" pos:column="15">(<expr><name pos:line="107" pos:column="16">error</name> <op:operator pos:line="107" pos:column="22">&lt;=</op:operator> <lit:literal type="number" pos:line="107" pos:column="25">0</lit:literal></expr>)</condition><then pos:line="107" pos:column="27"> <block pos:line="107" pos:column="28">{
                <return pos:line="108" pos:column="17">return <expr><name pos:line="108" pos:column="24">error</name></expr>;</return>
            }</block></then></if>

            <return pos:line="111" pos:column="13">return <expr><op:operator pos:line="111" pos:column="20">(</op:operator><op:operator pos:line="111" pos:column="21">(</op:operator><name pos:line="111" pos:column="22">error</name> <op:operator pos:line="111" pos:column="28">&amp;</op:operator> <lit:literal type="number" pos:line="111" pos:column="30">0x0000FFFF</lit:literal><op:operator pos:line="111" pos:column="40">)</op:operator> <op:operator pos:line="111" pos:column="42">|</op:operator> <op:operator pos:line="111" pos:column="44">(</op:operator><name pos:line="111" pos:column="45">Facility_Win32</name> <op:operator pos:line="111" pos:column="60">&lt;&lt;</op:operator> <lit:literal type="number" pos:line="111" pos:column="63">16</lit:literal><op:operator pos:line="111" pos:column="65">)</op:operator> <op:operator pos:line="111" pos:column="67">|</op:operator> <lit:literal type="number" pos:line="111" pos:column="69">0x80000000</lit:literal><op:operator pos:line="111" pos:column="79">)</op:operator></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="114" pos:column="9">/// &lt;devdoc&gt;</comment>
        <comment type="line" pos:line="115" pos:column="9">/// Please use this "approved" method to compare file names.</comment>
        <comment type="line" pos:line="116" pos:column="9">/// &lt;/devdoc&gt;</comment>
        <function><type><specifier pos:line="117" pos:column="9">public</specifier> <specifier pos:line="117" pos:column="16">static</specifier> <name pos:line="117" pos:column="23">bool</name></type> <name pos:line="117" pos:column="28">IsSamePath</name><parameter_list pos:line="117" pos:column="38">(<param><decl><type><name pos:line="117" pos:column="39">string</name></type> <name pos:line="117" pos:column="46">file1</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="53">string</name></type> <name pos:line="117" pos:column="60">file2</name></decl></param>)</parameter_list> <block pos:line="117" pos:column="67">{
            <if pos:line="118" pos:column="13">if<condition pos:line="118" pos:column="15">(<expr><name pos:line="118" pos:column="16">file1</name> <op:operator pos:line="118" pos:column="22">==</op:operator> <name pos:line="118" pos:column="25">null</name> <op:operator pos:line="118" pos:column="30">||</op:operator> <name><name pos:line="118" pos:column="33">file1</name><op:operator pos:line="118" pos:column="38">.</op:operator><name pos:line="118" pos:column="39">Length</name></name> <op:operator pos:line="118" pos:column="46">==</op:operator> <lit:literal type="number" pos:line="118" pos:column="49">0</lit:literal></expr>)</condition><then pos:line="118" pos:column="51"> <block pos:line="118" pos:column="52">{
                <return pos:line="119" pos:column="17">return <expr><op:operator pos:line="119" pos:column="24">(</op:operator><name pos:line="119" pos:column="25">file2</name> <op:operator pos:line="119" pos:column="31">==</op:operator> <name pos:line="119" pos:column="34">null</name> <op:operator pos:line="119" pos:column="39">||</op:operator> <name><name pos:line="119" pos:column="42">file2</name><op:operator pos:line="119" pos:column="47">.</op:operator><name pos:line="119" pos:column="48">Length</name></name> <op:operator pos:line="119" pos:column="55">==</op:operator> <lit:literal type="number" pos:line="119" pos:column="58">0</lit:literal><op:operator pos:line="119" pos:column="59">)</op:operator></expr>;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="122" pos:column="13">Uri</name></type> <name pos:line="122" pos:column="17">uri1</name> <init pos:line="122" pos:column="22">= <expr><name pos:line="122" pos:column="24">null</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="123" pos:column="13">Uri</name></type> <name pos:line="123" pos:column="17">uri2</name> <init pos:line="123" pos:column="22">= <expr><name pos:line="123" pos:column="24">null</name></expr></init></decl>;</decl_stmt>

            <try pos:line="125" pos:column="13">try <block pos:line="125" pos:column="17">{
                <if pos:line="126" pos:column="17">if<condition pos:line="126" pos:column="19">(<expr><op:operator pos:line="126" pos:column="20">!</op:operator><call><name><name pos:line="126" pos:column="21">Uri</name><op:operator pos:line="126" pos:column="24">.</op:operator><name pos:line="126" pos:column="25">TryCreate</name></name><argument_list pos:line="126" pos:column="34">(<argument><expr><name pos:line="126" pos:column="35">file1</name></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="42">UriKind</name><op:operator pos:line="126" pos:column="49">.</op:operator><name pos:line="126" pos:column="50">Absolute</name></name></expr></argument>, <argument><expr pos:line="126" pos:column="60">out <name pos:line="126" pos:column="64">uri1</name></expr></argument>)</argument_list></call> <op:operator pos:line="126" pos:column="70">||</op:operator> <op:operator pos:line="126" pos:column="73">!</op:operator><call><name><name pos:line="126" pos:column="74">Uri</name><op:operator pos:line="126" pos:column="77">.</op:operator><name pos:line="126" pos:column="78">TryCreate</name></name><argument_list pos:line="126" pos:column="87">(<argument><expr><name pos:line="126" pos:column="88">file2</name></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="95">UriKind</name><op:operator pos:line="126" pos:column="102">.</op:operator><name pos:line="126" pos:column="103">Absolute</name></name></expr></argument>, <argument><expr pos:line="126" pos:column="113">out <name pos:line="126" pos:column="117">uri2</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="126" pos:column="123"> <block pos:line="126" pos:column="124">{
                    <return pos:line="127" pos:column="21">return <expr><lit:literal type="boolean" pos:line="127" pos:column="28">false</lit:literal></expr>;</return>
                }</block></then></if>

                <if pos:line="130" pos:column="17">if<condition pos:line="130" pos:column="19">(<expr><name pos:line="130" pos:column="20">uri1</name> <op:operator pos:line="130" pos:column="25">!=</op:operator> <name pos:line="130" pos:column="28">null</name> <op:operator pos:line="130" pos:column="33">&amp;&amp;</op:operator> <name><name pos:line="130" pos:column="36">uri1</name><op:operator pos:line="130" pos:column="40">.</op:operator><name pos:line="130" pos:column="41">IsFile</name> <type:modifier pos:line="130" pos:column="48">&amp;&amp;</type:modifier></name> <name pos:line="130" pos:column="51">uri2</name> <op:operator pos:line="130" pos:column="56">!=</op:operator> <name pos:line="130" pos:column="59">null</name> <op:operator pos:line="130" pos:column="64">&amp;&amp;</op:operator> <name><name pos:line="130" pos:column="67">uri2</name><op:operator pos:line="130" pos:column="71">.</op:operator><name pos:line="130" pos:column="72">IsFile</name></name></expr>)</condition><then pos:line="130" pos:column="79"> <block pos:line="130" pos:column="80">{
                    <return pos:line="131" pos:column="21">return <expr><lit:literal type="number" pos:line="131" pos:column="28">0</lit:literal> <op:operator pos:line="131" pos:column="30">==</op:operator> <call><name><name pos:line="131" pos:column="33">String</name><op:operator pos:line="131" pos:column="39">.</op:operator><name pos:line="131" pos:column="40">Compare</name></name><argument_list pos:line="131" pos:column="47">(<argument><expr><name><name pos:line="131" pos:column="48">uri1</name><op:operator pos:line="131" pos:column="52">.</op:operator><name pos:line="131" pos:column="53">LocalPath</name></name></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="64">uri2</name><op:operator pos:line="131" pos:column="68">.</op:operator><name pos:line="131" pos:column="69">LocalPath</name></name></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="80">StringComparison</name><op:operator pos:line="131" pos:column="96">.</op:operator><name pos:line="131" pos:column="97">OrdinalIgnoreCase</name></name></expr></argument>)</argument_list></call></expr>;</return>
                }</block></then></if>

                <return pos:line="134" pos:column="17">return <expr><name pos:line="134" pos:column="24">file1</name> <op:operator pos:line="134" pos:column="30">==</op:operator> <name pos:line="134" pos:column="33">file2</name></expr>;</return>
            }</block> <catch pos:line="135" pos:column="15">catch<parameter_list pos:line="135" pos:column="20">(<param><decl><type><name pos:line="135" pos:column="21">UriFormatException</name></type> <name pos:line="135" pos:column="40">e</name></decl></param>)</parameter_list> <block pos:line="135" pos:column="43">{
                <expr_stmt><expr><call><name><name pos:line="136" pos:column="17">System</name><op:operator pos:line="136" pos:column="23">.</op:operator><name pos:line="136" pos:column="24">Diagnostics</name><op:operator pos:line="136" pos:column="35">.</op:operator><name pos:line="136" pos:column="36">Trace</name><op:operator pos:line="136" pos:column="41">.</op:operator><name pos:line="136" pos:column="42">WriteLine</name></name><argument_list pos:line="136" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="136" pos:column="52">"Exception "</lit:literal> <op:operator pos:line="136" pos:column="65">+</op:operator> <name><name pos:line="136" pos:column="67">e</name><op:operator pos:line="136" pos:column="68">.</op:operator><name pos:line="136" pos:column="69">Message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>

            <return pos:line="139" pos:column="13">return <expr><lit:literal type="boolean" pos:line="139" pos:column="20">false</lit:literal></expr>;</return>
        }</block></function>

    }</block></class>
}</block></namespace>
</unit>
