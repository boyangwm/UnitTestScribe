<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\SrcML.NET\TestInputs\decl_test.cpp" pos:tabs="8"><cpp:include pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">include</cpp:directive> <cpp:file pos:line="1" pos:column="10">&lt;iostream&gt;</cpp:file></cpp:include>

<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">std</name><op:operator pos:line="3" pos:column="10">::</op:operator><name pos:line="3" pos:column="12">cout</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">std</name><op:operator pos:line="4" pos:column="10">::</op:operator><name pos:line="4" pos:column="12">endl</name></name>;</using>
<function><type><name pos:line="5" pos:column="1">int</name></type> <name pos:line="5" pos:column="5">main</name><parameter_list pos:line="5" pos:column="9">()</parameter_list> <block pos:line="5" pos:column="12">{
  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<decl><type><name pos:line="6" pos:column="6">int</name></type> <name pos:line="6" pos:column="10">a</name> <init pos:line="6" pos:column="12">= <expr><lit:literal type="number" pos:line="6" pos:column="14">5</lit:literal></expr></init></decl>)</condition><then pos:line="6" pos:column="16"> <block pos:line="6" pos:column="17">{
    <expr_stmt><expr><name pos:line="7" pos:column="5">cout</name> <op:operator pos:line="7" pos:column="10">&lt;&lt;</op:operator> <lit:literal type="string" pos:line="7" pos:column="13">"a is "</lit:literal> <op:operator pos:line="7" pos:column="21">&lt;&lt;</op:operator> <name pos:line="7" pos:column="24">a</name> <op:operator pos:line="7" pos:column="26">&lt;&lt;</op:operator> <name pos:line="7" pos:column="29">endl</name></expr>;</expr_stmt>
  }</block></then> <else pos:line="8" pos:column="5">else <block pos:line="8" pos:column="10">{
    <expr_stmt><expr><name pos:line="9" pos:column="5">cout</name> <op:operator pos:line="9" pos:column="10">&lt;&lt;</op:operator> <lit:literal type="string" pos:line="9" pos:column="13">"that shouldn't have been false"</lit:literal></expr>;</expr_stmt>
  }</block></else></if>
  <expr_stmt><expr><name pos:line="11" pos:column="3">cout</name> <op:operator pos:line="11" pos:column="8">&lt;&lt;</op:operator> <lit:literal type="string" pos:line="11" pos:column="11">"does a exist?"</lit:literal> <op:operator pos:line="11" pos:column="27">&lt;&lt;</op:operator> <name pos:line="11" pos:column="30">a</name> <op:operator pos:line="11" pos:column="32">&lt;&lt;</op:operator> <name pos:line="11" pos:column="35">endl</name></expr>;</expr_stmt>
  <return pos:line="12" pos:column="3">return <expr><lit:literal type="number" pos:line="12" pos:column="10">0</lit:literal></expr>;</return>
}</block></function>
</unit>
