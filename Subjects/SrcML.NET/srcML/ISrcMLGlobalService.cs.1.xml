<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\VisualStudio\ABB.SrcML.VisualStudio.SrcMLService\ISrcMLGlobalService.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2013 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Jiang Zheng (ABB Group) - Initial implementation
 *****************************************************************************/</comment>

<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">ABB</name><op:operator pos:line="12" pos:column="10">.</op:operator><name pos:line="12" pos:column="11">SrcML</name><op:operator pos:line="12" pos:column="16">.</op:operator><name pos:line="12" pos:column="17">Data</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">ABB</name><op:operator pos:line="13" pos:column="10">.</op:operator><name pos:line="13" pos:column="11">VisualStudio</name></name>;</using>
<using pos:line="14" pos:column="1">using <name pos:line="14" pos:column="7">System</name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">Collections</name><op:operator pos:line="15" pos:column="25">.</op:operator><name pos:line="15" pos:column="26">ObjectModel</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Runtime</name><op:operator pos:line="16" pos:column="21">.</op:operator><name pos:line="16" pos:column="22">InteropServices</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">System</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Xml</name><op:operator pos:line="17" pos:column="17">.</op:operator><name pos:line="17" pos:column="18">Linq</name></name>;</using>

<namespace pos:line="19" pos:column="1">namespace <name><name pos:line="19" pos:column="11">ABB</name><op:operator pos:line="19" pos:column="14">.</op:operator><name pos:line="19" pos:column="15">SrcML</name><op:operator pos:line="19" pos:column="20">.</op:operator><name pos:line="19" pos:column="21">VisualStudio</name></name> <block pos:line="19" pos:column="34">{

    <comment type="line" pos:line="21" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="22" pos:column="5">/// This is the interface that will be implemented by the global service exposed by the package</comment>
    <comment type="line" pos:line="23" pos:column="5">/// defined in ABB.SrcML.VisualStudio.SrcMLService. Notice that we have to define this interface</comment>
    <comment type="line" pos:line="24" pos:column="5">/// as COM visible so that it will be possible to query for it from the native version of</comment>
    <comment type="line" pos:line="25" pos:column="5">/// IServiceProvider.</comment>
    <comment type="line" pos:line="26" pos:column="5">/// &lt;/summary&gt;</comment>
    <class type="interface"><attribute pos:line="27" pos:column="5">[<expr><call><name pos:line="27" pos:column="6">Guid</name><argument_list pos:line="27" pos:column="10">(<argument><expr><name><name pos:line="27" pos:column="11">GuidList</name><op:operator pos:line="27" pos:column="19">.</op:operator><name pos:line="27" pos:column="20">ISrcMLGlobalServiceId</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="27" pos:column="42">,</op:operator> <expr><call><name pos:line="27" pos:column="44">ComVisible</name><argument_list pos:line="27" pos:column="54">(<argument><expr><lit:literal type="boolean" pos:line="27" pos:column="55">true</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
    <specifier pos:line="28" pos:column="5">public</specifier> interface <name pos:line="28" pos:column="22">ISrcMLGlobalService</name> <block pos:line="28" pos:column="42">{

        <comment type="line" pos:line="30" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="31" pos:column="9">/// Even to indicate that a directory has been added to the file monitor.</comment>
        <comment type="line" pos:line="32" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="33" pos:column="9">event</specifier> <name><name pos:line="33" pos:column="15">EventHandler</name><argument_list pos:line="33" pos:column="27">&lt;<argument><name pos:line="33" pos:column="28">DirectoryScanningMonitorEventArgs</name></argument>&gt;</argument_list></name></type> <name pos:line="33" pos:column="63">DirectoryAdded</name></decl>;</decl_stmt>

        <comment type="line" pos:line="35" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="36" pos:column="9">/// Event to indicate that a directory has been removed from the file monitor</comment>
        <comment type="line" pos:line="37" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="38" pos:column="9">event</specifier> <name><name pos:line="38" pos:column="15">EventHandler</name><argument_list pos:line="38" pos:column="27">&lt;<argument><name pos:line="38" pos:column="28">DirectoryScanningMonitorEventArgs</name></argument>&gt;</argument_list></name></type> <name pos:line="38" pos:column="63">DirectoryRemoved</name></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="40" pos:column="9">event</specifier> <name pos:line="40" pos:column="15">EventHandler</name></type> <name pos:line="40" pos:column="28">MonitoringStarted</name></decl>;</decl_stmt>

        <comment type="line" pos:line="42" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="43" pos:column="9">/// Event to indicate that &lt;see cref="StopMonitoring()"/&gt; has been called</comment>
        <comment type="line" pos:line="44" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="45" pos:column="9">event</specifier> <name pos:line="45" pos:column="15">EventHandler</name></type> <name pos:line="45" pos:column="28">MonitoringStopped</name></decl>;</decl_stmt>

        <comment type="line" pos:line="47" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="48" pos:column="9">/// Event to indicate that a source file has changed</comment>
        <comment type="line" pos:line="49" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="50" pos:column="9">event</specifier> <name><name pos:line="50" pos:column="15">EventHandler</name><argument_list pos:line="50" pos:column="27">&lt;<argument><name pos:line="50" pos:column="28">FileEventRaisedArgs</name></argument>&gt;</argument_list></name></type> <name pos:line="50" pos:column="49">SourceFileChanged</name></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="52" pos:column="9">event</specifier> <name pos:line="52" pos:column="15">EventHandler</name></type> <name pos:line="52" pos:column="28">UpdateArchivesStarted</name></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><specifier pos:line="54" pos:column="9">event</specifier> <name pos:line="54" pos:column="15">EventHandler</name></type> <name pos:line="54" pos:column="28">UpdateArchivesCompleted</name></decl>;</decl_stmt>

        <decl_stmt><decl><type><name pos:line="56" pos:column="9">SourceMonitor</name></type> <name pos:line="56" pos:column="23">CurrentMonitor</name> <block pos:line="56" pos:column="38">{ <function_decl><name pos:line="56" pos:column="40">get</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><name pos:line="58" pos:column="9">SrcMLArchive</name></type> <name pos:line="58" pos:column="22">CurrentSrcMLArchive</name> <block pos:line="58" pos:column="42">{ <function_decl><name pos:line="58" pos:column="44">get</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><name pos:line="60" pos:column="9">bool</name></type> <name pos:line="60" pos:column="14">IsMonitoring</name> <block pos:line="60" pos:column="27">{ <function_decl><name pos:line="60" pos:column="29">get</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><name pos:line="62" pos:column="9">bool</name></type> <name pos:line="62" pos:column="14">IsUpdating</name> <block pos:line="62" pos:column="25">{ <function_decl><name pos:line="62" pos:column="27">get</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="64" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="65" pos:column="9">/// Collection of directories monitored by the service. The list of directories is persisted</comment>
        <comment type="line" pos:line="66" pos:column="9">/// for each solution. Modify the collection by calling</comment>
        <comment type="line" pos:line="67" pos:column="9">/// &lt;see cref="AddDirectoryToMonitor(string)"/&gt; and</comment>
        <comment type="line" pos:line="68" pos:column="9">/// &lt;see cref="RemoveDirectoryFromMonitor(string)"/&gt;</comment>
        <comment type="line" pos:line="69" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><name><name pos:line="70" pos:column="9">ReadOnlyCollection</name><argument_list pos:line="70" pos:column="27">&lt;<argument><name pos:line="70" pos:column="28">string</name></argument>&gt;</argument_list></name></type> <name pos:line="70" pos:column="36">MonitoredDirectories</name> <block pos:line="70" pos:column="57">{ <function_decl><name pos:line="70" pos:column="59">get</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="72" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="73" pos:column="9">/// The interval at which the service persists its data to disk (in seconds).</comment>
        <comment type="line" pos:line="74" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><name pos:line="75" pos:column="9">double</name></type> <name pos:line="75" pos:column="16">SaveInterval</name> <block pos:line="75" pos:column="29">{ <function_decl><name pos:line="75" pos:column="31">get</name>;</function_decl> <function_decl><name pos:line="75" pos:column="36">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="77" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="78" pos:column="9">/// The interval at which the service scans &lt;see cref="MonitoredDirectories"/&gt;</comment>
        <comment type="line" pos:line="79" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><name pos:line="80" pos:column="9">double</name></type> <name pos:line="80" pos:column="16">ScanInterval</name> <block pos:line="80" pos:column="29">{ <function_decl><name pos:line="80" pos:column="31">get</name>;</function_decl> <function_decl><name pos:line="80" pos:column="36">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="82" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="83" pos:column="9">/// Add a directory to &lt;see cref="MonitoredDirectories"/&gt;</comment>
        <comment type="line" pos:line="84" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="85" pos:column="9">/// &lt;param name="pathToDirectory"&gt;The directory path to start monitoring&lt;/param&gt;</comment>
        <function_decl><type><name pos:line="86" pos:column="9">void</name></type> <name pos:line="86" pos:column="14">AddDirectoryToMonitor</name><parameter_list pos:line="86" pos:column="35">(<param><decl><type><name pos:line="86" pos:column="36">string</name></type> <name pos:line="86" pos:column="43">pathToDirectory</name></decl></param>)</parameter_list>;</function_decl>

        <comment type="line" pos:line="88" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="89" pos:column="9">/// Gets the unit XElement for the given</comment>
        <comment type="line" pos:line="90" pos:column="9">/// &lt;paramref name="sourceFilePath"/&gt;&lt;/summary&gt;</comment>
        <comment type="line" pos:line="91" pos:column="9">/// &lt;param name="sourceFilePath"&gt;The path to get a unit XElement for&lt;/param&gt;</comment>
        <comment type="line" pos:line="92" pos:column="9">/// &lt;returns&gt;A unit XElement for</comment>
        <comment type="line" pos:line="93" pos:column="9">/// &lt;paramref name="sourceFilePath"/&gt;&lt;/returns&gt;</comment>
        <function_decl><type><name pos:line="94" pos:column="9">XElement</name></type> <name pos:line="94" pos:column="18">GetXElementForSourceFile</name><parameter_list pos:line="94" pos:column="42">(<param><decl><type><name pos:line="94" pos:column="43">string</name></type> <name pos:line="94" pos:column="50">sourceFilePath</name></decl></param>)</parameter_list>;</function_decl>

        <comment type="line" pos:line="96" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="97" pos:column="9">/// Remove a directory from &lt;see cref="MonitoredDirectories"/&gt;</comment>
        <comment type="line" pos:line="98" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="99" pos:column="9">/// &lt;param name="pathToDirectory"&gt;The directory to stop monitoring&lt;/param&gt;</comment>
        <function_decl><type><name pos:line="100" pos:column="9">void</name></type> <name pos:line="100" pos:column="14">RemoveDirectoryFromMonitor</name><parameter_list pos:line="100" pos:column="40">(<param><decl><type><name pos:line="100" pos:column="41">string</name></type> <name pos:line="100" pos:column="48">pathToDirectory</name></decl></param>)</parameter_list>;</function_decl>
        
        <comment type="line" pos:line="102" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="103" pos:column="9">/// Tells the srcML service to delete all of the data for this solution the next time it is opened</comment>
        <comment type="line" pos:line="104" pos:column="9">/// &lt;/summary&gt;</comment>
        <function_decl><type><name pos:line="105" pos:column="9">void</name></type> <name pos:line="105" pos:column="14">Reset</name><parameter_list pos:line="105" pos:column="19">()</parameter_list>;</function_decl>

        <comment type="line" pos:line="107" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="108" pos:column="9">/// Start monitoring the current solution</comment>
        <comment type="line" pos:line="109" pos:column="9">/// &lt;/summary&gt;</comment>
        <function_decl><type><name pos:line="110" pos:column="9">void</name></type> <name pos:line="110" pos:column="14">StartMonitoring</name><parameter_list pos:line="110" pos:column="29">()</parameter_list>;</function_decl>

        <comment type="line" pos:line="112" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="113" pos:column="9">/// Stop monitoring the current solution</comment>
        <comment type="line" pos:line="114" pos:column="9">/// &lt;/summary&gt;</comment>
        <function_decl><type><name pos:line="115" pos:column="9">void</name></type> <name pos:line="115" pos:column="14">StopMonitoring</name><parameter_list pos:line="115" pos:column="28">()</parameter_list>;</function_decl>
    }</block></class>

    <comment type="line" pos:line="118" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="119" pos:column="5">/// The goal of this interface is actually just to define a Type (or Guid from the native</comment>
    <comment type="line" pos:line="120" pos:column="5">/// client's point of view) that will be used to identify the service. In theory, we could use</comment>
    <comment type="line" pos:line="121" pos:column="5">/// the interface defined above, but it is a good practice to always define a new type as the</comment>
    <comment type="line" pos:line="122" pos:column="5">/// service's identifier because a service can expose different interfaces.</comment>
    <comment type="line" pos:line="123" pos:column="5">///</comment>
    <comment type="line" pos:line="124" pos:column="5">/// It is registered at: HKEY_USERS\S-1-5-21-1472859983-109138142-169162935-138973\Software\Microsoft\VisualStudio\11.0Exp_Config\Services\{fafafdfb-60f3-47e4-b38c-1bae05b44241}</comment>
    <comment type="line" pos:line="125" pos:column="5">/// &lt;/summary&gt;</comment>
    <class type="interface"><attribute pos:line="126" pos:column="5">[<expr><call><name pos:line="126" pos:column="6">Guid</name><argument_list pos:line="126" pos:column="10">(<argument><expr><name><name pos:line="126" pos:column="11">GuidList</name><op:operator pos:line="126" pos:column="19">.</op:operator><name pos:line="126" pos:column="20">SSrcMLGlobalServiceId</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
    <specifier pos:line="127" pos:column="5">public</specifier> interface <name pos:line="127" pos:column="22">SSrcMLGlobalService</name> <block pos:line="127" pos:column="42">{
    }</block></class>
}</block></namespace></unit>
