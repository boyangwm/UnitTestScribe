<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\ABB.SrcML.Data\DataProject.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2014 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Vinay Augustine (ABB Group) - initial API, implementation, &amp; documentation
 *    Patrick Francis (ABB Group) - initial API, implementation, &amp; documentation
 *****************************************************************************/</comment>

<using pos:line="13" pos:column="1">using <name pos:line="13" pos:column="7">System</name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Collections</name><op:operator pos:line="14" pos:column="25">.</op:operator><name pos:line="14" pos:column="26">Generic</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">IO</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Linq</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">System</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Text</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">System</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">Threading</name><op:operator pos:line="18" pos:column="23">.</op:operator><name pos:line="18" pos:column="24">Tasks</name></name>;</using>

<namespace pos:line="20" pos:column="1">namespace <name><name pos:line="20" pos:column="11">ABB</name><op:operator pos:line="20" pos:column="14">.</op:operator><name pos:line="20" pos:column="15">SrcML</name><op:operator pos:line="20" pos:column="20">.</op:operator><name pos:line="20" pos:column="21">Data</name></name> <block pos:line="20" pos:column="26">{
    <comment type="line" pos:line="21" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="22" pos:column="5">/// The project class is a wrapper that automates the connections between &lt;see cref="AbstractWorkingSet"/&gt; objects, &lt;see cref="DataArchive"/&gt; objects, and &lt;see cref="SrcMLArchive"/&gt; objects.</comment>
    <comment type="line" pos:line="23" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="24" pos:column="5">public</specifier> class <name><name pos:line="24" pos:column="18">DataProject</name><argument_list pos:line="24" pos:column="29">&lt;<argument><name pos:line="24" pos:column="30">TWorkingSet</name></argument>&gt;</argument_list></name> <super pos:line="24" pos:column="43">: <name pos:line="24" pos:column="45">SrcMLProject</name></super> <where pos:line="24" pos:column="58">where <name pos:line="24" pos:column="64">TWorkingSet</name> : <name pos:line="24" pos:column="78">AbstractWorkingSet</name>, new()</where> <block pos:line="24" pos:column="104">{
        <comment type="line" pos:line="25" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="26" pos:column="9">/// Creates a new project object</comment>
        <comment type="line" pos:line="27" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="28" pos:column="9">/// &lt;param name="baseDirectory"&gt;The directory to store the data in&lt;/param&gt;</comment>
        <comment type="line" pos:line="29" pos:column="9">/// &lt;param name="monitoredDirectory"&gt;The directory to monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="30" pos:column="9">/// &lt;param name="srcMLBinaryDirectory"&gt;The directory with &lt;c&gt;src2srcml.exe&lt;/c&gt;&lt;/param&gt;</comment>
        <constructor><specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">DataProject</name><parameter_list pos:line="31" pos:column="27">(<param><decl><type><name pos:line="31" pos:column="28">string</name></type> <name pos:line="31" pos:column="35">baseDirectory</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="50">string</name></type> <name pos:line="31" pos:column="57">monitoredDirectory</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="77">string</name></type> <name pos:line="31" pos:column="84">srcMLBinaryDirectory</name></decl></param>)</parameter_list>
            <member_list pos:line="32" pos:column="13">: <call><name pos:line="32" pos:column="15">base</name><argument_list pos:line="32" pos:column="19">(<argument><expr><name pos:line="32" pos:column="20">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="32" pos:column="35">monitoredDirectory</name></expr></argument>, <argument><expr><name pos:line="32" pos:column="55">srcMLBinaryDirectory</name></expr></argument>)</argument_list></call> </member_list><block pos:line="32" pos:column="77">{
            <expr_stmt><expr><name pos:line="33" pos:column="13">Data</name> <op:operator pos:line="33" pos:column="18">=</op:operator> <op:operator pos:line="33" pos:column="20">new</op:operator> <call><name pos:line="33" pos:column="24">DataArchive</name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">SourceArchive</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">SetupWorkingSet</name><argument_list pos:line="34" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">Data</name><op:operator pos:line="35" pos:column="17">.</op:operator><name pos:line="35" pos:column="18">Generator</name><op:operator pos:line="35" pos:column="27">.</op:operator><name pos:line="35" pos:column="28">IsLoggingErrors</name></name> <op:operator pos:line="35" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="35" pos:column="46">true</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">Data</name><op:operator pos:line="36" pos:column="17">.</op:operator><name pos:line="36" pos:column="18">Generator</name><op:operator pos:line="36" pos:column="27">.</op:operator><name pos:line="36" pos:column="28">ErrorLog</name></name> <op:operator pos:line="36" pos:column="37">=</op:operator> <name><name pos:line="36" pos:column="39">SourceArchive</name><op:operator pos:line="36" pos:column="52">.</op:operator><name pos:line="36" pos:column="53">Generator</name><op:operator pos:line="36" pos:column="62">.</op:operator><name pos:line="36" pos:column="63">ErrorLog</name></name></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="39" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="40" pos:column="9">/// Creates a new project object</comment>
        <comment type="line" pos:line="41" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="42" pos:column="9">/// &lt;param name="scheduler"&gt;The task scheduler&lt;/param&gt;</comment>
        <comment type="line" pos:line="43" pos:column="9">/// &lt;param name="monitor"&gt;The file monitor&lt;/param&gt;</comment>
        <comment type="line" pos:line="44" pos:column="9">/// &lt;param name="srcmlGenerator"&gt;The generator object for srcML&lt;/param&gt;</comment>
        <constructor><specifier pos:line="45" pos:column="9">public</specifier> <name pos:line="45" pos:column="16">DataProject</name><parameter_list pos:line="45" pos:column="27">(<param><decl><type><name pos:line="45" pos:column="28">TaskScheduler</name></type> <name pos:line="45" pos:column="42">scheduler</name></decl></param>, <param><decl><type><name pos:line="45" pos:column="53">AbstractFileMonitor</name></type> <name pos:line="45" pos:column="73">monitor</name></decl></param>, <param><decl><type><name pos:line="45" pos:column="82">SrcMLGenerator</name></type> <name pos:line="45" pos:column="97">srcmlGenerator</name></decl></param>)</parameter_list> 
        <member_list pos:line="46" pos:column="9">: <call><name pos:line="46" pos:column="11">base</name><argument_list pos:line="46" pos:column="15">(<argument><expr><name pos:line="46" pos:column="16">scheduler</name></expr></argument>, <argument><expr><name pos:line="46" pos:column="27">monitor</name></expr></argument>, <argument><expr><op:operator pos:line="46" pos:column="36">new</op:operator> <call><name pos:line="46" pos:column="40">SrcMLGenerator</name><argument_list pos:line="46" pos:column="54">()</argument_list></call></expr></argument>)</argument_list></call> </member_list><block pos:line="46" pos:column="58">{
            <decl_stmt><decl><type><name pos:line="47" pos:column="13">var</name></type> <name pos:line="47" pos:column="17">fileMapPath</name> <init pos:line="47" pos:column="29">= <expr><call><name><name pos:line="47" pos:column="31">Path</name><op:operator pos:line="47" pos:column="35">.</op:operator><name pos:line="47" pos:column="36">Combine</name></name><argument_list pos:line="47" pos:column="43">(<argument><expr><name pos:line="47" pos:column="44">StoragePath</name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="57">DataArchive</name><op:operator pos:line="47" pos:column="68">.</op:operator><name pos:line="47" pos:column="69">DEFAULT_ARCHIVE_DIRECTORY</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name pos:line="48" pos:column="13">Data</name> <op:operator pos:line="48" pos:column="18">=</op:operator> <op:operator pos:line="48" pos:column="20">new</op:operator> <call><name pos:line="48" pos:column="24">DataArchive</name><argument_list pos:line="48" pos:column="35">(<argument><expr><name pos:line="48" pos:column="36">StoragePath</name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="49">DataArchive</name><op:operator pos:line="48" pos:column="60">.</op:operator><name pos:line="48" pos:column="61">DEFAULT_ARCHIVE_DIRECTORY</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="48" pos:column="88">true</lit:literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="94">SourceArchive</name></expr></argument>, <argument><expr><op:operator pos:line="48" pos:column="109">new</op:operator> <call><name pos:line="48" pos:column="113">DataGenerator</name><argument_list pos:line="48" pos:column="126">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="48" pos:column="130">new</op:operator> <call><name pos:line="48" pos:column="134">DataFileNameMapping</name><argument_list pos:line="48" pos:column="153">(<argument><expr><name pos:line="48" pos:column="154">fileMapPath</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="48" pos:column="168">scheduler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name pos:line="50" pos:column="13">SetupWorkingSet</name><argument_list pos:line="50" pos:column="28">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name><name pos:line="52" pos:column="13">Data</name><op:operator pos:line="52" pos:column="17">.</op:operator><name pos:line="52" pos:column="18">Generator</name><op:operator pos:line="52" pos:column="27">.</op:operator><name pos:line="52" pos:column="28">IsLoggingErrors</name></name> <op:operator pos:line="52" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="52" pos:column="46">true</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="53" pos:column="13">Data</name><op:operator pos:line="53" pos:column="17">.</op:operator><name pos:line="53" pos:column="18">Generator</name><op:operator pos:line="53" pos:column="27">.</op:operator><name pos:line="53" pos:column="28">ErrorLog</name></name> <op:operator pos:line="53" pos:column="37">=</op:operator> <name><name pos:line="53" pos:column="39">SourceArchive</name><op:operator pos:line="53" pos:column="52">.</op:operator><name pos:line="53" pos:column="53">Generator</name><op:operator pos:line="53" pos:column="62">.</op:operator><name pos:line="53" pos:column="63">ErrorLog</name></name></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="56" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="57" pos:column="9">/// The archive for data</comment>
        <comment type="line" pos:line="58" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="59" pos:column="9">public</specifier> <name pos:line="59" pos:column="16">DataArchive</name></type> <name pos:line="59" pos:column="28">Data</name> <block pos:line="59" pos:column="33">{ <function_decl><name pos:line="59" pos:column="35">get</name>;</function_decl> <function_decl><specifier pos:line="59" pos:column="40">private</specifier> <name pos:line="59" pos:column="48">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="61" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="62" pos:column="9">/// The error log to write srcML generation and parse errors to. If null, no errors are written.</comment>
        <comment type="line" pos:line="63" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="64" pos:column="9">public</specifier> <specifier pos:line="64" pos:column="16">override</specifier> <name pos:line="64" pos:column="25">TextWriter</name></type> <name pos:line="64" pos:column="36">ErrorLog</name> <block pos:line="64" pos:column="45">{
            <function><name pos:line="65" pos:column="13">get</name> <block pos:line="65" pos:column="17">{ <return pos:line="65" pos:column="19">return <expr><name><name pos:line="65" pos:column="26">base</name><op:operator pos:line="65" pos:column="30">.</op:operator><name pos:line="65" pos:column="31">ErrorLog</name></name></expr>;</return> }</block></function>
            <function><name pos:line="66" pos:column="13">set</name> <block pos:line="66" pos:column="17">{
                <expr_stmt><expr><name><name pos:line="67" pos:column="17">base</name><op:operator pos:line="67" pos:column="21">.</op:operator><name pos:line="67" pos:column="22">ErrorLog</name></name> <op:operator pos:line="67" pos:column="31">=</op:operator> <name pos:line="67" pos:column="33">value</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="68" pos:column="17">Data</name><op:operator pos:line="68" pos:column="21">.</op:operator><name pos:line="68" pos:column="22">Generator</name><op:operator pos:line="68" pos:column="31">.</op:operator><name pos:line="68" pos:column="32">ErrorLog</name></name> <op:operator pos:line="68" pos:column="41">=</op:operator> <name pos:line="68" pos:column="43">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="72" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="73" pos:column="9">/// If true, exceptions are caught and logged to &lt;see cref="ErrorLog"/&gt;. Otherwise, the exception is thrown.</comment>
        <comment type="line" pos:line="74" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="75" pos:column="9">public</specifier> <specifier pos:line="75" pos:column="16">override</specifier> <name pos:line="75" pos:column="25">bool</name></type> <name pos:line="75" pos:column="30">IsLoggingErrors</name> <block pos:line="75" pos:column="46">{
            <function><name pos:line="76" pos:column="13">get</name> <block pos:line="76" pos:column="17">{ <return pos:line="76" pos:column="19">return <expr><name><name pos:line="76" pos:column="26">base</name><op:operator pos:line="76" pos:column="30">.</op:operator><name pos:line="76" pos:column="31">IsLoggingErrors</name></name></expr>;</return> }</block></function>
            <function><name pos:line="77" pos:column="13">set</name> <block pos:line="77" pos:column="17">{
                <expr_stmt><expr><name><name pos:line="78" pos:column="17">base</name><op:operator pos:line="78" pos:column="21">.</op:operator><name pos:line="78" pos:column="22">IsLoggingErrors</name></name> <op:operator pos:line="78" pos:column="38">=</op:operator> <name pos:line="78" pos:column="40">value</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="79" pos:column="17">Data</name><op:operator pos:line="79" pos:column="21">.</op:operator><name pos:line="79" pos:column="22">Generator</name><op:operator pos:line="79" pos:column="31">.</op:operator><name pos:line="79" pos:column="32">IsLoggingErrors</name></name> <op:operator pos:line="79" pos:column="48">=</op:operator> <name pos:line="79" pos:column="50">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="83" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="84" pos:column="9">/// Monitor to connect &lt;see cref="SrcMLProject.SourceArchive"/&gt; and &lt;see cref="Data"/&gt;</comment>
        <comment type="line" pos:line="85" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="86" pos:column="9">protected</specifier> <name><name pos:line="86" pos:column="19">ArchiveMonitor</name><argument_list pos:line="86" pos:column="33">&lt;<argument><name pos:line="86" pos:column="34">SrcMLArchive</name></argument>&gt;</argument_list></name></type> <name pos:line="86" pos:column="48">SourceArchiveMonitor</name> <block pos:line="86" pos:column="69">{ <function_decl><name pos:line="86" pos:column="71">get</name>;</function_decl> <function_decl><specifier pos:line="86" pos:column="76">private</specifier> <name pos:line="86" pos:column="84">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="88" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="89" pos:column="9">/// If null, unknown elements found by &lt;see cref="DataGenerator"/&gt; are ignored. Otherwise, they are logged.</comment>
        <comment type="line" pos:line="90" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="91" pos:column="9">public</specifier> <name pos:line="91" pos:column="16">TextWriter</name></type> <name pos:line="91" pos:column="27">UnknownLog</name> <block pos:line="91" pos:column="38">{
            <function><name pos:line="92" pos:column="13">get</name> <block pos:line="92" pos:column="17">{ <return pos:line="92" pos:column="19">return <expr><name><name pos:line="92" pos:column="26">Data</name><op:operator pos:line="92" pos:column="30">.</op:operator><name pos:line="92" pos:column="31">Generator</name><op:operator pos:line="92" pos:column="40">.</op:operator><name pos:line="92" pos:column="41">UnknownLog</name></name></expr>;</return> }</block></function>
            <function><name pos:line="93" pos:column="13">set</name> <block pos:line="93" pos:column="17">{ <expr_stmt><expr><name><name pos:line="93" pos:column="19">Data</name><op:operator pos:line="93" pos:column="23">.</op:operator><name pos:line="93" pos:column="24">Generator</name><op:operator pos:line="93" pos:column="33">.</op:operator><name pos:line="93" pos:column="34">UnknownLog</name></name> <op:operator pos:line="93" pos:column="45">=</op:operator> <name pos:line="93" pos:column="47">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="96" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="97" pos:column="9">/// The working set</comment>
        <comment type="line" pos:line="98" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="99" pos:column="9">public</specifier> <name pos:line="99" pos:column="16">TWorkingSet</name></type> <name pos:line="99" pos:column="28">WorkingSet</name> <block pos:line="99" pos:column="39">{ <function_decl><name pos:line="99" pos:column="41">get</name>;</function_decl> <function_decl><specifier pos:line="99" pos:column="46">private</specifier> <name pos:line="99" pos:column="54">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="101" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="102" pos:column="9">/// Sets up the working set object</comment>
        <comment type="line" pos:line="103" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="104" pos:column="9">protected</specifier> <name pos:line="104" pos:column="19">void</name></type> <name pos:line="104" pos:column="24">SetupWorkingSet</name><parameter_list pos:line="104" pos:column="39">()</parameter_list> <block pos:line="104" pos:column="42">{
            <expr_stmt><expr><name pos:line="105" pos:column="13">WorkingSet</name> <op:operator pos:line="105" pos:column="24">=</op:operator> <op:operator pos:line="105" pos:column="26">new</op:operator> <call><name pos:line="105" pos:column="30">TWorkingSet</name><argument_list pos:line="105" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="106" pos:column="13">WorkingSet</name><op:operator pos:line="106" pos:column="23">.</op:operator><name pos:line="106" pos:column="24">Factory</name></name> <op:operator pos:line="106" pos:column="32">=</op:operator> <op:operator pos:line="106" pos:column="34">new</op:operator> <call><name pos:line="106" pos:column="38">TaskFactory</name><argument_list pos:line="106" pos:column="49">(<argument><expr><name pos:line="106" pos:column="50">Scheduler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="107" pos:column="13">WorkingSet</name><op:operator pos:line="107" pos:column="23">.</op:operator><name pos:line="107" pos:column="24">Archive</name></name> <op:operator pos:line="107" pos:column="32">=</op:operator> <name pos:line="107" pos:column="34">Data</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="108" pos:column="13">SourceArchiveMonitor</name> <op:operator pos:line="108" pos:column="34">=</op:operator> <op:operator pos:line="108" pos:column="36">new</op:operator> <call><name><name pos:line="108" pos:column="40">ArchiveMonitor</name><argument_list pos:line="108" pos:column="54">&lt;<argument><name pos:line="108" pos:column="55">SrcMLArchive</name></argument>&gt;</argument_list></name><argument_list pos:line="108" pos:column="68">(<argument><expr><name pos:line="108" pos:column="69">Scheduler</name></expr></argument>, <argument><expr><name pos:line="108" pos:column="80">StoragePath</name></expr></argument>, <argument><expr><name pos:line="108" pos:column="93">SourceArchive</name></expr></argument>, <argument><expr><name pos:line="108" pos:column="108">Data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="111" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="112" pos:column="9">/// Updates all of the components of this working set:</comment>
        <comment type="line" pos:line="113" pos:column="9">/// &lt;list type="number"&gt;</comment>
        <comment type="line" pos:line="114" pos:column="9">/// &lt;item&gt;&lt;description&gt;Updates the &lt;see cref="SrcMLProject.SourceArchive"/&gt; and &lt;see cref="SrcMLProject.NonSourceArchive"/&gt; objects based on &lt;see cref="SrcMLProject.Monitor"/&gt;&lt;/description&gt;&lt;/item&gt;</comment>
        <comment type="line" pos:line="115" pos:column="9">/// &lt;item&gt;&lt;description&gt;Updates the &lt;see cref="Data"/&gt; based on the &lt;see cref="SrcMLProject.SourceArchive"/&gt;&lt;/description&gt;&lt;/item&gt;</comment>
        <comment type="line" pos:line="116" pos:column="9">/// &lt;item&gt;&lt;description&gt;Updates the &lt;see cref="Data"/&gt; based on the &lt;see cref="SrcMLProject.SourceArchive"/&gt;&lt;/description&gt;&lt;/item&gt;</comment>
        <comment type="line" pos:line="117" pos:column="9">/// &lt;/list&gt;</comment>
        <comment type="line" pos:line="118" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="119" pos:column="9">public</specifier> <specifier pos:line="119" pos:column="16">override</specifier> <name pos:line="119" pos:column="25">void</name></type> <name pos:line="119" pos:column="30">Update</name><parameter_list pos:line="119" pos:column="36">()</parameter_list> <block pos:line="119" pos:column="39">{
            <expr_stmt><expr><call><name><name pos:line="120" pos:column="13">base</name><op:operator pos:line="120" pos:column="17">.</op:operator><name pos:line="120" pos:column="18">Update</name></name><argument_list pos:line="120" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="121" pos:column="13">SourceArchiveMonitor</name><op:operator pos:line="121" pos:column="33">.</op:operator><name pos:line="121" pos:column="34">UpdateArchives</name></name><argument_list pos:line="121" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="122" pos:column="13">WorkingSet</name><op:operator pos:line="122" pos:column="23">.</op:operator><name pos:line="122" pos:column="24">Initialize</name></name><argument_list pos:line="122" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="125" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="126" pos:column="9">/// Updates all of the components of the working set asynchronously. This launches three tasks. Each task depends on its predecessor:</comment>
        <comment type="line" pos:line="127" pos:column="9">/// &lt;list type="number"&gt;</comment>
        <comment type="line" pos:line="128" pos:column="9">/// &lt;item&gt;&lt;description&gt;Update the &lt;see cref="SrcMLProject.SourceArchive"/&gt; and the &lt;see cref="SrcMLProject.NonSourceArchive"/&gt; objects based on &lt;see cref="SrcMLProject.Monitor"/&gt;&lt;/description&gt;&lt;/item&gt;</comment>
        <comment type="line" pos:line="129" pos:column="9">/// &lt;item&gt;&lt;description&gt;Updates the &lt;see cref="Data"/&gt; based on the &lt;see cref="SrcMLProject.SourceArchive"/&gt;&lt;/description&gt;&lt;/item&gt;</comment>
        <comment type="line" pos:line="130" pos:column="9">/// &lt;item&gt;&lt;description&gt;Updates the &lt;see cref="Data"/&gt; based on the &lt;see cref="SrcMLProject.SourceArchive"/&gt;&lt;/description&gt;&lt;/item&gt;</comment>
        <comment type="line" pos:line="131" pos:column="9">/// &lt;/list&gt;</comment>
        <comment type="line" pos:line="132" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="133" pos:column="9">/// &lt;returns&gt;The 3rd task&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="134" pos:column="9">public</specifier> <specifier pos:line="134" pos:column="16">override</specifier> <name pos:line="134" pos:column="25">Task</name></type> <name pos:line="134" pos:column="30">UpdateAsync</name><parameter_list pos:line="134" pos:column="41">()</parameter_list> <block pos:line="134" pos:column="44">{
            <return pos:line="135" pos:column="13">return <expr><call><name><name pos:line="135" pos:column="20">Task</name><op:operator pos:line="135" pos:column="24">.</op:operator><name pos:line="135" pos:column="25">Factory</name><op:operator pos:line="135" pos:column="32">.</op:operator><name pos:line="135" pos:column="33">StartNew</name></name><argument_list pos:line="135" pos:column="41">(<argument><expr><lambda><parameter_list pos:line="135" pos:column="42">()</parameter_list> <op:operator pos:line="135" pos:column="45">=&gt;</op:operator> <call><name><name pos:line="135" pos:column="48">base</name><op:operator pos:line="135" pos:column="52">.</op:operator><name pos:line="135" pos:column="53">UpdateAsync</name></name><argument_list pos:line="135" pos:column="64">()</argument_list></call><op:operator pos:line="135" pos:column="66">.</op:operator><call><name pos:line="135" pos:column="67">Wait</name><argument_list pos:line="135" pos:column="71">()</argument_list></call></lambda></expr></argument>)</argument_list></call>
                <op:operator pos:line="136" pos:column="17">.</op:operator><call><name pos:line="136" pos:column="18">ContinueWith</name><argument_list pos:line="136" pos:column="30">(<argument><expr><lambda><parameter_list pos:line="136" pos:column="31">(<param><decl><name pos:line="136" pos:column="32">t</name></decl></param>)</parameter_list> <op:operator pos:line="136" pos:column="35">=&gt;</op:operator> <call><name><name pos:line="136" pos:column="38">SourceArchiveMonitor</name><op:operator pos:line="136" pos:column="58">.</op:operator><name pos:line="136" pos:column="59">UpdateArchivesAsync</name></name><argument_list pos:line="136" pos:column="78">()</argument_list></call><op:operator pos:line="136" pos:column="80">.</op:operator><call><name pos:line="136" pos:column="81">Wait</name><argument_list pos:line="136" pos:column="85">()</argument_list></call></lambda></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="89">TaskContinuationOptions</name><op:operator pos:line="136" pos:column="112">.</op:operator><name pos:line="136" pos:column="113">OnlyOnRanToCompletion</name></name></expr></argument>)</argument_list></call>
                <op:operator pos:line="137" pos:column="17">.</op:operator><call><name pos:line="137" pos:column="18">ContinueWith</name><argument_list pos:line="137" pos:column="30">(<argument><expr><lambda><parameter_list pos:line="137" pos:column="31">(<param><decl><name pos:line="137" pos:column="32">t</name></decl></param>)</parameter_list> <op:operator pos:line="137" pos:column="35">=&gt;</op:operator> <call><name><name pos:line="137" pos:column="38">WorkingSet</name><op:operator pos:line="137" pos:column="48">.</op:operator><name pos:line="137" pos:column="49">InitializeAsync</name></name><argument_list pos:line="137" pos:column="64">()</argument_list></call><op:operator pos:line="137" pos:column="66">.</op:operator><call><name pos:line="137" pos:column="67">Wait</name><argument_list pos:line="137" pos:column="71">()</argument_list></call></lambda></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="75">TaskContinuationOptions</name><op:operator pos:line="137" pos:column="98">.</op:operator><name pos:line="137" pos:column="99">OnlyOnRanToCompletion</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="140" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="141" pos:column="9">/// Starts monitoring</comment>
        <comment type="line" pos:line="142" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="143" pos:column="9">public</specifier> <specifier pos:line="143" pos:column="16">override</specifier> <name pos:line="143" pos:column="25">void</name></type> <name pos:line="143" pos:column="30">StartMonitoring</name><parameter_list pos:line="143" pos:column="45">()</parameter_list> <block pos:line="143" pos:column="48">{
            <expr_stmt><expr><call><name><name pos:line="144" pos:column="13">WorkingSet</name><op:operator pos:line="144" pos:column="23">.</op:operator><name pos:line="144" pos:column="24">StartMonitoring</name></name><argument_list pos:line="144" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="145" pos:column="13">SourceArchiveMonitor</name><op:operator pos:line="145" pos:column="33">.</op:operator><name pos:line="145" pos:column="34">StartMonitoring</name></name><argument_list pos:line="145" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="146" pos:column="13">base</name><op:operator pos:line="146" pos:column="17">.</op:operator><name pos:line="146" pos:column="18">StartMonitoring</name></name><argument_list pos:line="146" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="149" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="150" pos:column="9">/// Stops monitoring</comment>
        <comment type="line" pos:line="151" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="152" pos:column="9">public</specifier> <specifier pos:line="152" pos:column="16">override</specifier> <name pos:line="152" pos:column="25">void</name></type> <name pos:line="152" pos:column="30">StopMonitoring</name><parameter_list pos:line="152" pos:column="44">()</parameter_list> <block pos:line="152" pos:column="47">{
            <expr_stmt><expr><call><name><name pos:line="153" pos:column="13">base</name><op:operator pos:line="153" pos:column="17">.</op:operator><name pos:line="153" pos:column="18">StopMonitoring</name></name><argument_list pos:line="153" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="154" pos:column="13">SourceArchiveMonitor</name><op:operator pos:line="154" pos:column="33">.</op:operator><name pos:line="154" pos:column="34">StopMonitoring</name></name><argument_list pos:line="154" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="155" pos:column="13">WorkingSet</name><op:operator pos:line="155" pos:column="23">.</op:operator><name pos:line="155" pos:column="24">StopMonitoring</name></name><argument_list pos:line="155" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
