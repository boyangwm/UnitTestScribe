<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\Tools\ABB.SrcML.Tools.ArchiveUpdater\MainWindow.xaml.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Windows</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Windows</name><op:operator pos:line="6" pos:column="21">.</op:operator><name pos:line="6" pos:column="22">Controls</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Windows</name><op:operator pos:line="7" pos:column="21">.</op:operator><name pos:line="7" pos:column="22">Data</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">System</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">Windows</name><op:operator pos:line="8" pos:column="21">.</op:operator><name pos:line="8" pos:column="22">Documents</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">System</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">Windows</name><op:operator pos:line="9" pos:column="21">.</op:operator><name pos:line="9" pos:column="22">Input</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">System</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">Windows</name><op:operator pos:line="10" pos:column="21">.</op:operator><name pos:line="10" pos:column="22">Media</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">System</name><op:operator pos:line="11" pos:column="13">.</op:operator><name pos:line="11" pos:column="14">Windows</name><op:operator pos:line="11" pos:column="21">.</op:operator><name pos:line="11" pos:column="22">Media</name><op:operator pos:line="11" pos:column="27">.</op:operator><name pos:line="11" pos:column="28">Imaging</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">System</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">Windows</name><op:operator pos:line="12" pos:column="21">.</op:operator><name pos:line="12" pos:column="22">Navigation</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Windows</name><op:operator pos:line="13" pos:column="21">.</op:operator><name pos:line="13" pos:column="22">Shapes</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">ABB</name><op:operator pos:line="14" pos:column="10">.</op:operator><name pos:line="14" pos:column="11">SrcML</name></name>;</using>
<using pos:line="15" pos:column="1">using <name pos:line="15" pos:column="7">FSPath</name> <init pos:line="15" pos:column="14">= <expr><name><name pos:line="15" pos:column="16">System</name><op:operator pos:line="15" pos:column="22">.</op:operator><name pos:line="15" pos:column="23">IO</name><op:operator pos:line="15" pos:column="25">.</op:operator><name pos:line="15" pos:column="26">Path</name></name></expr></init>;</using>

<namespace pos:line="17" pos:column="1">namespace <name><name pos:line="17" pos:column="11">ABB</name><op:operator pos:line="17" pos:column="14">.</op:operator><name pos:line="17" pos:column="15">SrcML</name><op:operator pos:line="17" pos:column="20">.</op:operator><name pos:line="17" pos:column="21">Tools</name><op:operator pos:line="17" pos:column="26">.</op:operator><name pos:line="17" pos:column="27">ArchiveUpdater</name></name>
<block pos:line="18" pos:column="1">{
    <comment type="line" pos:line="19" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="20" pos:column="5">/// Interaction logic for MainWindow.xaml</comment>
    <comment type="line" pos:line="21" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="22" pos:column="5">public</specifier> <specifier pos:line="22" pos:column="12">partial</specifier> class <name pos:line="22" pos:column="26">MainWindow</name> <super pos:line="22" pos:column="37">: <name pos:line="22" pos:column="39">Window</name></super>
    <block pos:line="23" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="24" pos:column="9">private</specifier> <name pos:line="24" pos:column="17">SrcMLArchive</name></type> <name pos:line="24" pos:column="30">_archive</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">private</specifier> <name pos:line="25" pos:column="17">FileSystemFolderMonitor</name></type> <name pos:line="25" pos:column="41">_monitor</name></decl>;</decl_stmt>
        <constructor><specifier pos:line="26" pos:column="9">public</specifier> <name pos:line="26" pos:column="16">MainWindow</name><parameter_list pos:line="26" pos:column="26">()</parameter_list>
        <block pos:line="27" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="28" pos:column="13">var</name></type> <name pos:line="28" pos:column="17">archivePath</name> <init pos:line="28" pos:column="29">= <expr><call><name><name pos:line="28" pos:column="31">FSPath</name><op:operator pos:line="28" pos:column="37">.</op:operator><name pos:line="28" pos:column="38">Combine</name></name><argument_list pos:line="28" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="28" pos:column="46">"."</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="28" pos:column="51">"ARCHIVE"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name pos:line="29" pos:column="13">_monitor</name> <op:operator pos:line="29" pos:column="22">=</op:operator> <op:operator pos:line="29" pos:column="24">new</op:operator> <call><name pos:line="29" pos:column="28">FileSystemFolderMonitor</name><argument_list pos:line="29" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="29" pos:column="52">"."</lit:literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="57">archivePath</name></expr></argument>, <argument><expr><op:operator pos:line="29" pos:column="70">new</op:operator> <call><name pos:line="29" pos:column="74">LastModifiedArchive</name><argument_list pos:line="29" pos:column="93">(<argument><expr><name pos:line="29" pos:column="94">archivePath</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="29" pos:column="108">new</op:operator> <call><name pos:line="29" pos:column="112">SrcMLArchive</name><argument_list pos:line="29" pos:column="124">(<argument><expr><name pos:line="29" pos:column="125">archivePath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">_monitor</name><op:operator pos:line="31" pos:column="21">.</op:operator><name pos:line="31" pos:column="22">FileChanged</name></name> <op:operator pos:line="31" pos:column="34">+=</op:operator> <name pos:line="31" pos:column="37">_archive_SourceFileChanged</name></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">_monitor</name><op:operator pos:line="33" pos:column="21">.</op:operator><name pos:line="33" pos:column="22">StartMonitoring</name></name><argument_list pos:line="33" pos:column="37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name pos:line="35" pos:column="13">InitializeComponent</name><argument_list pos:line="35" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><name pos:line="38" pos:column="9">void</name></type> <name pos:line="38" pos:column="14">_archive_SourceFileChanged</name><parameter_list pos:line="38" pos:column="40">(<param><decl><type><name pos:line="38" pos:column="41">object</name></type> <name pos:line="38" pos:column="48">sender</name></decl></param>, <param><decl><type><name pos:line="38" pos:column="56">FileEventRaisedArgs</name></type> <name pos:line="38" pos:column="76">e</name></decl></param>)</parameter_list>
        <block pos:line="39" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="40" pos:column="13">textBox1</name><op:operator pos:line="40" pos:column="21">.</op:operator><name pos:line="40" pos:column="22">Dispatcher</name><op:operator pos:line="40" pos:column="32">.</op:operator><name pos:line="40" pos:column="33">Invoke</name></name><argument_list pos:line="40" pos:column="39">(<argument><expr><name><name pos:line="40" pos:column="40">System</name><op:operator pos:line="40" pos:column="46">.</op:operator><name pos:line="40" pos:column="47">Windows</name><op:operator pos:line="40" pos:column="54">.</op:operator><name pos:line="40" pos:column="55">Threading</name><op:operator pos:line="40" pos:column="64">.</op:operator><name pos:line="40" pos:column="65">DispatcherPriority</name><op:operator pos:line="40" pos:column="83">.</op:operator><name pos:line="40" pos:column="84">Normal</name></name></expr></argument>,
                <argument><expr><op:operator pos:line="41" pos:column="17">new</op:operator> <call><name pos:line="41" pos:column="21">Action</name><argument_list pos:line="41" pos:column="27">(<argument><expr><lambda><parameter_list pos:line="41" pos:column="28">()</parameter_list> <op:operator pos:line="41" pos:column="31">=&gt;</op:operator>
                    <block pos:line="42" pos:column="21">{
                        <comment type="line" pos:line="43" pos:column="25">////if (SourceEventType.Renamed == e.EventType)</comment>
                        <decl_stmt><decl><type><name pos:line="44" pos:column="25">string</name></type> <name pos:line="44" pos:column="32">srcMLAvailableText</name> <init pos:line="44" pos:column="51">= <expr><op:operator pos:line="44" pos:column="53">(</op:operator><name><name pos:line="44" pos:column="54">e</name><op:operator pos:line="44" pos:column="55">.</op:operator><name pos:line="44" pos:column="56">HasSrcML</name> <type:modifier pos:line="44" pos:column="65">?</type:modifier></name> <lit:literal type="string" pos:line="44" pos:column="67">"(SrcML Available)"</lit:literal> <op:operator pos:line="44" pos:column="87">:</op:operator> <name><name pos:line="44" pos:column="89">String</name><op:operator pos:line="44" pos:column="95">.</op:operator><name pos:line="44" pos:column="96">Empty</name></name><op:operator pos:line="44" pos:column="101">)</op:operator></expr></init></decl>;</decl_stmt>
                        <if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><name><name pos:line="45" pos:column="29">FileEventType</name><op:operator pos:line="45" pos:column="42">.</op:operator><name pos:line="45" pos:column="43">FileRenamed</name></name><op:operator pos:line="45" pos:column="54">==</op:operator> <name><name pos:line="45" pos:column="57">e</name><op:operator pos:line="45" pos:column="58">.</op:operator><name pos:line="45" pos:column="59">EventType</name></name></expr>)</condition><then pos:line="45" pos:column="69">
                            <expr_stmt><expr><call><name><name pos:line="46" pos:column="29">textBox1</name><op:operator pos:line="46" pos:column="37">.</op:operator><name pos:line="46" pos:column="38">AppendText</name></name><argument_list pos:line="46" pos:column="48">(<argument><expr><call><name><name pos:line="46" pos:column="49">String</name><op:operator pos:line="46" pos:column="55">.</op:operator><name pos:line="46" pos:column="56">Format</name></name><argument_list pos:line="46" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="63">"{0} {1} to {2}\n"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="83">e</name><op:operator pos:line="46" pos:column="84">.</op:operator><name pos:line="46" pos:column="85">EventType</name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="96">e</name><op:operator pos:line="46" pos:column="97">.</op:operator><name pos:line="46" pos:column="98">OldFilePath</name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="111">e</name><op:operator pos:line="46" pos:column="112">.</op:operator><name pos:line="46" pos:column="113">FilePath</name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="123">srcMLAvailableText</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
                        <else pos:line="47" pos:column="25">else
                            <expr_stmt><expr><call><name><name pos:line="48" pos:column="29">textBox1</name><op:operator pos:line="48" pos:column="37">.</op:operator><name pos:line="48" pos:column="38">AppendText</name></name><argument_list pos:line="48" pos:column="48">(<argument><expr><call><name><name pos:line="48" pos:column="49">String</name><op:operator pos:line="48" pos:column="55">.</op:operator><name pos:line="48" pos:column="56">Format</name></name><argument_list pos:line="48" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="48" pos:column="63">"{0} {1} {2}\n"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="80">e</name><op:operator pos:line="48" pos:column="81">.</op:operator><name pos:line="48" pos:column="82">EventType</name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="93">e</name><op:operator pos:line="48" pos:column="94">.</op:operator><name pos:line="48" pos:column="95">FilePath</name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="105">srcMLAvailableText</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
                    }</block></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="52" pos:column="9">private</specifier> <name pos:line="52" pos:column="17">void</name></type> <name pos:line="52" pos:column="22">Window_Closing_1</name><parameter_list pos:line="52" pos:column="38">(<param><decl><type><name pos:line="52" pos:column="39">object</name></type> <name pos:line="52" pos:column="46">sender</name></decl></param>, <param><decl><type><name><name pos:line="52" pos:column="54">System</name><op:operator pos:line="52" pos:column="60">.</op:operator><name pos:line="52" pos:column="61">ComponentModel</name><op:operator pos:line="52" pos:column="75">.</op:operator><name pos:line="52" pos:column="76">CancelEventArgs</name></name></type> <name pos:line="52" pos:column="92">e</name></decl></param>)</parameter_list> <block pos:line="52" pos:column="95">{
            <expr_stmt><expr><call><name><name pos:line="53" pos:column="13">_monitor</name><op:operator pos:line="53" pos:column="21">.</op:operator><name pos:line="53" pos:column="22">Dispose</name></name><argument_list pos:line="53" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
