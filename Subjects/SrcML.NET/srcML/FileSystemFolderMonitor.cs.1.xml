<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\ABB.SrcML\FileSystemFolderMonitor.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Collections</name><op:operator pos:line="3" pos:column="25">.</op:operator><name pos:line="3" pos:column="26">ObjectModel</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">ComponentModel</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">IO</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Linq</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Text</name></name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">ABB</name><op:operator pos:line="9" pos:column="14">.</op:operator><name pos:line="9" pos:column="15">SrcML</name></name> <block pos:line="9" pos:column="21">{

    <comment type="line" pos:line="11" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="12" pos:column="5">/// An implementation of &lt;see cref="AbstractFileMonitor"/&gt; that responds to file system events.</comment>
    <comment type="line" pos:line="13" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="14" pos:column="5">public</specifier> class <name pos:line="14" pos:column="18">FileSystemFolderMonitor</name> <super pos:line="14" pos:column="42">: <name pos:line="14" pos:column="44">AbstractFileMonitor</name></super> <block pos:line="14" pos:column="64">{
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">private</specifier> <name pos:line="15" pos:column="17">FileSystemWatcher</name></type> <name pos:line="15" pos:column="35">_directoryWatcher</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">private</specifier> <name pos:line="16" pos:column="17">DirectoryInfo</name></type> <name pos:line="16" pos:column="31">_folderInfo</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">private</specifier> <name pos:line="17" pos:column="17">DirectoryInfo</name></type> <name pos:line="17" pos:column="31">_monitorStorageInfo</name></decl>;</decl_stmt>

        <comment type="line" pos:line="19" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="20" pos:column="9">/// Creates a new file system monitor</comment>
        <comment type="line" pos:line="21" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="22" pos:column="9">/// &lt;param name="pathToSourceFolder"&gt;The folder to watch&lt;/param&gt;</comment>
        <comment type="line" pos:line="23" pos:column="9">/// &lt;param name="monitoringStorage"&gt;The base directory for the archive data&lt;/param&gt;</comment>
        <constructor><specifier pos:line="24" pos:column="9">public</specifier> <name pos:line="24" pos:column="16">FileSystemFolderMonitor</name><parameter_list pos:line="24" pos:column="39">(<param><decl><type><name pos:line="24" pos:column="40">string</name></type> <name pos:line="24" pos:column="47">pathToSourceFolder</name></decl></param>, <param><decl><type><name pos:line="24" pos:column="67">string</name></type> <name pos:line="24" pos:column="74">monitoringStorage</name></decl></param>)</parameter_list> <member_list pos:line="24" pos:column="93">: <call><name pos:line="24" pos:column="95">this</name><argument_list pos:line="24" pos:column="99">(<argument><expr><name pos:line="24" pos:column="100">pathToSourceFolder</name></expr></argument>, <argument><expr><name pos:line="24" pos:column="120">monitoringStorage</name></expr></argument>, <argument><expr><name pos:line="24" pos:column="139">null</name></expr></argument>)</argument_list></call> </member_list><block pos:line="24" pos:column="145">{ }</block></constructor>

        <comment type="line" pos:line="26" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="27" pos:column="9">/// Creates a new file system monitor</comment>
        <comment type="line" pos:line="28" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="29" pos:column="9">/// &lt;param name="pathToSourceFolder"&gt;The folder to watch&lt;/param&gt;</comment>
        <comment type="line" pos:line="30" pos:column="9">/// &lt;param name="monitoringStorage"&gt;The base directory for the archive data&lt;/param&gt;</comment>
        <comment type="line" pos:line="31" pos:column="9">/// &lt;param name="defaultArchive"&gt;The default archive&lt;/param&gt;</comment>
        <comment type="line" pos:line="32" pos:column="9">/// &lt;param name="otherArchives"&gt;Other archives to register&lt;/param&gt;</comment>
        <constructor><specifier pos:line="33" pos:column="9">public</specifier> <name pos:line="33" pos:column="16">FileSystemFolderMonitor</name><parameter_list pos:line="33" pos:column="39">(<param><decl><type><name pos:line="33" pos:column="40">string</name></type> <name pos:line="33" pos:column="47">pathToSourceFolder</name></decl></param>, <param><decl><type><name pos:line="33" pos:column="67">string</name></type> <name pos:line="33" pos:column="74">monitoringStorage</name></decl></param>, <param><decl><type><name pos:line="33" pos:column="93">AbstractArchive</name></type> <name pos:line="33" pos:column="109">defaultArchive</name></decl></param>, <param><decl><type><specifier pos:line="33" pos:column="125">params</specifier> <name><name pos:line="33" pos:column="132">AbstractArchive</name><index pos:line="33" pos:column="147">[]</index></name></type> <name pos:line="33" pos:column="150">otherArchives</name></decl></param>)</parameter_list>
            <member_list pos:line="34" pos:column="13">: <call><name pos:line="34" pos:column="15">base</name><argument_list pos:line="34" pos:column="19">(<argument><expr><name pos:line="34" pos:column="20">monitoringStorage</name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">defaultArchive</name></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">otherArchives</name></expr></argument>)</argument_list></call> </member_list><block pos:line="34" pos:column="70">{
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">this</name><op:operator pos:line="35" pos:column="17">.</op:operator><name pos:line="35" pos:column="18">FullFolderPath</name></name> <op:operator pos:line="35" pos:column="33">=</op:operator> <name pos:line="35" pos:column="35">pathToSourceFolder</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">this</name><op:operator pos:line="36" pos:column="17">.</op:operator><name pos:line="36" pos:column="18">_monitorStorageInfo</name></name> <op:operator pos:line="36" pos:column="38">=</op:operator> <op:operator pos:line="36" pos:column="40">new</op:operator> <call><name pos:line="36" pos:column="44">DirectoryInfo</name><argument_list pos:line="36" pos:column="57">(<argument><expr><name pos:line="36" pos:column="58">monitoringStorage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">SetupFileSystemWatcher</name><argument_list pos:line="37" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="40" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="41" pos:column="9">/// The full path to the folder being monitored</comment>
        <comment type="line" pos:line="42" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="43" pos:column="9">public</specifier> <name pos:line="43" pos:column="16">string</name></type> <name pos:line="43" pos:column="23">FullFolderPath</name> <block pos:line="43" pos:column="38">{
            <function><name pos:line="44" pos:column="13">get</name> <block pos:line="44" pos:column="17">{
                <return pos:line="45" pos:column="17">return <expr><name><name pos:line="45" pos:column="24">this</name><op:operator pos:line="45" pos:column="28">.</op:operator><name pos:line="45" pos:column="29">_folderInfo</name><op:operator pos:line="45" pos:column="40">.</op:operator><name pos:line="45" pos:column="41">FullName</name></name></expr>;</return>
            }</block></function>
            <function><name pos:line="47" pos:column="13">set</name> <block pos:line="47" pos:column="17">{
                <expr_stmt><expr><name><name pos:line="48" pos:column="17">this</name><op:operator pos:line="48" pos:column="21">.</op:operator><name pos:line="48" pos:column="22">_folderInfo</name></name> <op:operator pos:line="48" pos:column="34">=</op:operator> <op:operator pos:line="48" pos:column="36">new</op:operator> <call><name pos:line="48" pos:column="40">DirectoryInfo</name><argument_list pos:line="48" pos:column="53">(<argument><expr><name pos:line="48" pos:column="54">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <cpp:region pos:line="52" pos:column="9">#<cpp:directive pos:line="52" pos:column="10">region</cpp:directive> AbstractArchive Members</cpp:region>

        <function><type><specifier pos:line="54" pos:column="9">public</specifier> <specifier pos:line="54" pos:column="16">override</specifier> <name><name pos:line="54" pos:column="25">IEnumerable</name><argument_list pos:line="54" pos:column="36">&lt;<argument><name pos:line="54" pos:column="37">string</name></argument>&gt;</argument_list></name></type> <name pos:line="54" pos:column="45">EnumerateMonitoredFiles</name><parameter_list pos:line="54" pos:column="68">()</parameter_list> <block pos:line="54" pos:column="71">{
            <decl_stmt><decl><type><name pos:line="55" pos:column="13">var</name></type> <name pos:line="55" pos:column="17">filePaths</name> <init pos:line="55" pos:column="27">= <expr><linq><from pos:line="55" pos:column="29">from <expr><name pos:line="55" pos:column="34">file</name></expr> <in pos:line="55" pos:column="39">in <expr><call><name><name pos:line="55" pos:column="42">this</name><op:operator pos:line="55" pos:column="46">.</op:operator><name pos:line="55" pos:column="47">_folderInfo</name><op:operator pos:line="55" pos:column="58">.</op:operator><name pos:line="55" pos:column="59">GetFiles</name></name><argument_list pos:line="55" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="68">"*"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="73">SearchOption</name><op:operator pos:line="55" pos:column="85">.</op:operator><name pos:line="55" pos:column="86">AllDirectories</name></name></expr></argument>)</argument_list></call></expr></in></from>
                            <select pos:line="56" pos:column="29">select <expr><name><name pos:line="56" pos:column="36">file</name><op:operator pos:line="56" pos:column="40">.</op:operator><name pos:line="56" pos:column="41">FullName</name></name></expr></select></linq></expr></init></decl>;</decl_stmt>
            <return pos:line="57" pos:column="13">return <expr><name pos:line="57" pos:column="20">filePaths</name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="60" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="61" pos:column="9">/// Start monitoring</comment>
        <comment type="line" pos:line="62" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="63" pos:column="9">public</specifier> <specifier pos:line="63" pos:column="16">override</specifier> <name pos:line="63" pos:column="25">void</name></type> <name pos:line="63" pos:column="30">StartMonitoring</name><parameter_list pos:line="63" pos:column="45">()</parameter_list> <block pos:line="63" pos:column="48">{
            <expr_stmt><expr><name><name pos:line="64" pos:column="13">this</name><op:operator pos:line="64" pos:column="17">.</op:operator><name pos:line="64" pos:column="18">_directoryWatcher</name><op:operator pos:line="64" pos:column="35">.</op:operator><name pos:line="64" pos:column="36">EnableRaisingEvents</name></name> <op:operator pos:line="64" pos:column="56">=</op:operator> <lit:literal type="boolean" pos:line="64" pos:column="58">true</lit:literal></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="67" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="68" pos:column="9">/// Stop monitoring</comment>
        <comment type="line" pos:line="69" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="70" pos:column="9">public</specifier> <specifier pos:line="70" pos:column="16">override</specifier> <name pos:line="70" pos:column="25">void</name></type> <name pos:line="70" pos:column="30">StopMonitoring</name><parameter_list pos:line="70" pos:column="44">()</parameter_list> <block pos:line="70" pos:column="47">{
            <expr_stmt><expr><name><name pos:line="71" pos:column="13">this</name><op:operator pos:line="71" pos:column="17">.</op:operator><name pos:line="71" pos:column="18">_directoryWatcher</name><op:operator pos:line="71" pos:column="35">.</op:operator><name pos:line="71" pos:column="36">EnableRaisingEvents</name></name> <op:operator pos:line="71" pos:column="56">=</op:operator> <lit:literal type="boolean" pos:line="71" pos:column="58">false</lit:literal></expr>;</expr_stmt>
        }</block></function>

        <cpp:endregion pos:line="74" pos:column="9">#<cpp:directive pos:line="74" pos:column="10">endregion</cpp:directive> AbstractArchive Members</cpp:endregion>

        <comment type="line" pos:line="76" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="77" pos:column="9">/// Checks if the path points to a file</comment>
        <comment type="line" pos:line="78" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="79" pos:column="9">/// &lt;param name="fullPath"&gt;the path to check&lt;/param&gt;</comment>
        <comment type="line" pos:line="80" pos:column="9">/// &lt;returns&gt;true if the path represents a file; false otherwise&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="81" pos:column="9">private</specifier> <specifier pos:line="81" pos:column="17">static</specifier> <name pos:line="81" pos:column="24">bool</name></type> <name pos:line="81" pos:column="29">isFile</name><parameter_list pos:line="81" pos:column="35">(<param><decl><type><name pos:line="81" pos:column="36">string</name></type> <name pos:line="81" pos:column="43">fullPath</name></decl></param>)</parameter_list> <block pos:line="81" pos:column="53">{
            <if pos:line="82" pos:column="13">if<condition pos:line="82" pos:column="15">(<expr><op:operator pos:line="82" pos:column="16">!</op:operator><call><name><name pos:line="82" pos:column="17">File</name><op:operator pos:line="82" pos:column="21">.</op:operator><name pos:line="82" pos:column="22">Exists</name></name><argument_list pos:line="82" pos:column="28">(<argument><expr><name pos:line="82" pos:column="29">fullPath</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="82" pos:column="39">
                <return pos:line="83" pos:column="17">return <expr><lit:literal type="boolean" pos:line="83" pos:column="24">false</lit:literal></expr>;</return></then></if>

            <decl_stmt><decl><type><name pos:line="85" pos:column="13">var</name></type> <name pos:line="85" pos:column="17">pathAttributes</name> <init pos:line="85" pos:column="32">= <expr><call><name><name pos:line="85" pos:column="34">File</name><op:operator pos:line="85" pos:column="38">.</op:operator><name pos:line="85" pos:column="39">GetAttributes</name></name><argument_list pos:line="85" pos:column="52">(<argument><expr><name pos:line="85" pos:column="53">fullPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="86" pos:column="13">return <expr><op:operator pos:line="86" pos:column="20">!</op:operator><call><name><name pos:line="86" pos:column="21">pathAttributes</name><op:operator pos:line="86" pos:column="35">.</op:operator><name pos:line="86" pos:column="36">HasFlag</name></name><argument_list pos:line="86" pos:column="43">(<argument><expr><name><name pos:line="86" pos:column="44">FileAttributes</name><op:operator pos:line="86" pos:column="58">.</op:operator><name pos:line="86" pos:column="59">Directory</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="89" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="90" pos:column="9">/// Respond to a file-changed event</comment>
        <comment type="line" pos:line="91" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="92" pos:column="9">/// &lt;param name="sender"&gt;The sender&lt;/param&gt;</comment>
        <comment type="line" pos:line="93" pos:column="9">/// &lt;param name="e"&gt;event arguments&lt;/param&gt;</comment>
        <function><type><specifier pos:line="94" pos:column="9">private</specifier> <name pos:line="94" pos:column="17">void</name></type> <name pos:line="94" pos:column="22">HandleFileChanged</name><parameter_list pos:line="94" pos:column="39">(<param><decl><type><name pos:line="94" pos:column="40">object</name></type> <name pos:line="94" pos:column="47">sender</name></decl></param>, <param><decl><type><name pos:line="94" pos:column="55">FileSystemEventArgs</name></type> <name pos:line="94" pos:column="75">e</name></decl></param>)</parameter_list> <block pos:line="94" pos:column="78">{
            <if pos:line="95" pos:column="13">if<condition pos:line="95" pos:column="15">(<expr><call><name pos:line="95" pos:column="16">IsNotInMonitoringStorage</name><argument_list pos:line="95" pos:column="40">(<argument><expr><name><name pos:line="95" pos:column="41">e</name><op:operator pos:line="95" pos:column="42">.</op:operator><name pos:line="95" pos:column="43">FullPath</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="95" pos:column="53"> <block pos:line="95" pos:column="54">{
                <expr_stmt><expr><call><name pos:line="96" pos:column="17">UpdateFile</name><argument_list pos:line="96" pos:column="27">(<argument><expr><name><name pos:line="96" pos:column="28">e</name><op:operator pos:line="96" pos:column="29">.</op:operator><name pos:line="96" pos:column="30">FullPath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="100" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="101" pos:column="9">/// Respond to a file-created event</comment>
        <comment type="line" pos:line="102" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="103" pos:column="9">/// &lt;param name="sender"&gt;The sender&lt;/param&gt;</comment>
        <comment type="line" pos:line="104" pos:column="9">/// &lt;param name="e"&gt;event arguments&lt;/param&gt;</comment>
        <function><type><specifier pos:line="105" pos:column="9">private</specifier> <name pos:line="105" pos:column="17">void</name></type> <name pos:line="105" pos:column="22">HandleFileCreated</name><parameter_list pos:line="105" pos:column="39">(<param><decl><type><name pos:line="105" pos:column="40">object</name></type> <name pos:line="105" pos:column="47">sender</name></decl></param>, <param><decl><type><name pos:line="105" pos:column="55">FileSystemEventArgs</name></type> <name pos:line="105" pos:column="75">e</name></decl></param>)</parameter_list> <block pos:line="105" pos:column="78">{
            <if pos:line="106" pos:column="13">if<condition pos:line="106" pos:column="15">(<expr><call><name pos:line="106" pos:column="16">IsNotInMonitoringStorage</name><argument_list pos:line="106" pos:column="40">(<argument><expr><name><name pos:line="106" pos:column="41">e</name><op:operator pos:line="106" pos:column="42">.</op:operator><name pos:line="106" pos:column="43">FullPath</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="106" pos:column="53"> <block pos:line="106" pos:column="54">{
                <expr_stmt><expr><call><name pos:line="107" pos:column="17">AddFile</name><argument_list pos:line="107" pos:column="24">(<argument><expr><name><name pos:line="107" pos:column="25">e</name><op:operator pos:line="107" pos:column="26">.</op:operator><name pos:line="107" pos:column="27">FullPath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="111" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="112" pos:column="9">/// Respond to a file-changed deleted</comment>
        <comment type="line" pos:line="113" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="114" pos:column="9">/// &lt;param name="sender"&gt;The sender&lt;/param&gt;</comment>
        <comment type="line" pos:line="115" pos:column="9">/// &lt;param name="e"&gt;event arguments&lt;/param&gt;</comment>
        <function><type><specifier pos:line="116" pos:column="9">private</specifier> <name pos:line="116" pos:column="17">void</name></type> <name pos:line="116" pos:column="22">HandleFileDeleted</name><parameter_list pos:line="116" pos:column="39">(<param><decl><type><name pos:line="116" pos:column="40">object</name></type> <name pos:line="116" pos:column="47">sender</name></decl></param>, <param><decl><type><name pos:line="116" pos:column="55">FileSystemEventArgs</name></type> <name pos:line="116" pos:column="75">e</name></decl></param>)</parameter_list> <block pos:line="116" pos:column="78">{
            <if pos:line="117" pos:column="13">if<condition pos:line="117" pos:column="15">(<expr><call><name pos:line="117" pos:column="16">IsNotInMonitoringStorage</name><argument_list pos:line="117" pos:column="40">(<argument><expr><name><name pos:line="117" pos:column="41">e</name><op:operator pos:line="117" pos:column="42">.</op:operator><name pos:line="117" pos:column="43">FullPath</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="117" pos:column="53"> <block pos:line="117" pos:column="54">{
                <expr_stmt><expr><call><name pos:line="118" pos:column="17">DeleteFile</name><argument_list pos:line="118" pos:column="27">(<argument><expr><name><name pos:line="118" pos:column="28">e</name><op:operator pos:line="118" pos:column="29">.</op:operator><name pos:line="118" pos:column="30">FullPath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="122" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="123" pos:column="9">/// Respond to a file-rename event</comment>
        <comment type="line" pos:line="124" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="125" pos:column="9">/// &lt;param name="sender"&gt;The sender&lt;/param&gt;</comment>
        <comment type="line" pos:line="126" pos:column="9">/// &lt;param name="e"&gt;event arguments&lt;/param&gt;</comment>
        <function><type><specifier pos:line="127" pos:column="9">private</specifier> <name pos:line="127" pos:column="17">void</name></type> <name pos:line="127" pos:column="22">HandleFileRenamed</name><parameter_list pos:line="127" pos:column="39">(<param><decl><type><name pos:line="127" pos:column="40">object</name></type> <name pos:line="127" pos:column="47">sender</name></decl></param>, <param><decl><type><name pos:line="127" pos:column="55">RenamedEventArgs</name></type> <name pos:line="127" pos:column="72">e</name></decl></param>)</parameter_list> <block pos:line="127" pos:column="75">{
            <if pos:line="128" pos:column="13">if<condition pos:line="128" pos:column="15">(<expr><call><name pos:line="128" pos:column="16">IsNotInMonitoringStorage</name><argument_list pos:line="128" pos:column="40">(<argument><expr><name><name pos:line="128" pos:column="41">e</name><op:operator pos:line="128" pos:column="42">.</op:operator><name pos:line="128" pos:column="43">FullPath</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="128" pos:column="53"> <block pos:line="128" pos:column="54">{
                <expr_stmt><expr><call><name pos:line="129" pos:column="17">RenameFile</name><argument_list pos:line="129" pos:column="27">(<argument><expr><name><name pos:line="129" pos:column="28">e</name><op:operator pos:line="129" pos:column="29">.</op:operator><name pos:line="129" pos:column="30">OldFullPath</name></name></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="43">e</name><op:operator pos:line="129" pos:column="44">.</op:operator><name pos:line="129" pos:column="45">FullPath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="133" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="134" pos:column="9">/// Respond to an error for the file system watcher. Not implemented.</comment>
        <comment type="line" pos:line="135" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="136" pos:column="9">/// &lt;param name="sender"&gt;The sender&lt;/param&gt;</comment>
        <comment type="line" pos:line="137" pos:column="9">/// &lt;param name="e"&gt;event arguments&lt;/param&gt;</comment>
        <function><type><specifier pos:line="138" pos:column="9">private</specifier> <name pos:line="138" pos:column="17">void</name></type> <name pos:line="138" pos:column="22">HandleFileWatcherError</name><parameter_list pos:line="138" pos:column="44">(<param><decl><type><name pos:line="138" pos:column="45">object</name></type> <name pos:line="138" pos:column="52">sender</name></decl></param>, <param><decl><type><name pos:line="138" pos:column="60">ErrorEventArgs</name></type> <name pos:line="138" pos:column="75">e</name></decl></param>)</parameter_list> <block pos:line="138" pos:column="78">{
            <throw pos:line="139" pos:column="13">throw <expr><op:operator pos:line="139" pos:column="19">new</op:operator> <call><name pos:line="139" pos:column="23">NotImplementedException</name><argument_list pos:line="139" pos:column="46">()</argument_list></call></expr>;</throw>
        }</block></function>

        <comment type="line" pos:line="142" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="143" pos:column="9">/// Checks if the path is located within the archive directory</comment>
        <comment type="line" pos:line="144" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="145" pos:column="9">/// &lt;param name="filePath"&gt;the path to check&lt;/param&gt;</comment>
        <comment type="line" pos:line="146" pos:column="9">/// &lt;returns&gt;True if the path is in the see</comment>
        <comment type="line" pos:line="147" pos:column="9">/// cref="AbstractFileMonitor.MonitorStoragePath"/&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="148" pos:column="9">private</specifier> <name pos:line="148" pos:column="17">bool</name></type> <name pos:line="148" pos:column="22">IsNotInMonitoringStorage</name><parameter_list pos:line="148" pos:column="46">(<param><decl><type><name pos:line="148" pos:column="47">string</name></type> <name pos:line="148" pos:column="54">filePath</name></decl></param>)</parameter_list> <block pos:line="148" pos:column="64">{
            <return pos:line="149" pos:column="13">return <expr><op:operator pos:line="149" pos:column="20">!</op:operator><call><name><name pos:line="149" pos:column="21">Path</name><op:operator pos:line="149" pos:column="25">.</op:operator><name pos:line="149" pos:column="26">GetFullPath</name></name><argument_list pos:line="149" pos:column="37">(<argument><expr><name pos:line="149" pos:column="38">filePath</name></expr></argument>)</argument_list></call><op:operator pos:line="149" pos:column="47">.</op:operator><call><name pos:line="149" pos:column="48">StartsWith</name><argument_list pos:line="149" pos:column="58">(<argument><expr><name><name pos:line="149" pos:column="59">_monitorStorageInfo</name><op:operator pos:line="149" pos:column="78">.</op:operator><name pos:line="149" pos:column="79">FullName</name></name></expr></argument>, <argument><expr><name><name pos:line="149" pos:column="89">StringComparison</name><op:operator pos:line="149" pos:column="105">.</op:operator><name pos:line="149" pos:column="106">OrdinalIgnoreCase</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="152" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="153" pos:column="9">/// Sets up the internal file system monitor</comment>
        <comment type="line" pos:line="154" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="155" pos:column="9">private</specifier> <name pos:line="155" pos:column="17">void</name></type> <name pos:line="155" pos:column="22">SetupFileSystemWatcher</name><parameter_list pos:line="155" pos:column="44">()</parameter_list> <block pos:line="155" pos:column="47">{
            <expr_stmt><expr><name><name pos:line="156" pos:column="13">this</name><op:operator pos:line="156" pos:column="17">.</op:operator><name pos:line="156" pos:column="18">_directoryWatcher</name></name> <op:operator pos:line="156" pos:column="36">=</op:operator> <op:operator pos:line="156" pos:column="38">new</op:operator> <call><name pos:line="156" pos:column="42">FileSystemWatcher</name><argument_list pos:line="156" pos:column="59">(<argument><expr><name><name pos:line="156" pos:column="60">this</name><op:operator pos:line="156" pos:column="64">.</op:operator><name pos:line="156" pos:column="65">FullFolderPath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name><name pos:line="158" pos:column="13">this</name><op:operator pos:line="158" pos:column="17">.</op:operator><name pos:line="158" pos:column="18">_directoryWatcher</name><op:operator pos:line="158" pos:column="35">.</op:operator><name pos:line="158" pos:column="36">NotifyFilter</name></name> <op:operator pos:line="158" pos:column="49">=</op:operator> <name><name pos:line="158" pos:column="51">NotifyFilters</name><op:operator pos:line="158" pos:column="64">.</op:operator><name pos:line="158" pos:column="65">FileName</name></name> <op:operator pos:line="158" pos:column="74">|</op:operator> <name><name pos:line="158" pos:column="76">NotifyFilters</name><op:operator pos:line="158" pos:column="89">.</op:operator><name pos:line="158" pos:column="90">LastWrite</name></name> <op:operator pos:line="158" pos:column="100">|</op:operator> <name><name pos:line="158" pos:column="102">NotifyFilters</name><op:operator pos:line="158" pos:column="115">.</op:operator><name pos:line="158" pos:column="116">Attributes</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="159" pos:column="13">this</name><op:operator pos:line="159" pos:column="17">.</op:operator><name pos:line="159" pos:column="18">_directoryWatcher</name><op:operator pos:line="159" pos:column="35">.</op:operator><name pos:line="159" pos:column="36">IncludeSubdirectories</name></name> <op:operator pos:line="159" pos:column="58">=</op:operator> <lit:literal type="boolean" pos:line="159" pos:column="60">true</lit:literal></expr>;</expr_stmt>

            <expr_stmt><expr><name><name pos:line="161" pos:column="13">this</name><op:operator pos:line="161" pos:column="17">.</op:operator><name pos:line="161" pos:column="18">_directoryWatcher</name><op:operator pos:line="161" pos:column="35">.</op:operator><name pos:line="161" pos:column="36">Changed</name></name> <op:operator pos:line="161" pos:column="44">+=</op:operator> <name pos:line="161" pos:column="47">HandleFileChanged</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="162" pos:column="13">this</name><op:operator pos:line="162" pos:column="17">.</op:operator><name pos:line="162" pos:column="18">_directoryWatcher</name><op:operator pos:line="162" pos:column="35">.</op:operator><name pos:line="162" pos:column="36">Created</name></name> <op:operator pos:line="162" pos:column="44">+=</op:operator> <name pos:line="162" pos:column="47">HandleFileCreated</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="163" pos:column="13">this</name><op:operator pos:line="163" pos:column="17">.</op:operator><name pos:line="163" pos:column="18">_directoryWatcher</name><op:operator pos:line="163" pos:column="35">.</op:operator><name pos:line="163" pos:column="36">Deleted</name></name> <op:operator pos:line="163" pos:column="44">+=</op:operator> <name pos:line="163" pos:column="47">HandleFileDeleted</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="164" pos:column="13">this</name><op:operator pos:line="164" pos:column="17">.</op:operator><name pos:line="164" pos:column="18">_directoryWatcher</name><op:operator pos:line="164" pos:column="35">.</op:operator><name pos:line="164" pos:column="36">Error</name></name> <op:operator pos:line="164" pos:column="42">+=</op:operator> <name pos:line="164" pos:column="45">HandleFileWatcherError</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="165" pos:column="13">this</name><op:operator pos:line="165" pos:column="17">.</op:operator><name pos:line="165" pos:column="18">_directoryWatcher</name><op:operator pos:line="165" pos:column="35">.</op:operator><name pos:line="165" pos:column="36">Renamed</name></name> <op:operator pos:line="165" pos:column="44">+=</op:operator> <name pos:line="165" pos:column="47">HandleFileRenamed</name></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
