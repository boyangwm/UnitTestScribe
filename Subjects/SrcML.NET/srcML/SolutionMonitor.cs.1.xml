<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\VisualStudio\ABB.SrcML.VisualStudio.SolutionMonitor\SolutionMonitor.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">ABB</name><op:operator pos:line="1" pos:column="10">.</op:operator><name pos:line="1" pos:column="11">SrcML</name><op:operator pos:line="1" pos:column="16">.</op:operator><name pos:line="1" pos:column="17">Utilities</name></name>;</using>
<using pos:line="2" pos:column="1">using <name pos:line="2" pos:column="7">EnvDTE</name>;</using>
<using pos:line="3" pos:column="1">using <name pos:line="3" pos:column="7">log4net</name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Microsoft</name><op:operator pos:line="4" pos:column="16">.</op:operator><name pos:line="4" pos:column="17">VisualStudio</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Microsoft</name><op:operator pos:line="5" pos:column="16">.</op:operator><name pos:line="5" pos:column="17">VisualStudio</name><op:operator pos:line="5" pos:column="29">.</op:operator><name pos:line="5" pos:column="30">Shell</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Microsoft</name><op:operator pos:line="6" pos:column="16">.</op:operator><name pos:line="6" pos:column="17">VisualStudio</name><op:operator pos:line="6" pos:column="29">.</op:operator><name pos:line="6" pos:column="30">Shell</name><op:operator pos:line="6" pos:column="35">.</op:operator><name pos:line="6" pos:column="36">Interop</name></name>;</using>

<comment type="block" pos:line="8" pos:column="1">/******************************************************************************
 * Copyright (c) 2013 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Jiang Zheng (ABB Group) - Initial implementation
 *****************************************************************************/</comment>

<using pos:line="19" pos:column="1">using <name pos:line="19" pos:column="7">System</name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">System</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">Collections</name></name>;</using>
<using pos:line="21" pos:column="1">using <name><name pos:line="21" pos:column="7">System</name><op:operator pos:line="21" pos:column="13">.</op:operator><name pos:line="21" pos:column="14">Collections</name><op:operator pos:line="21" pos:column="25">.</op:operator><name pos:line="21" pos:column="26">Generic</name></name>;</using>
<using pos:line="22" pos:column="1">using <name><name pos:line="22" pos:column="7">System</name><op:operator pos:line="22" pos:column="13">.</op:operator><name pos:line="22" pos:column="14">Collections</name><op:operator pos:line="22" pos:column="25">.</op:operator><name pos:line="22" pos:column="26">ObjectModel</name></name>;</using>
<using pos:line="23" pos:column="1">using <name><name pos:line="23" pos:column="7">System</name><op:operator pos:line="23" pos:column="13">.</op:operator><name pos:line="23" pos:column="14">ComponentModel</name></name>;</using>
<using pos:line="24" pos:column="1">using <name><name pos:line="24" pos:column="7">System</name><op:operator pos:line="24" pos:column="13">.</op:operator><name pos:line="24" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="25" pos:column="1">using <name><name pos:line="25" pos:column="7">System</name><op:operator pos:line="25" pos:column="13">.</op:operator><name pos:line="25" pos:column="14">IO</name></name>;</using>
<using pos:line="26" pos:column="1">using <name><name pos:line="26" pos:column="7">System</name><op:operator pos:line="26" pos:column="13">.</op:operator><name pos:line="26" pos:column="14">Linq</name></name>;</using>
<using pos:line="27" pos:column="1">using <name><name pos:line="27" pos:column="7">System</name><op:operator pos:line="27" pos:column="13">.</op:operator><name pos:line="27" pos:column="14">Runtime</name><op:operator pos:line="27" pos:column="21">.</op:operator><name pos:line="27" pos:column="22">InteropServices</name></name>;</using>
<using pos:line="28" pos:column="1">using <name><name pos:line="28" pos:column="7">System</name><op:operator pos:line="28" pos:column="13">.</op:operator><name pos:line="28" pos:column="14">Threading</name></name>;</using>
<using pos:line="29" pos:column="1">using <name><name pos:line="29" pos:column="7">System</name><op:operator pos:line="29" pos:column="13">.</op:operator><name pos:line="29" pos:column="14">Xml</name><op:operator pos:line="29" pos:column="17">.</op:operator><name pos:line="29" pos:column="18">Linq</name></name>;</using>
<using pos:line="30" pos:column="1">using <name pos:line="30" pos:column="7">Thread</name> <init pos:line="30" pos:column="14">= <expr><name><name pos:line="30" pos:column="16">System</name><op:operator pos:line="30" pos:column="22">.</op:operator><name pos:line="30" pos:column="23">Threading</name><op:operator pos:line="30" pos:column="32">.</op:operator><name pos:line="30" pos:column="33">Thread</name></name></expr></init>;</using>

<namespace pos:line="32" pos:column="1">namespace <name><name pos:line="32" pos:column="11">ABB</name><op:operator pos:line="32" pos:column="14">.</op:operator><name pos:line="32" pos:column="15">SrcML</name><op:operator pos:line="32" pos:column="20">.</op:operator><name pos:line="32" pos:column="21">VisualStudio</name><op:operator pos:line="32" pos:column="33">.</op:operator><name pos:line="32" pos:column="34">SolutionMonitor</name></name> <block pos:line="32" pos:column="50">{

    <comment type="line" pos:line="34" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="35" pos:column="5">/// This class implements three Visual Studio basic IDE interfaces: (1)</comment>
    <comment type="line" pos:line="36" pos:column="5">/// IVsTrackProjectDocumentsEvents2: Notifies clients of changes made to project files or</comment>
    <comment type="line" pos:line="37" pos:column="5">/// directories. Methods of this interface were implemented to handle file creation and deletion</comment>
    <comment type="line" pos:line="38" pos:column="5">/// events in Visual Studio envinronment. (2) IVsRunningDocTableEvents: Implements methods that</comment>
    <comment type="line" pos:line="39" pos:column="5">/// fire in response to changes to documents in the Running Document Table (RDT). Methods of</comment>
    <comment type="line" pos:line="40" pos:column="5">/// this interface were implemented to handle file change events in Visual Studio envinronment.</comment>
    <comment type="line" pos:line="41" pos:column="5">/// (3) IVsSolutionEvents: Listening interface that monitors any notifications of changes to the</comment>
    <comment type="line" pos:line="42" pos:column="5">/// solution. Methods of this interface were implemented to handle project</comment>
    <comment type="line" pos:line="43" pos:column="5">/// creation/change/deletion events in Visual Studio envinronment. This class also extends</comment>
    <comment type="line" pos:line="44" pos:column="5">/// AbstractFileMonitor so that SrcMLService can subscribe events that are raised from solution</comment>
    <comment type="line" pos:line="45" pos:column="5">/// monitor.</comment>
    <comment type="line" pos:line="46" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="47" pos:column="5">public</specifier> class <name pos:line="47" pos:column="18">SolutionMonitor</name> <super pos:line="47" pos:column="34">: <name pos:line="47" pos:column="36">AbstractFileMonitor</name>, <name pos:line="47" pos:column="57">IVsTrackProjectDocumentsEvents2</name>, <name pos:line="47" pos:column="90">IVsRunningDocTableEvents</name>, <name pos:line="47" pos:column="116">IVsSolutionEvents</name></super> <block pos:line="47" pos:column="134">{
        <comment type="block" pos:line="48" pos:column="9">/*
        public string FullFolderPath { get; set; }
        */</comment>

        <comment type="line" pos:line="52" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="53" pos:column="9">/// OpenSolution: The solution to be monitored.</comment>
        <comment type="line" pos:line="54" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="55" pos:column="9">private</specifier> <specifier pos:line="55" pos:column="17">readonly</specifier> <name pos:line="55" pos:column="26">SolutionWrapper</name></type> <name pos:line="55" pos:column="42">OpenSolution</name></decl>;</decl_stmt>

        <comment type="line" pos:line="57" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="58" pos:column="9">/// List of all "monitored" files.</comment>
        <comment type="line" pos:line="59" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="60" pos:column="9">private</specifier> <name><name pos:line="60" pos:column="17">List</name><argument_list pos:line="60" pos:column="21">&lt;<argument><name pos:line="60" pos:column="22">string</name></argument>&gt;</argument_list></name></type> <name pos:line="60" pos:column="30">AllMonitoredFiles</name></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="62" pos:column="9">private</specifier> <name pos:line="62" pos:column="17">uint</name></type> <name pos:line="62" pos:column="22">cookie</name> <init pos:line="62" pos:column="29">= <expr><name><name pos:line="62" pos:column="31">VSConstants</name><op:operator pos:line="62" pos:column="42">.</op:operator><name pos:line="62" pos:column="43">VSCOOKIE_NIL</name></name></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:line="64" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="65" pos:column="9">/// IVsRunningDocumentTable: Manages the set of currently open documents in the environment.</comment>
        <comment type="line" pos:line="66" pos:column="9">/// DocumentTableItemId is used in registering/unregistering events.</comment>
        <comment type="line" pos:line="67" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="68" pos:column="9">private</specifier> <name pos:line="68" pos:column="17">IVsRunningDocumentTable</name></type> <name pos:line="68" pos:column="41">DocumentTable</name></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="70" pos:column="9">private</specifier> <name pos:line="70" pos:column="17">uint</name></type> <name pos:line="70" pos:column="22">DocumentTableItemId</name></decl>;</decl_stmt>

        <comment type="line" pos:line="72" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="73" pos:column="9">/// A bool flag indicating whether Solution Monitor is about to stop monitoring.</comment>
        <comment type="line" pos:line="74" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="75" pos:column="9">private</specifier> <name pos:line="75" pos:column="17">bool</name></type> <name pos:line="75" pos:column="22">isAboutToStopMonitoring</name> <init pos:line="75" pos:column="46">= <expr><lit:literal type="boolean" pos:line="75" pos:column="48">false</lit:literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="77" pos:column="9">private</specifier> <name pos:line="77" pos:column="17">uint</name></type> <name pos:line="77" pos:column="22">PdwCookie</name> <init pos:line="77" pos:column="32">= <expr><name><name pos:line="77" pos:column="34">VSConstants</name><op:operator pos:line="77" pos:column="45">.</op:operator><name pos:line="77" pos:column="46">VSCOOKIE_NIL</name></name></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:line="79" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="80" pos:column="9">/// IVsTrackProjectDocumentsEvents2: Used by projects to query the environment for</comment>
        <comment type="line" pos:line="81" pos:column="9">/// permission to add, remove, or rename a file or directory in a solution. pdwCookie is</comment>
        <comment type="line" pos:line="82" pos:column="9">/// used in registering/unregistering events.</comment>
        <comment type="line" pos:line="83" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="84" pos:column="9">private</specifier> <name pos:line="84" pos:column="17">IVsTrackProjectDocuments2</name></type> <name pos:line="84" pos:column="43">ProjectDocumentsTracker</name></decl>;</decl_stmt>

        <comment type="line" pos:line="86" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="87" pos:column="9">/// IVsSolution: Provides top-level manipulation or maintenance of the solution.</comment>
        <comment type="line" pos:line="88" pos:column="9">/// cookie is used in registering/unregistering events.</comment>
        <comment type="line" pos:line="89" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="90" pos:column="9">private</specifier> <name pos:line="90" pos:column="17">IVsSolution</name></type> <name pos:line="90" pos:column="29">solution</name></decl>;</decl_stmt>

        <comment type="line" pos:line="92" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="93" pos:column="9">/// Constructor.</comment>
        <comment type="line" pos:line="94" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="95" pos:column="9">/// &lt;param name="openSolution"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="96" pos:column="9">/// &lt;param name="baseDirectory"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="97" pos:column="9">/// &lt;param name="defaultArchive"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="98" pos:column="9">/// &lt;param name="otherArchives"&gt;&lt;/param&gt;</comment>
        <constructor><specifier pos:line="99" pos:column="9">public</specifier> <name pos:line="99" pos:column="16">SolutionMonitor</name><parameter_list pos:line="99" pos:column="31">(<param><decl><type><name pos:line="99" pos:column="32">SolutionWrapper</name></type> <name pos:line="99" pos:column="48">openSolution</name></decl></param>, <param><decl><type><name pos:line="99" pos:column="62">string</name></type> <name pos:line="99" pos:column="69">baseDirectory</name></decl></param>, <param><decl><type><name pos:line="99" pos:column="84">AbstractArchive</name></type> <name pos:line="99" pos:column="100">defaultArchive</name></decl></param>, <param><decl><type><specifier pos:line="99" pos:column="116">params</specifier> <name><name pos:line="99" pos:column="123">AbstractArchive</name><index pos:line="99" pos:column="138">[]</index></name></type> <name pos:line="99" pos:column="141">otherArchives</name></decl></param>)</parameter_list>
            <member_list pos:line="100" pos:column="13">: <call><name pos:line="100" pos:column="15">base</name><argument_list pos:line="100" pos:column="19">(<argument><expr><name pos:line="100" pos:column="20">baseDirectory</name></expr></argument>, <argument><expr><name pos:line="100" pos:column="35">defaultArchive</name></expr></argument>, <argument><expr><name pos:line="100" pos:column="51">otherArchives</name></expr></argument>)</argument_list></call> </member_list><block pos:line="100" pos:column="66">{
            <expr_stmt><expr><name><name pos:line="101" pos:column="13">this</name><op:operator pos:line="101" pos:column="17">.</op:operator><name pos:line="101" pos:column="18">OpenSolution</name></name> <op:operator pos:line="101" pos:column="31">=</op:operator> <name pos:line="101" pos:column="33">openSolution</name></expr>;</expr_stmt>
        }</block></constructor>

        <cpp:region pos:line="104" pos:column="9">#<cpp:directive pos:line="104" pos:column="10">region</cpp:directive> AbstractFileMonitor Members</cpp:region>

        <function><type><specifier pos:line="106" pos:column="9">public</specifier> <specifier pos:line="106" pos:column="16">override</specifier> <name><name pos:line="106" pos:column="25">IEnumerable</name><argument_list pos:line="106" pos:column="36">&lt;<argument><name pos:line="106" pos:column="37">string</name></argument>&gt;</argument_list></name></type> <name pos:line="106" pos:column="45">EnumerateMonitoredFiles</name><parameter_list pos:line="106" pos:column="68">()</parameter_list> <block pos:line="106" pos:column="71">{
            <return pos:line="107" pos:column="13">return <expr><call><name pos:line="107" pos:column="20">GetMonitoredFiles</name><argument_list pos:line="107" pos:column="37">(<argument><expr><name pos:line="107" pos:column="38">null</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="110" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="111" pos:column="9">/// Start monitoring the solution.</comment>
        <comment type="line" pos:line="112" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="113" pos:column="9">public</specifier> <specifier pos:line="113" pos:column="16">override</specifier> <name pos:line="113" pos:column="25">void</name></type> <name pos:line="113" pos:column="30">StartMonitoring</name><parameter_list pos:line="113" pos:column="45">()</parameter_list> <block pos:line="113" pos:column="48">{
            <expr_stmt><expr><call><name><name pos:line="114" pos:column="13">SrcMLFileLogger</name><op:operator pos:line="114" pos:column="28">.</op:operator><name pos:line="114" pos:column="29">DefaultLogger</name><op:operator pos:line="114" pos:column="42">.</op:operator><name pos:line="114" pos:column="43">Info</name></name><argument_list pos:line="114" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="114" pos:column="48">"======= SolutionMonitor: START MONITORING ======="</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="115" pos:column="13">RegisterSolutionEvents</name><argument_list pos:line="115" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="116" pos:column="13">RegisterTrackProjectDocumentsEvents2</name><argument_list pos:line="116" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="117" pos:column="13">RegisterRunningDocumentTableEvents</name><argument_list pos:line="117" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="120" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="121" pos:column="9">/// Stop monitoring the solution.</comment>
        <comment type="line" pos:line="122" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="123" pos:column="9">public</specifier> <specifier pos:line="123" pos:column="16">override</specifier> <name pos:line="123" pos:column="25">void</name></type> <name pos:line="123" pos:column="30">StopMonitoring</name><parameter_list pos:line="123" pos:column="44">()</parameter_list> <block pos:line="123" pos:column="47">{
            <expr_stmt><expr><call><name><name pos:line="124" pos:column="13">SrcMLFileLogger</name><op:operator pos:line="124" pos:column="28">.</op:operator><name pos:line="124" pos:column="29">DefaultLogger</name><op:operator pos:line="124" pos:column="42">.</op:operator><name pos:line="124" pos:column="43">Info</name></name><argument_list pos:line="124" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="124" pos:column="48">"======= SolutionMonitor: STOP MONITORING ======="</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="125" pos:column="13">isAboutToStopMonitoring</name> <op:operator pos:line="125" pos:column="37">=</op:operator> <lit:literal type="boolean" pos:line="125" pos:column="39">true</lit:literal></expr>;</expr_stmt>

            <expr_stmt><expr><call><name pos:line="127" pos:column="13">UnregisterRunningDocumentTableEvents</name><argument_list pos:line="127" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="128" pos:column="13">UnregisterTrackProjectDocumentsEvents2</name><argument_list pos:line="128" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="129" pos:column="13">UnregisterSolutionEvents</name><argument_list pos:line="129" pos:column="37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="131" pos:column="13">base</name><op:operator pos:line="131" pos:column="17">.</op:operator><name pos:line="131" pos:column="18">StopMonitoring</name></name><argument_list pos:line="131" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <cpp:endregion pos:line="134" pos:column="9">#<cpp:directive pos:line="134" pos:column="10">endregion</cpp:directive> AbstractFileMonitor Members</cpp:endregion>

        <comment type="line" pos:line="136" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="137" pos:column="9">/// Get all "monitored" files in this solution.</comment>
        <comment type="line" pos:line="138" pos:column="9">/// TODO: exclude directories? worker?</comment>
        <comment type="line" pos:line="139" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="140" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="141" pos:column="9">public</specifier> <name><name pos:line="141" pos:column="16">List</name><argument_list pos:line="141" pos:column="20">&lt;<argument><name pos:line="141" pos:column="21">string</name></argument>&gt;</argument_list></name></type> <name pos:line="141" pos:column="29">GetMonitoredFiles</name><parameter_list pos:line="141" pos:column="46">(<param><decl><type><name pos:line="141" pos:column="47">BackgroundWorker</name></type> <name pos:line="141" pos:column="64">worker</name></decl></param>)</parameter_list> <block pos:line="141" pos:column="72">{
            <expr_stmt><expr><name pos:line="142" pos:column="13">AllMonitoredFiles</name> <op:operator pos:line="142" pos:column="31">=</op:operator> <op:operator pos:line="142" pos:column="33">new</op:operator> <call><name><name pos:line="142" pos:column="37">List</name><argument_list pos:line="142" pos:column="41">&lt;<argument><name pos:line="142" pos:column="42">string</name></argument>&gt;</argument_list></name><argument_list pos:line="142" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="143" pos:column="13">WalkSolutionTree</name><argument_list pos:line="143" pos:column="29">(<argument><expr><name pos:line="143" pos:column="30">worker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="144" pos:column="13">NumberOfAllMonitoredFiles</name> <op:operator pos:line="144" pos:column="39">=</op:operator> <name><name pos:line="144" pos:column="41">AllMonitoredFiles</name><op:operator pos:line="144" pos:column="58">.</op:operator><name pos:line="144" pos:column="59">Count</name></name></expr>;</expr_stmt>    <comment type="line" pos:line="144" pos:column="69">// For progress bar purpose</comment>
            <return pos:line="145" pos:column="13">return <expr><name pos:line="145" pos:column="20">AllMonitoredFiles</name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="148" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="149" pos:column="9">/// Get a list of all files in the Running Docuement Table.</comment>
        <comment type="line" pos:line="150" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="151" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="152" pos:column="9">public</specifier> <name><name pos:line="152" pos:column="16">List</name><argument_list pos:line="152" pos:column="20">&lt;<argument><name pos:line="152" pos:column="21">string</name></argument>&gt;</argument_list></name></type> <name pos:line="152" pos:column="29">GetRDTFiles</name><parameter_list pos:line="152" pos:column="40">()</parameter_list> <block pos:line="152" pos:column="43">{
            <decl_stmt><decl><type><name><name pos:line="153" pos:column="13">List</name><argument_list pos:line="153" pos:column="17">&lt;<argument><name pos:line="153" pos:column="18">string</name></argument>&gt;</argument_list></name></type> <name pos:line="153" pos:column="26">list</name> <init pos:line="153" pos:column="31">= <expr><op:operator pos:line="153" pos:column="33">new</op:operator> <call><name><name pos:line="153" pos:column="37">List</name><argument_list pos:line="153" pos:column="41">&lt;<argument><name pos:line="153" pos:column="42">string</name></argument>&gt;</argument_list></name><argument_list pos:line="153" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="154" pos:column="13">IEnumRunningDocuments</name></type> <name pos:line="154" pos:column="35">documents</name></decl>;</decl_stmt>
            <if pos:line="155" pos:column="13">if<condition pos:line="155" pos:column="15">(<expr><name pos:line="155" pos:column="16">DocumentTable</name> <op:operator pos:line="155" pos:column="30">!=</op:operator> <name pos:line="155" pos:column="33">null</name></expr>)</condition><then pos:line="155" pos:column="38"> <block pos:line="155" pos:column="39">{
                <expr_stmt><expr><call><name><name pos:line="156" pos:column="17">DocumentTable</name><op:operator pos:line="156" pos:column="30">.</op:operator><name pos:line="156" pos:column="31">GetRunningDocumentsEnum</name></name><argument_list pos:line="156" pos:column="54">(<argument><expr pos:line="156" pos:column="55">out <name pos:line="156" pos:column="59">documents</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="157" pos:column="17">uint</name><index pos:line="157" pos:column="21">[]</index></type> <name pos:line="157" pos:column="24">docCookie</name> <init pos:line="157" pos:column="34">= <expr><op:operator pos:line="157" pos:column="36">new</op:operator> <name><name pos:line="157" pos:column="40">uint</name><index pos:line="157" pos:column="44">[<expr><lit:literal type="number" pos:line="157" pos:column="45">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="158" pos:column="17">uint</name></type> <name pos:line="158" pos:column="22">fetched</name></decl>;</decl_stmt>
                <while pos:line="159" pos:column="17">while<condition pos:line="159" pos:column="22">(<expr><op:operator pos:line="159" pos:column="23">(</op:operator><name><name pos:line="159" pos:column="24">VSConstants</name><op:operator pos:line="159" pos:column="35">.</op:operator><name pos:line="159" pos:column="36">S_OK</name></name> <op:operator pos:line="159" pos:column="41">==</op:operator> <call><name><name pos:line="159" pos:column="44">documents</name><op:operator pos:line="159" pos:column="53">.</op:operator><name pos:line="159" pos:column="54">Next</name></name><argument_list pos:line="159" pos:column="58">(<argument><expr><lit:literal type="number" pos:line="159" pos:column="59">1</lit:literal></expr></argument>, <argument><expr><name pos:line="159" pos:column="62">docCookie</name></expr></argument>, <argument><expr pos:line="159" pos:column="73">out <name pos:line="159" pos:column="77">fetched</name></expr></argument>)</argument_list></call><op:operator pos:line="159" pos:column="85">)</op:operator> <op:operator pos:line="159" pos:column="87">&amp;&amp;</op:operator> <op:operator pos:line="159" pos:column="90">(</op:operator><lit:literal type="number" pos:line="159" pos:column="91">1</lit:literal> <op:operator pos:line="159" pos:column="93">==</op:operator> <name pos:line="159" pos:column="96">fetched</name><op:operator pos:line="159" pos:column="103">)</op:operator></expr>)</condition> <block pos:line="159" pos:column="106">{
                    <decl_stmt><decl><type><name pos:line="160" pos:column="21">uint</name></type> <name pos:line="160" pos:column="26">flags</name></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="161" pos:column="21">uint</name></type> <name pos:line="161" pos:column="26">editLocks</name></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="162" pos:column="21">uint</name></type> <name pos:line="162" pos:column="26">readLocks</name></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="163" pos:column="21">string</name></type> <name pos:line="163" pos:column="28">moniker</name></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="164" pos:column="21">IVsHierarchy</name></type> <name pos:line="164" pos:column="34">docHierarchy</name></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="165" pos:column="21">uint</name></type> <name pos:line="165" pos:column="26">docId</name></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="166" pos:column="21">IntPtr</name></type> <name pos:line="166" pos:column="28">docData</name> <init pos:line="166" pos:column="36">= <expr><name><name pos:line="166" pos:column="38">IntPtr</name><op:operator pos:line="166" pos:column="44">.</op:operator><name pos:line="166" pos:column="45">Zero</name></name></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="167" pos:column="21">DocumentTable</name><op:operator pos:line="167" pos:column="34">.</op:operator><name pos:line="167" pos:column="35">GetDocumentInfo</name></name><argument_list pos:line="167" pos:column="50">(<argument><expr><name><name pos:line="167" pos:column="51">docCookie</name><index pos:line="167" pos:column="60">[<expr><lit:literal type="number" pos:line="167" pos:column="61">0</lit:literal></expr>]</index></name></expr></argument>, <argument><expr pos:line="167" pos:column="65">out <name pos:line="167" pos:column="69">flags</name></expr></argument>, <argument><expr pos:line="167" pos:column="76">out <name pos:line="167" pos:column="80">readLocks</name></expr></argument>, <argument><expr pos:line="167" pos:column="91">out <name pos:line="167" pos:column="95">editLocks</name></expr></argument>, <argument><expr pos:line="167" pos:column="106">out <name pos:line="167" pos:column="110">moniker</name></expr></argument>, <argument><expr pos:line="167" pos:column="119">out <name pos:line="167" pos:column="123">docHierarchy</name></expr></argument>, <argument><expr pos:line="167" pos:column="137">out <name pos:line="167" pos:column="141">docId</name></expr></argument>, <argument><expr pos:line="167" pos:column="148">out <name pos:line="167" pos:column="152">docData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="168" pos:column="21">list</name><op:operator pos:line="168" pos:column="25">.</op:operator><name pos:line="168" pos:column="26">Add</name></name><argument_list pos:line="168" pos:column="29">(<argument><expr><name pos:line="168" pos:column="30">moniker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></while>
            }</block></then></if>
            <return pos:line="171" pos:column="13">return <expr><name pos:line="171" pos:column="20">list</name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="174" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="175" pos:column="9">/// Register RunningDocumentTable events.</comment>
        <comment type="line" pos:line="176" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="177" pos:column="9">public</specifier> <name pos:line="177" pos:column="16">void</name></type> <name pos:line="177" pos:column="21">RegisterRunningDocumentTableEvents</name><parameter_list pos:line="177" pos:column="55">()</parameter_list> <block pos:line="177" pos:column="58">{
            <expr_stmt><expr><name pos:line="178" pos:column="13">DocumentTable</name> <op:operator pos:line="178" pos:column="27">=</op:operator> <op:operator pos:line="178" pos:column="29">(</op:operator><name pos:line="178" pos:column="30">IVsRunningDocumentTable</name><op:operator pos:line="178" pos:column="53">)</op:operator> <call><name><name pos:line="178" pos:column="55">Package</name><op:operator pos:line="178" pos:column="62">.</op:operator><name pos:line="178" pos:column="63">GetGlobalService</name></name><argument_list pos:line="178" pos:column="79">(<argument><expr><call><name pos:line="178" pos:column="80">typeof</name><argument_list pos:line="178" pos:column="86">(<argument><expr><name pos:line="178" pos:column="87">SVsRunningDocumentTable</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="179" pos:column="13">if<condition pos:line="179" pos:column="15">(<expr><name pos:line="179" pos:column="16">DocumentTable</name> <op:operator pos:line="179" pos:column="30">!=</op:operator> <name pos:line="179" pos:column="33">null</name></expr>)</condition><then pos:line="179" pos:column="38"> <block pos:line="179" pos:column="39">{
                <decl_stmt><decl><type><name pos:line="180" pos:column="17">int</name></type> <name pos:line="180" pos:column="21">hr</name> <init pos:line="180" pos:column="24">= <expr><call><name><name pos:line="180" pos:column="26">DocumentTable</name><op:operator pos:line="180" pos:column="39">.</op:operator><name pos:line="180" pos:column="40">AdviseRunningDocTableEvents</name></name><argument_list pos:line="180" pos:column="67">(<argument><expr><name pos:line="180" pos:column="68">this</name></expr></argument>, <argument><expr pos:line="180" pos:column="74">out <name pos:line="180" pos:column="78">DocumentTableItemId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="181" pos:column="17">ErrorHandler</name><op:operator pos:line="181" pos:column="29">.</op:operator><name pos:line="181" pos:column="30">ThrowOnFailure</name></name><argument_list pos:line="181" pos:column="44">(<argument><expr><name pos:line="181" pos:column="45">hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="185" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="186" pos:column="9">/// Register Solution events.</comment>
        <comment type="line" pos:line="187" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="188" pos:column="9">public</specifier> <name pos:line="188" pos:column="16">void</name></type> <name pos:line="188" pos:column="21">RegisterSolutionEvents</name><parameter_list pos:line="188" pos:column="43">()</parameter_list> <block pos:line="188" pos:column="46">{
            <comment type="line" pos:line="189" pos:column="13">//SrcMLFileLogger.DefaultLogger.Info("SolutionMonitor: RegisterSolutionEvents()");</comment>
            <expr_stmt><expr><name pos:line="190" pos:column="13">solution</name> <op:operator pos:line="190" pos:column="22">=</op:operator> <call><name><name pos:line="190" pos:column="24">Package</name><op:operator pos:line="190" pos:column="31">.</op:operator><name pos:line="190" pos:column="32">GetGlobalService</name></name><argument_list pos:line="190" pos:column="48">(<argument><expr><call><name pos:line="190" pos:column="49">typeof</name><argument_list pos:line="190" pos:column="55">(<argument><expr><name pos:line="190" pos:column="56">SVsSolution</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="190" pos:column="70">as</op:operator> <name pos:line="190" pos:column="73">IVsSolution</name></expr>;</expr_stmt>
            <if pos:line="191" pos:column="13">if<condition pos:line="191" pos:column="15">(<expr><name pos:line="191" pos:column="16">solution</name> <op:operator pos:line="191" pos:column="25">!=</op:operator> <name pos:line="191" pos:column="28">null</name></expr>)</condition><then pos:line="191" pos:column="33"> <block pos:line="191" pos:column="34">{
                <decl_stmt><decl><type><name pos:line="192" pos:column="17">int</name></type> <name pos:line="192" pos:column="21">hr</name> <init pos:line="192" pos:column="24">= <expr><call><name><name pos:line="192" pos:column="26">this</name><op:operator pos:line="192" pos:column="30">.</op:operator><name pos:line="192" pos:column="31">solution</name><op:operator pos:line="192" pos:column="39">.</op:operator><name pos:line="192" pos:column="40">AdviseSolutionEvents</name></name><argument_list pos:line="192" pos:column="60">(<argument><expr><name pos:line="192" pos:column="61">this</name></expr></argument>, <argument><expr pos:line="192" pos:column="67">out <name pos:line="192" pos:column="71">cookie</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="193" pos:column="17">ErrorHandler</name><op:operator pos:line="193" pos:column="29">.</op:operator><name pos:line="193" pos:column="30">ThrowOnFailure</name></name><argument_list pos:line="193" pos:column="44">(<argument><expr><name pos:line="193" pos:column="45">hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="197" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="198" pos:column="9">/// Register TrackProjectDocuments2 events.</comment>
        <comment type="line" pos:line="199" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="200" pos:column="9">public</specifier> <name pos:line="200" pos:column="16">void</name></type> <name pos:line="200" pos:column="21">RegisterTrackProjectDocumentsEvents2</name><parameter_list pos:line="200" pos:column="57">()</parameter_list> <block pos:line="200" pos:column="60">{
            <expr_stmt><expr><name pos:line="201" pos:column="13">ProjectDocumentsTracker</name> <op:operator pos:line="201" pos:column="37">=</op:operator> <call><name><name pos:line="201" pos:column="39">Package</name><op:operator pos:line="201" pos:column="46">.</op:operator><name pos:line="201" pos:column="47">GetGlobalService</name></name><argument_list pos:line="201" pos:column="63">(<argument><expr><call><name pos:line="201" pos:column="64">typeof</name><argument_list pos:line="201" pos:column="70">(<argument><expr><name pos:line="201" pos:column="71">SVsTrackProjectDocuments</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="201" pos:column="98">as</op:operator> <name pos:line="201" pos:column="101">IVsTrackProjectDocuments2</name></expr>;</expr_stmt>
            <if pos:line="202" pos:column="13">if<condition pos:line="202" pos:column="15">(<expr><name pos:line="202" pos:column="16">ProjectDocumentsTracker</name> <op:operator pos:line="202" pos:column="40">!=</op:operator> <name pos:line="202" pos:column="43">null</name></expr>)</condition><then pos:line="202" pos:column="48"> <block pos:line="202" pos:column="49">{
                <decl_stmt><decl><type><name pos:line="203" pos:column="17">int</name></type> <name pos:line="203" pos:column="21">hr</name> <init pos:line="203" pos:column="24">= <expr><call><name><name pos:line="203" pos:column="26">ProjectDocumentsTracker</name><op:operator pos:line="203" pos:column="49">.</op:operator><name pos:line="203" pos:column="50">AdviseTrackProjectDocumentsEvents</name></name><argument_list pos:line="203" pos:column="83">(<argument><expr><name pos:line="203" pos:column="84">this</name></expr></argument>, <argument><expr pos:line="203" pos:column="90">out <name pos:line="203" pos:column="94">PdwCookie</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="204" pos:column="17">ErrorHandler</name><op:operator pos:line="204" pos:column="29">.</op:operator><name pos:line="204" pos:column="30">ThrowOnFailure</name></name><argument_list pos:line="204" pos:column="44">(<argument><expr><name pos:line="204" pos:column="45">hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="208" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="209" pos:column="9">/// Respond to events of file creation/change/deletion in the solution in Visual Studio</comment>
        <comment type="line" pos:line="210" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="211" pos:column="9">/// &lt;param name="filePath"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="212" pos:column="9">/// &lt;param name="oldFilePath"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="213" pos:column="9">/// &lt;param name="type"&gt;&lt;/param&gt;</comment>
        <function><type><specifier pos:line="214" pos:column="9">public</specifier> <name pos:line="214" pos:column="16">void</name></type> <name pos:line="214" pos:column="21">RespondToVSFileChangedEvent</name><parameter_list pos:line="214" pos:column="48">(<param><decl><type><name pos:line="214" pos:column="49">string</name></type> <name pos:line="214" pos:column="56">filePath</name></decl></param>, <param><decl><type><name pos:line="214" pos:column="66">string</name></type> <name pos:line="214" pos:column="73">oldFilePath</name></decl></param>, <param><decl><type><name pos:line="214" pos:column="86">FileEventType</name></type> <name pos:line="214" pos:column="100">type</name></decl></param>)</parameter_list> <block pos:line="214" pos:column="106">{
            <comment type="line" pos:line="215" pos:column="13">//SrcMLFileLogger.DefaultLogger.Info("SolutionMonitor.RespondToVSFileChangedEvent(): filePath = " + filePath + ", oldFilePath = " + oldFilePath + ", type = " + type);</comment>
            <switch pos:line="216" pos:column="13">switch<condition pos:line="216" pos:column="19">(<expr><name pos:line="216" pos:column="20">type</name></expr>)</condition> <block pos:line="216" pos:column="26">{
                <case pos:line="217" pos:column="17">case <expr><name><name pos:line="217" pos:column="22">FileEventType</name><op:operator pos:line="217" pos:column="35">.</op:operator><name pos:line="217" pos:column="36">FileAdded</name></name></expr>:
                    <expr_stmt><expr><call><name pos:line="218" pos:column="21">AddFile</name><argument_list pos:line="218" pos:column="28">(<argument><expr><name pos:line="218" pos:column="29">filePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <break pos:line="219" pos:column="21">break;</break>

                </case><case pos:line="221" pos:column="17">case <expr><name><name pos:line="221" pos:column="22">FileEventType</name><op:operator pos:line="221" pos:column="35">.</op:operator><name pos:line="221" pos:column="36">FileChanged</name></name></expr>:
                    <expr_stmt><expr><call><name pos:line="222" pos:column="21">AddFile</name><argument_list pos:line="222" pos:column="28">(<argument><expr><name pos:line="222" pos:column="29">filePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <break pos:line="223" pos:column="21">break;</break>

                </case><case pos:line="225" pos:column="17">case <expr><name><name pos:line="225" pos:column="22">FileEventType</name><op:operator pos:line="225" pos:column="35">.</op:operator><name pos:line="225" pos:column="36">FileDeleted</name></name></expr>:
                    <expr_stmt><expr><call><name pos:line="226" pos:column="21">DeleteFile</name><argument_list pos:line="226" pos:column="31">(<argument><expr><name pos:line="226" pos:column="32">filePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <break pos:line="227" pos:column="21">break;</break>

                </case><case pos:line="229" pos:column="17">case <expr><name><name pos:line="229" pos:column="22">FileEventType</name><op:operator pos:line="229" pos:column="35">.</op:operator><name pos:line="229" pos:column="36">FileRenamed</name></name></expr>:  <comment type="line" pos:line="229" pos:column="50">// actually not used</comment>
                    <expr_stmt><expr><call><name pos:line="230" pos:column="21">DeleteFile</name><argument_list pos:line="230" pos:column="31">(<argument><expr><name pos:line="230" pos:column="32">oldFilePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="231" pos:column="21">AddFile</name><argument_list pos:line="231" pos:column="28">(<argument><expr><name pos:line="231" pos:column="29">filePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <break pos:line="232" pos:column="21">break;</break>
            </case>}</block></switch>
        }</block></function>

        <comment type="line" pos:line="236" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="237" pos:column="9">/// Save a specific file in the Running Docuement Table.</comment>
        <comment type="line" pos:line="238" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="239" pos:column="9">/// &lt;param name="fileName"&gt;&lt;/param&gt;</comment>
        <function><type><specifier pos:line="240" pos:column="9">public</specifier> <name pos:line="240" pos:column="16">void</name></type> <name pos:line="240" pos:column="21">saveRDTFile</name><parameter_list pos:line="240" pos:column="32">(<param><decl><type><name pos:line="240" pos:column="33">string</name></type> <name pos:line="240" pos:column="40">fileName</name></decl></param>)</parameter_list> <block pos:line="240" pos:column="50">{
            <decl_stmt><decl><type><name pos:line="241" pos:column="13">IEnumRunningDocuments</name></type> <name pos:line="241" pos:column="35">documents</name></decl>;</decl_stmt>
            <if pos:line="242" pos:column="13">if<condition pos:line="242" pos:column="15">(<expr><name pos:line="242" pos:column="16">DocumentTable</name> <op:operator pos:line="242" pos:column="30">!=</op:operator> <name pos:line="242" pos:column="33">null</name></expr>)</condition><then pos:line="242" pos:column="38"> <block pos:line="242" pos:column="39">{
                <expr_stmt><expr><call><name><name pos:line="243" pos:column="17">DocumentTable</name><op:operator pos:line="243" pos:column="30">.</op:operator><name pos:line="243" pos:column="31">GetRunningDocumentsEnum</name></name><argument_list pos:line="243" pos:column="54">(<argument><expr pos:line="243" pos:column="55">out <name pos:line="243" pos:column="59">documents</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="244" pos:column="17">uint</name><index pos:line="244" pos:column="21">[]</index></type> <name pos:line="244" pos:column="24">docCookie</name> <init pos:line="244" pos:column="34">= <expr><op:operator pos:line="244" pos:column="36">new</op:operator> <name><name pos:line="244" pos:column="40">uint</name><index pos:line="244" pos:column="44">[<expr><lit:literal type="number" pos:line="244" pos:column="45">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="245" pos:column="17">uint</name></type> <name pos:line="245" pos:column="22">fetched</name></decl>;</decl_stmt>
                <while pos:line="246" pos:column="17">while<condition pos:line="246" pos:column="22">(<expr><op:operator pos:line="246" pos:column="23">(</op:operator><name><name pos:line="246" pos:column="24">VSConstants</name><op:operator pos:line="246" pos:column="35">.</op:operator><name pos:line="246" pos:column="36">S_OK</name></name> <op:operator pos:line="246" pos:column="41">==</op:operator> <call><name><name pos:line="246" pos:column="44">documents</name><op:operator pos:line="246" pos:column="53">.</op:operator><name pos:line="246" pos:column="54">Next</name></name><argument_list pos:line="246" pos:column="58">(<argument><expr><lit:literal type="number" pos:line="246" pos:column="59">1</lit:literal></expr></argument>, <argument><expr><name pos:line="246" pos:column="62">docCookie</name></expr></argument>, <argument><expr pos:line="246" pos:column="73">out <name pos:line="246" pos:column="77">fetched</name></expr></argument>)</argument_list></call><op:operator pos:line="246" pos:column="85">)</op:operator> <op:operator pos:line="246" pos:column="87">&amp;&amp;</op:operator> <op:operator pos:line="246" pos:column="90">(</op:operator><lit:literal type="number" pos:line="246" pos:column="91">1</lit:literal> <op:operator pos:line="246" pos:column="93">==</op:operator> <name pos:line="246" pos:column="96">fetched</name><op:operator pos:line="246" pos:column="103">)</op:operator></expr>)</condition> <block pos:line="246" pos:column="106">{
                    <decl_stmt><decl><type><name pos:line="247" pos:column="21">uint</name></type> <name pos:line="247" pos:column="26">flags</name></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="248" pos:column="21">uint</name></type> <name pos:line="248" pos:column="26">editLocks</name></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="249" pos:column="21">uint</name></type> <name pos:line="249" pos:column="26">readLocks</name></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="250" pos:column="21">string</name></type> <name pos:line="250" pos:column="28">moniker</name></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="251" pos:column="21">IVsHierarchy</name></type> <name pos:line="251" pos:column="34">docHierarchy</name></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="252" pos:column="21">uint</name></type> <name pos:line="252" pos:column="26">docId</name></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="253" pos:column="21">IntPtr</name></type> <name pos:line="253" pos:column="28">docData</name> <init pos:line="253" pos:column="36">= <expr><name><name pos:line="253" pos:column="38">IntPtr</name><op:operator pos:line="253" pos:column="44">.</op:operator><name pos:line="253" pos:column="45">Zero</name></name></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="254" pos:column="21">DocumentTable</name><op:operator pos:line="254" pos:column="34">.</op:operator><name pos:line="254" pos:column="35">GetDocumentInfo</name></name><argument_list pos:line="254" pos:column="50">(<argument><expr><name><name pos:line="254" pos:column="51">docCookie</name><index pos:line="254" pos:column="60">[<expr><lit:literal type="number" pos:line="254" pos:column="61">0</lit:literal></expr>]</index></name></expr></argument>, <argument><expr pos:line="254" pos:column="65">out <name pos:line="254" pos:column="69">flags</name></expr></argument>, <argument><expr pos:line="254" pos:column="76">out <name pos:line="254" pos:column="80">readLocks</name></expr></argument>, <argument><expr pos:line="254" pos:column="91">out <name pos:line="254" pos:column="95">editLocks</name></expr></argument>, <argument><expr pos:line="254" pos:column="106">out <name pos:line="254" pos:column="110">moniker</name></expr></argument>, <argument><expr pos:line="254" pos:column="119">out <name pos:line="254" pos:column="123">docHierarchy</name></expr></argument>, <argument><expr pos:line="254" pos:column="137">out <name pos:line="254" pos:column="141">docId</name></expr></argument>, <argument><expr pos:line="254" pos:column="148">out <name pos:line="254" pos:column="152">docData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="255" pos:column="21">if<condition pos:line="255" pos:column="23">(<expr><call><name><name pos:line="255" pos:column="24">fileName</name><op:operator pos:line="255" pos:column="32">.</op:operator><name pos:line="255" pos:column="33">Equals</name></name><argument_list pos:line="255" pos:column="39">(<argument><expr><name pos:line="255" pos:column="40">moniker</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="255" pos:column="49"> <block pos:line="255" pos:column="50">{
                        <expr_stmt><expr><call><name><name pos:line="256" pos:column="25">DocumentTable</name><op:operator pos:line="256" pos:column="38">.</op:operator><name pos:line="256" pos:column="39">SaveDocuments</name></name><argument_list pos:line="256" pos:column="52">(<argument><expr><op:operator pos:line="256" pos:column="53">(</op:operator><name pos:line="256" pos:column="54">uint</name><op:operator pos:line="256" pos:column="58">)</op:operator> <name><name pos:line="256" pos:column="60">__VSRDTSAVEOPTIONS</name><op:operator pos:line="256" pos:column="78">.</op:operator><name pos:line="256" pos:column="79">RDTSAVEOPT_ForceSave</name></name></expr></argument>, <argument><expr><name pos:line="256" pos:column="101">null</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="256" pos:column="107">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="256" pos:column="110">docCookie</name><index pos:line="256" pos:column="119">[<expr><lit:literal type="number" pos:line="256" pos:column="120">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <comment type="line" pos:line="257" pos:column="25">//FileLogger.DefaultLogger.Info("IVsRunningDocumentTable.SaveDocuments() DONE. [" + moniker + "]");</comment>
                    }</block></then></if>
                }</block></while>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="263" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="264" pos:column="9">/// Unregister RunningDocumentTable events.</comment>
        <comment type="line" pos:line="265" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="266" pos:column="9">public</specifier> <name pos:line="266" pos:column="16">void</name></type> <name pos:line="266" pos:column="21">UnregisterRunningDocumentTableEvents</name><parameter_list pos:line="266" pos:column="57">()</parameter_list> <block pos:line="266" pos:column="60">{
            <if pos:line="267" pos:column="13">if<condition pos:line="267" pos:column="15">(<expr><name pos:line="267" pos:column="16">DocumentTable</name> <op:operator pos:line="267" pos:column="30">!=</op:operator> <name pos:line="267" pos:column="33">null</name></expr>)</condition><then pos:line="267" pos:column="38"> <block pos:line="267" pos:column="39">{
                <decl_stmt><decl><type><name pos:line="268" pos:column="17">int</name></type> <name pos:line="268" pos:column="21">hr</name> <init pos:line="268" pos:column="24">= <expr><call><name><name pos:line="268" pos:column="26">DocumentTable</name><op:operator pos:line="268" pos:column="39">.</op:operator><name pos:line="268" pos:column="40">UnadviseRunningDocTableEvents</name></name><argument_list pos:line="268" pos:column="69">(<argument><expr><name pos:line="268" pos:column="70">DocumentTableItemId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="269" pos:column="17">ErrorHandler</name><op:operator pos:line="269" pos:column="29">.</op:operator><name pos:line="269" pos:column="30">Succeeded</name></name><argument_list pos:line="269" pos:column="39">(<argument><expr><name pos:line="269" pos:column="40">hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="273" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="274" pos:column="9">/// Unregister Solution events.</comment>
        <comment type="line" pos:line="275" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="276" pos:column="9">public</specifier> <name pos:line="276" pos:column="16">void</name></type> <name pos:line="276" pos:column="21">UnregisterSolutionEvents</name><parameter_list pos:line="276" pos:column="45">()</parameter_list> <block pos:line="276" pos:column="48">{
            <comment type="line" pos:line="277" pos:column="13">//SrcMLFileLogger.DefaultLogger.Info("SolutionMonitor: UnregisterSolutionEvents()");</comment>
            <if pos:line="278" pos:column="13">if<condition pos:line="278" pos:column="15">(<expr><name pos:line="278" pos:column="16">cookie</name> <op:operator pos:line="278" pos:column="23">!=</op:operator> <name><name pos:line="278" pos:column="26">VSConstants</name><op:operator pos:line="278" pos:column="37">.</op:operator><name pos:line="278" pos:column="38">VSCOOKIE_NIL</name> <type:modifier pos:line="278" pos:column="51">&amp;&amp;</type:modifier></name> <name pos:line="278" pos:column="54">solution</name> <op:operator pos:line="278" pos:column="63">!=</op:operator> <name pos:line="278" pos:column="66">null</name></expr>)</condition><then pos:line="278" pos:column="71"> <block pos:line="278" pos:column="72">{
                <decl_stmt><decl><type><name pos:line="279" pos:column="17">int</name></type> <name pos:line="279" pos:column="21">hr</name> <init pos:line="279" pos:column="24">= <expr><call><name><name pos:line="279" pos:column="26">solution</name><op:operator pos:line="279" pos:column="34">.</op:operator><name pos:line="279" pos:column="35">UnadviseSolutionEvents</name></name><argument_list pos:line="279" pos:column="57">(<argument><expr><name pos:line="279" pos:column="58">cookie</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="280" pos:column="17">ErrorHandler</name><op:operator pos:line="280" pos:column="29">.</op:operator><name pos:line="280" pos:column="30">Succeeded</name></name><argument_list pos:line="280" pos:column="39">(<argument><expr><name pos:line="280" pos:column="40">hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="281" pos:column="17">cookie</name> <op:operator pos:line="281" pos:column="24">=</op:operator> <name><name pos:line="281" pos:column="26">VSConstants</name><op:operator pos:line="281" pos:column="37">.</op:operator><name pos:line="281" pos:column="38">VSCOOKIE_NIL</name></name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="285" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="286" pos:column="9">/// Unregister TrackProjectDocuments2 events.</comment>
        <comment type="line" pos:line="287" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="288" pos:column="9">public</specifier> <name pos:line="288" pos:column="16">void</name></type> <name pos:line="288" pos:column="21">UnregisterTrackProjectDocumentsEvents2</name><parameter_list pos:line="288" pos:column="59">()</parameter_list> <block pos:line="288" pos:column="62">{
            <if pos:line="289" pos:column="13">if<condition pos:line="289" pos:column="15">(<expr><name pos:line="289" pos:column="16">PdwCookie</name> <op:operator pos:line="289" pos:column="26">!=</op:operator> <name><name pos:line="289" pos:column="29">VSConstants</name><op:operator pos:line="289" pos:column="40">.</op:operator><name pos:line="289" pos:column="41">VSCOOKIE_NIL</name> <type:modifier pos:line="289" pos:column="54">&amp;&amp;</type:modifier></name> <name pos:line="289" pos:column="57">ProjectDocumentsTracker</name> <op:operator pos:line="289" pos:column="81">!=</op:operator> <name pos:line="289" pos:column="84">null</name></expr>)</condition><then pos:line="289" pos:column="89"> <block pos:line="289" pos:column="90">{
                <decl_stmt><decl><type><name pos:line="290" pos:column="17">int</name></type> <name pos:line="290" pos:column="21">hr</name> <init pos:line="290" pos:column="24">= <expr><call><name><name pos:line="290" pos:column="26">ProjectDocumentsTracker</name><op:operator pos:line="290" pos:column="49">.</op:operator><name pos:line="290" pos:column="50">UnadviseTrackProjectDocumentsEvents</name></name><argument_list pos:line="290" pos:column="85">(<argument><expr><name pos:line="290" pos:column="86">PdwCookie</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="291" pos:column="17">ErrorHandler</name><op:operator pos:line="291" pos:column="29">.</op:operator><name pos:line="291" pos:column="30">Succeeded</name></name><argument_list pos:line="291" pos:column="39">(<argument><expr><name pos:line="291" pos:column="40">hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="292" pos:column="17">PdwCookie</name> <op:operator pos:line="292" pos:column="27">=</op:operator> <name><name pos:line="292" pos:column="29">VSConstants</name><op:operator pos:line="292" pos:column="40">.</op:operator><name pos:line="292" pos:column="41">VSCOOKIE_NIL</name></name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="296" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="297" pos:column="9">/// Handle file creation/deletion cases. The way these parameters work is: rgFirstIndices</comment>
        <comment type="line" pos:line="298" pos:column="9">/// contains a list of the starting index into the changeProjectItems array for each project</comment>
        <comment type="line" pos:line="299" pos:column="9">/// listed in the changedProjects list</comment>
        <comment type="line" pos:line="300" pos:column="9">/// Example: if you get two projects, then rgFirstIndices should have two elements, the</comment>
        <comment type="line" pos:line="301" pos:column="9">///          first element is probably zero since rgFirstIndices would start at zero.</comment>
        <comment type="line" pos:line="302" pos:column="9">/// Then item two in the rgFirstIndices array is where in the changeProjectItems list that</comment>
        <comment type="line" pos:line="303" pos:column="9">/// the second project's changed items reside.</comment>
        <comment type="line" pos:line="304" pos:column="9">/// TODO: may process files in parallel</comment>
        <comment type="line" pos:line="305" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="306" pos:column="9">/// &lt;param name="cProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="307" pos:column="9">/// &lt;param name="cFiles"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="308" pos:column="9">/// &lt;param name="rgpProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="309" pos:column="9">/// &lt;param name="rgFirstIndices"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="310" pos:column="9">/// &lt;param name="rgpszMkDocuments"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="311" pos:column="9">/// &lt;param name="type"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="312" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="313" pos:column="9">private</specifier> <name pos:line="313" pos:column="17">int</name></type> <name pos:line="313" pos:column="21">OnNotifyFileAddRemove</name><parameter_list pos:line="313" pos:column="42">(<param><decl><type><name pos:line="313" pos:column="43">int</name></type> <name pos:line="313" pos:column="47">cProjects</name></decl></param>,
                                        <param><decl><type><name pos:line="314" pos:column="41">int</name></type> <name pos:line="314" pos:column="45">cFiles</name></decl></param>,
                                        <param><decl><type><name><name pos:line="315" pos:column="41">IVsProject</name><index pos:line="315" pos:column="51">[]</index></name></type> <name pos:line="315" pos:column="54">rgpProjects</name></decl></param>,
                                        <param><decl><type><name><name pos:line="316" pos:column="41">int</name><index pos:line="316" pos:column="44">[]</index></name></type> <name pos:line="316" pos:column="47">rgFirstIndices</name></decl></param>,
                                        <param><decl><type><name><name pos:line="317" pos:column="41">string</name><index pos:line="317" pos:column="47">[]</index></name></type> <name pos:line="317" pos:column="50">rgpszMkDocuments</name></decl></param>,
                                        <param><decl><type><name pos:line="318" pos:column="41">FileEventType</name></type> <name pos:line="318" pos:column="55">type</name></decl></param>)</parameter_list> <block pos:line="318" pos:column="61">{
            <decl_stmt><decl><type><name pos:line="319" pos:column="13">int</name></type> <name pos:line="319" pos:column="17">projItemIndex</name> <init pos:line="319" pos:column="31">= <expr><lit:literal type="number" pos:line="319" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>
            <for pos:line="320" pos:column="13">for(<init><decl><type><name pos:line="320" pos:column="17">int</name></type> <name pos:line="320" pos:column="21">changeProjIndex</name> <init pos:line="320" pos:column="37">= <expr><lit:literal type="number" pos:line="320" pos:column="39">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="320" pos:column="42">changeProjIndex</name> <op:operator pos:line="320" pos:column="58">&lt;</op:operator> <name pos:line="320" pos:column="60">cProjects</name></expr>;</condition> <incr><expr><name pos:line="320" pos:column="71">changeProjIndex</name><op:operator pos:line="320" pos:column="86">++</op:operator></expr></incr>) <block pos:line="320" pos:column="90">{
                <decl_stmt><decl><type><name pos:line="321" pos:column="17">int</name></type> <name pos:line="321" pos:column="21">endProjectIndex</name> <init pos:line="321" pos:column="37">= <expr><op:operator pos:line="321" pos:column="39">(</op:operator><op:operator pos:line="321" pos:column="40">(</op:operator><name pos:line="321" pos:column="41">changeProjIndex</name> <op:operator pos:line="321" pos:column="57">+</op:operator> <lit:literal type="number" pos:line="321" pos:column="59">1</lit:literal><op:operator pos:line="321" pos:column="60">)</op:operator> <op:operator pos:line="321" pos:column="62">==</op:operator> <name pos:line="321" pos:column="65">cProjects</name><op:operator pos:line="321" pos:column="74">)</op:operator> <op:operator pos:line="321" pos:column="76">?</op:operator> <name><name pos:line="321" pos:column="78">rgpszMkDocuments</name><op:operator pos:line="321" pos:column="94">.</op:operator><name pos:line="321" pos:column="95">Length</name></name> <op:operator pos:line="321" pos:column="102">:</op:operator> <name><name pos:line="321" pos:column="104">rgFirstIndices</name><index pos:line="321" pos:column="118">[<expr><name pos:line="321" pos:column="119">changeProjIndex</name> <op:operator pos:line="321" pos:column="135">+</op:operator> <lit:literal type="number" pos:line="321" pos:column="137">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <for pos:line="322" pos:column="17">for(<init pos:line="322" pos:column="21">;</init> <condition><expr><name pos:line="322" pos:column="23">projItemIndex</name> <op:operator pos:line="322" pos:column="37">&lt;</op:operator> <name pos:line="322" pos:column="39">endProjectIndex</name></expr>;</condition> <incr><expr><name pos:line="322" pos:column="56">projItemIndex</name><op:operator pos:line="322" pos:column="69">++</op:operator></expr></incr>) <block pos:line="322" pos:column="73">{
                    <if pos:line="323" pos:column="21">if<condition pos:line="323" pos:column="23">(<expr><name><name pos:line="323" pos:column="24">rgpProjects</name><index pos:line="323" pos:column="35">[<expr><name pos:line="323" pos:column="36">changeProjIndex</name></expr>]</index></name> <op:operator pos:line="323" pos:column="53">!=</op:operator> <name pos:line="323" pos:column="56">null</name></expr>)</condition><then pos:line="323" pos:column="61"> <block pos:line="323" pos:column="62">{
                        <expr_stmt><expr><call><name pos:line="324" pos:column="25">RespondToVSFileChangedEvent</name><argument_list pos:line="324" pos:column="52">(<argument><expr><name><name pos:line="324" pos:column="53">rgpszMkDocuments</name><index pos:line="324" pos:column="69">[<expr><name pos:line="324" pos:column="70">projItemIndex</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="324" pos:column="86">null</name></expr></argument>, <argument><expr><name pos:line="324" pos:column="92">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></for>
            }</block></for>
            <return pos:line="328" pos:column="13">return <expr><name><name pos:line="328" pos:column="20">VSConstants</name><op:operator pos:line="328" pos:column="31">.</op:operator><name pos:line="328" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="331" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="332" pos:column="9">/// Process the children items of a project item.</comment>
        <comment type="line" pos:line="333" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="334" pos:column="9">/// &lt;param name="item"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="335" pos:column="9">/// &lt;param name="worker"&gt;&lt;/param&gt;</comment>
        <function><type><specifier pos:line="336" pos:column="9">private</specifier> <name pos:line="336" pos:column="17">void</name></type> <name pos:line="336" pos:column="22">ProcessChildren</name><parameter_list pos:line="336" pos:column="37">(<param><decl><type><name pos:line="336" pos:column="38">ProjectItem</name></type> <name pos:line="336" pos:column="50">item</name></decl></param>, <param><decl><type><name pos:line="336" pos:column="56">BackgroundWorker</name></type> <name pos:line="336" pos:column="73">worker</name></decl></param>, <param><decl><type><name><name pos:line="336" pos:column="81">List</name><argument_list pos:line="336" pos:column="85">&lt;<argument><name pos:line="336" pos:column="86">string</name></argument>&gt;</argument_list></name></type> <name pos:line="336" pos:column="94">list</name></decl></param>)</parameter_list> <block pos:line="336" pos:column="100">{
            <if pos:line="337" pos:column="13">if<condition pos:line="337" pos:column="15">(<expr><name pos:line="337" pos:column="16">item</name> <op:operator pos:line="337" pos:column="21">!=</op:operator> <name pos:line="337" pos:column="24">null</name> <op:operator pos:line="337" pos:column="29">&amp;&amp;</op:operator> <name><name pos:line="337" pos:column="32">item</name><op:operator pos:line="337" pos:column="36">.</op:operator><name pos:line="337" pos:column="37">ProjectItems</name></name> <op:operator pos:line="337" pos:column="50">!=</op:operator> <name pos:line="337" pos:column="53">null</name></expr>)</condition><then pos:line="337" pos:column="58"> <block pos:line="337" pos:column="59">{
                <expr_stmt><expr><call><name pos:line="338" pos:column="17">ProcessItems</name><argument_list pos:line="338" pos:column="29">(<argument><expr><call><name><name pos:line="338" pos:column="30">item</name><op:operator pos:line="338" pos:column="34">.</op:operator><name pos:line="338" pos:column="35">ProjectItems</name><op:operator pos:line="338" pos:column="47">.</op:operator><name pos:line="338" pos:column="48">GetEnumerator</name></name><argument_list pos:line="338" pos:column="61">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="338" pos:column="65">worker</name></expr></argument>, <argument><expr><name pos:line="338" pos:column="73">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="339" pos:column="15">else <block pos:line="339" pos:column="20">{
                <decl_stmt><decl><type><name pos:line="340" pos:column="17">var</name></type> <name pos:line="340" pos:column="21">proj</name> <init pos:line="340" pos:column="26">= <expr><name><name pos:line="340" pos:column="28">item</name><op:operator pos:line="340" pos:column="32">.</op:operator><name pos:line="340" pos:column="33">SubProject</name></name> <op:operator pos:line="340" pos:column="44">as</op:operator> <name pos:line="340" pos:column="47">Project</name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name pos:line="341" pos:column="17">ProcessProject</name><argument_list pos:line="341" pos:column="31">(<argument><expr><name pos:line="341" pos:column="32">proj</name></expr></argument>, <argument><expr><name pos:line="341" pos:column="38">worker</name></expr></argument>, <argument><expr><name pos:line="341" pos:column="46">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <comment type="line" pos:line="345" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="346" pos:column="9">/// Process a single project item.</comment>
        <comment type="line" pos:line="347" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="348" pos:column="9">/// &lt;param name="item"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="349" pos:column="9">/// &lt;param name="worker"&gt;&lt;/param&gt;</comment>
        <function><type><specifier pos:line="350" pos:column="9">private</specifier> <name pos:line="350" pos:column="17">void</name></type> <name pos:line="350" pos:column="22">ProcessItem</name><parameter_list pos:line="350" pos:column="33">(<param><decl><type><name pos:line="350" pos:column="34">ProjectItem</name></type> <name pos:line="350" pos:column="46">item</name></decl></param>, <param><decl><type><name pos:line="350" pos:column="52">BackgroundWorker</name></type> <name pos:line="350" pos:column="69">worker</name></decl></param>, <param><decl><type><name><name pos:line="350" pos:column="77">List</name><argument_list pos:line="350" pos:column="81">&lt;<argument><name pos:line="350" pos:column="82">string</name></argument>&gt;</argument_list></name></type> <name pos:line="350" pos:column="90">list</name></decl></param>)</parameter_list> <block pos:line="350" pos:column="96">{
            <expr_stmt><expr><call><name pos:line="351" pos:column="13">ProcessSingleFile</name><argument_list pos:line="351" pos:column="30">(<argument><expr><name pos:line="351" pos:column="31">item</name></expr></argument>, <argument><expr><name pos:line="351" pos:column="37">worker</name></expr></argument>, <argument><expr><name pos:line="351" pos:column="45">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="352" pos:column="13">ProcessChildren</name><argument_list pos:line="352" pos:column="28">(<argument><expr><name pos:line="352" pos:column="29">item</name></expr></argument>, <argument><expr><name pos:line="352" pos:column="35">worker</name></expr></argument>, <argument><expr><name pos:line="352" pos:column="43">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="355" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="356" pos:column="9">/// Recursively process project items.</comment>
        <comment type="line" pos:line="357" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="358" pos:column="9">/// &lt;param name="items"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="359" pos:column="9">/// &lt;param name="worker"&gt;&lt;/param&gt;</comment>
        <function><type><specifier pos:line="360" pos:column="9">private</specifier> <name pos:line="360" pos:column="17">void</name></type> <name pos:line="360" pos:column="22">ProcessItems</name><parameter_list pos:line="360" pos:column="34">(<param><decl><type><name pos:line="360" pos:column="35">IEnumerator</name></type> <name pos:line="360" pos:column="47">items</name></decl></param>, <param><decl><type><name pos:line="360" pos:column="54">BackgroundWorker</name></type> <name pos:line="360" pos:column="71">worker</name></decl></param>, <param><decl><type><name><name pos:line="360" pos:column="79">List</name><argument_list pos:line="360" pos:column="83">&lt;<argument><name pos:line="360" pos:column="84">string</name></argument>&gt;</argument_list></name></type> <name pos:line="360" pos:column="92">list</name></decl></param>)</parameter_list> <block pos:line="360" pos:column="98">{
            <while pos:line="361" pos:column="13">while<condition pos:line="361" pos:column="18">(<expr><call><name><name pos:line="361" pos:column="19">items</name><op:operator pos:line="361" pos:column="24">.</op:operator><name pos:line="361" pos:column="25">MoveNext</name></name><argument_list pos:line="361" pos:column="33">()</argument_list></call></expr>)</condition> <block pos:line="361" pos:column="37">{
                <if pos:line="362" pos:column="17">if<condition pos:line="362" pos:column="19">(<expr><name pos:line="362" pos:column="20">worker</name> <op:operator pos:line="362" pos:column="27">!=</op:operator> <name pos:line="362" pos:column="30">null</name> <op:operator pos:line="362" pos:column="35">&amp;&amp;</op:operator> <name><name pos:line="362" pos:column="38">worker</name><op:operator pos:line="362" pos:column="44">.</op:operator><name pos:line="362" pos:column="45">CancellationPending</name></name></expr>)</condition><then pos:line="362" pos:column="65"> <block pos:line="362" pos:column="66">{
                    <return pos:line="363" pos:column="21">return;</return>
                }</block></then></if>
                <decl_stmt><decl><type><name pos:line="365" pos:column="17">var</name></type> <name pos:line="365" pos:column="21">item</name> <init pos:line="365" pos:column="26">= <expr><op:operator pos:line="365" pos:column="28">(</op:operator><name pos:line="365" pos:column="29">ProjectItem</name><op:operator pos:line="365" pos:column="40">)</op:operator> <name><name pos:line="365" pos:column="42">items</name><op:operator pos:line="365" pos:column="47">.</op:operator><name pos:line="365" pos:column="48">Current</name></name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name pos:line="366" pos:column="17">ProcessItem</name><argument_list pos:line="366" pos:column="28">(<argument><expr><name pos:line="366" pos:column="29">item</name></expr></argument>, <argument><expr><name pos:line="366" pos:column="35">worker</name></expr></argument>, <argument><expr><name pos:line="366" pos:column="43">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
        }</block></function>

        <comment type="line" pos:line="370" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="371" pos:column="9">/// Process a project item.</comment>
        <comment type="line" pos:line="372" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="373" pos:column="9">/// &lt;param name="project"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="374" pos:column="9">/// &lt;param name="worker"&gt;&lt;/param&gt;</comment>
        <function><type><specifier pos:line="375" pos:column="9">private</specifier> <name pos:line="375" pos:column="17">void</name></type> <name pos:line="375" pos:column="22">ProcessProject</name><parameter_list pos:line="375" pos:column="36">(<param><decl><type><name pos:line="375" pos:column="37">Project</name></type> <name pos:line="375" pos:column="45">project</name></decl></param>, <param><decl><type><name pos:line="375" pos:column="54">BackgroundWorker</name></type> <name pos:line="375" pos:column="71">worker</name></decl></param>, <param><decl><type><name><name pos:line="375" pos:column="79">List</name><argument_list pos:line="375" pos:column="83">&lt;<argument><name pos:line="375" pos:column="84">string</name></argument>&gt;</argument_list></name></type> <name pos:line="375" pos:column="92">list</name></decl></param>)</parameter_list> <block pos:line="375" pos:column="98">{
            <if pos:line="376" pos:column="13">if<condition pos:line="376" pos:column="15">(<expr><name pos:line="376" pos:column="16">project</name> <op:operator pos:line="376" pos:column="24">!=</op:operator> <name pos:line="376" pos:column="27">null</name></expr>)</condition><then pos:line="376" pos:column="32"> <block pos:line="376" pos:column="33">{
                <if pos:line="377" pos:column="17">if<condition pos:line="377" pos:column="19">(<expr><name><name pos:line="377" pos:column="20">project</name><op:operator pos:line="377" pos:column="27">.</op:operator><name pos:line="377" pos:column="28">ProjectItems</name></name> <op:operator pos:line="377" pos:column="41">!=</op:operator> <name pos:line="377" pos:column="44">null</name></expr>)</condition><then pos:line="377" pos:column="49"> <block pos:line="377" pos:column="50">{
                    <try pos:line="378" pos:column="21">try <block pos:line="378" pos:column="25">{
                        <expr_stmt><expr><call><name pos:line="379" pos:column="25">ProcessItems</name><argument_list pos:line="379" pos:column="37">(<argument><expr><call><name><name pos:line="379" pos:column="38">project</name><op:operator pos:line="379" pos:column="45">.</op:operator><name pos:line="379" pos:column="46">ProjectItems</name><op:operator pos:line="379" pos:column="58">.</op:operator><name pos:line="379" pos:column="59">GetEnumerator</name></name><argument_list pos:line="379" pos:column="72">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="379" pos:column="76">worker</name></expr></argument>, <argument><expr><name pos:line="379" pos:column="84">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block> <catch pos:line="380" pos:column="23">catch<parameter_list pos:line="380" pos:column="28">(<param><decl><type><name pos:line="380" pos:column="29">Exception</name></type> <name pos:line="380" pos:column="39">e</name></decl></param>)</parameter_list> <block pos:line="380" pos:column="42">{
                        <expr_stmt><expr><call><name><name pos:line="381" pos:column="25">Console</name><op:operator pos:line="381" pos:column="32">.</op:operator><name pos:line="381" pos:column="33">WriteLine</name></name><argument_list pos:line="381" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="381" pos:column="43">"Problem parsing files:"</lit:literal> <op:operator pos:line="381" pos:column="68">+</op:operator> <name><name pos:line="381" pos:column="70">e</name><op:operator pos:line="381" pos:column="71">.</op:operator><name pos:line="381" pos:column="72">Message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></catch></try>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="387" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="388" pos:column="9">/// Process a single source file. (Not include file deletion.)</comment>
        <comment type="line" pos:line="389" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="390" pos:column="9">/// &lt;param name="item"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="391" pos:column="9">/// &lt;param name="worker"&gt;&lt;/param&gt;</comment>
        <function><type><specifier pos:line="392" pos:column="9">private</specifier> <name pos:line="392" pos:column="17">void</name></type> <name pos:line="392" pos:column="22">ProcessSingleFile</name><parameter_list pos:line="392" pos:column="39">(<param><decl><type><name pos:line="392" pos:column="40">ProjectItem</name></type> <name pos:line="392" pos:column="52">item</name></decl></param>, <param><decl><type><name pos:line="392" pos:column="58">BackgroundWorker</name></type> <name pos:line="392" pos:column="75">worker</name></decl></param>, <param><decl><type><name><name pos:line="392" pos:column="83">List</name><argument_list pos:line="392" pos:column="87">&lt;<argument><name pos:line="392" pos:column="88">string</name></argument>&gt;</argument_list></name></type> <name pos:line="392" pos:column="96">list</name></decl></param>)</parameter_list> <block pos:line="392" pos:column="102">{
            <decl_stmt><decl><type><name pos:line="393" pos:column="13">string</name></type> <name pos:line="393" pos:column="20">path</name> <init pos:line="393" pos:column="25">= <expr><lit:literal type="string" pos:line="393" pos:column="27">""</lit:literal></expr></init></decl>;</decl_stmt>
            <try pos:line="394" pos:column="13">try <block pos:line="394" pos:column="17">{
                <if pos:line="395" pos:column="17">if<condition pos:line="395" pos:column="19">(<expr><name pos:line="395" pos:column="20">item</name> <op:operator pos:line="395" pos:column="25">!=</op:operator> <name pos:line="395" pos:column="28">null</name> <op:operator pos:line="395" pos:column="33">&amp;&amp;</op:operator> <name><name pos:line="395" pos:column="36">item</name><op:operator pos:line="395" pos:column="40">.</op:operator><name pos:line="395" pos:column="41">Name</name></name> <op:operator pos:line="395" pos:column="46">!=</op:operator> <name pos:line="395" pos:column="49">null</name></expr>)</condition><then pos:line="395" pos:column="54"> <block pos:line="395" pos:column="55">{
                    <try pos:line="396" pos:column="21">try <block pos:line="396" pos:column="25">{
                        <expr_stmt><expr><name pos:line="397" pos:column="25">path</name> <op:operator pos:line="397" pos:column="30">=</op:operator> <name><name pos:line="397" pos:column="32">item</name><op:operator pos:line="397" pos:column="36">.</op:operator><name pos:line="397" pos:column="37">FileNames</name><index pos:line="397" pos:column="46">[<expr><lit:literal type="number" pos:line="397" pos:column="47">0</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    }</block> <catch pos:line="398" pos:column="23">catch<parameter_list pos:line="398" pos:column="28">(<param><decl><type><name pos:line="398" pos:column="29">Exception</name></type> <name pos:line="398" pos:column="39">e</name></decl></param>)</parameter_list> <block pos:line="398" pos:column="42">{
                        <expr_stmt><expr><call><name><name pos:line="399" pos:column="25">Console</name><op:operator pos:line="399" pos:column="32">.</op:operator><name pos:line="399" pos:column="33">WriteLine</name></name><argument_list pos:line="399" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="399" pos:column="43">"Exception when getting file names: "</lit:literal> <op:operator pos:line="399" pos:column="81">+</op:operator> <name pos:line="399" pos:column="83">path</name> <op:operator pos:line="399" pos:column="88">+</op:operator> <lit:literal type="string" pos:line="399" pos:column="90">"; "</lit:literal> <op:operator pos:line="399" pos:column="95">+</op:operator> <name><name pos:line="399" pos:column="97">e</name><op:operator pos:line="399" pos:column="98">.</op:operator><name pos:line="399" pos:column="99">Message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><name pos:line="400" pos:column="25">path</name> <op:operator pos:line="400" pos:column="30">=</op:operator> <name><name pos:line="400" pos:column="32">item</name><op:operator pos:line="400" pos:column="36">.</op:operator><name pos:line="400" pos:column="37">FileNames</name><index pos:line="400" pos:column="46">[<expr><lit:literal type="number" pos:line="400" pos:column="47">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    }</block></catch></try>

                    <if pos:line="403" pos:column="21">if<condition pos:line="403" pos:column="23">(<expr><call><name><name pos:line="403" pos:column="24">File</name><op:operator pos:line="403" pos:column="28">.</op:operator><name pos:line="403" pos:column="29">Exists</name></name><argument_list pos:line="403" pos:column="35">(<argument><expr><name pos:line="403" pos:column="36">path</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="403" pos:column="42"> <block pos:line="403" pos:column="43">{
                        <comment type="line" pos:line="404" pos:column="25">////AllMonitoredFiles.Add(path);</comment>
                        <expr_stmt><expr><call><name><name pos:line="405" pos:column="25">list</name><op:operator pos:line="405" pos:column="29">.</op:operator><name pos:line="405" pos:column="30">Add</name></name><argument_list pos:line="405" pos:column="33">(<argument><expr><name pos:line="405" pos:column="34">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>
            }</block> <catch pos:line="408" pos:column="15">catch<parameter_list pos:line="408" pos:column="20">(<param><decl><type><name pos:line="408" pos:column="21">Exception</name></type> <name pos:line="408" pos:column="31">e</name></decl></param>)</parameter_list> <block pos:line="408" pos:column="34">{
                <expr_stmt><expr><call><name><name pos:line="409" pos:column="17">Console</name><op:operator pos:line="409" pos:column="24">.</op:operator><name pos:line="409" pos:column="25">WriteLine</name></name><argument_list pos:line="409" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="409" pos:column="35">"Problem parsing file: "</lit:literal> <op:operator pos:line="409" pos:column="60">+</op:operator> <name pos:line="409" pos:column="62">path</name> <op:operator pos:line="409" pos:column="67">+</op:operator> <lit:literal type="string" pos:line="409" pos:column="69">"; "</lit:literal> <op:operator pos:line="409" pos:column="74">+</op:operator> <name><name pos:line="409" pos:column="76">e</name><op:operator pos:line="409" pos:column="77">.</op:operator><name pos:line="409" pos:column="78">Message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <comment type="line" pos:line="413" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="414" pos:column="9">/// Recursively walk through the solution/projects to check if srcML files need to be ADDED</comment>
        <comment type="line" pos:line="415" pos:column="9">/// or CHANGED.</comment>
        <comment type="line" pos:line="416" pos:column="9">/// TODO: may process files in parallel</comment>
        <comment type="line" pos:line="417" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="418" pos:column="9">/// &lt;param name="worker"&gt;&lt;/param&gt;</comment>
        <function><type><specifier pos:line="419" pos:column="9">private</specifier> <name pos:line="419" pos:column="17">void</name></type> <name pos:line="419" pos:column="22">WalkSolutionTree</name><parameter_list pos:line="419" pos:column="38">(<param><decl><type><name pos:line="419" pos:column="39">BackgroundWorker</name></type> <name pos:line="419" pos:column="56">worker</name></decl></param>)</parameter_list> <block pos:line="419" pos:column="64">{
            <try pos:line="420" pos:column="13">try <block pos:line="420" pos:column="17">{
                <decl_stmt><decl><type><name pos:line="421" pos:column="17">var</name></type> <name pos:line="421" pos:column="21">allProjects</name> <init pos:line="421" pos:column="33">= <expr><call><name><name pos:line="421" pos:column="35">OpenSolution</name><op:operator pos:line="421" pos:column="47">.</op:operator><name pos:line="421" pos:column="48">getProjects</name></name><argument_list pos:line="421" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="422" pos:column="17">var</name></type> <name pos:line="422" pos:column="21">enumerator</name> <init pos:line="422" pos:column="32">= <expr><call><name><name pos:line="422" pos:column="34">allProjects</name><op:operator pos:line="422" pos:column="45">.</op:operator><name pos:line="422" pos:column="46">GetEnumerator</name></name><argument_list pos:line="422" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <while pos:line="423" pos:column="17">while<condition pos:line="423" pos:column="22">(<expr><call><name><name pos:line="423" pos:column="23">enumerator</name><op:operator pos:line="423" pos:column="33">.</op:operator><name pos:line="423" pos:column="34">MoveNext</name></name><argument_list pos:line="423" pos:column="42">()</argument_list></call></expr>)</condition> <block pos:line="423" pos:column="46">{
                    <decl_stmt><decl><type><name pos:line="424" pos:column="21">var</name></type> <name pos:line="424" pos:column="25">project</name> <init pos:line="424" pos:column="33">= <expr><name><name pos:line="424" pos:column="35">enumerator</name><op:operator pos:line="424" pos:column="45">.</op:operator><name pos:line="424" pos:column="46">Current</name></name> <op:operator pos:line="424" pos:column="54">as</op:operator> <name pos:line="424" pos:column="57">Project</name></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name pos:line="425" pos:column="21">ProcessProject</name><argument_list pos:line="425" pos:column="35">(<argument><expr><name pos:line="425" pos:column="36">project</name></expr></argument>, <argument><expr><name pos:line="425" pos:column="45">worker</name></expr></argument>, <argument><expr><name pos:line="425" pos:column="53">AllMonitoredFiles</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="426" pos:column="21">if<condition pos:line="426" pos:column="23">(<expr><name pos:line="426" pos:column="24">worker</name> <op:operator pos:line="426" pos:column="31">!=</op:operator> <name pos:line="426" pos:column="34">null</name> <op:operator pos:line="426" pos:column="39">&amp;&amp;</op:operator> <name><name pos:line="426" pos:column="42">worker</name><op:operator pos:line="426" pos:column="48">.</op:operator><name pos:line="426" pos:column="49">CancellationPending</name></name></expr>)</condition><then pos:line="426" pos:column="69"> <block pos:line="426" pos:column="70">{
                        <return pos:line="427" pos:column="25">return;</return>
                    }</block></then></if>
                }</block></while>
            }</block> <catch pos:line="430" pos:column="15">catch<parameter_list pos:line="430" pos:column="20">(<param><decl><type><name pos:line="430" pos:column="21">Exception</name></type> <name pos:line="430" pos:column="31">e</name></decl></param>)</parameter_list> <block pos:line="430" pos:column="34">{
                <expr_stmt><expr><call><name><name pos:line="431" pos:column="17">Console</name><op:operator pos:line="431" pos:column="24">.</op:operator><name pos:line="431" pos:column="25">WriteLine</name></name><argument_list pos:line="431" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="431" pos:column="35">"Problem walk through the solution/projects. "</lit:literal> <op:operator pos:line="431" pos:column="82">+</op:operator> <name><name pos:line="431" pos:column="84">e</name><op:operator pos:line="431" pos:column="85">.</op:operator><name pos:line="431" pos:column="86">Message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <cpp:region pos:line="435" pos:column="9">#<cpp:directive pos:line="435" pos:column="10">region</cpp:directive> IVsTrackProjectDocumentsEvents2</cpp:region>

        <comment type="line" pos:line="437" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="438" pos:column="9">/// This method notifies the client after directories are added to the project.</comment>
        <comment type="line" pos:line="439" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="440" pos:column="9">/// &lt;param name="cProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="441" pos:column="9">/// &lt;param name="cDirectories"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="442" pos:column="9">/// &lt;param name="rgpProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="443" pos:column="9">/// &lt;param name="rgFirstIndices"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="444" pos:column="9">/// &lt;param name="rgpszMkDocuments"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="445" pos:column="9">/// &lt;param name="rgFlags"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="446" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="447" pos:column="9">int</name></type> <name><name pos:line="447" pos:column="13">IVsTrackProjectDocumentsEvents2</name><op:operator pos:line="447" pos:column="44">.</op:operator><name pos:line="447" pos:column="45">OnAfterAddDirectoriesEx</name></name><parameter_list pos:line="447" pos:column="68">(<param><decl><type><name pos:line="447" pos:column="69">int</name></type> <name pos:line="447" pos:column="73">cProjects</name></decl></param>, <param><decl><type><name pos:line="447" pos:column="84">int</name></type> <name pos:line="447" pos:column="88">cDirectories</name></decl></param>, <param><decl><type><name><name pos:line="447" pos:column="102">IVsProject</name><index pos:line="447" pos:column="112">[]</index></name></type> <name pos:line="447" pos:column="115">rgpProjects</name></decl></param>, <param><decl><type><name><name pos:line="447" pos:column="128">int</name><index pos:line="447" pos:column="131">[]</index></name></type> <name pos:line="447" pos:column="134">rgFirstIndices</name></decl></param>, <param><decl><type><name><name pos:line="447" pos:column="150">string</name><index pos:line="447" pos:column="156">[]</index></name></type> <name pos:line="447" pos:column="159">rgpszMkDocuments</name></decl></param>, <param><decl><type><name><name pos:line="447" pos:column="177">VSADDDIRECTORYFLAGS</name><index pos:line="447" pos:column="196">[]</index></name></type> <name pos:line="447" pos:column="199">rgFlags</name></decl></param>)</parameter_list> <block pos:line="447" pos:column="208">{
            <return pos:line="448" pos:column="13">return <expr><name><name pos:line="448" pos:column="20">VSConstants</name><op:operator pos:line="448" pos:column="31">.</op:operator><name pos:line="448" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="451" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="452" pos:column="9">/// This method notifies the client after a project has added files.</comment>
        <comment type="line" pos:line="453" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="454" pos:column="9">/// &lt;param name="cProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="455" pos:column="9">/// &lt;param name="cFiles"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="456" pos:column="9">/// &lt;param name="rgpProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="457" pos:column="9">/// &lt;param name="rgFirstIndices"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="458" pos:column="9">/// &lt;param name="rgpszMkDocuments"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="459" pos:column="9">/// &lt;param name="rgFlags"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="460" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="461" pos:column="9">int</name></type> <name><name pos:line="461" pos:column="13">IVsTrackProjectDocumentsEvents2</name><op:operator pos:line="461" pos:column="44">.</op:operator><name pos:line="461" pos:column="45">OnAfterAddFilesEx</name></name><parameter_list pos:line="461" pos:column="62">(<param><decl><type><name pos:line="461" pos:column="63">int</name></type> <name pos:line="461" pos:column="67">cProjects</name></decl></param>,
                                                      <param><decl><type><name pos:line="462" pos:column="55">int</name></type> <name pos:line="462" pos:column="59">cFiles</name></decl></param>,
                                                      <param><decl><type><name><name pos:line="463" pos:column="55">IVsProject</name><index pos:line="463" pos:column="65">[]</index></name></type> <name pos:line="463" pos:column="68">rgpProjects</name></decl></param>,
                                                      <param><decl><type><name><name pos:line="464" pos:column="55">int</name><index pos:line="464" pos:column="58">[]</index></name></type> <name pos:line="464" pos:column="61">rgFirstIndices</name></decl></param>,
                                                      <param><decl><type><name><name pos:line="465" pos:column="55">string</name><index pos:line="465" pos:column="61">[]</index></name></type> <name pos:line="465" pos:column="64">rgpszMkDocuments</name></decl></param>,
                                                      <param><decl><type><name><name pos:line="466" pos:column="55">VSADDFILEFLAGS</name><index pos:line="466" pos:column="69">[]</index></name></type> <name pos:line="466" pos:column="72">rgFlags</name></decl></param>)</parameter_list> <block pos:line="466" pos:column="81">{
            <comment type="line" pos:line="467" pos:column="13">//////SrcMLFileLogger.DefaultLogger.Info("==&gt; Triggered IVsTrackProjectDocumentsEvents2.OnAfterAddFilesEx()");</comment>
            <return pos:line="468" pos:column="13">return <expr><call><name pos:line="468" pos:column="20">OnNotifyFileAddRemove</name><argument_list pos:line="468" pos:column="41">(<argument><expr><name pos:line="468" pos:column="42">cProjects</name></expr></argument>, <argument><expr><name pos:line="468" pos:column="53">cFiles</name></expr></argument>, <argument><expr><name pos:line="468" pos:column="61">rgpProjects</name></expr></argument>, <argument><expr><name pos:line="468" pos:column="74">rgFirstIndices</name></expr></argument>, <argument><expr><name pos:line="468" pos:column="90">rgpszMkDocuments</name></expr></argument>, <argument><expr><name><name pos:line="468" pos:column="108">FileEventType</name><op:operator pos:line="468" pos:column="121">.</op:operator><name pos:line="468" pos:column="122">FileAdded</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="471" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="472" pos:column="9">/// This method notifies the client when directories have been removed from the project.</comment>
        <comment type="line" pos:line="473" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="474" pos:column="9">/// &lt;param name="cProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="475" pos:column="9">/// &lt;param name="cDirectories"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="476" pos:column="9">/// &lt;param name="rgpProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="477" pos:column="9">/// &lt;param name="rgFirstIndices"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="478" pos:column="9">/// &lt;param name="rgpszMkDocuments"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="479" pos:column="9">/// &lt;param name="rgFlags"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="480" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="481" pos:column="9">int</name></type> <name><name pos:line="481" pos:column="13">IVsTrackProjectDocumentsEvents2</name><op:operator pos:line="481" pos:column="44">.</op:operator><name pos:line="481" pos:column="45">OnAfterRemoveDirectories</name></name><parameter_list pos:line="481" pos:column="69">(<param><decl><type><name pos:line="481" pos:column="70">int</name></type> <name pos:line="481" pos:column="74">cProjects</name></decl></param>, <param><decl><type><name pos:line="481" pos:column="85">int</name></type> <name pos:line="481" pos:column="89">cDirectories</name></decl></param>, <param><decl><type><name><name pos:line="481" pos:column="103">IVsProject</name><index pos:line="481" pos:column="113">[]</index></name></type> <name pos:line="481" pos:column="116">rgpProjects</name></decl></param>, <param><decl><type><name><name pos:line="481" pos:column="129">int</name><index pos:line="481" pos:column="132">[]</index></name></type> <name pos:line="481" pos:column="135">rgFirstIndices</name></decl></param>, <param><decl><type><name><name pos:line="481" pos:column="151">string</name><index pos:line="481" pos:column="157">[]</index></name></type> <name pos:line="481" pos:column="160">rgpszMkDocuments</name></decl></param>, <param><decl><type><name><name pos:line="481" pos:column="178">VSREMOVEDIRECTORYFLAGS</name><index pos:line="481" pos:column="200">[]</index></name></type> <name pos:line="481" pos:column="203">rgFlags</name></decl></param>)</parameter_list> <block pos:line="481" pos:column="212">{
            <return pos:line="482" pos:column="13">return <expr><name><name pos:line="482" pos:column="20">VSConstants</name><op:operator pos:line="482" pos:column="31">.</op:operator><name pos:line="482" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="485" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="486" pos:column="9">/// This method notifies the client after files are removed from the project.</comment>
        <comment type="line" pos:line="487" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="488" pos:column="9">/// &lt;param name="cProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="489" pos:column="9">/// &lt;param name="cFiles"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="490" pos:column="9">/// &lt;param name="rgpProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="491" pos:column="9">/// &lt;param name="rgFirstIndices"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="492" pos:column="9">/// &lt;param name="rgpszMkDocuments"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="493" pos:column="9">/// &lt;param name="rgFlags"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="494" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="495" pos:column="9">int</name></type> <name><name pos:line="495" pos:column="13">IVsTrackProjectDocumentsEvents2</name><op:operator pos:line="495" pos:column="44">.</op:operator><name pos:line="495" pos:column="45">OnAfterRemoveFiles</name></name><parameter_list pos:line="495" pos:column="63">(<param><decl><type><name pos:line="495" pos:column="64">int</name></type> <name pos:line="495" pos:column="68">cProjects</name></decl></param>,
                                                               <param><decl><type><name pos:line="496" pos:column="64">int</name></type> <name pos:line="496" pos:column="68">cFiles</name></decl></param>,
                                                               <param><decl><type><name><name pos:line="497" pos:column="64">IVsProject</name><index pos:line="497" pos:column="74">[]</index></name></type> <name pos:line="497" pos:column="77">rgpProjects</name></decl></param>,
                                                               <param><decl><type><name><name pos:line="498" pos:column="64">int</name><index pos:line="498" pos:column="67">[]</index></name></type> <name pos:line="498" pos:column="70">rgFirstIndices</name></decl></param>,
                                                               <param><decl><type><name><name pos:line="499" pos:column="64">string</name><index pos:line="499" pos:column="70">[]</index></name></type> <name pos:line="499" pos:column="73">rgpszMkDocuments</name></decl></param>,
                                                               <param><decl><type><name><name pos:line="500" pos:column="64">VSREMOVEFILEFLAGS</name><index pos:line="500" pos:column="81">[]</index></name></type> <name pos:line="500" pos:column="84">rgFlags</name></decl></param>)</parameter_list> <block pos:line="500" pos:column="93">{
            <comment type="line" pos:line="501" pos:column="13">//////SrcMLFileLogger.DefaultLogger.Info("==&gt; Triggered IVsTrackProjectDocumentsEvents2.OnAfterRemoveFiles()");</comment>
            <return pos:line="502" pos:column="13">return <expr><call><name pos:line="502" pos:column="20">OnNotifyFileAddRemove</name><argument_list pos:line="502" pos:column="41">(<argument><expr><name pos:line="502" pos:column="42">cProjects</name></expr></argument>, <argument><expr><name pos:line="502" pos:column="53">cFiles</name></expr></argument>, <argument><expr><name pos:line="502" pos:column="61">rgpProjects</name></expr></argument>, <argument><expr><name pos:line="502" pos:column="74">rgFirstIndices</name></expr></argument>, <argument><expr><name pos:line="502" pos:column="90">rgpszMkDocuments</name></expr></argument>, <argument><expr><name><name pos:line="502" pos:column="108">FileEventType</name><op:operator pos:line="502" pos:column="121">.</op:operator><name pos:line="502" pos:column="122">FileDeleted</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="505" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="506" pos:column="9">/// This method notifies the client when directories have been renamed in the project.</comment>
        <comment type="line" pos:line="507" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="508" pos:column="9">/// &lt;param name="cProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="509" pos:column="9">/// &lt;param name="cDirs"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="510" pos:column="9">/// &lt;param name="rgpProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="511" pos:column="9">/// &lt;param name="rgFirstIndices"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="512" pos:column="9">/// &lt;param name="rgszMkOldNames"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="513" pos:column="9">/// &lt;param name="rgszMkNewNames"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="514" pos:column="9">/// &lt;param name="rgFlags"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="515" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="516" pos:column="9">int</name></type> <name><name pos:line="516" pos:column="13">IVsTrackProjectDocumentsEvents2</name><op:operator pos:line="516" pos:column="44">.</op:operator><name pos:line="516" pos:column="45">OnAfterRenameDirectories</name></name><parameter_list pos:line="516" pos:column="69">(<param><decl><type><name pos:line="516" pos:column="70">int</name></type> <name pos:line="516" pos:column="74">cProjects</name></decl></param>, <param><decl><type><name pos:line="516" pos:column="85">int</name></type> <name pos:line="516" pos:column="89">cDirs</name></decl></param>, <param><decl><type><name><name pos:line="516" pos:column="96">IVsProject</name><index pos:line="516" pos:column="106">[]</index></name></type> <name pos:line="516" pos:column="109">rgpProjects</name></decl></param>, <param><decl><type><name><name pos:line="516" pos:column="122">int</name><index pos:line="516" pos:column="125">[]</index></name></type> <name pos:line="516" pos:column="128">rgFirstIndices</name></decl></param>, <param><decl><type><name><name pos:line="516" pos:column="144">string</name><index pos:line="516" pos:column="150">[]</index></name></type> <name pos:line="516" pos:column="153">rgszMkOldNames</name></decl></param>, <param><decl><type><name><name pos:line="516" pos:column="169">string</name><index pos:line="516" pos:column="175">[]</index></name></type> <name pos:line="516" pos:column="178">rgszMkNewNames</name></decl></param>, <param><decl><type><name><name pos:line="516" pos:column="194">VSRENAMEDIRECTORYFLAGS</name><index pos:line="516" pos:column="216">[]</index></name></type> <name pos:line="516" pos:column="219">rgFlags</name></decl></param>)</parameter_list> <block pos:line="516" pos:column="228">{
            <return pos:line="517" pos:column="13">return <expr><name><name pos:line="517" pos:column="20">VSConstants</name><op:operator pos:line="517" pos:column="31">.</op:operator><name pos:line="517" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="520" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="521" pos:column="9">/// This method notifies the client when files have been renamed in the project.</comment>
        <comment type="line" pos:line="522" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="523" pos:column="9">/// &lt;param name="cProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="524" pos:column="9">/// &lt;param name="cFiles"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="525" pos:column="9">/// &lt;param name="rgpProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="526" pos:column="9">/// &lt;param name="rgFirstIndices"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="527" pos:column="9">/// &lt;param name="rgszMkOldNames"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="528" pos:column="9">/// &lt;param name="rgszMkNewNames"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="529" pos:column="9">/// &lt;param name="rgFlags"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="530" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="531" pos:column="9">int</name></type> <name><name pos:line="531" pos:column="13">IVsTrackProjectDocumentsEvents2</name><op:operator pos:line="531" pos:column="44">.</op:operator><name pos:line="531" pos:column="45">OnAfterRenameFiles</name></name><parameter_list pos:line="531" pos:column="63">(<param><decl><type><name pos:line="531" pos:column="64">int</name></type> <name pos:line="531" pos:column="68">cProjects</name></decl></param>,
                                                               <param><decl><type><name pos:line="532" pos:column="64">int</name></type> <name pos:line="532" pos:column="68">cFiles</name></decl></param>,
                                                               <param><decl><type><name><name pos:line="533" pos:column="64">IVsProject</name><index pos:line="533" pos:column="74">[]</index></name></type> <name pos:line="533" pos:column="77">rgpProjects</name></decl></param>,
                                                               <param><decl><type><name><name pos:line="534" pos:column="64">int</name><index pos:line="534" pos:column="67">[]</index></name></type> <name pos:line="534" pos:column="70">rgFirstIndices</name></decl></param>,
                                                               <param><decl><type><name><name pos:line="535" pos:column="64">string</name><index pos:line="535" pos:column="70">[]</index></name></type> <name pos:line="535" pos:column="73">rgszMkOldNames</name></decl></param>,
                                                               <param><decl><type><name><name pos:line="536" pos:column="64">string</name><index pos:line="536" pos:column="70">[]</index></name></type> <name pos:line="536" pos:column="73">rgszMkNewNames</name></decl></param>,
                                                               <param><decl><type><name><name pos:line="537" pos:column="64">VSRENAMEFILEFLAGS</name><index pos:line="537" pos:column="81">[]</index></name></type> <name pos:line="537" pos:column="84">rgFlags</name></decl></param>)</parameter_list> <block pos:line="537" pos:column="93">{
            <comment type="line" pos:line="538" pos:column="13">//////SrcMLFileLogger.DefaultLogger.Info("==&gt; Triggered IVsTrackProjectDocumentsEvents2.OnAfterRenameFiles()");</comment>
            <expr_stmt><expr><call><name pos:line="539" pos:column="13">OnNotifyFileAddRemove</name><argument_list pos:line="539" pos:column="34">(<argument><expr><name pos:line="539" pos:column="35">cProjects</name></expr></argument>, <argument><expr><name pos:line="539" pos:column="46">cFiles</name></expr></argument>, <argument><expr><name pos:line="539" pos:column="54">rgpProjects</name></expr></argument>, <argument><expr><name pos:line="539" pos:column="67">rgFirstIndices</name></expr></argument>, <argument><expr><name pos:line="539" pos:column="83">rgszMkOldNames</name></expr></argument>, <argument><expr><name><name pos:line="539" pos:column="99">FileEventType</name><op:operator pos:line="539" pos:column="112">.</op:operator><name pos:line="539" pos:column="113">FileDeleted</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="540" pos:column="13">return <expr><call><name pos:line="540" pos:column="20">OnNotifyFileAddRemove</name><argument_list pos:line="540" pos:column="41">(<argument><expr><name pos:line="540" pos:column="42">cProjects</name></expr></argument>, <argument><expr><name pos:line="540" pos:column="53">cFiles</name></expr></argument>, <argument><expr><name pos:line="540" pos:column="61">rgpProjects</name></expr></argument>, <argument><expr><name pos:line="540" pos:column="74">rgFirstIndices</name></expr></argument>, <argument><expr><name pos:line="540" pos:column="90">rgszMkNewNames</name></expr></argument>, <argument><expr><name><name pos:line="540" pos:column="106">FileEventType</name><op:operator pos:line="540" pos:column="119">.</op:operator><name pos:line="540" pos:column="120">FileAdded</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="543" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="544" pos:column="9">/// This method notifies the client when source control status has changed.</comment>
        <comment type="line" pos:line="545" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="546" pos:column="9">/// &lt;param name="cProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="547" pos:column="9">/// &lt;param name="cFiles"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="548" pos:column="9">/// &lt;param name="rgpProjects"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="549" pos:column="9">/// &lt;param name="rgFirstIndices"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="550" pos:column="9">/// &lt;param name="rgpszMkDocuments"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="551" pos:column="9">/// &lt;param name="rgdwSccStatus"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="552" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="553" pos:column="9">int</name></type> <name><name pos:line="553" pos:column="13">IVsTrackProjectDocumentsEvents2</name><op:operator pos:line="553" pos:column="44">.</op:operator><name pos:line="553" pos:column="45">OnAfterSccStatusChanged</name></name><parameter_list pos:line="553" pos:column="68">(<param><decl><type><name pos:line="553" pos:column="69">int</name></type> <name pos:line="553" pos:column="73">cProjects</name></decl></param>, <param><decl><type><name pos:line="553" pos:column="84">int</name></type> <name pos:line="553" pos:column="88">cFiles</name></decl></param>, <param><decl><type><name><name pos:line="553" pos:column="96">IVsProject</name><index pos:line="553" pos:column="106">[]</index></name></type> <name pos:line="553" pos:column="109">rgpProjects</name></decl></param>, <param><decl><type><name><name pos:line="553" pos:column="122">int</name><index pos:line="553" pos:column="125">[]</index></name></type> <name pos:line="553" pos:column="128">rgFirstIndices</name></decl></param>, <param><decl><type><name><name pos:line="553" pos:column="144">string</name><index pos:line="553" pos:column="150">[]</index></name></type> <name pos:line="553" pos:column="153">rgpszMkDocuments</name></decl></param>, <param><decl><type><name><name pos:line="553" pos:column="171">uint</name><index pos:line="553" pos:column="175">[]</index></name></type> <name pos:line="553" pos:column="178">rgdwSccStatus</name></decl></param>)</parameter_list> <block pos:line="553" pos:column="193">{
            <return pos:line="554" pos:column="13">return <expr><name><name pos:line="554" pos:column="20">VSConstants</name><op:operator pos:line="554" pos:column="31">.</op:operator><name pos:line="554" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="557" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="558" pos:column="9">/// This method notifies the client when a project has requested to add directories.</comment>
        <comment type="line" pos:line="559" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="560" pos:column="9">/// &lt;param name="pProject"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="561" pos:column="9">/// &lt;param name="cDirectories"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="562" pos:column="9">/// &lt;param name="rgpszMkDocuments"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="563" pos:column="9">/// &lt;param name="rgFlags"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="564" pos:column="9">/// &lt;param name="pSummaryResult"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="565" pos:column="9">/// &lt;param name="rgResults"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="566" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="567" pos:column="9">int</name></type> <name><name pos:line="567" pos:column="13">IVsTrackProjectDocumentsEvents2</name><op:operator pos:line="567" pos:column="44">.</op:operator><name pos:line="567" pos:column="45">OnQueryAddDirectories</name></name><parameter_list pos:line="567" pos:column="66">(<param><decl><type><name pos:line="567" pos:column="67">IVsProject</name></type> <name pos:line="567" pos:column="78">pProject</name></decl></param>, <param><decl><type><name pos:line="567" pos:column="88">int</name></type> <name pos:line="567" pos:column="92">cDirectories</name></decl></param>, <param><decl><type><name><name pos:line="567" pos:column="106">string</name><index pos:line="567" pos:column="112">[]</index></name></type> <name pos:line="567" pos:column="115">rgpszMkDocuments</name></decl></param>, <param><decl><type><name><name pos:line="567" pos:column="133">VSQUERYADDDIRECTORYFLAGS</name><index pos:line="567" pos:column="157">[]</index></name></type> <name pos:line="567" pos:column="160">rgFlags</name></decl></param>, <param><decl><type><name><name pos:line="567" pos:column="169">VSQUERYADDDIRECTORYRESULTS</name><index pos:line="567" pos:column="195">[]</index></name></type> <name pos:line="567" pos:column="198">pSummaryResult</name></decl></param>, <param><decl><type><name><name pos:line="567" pos:column="214">VSQUERYADDDIRECTORYRESULTS</name><index pos:line="567" pos:column="240">[]</index></name></type> <name pos:line="567" pos:column="243">rgResults</name></decl></param>)</parameter_list> <block pos:line="567" pos:column="254">{
            <return pos:line="568" pos:column="13">return <expr><name><name pos:line="568" pos:column="20">VSConstants</name><op:operator pos:line="568" pos:column="31">.</op:operator><name pos:line="568" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="571" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="572" pos:column="9">/// This method notifies the client when a project has requested to add files.</comment>
        <comment type="line" pos:line="573" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="574" pos:column="9">/// &lt;param name="pProject"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="575" pos:column="9">/// &lt;param name="cFiles"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="576" pos:column="9">/// &lt;param name="rgpszMkDocuments"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="577" pos:column="9">/// &lt;param name="rgFlags"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="578" pos:column="9">/// &lt;param name="pSummaryResult"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="579" pos:column="9">/// &lt;param name="rgResults"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="580" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="581" pos:column="9">int</name></type> <name><name pos:line="581" pos:column="13">IVsTrackProjectDocumentsEvents2</name><op:operator pos:line="581" pos:column="44">.</op:operator><name pos:line="581" pos:column="45">OnQueryAddFiles</name></name><parameter_list pos:line="581" pos:column="60">(<param><decl><type><name pos:line="581" pos:column="61">IVsProject</name></type> <name pos:line="581" pos:column="72">pProject</name></decl></param>, <param><decl><type><name pos:line="581" pos:column="82">int</name></type> <name pos:line="581" pos:column="86">cFiles</name></decl></param>, <param><decl><type><name><name pos:line="581" pos:column="94">string</name><index pos:line="581" pos:column="100">[]</index></name></type> <name pos:line="581" pos:column="103">rgpszMkDocuments</name></decl></param>, <param><decl><type><name><name pos:line="581" pos:column="121">VSQUERYADDFILEFLAGS</name><index pos:line="581" pos:column="140">[]</index></name></type> <name pos:line="581" pos:column="143">rgFlags</name></decl></param>, <param><decl><type><name><name pos:line="581" pos:column="152">VSQUERYADDFILERESULTS</name><index pos:line="581" pos:column="173">[]</index></name></type> <name pos:line="581" pos:column="176">pSummaryResult</name></decl></param>, <param><decl><type><name><name pos:line="581" pos:column="192">VSQUERYADDFILERESULTS</name><index pos:line="581" pos:column="213">[]</index></name></type> <name pos:line="581" pos:column="216">rgResults</name></decl></param>)</parameter_list> <block pos:line="581" pos:column="227">{
            <return pos:line="582" pos:column="13">return <expr><name><name pos:line="582" pos:column="20">VSConstants</name><op:operator pos:line="582" pos:column="31">.</op:operator><name pos:line="582" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="585" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="586" pos:column="9">/// This method notifies the client when a project has requested to remove directories.</comment>
        <comment type="line" pos:line="587" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="588" pos:column="9">/// &lt;param name="pProject"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="589" pos:column="9">/// &lt;param name="cDirectories"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="590" pos:column="9">/// &lt;param name="rgpszMkDocuments"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="591" pos:column="9">/// &lt;param name="rgFlags"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="592" pos:column="9">/// &lt;param name="pSummaryResult"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="593" pos:column="9">/// &lt;param name="rgResults"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="594" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="595" pos:column="9">int</name></type> <name><name pos:line="595" pos:column="13">IVsTrackProjectDocumentsEvents2</name><op:operator pos:line="595" pos:column="44">.</op:operator><name pos:line="595" pos:column="45">OnQueryRemoveDirectories</name></name><parameter_list pos:line="595" pos:column="69">(<param><decl><type><name pos:line="595" pos:column="70">IVsProject</name></type> <name pos:line="595" pos:column="81">pProject</name></decl></param>, <param><decl><type><name pos:line="595" pos:column="91">int</name></type> <name pos:line="595" pos:column="95">cDirectories</name></decl></param>, <param><decl><type><name><name pos:line="595" pos:column="109">string</name><index pos:line="595" pos:column="115">[]</index></name></type> <name pos:line="595" pos:column="118">rgpszMkDocuments</name></decl></param>, <param><decl><type><name><name pos:line="595" pos:column="136">VSQUERYREMOVEDIRECTORYFLAGS</name><index pos:line="595" pos:column="163">[]</index></name></type> <name pos:line="595" pos:column="166">rgFlags</name></decl></param>, <param><decl><type><name><name pos:line="595" pos:column="175">VSQUERYREMOVEDIRECTORYRESULTS</name><index pos:line="595" pos:column="204">[]</index></name></type> <name pos:line="595" pos:column="207">pSummaryResult</name></decl></param>, <param><decl><type><name><name pos:line="595" pos:column="223">VSQUERYREMOVEDIRECTORYRESULTS</name><index pos:line="595" pos:column="252">[]</index></name></type> <name pos:line="595" pos:column="255">rgResults</name></decl></param>)</parameter_list> <block pos:line="595" pos:column="266">{
            <return pos:line="596" pos:column="13">return <expr><name><name pos:line="596" pos:column="20">VSConstants</name><op:operator pos:line="596" pos:column="31">.</op:operator><name pos:line="596" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="599" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="600" pos:column="9">/// This method notifies the client when a project has requested to remove files.</comment>
        <comment type="line" pos:line="601" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="602" pos:column="9">/// &lt;param name="pProject"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="603" pos:column="9">/// &lt;param name="cFiles"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="604" pos:column="9">/// &lt;param name="rgpszMkDocuments"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="605" pos:column="9">/// &lt;param name="rgFlags"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="606" pos:column="9">/// &lt;param name="pSummaryResult"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="607" pos:column="9">/// &lt;param name="rgResults"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="608" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="609" pos:column="9">int</name></type> <name><name pos:line="609" pos:column="13">IVsTrackProjectDocumentsEvents2</name><op:operator pos:line="609" pos:column="44">.</op:operator><name pos:line="609" pos:column="45">OnQueryRemoveFiles</name></name><parameter_list pos:line="609" pos:column="63">(<param><decl><type><name pos:line="609" pos:column="64">IVsProject</name></type> <name pos:line="609" pos:column="75">pProject</name></decl></param>, <param><decl><type><name pos:line="609" pos:column="85">int</name></type> <name pos:line="609" pos:column="89">cFiles</name></decl></param>, <param><decl><type><name><name pos:line="609" pos:column="97">string</name><index pos:line="609" pos:column="103">[]</index></name></type> <name pos:line="609" pos:column="106">rgpszMkDocuments</name></decl></param>, <param><decl><type><name><name pos:line="609" pos:column="124">VSQUERYREMOVEFILEFLAGS</name><index pos:line="609" pos:column="146">[]</index></name></type> <name pos:line="609" pos:column="149">rgFlags</name></decl></param>, <param><decl><type><name><name pos:line="609" pos:column="158">VSQUERYREMOVEFILERESULTS</name><index pos:line="609" pos:column="182">[]</index></name></type> <name pos:line="609" pos:column="185">pSummaryResult</name></decl></param>, <param><decl><type><name><name pos:line="609" pos:column="201">VSQUERYREMOVEFILERESULTS</name><index pos:line="609" pos:column="225">[]</index></name></type> <name pos:line="609" pos:column="228">rgResults</name></decl></param>)</parameter_list> <block pos:line="609" pos:column="239">{
            <return pos:line="610" pos:column="13">return <expr><name><name pos:line="610" pos:column="20">VSConstants</name><op:operator pos:line="610" pos:column="31">.</op:operator><name pos:line="610" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="613" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="614" pos:column="9">/// This method notifies the client when a project has requested to rename directories.</comment>
        <comment type="line" pos:line="615" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="616" pos:column="9">/// &lt;param name="pProject"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="617" pos:column="9">/// &lt;param name="cDirs"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="618" pos:column="9">/// &lt;param name="rgszMkOldNames"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="619" pos:column="9">/// &lt;param name="rgszMkNewNames"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="620" pos:column="9">/// &lt;param name="rgFlags"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="621" pos:column="9">/// &lt;param name="pSummaryResult"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="622" pos:column="9">/// &lt;param name="rgResults"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="623" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="624" pos:column="9">int</name></type> <name><name pos:line="624" pos:column="13">IVsTrackProjectDocumentsEvents2</name><op:operator pos:line="624" pos:column="44">.</op:operator><name pos:line="624" pos:column="45">OnQueryRenameDirectories</name></name><parameter_list pos:line="624" pos:column="69">(<param><decl><type><name pos:line="624" pos:column="70">IVsProject</name></type> <name pos:line="624" pos:column="81">pProject</name></decl></param>, <param><decl><type><name pos:line="624" pos:column="91">int</name></type> <name pos:line="624" pos:column="95">cDirs</name></decl></param>, <param><decl><type><name><name pos:line="624" pos:column="102">string</name><index pos:line="624" pos:column="108">[]</index></name></type> <name pos:line="624" pos:column="111">rgszMkOldNames</name></decl></param>, <param><decl><type><name><name pos:line="624" pos:column="127">string</name><index pos:line="624" pos:column="133">[]</index></name></type> <name pos:line="624" pos:column="136">rgszMkNewNames</name></decl></param>, <param><decl><type><name><name pos:line="624" pos:column="152">VSQUERYRENAMEDIRECTORYFLAGS</name><index pos:line="624" pos:column="179">[]</index></name></type> <name pos:line="624" pos:column="182">rgFlags</name></decl></param>, <param><decl><type><name><name pos:line="624" pos:column="191">VSQUERYRENAMEDIRECTORYRESULTS</name><index pos:line="624" pos:column="220">[]</index></name></type> <name pos:line="624" pos:column="223">pSummaryResult</name></decl></param>, <param><decl><type><name><name pos:line="624" pos:column="239">VSQUERYRENAMEDIRECTORYRESULTS</name><index pos:line="624" pos:column="268">[]</index></name></type> <name pos:line="624" pos:column="271">rgResults</name></decl></param>)</parameter_list> <block pos:line="624" pos:column="282">{
            <return pos:line="625" pos:column="13">return <expr><name><name pos:line="625" pos:column="20">VSConstants</name><op:operator pos:line="625" pos:column="31">.</op:operator><name pos:line="625" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="628" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="629" pos:column="9">/// This method notifies the client when a project has requested to rename files.</comment>
        <comment type="line" pos:line="630" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="631" pos:column="9">/// &lt;param name="pProject"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="632" pos:column="9">/// &lt;param name="cFiles"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="633" pos:column="9">/// &lt;param name="rgszMkOldNames"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="634" pos:column="9">/// &lt;param name="rgszMkNewNames"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="635" pos:column="9">/// &lt;param name="rgFlags"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="636" pos:column="9">/// &lt;param name="pSummaryResult"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="637" pos:column="9">/// &lt;param name="rgResults"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="638" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><name pos:line="639" pos:column="9">int</name></type> <name><name pos:line="639" pos:column="13">IVsTrackProjectDocumentsEvents2</name><op:operator pos:line="639" pos:column="44">.</op:operator><name pos:line="639" pos:column="45">OnQueryRenameFiles</name></name><parameter_list pos:line="639" pos:column="63">(<param><decl><type><name pos:line="639" pos:column="64">IVsProject</name></type> <name pos:line="639" pos:column="75">pProject</name></decl></param>, <param><decl><type><name pos:line="639" pos:column="85">int</name></type> <name pos:line="639" pos:column="89">cFiles</name></decl></param>, <param><decl><type><name><name pos:line="639" pos:column="97">string</name><index pos:line="639" pos:column="103">[]</index></name></type> <name pos:line="639" pos:column="106">rgszMkOldNames</name></decl></param>, <param><decl><type><name><name pos:line="639" pos:column="122">string</name><index pos:line="639" pos:column="128">[]</index></name></type> <name pos:line="639" pos:column="131">rgszMkNewNames</name></decl></param>, <param><decl><type><name><name pos:line="639" pos:column="147">VSQUERYRENAMEFILEFLAGS</name><index pos:line="639" pos:column="169">[]</index></name></type> <name pos:line="639" pos:column="172">rgFlags</name></decl></param>, <param><decl><type><name><name pos:line="639" pos:column="181">VSQUERYRENAMEFILERESULTS</name><index pos:line="639" pos:column="205">[]</index></name></type> <name pos:line="639" pos:column="208">pSummaryResult</name></decl></param>, <param><decl><type><name><name pos:line="639" pos:column="224">VSQUERYRENAMEFILERESULTS</name><index pos:line="639" pos:column="248">[]</index></name></type> <name pos:line="639" pos:column="251">rgResults</name></decl></param>)</parameter_list> <block pos:line="639" pos:column="262">{
            <return pos:line="640" pos:column="13">return <expr><name><name pos:line="640" pos:column="20">VSConstants</name><op:operator pos:line="640" pos:column="31">.</op:operator><name pos:line="640" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <cpp:endregion pos:line="643" pos:column="9">#<cpp:directive pos:line="643" pos:column="10">endregion</cpp:directive> IVsTrackProjectDocumentsEvents2</cpp:endregion>

        <cpp:region pos:line="645" pos:column="9">#<cpp:directive pos:line="645" pos:column="10">region</cpp:directive> IVsRunningDocTableEvents</cpp:region>

        <comment type="line" pos:line="647" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="648" pos:column="9">/// Called after a change in an attribute of a document in the Running Document Table (RDT).</comment>
        <comment type="line" pos:line="649" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="650" pos:column="9">/// &lt;param name="cookie"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="651" pos:column="9">/// &lt;param name="grfAttribs"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="652" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="653" pos:column="9">public</specifier> <name pos:line="653" pos:column="16">int</name></type> <name pos:line="653" pos:column="20">OnAfterAttributeChange</name><parameter_list pos:line="653" pos:column="42">(<param><decl><type><name pos:line="653" pos:column="43">uint</name></type> <name pos:line="653" pos:column="48">cookie</name></decl></param>, <param><decl><type><name pos:line="653" pos:column="56">uint</name></type> <name pos:line="653" pos:column="61">grfAttribs</name></decl></param>)</parameter_list> <block pos:line="653" pos:column="73">{
            <return pos:line="654" pos:column="13">return <expr><name><name pos:line="654" pos:column="20">VSConstants</name><op:operator pos:line="654" pos:column="31">.</op:operator><name pos:line="654" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="657" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="658" pos:column="9">/// Called after a document window is placed in the Hide state.</comment>
        <comment type="line" pos:line="659" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="660" pos:column="9">/// &lt;param name="docCookie"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="661" pos:column="9">/// &lt;param name="pFrame"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="662" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="663" pos:column="9">public</specifier> <name pos:line="663" pos:column="16">int</name></type> <name pos:line="663" pos:column="20">OnAfterDocumentWindowHide</name><parameter_list pos:line="663" pos:column="45">(<param><decl><type><name pos:line="663" pos:column="46">uint</name></type> <name pos:line="663" pos:column="51">docCookie</name></decl></param>, <param><decl><type><name pos:line="663" pos:column="62">IVsWindowFrame</name></type> <name pos:line="663" pos:column="77">pFrame</name></decl></param>)</parameter_list> <block pos:line="663" pos:column="85">{
            <return pos:line="664" pos:column="13">return <expr><name><name pos:line="664" pos:column="20">VSConstants</name><op:operator pos:line="664" pos:column="31">.</op:operator><name pos:line="664" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="667" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="668" pos:column="9">/// Called after application of the first lock of the specified type to the specified</comment>
        <comment type="line" pos:line="669" pos:column="9">/// document in the Running Document Table (RDT).</comment>
        <comment type="line" pos:line="670" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="671" pos:column="9">/// &lt;param name="cookie"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="672" pos:column="9">/// &lt;param name="lockType"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="673" pos:column="9">/// &lt;param name="readLocksLeft"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="674" pos:column="9">/// &lt;param name="editLocksLeft"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="675" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="676" pos:column="9">public</specifier> <name pos:line="676" pos:column="16">int</name></type> <name pos:line="676" pos:column="20">OnAfterFirstDocumentLock</name><parameter_list pos:line="676" pos:column="44">(<param><decl><type><name pos:line="676" pos:column="45">uint</name></type> <name pos:line="676" pos:column="50">cookie</name></decl></param>, <param><decl><type><name pos:line="676" pos:column="58">uint</name></type> <name pos:line="676" pos:column="63">lockType</name></decl></param>, <param><decl><type><name pos:line="676" pos:column="73">uint</name></type> <name pos:line="676" pos:column="78">readLocksLeft</name></decl></param>, <param><decl><type><name pos:line="676" pos:column="93">uint</name></type> <name pos:line="676" pos:column="98">editLocksLeft</name></decl></param>)</parameter_list> <block pos:line="676" pos:column="113">{
            <return pos:line="677" pos:column="13">return <expr><name><name pos:line="677" pos:column="20">VSConstants</name><op:operator pos:line="677" pos:column="31">.</op:operator><name pos:line="677" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="680" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="681" pos:column="9">/// Called after saving a document in the Running Document Table (RDT).</comment>
        <comment type="line" pos:line="682" pos:column="9">/// TODO: run in background or not?</comment>
        <comment type="line" pos:line="683" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="684" pos:column="9">/// &lt;param name="cookie"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="685" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="686" pos:column="9">public</specifier> <name pos:line="686" pos:column="16">int</name></type> <name pos:line="686" pos:column="20">OnAfterSave</name><parameter_list pos:line="686" pos:column="31">(<param><decl><type><name pos:line="686" pos:column="32">uint</name></type> <name pos:line="686" pos:column="37">cookie</name></decl></param>)</parameter_list> <block pos:line="686" pos:column="45">{
            <comment type="line" pos:line="687" pos:column="13">//////SrcMLFileLogger.DefaultLogger.Info("==&gt; Triggered IVsRunningDocTableEvents.OnAfterSave()");</comment>
            <decl_stmt><decl><type><name pos:line="688" pos:column="13">uint</name></type> <name pos:line="688" pos:column="18">flags</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="689" pos:column="13">uint</name></type> <name pos:line="689" pos:column="18">readingLocks</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="690" pos:column="13">uint</name></type> <name pos:line="690" pos:column="18">edittingLocks</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="691" pos:column="13">string</name></type> <name pos:line="691" pos:column="20">name</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="692" pos:column="13">IVsHierarchy</name></type> <name pos:line="692" pos:column="26">hierarchy</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="693" pos:column="13">uint</name></type> <name pos:line="693" pos:column="18">documentId</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="694" pos:column="13">IntPtr</name></type> <name pos:line="694" pos:column="20">documentData</name></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="696" pos:column="13">DocumentTable</name><op:operator pos:line="696" pos:column="26">.</op:operator><name pos:line="696" pos:column="27">GetDocumentInfo</name></name><argument_list pos:line="696" pos:column="42">(<argument><expr><name pos:line="696" pos:column="43">cookie</name></expr></argument>, <argument><expr pos:line="696" pos:column="51">out <name pos:line="696" pos:column="55">flags</name></expr></argument>, <argument><expr pos:line="696" pos:column="62">out <name pos:line="696" pos:column="66">readingLocks</name></expr></argument>, <argument><expr pos:line="696" pos:column="80">out <name pos:line="696" pos:column="84">edittingLocks</name></expr></argument>, <argument><expr pos:line="696" pos:column="99">out <name pos:line="696" pos:column="103">name</name></expr></argument>, <argument><expr pos:line="696" pos:column="109">out <name pos:line="696" pos:column="113">hierarchy</name></expr></argument>, <argument><expr pos:line="696" pos:column="124">out <name pos:line="696" pos:column="128">documentId</name></expr></argument>, <argument><expr pos:line="696" pos:column="140">out <name pos:line="696" pos:column="144">documentData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="697" pos:column="13">RespondToVSFileChangedEvent</name><argument_list pos:line="697" pos:column="40">(<argument><expr><name pos:line="697" pos:column="41">name</name></expr></argument>, <argument><expr><name pos:line="697" pos:column="47">null</name></expr></argument>, <argument><expr><name><name pos:line="697" pos:column="53">FileEventType</name><op:operator pos:line="697" pos:column="66">.</op:operator><name pos:line="697" pos:column="67">FileChanged</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="698" pos:column="13">return <expr><name><name pos:line="698" pos:column="20">VSConstants</name><op:operator pos:line="698" pos:column="31">.</op:operator><name pos:line="698" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="701" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="702" pos:column="9">/// Called before displaying a document window.</comment>
        <comment type="line" pos:line="703" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="704" pos:column="9">/// &lt;param name="cookie"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="705" pos:column="9">/// &lt;param name="fFirstShow"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="706" pos:column="9">/// &lt;param name="pFrame"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="707" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="708" pos:column="9">public</specifier> <name pos:line="708" pos:column="16">int</name></type> <name pos:line="708" pos:column="20">OnBeforeDocumentWindowShow</name><parameter_list pos:line="708" pos:column="46">(<param><decl><type><name pos:line="708" pos:column="47">uint</name></type> <name pos:line="708" pos:column="52">cookie</name></decl></param>, <param><decl><type><name pos:line="708" pos:column="60">int</name></type> <name pos:line="708" pos:column="64">fFirstShow</name></decl></param>, <param><decl><type><name pos:line="708" pos:column="76">IVsWindowFrame</name></type> <name pos:line="708" pos:column="91">pFrame</name></decl></param>)</parameter_list> <block pos:line="708" pos:column="99">{
            <return pos:line="709" pos:column="13">return <expr><name><name pos:line="709" pos:column="20">VSConstants</name><op:operator pos:line="709" pos:column="31">.</op:operator><name pos:line="709" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="712" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="713" pos:column="9">/// Called before releasing the last lock of the specified type on the specified document in</comment>
        <comment type="line" pos:line="714" pos:column="9">/// the Running Document Table (RDT).</comment>
        <comment type="line" pos:line="715" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="716" pos:column="9">/// &lt;param name="cookie"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="717" pos:column="9">/// &lt;param name="lockType"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="718" pos:column="9">/// &lt;param name="readLocksLeft"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="719" pos:column="9">/// &lt;param name="editLocksLeft"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="720" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="721" pos:column="9">public</specifier> <name pos:line="721" pos:column="16">int</name></type> <name pos:line="721" pos:column="20">OnBeforeLastDocumentUnlock</name><parameter_list pos:line="721" pos:column="46">(<param><decl><type><name pos:line="721" pos:column="47">uint</name></type> <name pos:line="721" pos:column="52">cookie</name></decl></param>, <param><decl><type><name pos:line="721" pos:column="60">uint</name></type> <name pos:line="721" pos:column="65">lockType</name></decl></param>, <param><decl><type><name pos:line="721" pos:column="75">uint</name></type> <name pos:line="721" pos:column="80">readLocksLeft</name></decl></param>, <param><decl><type><name pos:line="721" pos:column="95">uint</name></type> <name pos:line="721" pos:column="100">editLocksLeft</name></decl></param>)</parameter_list> <block pos:line="721" pos:column="115">{
            <return pos:line="722" pos:column="13">return <expr><name><name pos:line="722" pos:column="20">VSConstants</name><op:operator pos:line="722" pos:column="31">.</op:operator><name pos:line="722" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <cpp:endregion pos:line="725" pos:column="9">#<cpp:directive pos:line="725" pos:column="10">endregion</cpp:directive> IVsRunningDocTableEvents</cpp:endregion>

        <cpp:region pos:line="727" pos:column="9">#<cpp:directive pos:line="727" pos:column="10">region</cpp:directive> IVsSolutionEvents</cpp:region>

        <comment type="line" pos:line="729" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="730" pos:column="9">/// Handle project addition/deletion cases. The way these parameters work is:</comment>
        <comment type="line" pos:line="731" pos:column="9">/// pHierarchy: Pointer to the IVsHierarchy interface of the project being loaded or closed.</comment>
        <comment type="line" pos:line="732" pos:column="9">/// fAddedRemoved: For addition, true if the project is added to the solution after the</comment>
        <comment type="line" pos:line="733" pos:column="9">///                solution is opened, false if the project is added to the solution while</comment>
        <comment type="line" pos:line="734" pos:column="9">///                the solution is being opened. For deletion, true if the project was</comment>
        <comment type="line" pos:line="735" pos:column="9">///                removed from the solution before the solution was closed, false if the</comment>
        <comment type="line" pos:line="736" pos:column="9">///                project was removed from the solution while the solution was being</comment>
        <comment type="line" pos:line="737" pos:column="9">///                closed.</comment>
        <comment type="line" pos:line="738" pos:column="9">/// type: FileEventType.FileAdded - project addition, FileEventType.FileDeleted - project</comment>
        <comment type="line" pos:line="739" pos:column="9">///       deletion.</comment>
        <comment type="line" pos:line="740" pos:column="9">/// TODO: may process files in parallel</comment>
        <comment type="line" pos:line="741" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="742" pos:column="9">/// &lt;param name="pHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="743" pos:column="9">/// &lt;param name="fAddedRemoved"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="744" pos:column="9">/// &lt;param name="type"&gt;&lt;/param&gt;</comment>
        <function><type><specifier pos:line="745" pos:column="9">public</specifier> <name pos:line="745" pos:column="16">void</name></type> <name pos:line="745" pos:column="21">NotifyProjectAddRemove</name><parameter_list pos:line="745" pos:column="43">(<param><decl><type><name pos:line="745" pos:column="44">IVsHierarchy</name></type> <name pos:line="745" pos:column="57">pHierarchy</name></decl></param>, <param><decl><type><name pos:line="745" pos:column="69">int</name></type> <name pos:line="745" pos:column="73">fAddedRemoved</name></decl></param>, <param><decl><type><name pos:line="745" pos:column="88">FileEventType</name></type> <name pos:line="745" pos:column="102">type</name></decl></param>)</parameter_list> <block pos:line="745" pos:column="108">{
            <decl_stmt><decl><type><name><name pos:line="746" pos:column="13">List</name><argument_list pos:line="746" pos:column="17">&lt;<argument><name pos:line="746" pos:column="18">string</name></argument>&gt;</argument_list></name></type> <name pos:line="746" pos:column="26">fileList</name> <init pos:line="746" pos:column="35">= <expr><op:operator pos:line="746" pos:column="37">new</op:operator> <call><name><name pos:line="746" pos:column="41">List</name><argument_list pos:line="746" pos:column="45">&lt;<argument><name pos:line="746" pos:column="46">string</name></argument>&gt;</argument_list></name><argument_list pos:line="746" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="747" pos:column="13">string</name></type> <name pos:line="747" pos:column="20">projectName</name></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="748" pos:column="13">pHierarchy</name><op:operator pos:line="748" pos:column="23">.</op:operator><name pos:line="748" pos:column="24">GetCanonicalName</name></name><argument_list pos:line="748" pos:column="40">(<argument><expr><name><name pos:line="748" pos:column="41">VSConstants</name><op:operator pos:line="748" pos:column="52">.</op:operator><name pos:line="748" pos:column="53">VSITEMID_ROOT</name></name></expr></argument>, <argument><expr pos:line="748" pos:column="68">out <name pos:line="748" pos:column="72">projectName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="749" pos:column="13">//SrcMLFileLogger.DefaultLogger.Info("Project Name: [" + projectName + "]");</comment>

            <comment type="line" pos:line="751" pos:column="13">// Find out this project in the solution tree</comment>
            <decl_stmt><decl><type><name pos:line="752" pos:column="13">var</name></type> <name pos:line="752" pos:column="17">allProjects</name> <init pos:line="752" pos:column="29">= <expr><call><name><name pos:line="752" pos:column="31">OpenSolution</name><op:operator pos:line="752" pos:column="43">.</op:operator><name pos:line="752" pos:column="44">getProjects</name></name><argument_list pos:line="752" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="753" pos:column="13">var</name></type> <name pos:line="753" pos:column="17">enumerator</name> <init pos:line="753" pos:column="28">= <expr><call><name><name pos:line="753" pos:column="30">allProjects</name><op:operator pos:line="753" pos:column="41">.</op:operator><name pos:line="753" pos:column="42">GetEnumerator</name></name><argument_list pos:line="753" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <while pos:line="754" pos:column="13">while<condition pos:line="754" pos:column="18">(<expr><call><name><name pos:line="754" pos:column="19">enumerator</name><op:operator pos:line="754" pos:column="29">.</op:operator><name pos:line="754" pos:column="30">MoveNext</name></name><argument_list pos:line="754" pos:column="38">()</argument_list></call></expr>)</condition> <block pos:line="754" pos:column="42">{
                <decl_stmt><decl><type><name pos:line="755" pos:column="17">Project</name></type> <name pos:line="755" pos:column="25">project</name> <init pos:line="755" pos:column="33">= <expr><name><name pos:line="755" pos:column="35">enumerator</name><op:operator pos:line="755" pos:column="45">.</op:operator><name pos:line="755" pos:column="46">Current</name></name> <op:operator pos:line="755" pos:column="54">as</op:operator> <name pos:line="755" pos:column="57">Project</name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="756" pos:column="17">string</name></type> <name pos:line="756" pos:column="24">fullName</name> <init pos:line="756" pos:column="33">= <expr><name pos:line="756" pos:column="35">null</name></expr></init></decl>;</decl_stmt>
                <try pos:line="757" pos:column="17">try <block pos:line="757" pos:column="21">{
                    <comment type="line" pos:line="758" pos:column="21">//SrcMLFileLogger.DefaultLogger.Info("FileName: [" + project.FileName + "]");</comment>
                    <expr_stmt><expr><name pos:line="759" pos:column="21">fullName</name> <op:operator pos:line="759" pos:column="30">=</op:operator> <name><name pos:line="759" pos:column="32">project</name><op:operator pos:line="759" pos:column="39">.</op:operator><name pos:line="759" pos:column="40">FileName</name></name></expr>;</expr_stmt>
                }</block> <catch pos:line="760" pos:column="19">catch<parameter_list pos:line="760" pos:column="24">(<param><decl><type><name pos:line="760" pos:column="25">Exception</name></type> <name pos:line="760" pos:column="35">e</name></decl></param>)</parameter_list> <block pos:line="760" pos:column="38">{
                    <comment type="line" pos:line="761" pos:column="21">// Ignore unloaded project. It would cause a Not Implemented Exception for an</comment>
                    <comment type="line" pos:line="762" pos:column="21">// unloaded project.</comment>
                    <comment type="line" pos:line="763" pos:column="21">//SrcMLFileLogger.DefaultLogger.Error(SrcMLExceptionFormatter.CreateMessage(e, "Exception in SolutionMonitor.NotifyProjectAddRemove() - "));</comment>
                    <continue pos:line="764" pos:column="21">continue;</continue>
                }</block></catch></try>
                <if pos:line="766" pos:column="17">if<condition pos:line="766" pos:column="19">(<expr><name pos:line="766" pos:column="20">fullName</name> <op:operator pos:line="766" pos:column="29">!=</op:operator> <name pos:line="766" pos:column="32">null</name> <op:operator pos:line="766" pos:column="37">&amp;&amp;</op:operator> <op:operator pos:line="766" pos:column="40">(</op:operator><call><name><name pos:line="766" pos:column="41">fullName</name><op:operator pos:line="766" pos:column="49">.</op:operator><name pos:line="766" pos:column="50">Equals</name></name><argument_list pos:line="766" pos:column="56">(<argument><expr><name pos:line="766" pos:column="57">projectName</name></expr></argument>)</argument_list></call> <op:operator pos:line="766" pos:column="70">||</op:operator> <call><name><name pos:line="766" pos:column="73">fullName</name><op:operator pos:line="766" pos:column="81">.</op:operator><name pos:line="766" pos:column="82">ToLower</name></name><argument_list pos:line="766" pos:column="89">()</argument_list></call><op:operator pos:line="766" pos:column="91">.</op:operator><call><name pos:line="766" pos:column="92">Contains</name><argument_list pos:line="766" pos:column="100">(<argument><expr><call><name><name pos:line="766" pos:column="101">projectName</name><op:operator pos:line="766" pos:column="112">.</op:operator><name pos:line="766" pos:column="113">ToLower</name></name><argument_list pos:line="766" pos:column="120">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="766" pos:column="123">)</op:operator></expr>)</condition><then pos:line="766" pos:column="125"> <block pos:line="766" pos:column="126">{
                    <expr_stmt><expr><call><name><name pos:line="767" pos:column="21">SrcMLFileLogger</name><op:operator pos:line="767" pos:column="36">.</op:operator><name pos:line="767" pos:column="37">DefaultLogger</name><op:operator pos:line="767" pos:column="50">.</op:operator><name pos:line="767" pos:column="51">Info</name></name><argument_list pos:line="767" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="767" pos:column="56">"Project: ["</lit:literal> <op:operator pos:line="767" pos:column="69">+</op:operator> <name pos:line="767" pos:column="71">projectName</name> <op:operator pos:line="767" pos:column="83">+</op:operator> <lit:literal type="string" pos:line="767" pos:column="85">"]"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="768" pos:column="21">ProcessProject</name><argument_list pos:line="768" pos:column="35">(<argument><expr><name pos:line="768" pos:column="36">project</name></expr></argument>, <argument><expr><name pos:line="768" pos:column="45">null</name></expr></argument>, <argument><expr><name pos:line="768" pos:column="51">fileList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <break pos:line="769" pos:column="21">break;</break>
                }</block></then></if>
            }</block></while>

            <comment type="line" pos:line="773" pos:column="13">// Generate or delete srcML files for the source files in this project</comment>
            <try pos:line="774" pos:column="13">try <block pos:line="774" pos:column="17">{
                <foreach pos:line="775" pos:column="17">foreach(<init><decl><type><name pos:line="775" pos:column="25">var</name></type> <name pos:line="775" pos:column="29">filePath</name> <range pos:line="775" pos:column="38">in <expr><name pos:line="775" pos:column="41">fileList</name></expr></range></decl></init>) <block pos:line="775" pos:column="51">{
                    <if pos:line="776" pos:column="21">if<condition pos:line="776" pos:column="23">(<expr><call><name><name pos:line="776" pos:column="24">FileEventType</name><op:operator pos:line="776" pos:column="37">.</op:operator><name pos:line="776" pos:column="38">FileAdded</name><op:operator pos:line="776" pos:column="47">.</op:operator><name pos:line="776" pos:column="48">Equals</name></name><argument_list pos:line="776" pos:column="54">(<argument><expr><name pos:line="776" pos:column="55">type</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="776" pos:column="61"> <block pos:line="776" pos:column="62">{
                        <comment type="line" pos:line="777" pos:column="25">//SrcMLFileLogger.DefaultLogger.Info("&gt;&gt;&gt; AddFile(" + filePath + ")");</comment>
                        <expr_stmt><expr><call><name pos:line="778" pos:column="25">AddFile</name><argument_list pos:line="778" pos:column="32">(<argument><expr><name pos:line="778" pos:column="33">filePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="779" pos:column="23">else <if pos:line="779" pos:column="28">if<condition pos:line="779" pos:column="30">(<expr><call><name><name pos:line="779" pos:column="31">FileEventType</name><op:operator pos:line="779" pos:column="44">.</op:operator><name pos:line="779" pos:column="45">FileDeleted</name><op:operator pos:line="779" pos:column="56">.</op:operator><name pos:line="779" pos:column="57">Equals</name></name><argument_list pos:line="779" pos:column="63">(<argument><expr><name pos:line="779" pos:column="64">type</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="779" pos:column="70"> <block pos:line="779" pos:column="71">{
                        <comment type="line" pos:line="780" pos:column="25">//SrcMLFileLogger.DefaultLogger.Info("&gt;&gt;&gt; DeleteFile(" + filePath + ")");</comment>
                        <expr_stmt><expr><call><name pos:line="781" pos:column="25">DeleteFile</name><argument_list pos:line="781" pos:column="35">(<argument><expr><name pos:line="781" pos:column="36">filePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if></else></if>
                }</block></foreach>
            }</block> <catch pos:line="784" pos:column="15">catch<parameter_list pos:line="784" pos:column="20">(<param><decl><type><name pos:line="784" pos:column="21">Exception</name></type> <name pos:line="784" pos:column="31">e</name></decl></param>)</parameter_list> <block pos:line="784" pos:column="34">{
                <expr_stmt><expr><call><name><name pos:line="785" pos:column="17">SrcMLFileLogger</name><op:operator pos:line="785" pos:column="32">.</op:operator><name pos:line="785" pos:column="33">DefaultLogger</name><op:operator pos:line="785" pos:column="46">.</op:operator><name pos:line="785" pos:column="47">Error</name></name><argument_list pos:line="785" pos:column="52">(<argument><expr><call><name><name pos:line="785" pos:column="53">SrcMLExceptionFormatter</name><op:operator pos:line="785" pos:column="76">.</op:operator><name pos:line="785" pos:column="77">CreateMessage</name></name><argument_list pos:line="785" pos:column="90">(<argument><expr><name pos:line="785" pos:column="91">e</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="785" pos:column="94">"Exception when batch adding or deleting srcML files for a specified project."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <comment type="line" pos:line="789" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="790" pos:column="9">/// Notifies listening clients that a solution has been closed.</comment>
        <comment type="line" pos:line="791" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="792" pos:column="9">/// &lt;param name="pUnkReserved"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="793" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="794" pos:column="9">public</specifier> <name pos:line="794" pos:column="16">int</name></type> <name pos:line="794" pos:column="20">OnAfterCloseSolution</name><parameter_list pos:line="794" pos:column="40">(<param><decl><type><name pos:line="794" pos:column="41">object</name></type> <name pos:line="794" pos:column="48">pUnkReserved</name></decl></param>)</parameter_list> <block pos:line="794" pos:column="62">{
            <comment type="line" pos:line="795" pos:column="13">//SrcMLFileLogger.DefaultLogger.Info("==&gt; SolutionMonitor: Triggered IVsSolutionEvents.OnAfterCloseSolution()");</comment>
            <return pos:line="796" pos:column="13">return <expr><name><name pos:line="796" pos:column="20">VSConstants</name><op:operator pos:line="796" pos:column="31">.</op:operator><name pos:line="796" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="799" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="800" pos:column="9">/// Notifies listening clients that the project has been loaded. Only being triggered when</comment>
        <comment type="line" pos:line="801" pos:column="9">/// reloading a project.</comment>
        <comment type="line" pos:line="802" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="803" pos:column="9">/// &lt;param name="pStubHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="804" pos:column="9">/// &lt;param name="pRealHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="805" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="806" pos:column="9">public</specifier> <name pos:line="806" pos:column="16">int</name></type> <name pos:line="806" pos:column="20">OnAfterLoadProject</name><parameter_list pos:line="806" pos:column="38">(<param><decl><type><name pos:line="806" pos:column="39">IVsHierarchy</name></type> <name pos:line="806" pos:column="52">pStubHierarchy</name></decl></param>, <param><decl><type><name pos:line="806" pos:column="68">IVsHierarchy</name></type> <name pos:line="806" pos:column="81">pRealHierarchy</name></decl></param>)</parameter_list> <block pos:line="806" pos:column="97">{
            <comment type="line" pos:line="807" pos:column="13">//SrcMLFileLogger.DefaultLogger.Info("==&gt; SolutionMonitor: Triggered IVsSolutionEvents.OnAfterLoadProject()");</comment>
            <return pos:line="808" pos:column="13">return <expr><name><name pos:line="808" pos:column="20">VSConstants</name><op:operator pos:line="808" pos:column="31">.</op:operator><name pos:line="808" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="811" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="812" pos:column="9">/// Notifies listening clients that the project has been opened.</comment>
        <comment type="line" pos:line="813" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="814" pos:column="9">/// &lt;param name="pHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="815" pos:column="9">/// &lt;param name="fAdded"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="816" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="817" pos:column="9">public</specifier> <name pos:line="817" pos:column="16">int</name></type> <name pos:line="817" pos:column="20">OnAfterOpenProject</name><parameter_list pos:line="817" pos:column="38">(<param><decl><type><name pos:line="817" pos:column="39">IVsHierarchy</name></type> <name pos:line="817" pos:column="52">pHierarchy</name></decl></param>, <param><decl><type><name pos:line="817" pos:column="64">int</name></type> <name pos:line="817" pos:column="68">fAdded</name></decl></param>)</parameter_list> <block pos:line="817" pos:column="76">{
            <expr_stmt><expr><call><name><name pos:line="818" pos:column="13">SrcMLFileLogger</name><op:operator pos:line="818" pos:column="28">.</op:operator><name pos:line="818" pos:column="29">DefaultLogger</name><op:operator pos:line="818" pos:column="42">.</op:operator><name pos:line="818" pos:column="43">Info</name></name><argument_list pos:line="818" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="818" pos:column="48">"====&gt; SolutionMonitor: Triggered IVsSolutionEvents.OnAfterOpenProject() ["</lit:literal> <op:operator pos:line="818" pos:column="124">+</op:operator> <name pos:line="818" pos:column="126">fAdded</name> <op:operator pos:line="818" pos:column="133">+</op:operator> <lit:literal type="string" pos:line="818" pos:column="135">"]"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="819" pos:column="13">NotifyProjectAddRemove</name><argument_list pos:line="819" pos:column="35">(<argument><expr><name pos:line="819" pos:column="36">pHierarchy</name></expr></argument>, <argument><expr><name pos:line="819" pos:column="48">fAdded</name></expr></argument>, <argument><expr><name><name pos:line="819" pos:column="56">FileEventType</name><op:operator pos:line="819" pos:column="69">.</op:operator><name pos:line="819" pos:column="70">FileAdded</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="820" pos:column="13">return <expr><name><name pos:line="820" pos:column="20">VSConstants</name><op:operator pos:line="820" pos:column="31">.</op:operator><name pos:line="820" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="823" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="824" pos:column="9">/// Notifies listening clients that the solution has been opened.</comment>
        <comment type="line" pos:line="825" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="826" pos:column="9">/// &lt;param name="pUnkReserved"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="827" pos:column="9">/// &lt;param name="fNewSolution"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="828" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="829" pos:column="9">public</specifier> <name pos:line="829" pos:column="16">int</name></type> <name pos:line="829" pos:column="20">OnAfterOpenSolution</name><parameter_list pos:line="829" pos:column="39">(<param><decl><type><name pos:line="829" pos:column="40">object</name></type> <name pos:line="829" pos:column="47">pUnkReserved</name></decl></param>, <param><decl><type><name pos:line="829" pos:column="61">int</name></type> <name pos:line="829" pos:column="65">fNewSolution</name></decl></param>)</parameter_list> <block pos:line="829" pos:column="79">{
            <comment type="line" pos:line="830" pos:column="13">//SrcMLFileLogger.DefaultLogger.Info("==&gt; SolutionMonitor: Triggered IVsSolutionEvents.OnAfterOpenSolution()");</comment>
            <return pos:line="831" pos:column="13">return <expr><name><name pos:line="831" pos:column="20">VSConstants</name><op:operator pos:line="831" pos:column="31">.</op:operator><name pos:line="831" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="834" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="835" pos:column="9">/// Notifies listening clients that the project is about to be closed.</comment>
        <comment type="line" pos:line="836" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="837" pos:column="9">/// &lt;param name="pHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="838" pos:column="9">/// &lt;param name="fRemoved"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="839" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="840" pos:column="9">public</specifier> <name pos:line="840" pos:column="16">int</name></type> <name pos:line="840" pos:column="20">OnBeforeCloseProject</name><parameter_list pos:line="840" pos:column="40">(<param><decl><type><name pos:line="840" pos:column="41">IVsHierarchy</name></type> <name pos:line="840" pos:column="54">pHierarchy</name></decl></param>, <param><decl><type><name pos:line="840" pos:column="66">int</name></type> <name pos:line="840" pos:column="70">fRemoved</name></decl></param>)</parameter_list> <block pos:line="840" pos:column="80">{
            <expr_stmt><expr><call><name><name pos:line="841" pos:column="13">SrcMLFileLogger</name><op:operator pos:line="841" pos:column="28">.</op:operator><name pos:line="841" pos:column="29">DefaultLogger</name><op:operator pos:line="841" pos:column="42">.</op:operator><name pos:line="841" pos:column="43">Info</name></name><argument_list pos:line="841" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="841" pos:column="48">"====&gt; SolutionMonitor: Triggered IVsSolutionEvents.OnBeforeCloseProject() ["</lit:literal> <op:operator pos:line="841" pos:column="126">+</op:operator> <name pos:line="841" pos:column="128">fRemoved</name> <op:operator pos:line="841" pos:column="137">+</op:operator> <lit:literal type="string" pos:line="841" pos:column="139">"]"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="842" pos:column="13">// If it is about to stop monitoring, skip this call and do not delete any srcML files</comment>
            <if pos:line="843" pos:column="13">if<condition pos:line="843" pos:column="15">(<expr><op:operator pos:line="843" pos:column="16">!</op:operator><name pos:line="843" pos:column="17">isAboutToStopMonitoring</name></expr>)</condition><then pos:line="843" pos:column="41"> <block pos:line="843" pos:column="42">{
                <expr_stmt><expr><call><name pos:line="844" pos:column="17">NotifyProjectAddRemove</name><argument_list pos:line="844" pos:column="39">(<argument><expr><name pos:line="844" pos:column="40">pHierarchy</name></expr></argument>, <argument><expr><name pos:line="844" pos:column="52">fRemoved</name></expr></argument>, <argument><expr><name><name pos:line="844" pos:column="62">FileEventType</name><op:operator pos:line="844" pos:column="75">.</op:operator><name pos:line="844" pos:column="76">FileDeleted</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <return pos:line="846" pos:column="13">return <expr><name><name pos:line="846" pos:column="20">VSConstants</name><op:operator pos:line="846" pos:column="31">.</op:operator><name pos:line="846" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="849" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="850" pos:column="9">/// Notifies listening clients that the solution is about to be closed.</comment>
        <comment type="line" pos:line="851" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="852" pos:column="9">/// &lt;param name="pUnkReserved"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="853" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="854" pos:column="9">public</specifier> <name pos:line="854" pos:column="16">int</name></type> <name pos:line="854" pos:column="20">OnBeforeCloseSolution</name><parameter_list pos:line="854" pos:column="41">(<param><decl><type><name pos:line="854" pos:column="42">object</name></type> <name pos:line="854" pos:column="49">pUnkReserved</name></decl></param>)</parameter_list> <block pos:line="854" pos:column="63">{
            <comment type="line" pos:line="855" pos:column="13">//SrcMLFileLogger.DefaultLogger.Info("=&gt; SolutionMonitor: Triggered IVsSolutionEvents.OnBeforeCloseSolution()");</comment>
            <return pos:line="856" pos:column="13">return <expr><name><name pos:line="856" pos:column="20">VSConstants</name><op:operator pos:line="856" pos:column="31">.</op:operator><name pos:line="856" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="859" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="860" pos:column="9">/// Notifies listening clients that the project is about to be unloaded.</comment>
        <comment type="line" pos:line="861" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="862" pos:column="9">/// &lt;param name="pRealHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="863" pos:column="9">/// &lt;param name="pStubHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="864" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="865" pos:column="9">public</specifier> <name pos:line="865" pos:column="16">int</name></type> <name pos:line="865" pos:column="20">OnBeforeUnloadProject</name><parameter_list pos:line="865" pos:column="41">(<param><decl><type><name pos:line="865" pos:column="42">IVsHierarchy</name></type> <name pos:line="865" pos:column="55">pRealHierarchy</name></decl></param>, <param><decl><type><name pos:line="865" pos:column="71">IVsHierarchy</name></type> <name pos:line="865" pos:column="84">pStubHierarchy</name></decl></param>)</parameter_list> <block pos:line="865" pos:column="100">{
            <comment type="line" pos:line="866" pos:column="13">//SrcMLFileLogger.DefaultLogger.Info("==&gt; SolutionMonitor: Triggered IVsSolutionEvents.OnBeforeUnloadProject()");</comment>
            <return pos:line="867" pos:column="13">return <expr><name><name pos:line="867" pos:column="20">VSConstants</name><op:operator pos:line="867" pos:column="31">.</op:operator><name pos:line="867" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="870" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="871" pos:column="9">/// Queries listening clients as to whether the project can be closed.</comment>
        <comment type="line" pos:line="872" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="873" pos:column="9">/// &lt;param name="pHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="874" pos:column="9">/// &lt;param name="fRemoving"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="875" pos:column="9">/// &lt;param name="pfCancel"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="876" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="877" pos:column="9">public</specifier> <name pos:line="877" pos:column="16">int</name></type> <name pos:line="877" pos:column="20">OnQueryCloseProject</name><parameter_list pos:line="877" pos:column="39">(<param><decl><type><name pos:line="877" pos:column="40">IVsHierarchy</name></type> <name pos:line="877" pos:column="53">pHierarchy</name></decl></param>, <param><decl><type><name pos:line="877" pos:column="65">int</name></type> <name pos:line="877" pos:column="69">fRemoving</name></decl></param>, <param><decl><type><specifier pos:line="877" pos:column="80">ref</specifier> <name pos:line="877" pos:column="84">int</name></type> <name pos:line="877" pos:column="88">pfCancel</name></decl></param>)</parameter_list> <block pos:line="877" pos:column="98">{
            <comment type="line" pos:line="878" pos:column="13">//SrcMLFileLogger.DefaultLogger.Info("==&gt; SolutionMonitor: Triggered IVsSolutionEvents.OnQueryCloseProject()");</comment>
            <return pos:line="879" pos:column="13">return <expr><name><name pos:line="879" pos:column="20">VSConstants</name><op:operator pos:line="879" pos:column="31">.</op:operator><name pos:line="879" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="882" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="883" pos:column="9">/// Queries listening clients as to whether the solution can be closed.</comment>
        <comment type="line" pos:line="884" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="885" pos:column="9">/// &lt;param name="pUnkReserved"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="886" pos:column="9">/// &lt;param name="pfCancel"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="887" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="888" pos:column="9">public</specifier> <name pos:line="888" pos:column="16">int</name></type> <name pos:line="888" pos:column="20">OnQueryCloseSolution</name><parameter_list pos:line="888" pos:column="40">(<param><decl><type><name pos:line="888" pos:column="41">object</name></type> <name pos:line="888" pos:column="48">pUnkReserved</name></decl></param>, <param><decl><type><specifier pos:line="888" pos:column="62">ref</specifier> <name pos:line="888" pos:column="66">int</name></type> <name pos:line="888" pos:column="70">pfCancel</name></decl></param>)</parameter_list> <block pos:line="888" pos:column="80">{
            <comment type="line" pos:line="889" pos:column="13">//SrcMLFileLogger.DefaultLogger.Info("==&gt; SolutionMonitor: Triggered IVsSolutionEvents.OnQueryCloseSolution()");</comment>
            <return pos:line="890" pos:column="13">return <expr><name><name pos:line="890" pos:column="20">VSConstants</name><op:operator pos:line="890" pos:column="31">.</op:operator><name pos:line="890" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="893" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="894" pos:column="9">/// Queries listening clients as to whether the project can be unloaded.</comment>
        <comment type="line" pos:line="895" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="896" pos:column="9">/// &lt;param name="pRealHierarchy"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="897" pos:column="9">/// &lt;param name="pfCancel"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="898" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="899" pos:column="9">public</specifier> <name pos:line="899" pos:column="16">int</name></type> <name pos:line="899" pos:column="20">OnQueryUnloadProject</name><parameter_list pos:line="899" pos:column="40">(<param><decl><type><name pos:line="899" pos:column="41">IVsHierarchy</name></type> <name pos:line="899" pos:column="54">pRealHierarchy</name></decl></param>, <param><decl><type><specifier pos:line="899" pos:column="70">ref</specifier> <name pos:line="899" pos:column="74">int</name></type> <name pos:line="899" pos:column="78">pfCancel</name></decl></param>)</parameter_list> <block pos:line="899" pos:column="88">{
            <comment type="line" pos:line="900" pos:column="13">//SrcMLFileLogger.DefaultLogger.Info("==&gt; SolutionMonitor: Triggered IVsSolutionEvents.OnQueryUnloadProject()");</comment>
            <return pos:line="901" pos:column="13">return <expr><name><name pos:line="901" pos:column="20">VSConstants</name><op:operator pos:line="901" pos:column="31">.</op:operator><name pos:line="901" pos:column="32">S_OK</name></name></expr>;</return>
        }</block></function>

        <cpp:endregion pos:line="904" pos:column="9">#<cpp:directive pos:line="904" pos:column="10">endregion</cpp:directive> IVsSolutionEvents</cpp:endregion>
    }</block></class>
}</block></namespace></unit>
