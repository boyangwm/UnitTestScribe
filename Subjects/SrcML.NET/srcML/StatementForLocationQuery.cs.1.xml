<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\ABB.SrcML.Data\Queries\StatementForLocationQuery.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2014 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *  Vinay Augustine (ABB Group) - initial API, implementation, &amp; documentation
 *****************************************************************************/</comment>

<using pos:line="12" pos:column="1">using <name pos:line="12" pos:column="7">System</name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Collections</name><op:operator pos:line="13" pos:column="25">.</op:operator><name pos:line="13" pos:column="26">Generic</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Linq</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">Text</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Threading</name><op:operator pos:line="16" pos:column="23">.</op:operator><name pos:line="16" pos:column="24">Tasks</name></name>;</using>

<namespace pos:line="18" pos:column="1">namespace <name><name pos:line="18" pos:column="11">ABB</name><op:operator pos:line="18" pos:column="14">.</op:operator><name pos:line="18" pos:column="15">SrcML</name><op:operator pos:line="18" pos:column="20">.</op:operator><name pos:line="18" pos:column="21">Data</name><op:operator pos:line="18" pos:column="25">.</op:operator><name pos:line="18" pos:column="26">Queries</name></name> <block pos:line="18" pos:column="34">{
    <comment type="line" pos:line="19" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="20" pos:column="5">/// This query object finds the deepest descendant of a statement that contains a given location</comment>
    <comment type="line" pos:line="21" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="22" pos:column="5">public</specifier> class <name pos:line="22" pos:column="18">StatementForLocationQuery</name> <super pos:line="22" pos:column="44">: <name><name pos:line="22" pos:column="46">AbstractQuery</name><argument_list pos:line="22" pos:column="59">&lt;<argument><name pos:line="22" pos:column="60">SourceLocation</name></argument>, <argument><name pos:line="22" pos:column="76">Statement</name></argument>&gt;</argument_list></name></super> <block pos:line="22" pos:column="87">{
        <comment type="line" pos:line="23" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="24" pos:column="9">/// Create a new query object</comment>
        <comment type="line" pos:line="25" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="26" pos:column="9">/// &lt;param name="workingSet"&gt;The working set to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="27" pos:column="9">/// &lt;param name="lockTimeout"&gt;The time in milliseconds to wait for the read lock&lt;/param&gt;</comment>
        <constructor><specifier pos:line="28" pos:column="9">public</specifier> <name pos:line="28" pos:column="16">StatementForLocationQuery</name><parameter_list pos:line="28" pos:column="41">(<param><decl><type><name pos:line="28" pos:column="42">AbstractWorkingSet</name></type> <name pos:line="28" pos:column="61">workingSet</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="73">int</name></type> <name pos:line="28" pos:column="77">lockTimeout</name></decl></param>)</parameter_list> 
            <member_list pos:line="29" pos:column="13">: <call><name pos:line="29" pos:column="15">base</name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="29" pos:column="32">lockTimeout</name></expr></argument>)</argument_list></call> </member_list><block pos:line="29" pos:column="45">{}</block></constructor>

        <comment type="line" pos:line="31" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="32" pos:column="9">/// Create a new query object</comment>
        <comment type="line" pos:line="33" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="34" pos:column="9">/// &lt;param name="workingSet"&gt;The working set to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="35" pos:column="9">/// &lt;param name="lockTimeout"&gt;The time in milliseconds to wait for the read lock&lt;/param&gt;</comment>
        <comment type="line" pos:line="36" pos:column="9">/// &lt;param name="factory"&gt;The task factory for asynchronous queries&lt;/param&gt;</comment>
        <constructor><specifier pos:line="37" pos:column="9">public</specifier> <name pos:line="37" pos:column="16">StatementForLocationQuery</name><parameter_list pos:line="37" pos:column="41">(<param><decl><type><name pos:line="37" pos:column="42">AbstractWorkingSet</name></type> <name pos:line="37" pos:column="61">workingSet</name></decl></param>, <param><decl><type><name pos:line="37" pos:column="73">int</name></type> <name pos:line="37" pos:column="77">lockTimeout</name></decl></param>, <param><decl><type><name pos:line="37" pos:column="90">TaskFactory</name></type> <name pos:line="37" pos:column="102">factory</name></decl></param>)</parameter_list>
            <member_list pos:line="38" pos:column="13">: <call><name pos:line="38" pos:column="15">base</name><argument_list pos:line="38" pos:column="19">(<argument><expr><name pos:line="38" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="38" pos:column="32">lockTimeout</name></expr></argument>, <argument><expr><name pos:line="38" pos:column="45">factory</name></expr></argument>)</argument_list></call> </member_list><block pos:line="38" pos:column="54">{ }</block></constructor>

        <comment type="line" pos:line="40" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="41" pos:column="9">/// Gets the last descendant of &lt;paramref name="root"/&gt; that contains the given &lt;paramref name="parameter"&gt;location&lt;/paramref&gt;</comment>
        <comment type="line" pos:line="42" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="43" pos:column="9">/// &lt;param name="root"&gt;The statement to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="44" pos:column="9">/// &lt;param name="parameter"&gt;The location to find&lt;/param&gt;</comment>
        <comment type="line" pos:line="45" pos:column="9">/// &lt;returns&gt;The furthest descendant of &lt;paramref name="root"/&gt; that contains &lt;paramref name="parameter"/&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="46" pos:column="9">public</specifier> <specifier pos:line="46" pos:column="16">override</specifier> <name pos:line="46" pos:column="25">Statement</name></type> <name pos:line="46" pos:column="35">Execute</name><parameter_list pos:line="46" pos:column="42">(<param><decl><type><name pos:line="46" pos:column="43">Statement</name></type> <name pos:line="46" pos:column="53">root</name></decl></param>, <param><decl><type><name pos:line="46" pos:column="59">SourceLocation</name></type> <name pos:line="46" pos:column="74">parameter</name></decl></param>)</parameter_list> <block pos:line="46" pos:column="85">{
            <return pos:line="47" pos:column="13">return <expr><call><name pos:line="47" pos:column="20">Query</name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">root</name></expr></argument>, <argument><expr><name pos:line="47" pos:column="32">parameter</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="50" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="51" pos:column="9">/// Gets the last descendant of &lt;paramref name="root"/&gt; that contains the given &lt;paramref name="parameter"&gt;location&lt;/paramref&gt;</comment>
        <comment type="line" pos:line="52" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="53" pos:column="9">/// &lt;param name="root"&gt;The statement to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="54" pos:column="9">/// &lt;param name="parameter"&gt;The location to find&lt;/param&gt;</comment>
        <comment type="line" pos:line="55" pos:column="9">/// &lt;returns&gt;The furthest descendant of &lt;paramref name="root"/&gt; that contains &lt;paramref name="parameter"/&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="56" pos:column="9">public</specifier> <specifier pos:line="56" pos:column="16">static</specifier> <name pos:line="56" pos:column="23">Statement</name></type> <name pos:line="56" pos:column="33">Query</name><parameter_list pos:line="56" pos:column="38">(<param><decl><type><name pos:line="56" pos:column="39">Statement</name></type> <name pos:line="56" pos:column="49">root</name></decl></param>, <param><decl><type><name pos:line="56" pos:column="55">SourceLocation</name></type> <name pos:line="56" pos:column="70">parameter</name></decl></param>)</parameter_list> <block pos:line="56" pos:column="81">{
            <return pos:line="57" pos:column="13">return <expr><call><name><name pos:line="57" pos:column="20">root</name><op:operator pos:line="57" pos:column="24">.</op:operator><name pos:line="57" pos:column="25">GetStatementForLocation</name></name><argument_list pos:line="57" pos:column="48">(<argument><expr><name pos:line="57" pos:column="49">parameter</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>

    <comment type="line" pos:line="61" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="62" pos:column="5">/// This query object finds the deepest descendant of a statement that contains a given location and has type &lt;typeparamref name="TStatement"/&gt;</comment>
    <comment type="line" pos:line="63" pos:column="5">/// &lt;/summary&gt;</comment>
    <comment type="line" pos:line="64" pos:column="5">/// &lt;typeparam name="TStatement"&gt;&lt;/typeparam&gt;</comment>
    <class><specifier pos:line="65" pos:column="5">public</specifier> class <name><name pos:line="65" pos:column="18">StatementForLocationQuery</name><argument_list pos:line="65" pos:column="43">&lt;<argument><name pos:line="65" pos:column="44">TStatement</name></argument>&gt;</argument_list></name>
        <super pos:line="66" pos:column="9">: <name><name pos:line="66" pos:column="11">AbstractQuery</name><argument_list pos:line="66" pos:column="24">&lt;<argument><name pos:line="66" pos:column="25">SourceLocation</name></argument>, <argument><name pos:line="66" pos:column="41">TStatement</name></argument>&gt; <where pos:line="66" pos:column="53">where <name pos:line="66" pos:column="59">TStatement</name> : <name pos:line="66" pos:column="72">Statement</name>, new()</where></argument_list></name></super> <block pos:line="66" pos:column="89">{
        <comment type="line" pos:line="67" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="68" pos:column="9">/// Create a new query object</comment>
        <comment type="line" pos:line="69" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="70" pos:column="9">/// &lt;param name="workingSet"&gt;The working set to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="71" pos:column="9">/// &lt;param name="lockTimeout"&gt;The time in milliseconds to wait for the read lock&lt;/param&gt;</comment>
        <constructor><specifier pos:line="72" pos:column="9">public</specifier> <name pos:line="72" pos:column="16">StatementForLocationQuery</name><parameter_list pos:line="72" pos:column="41">(<param><decl><type><name pos:line="72" pos:column="42">AbstractWorkingSet</name></type> <name pos:line="72" pos:column="61">workingSet</name></decl></param>, <param><decl><type><name pos:line="72" pos:column="73">int</name></type> <name pos:line="72" pos:column="77">lockTimeout</name></decl></param>)</parameter_list>
            <member_list pos:line="73" pos:column="13">: <call><name pos:line="73" pos:column="15">base</name><argument_list pos:line="73" pos:column="19">(<argument><expr><name pos:line="73" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="73" pos:column="32">lockTimeout</name></expr></argument>)</argument_list></call> </member_list><block pos:line="73" pos:column="45">{ }</block></constructor>

        <comment type="line" pos:line="75" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="76" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="77" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="78" pos:column="9">/// &lt;param name="workingSet"&gt;The working set to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="79" pos:column="9">/// &lt;param name="lockTimeout"&gt;The time in milliseconds to wait for the read lock&lt;/param&gt;</comment>
        <comment type="line" pos:line="80" pos:column="9">/// &lt;param name="factory"&gt;The task factory for asynchronous queries&lt;/param&gt;</comment>
        <constructor><specifier pos:line="81" pos:column="9">public</specifier> <name pos:line="81" pos:column="16">StatementForLocationQuery</name><parameter_list pos:line="81" pos:column="41">(<param><decl><type><name pos:line="81" pos:column="42">AbstractWorkingSet</name></type> <name pos:line="81" pos:column="61">workingSet</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="73">int</name></type> <name pos:line="81" pos:column="77">lockTimeout</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="90">TaskFactory</name></type> <name pos:line="81" pos:column="102">factory</name></decl></param>)</parameter_list>
            <member_list pos:line="82" pos:column="13">: <call><name pos:line="82" pos:column="15">base</name><argument_list pos:line="82" pos:column="19">(<argument><expr><name pos:line="82" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="82" pos:column="32">lockTimeout</name></expr></argument>, <argument><expr><name pos:line="82" pos:column="45">factory</name></expr></argument>)</argument_list></call></member_list><block pos:line="82" pos:column="53">{ }</block></constructor>

        <comment type="line" pos:line="84" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="85" pos:column="9">/// Gets the last descendant of &lt;paramref name="root"/&gt; that contains the given &lt;paramref name="parameter"&gt;location&lt;/paramref&gt; of type &lt;typeparamref name="TStatement"/&gt;.</comment>
        <comment type="line" pos:line="86" pos:column="9">/// Calls &lt;see cref="Query"/&gt;.</comment>
        <comment type="line" pos:line="87" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="88" pos:column="9">/// &lt;param name="root"&gt;The statement to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="89" pos:column="9">/// &lt;param name="parameter"&gt;The location to find&lt;/param&gt;</comment>
        <comment type="line" pos:line="90" pos:column="9">/// &lt;returns&gt;The furthest descendant of &lt;paramref name="root"/&gt; that contains &lt;paramref name="parameter"/&gt; of type &lt;typeparamref name="TStatement"/&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="91" pos:column="9">public</specifier> <specifier pos:line="91" pos:column="16">override</specifier> <name pos:line="91" pos:column="25">TStatement</name></type> <name pos:line="91" pos:column="36">Execute</name><parameter_list pos:line="91" pos:column="43">(<param><decl><type><name pos:line="91" pos:column="44">Statement</name></type> <name pos:line="91" pos:column="54">root</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="60">SourceLocation</name></type> <name pos:line="91" pos:column="75">parameter</name></decl></param>)</parameter_list> <block pos:line="91" pos:column="86">{
            <return pos:line="92" pos:column="13">return <expr><call><name pos:line="92" pos:column="20">Query</name><argument_list pos:line="92" pos:column="25">(<argument><expr><name pos:line="92" pos:column="26">root</name></expr></argument>, <argument><expr><name pos:line="92" pos:column="32">parameter</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="95" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="96" pos:column="9">/// Gets the last descendant of &lt;paramref name="root"/&gt; that contains the given &lt;paramref name="parameter"&gt;location&lt;/paramref&gt; of type &lt;typeparamref name="TStatement"/&gt;</comment>
        <comment type="line" pos:line="97" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="98" pos:column="9">/// &lt;param name="root"&gt;The statement to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="99" pos:column="9">/// &lt;param name="parameter"&gt;The location to find&lt;/param&gt;</comment>
        <comment type="line" pos:line="100" pos:column="9">/// &lt;returns&gt;The furthest descendant of &lt;paramref name="root"/&gt; that contains &lt;paramref name="parameter"/&gt; of type &lt;typeparamref name="TStatement"/&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="101" pos:column="9">public</specifier> <specifier pos:line="101" pos:column="16">static</specifier> <name pos:line="101" pos:column="23">TStatement</name></type> <name pos:line="101" pos:column="34">Query</name><parameter_list pos:line="101" pos:column="39">(<param><decl><type><name pos:line="101" pos:column="40">Statement</name></type> <name pos:line="101" pos:column="50">root</name></decl></param>, <param><decl><type><name pos:line="101" pos:column="56">SourceLocation</name></type> <name pos:line="101" pos:column="71">parameter</name></decl></param>)</parameter_list> <block pos:line="101" pos:column="82">{
            <if pos:line="102" pos:column="13">if<condition pos:line="102" pos:column="15">(<expr><name pos:line="102" pos:column="16">null</name> <op:operator pos:line="102" pos:column="21">!=</op:operator> <name pos:line="102" pos:column="24">root</name></expr>)</condition><then pos:line="102" pos:column="29"> <block pos:line="102" pos:column="30">{
                <decl_stmt><decl><type><name pos:line="103" pos:column="17">var</name></type> <name pos:line="103" pos:column="21">scope</name> <init pos:line="103" pos:column="27">= <expr><call><name><name pos:line="103" pos:column="29">StatementForLocationQuery</name><op:operator pos:line="103" pos:column="54">.</op:operator><name pos:line="103" pos:column="55">Query</name></name><argument_list pos:line="103" pos:column="60">(<argument><expr><name pos:line="103" pos:column="61">root</name></expr></argument>, <argument><expr><name pos:line="103" pos:column="67">parameter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <return pos:line="104" pos:column="17">return <expr><op:operator pos:line="104" pos:column="24">(</op:operator><name pos:line="104" pos:column="25">null</name> <op:operator pos:line="104" pos:column="30">!=</op:operator> <name pos:line="104" pos:column="33">scope</name> <op:operator pos:line="104" pos:column="39">?</op:operator> <call><name><name pos:line="104" pos:column="41">scope</name><op:operator pos:line="104" pos:column="46">.</op:operator><name><name pos:line="104" pos:column="47">GetAncestorsAndSelf</name><argument_list pos:line="104" pos:column="66">&lt;<argument><name pos:line="104" pos:column="67">TStatement</name></argument>&gt;</argument_list></name></name><argument_list pos:line="104" pos:column="78">()</argument_list></call><op:operator pos:line="104" pos:column="80">.</op:operator><call><name pos:line="104" pos:column="81">FirstOrDefault</name><argument_list pos:line="104" pos:column="95">()</argument_list></call> <op:operator pos:line="104" pos:column="98">:</op:operator> <call><name pos:line="104" pos:column="100">default</name><argument_list pos:line="104" pos:column="107">(<argument><expr><name pos:line="104" pos:column="108">TStatement</name></expr></argument>)</argument_list></call><op:operator pos:line="104" pos:column="119">)</op:operator></expr>;</return>
            }</block></then></if>
            <return pos:line="106" pos:column="13">return <expr><call><name pos:line="106" pos:column="20">default</name><argument_list pos:line="106" pos:column="27">(<argument><expr><name pos:line="106" pos:column="28">TStatement</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
