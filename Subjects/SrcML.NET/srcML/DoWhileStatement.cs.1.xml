<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\ABB.SrcML.Data\DoWhileStatement.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2014 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Patrick Francis (ABB Group) - initial API, implementation, &amp; documentation
 *    Vinay Augustine (ABB Group) - initial API, implementation, &amp; documentation
 *****************************************************************************/</comment>

<using pos:line="13" pos:column="1">using <name pos:line="13" pos:column="7">System</name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Collections</name><op:operator pos:line="14" pos:column="25">.</op:operator><name pos:line="14" pos:column="26">Generic</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">Linq</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Text</name></name>;</using>

<namespace pos:line="18" pos:column="1">namespace <name><name pos:line="18" pos:column="11">ABB</name><op:operator pos:line="18" pos:column="14">.</op:operator><name pos:line="18" pos:column="15">SrcML</name><op:operator pos:line="18" pos:column="20">.</op:operator><name pos:line="18" pos:column="21">Data</name></name> <block pos:line="18" pos:column="26">{
    <comment type="line" pos:line="19" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="20" pos:column="5">/// Represents a do-while loop in a program.</comment>
    <comment type="line" pos:line="21" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="22" pos:column="5">public</specifier> class <name pos:line="22" pos:column="18">DoWhileStatement</name> <super pos:line="22" pos:column="35">: <name pos:line="22" pos:column="37">ConditionBlockStatement</name></super> <block pos:line="22" pos:column="61">{
        <comment type="line" pos:line="23" pos:column="9">/// &lt;summary&gt; The XML name for DoWhileStatement. &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="24" pos:column="9">public</specifier> <specifier pos:line="24" pos:column="16">new</specifier> <specifier pos:line="24" pos:column="20">const</specifier> <name pos:line="24" pos:column="26">string</name></type> <name pos:line="24" pos:column="33">XmlName</name> <init pos:line="24" pos:column="41">= <expr><lit:literal type="string" pos:line="24" pos:column="43">"DoWhile"</lit:literal></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:line="26" pos:column="9">/// &lt;summary&gt; Returns the XML name for this program element. &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="27" pos:column="9">public</specifier> <specifier pos:line="27" pos:column="16">override</specifier> <name pos:line="27" pos:column="25">string</name></type> <name pos:line="27" pos:column="32">GetXmlName</name><parameter_list pos:line="27" pos:column="42">()</parameter_list> <block pos:line="27" pos:column="45">{ <return pos:line="27" pos:column="47">return <expr><name><name pos:line="27" pos:column="54">DoWhileStatement</name><op:operator pos:line="27" pos:column="70">.</op:operator><name pos:line="27" pos:column="71">XmlName</name></name></expr>;</return> }</block></function>

        <comment type="line" pos:line="29" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="30" pos:column="9">/// Returns a string representation of this statement.</comment>
        <comment type="line" pos:line="31" pos:column="9">/// &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="32" pos:column="9">public</specifier> <specifier pos:line="32" pos:column="16">override</specifier> <name pos:line="32" pos:column="25">string</name></type> <name pos:line="32" pos:column="32">ToString</name><parameter_list pos:line="32" pos:column="40">()</parameter_list> <block pos:line="32" pos:column="43">{
            <return pos:line="33" pos:column="13">return <expr><call><name><name pos:line="33" pos:column="20">string</name><op:operator pos:line="33" pos:column="26">.</op:operator><name pos:line="33" pos:column="27">Format</name></name><argument_list pos:line="33" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="33" pos:column="34">"do ... while({0});"</lit:literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="56">Condition</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
