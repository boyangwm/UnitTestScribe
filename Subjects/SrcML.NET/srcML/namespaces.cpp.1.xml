<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="D:\Research\Subjects\SrcML.NET\TestInputs\namespaces.cpp" pos:tabs="8"><cpp:include pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="1" pos:column="10">"A.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">include</cpp:directive> <cpp:file pos:line="2" pos:column="10">&lt;iostream&gt;</cpp:file></cpp:include>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">std</name><op:operator pos:line="3" pos:column="10">::</op:operator><name pos:line="3" pos:column="12">cout</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">std</name><op:operator pos:line="4" pos:column="10">::</op:operator><name pos:line="4" pos:column="12">endl</name></name>;</using>

<namespace pos:line="6" pos:column="1">namespace <name pos:line="6" pos:column="11">B</name> = <name pos:line="6" pos:column="15">A</name>;</namespace>
<typedef pos:line="7" pos:column="1">typedef <type><name><name pos:line="7" pos:column="9">B</name><op:operator pos:line="7" pos:column="10">::</op:operator><name pos:line="7" pos:column="12">Foo</name></name></type> <name pos:line="7" pos:column="16">Foo</name>;</typedef>

<function><type><name pos:line="9" pos:column="1">int</name></type> <name pos:line="9" pos:column="5">main</name><parameter_list pos:line="9" pos:column="9">()</parameter_list> <block pos:line="9" pos:column="12">{
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">B</name><op:operator pos:line="10" pos:column="4">::</op:operator><name pos:line="10" pos:column="6">Foo</name></name></type> <name pos:line="10" pos:column="10">test</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">Foo</name></type> <name pos:line="11" pos:column="7">test2</name></decl>;</decl_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">test</name><op:operator pos:line="12" pos:column="7">.</op:operator><name pos:line="12" pos:column="8">a</name></name> <op:operator pos:line="12" pos:column="10">=</op:operator> <lit:literal type="number" pos:line="12" pos:column="12">0</lit:literal></expr>;</expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">test2</name><op:operator pos:line="13" pos:column="8">.</op:operator><name pos:line="13" pos:column="9">a</name></name> <op:operator pos:line="13" pos:column="11">=</op:operator> <lit:literal type="number" pos:line="13" pos:column="13">1</lit:literal></expr>;</expr_stmt>
  
  <expr_stmt><expr><name pos:line="15" pos:column="3">cout</name> <op:operator pos:line="15" pos:column="8">&lt;&lt;</op:operator> <lit:literal type="string" pos:line="15" pos:column="11">"0 + 5 = "</lit:literal> <op:operator pos:line="15" pos:column="22">&lt;&lt;</op:operator> <call><name><name pos:line="15" pos:column="25">test</name><op:operator pos:line="15" pos:column="29">.</op:operator><name pos:line="15" pos:column="30">Add</name></name><argument_list pos:line="15" pos:column="33">(<argument><expr><lit:literal type="number" pos:line="15" pos:column="34">5</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="15" pos:column="37">&lt;&lt;</op:operator> <name pos:line="15" pos:column="40">endl</name></expr>;</expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">cout</name> <op:operator pos:line="16" pos:column="8">&lt;&lt;</op:operator> <lit:literal type="string" pos:line="16" pos:column="11">"1 + 5 = "</lit:literal> <op:operator pos:line="16" pos:column="22">&lt;&lt;</op:operator> <call><name><name pos:line="16" pos:column="25">test2</name><op:operator pos:line="16" pos:column="30">.</op:operator><name pos:line="16" pos:column="31">Add</name></name><argument_list pos:line="16" pos:column="34">(<argument><expr><lit:literal type="number" pos:line="16" pos:column="35">5</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="16" pos:column="38">&lt;&lt;</op:operator> <name pos:line="16" pos:column="41">endl</name></expr>;</expr_stmt>
  <return pos:line="17" pos:column="3">return <expr><lit:literal type="number" pos:line="17" pos:column="10">0</lit:literal></expr>;</return>
}</block></function>
</unit>
