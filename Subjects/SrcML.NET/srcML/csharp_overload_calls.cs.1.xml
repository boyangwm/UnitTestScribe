<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\TestInputs\csharp_overload_calls.cs" pos:tabs="8"><namespace pos:line="1" pos:column="1">namespace <name pos:line="1" pos:column="11">OverloadTest</name> <block pos:line="1" pos:column="24">{
	<class><specifier pos:line="2" pos:column="9">public</specifier> class <name pos:line="2" pos:column="22">TestCall</name> <block pos:line="2" pos:column="31">{
		<function><type><specifier pos:line="3" pos:column="17">public</specifier> <name pos:line="3" pos:column="24">void</name></type> <name pos:line="3" pos:column="29">CallFooWithoutParameters</name><parameter_list pos:line="3" pos:column="53">()</parameter_list> <block pos:line="3" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="4" pos:column="25">foo</name><argument_list pos:line="4" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="7" pos:column="17">public</specifier> <name pos:line="7" pos:column="24">void</name></type> <name pos:line="7" pos:column="29">CallFooWithParameter</name><parameter_list pos:line="7" pos:column="49">()</parameter_list> <block pos:line="7" pos:column="52">{
			<expr_stmt><expr><call><name pos:line="8" pos:column="25">foo</name><argument_list pos:line="8" pos:column="28">(<argument><expr><lit:literal type="boolean" pos:line="8" pos:column="29">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="11" pos:column="17">public</specifier> <name pos:line="11" pos:column="24">void</name></type> <name pos:line="11" pos:column="29">foo</name><parameter_list pos:line="11" pos:column="32">()</parameter_list> <block pos:line="11" pos:column="35">{ }</block></function>

		<function><type><specifier pos:line="13" pos:column="17">public</specifier> <name pos:line="13" pos:column="24">void</name></type> <name pos:line="13" pos:column="29">foo</name><parameter_list pos:line="13" pos:column="32">(<param><decl><type><name pos:line="13" pos:column="33">bool</name></type> <name pos:line="13" pos:column="38">bar</name></decl></param>)</parameter_list> <block pos:line="13" pos:column="43">{ }</block></function>
	}</block></class>
}</block></namespace></unit>
