<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\VisualStudio\ABB.SrcML.VisualStudio.SrcMLService\WorkingSetRegistrarService.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2014 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Vinay Augustine(ABB Group) - Initial implementation
 *****************************************************************************/</comment>

<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">ABB</name><op:operator pos:line="12" pos:column="10">.</op:operator><name pos:line="12" pos:column="11">SrcML</name><op:operator pos:line="12" pos:column="16">.</op:operator><name pos:line="12" pos:column="17">Data</name></name>;</using>
<using pos:line="13" pos:column="1">using <name pos:line="13" pos:column="7">System</name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Collections</name><op:operator pos:line="14" pos:column="25">.</op:operator><name pos:line="14" pos:column="26">Generic</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">Collections</name><op:operator pos:line="15" pos:column="25">.</op:operator><name pos:line="15" pos:column="26">ObjectModel</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Collections</name><op:operator pos:line="16" pos:column="25">.</op:operator><name pos:line="16" pos:column="26">Specialized</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">System</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Linq</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">System</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">Text</name></name>;</using>

<namespace pos:line="20" pos:column="1">namespace <name><name pos:line="20" pos:column="11">ABB</name><op:operator pos:line="20" pos:column="14">.</op:operator><name pos:line="20" pos:column="15">SrcML</name><op:operator pos:line="20" pos:column="20">.</op:operator><name pos:line="20" pos:column="21">VisualStudio</name></name> <block pos:line="20" pos:column="34">{
    <comment type="line" pos:line="21" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="22" pos:column="5">/// The working set registrar provides the default implementation of &lt;see cref="IWorkingSetRegistrarService"/&gt;</comment>
    <comment type="line" pos:line="23" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="24" pos:column="5">public</specifier> class <name pos:line="24" pos:column="18">WorkingSetRegistrarService</name> <super pos:line="24" pos:column="45">: <name pos:line="24" pos:column="47">IWorkingSetRegistrarService</name>, <name pos:line="24" pos:column="76">SWorkingSetRegistrarService</name></super> <block pos:line="24" pos:column="104">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">IServiceProvider</name></type> <name pos:line="25" pos:column="26">_serviceProvider</name></decl>;</decl_stmt>

        <comment type="line" pos:line="27" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="28" pos:column="9">/// Creates a working set registrar object</comment>
        <comment type="line" pos:line="29" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="30" pos:column="9">/// &lt;param name="serviceProvider"&gt;The service provider where this service is sited&lt;/param&gt;</comment>
        <constructor><specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">WorkingSetRegistrarService</name><parameter_list pos:line="31" pos:column="42">(<param><decl><type><name pos:line="31" pos:column="43">IServiceProvider</name></type> <name pos:line="31" pos:column="60">serviceProvider</name></decl></param>)</parameter_list> <block pos:line="31" pos:column="77">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">_serviceProvider</name> <op:operator pos:line="32" pos:column="30">=</op:operator> <name pos:line="32" pos:column="32">serviceProvider</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="33" pos:column="13">WorkingSetFactories</name> <op:operator pos:line="33" pos:column="33">=</op:operator> <op:operator pos:line="33" pos:column="35">new</op:operator> <call><name><name pos:line="33" pos:column="39">ObservableCollection</name><argument_list pos:line="33" pos:column="59">&lt;<argument><name pos:line="33" pos:column="60">AbstractWorkingSetFactory</name></argument>&gt;</argument_list></name><argument_list pos:line="33" pos:column="86">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">WorkingSetFactories</name><op:operator pos:line="34" pos:column="32">.</op:operator><name pos:line="34" pos:column="33">CollectionChanged</name></name> <op:operator pos:line="34" pos:column="51">+=</op:operator> <name pos:line="34" pos:column="54">WorkingSetFactories_CollectionChanged</name></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="37" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="38" pos:column="9">/// The default working set factory</comment>
        <comment type="line" pos:line="39" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="40" pos:column="9">public</specifier> <name pos:line="40" pos:column="16">AbstractWorkingSetFactory</name></type> <name pos:line="40" pos:column="42">Default</name> <block pos:line="40" pos:column="50">{ <function_decl><name pos:line="40" pos:column="52">get</name>;</function_decl> <function_decl><specifier pos:line="40" pos:column="57">private</specifier> <name pos:line="40" pos:column="65">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="42" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="43" pos:column="9">/// The registered working set factories</comment>
        <comment type="line" pos:line="44" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="45" pos:column="9">public</specifier> <name><name pos:line="45" pos:column="16">ObservableCollection</name><argument_list pos:line="45" pos:column="36">&lt;<argument><name pos:line="45" pos:column="37">AbstractWorkingSetFactory</name></argument>&gt;</argument_list></name></type> <name pos:line="45" pos:column="64">WorkingSetFactories</name> <block pos:line="45" pos:column="84">{ <function_decl><name pos:line="45" pos:column="86">get</name>;</function_decl> <function_decl><specifier pos:line="45" pos:column="91">private</specifier> <name pos:line="45" pos:column="99">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="47" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="48" pos:column="9">/// Raised when a working set factory is added</comment>
        <comment type="line" pos:line="49" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="50" pos:column="9">public</specifier> <specifier pos:line="50" pos:column="16">event</specifier> <name><name pos:line="50" pos:column="22">EventHandler</name><argument_list pos:line="50" pos:column="34">&lt;<argument><name pos:line="50" pos:column="35">WorkingSetFactoryAddedEventArgs</name></argument>&gt;</argument_list></name></type> <name pos:line="50" pos:column="68">WorkingSetFactoryAdded</name></decl>;</decl_stmt>

        <comment type="line" pos:line="52" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="53" pos:column="9">/// Registers a new working set object and makes it the default working set</comment>
        <comment type="line" pos:line="54" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="55" pos:column="9">/// &lt;param name="factory"&gt;The working set factory to register&lt;/param&gt;</comment>
        <function><type><specifier pos:line="56" pos:column="9">public</specifier> <name pos:line="56" pos:column="16">void</name></type> <name pos:line="56" pos:column="21">RegisterWorkingSetFactory</name><parameter_list pos:line="56" pos:column="46">(<param><decl><type><name pos:line="56" pos:column="47">AbstractWorkingSetFactory</name></type> <name pos:line="56" pos:column="73">factory</name></decl></param>)</parameter_list> <block pos:line="56" pos:column="82">{
            <expr_stmt><expr><call><name><name pos:line="57" pos:column="13">WorkingSetFactories</name><op:operator pos:line="57" pos:column="32">.</op:operator><name pos:line="57" pos:column="33">Add</name></name><argument_list pos:line="57" pos:column="36">(<argument><expr><name pos:line="57" pos:column="37">factory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="58" pos:column="13">Default</name> <op:operator pos:line="58" pos:column="21">=</op:operator> <name pos:line="58" pos:column="23">factory</name></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="61" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="62" pos:column="9">/// Raises &lt;see cref="WorkingSetFactoryAdded"/&gt;</comment>
        <comment type="line" pos:line="63" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="64" pos:column="9">/// &lt;param name="e"&gt;The event arguments&lt;/param&gt;</comment>
        <function><type><specifier pos:line="65" pos:column="9">protected</specifier> <specifier pos:line="65" pos:column="19">virtual</specifier> <name pos:line="65" pos:column="27">void</name></type> <name pos:line="65" pos:column="32">OnWorkingSetFactoryAdded</name><parameter_list pos:line="65" pos:column="56">(<param><decl><type><name pos:line="65" pos:column="57">WorkingSetFactoryAddedEventArgs</name></type> <name pos:line="65" pos:column="89">e</name></decl></param>)</parameter_list> <block pos:line="65" pos:column="92">{
            <decl_stmt><decl><type><name pos:line="66" pos:column="13">var</name></type> <name pos:line="66" pos:column="17">handler</name> <init pos:line="66" pos:column="25">= <expr><name pos:line="66" pos:column="27">WorkingSetFactoryAdded</name></expr></init></decl>;</decl_stmt>
            <if pos:line="67" pos:column="13">if<condition pos:line="67" pos:column="15">(<expr><name pos:line="67" pos:column="16">null</name> <op:operator pos:line="67" pos:column="21">!=</op:operator> <name pos:line="67" pos:column="24">handler</name></expr>)</condition><then pos:line="67" pos:column="32"> <block pos:line="67" pos:column="33">{
                <expr_stmt><expr><call><name pos:line="68" pos:column="17">handler</name><argument_list pos:line="68" pos:column="24">(<argument><expr><name pos:line="68" pos:column="25">this</name></expr></argument>, <argument><expr><name pos:line="68" pos:column="31">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <comment type="line" pos:line="72" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="73" pos:column="9">/// For each new item in &lt;paramref name="e"/&gt;, &lt;see cref="OnWorkingSetFactoryAdded"/&gt; is called</comment>
        <comment type="line" pos:line="74" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="75" pos:column="9">/// &lt;param name="sender"&gt;The sender&lt;/param&gt;</comment>
        <comment type="line" pos:line="76" pos:column="9">/// &lt;param name="e"&gt;The event arguments&lt;/param&gt;</comment>
        <function><type><specifier pos:line="77" pos:column="9">private</specifier> <name pos:line="77" pos:column="17">void</name></type> <name pos:line="77" pos:column="22">WorkingSetFactories_CollectionChanged</name><parameter_list pos:line="77" pos:column="59">(<param><decl><type><name pos:line="77" pos:column="60">object</name></type> <name pos:line="77" pos:column="67">sender</name></decl></param>, <param><decl><type><name pos:line="77" pos:column="75">NotifyCollectionChangedEventArgs</name></type> <name pos:line="77" pos:column="108">e</name></decl></param>)</parameter_list> <block pos:line="77" pos:column="111">{

            <foreach pos:line="79" pos:column="13">foreach(<init><decl><type><name pos:line="79" pos:column="21">var</name></type> <name pos:line="79" pos:column="25">factory</name> <range pos:line="79" pos:column="33">in <expr><call><name><name pos:line="79" pos:column="36">e</name><op:operator pos:line="79" pos:column="37">.</op:operator><name pos:line="79" pos:column="38">NewItems</name><op:operator pos:line="79" pos:column="46">.</op:operator><name><name pos:line="79" pos:column="47">Cast</name><argument_list pos:line="79" pos:column="51">&lt;<argument><name pos:line="79" pos:column="52">AbstractWorkingSetFactory</name></argument>&gt;</argument_list></name></name><argument_list pos:line="79" pos:column="78">()</argument_list></call><op:operator pos:line="79" pos:column="80">.</op:operator><call><name pos:line="79" pos:column="81">Where</name><argument_list pos:line="79" pos:column="86">(<argument><expr><lambda><name pos:line="79" pos:column="87">f</name> <op:operator pos:line="79" pos:column="89">=&gt;</op:operator> <name pos:line="79" pos:column="92">null</name> <op:operator pos:line="79" pos:column="97">!=</op:operator> <name pos:line="79" pos:column="100">f</name></lambda></expr></argument>)</argument_list></call></expr></range></decl></init>) <block pos:line="79" pos:column="104">{
                <expr_stmt><expr><call><name pos:line="80" pos:column="17">OnWorkingSetFactoryAdded</name><argument_list pos:line="80" pos:column="41">(<argument><expr><op:operator pos:line="80" pos:column="42">new</op:operator> <call><name pos:line="80" pos:column="46">WorkingSetFactoryAddedEventArgs</name><argument_list pos:line="80" pos:column="77">(<argument><expr><name pos:line="80" pos:column="78">factory</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
