<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\VisualStudio\ABB.SrcML.VisualStudio.SrcMLService.UnitTests\MenuItemTests\UIShellServiceMock.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Microsoft</name><op:operator pos:line="2" pos:column="16">.</op:operator><name pos:line="2" pos:column="17">VisualStudio</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Microsoft</name><op:operator pos:line="3" pos:column="16">.</op:operator><name pos:line="3" pos:column="17">VisualStudio</name><op:operator pos:line="3" pos:column="29">.</op:operator><name pos:line="3" pos:column="30">Shell</name><op:operator pos:line="3" pos:column="35">.</op:operator><name pos:line="3" pos:column="36">Interop</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Microsoft</name><op:operator pos:line="4" pos:column="16">.</op:operator><name pos:line="4" pos:column="17">VsSDK</name><op:operator pos:line="4" pos:column="22">.</op:operator><name pos:line="4" pos:column="23">UnitTestLibrary</name></name>;</using>

<namespace pos:line="6" pos:column="1">namespace <name><name pos:line="6" pos:column="11">ABB</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">SrcML</name><op:operator pos:line="6" pos:column="20">.</op:operator><name pos:line="6" pos:column="21">VisualStudio</name><op:operator pos:line="6" pos:column="33">.</op:operator><name pos:line="6" pos:column="34">SrcMLService</name><op:operator pos:line="6" pos:column="46">.</op:operator><name pos:line="6" pos:column="47">UnitTests</name></name> <block pos:line="6" pos:column="57">{
    <class><specifier pos:line="7" pos:column="5">static</specifier> class <name pos:line="7" pos:column="18">UIShellServiceMock</name> <block pos:line="7" pos:column="37">{
        <decl_stmt><decl><type><specifier pos:line="8" pos:column="9">private</specifier> <specifier pos:line="8" pos:column="17">static</specifier> <name pos:line="8" pos:column="24">GenericMockFactory</name></type> <name pos:line="8" pos:column="43">uiShellFactory</name></decl>;</decl_stmt>

        <cpp:region pos:line="10" pos:column="9">#<cpp:directive pos:line="10" pos:column="10">region</cpp:directive> UiShell Getters</cpp:region>
        <comment type="line" pos:line="11" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="12" pos:column="9">/// Returns an IVsUiShell that does not implement any methods</comment>
        <comment type="line" pos:line="13" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="14" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="15" pos:column="9">internal</specifier> <specifier pos:line="15" pos:column="18">static</specifier> <name pos:line="15" pos:column="25">BaseMock</name></type> <name pos:line="15" pos:column="34">GetUiShellInstance</name><parameter_list pos:line="15" pos:column="52">()</parameter_list> <block pos:line="15" pos:column="55">{
            <if pos:line="16" pos:column="13">if<condition pos:line="16" pos:column="15">(<expr><name pos:line="16" pos:column="16">uiShellFactory</name> <op:operator pos:line="16" pos:column="31">==</op:operator> <name pos:line="16" pos:column="34">null</name></expr>)</condition><then pos:line="16" pos:column="39"> <block pos:line="16" pos:column="40">{
                <expr_stmt><expr><name pos:line="17" pos:column="17">uiShellFactory</name> <op:operator pos:line="17" pos:column="32">=</op:operator> <op:operator pos:line="17" pos:column="34">new</op:operator> <call><name pos:line="17" pos:column="38">GenericMockFactory</name><argument_list pos:line="17" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="17" pos:column="57">"UiShell"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="17" pos:column="68">new</op:operator> <name><name pos:line="17" pos:column="72">Type</name><index pos:line="17" pos:column="76">[]</index></name> <block pos:line="17" pos:column="79">{ <expr><call><name pos:line="17" pos:column="81">typeof</name><argument_list pos:line="17" pos:column="87">(<argument><expr><name pos:line="17" pos:column="88">IVsUIShell</name></expr></argument>)</argument_list></call></expr><op:operator pos:line="17" pos:column="99">,</op:operator> <expr><call><name pos:line="17" pos:column="101">typeof</name><argument_list pos:line="17" pos:column="107">(<argument><expr><name pos:line="17" pos:column="108">IVsUIShellOpenDocument</name></expr></argument>)</argument_list></call></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <decl_stmt><decl><type><name pos:line="19" pos:column="13">BaseMock</name></type> <name pos:line="19" pos:column="22">uiShell</name> <init pos:line="19" pos:column="30">= <expr><call><name><name pos:line="19" pos:column="32">uiShellFactory</name><op:operator pos:line="19" pos:column="46">.</op:operator><name pos:line="19" pos:column="47">GetInstance</name></name><argument_list pos:line="19" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="20" pos:column="13">return <expr><name pos:line="20" pos:column="20">uiShell</name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="23" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="24" pos:column="9">/// Get an IVsUiShell that implements SetWaitCursor, SaveDocDataToFile, ShowMessageBox</comment>
        <comment type="line" pos:line="25" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="26" pos:column="9">/// &lt;returns&gt;uishell mock&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="27" pos:column="9">internal</specifier> <specifier pos:line="27" pos:column="18">static</specifier> <name pos:line="27" pos:column="25">BaseMock</name></type> <name pos:line="27" pos:column="34">GetUiShellInstance0</name><parameter_list pos:line="27" pos:column="53">()</parameter_list> <block pos:line="27" pos:column="56">{
            <decl_stmt><decl><type><name pos:line="28" pos:column="13">BaseMock</name></type> <name pos:line="28" pos:column="22">uiShell</name> <init pos:line="28" pos:column="30">= <expr><call><name pos:line="28" pos:column="32">GetUiShellInstance</name><argument_list pos:line="28" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="29" pos:column="13">string</name></type> <name pos:line="29" pos:column="20">name</name> <init pos:line="29" pos:column="25">= <expr><call><name><name pos:line="29" pos:column="27">string</name><op:operator pos:line="29" pos:column="33">.</op:operator><name pos:line="29" pos:column="34">Format</name></name><argument_list pos:line="29" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="29" pos:column="41">"{0}.{1}"</lit:literal></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="52">typeof</name><argument_list pos:line="29" pos:column="58">(<argument><expr><name pos:line="29" pos:column="59">IVsUIShell</name></expr></argument>)</argument_list></call><op:operator pos:line="29" pos:column="70">.</op:operator><name pos:line="29" pos:column="71">FullName</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="29" pos:column="81">"SetWaitCursor"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">uiShell</name><op:operator pos:line="30" pos:column="20">.</op:operator><name pos:line="30" pos:column="21">AddMethodCallback</name></name><argument_list pos:line="30" pos:column="38">(<argument><expr><name pos:line="30" pos:column="39">name</name></expr></argument>, <argument><expr><op:operator pos:line="30" pos:column="45">new</op:operator> <call><name><name pos:line="30" pos:column="49">EventHandler</name><argument_list pos:line="30" pos:column="61">&lt;<argument><name pos:line="30" pos:column="62">CallbackArgs</name></argument>&gt;</argument_list></name><argument_list pos:line="30" pos:column="75">(<argument><expr><name pos:line="30" pos:column="76">SetWaitCursorCallBack</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="32" pos:column="13">name</name> <op:operator pos:line="32" pos:column="18">=</op:operator> <call><name><name pos:line="32" pos:column="20">string</name><op:operator pos:line="32" pos:column="26">.</op:operator><name pos:line="32" pos:column="27">Format</name></name><argument_list pos:line="32" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="32" pos:column="34">"{0}.{1}"</lit:literal></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="45">typeof</name><argument_list pos:line="32" pos:column="51">(<argument><expr><name pos:line="32" pos:column="52">IVsUIShell</name></expr></argument>)</argument_list></call><op:operator pos:line="32" pos:column="63">.</op:operator><name pos:line="32" pos:column="64">FullName</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="32" pos:column="74">"SaveDocDataToFile"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">uiShell</name><op:operator pos:line="33" pos:column="20">.</op:operator><name pos:line="33" pos:column="21">AddMethodCallback</name></name><argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">name</name></expr></argument>, <argument><expr><op:operator pos:line="33" pos:column="45">new</op:operator> <call><name><name pos:line="33" pos:column="49">EventHandler</name><argument_list pos:line="33" pos:column="61">&lt;<argument><name pos:line="33" pos:column="62">CallbackArgs</name></argument>&gt;</argument_list></name><argument_list pos:line="33" pos:column="75">(<argument><expr><name pos:line="33" pos:column="76">SaveDocDataToFileCallBack</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="35" pos:column="13">name</name> <op:operator pos:line="35" pos:column="18">=</op:operator> <call><name><name pos:line="35" pos:column="20">string</name><op:operator pos:line="35" pos:column="26">.</op:operator><name pos:line="35" pos:column="27">Format</name></name><argument_list pos:line="35" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="35" pos:column="34">"{0}.{1}"</lit:literal></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="45">typeof</name><argument_list pos:line="35" pos:column="51">(<argument><expr><name pos:line="35" pos:column="52">IVsUIShell</name></expr></argument>)</argument_list></call><op:operator pos:line="35" pos:column="63">.</op:operator><name pos:line="35" pos:column="64">FullName</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="35" pos:column="74">"ShowMessageBox"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">uiShell</name><op:operator pos:line="36" pos:column="20">.</op:operator><name pos:line="36" pos:column="21">AddMethodCallback</name></name><argument_list pos:line="36" pos:column="38">(<argument><expr><name pos:line="36" pos:column="39">name</name></expr></argument>, <argument><expr><op:operator pos:line="36" pos:column="45">new</op:operator> <call><name><name pos:line="36" pos:column="49">EventHandler</name><argument_list pos:line="36" pos:column="61">&lt;<argument><name pos:line="36" pos:column="62">CallbackArgs</name></argument>&gt;</argument_list></name><argument_list pos:line="36" pos:column="75">(<argument><expr><name pos:line="36" pos:column="76">ShowMessageBoxCallBack</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">uiShell</name></expr>;</return>
        }</block></function>
        <cpp:endregion pos:line="39" pos:column="9">#<cpp:directive pos:line="39" pos:column="10">endregion</cpp:directive></cpp:endregion>

        <cpp:region pos:line="41" pos:column="9">#<cpp:directive pos:line="41" pos:column="10">region</cpp:directive> Callbacks</cpp:region>
        <function><type><specifier pos:line="42" pos:column="9">private</specifier> <specifier pos:line="42" pos:column="17">static</specifier> <name pos:line="42" pos:column="24">void</name></type> <name pos:line="42" pos:column="29">SetWaitCursorCallBack</name><parameter_list pos:line="42" pos:column="50">(<param><decl><type><name pos:line="42" pos:column="51">object</name></type> <name pos:line="42" pos:column="58">caller</name></decl></param>, <param><decl><type><name pos:line="42" pos:column="66">CallbackArgs</name></type> <name pos:line="42" pos:column="79">arguments</name></decl></param>)</parameter_list> <block pos:line="42" pos:column="90">{
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">arguments</name><op:operator pos:line="43" pos:column="22">.</op:operator><name pos:line="43" pos:column="23">ReturnValue</name></name> <op:operator pos:line="43" pos:column="35">=</op:operator> <name><name pos:line="43" pos:column="37">VSConstants</name><op:operator pos:line="43" pos:column="48">.</op:operator><name pos:line="43" pos:column="49">S_OK</name></name></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="46" pos:column="9">private</specifier> <specifier pos:line="46" pos:column="17">static</specifier> <name pos:line="46" pos:column="24">void</name></type> <name pos:line="46" pos:column="29">SaveDocDataToFileCallBack</name><parameter_list pos:line="46" pos:column="54">(<param><decl><type><name pos:line="46" pos:column="55">object</name></type> <name pos:line="46" pos:column="62">caller</name></decl></param>, <param><decl><type><name pos:line="46" pos:column="70">CallbackArgs</name></type> <name pos:line="46" pos:column="83">arguments</name></decl></param>)</parameter_list> <block pos:line="46" pos:column="94">{
            <expr_stmt><expr><name><name pos:line="47" pos:column="13">arguments</name><op:operator pos:line="47" pos:column="22">.</op:operator><name pos:line="47" pos:column="23">ReturnValue</name></name> <op:operator pos:line="47" pos:column="35">=</op:operator> <name><name pos:line="47" pos:column="37">VSConstants</name><op:operator pos:line="47" pos:column="48">.</op:operator><name pos:line="47" pos:column="49">S_OK</name></name></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="50" pos:column="9">private</specifier> <specifier pos:line="50" pos:column="17">static</specifier> <name pos:line="50" pos:column="24">void</name></type> <name pos:line="50" pos:column="29">ShowMessageBoxCallBack</name><parameter_list pos:line="50" pos:column="51">(<param><decl><type><name pos:line="50" pos:column="52">object</name></type> <name pos:line="50" pos:column="59">caller</name></decl></param>, <param><decl><type><name pos:line="50" pos:column="67">CallbackArgs</name></type> <name pos:line="50" pos:column="80">arguments</name></decl></param>)</parameter_list> <block pos:line="50" pos:column="91">{
            <expr_stmt><expr><name><name pos:line="51" pos:column="13">arguments</name><op:operator pos:line="51" pos:column="22">.</op:operator><name pos:line="51" pos:column="23">ReturnValue</name></name> <op:operator pos:line="51" pos:column="35">=</op:operator> <name><name pos:line="51" pos:column="37">VSConstants</name><op:operator pos:line="51" pos:column="48">.</op:operator><name pos:line="51" pos:column="49">S_OK</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">arguments</name><op:operator pos:line="52" pos:column="22">.</op:operator><name pos:line="52" pos:column="23">SetParameter</name></name><argument_list pos:line="52" pos:column="35">(<argument><expr><lit:literal type="number" pos:line="52" pos:column="36">10</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="52" pos:column="40">(</op:operator><name pos:line="52" pos:column="41">int</name><op:operator pos:line="52" pos:column="44">)</op:operator><name><name pos:line="52" pos:column="45">System</name><op:operator pos:line="52" pos:column="51">.</op:operator><name pos:line="52" pos:column="52">Windows</name><op:operator pos:line="52" pos:column="59">.</op:operator><name pos:line="52" pos:column="60">Forms</name><op:operator pos:line="52" pos:column="65">.</op:operator><name pos:line="52" pos:column="66">DialogResult</name><op:operator pos:line="52" pos:column="78">.</op:operator><name pos:line="52" pos:column="79">Yes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <cpp:endregion pos:line="55" pos:column="9">#<cpp:directive pos:line="55" pos:column="10">endregion</cpp:directive></cpp:endregion>
    }</block></class>
}</block></namespace></unit>
