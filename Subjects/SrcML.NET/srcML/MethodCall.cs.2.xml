<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\Tools\ABB.SrcML.Tools.MethodCallSurvey\MethodCall.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">ABB</name><op:operator pos:line="1" pos:column="10">.</op:operator><name pos:line="1" pos:column="11">SrcML</name><op:operator pos:line="1" pos:column="16">.</op:operator><name pos:line="1" pos:column="17">Data</name></name>;</using>
<using pos:line="2" pos:column="1">using <name pos:line="2" pos:column="7">System</name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Collections</name><op:operator pos:line="3" pos:column="25">.</op:operator><name pos:line="3" pos:column="26">Generic</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Collections</name><op:operator pos:line="4" pos:column="25">.</op:operator><name pos:line="4" pos:column="26">ObjectModel</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">ComponentModel</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Linq</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Text</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">System</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">Xml</name><op:operator pos:line="8" pos:column="17">.</op:operator><name pos:line="8" pos:column="18">XPath</name></name>;</using>
<using pos:line="9" pos:column="1">using <name pos:line="9" pos:column="7">CallData</name> <init pos:line="9" pos:column="16">= <expr><name><name pos:line="9" pos:column="18">ABB</name><op:operator pos:line="9" pos:column="21">.</op:operator><name pos:line="9" pos:column="22">SrcML</name><op:operator pos:line="9" pos:column="27">.</op:operator><name pos:line="9" pos:column="28">Data</name><op:operator pos:line="9" pos:column="32">.</op:operator><name pos:line="9" pos:column="33">MethodCall</name></name></expr></init>;</using>
<using pos:line="10" pos:column="1">using <name pos:line="10" pos:column="7">MethodData</name> <init pos:line="10" pos:column="18">= <expr><name><name pos:line="10" pos:column="20">ABB</name><op:operator pos:line="10" pos:column="23">.</op:operator><name pos:line="10" pos:column="24">SrcML</name><op:operator pos:line="10" pos:column="29">.</op:operator><name pos:line="10" pos:column="30">Data</name><op:operator pos:line="10" pos:column="34">.</op:operator><name pos:line="10" pos:column="35">MethodDefinition</name></name></expr></init>;</using>

<namespace pos:line="12" pos:column="1">namespace <name><name pos:line="12" pos:column="11">ABB</name><op:operator pos:line="12" pos:column="14">.</op:operator><name pos:line="12" pos:column="15">SrcML</name><op:operator pos:line="12" pos:column="20">.</op:operator><name pos:line="12" pos:column="21">Tools</name><op:operator pos:line="12" pos:column="26">.</op:operator><name pos:line="12" pos:column="27">MethodCallSurvey</name></name> <block pos:line="12" pos:column="44">{

    <class><specifier pos:line="14" pos:column="5">public</specifier> class <name pos:line="14" pos:column="18">MethodCall</name> <super pos:line="14" pos:column="29">: <name pos:line="14" pos:column="31">INotifyPropertyChanged</name>, <name pos:line="14" pos:column="55">ILocatable</name></super> <block pos:line="14" pos:column="66">{
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">private</specifier> <name pos:line="15" pos:column="17">SrcMLArchive</name></type> <name pos:line="15" pos:column="30">Archive</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">private</specifier> <name pos:line="16" pos:column="17">CallData</name></type> <name pos:line="16" pos:column="26">Data</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">private</specifier> <name pos:line="17" pos:column="17">bool</name></type> <name pos:line="17" pos:column="22">firstMatchIsValid</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">private</specifier> <name pos:line="18" pos:column="17">bool</name></type> <name pos:line="18" pos:column="22">hasMatches</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">private</specifier> <name pos:line="19" pos:column="17">bool</name></type> <name pos:line="19" pos:column="22">hasNoMatches</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">private</specifier> <name pos:line="20" pos:column="17">bool</name></type> <name pos:line="20" pos:column="22">isExternal</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="21" pos:column="9">private</specifier> <name pos:line="21" pos:column="17">int</name></type> <name pos:line="21" pos:column="21">numberOfValidMatches</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="23" pos:column="9">public</specifier> <name pos:line="23" pos:column="16">MethodCall</name><parameter_list pos:line="23" pos:column="26">(<param><decl><type><name pos:line="23" pos:column="27">SrcMLArchive</name></type> <name pos:line="23" pos:column="40">archive</name></decl></param>, <param><decl><type><name pos:line="23" pos:column="49">CallData</name></type> <name pos:line="23" pos:column="58">data</name></decl></param>)</parameter_list> <block pos:line="23" pos:column="64">{
            <expr_stmt><expr><name><name pos:line="24" pos:column="13">this</name><op:operator pos:line="24" pos:column="17">.</op:operator><name pos:line="24" pos:column="18">Archive</name></name> <op:operator pos:line="24" pos:column="26">=</op:operator> <name pos:line="24" pos:column="28">archive</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="25" pos:column="13">this</name><op:operator pos:line="25" pos:column="17">.</op:operator><name pos:line="25" pos:column="18">Data</name></name> <op:operator pos:line="25" pos:column="23">=</op:operator> <name pos:line="25" pos:column="25">data</name></expr>;</expr_stmt>

            <expr_stmt><expr><name><name pos:line="27" pos:column="13">this</name><op:operator pos:line="27" pos:column="17">.</op:operator><name pos:line="27" pos:column="18">firstMatchIsValid</name></name> <op:operator pos:line="27" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="27" pos:column="38">false</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">this</name><op:operator pos:line="28" pos:column="17">.</op:operator><name pos:line="28" pos:column="18">hasMatches</name></name> <op:operator pos:line="28" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="28" pos:column="31">false</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="29" pos:column="13">this</name><op:operator pos:line="29" pos:column="17">.</op:operator><name pos:line="29" pos:column="18">hasNoMatches</name></name> <op:operator pos:line="29" pos:column="31">=</op:operator> <lit:literal type="boolean" pos:line="29" pos:column="33">false</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">this</name><op:operator pos:line="30" pos:column="17">.</op:operator><name pos:line="30" pos:column="18">isExternal</name></name> <op:operator pos:line="30" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="30" pos:column="31">false</lit:literal></expr>;</expr_stmt>

            <expr_stmt><expr><name><name pos:line="32" pos:column="13">this</name><op:operator pos:line="32" pos:column="17">.</op:operator><name pos:line="32" pos:column="18">Location</name></name> <op:operator pos:line="32" pos:column="27">=</op:operator> <name><name pos:line="32" pos:column="29">data</name><op:operator pos:line="32" pos:column="33">.</op:operator><name pos:line="32" pos:column="34">Location</name></name></expr>;</expr_stmt>
            <comment type="line" pos:line="33" pos:column="13">//TODO fix this once new type hierarchy is in place</comment>
            <comment type="line" pos:line="34" pos:column="13">//this.FullName = data.ParentScope.GetParentScopesAndSelf&lt;NamedScope&gt;().First().GetFullName();</comment>
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">this</name><op:operator pos:line="35" pos:column="17">.</op:operator><name pos:line="35" pos:column="18">Id</name></name> <op:operator pos:line="35" pos:column="21">=</op:operator> <call><name><name pos:line="35" pos:column="23">DataHelpers</name><op:operator pos:line="35" pos:column="34">.</op:operator><name pos:line="35" pos:column="35">GetLocation</name></name><argument_list pos:line="35" pos:column="46">(<argument><expr><name><name pos:line="35" pos:column="47">data</name><op:operator pos:line="35" pos:column="51">.</op:operator><name pos:line="35" pos:column="52">Location</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">this</name><op:operator pos:line="36" pos:column="17">.</op:operator><name pos:line="36" pos:column="18">Path</name></name> <op:operator pos:line="36" pos:column="23">=</op:operator> <name><name pos:line="36" pos:column="25">this</name><op:operator pos:line="36" pos:column="29">.</op:operator><name pos:line="36" pos:column="30">Location</name><op:operator pos:line="36" pos:column="38">.</op:operator><name pos:line="36" pos:column="39">SourceFileName</name></name></expr>;</expr_stmt>

            <expr_stmt><expr><name><name pos:line="38" pos:column="13">this</name><op:operator pos:line="38" pos:column="17">.</op:operator><name pos:line="38" pos:column="18">numberOfValidMatches</name></name> <op:operator pos:line="38" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="38" pos:column="41">0</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">this</name><op:operator pos:line="39" pos:column="17">.</op:operator><name pos:line="39" pos:column="18">SourceCode</name></name> <op:operator pos:line="39" pos:column="29">=</op:operator> <call><name pos:line="39" pos:column="31">GetSourceCode</name><argument_list pos:line="39" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="40" pos:column="13">PossibleMatches</name> <op:operator pos:line="40" pos:column="29">=</op:operator> <op:operator pos:line="40" pos:column="31">new</op:operator> <call><name><name pos:line="40" pos:column="35">ObservableCollection</name><argument_list pos:line="40" pos:column="55">&lt;<argument><name pos:line="40" pos:column="56">MethodDefinition</name></argument>&gt;</argument_list></name><argument_list pos:line="40" pos:column="73">(<argument><expr><call><name pos:line="40" pos:column="74">GetMatches</name><argument_list pos:line="40" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">StartMonitoringDefinitions</name><argument_list pos:line="41" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="44" pos:column="9">public</specifier> <specifier pos:line="44" pos:column="16">event</specifier> <name pos:line="44" pos:column="22">PropertyChangedEventHandler</name></type> <name pos:line="44" pos:column="50">PropertyChanged</name></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="46" pos:column="9">public</specifier> <name pos:line="46" pos:column="16">bool</name></type> <name pos:line="46" pos:column="21">FirstMatchIsValid</name> <block pos:line="46" pos:column="39">{
            <function><name pos:line="47" pos:column="13">get</name> <block pos:line="47" pos:column="17">{ <return pos:line="47" pos:column="19">return <expr><name pos:line="47" pos:column="26">firstMatchIsValid</name></expr>;</return> }</block></function>
            <function><name pos:line="48" pos:column="13">set</name> <block pos:line="48" pos:column="17">{
                <if pos:line="49" pos:column="17">if<condition pos:line="49" pos:column="19">(<expr><name pos:line="49" pos:column="20">value</name> <op:operator pos:line="49" pos:column="26">!=</op:operator> <name pos:line="49" pos:column="29">firstMatchIsValid</name></expr>)</condition><then pos:line="49" pos:column="47"> <block pos:line="49" pos:column="48">{
                    <expr_stmt><expr><name><name pos:line="50" pos:column="21">this</name><op:operator pos:line="50" pos:column="25">.</op:operator><name pos:line="50" pos:column="26">firstMatchIsValid</name></name> <op:operator pos:line="50" pos:column="44">=</op:operator> <name pos:line="50" pos:column="46">value</name></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="51" pos:column="21">OnPropertyChanged</name><argument_list pos:line="51" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="51" pos:column="39">"FirstMatchIsValid"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="56" pos:column="9">public</specifier> <name pos:line="56" pos:column="16">string</name></type> <name pos:line="56" pos:column="23">FullName</name> <block pos:line="56" pos:column="32">{ <function_decl><name pos:line="56" pos:column="34">get</name>;</function_decl> <function_decl><specifier pos:line="56" pos:column="39">private</specifier> <name pos:line="56" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="58" pos:column="9">public</specifier> <name pos:line="58" pos:column="16">bool</name></type> <name pos:line="58" pos:column="21">HasMatches</name> <block pos:line="58" pos:column="32">{
            <function><name pos:line="59" pos:column="13">get</name> <block pos:line="59" pos:column="17">{ <return pos:line="59" pos:column="19">return <expr><name><name pos:line="59" pos:column="26">this</name><op:operator pos:line="59" pos:column="30">.</op:operator><name pos:line="59" pos:column="31">hasMatches</name></name></expr>;</return> }</block></function>
            <function><name pos:line="60" pos:column="13">set</name> <block pos:line="60" pos:column="17">{
                <if pos:line="61" pos:column="17">if<condition pos:line="61" pos:column="19">(<expr><name pos:line="61" pos:column="20">value</name> <op:operator pos:line="61" pos:column="26">!=</op:operator> <name pos:line="61" pos:column="29">hasMatches</name></expr>)</condition><then pos:line="61" pos:column="40"> <block pos:line="61" pos:column="41">{
                    <expr_stmt><expr><name pos:line="62" pos:column="21">hasMatches</name> <op:operator pos:line="62" pos:column="32">=</op:operator> <name pos:line="62" pos:column="34">value</name></expr>;</expr_stmt>
                    <if pos:line="63" pos:column="21">if<condition pos:line="63" pos:column="23">(<expr><name pos:line="63" pos:column="24">hasMatches</name></expr>)</condition><then pos:line="63" pos:column="35"> <block pos:line="63" pos:column="36">{
                        <expr_stmt><expr><name pos:line="64" pos:column="25">IsExternal</name> <op:operator pos:line="64" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="64" pos:column="38">false</lit:literal></expr>;</expr_stmt>
                        <expr_stmt><expr><name pos:line="65" pos:column="25">HasNoMatches</name> <op:operator pos:line="65" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="65" pos:column="40">false</lit:literal></expr>;</expr_stmt>
                    }</block></then></if>
                    <expr_stmt><expr><call><name pos:line="67" pos:column="21">OnPropertyChanged</name><argument_list pos:line="67" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="67" pos:column="39">"HasMatches"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="72" pos:column="9">public</specifier> <name pos:line="72" pos:column="16">bool</name></type> <name pos:line="72" pos:column="21">HasNoMatches</name> <block pos:line="72" pos:column="34">{
            <function><name pos:line="73" pos:column="13">get</name> <block pos:line="73" pos:column="17">{ <return pos:line="73" pos:column="19">return <expr><name><name pos:line="73" pos:column="26">this</name><op:operator pos:line="73" pos:column="30">.</op:operator><name pos:line="73" pos:column="31">hasNoMatches</name></name></expr>;</return> }</block></function>
            <function><name pos:line="74" pos:column="13">set</name> <block pos:line="74" pos:column="17">{
                <if pos:line="75" pos:column="17">if<condition pos:line="75" pos:column="19">(<expr><name pos:line="75" pos:column="20">value</name> <op:operator pos:line="75" pos:column="26">!=</op:operator> <name pos:line="75" pos:column="29">hasNoMatches</name></expr>)</condition><then pos:line="75" pos:column="42"> <block pos:line="75" pos:column="43">{
                    <expr_stmt><expr><name pos:line="76" pos:column="21">hasNoMatches</name> <op:operator pos:line="76" pos:column="34">=</op:operator> <name pos:line="76" pos:column="36">value</name></expr>;</expr_stmt>
                    <if pos:line="77" pos:column="21">if<condition pos:line="77" pos:column="23">(<expr><name pos:line="77" pos:column="24">hasNoMatches</name></expr>)</condition><then pos:line="77" pos:column="37"> <block pos:line="77" pos:column="38">{
                        <expr_stmt><expr><call><name pos:line="78" pos:column="25">SetMatchValidity</name><argument_list pos:line="78" pos:column="41">(<argument><expr><lit:literal type="boolean" pos:line="78" pos:column="42">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><name pos:line="79" pos:column="25">IsExternal</name> <op:operator pos:line="79" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="79" pos:column="38">false</lit:literal></expr>;</expr_stmt>
                    }</block></then></if>
                    <expr_stmt><expr><call><name pos:line="81" pos:column="21">OnPropertyChanged</name><argument_list pos:line="81" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="81" pos:column="39">"HasNoMatches"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="86" pos:column="9">public</specifier> <name pos:line="86" pos:column="16">string</name></type> <name pos:line="86" pos:column="23">Id</name> <block pos:line="86" pos:column="26">{
            <function_decl><name pos:line="87" pos:column="13">get</name>;</function_decl>
            <function_decl><specifier pos:line="88" pos:column="13">private</specifier> <name pos:line="88" pos:column="21">set</name>;</function_decl>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="91" pos:column="9">public</specifier> <name pos:line="91" pos:column="16">bool</name></type> <name pos:line="91" pos:column="21">IsExternal</name> <block pos:line="91" pos:column="32">{
            <function><name pos:line="92" pos:column="13">get</name> <block pos:line="92" pos:column="17">{ <return pos:line="92" pos:column="19">return <expr><name><name pos:line="92" pos:column="26">this</name><op:operator pos:line="92" pos:column="30">.</op:operator><name pos:line="92" pos:column="31">isExternal</name></name></expr>;</return> }</block></function>
            <function><name pos:line="93" pos:column="13">set</name> <block pos:line="93" pos:column="17">{
                <if pos:line="94" pos:column="17">if<condition pos:line="94" pos:column="19">(<expr><name pos:line="94" pos:column="20">value</name> <op:operator pos:line="94" pos:column="26">!=</op:operator> <name pos:line="94" pos:column="29">isExternal</name></expr>)</condition><then pos:line="94" pos:column="40"> <block pos:line="94" pos:column="41">{
                    <expr_stmt><expr><name pos:line="95" pos:column="21">isExternal</name> <op:operator pos:line="95" pos:column="32">=</op:operator> <name pos:line="95" pos:column="34">value</name></expr>;</expr_stmt>
                    <if pos:line="96" pos:column="21">if<condition pos:line="96" pos:column="23">(<expr><name pos:line="96" pos:column="24">isExternal</name></expr>)</condition><then pos:line="96" pos:column="35"> <block pos:line="96" pos:column="36">{
                        <expr_stmt><expr><call><name pos:line="97" pos:column="25">SetMatchValidity</name><argument_list pos:line="97" pos:column="41">(<argument><expr><lit:literal type="boolean" pos:line="97" pos:column="42">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><name pos:line="98" pos:column="25">HasNoMatches</name> <op:operator pos:line="98" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="98" pos:column="40">false</lit:literal></expr>;</expr_stmt>
                    }</block></then></if>
                    <expr_stmt><expr><call><name pos:line="100" pos:column="21">OnPropertyChanged</name><argument_list pos:line="100" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="100" pos:column="39">"IsExternal"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="105" pos:column="9">public</specifier> <name pos:line="105" pos:column="16">SrcMLLocation</name></type> <name pos:line="105" pos:column="30">Location</name> <block pos:line="105" pos:column="39">{ <function_decl><name pos:line="105" pos:column="41">get</name>;</function_decl> <function_decl><specifier pos:line="105" pos:column="46">private</specifier> <name pos:line="105" pos:column="54">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="107" pos:column="9">public</specifier> <name pos:line="107" pos:column="16">int</name></type> <name pos:line="107" pos:column="20">NumberOfValidMatches</name> <block pos:line="107" pos:column="41">{
            <function><name pos:line="108" pos:column="13">get</name> <block pos:line="108" pos:column="17">{ <return pos:line="108" pos:column="19">return <expr><name pos:line="108" pos:column="26">numberOfValidMatches</name></expr>;</return> }</block></function>
            <function><name pos:line="109" pos:column="13">set</name> <block pos:line="109" pos:column="17">{
                <if pos:line="110" pos:column="17">if<condition pos:line="110" pos:column="19">(<expr><name pos:line="110" pos:column="20">value</name> <op:operator pos:line="110" pos:column="26">!=</op:operator> <name pos:line="110" pos:column="29">numberOfValidMatches</name></expr>)</condition><then pos:line="110" pos:column="50"> <block pos:line="110" pos:column="51">{
                    <expr_stmt><expr><name><name pos:line="111" pos:column="21">this</name><op:operator pos:line="111" pos:column="25">.</op:operator><name pos:line="111" pos:column="26">numberOfValidMatches</name></name> <op:operator pos:line="111" pos:column="47">=</op:operator> <name pos:line="111" pos:column="49">value</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name pos:line="112" pos:column="21">this</name><op:operator pos:line="112" pos:column="25">.</op:operator><name pos:line="112" pos:column="26">HasMatches</name></name> <op:operator pos:line="112" pos:column="37">=</op:operator> <op:operator pos:line="112" pos:column="39">(</op:operator><name><name pos:line="112" pos:column="40">this</name><op:operator pos:line="112" pos:column="44">.</op:operator><name pos:line="112" pos:column="45">numberOfValidMatches</name></name> <op:operator pos:line="112" pos:column="66">&gt;</op:operator> <lit:literal type="number" pos:line="112" pos:column="68">0</lit:literal><op:operator pos:line="112" pos:column="69">)</op:operator></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="113" pos:column="21">OnPropertyChanged</name><argument_list pos:line="113" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="39">"NumberOfValidMatches"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="118" pos:column="9">public</specifier> <name pos:line="118" pos:column="16">string</name></type> <name pos:line="118" pos:column="23">Path</name> <block pos:line="118" pos:column="28">{ <function_decl><name pos:line="118" pos:column="30">get</name>;</function_decl> <function_decl><specifier pos:line="118" pos:column="35">private</specifier> <name pos:line="118" pos:column="43">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="120" pos:column="9">public</specifier> <name><name pos:line="120" pos:column="16">ObservableCollection</name><argument_list pos:line="120" pos:column="36">&lt;<argument><name pos:line="120" pos:column="37">MethodDefinition</name></argument>&gt;</argument_list></name></type> <name pos:line="120" pos:column="55">PossibleMatches</name> <block pos:line="120" pos:column="71">{ <function_decl><name pos:line="120" pos:column="73">get</name>;</function_decl> <function_decl><specifier pos:line="120" pos:column="78">private</specifier> <name pos:line="120" pos:column="86">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="122" pos:column="9">public</specifier> <name pos:line="122" pos:column="16">string</name></type> <name pos:line="122" pos:column="23">SourceCode</name> <block pos:line="122" pos:column="34">{ <function_decl><name pos:line="122" pos:column="36">get</name>;</function_decl> <function_decl><specifier pos:line="122" pos:column="41">private</specifier> <name pos:line="122" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="124" pos:column="9">public</specifier> <name pos:line="124" pos:column="16">void</name></type> <name pos:line="124" pos:column="21">SetMatchValidity</name><parameter_list pos:line="124" pos:column="37">(<param><decl><type><name pos:line="124" pos:column="38">bool</name></type> <name pos:line="124" pos:column="43">validValue</name></decl></param>)</parameter_list> <block pos:line="124" pos:column="55">{
            <foreach pos:line="125" pos:column="13">foreach(<init><decl><type><name pos:line="125" pos:column="21">var</name></type> <name pos:line="125" pos:column="25">match</name> <range pos:line="125" pos:column="31">in <expr><name pos:line="125" pos:column="34">PossibleMatches</name></expr></range></decl></init>) <block pos:line="125" pos:column="51">{
                <expr_stmt><expr><name><name pos:line="126" pos:column="17">match</name><op:operator pos:line="126" pos:column="22">.</op:operator><name pos:line="126" pos:column="23">IsValidForCall</name></name> <op:operator pos:line="126" pos:column="38">=</op:operator> <name pos:line="126" pos:column="40">validValue</name></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="130" pos:column="9">protected</specifier> <name pos:line="130" pos:column="19">void</name></type> <name pos:line="130" pos:column="24">OnPropertyChanged</name><parameter_list pos:line="130" pos:column="41">(<param><decl><type><name pos:line="130" pos:column="42">string</name></type> <name pos:line="130" pos:column="49">name</name></decl></param>)</parameter_list> <block pos:line="130" pos:column="55">{
            <decl_stmt><decl><type><name pos:line="131" pos:column="13">PropertyChangedEventHandler</name></type> <name pos:line="131" pos:column="41">handler</name> <init pos:line="131" pos:column="49">= <expr><name pos:line="131" pos:column="51">PropertyChanged</name></expr></init></decl>;</decl_stmt>
            <if pos:line="132" pos:column="13">if<condition pos:line="132" pos:column="15">(<expr><name pos:line="132" pos:column="16">handler</name> <op:operator pos:line="132" pos:column="24">!=</op:operator> <name pos:line="132" pos:column="27">null</name></expr>)</condition><then pos:line="132" pos:column="32"> <block pos:line="132" pos:column="33">{
                <expr_stmt><expr><call><name pos:line="133" pos:column="17">handler</name><argument_list pos:line="133" pos:column="24">(<argument><expr><name pos:line="133" pos:column="25">this</name></expr></argument>, <argument><expr><op:operator pos:line="133" pos:column="31">new</op:operator> <call><name pos:line="133" pos:column="35">PropertyChangedEventArgs</name><argument_list pos:line="133" pos:column="59">(<argument><expr><name pos:line="133" pos:column="60">name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="137" pos:column="9">private</specifier> <name><name pos:line="137" pos:column="17">IEnumerable</name><argument_list pos:line="137" pos:column="28">&lt;<argument><name pos:line="137" pos:column="29">MethodDefinition</name></argument>&gt;</argument_list></name></type> <name pos:line="137" pos:column="47">GetMatches</name><parameter_list pos:line="137" pos:column="57">()</parameter_list> <block pos:line="137" pos:column="60">{
            <throw pos:line="138" pos:column="13">throw <expr><op:operator pos:line="138" pos:column="19">new</op:operator> <call><name pos:line="138" pos:column="23">NotImplementedException</name><argument_list pos:line="138" pos:column="46">()</argument_list></call></expr>;</throw>
            <comment type="line" pos:line="139" pos:column="13">//var matches = (from method in Data.FindMatches()</comment>
            <comment type="line" pos:line="140" pos:column="13">//               select new MethodDefinition(Archive, method, this)).Distinct(new MethodDefinitionComparer());</comment>
            <comment type="line" pos:line="141" pos:column="13">//return matches;</comment>
        }</block></function>

        <function><type><specifier pos:line="144" pos:column="9">private</specifier> <name pos:line="144" pos:column="17">string</name></type> <name pos:line="144" pos:column="24">GetSourceCode</name><parameter_list pos:line="144" pos:column="37">()</parameter_list> <block pos:line="144" pos:column="40">{
            <decl_stmt><decl><type><name pos:line="145" pos:column="13">var</name></type> <name pos:line="145" pos:column="17">element</name> <init pos:line="145" pos:column="25">= <expr><call><name><name pos:line="145" pos:column="27">DataHelpers</name><op:operator pos:line="145" pos:column="38">.</op:operator><name pos:line="145" pos:column="39">GetElement</name></name><argument_list pos:line="145" pos:column="49">(<argument><expr><name pos:line="145" pos:column="50">Archive</name></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="59">Data</name><op:operator pos:line="145" pos:column="63">.</op:operator><name pos:line="145" pos:column="64">Location</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <return pos:line="147" pos:column="13">return <expr><call><name><name pos:line="147" pos:column="20">element</name><op:operator pos:line="147" pos:column="27">.</op:operator><name pos:line="147" pos:column="28">ToSource</name></name><argument_list pos:line="147" pos:column="36">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="150" pos:column="9">private</specifier> <name pos:line="150" pos:column="17">void</name></type> <name pos:line="150" pos:column="22">method_PropertyChanged</name><parameter_list pos:line="150" pos:column="44">(<param><decl><type><name pos:line="150" pos:column="45">object</name></type> <name pos:line="150" pos:column="52">sender</name></decl></param>, <param><decl><type><name pos:line="150" pos:column="60">PropertyChangedEventArgs</name></type> <name pos:line="150" pos:column="85">e</name></decl></param>)</parameter_list> <block pos:line="150" pos:column="88">{
            <if pos:line="151" pos:column="13">if<condition pos:line="151" pos:column="15">(<expr><call><name><name pos:line="151" pos:column="16">e</name><op:operator pos:line="151" pos:column="17">.</op:operator><name pos:line="151" pos:column="18">PropertyName</name><op:operator pos:line="151" pos:column="30">.</op:operator><name pos:line="151" pos:column="31">Equals</name></name><argument_list pos:line="151" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="151" pos:column="38">"IsValidForCall"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="151" pos:column="56"> <block pos:line="151" pos:column="57">{
                <decl_stmt><decl><type><name pos:line="152" pos:column="17">var</name></type> <name pos:line="152" pos:column="21">method</name> <init pos:line="152" pos:column="28">= <expr><name pos:line="152" pos:column="30">sender</name> <op:operator pos:line="152" pos:column="37">as</op:operator> <name pos:line="152" pos:column="40">MethodDefinition</name></expr></init></decl>;</decl_stmt>
                <if pos:line="153" pos:column="17">if<condition pos:line="153" pos:column="19">(<expr><name pos:line="153" pos:column="20">method</name> <op:operator pos:line="153" pos:column="27">!=</op:operator> <name pos:line="153" pos:column="30">null</name></expr>)</condition><then pos:line="153" pos:column="35"> <block pos:line="153" pos:column="36">{
                    <expr_stmt><expr><name pos:line="154" pos:column="21">NumberOfValidMatches</name> <op:operator pos:line="154" pos:column="42">+=</op:operator> <op:operator pos:line="154" pos:column="45">(</op:operator><name><name pos:line="154" pos:column="46">method</name><op:operator pos:line="154" pos:column="52">.</op:operator><name pos:line="154" pos:column="53">IsValidForCall</name> <type:modifier pos:line="154" pos:column="68">?</type:modifier></name> <lit:literal type="number" pos:line="154" pos:column="70">1</lit:literal> <op:operator pos:line="154" pos:column="72">:</op:operator> <op:operator pos:line="154" pos:column="74">-</op:operator><lit:literal type="number" pos:line="154" pos:column="75">1</lit:literal><op:operator pos:line="154" pos:column="76">)</op:operator></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="159" pos:column="9">private</specifier> <name pos:line="159" pos:column="17">void</name></type> <name pos:line="159" pos:column="22">method0_PropertyChanged</name><parameter_list pos:line="159" pos:column="45">(<param><decl><type><name pos:line="159" pos:column="46">object</name></type> <name pos:line="159" pos:column="53">sender</name></decl></param>, <param><decl><type><name pos:line="159" pos:column="61">PropertyChangedEventArgs</name></type> <name pos:line="159" pos:column="86">e</name></decl></param>)</parameter_list> <block pos:line="159" pos:column="89">{
            <if pos:line="160" pos:column="13">if<condition pos:line="160" pos:column="15">(<expr><call><name><name pos:line="160" pos:column="16">e</name><op:operator pos:line="160" pos:column="17">.</op:operator><name pos:line="160" pos:column="18">PropertyName</name><op:operator pos:line="160" pos:column="30">.</op:operator><name pos:line="160" pos:column="31">Equals</name></name><argument_list pos:line="160" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="160" pos:column="38">"IsValidForCall"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="160" pos:column="56"> <block pos:line="160" pos:column="57">{
                <decl_stmt><decl><type><name pos:line="161" pos:column="17">var</name></type> <name pos:line="161" pos:column="21">method</name> <init pos:line="161" pos:column="28">= <expr><name pos:line="161" pos:column="30">sender</name> <op:operator pos:line="161" pos:column="37">as</op:operator> <name pos:line="161" pos:column="40">MethodDefinition</name></expr></init></decl>;</decl_stmt>
                <if pos:line="162" pos:column="17">if<condition pos:line="162" pos:column="19">(<expr><name pos:line="162" pos:column="20">method</name> <op:operator pos:line="162" pos:column="27">!=</op:operator> <name pos:line="162" pos:column="30">null</name></expr>)</condition><then pos:line="162" pos:column="35"> <block pos:line="162" pos:column="36">{
                    <expr_stmt><expr><name pos:line="163" pos:column="21">FirstMatchIsValid</name> <op:operator pos:line="163" pos:column="39">=</op:operator> <name><name pos:line="163" pos:column="41">method</name><op:operator pos:line="163" pos:column="47">.</op:operator><name pos:line="163" pos:column="48">IsValidForCall</name></name></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="168" pos:column="9">private</specifier> <name pos:line="168" pos:column="17">void</name></type> <name pos:line="168" pos:column="22">StartMonitoringDefinitions</name><parameter_list pos:line="168" pos:column="48">()</parameter_list> <block pos:line="168" pos:column="51">{
            <decl_stmt><decl><type><name pos:line="169" pos:column="13">MethodDefinition</name></type> <name pos:line="169" pos:column="30">first</name> <init pos:line="169" pos:column="36">= <expr><name pos:line="169" pos:column="38">null</name></expr></init></decl>;</decl_stmt>
            <foreach pos:line="170" pos:column="13">foreach(<init><decl><type><name pos:line="170" pos:column="21">var</name></type> <name pos:line="170" pos:column="25">method</name> <range pos:line="170" pos:column="32">in <expr><name pos:line="170" pos:column="35">PossibleMatches</name></expr></range></decl></init>) <block pos:line="170" pos:column="52">{
                <if pos:line="171" pos:column="17">if<condition pos:line="171" pos:column="19">(<expr><name pos:line="171" pos:column="20">first</name> <op:operator pos:line="171" pos:column="26">==</op:operator> <name pos:line="171" pos:column="29">null</name></expr>)</condition><then pos:line="171" pos:column="34"> <block pos:line="171" pos:column="35">{
                    <expr_stmt><expr><name pos:line="172" pos:column="21">first</name> <op:operator pos:line="172" pos:column="27">=</op:operator> <name pos:line="172" pos:column="29">method</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name pos:line="173" pos:column="21">method</name><op:operator pos:line="173" pos:column="27">.</op:operator><name pos:line="173" pos:column="28">PropertyChanged</name></name> <op:operator pos:line="173" pos:column="44">+=</op:operator> <name pos:line="173" pos:column="47">method0_PropertyChanged</name></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><name><name pos:line="175" pos:column="17">method</name><op:operator pos:line="175" pos:column="23">.</op:operator><name pos:line="175" pos:column="24">PropertyChanged</name></name> <op:operator pos:line="175" pos:column="40">+=</op:operator> <name pos:line="175" pos:column="43">method_PropertyChanged</name></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
