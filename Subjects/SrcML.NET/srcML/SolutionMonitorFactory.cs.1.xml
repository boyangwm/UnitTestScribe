<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\VisualStudio\ABB.SrcML.VisualStudio.SolutionMonitor\SolutionMonitorFactory.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2011 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Jiang Zheng (ABB Group) - Initial implementation
 *****************************************************************************/</comment>
<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">System</name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">System</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">Collections</name><op:operator pos:line="12" pos:column="25">.</op:operator><name pos:line="12" pos:column="26">Generic</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Diagnostics</name><op:operator pos:line="13" pos:column="25">.</op:operator><name pos:line="13" pos:column="26">Contracts</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">IO</name></name>;</using>
<using pos:line="15" pos:column="1">using <name pos:line="15" pos:column="7">EnvDTE</name>;</using>
<using pos:line="16" pos:column="1">using <name pos:line="16" pos:column="7">EnvDTE80</name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">Microsoft</name><op:operator pos:line="17" pos:column="16">.</op:operator><name pos:line="17" pos:column="17">VisualStudio</name><op:operator pos:line="17" pos:column="29">.</op:operator><name pos:line="17" pos:column="30">Shell</name></name>;</using>

<namespace pos:line="19" pos:column="1">namespace <name><name pos:line="19" pos:column="11">ABB</name><op:operator pos:line="19" pos:column="14">.</op:operator><name pos:line="19" pos:column="15">SrcML</name><op:operator pos:line="19" pos:column="20">.</op:operator><name pos:line="19" pos:column="21">VisualStudio</name><op:operator pos:line="19" pos:column="33">.</op:operator><name pos:line="19" pos:column="34">SolutionMonitor</name></name> <block pos:line="19" pos:column="50">{
    <comment type="line" pos:line="20" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="21" pos:column="5">/// Factory class for creating the instance of solution monitor.</comment>
    <comment type="line" pos:line="22" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="23" pos:column="5">public</specifier> class <name pos:line="23" pos:column="18">SolutionMonitorFactory</name> <block pos:line="23" pos:column="41">{
        <comment type="line" pos:line="24" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="25" pos:column="9">/// Create an instance of solution monitor.</comment>
        <comment type="line" pos:line="26" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="27" pos:column="9">/// &lt;param name="SrcMLServiceDirectory"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="28" pos:column="9">/// &lt;param name="lastModifiedArchive"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="29" pos:column="9">/// &lt;param name="CurrentSrcMLArchive"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="30" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="31" pos:column="9">public</specifier> <specifier pos:line="31" pos:column="16">static</specifier> <name pos:line="31" pos:column="23">SolutionMonitor</name></type> <name pos:line="31" pos:column="39">CreateMonitor</name><parameter_list pos:line="31" pos:column="52">(<param><decl><type><name pos:line="31" pos:column="53">string</name></type> <name pos:line="31" pos:column="60">SrcMLServiceDirectory</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="83">AbstractArchive</name></type> <name pos:line="31" pos:column="99">lastModifiedArchive</name></decl></param>, <param><decl><type><specifier pos:line="31" pos:column="120">params</specifier> <name><name pos:line="31" pos:column="127">AbstractArchive</name><index pos:line="31" pos:column="142">[]</index></name></type> <name pos:line="31" pos:column="145">CurrentSrcMLArchive</name></decl></param>)</parameter_list> <block pos:line="31" pos:column="166">{
            <decl_stmt><decl><type><name pos:line="32" pos:column="13">var</name></type> <name pos:line="32" pos:column="17">openSolution</name> <init pos:line="32" pos:column="30">= <expr><call><name pos:line="32" pos:column="32">GetOpenSolution</name><argument_list pos:line="32" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="33" pos:column="13">return <expr><call><name pos:line="33" pos:column="20">CreateMonitor</name><argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">openSolution</name></expr></argument>, <argument><expr><name pos:line="33" pos:column="48">SrcMLServiceDirectory</name></expr></argument>, <argument><expr><name pos:line="33" pos:column="71">lastModifiedArchive</name></expr></argument>, <argument><expr><name pos:line="33" pos:column="92">CurrentSrcMLArchive</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="36" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="37" pos:column="9">/// Create an instance of solution monitor.</comment>
        <comment type="line" pos:line="38" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="39" pos:column="9">/// &lt;param name="openSolution"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="40" pos:column="9">/// &lt;param name="SrcMLServiceDirectory"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="41" pos:column="9">/// &lt;param name="lastModifiedArchive"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="42" pos:column="9">/// &lt;param name="CurrentSrcMLArchive"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="43" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="44" pos:column="9">private</specifier> <specifier pos:line="44" pos:column="17">static</specifier> <name pos:line="44" pos:column="24">SolutionMonitor</name></type> <name pos:line="44" pos:column="40">CreateMonitor</name><parameter_list pos:line="44" pos:column="53">(<param><decl><type><name pos:line="44" pos:column="54">Solution</name></type> <name pos:line="44" pos:column="63">openSolution</name></decl></param>, <param><decl><type><name pos:line="44" pos:column="77">string</name></type> <name pos:line="44" pos:column="84">SrcMLServiceDirectory</name></decl></param>, <param><decl><type><name pos:line="44" pos:column="107">AbstractArchive</name></type> <name pos:line="44" pos:column="123">lastModifiedArchive</name></decl></param>, <param><decl><type><specifier pos:line="44" pos:column="144">params</specifier> <name><name pos:line="44" pos:column="151">AbstractArchive</name><index pos:line="44" pos:column="166">[]</index></name></type> <name pos:line="44" pos:column="169">CurrentSrcMLArchive</name></decl></param>)</parameter_list> <block pos:line="44" pos:column="190">{
            <expr_stmt><expr><call><name><name pos:line="45" pos:column="13">Contract</name><op:operator pos:line="45" pos:column="21">.</op:operator><name pos:line="45" pos:column="22">Requires</name></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">openSolution</name> <op:operator pos:line="45" pos:column="44">!=</op:operator> <name pos:line="45" pos:column="47">null</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="45" pos:column="53">"A solution must be open"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="47" pos:column="13">var</name></type> <name pos:line="47" pos:column="17">currentMonitor</name> <init pos:line="47" pos:column="32">= <expr><op:operator pos:line="47" pos:column="34">new</op:operator> <call><name pos:line="47" pos:column="38">SolutionMonitor</name><argument_list pos:line="47" pos:column="53">(<argument><expr><call><name><name pos:line="47" pos:column="54">SolutionWrapper</name><op:operator pos:line="47" pos:column="69">.</op:operator><name pos:line="47" pos:column="70">Create</name></name><argument_list pos:line="47" pos:column="76">(<argument><expr><name pos:line="47" pos:column="77">openSolution</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="47" pos:column="92">SrcMLServiceDirectory</name></expr></argument>, <argument><expr><name pos:line="47" pos:column="115">lastModifiedArchive</name></expr></argument>, <argument><expr><name pos:line="47" pos:column="136">CurrentSrcMLArchive</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="48" pos:column="13">return <expr><name pos:line="48" pos:column="20">currentMonitor</name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="51" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="52" pos:column="9">/// Get the open solution.</comment>
        <comment type="line" pos:line="53" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="54" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="55" pos:column="9">public</specifier> <specifier pos:line="55" pos:column="16">static</specifier> <name pos:line="55" pos:column="23">Solution</name></type> <name pos:line="55" pos:column="32">GetOpenSolution</name><parameter_list pos:line="55" pos:column="47">()</parameter_list> <block pos:line="55" pos:column="50">{
            <decl_stmt><decl><type><name pos:line="56" pos:column="13">var</name></type> <name pos:line="56" pos:column="17">dte</name> <init pos:line="56" pos:column="21">= <expr><call><name><name pos:line="56" pos:column="23">Package</name><op:operator pos:line="56" pos:column="30">.</op:operator><name pos:line="56" pos:column="31">GetGlobalService</name></name><argument_list pos:line="56" pos:column="47">(<argument><expr><call><name pos:line="56" pos:column="48">typeof</name><argument_list pos:line="56" pos:column="54">(<argument><expr><name pos:line="56" pos:column="55">DTE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="56" pos:column="61">as</op:operator> <name pos:line="56" pos:column="64">DTE2</name></expr></init></decl>;</decl_stmt>
            <if pos:line="57" pos:column="13">if<condition pos:line="57" pos:column="15">(<expr><name pos:line="57" pos:column="16">dte</name> <op:operator pos:line="57" pos:column="20">!=</op:operator> <name pos:line="57" pos:column="23">null</name></expr>)</condition><then pos:line="57" pos:column="28"> <block pos:line="57" pos:column="29">{
                <decl_stmt><decl><type><name pos:line="58" pos:column="17">var</name></type> <name pos:line="58" pos:column="21">openSolution</name> <init pos:line="58" pos:column="34">= <expr><name><name pos:line="58" pos:column="36">dte</name><op:operator pos:line="58" pos:column="39">.</op:operator><name pos:line="58" pos:column="40">Solution</name></name></expr></init></decl>;</decl_stmt>
                <return pos:line="59" pos:column="17">return <expr><name pos:line="59" pos:column="24">openSolution</name></expr>;</return>
            }</block></then> <else pos:line="60" pos:column="15">else <block pos:line="60" pos:column="20">{
                <return pos:line="61" pos:column="17">return <expr><name pos:line="61" pos:column="24">null</name></expr>;</return>
            }</block></else></if>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
