<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\Tools\ABB.SrcML.Tools.Src2SrcMLPreview\Src2SrcMLPreviewWindow.xaml.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2010 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Vinay Augustine (ABB Group) - initial API, implementation, &amp; documentation
 *    Vinay Augustine (ABB Group) - Added support for SrcMLGenerator.
 *****************************************************************************/</comment>

<using pos:line="13" pos:column="1">using <name pos:line="13" pos:column="7">System</name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Collections</name><op:operator pos:line="14" pos:column="25">.</op:operator><name pos:line="14" pos:column="26">Generic</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">Linq</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Text</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">System</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Windows</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">System</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">Windows</name><op:operator pos:line="18" pos:column="21">.</op:operator><name pos:line="18" pos:column="22">Controls</name></name>;</using>
<using pos:line="19" pos:column="1">using <name><name pos:line="19" pos:column="7">System</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">Windows</name><op:operator pos:line="19" pos:column="21">.</op:operator><name pos:line="19" pos:column="22">Data</name></name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">System</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">Windows</name><op:operator pos:line="20" pos:column="21">.</op:operator><name pos:line="20" pos:column="22">Documents</name></name>;</using>
<using pos:line="21" pos:column="1">using <name><name pos:line="21" pos:column="7">System</name><op:operator pos:line="21" pos:column="13">.</op:operator><name pos:line="21" pos:column="14">Windows</name><op:operator pos:line="21" pos:column="21">.</op:operator><name pos:line="21" pos:column="22">Input</name></name>;</using>
<using pos:line="22" pos:column="1">using <name><name pos:line="22" pos:column="7">System</name><op:operator pos:line="22" pos:column="13">.</op:operator><name pos:line="22" pos:column="14">Windows</name><op:operator pos:line="22" pos:column="21">.</op:operator><name pos:line="22" pos:column="22">Media</name></name>;</using>
<using pos:line="23" pos:column="1">using <name><name pos:line="23" pos:column="7">System</name><op:operator pos:line="23" pos:column="13">.</op:operator><name pos:line="23" pos:column="14">Windows</name><op:operator pos:line="23" pos:column="21">.</op:operator><name pos:line="23" pos:column="22">Media</name><op:operator pos:line="23" pos:column="27">.</op:operator><name pos:line="23" pos:column="28">Imaging</name></name>;</using>
<using pos:line="24" pos:column="1">using <name><name pos:line="24" pos:column="7">System</name><op:operator pos:line="24" pos:column="13">.</op:operator><name pos:line="24" pos:column="14">Windows</name><op:operator pos:line="24" pos:column="21">.</op:operator><name pos:line="24" pos:column="22">Navigation</name></name>;</using>
<using pos:line="25" pos:column="1">using <name><name pos:line="25" pos:column="7">System</name><op:operator pos:line="25" pos:column="13">.</op:operator><name pos:line="25" pos:column="14">Windows</name><op:operator pos:line="25" pos:column="21">.</op:operator><name pos:line="25" pos:column="22">Shapes</name></name>;</using>
<using pos:line="26" pos:column="1">using <name><name pos:line="26" pos:column="7">ABB</name><op:operator pos:line="26" pos:column="10">.</op:operator><name pos:line="26" pos:column="11">SrcML</name></name>;</using>
<using pos:line="27" pos:column="1">using <name><name pos:line="27" pos:column="7">System</name><op:operator pos:line="27" pos:column="13">.</op:operator><name pos:line="27" pos:column="14">Xml</name><op:operator pos:line="27" pos:column="17">.</op:operator><name pos:line="27" pos:column="18">Linq</name></name>;</using>
<using pos:line="28" pos:column="1">using <name><name pos:line="28" pos:column="7">ABB</name><op:operator pos:line="28" pos:column="10">.</op:operator><name pos:line="28" pos:column="11">SrcML</name><op:operator pos:line="28" pos:column="16">.</op:operator><name pos:line="28" pos:column="17">Utilities</name></name>;</using>
<using pos:line="29" pos:column="1">using <name><name pos:line="29" pos:column="7">System</name><op:operator pos:line="29" pos:column="13">.</op:operator><name pos:line="29" pos:column="14">Collections</name><op:operator pos:line="29" pos:column="25">.</op:operator><name pos:line="29" pos:column="26">ObjectModel</name></name>;</using>
<using pos:line="30" pos:column="1">using <name pos:line="30" pos:column="7">Forms</name> <init pos:line="30" pos:column="13">= <expr><name><name pos:line="30" pos:column="15">System</name><op:operator pos:line="30" pos:column="21">.</op:operator><name pos:line="30" pos:column="22">Windows</name><op:operator pos:line="30" pos:column="29">.</op:operator><name pos:line="30" pos:column="30">Forms</name></name></expr></init>;</using>
<using pos:line="31" pos:column="1">using <name><name pos:line="31" pos:column="7">System</name><op:operator pos:line="31" pos:column="13">.</op:operator><name pos:line="31" pos:column="14">ComponentModel</name></name>;</using>

<namespace pos:line="33" pos:column="1">namespace <name><name pos:line="33" pos:column="11">ABB</name><op:operator pos:line="33" pos:column="14">.</op:operator><name pos:line="33" pos:column="15">SrcML</name><op:operator pos:line="33" pos:column="20">.</op:operator><name pos:line="33" pos:column="21">Tools</name><op:operator pos:line="33" pos:column="26">.</op:operator><name pos:line="33" pos:column="27">Src2SrcMLPreview</name></name>
<block pos:line="34" pos:column="1">{
    <comment type="line" pos:line="35" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="36" pos:column="5">/// Interaction logic for Src2SrcMLPreviewWindow.xaml</comment>
    <comment type="line" pos:line="37" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="38" pos:column="5">public</specifier> <specifier pos:line="38" pos:column="12">partial</specifier> class <name pos:line="38" pos:column="26">Src2SrcMLPreviewWindow</name> <super pos:line="38" pos:column="49">: <name pos:line="38" pos:column="51">Window</name></super>
    <block pos:line="39" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="40" pos:column="9">private</specifier> <name pos:line="40" pos:column="17">bool</name></type> <name pos:line="40" pos:column="22">binDirIsValid</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="41" pos:column="9">private</specifier> <name pos:line="41" pos:column="17">SrcMLGenerator</name></type> <name pos:line="41" pos:column="32">_xmlGenerator</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="42" pos:column="9">private</specifier> <name pos:line="42" pos:column="17">string</name></type> <name pos:line="42" pos:column="24">_xml</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="43" pos:column="9">private</specifier> <name pos:line="43" pos:column="17">Language</name></type> <name pos:line="43" pos:column="26">_language</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="44" pos:column="9">private</specifier> <name><name pos:line="44" pos:column="17">Forms</name><op:operator pos:line="44" pos:column="22">.</op:operator><name pos:line="44" pos:column="23">FolderBrowserDialog</name></name></type> <name pos:line="44" pos:column="43">directorySelector</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="45" pos:column="9">private</specifier> <specifier pos:line="45" pos:column="17">static</specifier> <name><name pos:line="45" pos:column="24">Collection</name><argument_list pos:line="45" pos:column="34">&lt;<argument><name pos:line="45" pos:column="35">string</name></argument>&gt;</argument_list></name></type> <name pos:line="45" pos:column="43">_namespaceArguments</name> <init pos:line="45" pos:column="63">= <expr><op:operator pos:line="45" pos:column="65">new</op:operator> <call><name><name pos:line="45" pos:column="69">Collection</name><argument_list pos:line="45" pos:column="79">&lt;<argument><name pos:line="45" pos:column="80">string</name></argument>&gt;</argument_list></name><argument_list pos:line="45" pos:column="87">()</argument_list></call> <block pos:line="45" pos:column="90">{ <expr><name><name pos:line="45" pos:column="92">LIT</name><op:operator pos:line="45" pos:column="95">.</op:operator><name pos:line="45" pos:column="96">ArgumentLabel</name></name></expr>, <expr><name><name pos:line="45" pos:column="111">OP</name><op:operator pos:line="45" pos:column="113">.</op:operator><name pos:line="45" pos:column="114">ArgumentLabel</name></name></expr>, <expr><name><name pos:line="45" pos:column="129">TYPE</name><op:operator pos:line="45" pos:column="133">.</op:operator><name pos:line="45" pos:column="134">ArgumentLabel</name></name></expr> }</block></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="46" pos:column="9">private</specifier> <specifier pos:line="46" pos:column="17">static</specifier> <name><name pos:line="46" pos:column="24">Collection</name><argument_list pos:line="46" pos:column="34">&lt;<argument><name pos:line="46" pos:column="35">string</name></argument>&gt;</argument_list></name></type> <name pos:line="46" pos:column="43">_namespaceArgumentsWithPosition</name> <init pos:line="46" pos:column="75">= <expr><op:operator pos:line="46" pos:column="77">new</op:operator> <call><name><name pos:line="46" pos:column="81">Collection</name><argument_list pos:line="46" pos:column="91">&lt;<argument><name pos:line="46" pos:column="92">string</name></argument>&gt;</argument_list></name><argument_list pos:line="46" pos:column="99">()</argument_list></call> <block pos:line="46" pos:column="102">{ <expr><name><name pos:line="46" pos:column="104">LIT</name><op:operator pos:line="46" pos:column="107">.</op:operator><name pos:line="46" pos:column="108">ArgumentLabel</name></name></expr>, <expr><name><name pos:line="46" pos:column="123">OP</name><op:operator pos:line="46" pos:column="125">.</op:operator><name pos:line="46" pos:column="126">ArgumentLabel</name></name></expr>, <expr><name><name pos:line="46" pos:column="141">TYPE</name><op:operator pos:line="46" pos:column="145">.</op:operator><name pos:line="46" pos:column="146">ArgumentLabel</name></name></expr>, <expr><name><name pos:line="46" pos:column="161">POS</name><op:operator pos:line="46" pos:column="164">.</op:operator><name pos:line="46" pos:column="165">ArgumentLabel</name></name></expr> }</block></expr></init></decl>;</decl_stmt>


        <decl_stmt><decl><type><specifier pos:line="49" pos:column="9">public</specifier> <name pos:line="49" pos:column="16">SrcMLGenerator</name></type> <name pos:line="49" pos:column="31">XmlGenerator</name> <block pos:line="49" pos:column="44">{
            <function><name pos:line="50" pos:column="13">get</name> <block pos:line="50" pos:column="17">{ <return pos:line="50" pos:column="19">return <expr><name><name pos:line="50" pos:column="26">this</name><op:operator pos:line="50" pos:column="30">.</op:operator><name pos:line="50" pos:column="31">_xmlGenerator</name></name></expr>;</return>  }</block></function>
            <function><name pos:line="51" pos:column="13">set</name> <block pos:line="51" pos:column="17">{
                <expr_stmt><expr><name><name pos:line="52" pos:column="17">this</name><op:operator pos:line="52" pos:column="21">.</op:operator><name pos:line="52" pos:column="22">_xmlGenerator</name></name> <op:operator pos:line="52" pos:column="36">=</op:operator> <name pos:line="52" pos:column="38">value</name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="53" pos:column="17">UpdateSupportedLanguages</name><argument_list pos:line="53" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>
        <constructor><specifier pos:line="56" pos:column="9">public</specifier> <name pos:line="56" pos:column="16">Src2SrcMLPreviewWindow</name><parameter_list pos:line="56" pos:column="38">()</parameter_list>
        <block pos:line="57" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="58" pos:column="13">ToggleShowPositionCommand</name><op:operator pos:line="58" pos:column="38">.</op:operator><name pos:line="58" pos:column="39">InputGestures</name><op:operator pos:line="58" pos:column="52">.</op:operator><name pos:line="58" pos:column="53">Add</name></name><argument_list pos:line="58" pos:column="56">(<argument><expr><op:operator pos:line="58" pos:column="57">new</op:operator> <call><name pos:line="58" pos:column="61">KeyGesture</name><argument_list pos:line="58" pos:column="71">(<argument><expr><name><name pos:line="58" pos:column="72">Key</name><op:operator pos:line="58" pos:column="75">.</op:operator><name pos:line="58" pos:column="76">P</name></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="79">ModifierKeys</name><op:operator pos:line="58" pos:column="91">.</op:operator><name pos:line="58" pos:column="92">Alt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="59" pos:column="13">SelectSrcMLDirectoryCommand</name><op:operator pos:line="59" pos:column="40">.</op:operator><name pos:line="59" pos:column="41">InputGestures</name><op:operator pos:line="59" pos:column="54">.</op:operator><name pos:line="59" pos:column="55">Add</name></name><argument_list pos:line="59" pos:column="58">(<argument><expr><op:operator pos:line="59" pos:column="59">new</op:operator> <call><name pos:line="59" pos:column="63">KeyGesture</name><argument_list pos:line="59" pos:column="73">(<argument><expr><name><name pos:line="59" pos:column="74">Key</name><op:operator pos:line="59" pos:column="77">.</op:operator><name pos:line="59" pos:column="78">D</name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="81">ModifierKeys</name><op:operator pos:line="59" pos:column="93">.</op:operator><name pos:line="59" pos:column="94">Alt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="61" pos:column="13">binDirIsValid</name> <op:operator pos:line="61" pos:column="27">=</op:operator> <lit:literal type="boolean" pos:line="61" pos:column="29">true</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="62" pos:column="13">directorySelector</name> <op:operator pos:line="62" pos:column="31">=</op:operator> <op:operator pos:line="62" pos:column="33">new</op:operator> <call><name><name pos:line="62" pos:column="37">System</name><op:operator pos:line="62" pos:column="43">.</op:operator><name pos:line="62" pos:column="44">Windows</name><op:operator pos:line="62" pos:column="51">.</op:operator><name pos:line="62" pos:column="52">Forms</name><op:operator pos:line="62" pos:column="57">.</op:operator><name pos:line="62" pos:column="58">FolderBrowserDialog</name></name><argument_list pos:line="62" pos:column="77">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">directorySelector</name><op:operator pos:line="63" pos:column="30">.</op:operator><name pos:line="63" pos:column="31">ShowNewFolderButton</name></name> <op:operator pos:line="63" pos:column="51">=</op:operator> <lit:literal type="boolean" pos:line="63" pos:column="53">false</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="64" pos:column="13">directorySelector</name><op:operator pos:line="64" pos:column="30">.</op:operator><name pos:line="64" pos:column="31">SelectedPath</name></name> <op:operator pos:line="64" pos:column="44">=</op:operator> <call><name><name pos:line="64" pos:column="46">SrcMLHelper</name><op:operator pos:line="64" pos:column="57">.</op:operator><name pos:line="64" pos:column="58">GetSrcMLDefaultDirectory</name></name><argument_list pos:line="64" pos:column="82">()</argument_list></call></expr>;</expr_stmt>
            
            <expr_stmt><expr><name pos:line="66" pos:column="13">_language</name> <op:operator pos:line="66" pos:column="23">=</op:operator> <name><name pos:line="66" pos:column="25">ABB</name><op:operator pos:line="66" pos:column="28">.</op:operator><name pos:line="66" pos:column="29">SrcML</name><op:operator pos:line="66" pos:column="34">.</op:operator><name pos:line="66" pos:column="35">Language</name><op:operator pos:line="66" pos:column="43">.</op:operator><name pos:line="66" pos:column="44">CPlusPlus</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">InitializeComponent</name><argument_list pos:line="67" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="68" pos:column="13">XmlGenerator</name> <op:operator pos:line="68" pos:column="26">=</op:operator> <op:operator pos:line="68" pos:column="28">new</op:operator> <call><name pos:line="68" pos:column="32">SrcMLGenerator</name><argument_list pos:line="68" pos:column="46">(<argument><expr><name><name pos:line="68" pos:column="47">directorySelector</name><op:operator pos:line="68" pos:column="64">.</op:operator><name pos:line="68" pos:column="65">SelectedPath</name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="79">_namespaceArguments</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="71" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="72" pos:column="9">/// Static command to route "Alt-P" to the "show position" menu item</comment>
        <comment type="line" pos:line="73" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="74" pos:column="9">public</specifier> <specifier pos:line="74" pos:column="16">static</specifier> <name pos:line="74" pos:column="23">RoutedCommand</name></type> <name pos:line="74" pos:column="37">ToggleShowPositionCommand</name> <init pos:line="74" pos:column="63">= <expr><op:operator pos:line="74" pos:column="65">new</op:operator> <call><name pos:line="74" pos:column="69">RoutedCommand</name><argument_list pos:line="74" pos:column="82">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:line="76" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="77" pos:column="9">/// Static command to route "Alt-D" to the "Select SrcML Directory" menu item</comment>
        <comment type="line" pos:line="78" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="79" pos:column="9">public</specifier> <specifier pos:line="79" pos:column="16">static</specifier> <name pos:line="79" pos:column="23">RoutedCommand</name></type> <name pos:line="79" pos:column="37">SelectSrcMLDirectoryCommand</name> <init pos:line="79" pos:column="65">= <expr><op:operator pos:line="79" pos:column="67">new</op:operator> <call><name pos:line="79" pos:column="71">RoutedCommand</name><argument_list pos:line="79" pos:column="84">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="81" pos:column="9">private</specifier> <name pos:line="81" pos:column="17">void</name></type> <name pos:line="81" pos:column="22">sourceBox_TextChanged</name><parameter_list pos:line="81" pos:column="43">(<param><decl><type><name pos:line="81" pos:column="44">object</name></type> <name pos:line="81" pos:column="51">sender</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="59">TextChangedEventArgs</name></type> <name pos:line="81" pos:column="80">e</name></decl></param>)</parameter_list>
        <block pos:line="82" pos:column="9">{
            <if pos:line="83" pos:column="13">if <condition pos:line="83" pos:column="16">(<expr><lit:literal type="number" pos:line="83" pos:column="17">0</lit:literal> <op:operator pos:line="83" pos:column="19">==</op:operator> <name><name pos:line="83" pos:column="22">sourceBox</name><op:operator pos:line="83" pos:column="31">.</op:operator><name pos:line="83" pos:column="32">Text</name><op:operator pos:line="83" pos:column="36">.</op:operator><name pos:line="83" pos:column="37">Length</name></name></expr>)</condition><then pos:line="83" pos:column="44">
                <expr_stmt><expr><name><name pos:line="84" pos:column="17">srcmlBox</name><op:operator pos:line="84" pos:column="25">.</op:operator><name pos:line="84" pos:column="26">Text</name></name> <op:operator pos:line="84" pos:column="31">=</op:operator> <lit:literal type="string" pos:line="84" pos:column="33">""</lit:literal></expr>;</expr_stmt></then>
            <else pos:line="85" pos:column="13">else
            <block pos:line="86" pos:column="13">{
                <if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><name pos:line="87" pos:column="21">binDirIsValid</name></expr>)</condition><then pos:line="87" pos:column="35">
                <block pos:line="88" pos:column="17">{
                    <try pos:line="89" pos:column="21">try
                    <block pos:line="90" pos:column="21">{
                        <expr_stmt><expr><name pos:line="91" pos:column="25">_xml</name> <op:operator pos:line="91" pos:column="30">=</op:operator> <call><name><name pos:line="91" pos:column="32">XmlGenerator</name><op:operator pos:line="91" pos:column="44">.</op:operator><name pos:line="91" pos:column="45">GenerateSrcMLFromString</name></name><argument_list pos:line="91" pos:column="68">(<argument><expr><name><name pos:line="91" pos:column="69">sourceBox</name><op:operator pos:line="91" pos:column="78">.</op:operator><name pos:line="91" pos:column="79">Text</name></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="85">this</name><op:operator pos:line="91" pos:column="89">.</op:operator><name pos:line="91" pos:column="90">_language</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt><expr><name><name pos:line="93" pos:column="25">languageLabel</name><op:operator pos:line="93" pos:column="38">.</op:operator><name pos:line="93" pos:column="39">Content</name></name> <op:operator pos:line="93" pos:column="47">=</op:operator> <call><name><name pos:line="93" pos:column="49">String</name><op:operator pos:line="93" pos:column="55">.</op:operator><name pos:line="93" pos:column="56">Format</name></name><argument_list pos:line="93" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="63">"(Code parsed as {0})"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="93" pos:column="87">KsuAdapter</name><op:operator pos:line="93" pos:column="97">.</op:operator><name pos:line="93" pos:column="98">GetLanguage</name></name><argument_list pos:line="93" pos:column="109">(<argument><expr><name><name pos:line="93" pos:column="110">this</name><op:operator pos:line="93" pos:column="114">.</op:operator><name pos:line="93" pos:column="115">_language</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <decl_stmt><decl><type><name pos:line="94" pos:column="25">var</name></type> <name pos:line="94" pos:column="29">doc</name> <init pos:line="94" pos:column="33">= <expr><call><name><name pos:line="94" pos:column="35">XDocument</name><op:operator pos:line="94" pos:column="44">.</op:operator><name pos:line="94" pos:column="45">Parse</name></name><argument_list pos:line="94" pos:column="50">(<argument><expr><name pos:line="94" pos:column="51">_xml</name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="57">LoadOptions</name><op:operator pos:line="94" pos:column="68">.</op:operator><name pos:line="94" pos:column="69">PreserveWhitespace</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><name><name pos:line="95" pos:column="25">this</name><op:operator pos:line="95" pos:column="29">.</op:operator><name pos:line="95" pos:column="30">xmlTree</name><op:operator pos:line="95" pos:column="37">.</op:operator><name pos:line="95" pos:column="38">DataContext</name></name> <op:operator pos:line="95" pos:column="50">=</op:operator> <name pos:line="95" pos:column="52">doc</name></expr>;</expr_stmt>

                        <decl_stmt><decl><type><name pos:line="97" pos:column="25">int</name></type> <name pos:line="97" pos:column="29">startIndex</name> <init pos:line="97" pos:column="40">= <expr><call><name><name pos:line="97" pos:column="42">_xml</name><op:operator pos:line="97" pos:column="46">.</op:operator><name pos:line="97" pos:column="47">IndexOf</name></name><argument_list pos:line="97" pos:column="54">(<argument><expr><lit:literal type="char" pos:line="97" pos:column="55">'&lt;'</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="97" pos:column="60">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="98" pos:column="25">int</name></type> <name pos:line="98" pos:column="29">endIndex</name> <init pos:line="98" pos:column="38">= <expr><call><name><name pos:line="98" pos:column="40">_xml</name><op:operator pos:line="98" pos:column="44">.</op:operator><name pos:line="98" pos:column="45">LastIndexOf</name></name><argument_list pos:line="98" pos:column="56">(<argument><expr><lit:literal type="char" pos:line="98" pos:column="57">'&lt;'</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><name><name pos:line="99" pos:column="25">srcmlBox</name><op:operator pos:line="99" pos:column="33">.</op:operator><name pos:line="99" pos:column="34">Text</name></name> <op:operator pos:line="99" pos:column="39">=</op:operator> <call><name><name pos:line="99" pos:column="41">_xml</name><op:operator pos:line="99" pos:column="45">.</op:operator><name pos:line="99" pos:column="46">Substring</name></name><argument_list pos:line="99" pos:column="55">(<argument><expr><name pos:line="99" pos:column="56">startIndex</name></expr></argument>, <argument><expr><name pos:line="99" pos:column="68">endIndex</name> <op:operator pos:line="99" pos:column="77">-</op:operator> <name pos:line="99" pos:column="79">startIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block>
                    <catch pos:line="101" pos:column="21">catch <parameter_list pos:line="101" pos:column="27">(<param><decl><type><name pos:line="101" pos:column="28">Win32Exception</name></type></decl></param>)</parameter_list>
                    <block pos:line="102" pos:column="21">{
                        <expr_stmt><expr><call><name pos:line="103" pos:column="25">PrintErrorInSrcmlBox</name><argument_list pos:line="103" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="103" pos:column="46">"The SrcML directory does not contain a valid copy of src2srcml.exe.\n\nSelect a valid directory from File-&gt;Select SrcML Directory..."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><name><name pos:line="104" pos:column="25">this</name><op:operator pos:line="104" pos:column="29">.</op:operator><name pos:line="104" pos:column="30">binDirIsValid</name></name> <op:operator pos:line="104" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="104" pos:column="46">false</lit:literal></expr>;</expr_stmt>
                    }</block></catch></try>
                }</block></then></if>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="110" pos:column="9">private</specifier> <name pos:line="110" pos:column="17">void</name></type> <name pos:line="110" pos:column="22">MenuItemExit_Click</name><parameter_list pos:line="110" pos:column="40">(<param><decl><type><name pos:line="110" pos:column="41">object</name></type> <name pos:line="110" pos:column="48">sender</name></decl></param>, <param><decl><type><name pos:line="110" pos:column="56">RoutedEventArgs</name></type> <name pos:line="110" pos:column="72">e</name></decl></param>)</parameter_list>
        <block pos:line="111" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="112" pos:column="13">Environment</name><op:operator pos:line="112" pos:column="24">.</op:operator><name pos:line="112" pos:column="25">Exit</name></name><argument_list pos:line="112" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="112" pos:column="30">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="115" pos:column="9">private</specifier> <name pos:line="115" pos:column="17">void</name></type> <name pos:line="115" pos:column="22">MenuItemLanguage_Click</name><parameter_list pos:line="115" pos:column="44">(<param><decl><type><name pos:line="115" pos:column="45">object</name></type> <name pos:line="115" pos:column="52">sender</name></decl></param>, <param><decl><type><name pos:line="115" pos:column="60">RoutedEventArgs</name></type> <name pos:line="115" pos:column="76">e</name></decl></param>)</parameter_list>
        <block pos:line="116" pos:column="9">{
            <try pos:line="117" pos:column="13">try
            <block pos:line="118" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="119" pos:column="17">var</name></type> <name pos:line="119" pos:column="21">menuItem</name> <init pos:line="119" pos:column="30">= <expr><op:operator pos:line="119" pos:column="32">(</op:operator><name pos:line="119" pos:column="33">sender</name> <op:operator pos:line="119" pos:column="40">as</op:operator> <name pos:line="119" pos:column="43">MenuItem</name><op:operator pos:line="119" pos:column="51">)</op:operator></expr></init></decl>;</decl_stmt>

                <if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><name pos:line="121" pos:column="21">null</name> <op:operator pos:line="121" pos:column="26">!=</op:operator> <name pos:line="121" pos:column="29">menuItem</name> <op:operator pos:line="121" pos:column="38">&amp;&amp;</op:operator> <name><name pos:line="121" pos:column="41">menuItem</name><op:operator pos:line="121" pos:column="49">.</op:operator><name pos:line="121" pos:column="50">IsChecked</name></name></expr>)</condition><then pos:line="121" pos:column="60">
                <block pos:line="122" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="123" pos:column="21">menuItem</name><op:operator pos:line="123" pos:column="29">.</op:operator><name pos:line="123" pos:column="30">IsCheckable</name></name> <op:operator pos:line="123" pos:column="42">=</op:operator> <lit:literal type="boolean" pos:line="123" pos:column="44">false</lit:literal></expr>;</expr_stmt>
                    <decl_stmt><decl><type><name pos:line="124" pos:column="21">var</name></type> <name pos:line="124" pos:column="25">otherMenuItems</name> <init pos:line="124" pos:column="40">= <expr><linq><from pos:line="124" pos:column="42">from <expr><name pos:line="124" pos:column="47">MenuItem</name> <name pos:line="124" pos:column="56">item</name></expr> <in pos:line="124" pos:column="61">in <expr><name><name pos:line="124" pos:column="64">MenuItemLanguage</name><op:operator pos:line="124" pos:column="80">.</op:operator><name pos:line="124" pos:column="81">Items</name><op:operator pos:line="124" pos:column="86">.</op:operator><name pos:line="124" pos:column="87">SourceCollection</name></name></expr></in></from>
                                         <where pos:line="125" pos:column="42">where <expr><name pos:line="125" pos:column="48">item</name> <op:operator pos:line="125" pos:column="53">!=</op:operator> <name pos:line="125" pos:column="56">menuItem</name></expr></where>
                                         <select pos:line="126" pos:column="42">select <expr><name pos:line="126" pos:column="49">item</name></expr></select></linq></expr></init></decl>;</decl_stmt>
                    <foreach pos:line="127" pos:column="21">foreach (<init><decl><type><name pos:line="127" pos:column="30">var</name></type> <name pos:line="127" pos:column="34">item</name> <range pos:line="127" pos:column="39">in <expr><name pos:line="127" pos:column="42">otherMenuItems</name></expr></range></decl></init>)
                    <block pos:line="128" pos:column="21">{
                        <expr_stmt><expr><name><name pos:line="129" pos:column="25">item</name><op:operator pos:line="129" pos:column="29">.</op:operator><name pos:line="129" pos:column="30">IsChecked</name></name> <op:operator pos:line="129" pos:column="40">=</op:operator> <lit:literal type="boolean" pos:line="129" pos:column="42">false</lit:literal></expr>;</expr_stmt>
                        <expr_stmt><expr><name><name pos:line="130" pos:column="25">item</name><op:operator pos:line="130" pos:column="29">.</op:operator><name pos:line="130" pos:column="30">IsCheckable</name></name> <op:operator pos:line="130" pos:column="42">=</op:operator> <lit:literal type="boolean" pos:line="130" pos:column="44">true</lit:literal></expr>;</expr_stmt>
                    }</block></foreach>

                    <expr_stmt><expr><name><name pos:line="133" pos:column="21">this</name><op:operator pos:line="133" pos:column="25">.</op:operator><name pos:line="133" pos:column="26">_language</name></name> <op:operator pos:line="133" pos:column="36">=</op:operator> <call><name><name pos:line="133" pos:column="38">SrcMLElement</name><op:operator pos:line="133" pos:column="50">.</op:operator><name pos:line="133" pos:column="51">GetLanguageFromString</name></name><argument_list pos:line="133" pos:column="72">(<argument><expr><call><name><name pos:line="133" pos:column="73">menuItem</name><op:operator pos:line="133" pos:column="81">.</op:operator><name pos:line="133" pos:column="82">Header</name><op:operator pos:line="133" pos:column="88">.</op:operator><name pos:line="133" pos:column="89">ToString</name></name><argument_list pos:line="133" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="134" pos:column="21">sourceBox_TextChanged</name><argument_list pos:line="134" pos:column="42">(<argument><expr><name pos:line="134" pos:column="43">sender</name></expr></argument>, <argument><expr><name pos:line="134" pos:column="51">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block>
            <catch pos:line="137" pos:column="13">catch <parameter_list pos:line="137" pos:column="19">(<param><decl><type><name pos:line="137" pos:column="20">SrcMLException</name></type> <name pos:line="137" pos:column="35">error</name></decl></param>)</parameter_list>
            <block pos:line="138" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="139" pos:column="17">PrintErrorInSrcmlBox</name><argument_list pos:line="139" pos:column="37">(<argument><expr><name><name pos:line="139" pos:column="38">error</name><op:operator pos:line="139" pos:column="43">.</op:operator><name pos:line="139" pos:column="44">Message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="143" pos:column="9">private</specifier> <name pos:line="143" pos:column="17">void</name></type> <name pos:line="143" pos:column="22">MenuItemSrcMLSelect_Click</name><parameter_list pos:line="143" pos:column="47">(<param><decl><type><name pos:line="143" pos:column="48">object</name></type> <name pos:line="143" pos:column="55">sender</name></decl></param>, <param><decl><type><name pos:line="143" pos:column="63">RoutedEventArgs</name></type> <name pos:line="143" pos:column="79">e</name></decl></param>)</parameter_list>
        <block pos:line="144" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="145" pos:column="13">var</name></type> <name pos:line="145" pos:column="17">currentDirectory</name> <init pos:line="145" pos:column="34">= <expr><name><name pos:line="145" pos:column="36">this</name><op:operator pos:line="145" pos:column="40">.</op:operator><name pos:line="145" pos:column="41">directorySelector</name><op:operator pos:line="145" pos:column="58">.</op:operator><name pos:line="145" pos:column="59">SelectedPath</name></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="146" pos:column="13">directorySelector</name><op:operator pos:line="146" pos:column="30">.</op:operator><name pos:line="146" pos:column="31">Description</name></name> <op:operator pos:line="146" pos:column="43">=</op:operator> <call><name><name pos:line="146" pos:column="45">String</name><op:operator pos:line="146" pos:column="51">.</op:operator><name pos:line="146" pos:column="52">Format</name></name><argument_list pos:line="146" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="146" pos:column="59">"Select a directory that contains src2srcml.exe\nThe current directory is {0}"</lit:literal></expr></argument>, <argument><expr><name pos:line="146" pos:column="139">currentDirectory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="147" pos:column="13">if <condition pos:line="147" pos:column="16">(<expr><call><name><name pos:line="147" pos:column="17">directorySelector</name><op:operator pos:line="147" pos:column="34">.</op:operator><name pos:line="147" pos:column="35">ShowDialog</name></name><argument_list pos:line="147" pos:column="45">()</argument_list></call> <op:operator pos:line="147" pos:column="48">==</op:operator> <name><name pos:line="147" pos:column="51">Forms</name><op:operator pos:line="147" pos:column="56">.</op:operator><name pos:line="147" pos:column="57">DialogResult</name><op:operator pos:line="147" pos:column="69">.</op:operator><name pos:line="147" pos:column="70">OK</name></name></expr>)</condition><then pos:line="147" pos:column="73">
            <block pos:line="148" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="149" pos:column="17">this</name><op:operator pos:line="149" pos:column="21">.</op:operator><name pos:line="149" pos:column="22">_xmlGenerator</name></name> <op:operator pos:line="149" pos:column="36">=</op:operator> <op:operator pos:line="149" pos:column="38">new</op:operator> <call><name pos:line="149" pos:column="42">SrcMLGenerator</name><argument_list pos:line="149" pos:column="56">(<argument><expr><name><name pos:line="149" pos:column="57">directorySelector</name><op:operator pos:line="149" pos:column="74">.</op:operator><name pos:line="149" pos:column="75">SelectedPath</name></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="89">_namespaceArguments</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="150" pos:column="17">binDirIsValid</name> <op:operator pos:line="150" pos:column="31">=</op:operator> <lit:literal type="boolean" pos:line="150" pos:column="33">true</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="151" pos:column="17">srcmlBox</name><op:operator pos:line="151" pos:column="25">.</op:operator><name pos:line="151" pos:column="26">Foreground</name></name> <op:operator pos:line="151" pos:column="37">=</op:operator> <name><name pos:line="151" pos:column="39">Brushes</name><op:operator pos:line="151" pos:column="46">.</op:operator><name pos:line="151" pos:column="47">Black</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="152" pos:column="17">UpdateSupportedLanguages</name><argument_list pos:line="152" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
                <if pos:line="153" pos:column="17">if <condition pos:line="153" pos:column="20">(<expr><name><name pos:line="153" pos:column="21">sourceBox</name><op:operator pos:line="153" pos:column="30">.</op:operator><name pos:line="153" pos:column="31">Text</name><op:operator pos:line="153" pos:column="35">.</op:operator><name pos:line="153" pos:column="36">Length</name></name> <op:operator pos:line="153" pos:column="43">&gt;</op:operator> <lit:literal type="number" pos:line="153" pos:column="45">0</lit:literal></expr>)</condition><then pos:line="153" pos:column="47">
                    <expr_stmt><expr><call><name pos:line="154" pos:column="21">sourceBox_TextChanged</name><argument_list pos:line="154" pos:column="42">(<argument><expr><name pos:line="154" pos:column="43">sender</name></expr></argument>, <argument><expr><name pos:line="154" pos:column="51">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="158" pos:column="9">private</specifier> <name pos:line="158" pos:column="17">void</name></type> <name pos:line="158" pos:column="22">UpdateSupportedLanguages</name><parameter_list pos:line="158" pos:column="46">()</parameter_list> <block pos:line="158" pos:column="49">{
            <decl_stmt><decl><type><name><name pos:line="159" pos:column="13">HashSet</name><argument_list pos:line="159" pos:column="20">&lt;<argument><name pos:line="159" pos:column="21">Language</name></argument>&gt;</argument_list></name></type> <name pos:line="159" pos:column="31">supportedLanguages</name> <init pos:line="159" pos:column="50">= <expr><op:operator pos:line="159" pos:column="52">new</op:operator> <call><name><name pos:line="159" pos:column="56">HashSet</name><argument_list pos:line="159" pos:column="63">&lt;<argument><name pos:line="159" pos:column="64">Language</name></argument>&gt;</argument_list></name><argument_list pos:line="159" pos:column="73">(<argument><expr><name><name pos:line="159" pos:column="74">this</name><op:operator pos:line="159" pos:column="78">.</op:operator><name pos:line="159" pos:column="79">XmlGenerator</name><op:operator pos:line="159" pos:column="91">.</op:operator><name pos:line="159" pos:column="92">SupportedLanguages</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="160" pos:column="13">foreach(<init><decl><type><name pos:line="160" pos:column="21">var</name></type> <name pos:line="160" pos:column="25">item</name> <range pos:line="160" pos:column="30">in <expr><name><name pos:line="160" pos:column="33">this</name><op:operator pos:line="160" pos:column="37">.</op:operator><name pos:line="160" pos:column="38">MenuItemLanguage</name><op:operator pos:line="160" pos:column="54">.</op:operator><name pos:line="160" pos:column="55">Items</name></name></expr></range></decl></init>) <block pos:line="160" pos:column="62">{
                <decl_stmt><decl><type><name pos:line="161" pos:column="17">var</name></type> <name pos:line="161" pos:column="21">menuItem</name> <init pos:line="161" pos:column="30">= <expr><name pos:line="161" pos:column="32">item</name> <op:operator pos:line="161" pos:column="37">as</op:operator> <name pos:line="161" pos:column="40">MenuItem</name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="162" pos:column="17">var</name></type> <name pos:line="162" pos:column="21">language</name> <init pos:line="162" pos:column="30">= <expr><call><name><name pos:line="162" pos:column="32">SrcMLElement</name><op:operator pos:line="162" pos:column="44">.</op:operator><name pos:line="162" pos:column="45">GetLanguageFromString</name></name><argument_list pos:line="162" pos:column="66">(<argument><expr><call><name><name pos:line="162" pos:column="67">menuItem</name><op:operator pos:line="162" pos:column="75">.</op:operator><name pos:line="162" pos:column="76">Header</name><op:operator pos:line="162" pos:column="82">.</op:operator><name pos:line="162" pos:column="83">ToString</name></name><argument_list pos:line="162" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="163" pos:column="17">menuItem</name><op:operator pos:line="163" pos:column="25">.</op:operator><name pos:line="163" pos:column="26">IsEnabled</name></name> <op:operator pos:line="163" pos:column="36">=</op:operator> <call><name><name pos:line="163" pos:column="38">supportedLanguages</name><op:operator pos:line="163" pos:column="56">.</op:operator><name pos:line="163" pos:column="57">Contains</name></name><argument_list pos:line="163" pos:column="65">(<argument><expr><name pos:line="163" pos:column="66">language</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="167" pos:column="9">private</specifier> <name pos:line="167" pos:column="17">void</name></type> <name pos:line="167" pos:column="22">PrintErrorInSrcmlBox</name><parameter_list pos:line="167" pos:column="42">(<param><decl><type><name pos:line="167" pos:column="43">string</name></type> <name pos:line="167" pos:column="50">errorMessage</name></decl></param>)</parameter_list>
        <block pos:line="168" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="169" pos:column="13">languageLabel</name><op:operator pos:line="169" pos:column="26">.</op:operator><name pos:line="169" pos:column="27">Content</name></name> <op:operator pos:line="169" pos:column="35">=</op:operator> <lit:literal type="string" pos:line="169" pos:column="37">"Error!"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="170" pos:column="13">srcmlBox</name><op:operator pos:line="170" pos:column="21">.</op:operator><name pos:line="170" pos:column="22">Text</name></name> <op:operator pos:line="170" pos:column="27">=</op:operator> <name pos:line="170" pos:column="29">errorMessage</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="171" pos:column="13">srcmlBox</name><op:operator pos:line="171" pos:column="21">.</op:operator><name pos:line="171" pos:column="22">Foreground</name></name> <op:operator pos:line="171" pos:column="33">=</op:operator> <name><name pos:line="171" pos:column="35">Brushes</name><op:operator pos:line="171" pos:column="42">.</op:operator><name pos:line="171" pos:column="43">Red</name></name></expr>;</expr_stmt>
        }</block></function>
        
        <function><type><specifier pos:line="174" pos:column="9">private</specifier> <name pos:line="174" pos:column="17">void</name></type> <name pos:line="174" pos:column="22">MenuItemShowPosition_Checked</name><parameter_list pos:line="174" pos:column="50">(<param><decl><type><name pos:line="174" pos:column="51">object</name></type> <name pos:line="174" pos:column="58">sender</name></decl></param>, <param><decl><type><name pos:line="174" pos:column="66">RoutedEventArgs</name></type> <name pos:line="174" pos:column="82">e</name></decl></param>)</parameter_list> <block pos:line="174" pos:column="85">{
            <expr_stmt><expr><name pos:line="175" pos:column="13">_xmlGenerator</name> <op:operator pos:line="175" pos:column="27">=</op:operator> <op:operator pos:line="175" pos:column="29">new</op:operator> <call><name pos:line="175" pos:column="33">SrcMLGenerator</name><argument_list pos:line="175" pos:column="47">(<argument><expr><name><name pos:line="175" pos:column="48">directorySelector</name><op:operator pos:line="175" pos:column="65">.</op:operator><name pos:line="175" pos:column="66">SelectedPath</name></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="80">_namespaceArgumentsWithPosition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="176" pos:column="13">if<condition pos:line="176" pos:column="15">(<expr><name><name pos:line="176" pos:column="16">sourceBox</name><op:operator pos:line="176" pos:column="25">.</op:operator><name pos:line="176" pos:column="26">Text</name><op:operator pos:line="176" pos:column="30">.</op:operator><name pos:line="176" pos:column="31">Length</name></name> <op:operator pos:line="176" pos:column="38">&gt;</op:operator> <lit:literal type="number" pos:line="176" pos:column="40">0</lit:literal></expr>)</condition><then pos:line="176" pos:column="42"> <expr_stmt><expr><call><name pos:line="176" pos:column="43">sourceBox_TextChanged</name><argument_list pos:line="176" pos:column="64">(<argument><expr><name pos:line="176" pos:column="65">sender</name></expr></argument>, <argument><expr><name pos:line="176" pos:column="73">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        }</block></function>

        <function><type><specifier pos:line="179" pos:column="9">private</specifier> <name pos:line="179" pos:column="17">void</name></type> <name pos:line="179" pos:column="22">MenuItemShowPosition_Unchecked</name><parameter_list pos:line="179" pos:column="52">(<param><decl><type><name pos:line="179" pos:column="53">object</name></type> <name pos:line="179" pos:column="60">sender</name></decl></param>, <param><decl><type><name pos:line="179" pos:column="68">RoutedEventArgs</name></type> <name pos:line="179" pos:column="84">e</name></decl></param>)</parameter_list> <block pos:line="179" pos:column="87">{
            <expr_stmt><expr><name pos:line="180" pos:column="13">_xmlGenerator</name> <op:operator pos:line="180" pos:column="27">=</op:operator> <op:operator pos:line="180" pos:column="29">new</op:operator> <call><name pos:line="180" pos:column="33">SrcMLGenerator</name><argument_list pos:line="180" pos:column="47">(<argument><expr><name><name pos:line="180" pos:column="48">directorySelector</name><op:operator pos:line="180" pos:column="65">.</op:operator><name pos:line="180" pos:column="66">SelectedPath</name></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="80">_namespaceArguments</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="181" pos:column="13">if<condition pos:line="181" pos:column="15">(<expr><name><name pos:line="181" pos:column="16">sourceBox</name><op:operator pos:line="181" pos:column="25">.</op:operator><name pos:line="181" pos:column="26">Text</name><op:operator pos:line="181" pos:column="30">.</op:operator><name pos:line="181" pos:column="31">Length</name></name> <op:operator pos:line="181" pos:column="38">&gt;</op:operator> <lit:literal type="number" pos:line="181" pos:column="40">0</lit:literal></expr>)</condition><then pos:line="181" pos:column="42"> <expr_stmt><expr><call><name pos:line="181" pos:column="43">sourceBox_TextChanged</name><argument_list pos:line="181" pos:column="64">(<argument><expr><name pos:line="181" pos:column="65">sender</name></expr></argument>, <argument><expr><name pos:line="181" pos:column="73">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        }</block></function>

        <function><type><specifier pos:line="184" pos:column="9">private</specifier> <name pos:line="184" pos:column="17">void</name></type> <name pos:line="184" pos:column="22">ToggleShowPosition</name><parameter_list pos:line="184" pos:column="40">(<param><decl><type><name pos:line="184" pos:column="41">object</name></type> <name pos:line="184" pos:column="48">sender</name></decl></param>, <param><decl><type><name pos:line="184" pos:column="56">ExecutedRoutedEventArgs</name></type> <name pos:line="184" pos:column="80">e</name></decl></param>)</parameter_list> <block pos:line="184" pos:column="83">{
            <decl_stmt><decl><type><name pos:line="185" pos:column="13">var</name></type> <name pos:line="185" pos:column="17">window</name> <init pos:line="185" pos:column="24">= <expr><name pos:line="185" pos:column="26">sender</name> <op:operator pos:line="185" pos:column="33">as</op:operator> <name pos:line="185" pos:column="36">Src2SrcMLPreviewWindow</name></expr></init></decl>;</decl_stmt>
            <if pos:line="186" pos:column="13">if<condition pos:line="186" pos:column="15">(<expr><name pos:line="186" pos:column="16">null</name> <op:operator pos:line="186" pos:column="21">!=</op:operator> <name pos:line="186" pos:column="24">window</name></expr>)</condition><then pos:line="186" pos:column="31"> <block pos:line="186" pos:column="32">{
                <expr_stmt><expr><name><name pos:line="187" pos:column="17">window</name><op:operator pos:line="187" pos:column="23">.</op:operator><name pos:line="187" pos:column="24">MenuItemShowPosition</name><op:operator pos:line="187" pos:column="44">.</op:operator><name pos:line="187" pos:column="45">IsChecked</name></name> <op:operator pos:line="187" pos:column="55">=</op:operator> <op:operator pos:line="187" pos:column="57">!</op:operator><name><name pos:line="187" pos:column="58">window</name><op:operator pos:line="187" pos:column="64">.</op:operator><name pos:line="187" pos:column="65">MenuItemShowPosition</name><op:operator pos:line="187" pos:column="85">.</op:operator><name pos:line="187" pos:column="86">IsChecked</name></name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="191" pos:column="9">private</specifier> <name pos:line="191" pos:column="17">void</name></type> <name pos:line="191" pos:column="22">SelectSrcMLDirectory</name><parameter_list pos:line="191" pos:column="42">(<param><decl><type><name pos:line="191" pos:column="43">object</name></type> <name pos:line="191" pos:column="50">sender</name></decl></param>, <param><decl><type><name pos:line="191" pos:column="58">ExecutedRoutedEventArgs</name></type> <name pos:line="191" pos:column="82">e</name></decl></param>)</parameter_list> <block pos:line="191" pos:column="85">{
            <decl_stmt><decl><type><name pos:line="192" pos:column="13">var</name></type> <name pos:line="192" pos:column="17">window</name> <init pos:line="192" pos:column="24">= <expr><name pos:line="192" pos:column="26">sender</name> <op:operator pos:line="192" pos:column="33">as</op:operator> <name pos:line="192" pos:column="36">Src2SrcMLPreviewWindow</name></expr></init></decl>;</decl_stmt>
            <if pos:line="193" pos:column="13">if<condition pos:line="193" pos:column="15">(<expr><name pos:line="193" pos:column="16">null</name> <op:operator pos:line="193" pos:column="21">!=</op:operator> <name pos:line="193" pos:column="24">window</name></expr>)</condition><then pos:line="193" pos:column="31"> <block pos:line="193" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="194" pos:column="17">MenuItemSrcMLSelect_Click</name><argument_list pos:line="194" pos:column="42">(<argument><expr><name pos:line="194" pos:column="43">sender</name></expr></argument>, <argument><expr><name pos:line="194" pos:column="51">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
