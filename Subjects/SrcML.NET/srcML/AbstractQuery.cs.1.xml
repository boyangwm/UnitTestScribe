<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\ABB.SrcML.Data\AbstractQuery.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2014 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *  Vinay Augustine (ABB Group) - initial API, implementation, &amp; documentation
 *****************************************************************************/</comment>

<using pos:line="12" pos:column="1">using <name pos:line="12" pos:column="7">System</name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Collections</name><op:operator pos:line="13" pos:column="25">.</op:operator><name pos:line="13" pos:column="26">Generic</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Linq</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">Text</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Threading</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">System</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Threading</name><op:operator pos:line="17" pos:column="23">.</op:operator><name pos:line="17" pos:column="24">Tasks</name></name>;</using>

<namespace pos:line="19" pos:column="1">namespace <name><name pos:line="19" pos:column="11">ABB</name><op:operator pos:line="19" pos:column="14">.</op:operator><name pos:line="19" pos:column="15">SrcML</name><op:operator pos:line="19" pos:column="20">.</op:operator><name pos:line="19" pos:column="21">Data</name></name> <block pos:line="19" pos:column="26">{
    <comment type="line" pos:line="20" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="21" pos:column="5">/// Queries perform read-only operations on &lt;see cref="AbstractWorkingSet"/&gt; objects</comment>
    <comment type="line" pos:line="22" pos:column="5">/// &lt;/summary&gt;</comment>
    <comment type="line" pos:line="23" pos:column="5">/// &lt;typeparam name="TResult"&gt;The return type from the query&lt;/typeparam&gt;</comment>
    <class><specifier pos:line="24" pos:column="5">public</specifier> <specifier pos:line="24" pos:column="12">abstract</specifier> class <name><name pos:line="24" pos:column="27">AbstractQuery</name><argument_list pos:line="24" pos:column="40">&lt;<argument><name pos:line="24" pos:column="41">TResult</name></argument>&gt;</argument_list></name> <block pos:line="24" pos:column="50">{
        <comment type="line" pos:line="25" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="26" pos:column="9">/// The amount of time to wait for the &lt;see cref="AbstractWorkingSet.TryObtainReadLock"&gt;read lock&lt;/see&gt;</comment>
        <comment type="line" pos:line="27" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="28" pos:column="9">public</specifier> <name pos:line="28" pos:column="16">int</name></type> <name pos:line="28" pos:column="20">LockTimeout</name> <block pos:line="28" pos:column="32">{ <function_decl><name pos:line="28" pos:column="34">get</name>;</function_decl> <function_decl><specifier pos:line="28" pos:column="39">private</specifier> <name pos:line="28" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="30" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="31" pos:column="9">/// The working set for this query</comment>
        <comment type="line" pos:line="32" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="33" pos:column="9">public</specifier> <name pos:line="33" pos:column="16">AbstractWorkingSet</name></type> <name pos:line="33" pos:column="35">WorkingSet</name> <block pos:line="33" pos:column="46">{ <function_decl><name pos:line="33" pos:column="48">get</name>;</function_decl> <function_decl><specifier pos:line="33" pos:column="53">private</specifier> <name pos:line="33" pos:column="61">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="35" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="36" pos:column="9">/// The task factory for asynchronous operations</comment>
        <comment type="line" pos:line="37" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="38" pos:column="9">protected</specifier> <name pos:line="38" pos:column="19">TaskFactory</name></type> <name pos:line="38" pos:column="31">Factory</name> <block pos:line="38" pos:column="39">{ <function_decl><name pos:line="38" pos:column="41">get</name>;</function_decl> <function_decl><specifier pos:line="38" pos:column="46">private</specifier> <name pos:line="38" pos:column="54">set</name>;</function_decl> }</block></decl></decl_stmt>

        <constructor><specifier pos:line="40" pos:column="9">private</specifier> <name pos:line="40" pos:column="17">AbstractQuery</name><parameter_list pos:line="40" pos:column="30">()</parameter_list> <block pos:line="40" pos:column="33">{ }</block></constructor>

        <comment type="line" pos:line="42" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="43" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="44" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="45" pos:column="9">/// &lt;param name="workingSet"&gt;The working set for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="46" pos:column="9">/// &lt;param name="factory"&gt;The task factory for this query&lt;/param&gt;</comment>
        <constructor><specifier pos:line="47" pos:column="9">protected</specifier> <name pos:line="47" pos:column="19">AbstractQuery</name><parameter_list pos:line="47" pos:column="32">(<param><decl><type><name pos:line="47" pos:column="33">AbstractWorkingSet</name></type> <name pos:line="47" pos:column="52">workingSet</name></decl></param>, <param><decl><type><name pos:line="47" pos:column="64">TaskFactory</name></type> <name pos:line="47" pos:column="76">factory</name></decl></param>)</parameter_list>
            <member_list pos:line="48" pos:column="13">: <call><name pos:line="48" pos:column="15">this</name><argument_list pos:line="48" pos:column="19">(<argument><expr><name pos:line="48" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="32">Timeout</name><op:operator pos:line="48" pos:column="39">.</op:operator><name pos:line="48" pos:column="40">Infinite</name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="50">factory</name></expr></argument>)</argument_list></call> </member_list><block pos:line="48" pos:column="59">{ }</block></constructor>

        <comment type="line" pos:line="50" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="51" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="52" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="53" pos:column="9">/// &lt;param name="workingSet"&gt;The working set for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="54" pos:column="9">/// &lt;param name="lockTimeout"&gt;The timeout to use for this query&lt;/param&gt;</comment>
        <constructor><specifier pos:line="55" pos:column="9">protected</specifier> <name pos:line="55" pos:column="19">AbstractQuery</name><parameter_list pos:line="55" pos:column="32">(<param><decl><type><name pos:line="55" pos:column="33">AbstractWorkingSet</name></type> <name pos:line="55" pos:column="52">workingSet</name></decl></param>, <param><decl><type><name pos:line="55" pos:column="64">int</name></type> <name pos:line="55" pos:column="68">lockTimeout</name></decl></param>)</parameter_list>
            <member_list pos:line="56" pos:column="13">: <call><name pos:line="56" pos:column="15">this</name><argument_list pos:line="56" pos:column="19">(<argument><expr><name pos:line="56" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="56" pos:column="32">lockTimeout</name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="45">Task</name><op:operator pos:line="56" pos:column="49">.</op:operator><name pos:line="56" pos:column="50">Factory</name></name></expr></argument>)</argument_list></call> </member_list><block pos:line="56" pos:column="59">{ }</block></constructor>

        <comment type="line" pos:line="58" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="59" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="60" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="61" pos:column="9">/// &lt;param name="workingSet"&gt;The working set for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="62" pos:column="9">/// &lt;param name="lockTimeout"&gt;The read lock timeout to use for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="63" pos:column="9">/// &lt;param name="factory"&gt;The task factory for this query&lt;/param&gt;</comment>
        <constructor><specifier pos:line="64" pos:column="9">protected</specifier> <name pos:line="64" pos:column="19">AbstractQuery</name><parameter_list pos:line="64" pos:column="32">(<param><decl><type><name pos:line="64" pos:column="33">AbstractWorkingSet</name></type> <name pos:line="64" pos:column="52">workingSet</name></decl></param>, <param><decl><type><name pos:line="64" pos:column="64">int</name></type> <name pos:line="64" pos:column="68">lockTimeout</name></decl></param>, <param><decl><type><name pos:line="64" pos:column="81">TaskFactory</name></type> <name pos:line="64" pos:column="93">factory</name></decl></param>)</parameter_list> <block pos:line="64" pos:column="102">{
            <expr_stmt><expr><name><name pos:line="65" pos:column="13">this</name><op:operator pos:line="65" pos:column="17">.</op:operator><name pos:line="65" pos:column="18">WorkingSet</name></name> <op:operator pos:line="65" pos:column="29">=</op:operator> <name pos:line="65" pos:column="31">workingSet</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="66" pos:column="13">this</name><op:operator pos:line="66" pos:column="17">.</op:operator><name pos:line="66" pos:column="18">LockTimeout</name></name> <op:operator pos:line="66" pos:column="30">=</op:operator> <name pos:line="66" pos:column="32">lockTimeout</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="67" pos:column="13">this</name><op:operator pos:line="67" pos:column="17">.</op:operator><name pos:line="67" pos:column="18">Factory</name></name> <op:operator pos:line="67" pos:column="26">=</op:operator> <name pos:line="67" pos:column="28">factory</name></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="70" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="71" pos:column="9">/// &lt;see cref="Execute(Statement)"&gt;Executes the query&lt;/see&gt; asynchronously on the &lt;see cref="WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="72" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="73" pos:column="9">/// &lt;param name="cancellationToken"&gt;the cancellation token&lt;/param&gt;</comment>
        <comment type="line" pos:line="74" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="75" pos:column="9">public</specifier> <name><name pos:line="75" pos:column="16">Task</name><argument_list pos:line="75" pos:column="20">&lt;<argument><name pos:line="75" pos:column="21">TResult</name></argument>&gt;</argument_list></name></type> <name pos:line="75" pos:column="30">ExecuteAsync</name><parameter_list pos:line="75" pos:column="42">(<param><decl><type><name pos:line="75" pos:column="43">CancellationToken</name></type> <name pos:line="75" pos:column="61">cancellationToken</name></decl></param>)</parameter_list> <block pos:line="75" pos:column="80">{
            <if pos:line="76" pos:column="13">if<condition pos:line="76" pos:column="15">(<expr><name pos:line="76" pos:column="16">null</name> <op:operator pos:line="76" pos:column="21">==</op:operator> <name pos:line="76" pos:column="24">WorkingSet</name></expr>)</condition><then pos:line="76" pos:column="35"> <block pos:line="76" pos:column="36">{
                <throw pos:line="77" pos:column="17">throw <expr><op:operator pos:line="77" pos:column="23">new</op:operator> <call><name pos:line="77" pos:column="27">InvalidOperationException</name><argument_list pos:line="77" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="77" pos:column="53">"Query has no working set"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>
            <return pos:line="79" pos:column="13">return <expr><call><name><name pos:line="79" pos:column="20">Factory</name><op:operator pos:line="79" pos:column="27">.</op:operator><name><name pos:line="79" pos:column="28">StartNew</name><argument_list pos:line="79" pos:column="36">&lt;<argument><name pos:line="79" pos:column="37">TResult</name></argument>&gt;</argument_list></name></name><argument_list pos:line="79" pos:column="45">(<argument><expr><lambda><parameter_list pos:line="79" pos:column="46">()</parameter_list> <op:operator pos:line="79" pos:column="49">=&gt;</op:operator> <block pos:line="79" pos:column="52">{
                <decl_stmt><decl><type><name pos:line="80" pos:column="17">NamespaceDefinition</name></type> <name pos:line="80" pos:column="37">globalScope</name></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="81" pos:column="17">cancellationToken</name><op:operator pos:line="81" pos:column="34">.</op:operator><name pos:line="81" pos:column="35">ThrowIfCancellationRequested</name></name><argument_list pos:line="81" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
                <if pos:line="82" pos:column="17">if<condition pos:line="82" pos:column="19">(<expr><call><name><name pos:line="82" pos:column="20">WorkingSet</name><op:operator pos:line="82" pos:column="30">.</op:operator><name pos:line="82" pos:column="31">TryObtainReadLock</name></name><argument_list pos:line="82" pos:column="48">(<argument><expr><name pos:line="82" pos:column="49">LockTimeout</name></expr></argument>, <argument><expr pos:line="82" pos:column="62">out <name pos:line="82" pos:column="66">globalScope</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="82" pos:column="79"> <block pos:line="82" pos:column="80">{
                    <try pos:line="83" pos:column="21">try <block pos:line="83" pos:column="25">{
                        <expr_stmt><expr><call><name><name pos:line="84" pos:column="25">cancellationToken</name><op:operator pos:line="84" pos:column="42">.</op:operator><name pos:line="84" pos:column="43">ThrowIfCancellationRequested</name></name><argument_list pos:line="84" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
                        <return pos:line="85" pos:column="25">return <expr><call><name pos:line="85" pos:column="32">Execute</name><argument_list pos:line="85" pos:column="39">(<argument><expr><name pos:line="85" pos:column="40">globalScope</name></expr></argument>)</argument_list></call></expr>;</return>
                    }</block> <finally pos:line="86" pos:column="23">finally <block pos:line="86" pos:column="31">{
                        <expr_stmt><expr><call><name><name pos:line="87" pos:column="25">WorkingSet</name><op:operator pos:line="87" pos:column="35">.</op:operator><name pos:line="87" pos:column="36">ReleaseReadLock</name></name><argument_list pos:line="87" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
                    }</block></finally></try>
                }</block></then></if>
                <throw pos:line="90" pos:column="17">throw <expr><op:operator pos:line="90" pos:column="23">new</op:operator> <call><name pos:line="90" pos:column="27">TimeoutException</name><argument_list pos:line="90" pos:column="43">()</argument_list></call></expr>;</throw>
            }</block></lambda></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="94" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="95" pos:column="9">/// &lt;see cref="Execute(Statement)"&gt;Executes the query&lt;/see&gt; asynchronously on the &lt;see cref="WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="96" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="97" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="98" pos:column="9">public</specifier> <name><name pos:line="98" pos:column="16">Task</name><argument_list pos:line="98" pos:column="20">&lt;<argument><name pos:line="98" pos:column="21">TResult</name></argument>&gt;</argument_list></name></type> <name pos:line="98" pos:column="30">ExecuteAsync</name><parameter_list pos:line="98" pos:column="42">()</parameter_list> <block pos:line="98" pos:column="45">{
            <if pos:line="99" pos:column="13">if<condition pos:line="99" pos:column="15">(<expr><name pos:line="99" pos:column="16">null</name> <op:operator pos:line="99" pos:column="21">==</op:operator> <name pos:line="99" pos:column="24">WorkingSet</name></expr>)</condition><then pos:line="99" pos:column="35"> <block pos:line="99" pos:column="36">{
                <throw pos:line="100" pos:column="17">throw <expr><op:operator pos:line="100" pos:column="23">new</op:operator> <call><name pos:line="100" pos:column="27">InvalidOperationException</name><argument_list pos:line="100" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="100" pos:column="53">"Query has no working set"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>
            <return pos:line="102" pos:column="13">return <expr><call><name><name pos:line="102" pos:column="20">Factory</name><op:operator pos:line="102" pos:column="27">.</op:operator><name><name pos:line="102" pos:column="28">StartNew</name><argument_list pos:line="102" pos:column="36">&lt;<argument><name pos:line="102" pos:column="37">TResult</name></argument>&gt;</argument_list></name></name><argument_list pos:line="102" pos:column="45">(<argument><expr><name pos:line="102" pos:column="46">Execute</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="105" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="106" pos:column="9">/// &lt;see cref="Execute(Statement)"&gt;Executes the query&lt;/see&gt; on the &lt;see cref="WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="107" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="108" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="109" pos:column="9">public</specifier> <name pos:line="109" pos:column="16">TResult</name></type> <name pos:line="109" pos:column="24">Execute</name><parameter_list pos:line="109" pos:column="31">()</parameter_list> <block pos:line="109" pos:column="34">{
            <if pos:line="110" pos:column="13">if<condition pos:line="110" pos:column="15">(<expr><name pos:line="110" pos:column="16">null</name> <op:operator pos:line="110" pos:column="21">==</op:operator> <name pos:line="110" pos:column="24">WorkingSet</name></expr>)</condition><then pos:line="110" pos:column="35"> <block pos:line="110" pos:column="36">{
                <throw pos:line="111" pos:column="17">throw <expr><op:operator pos:line="111" pos:column="23">new</op:operator> <call><name pos:line="111" pos:column="27">InvalidOperationException</name><argument_list pos:line="111" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="111" pos:column="53">"Query has no working set"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>
            <decl_stmt><decl><type><name pos:line="113" pos:column="13">NamespaceDefinition</name></type> <name pos:line="113" pos:column="33">globalScope</name></decl>;</decl_stmt>
            <if pos:line="114" pos:column="13">if<condition pos:line="114" pos:column="15">(<expr><call><name><name pos:line="114" pos:column="16">WorkingSet</name><op:operator pos:line="114" pos:column="26">.</op:operator><name pos:line="114" pos:column="27">TryObtainReadLock</name></name><argument_list pos:line="114" pos:column="44">(<argument><expr><name pos:line="114" pos:column="45">LockTimeout</name></expr></argument>, <argument><expr pos:line="114" pos:column="58">out <name pos:line="114" pos:column="62">globalScope</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="114" pos:column="75"> <block pos:line="114" pos:column="76">{
                <try pos:line="115" pos:column="17">try <block pos:line="115" pos:column="21">{
                    <return pos:line="116" pos:column="21">return <expr><call><name pos:line="116" pos:column="28">Execute</name><argument_list pos:line="116" pos:column="35">(<argument><expr><name pos:line="116" pos:column="36">globalScope</name></expr></argument>)</argument_list></call></expr>;</return>
                }</block> <finally pos:line="117" pos:column="19">finally <block pos:line="117" pos:column="27">{
                    <expr_stmt><expr><call><name><name pos:line="118" pos:column="21">WorkingSet</name><op:operator pos:line="118" pos:column="31">.</op:operator><name pos:line="118" pos:column="32">ReleaseReadLock</name></name><argument_list pos:line="118" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                }</block></finally></try>
            }</block></then></if>
            <throw pos:line="121" pos:column="13">throw <expr><op:operator pos:line="121" pos:column="19">new</op:operator> <call><name pos:line="121" pos:column="23">TimeoutException</name><argument_list pos:line="121" pos:column="39">()</argument_list></call></expr>;</throw>
        }</block></function>

        <comment type="line" pos:line="124" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="125" pos:column="9">/// Executes the query on &lt;paramref name="root"/&gt;</comment>
        <comment type="line" pos:line="126" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="127" pos:column="9">/// &lt;param name="root"&gt;The root to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="128" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function_decl><type><specifier pos:line="129" pos:column="9">public</specifier> <specifier pos:line="129" pos:column="16">abstract</specifier> <name pos:line="129" pos:column="25">TResult</name></type> <name pos:line="129" pos:column="33">Execute</name><parameter_list pos:line="129" pos:column="40">(<param><decl><type><name pos:line="129" pos:column="41">Statement</name></type> <name pos:line="129" pos:column="51">root</name></decl></param>)</parameter_list>;</function_decl>
    }</block></class>

    <comment type="line" pos:line="132" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="133" pos:column="5">/// This class is used to support query objects that have multiple parameters</comment>
    <comment type="line" pos:line="134" pos:column="5">/// &lt;/summary&gt;</comment>
    <comment type="line" pos:line="135" pos:column="5">/// &lt;typeparam name="TTuple"&gt;A tuple of the query parameters&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="136" pos:column="5">/// &lt;typeparam name="TResult"&gt;The query result type&lt;/typeparam&gt;</comment>
    <class><specifier pos:line="137" pos:column="5">public</specifier> <specifier pos:line="137" pos:column="12">abstract</specifier> class <name><name pos:line="137" pos:column="27">AbstractQueryBase</name><argument_list pos:line="137" pos:column="44">&lt;<argument><name pos:line="137" pos:column="45">TTuple</name></argument>, <argument><name pos:line="137" pos:column="53">TResult</name></argument>&gt;</argument_list></name> <block pos:line="137" pos:column="62">{
        <constructor><specifier pos:line="138" pos:column="9">private</specifier> <name pos:line="138" pos:column="17">AbstractQueryBase</name><parameter_list pos:line="138" pos:column="34">()</parameter_list> <block pos:line="138" pos:column="37">{ }</block></constructor>

        <comment type="line" pos:line="140" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="141" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="142" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="143" pos:column="9">/// &lt;param name="workingSet"&gt;The working set for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="144" pos:column="9">/// &lt;param name="lockTimeout"&gt;The read lock timeout to use for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="145" pos:column="9">/// &lt;param name="factory"&gt;The task factory for this query&lt;/param&gt;</comment>
        <constructor><specifier pos:line="146" pos:column="9">internal</specifier> <name pos:line="146" pos:column="18">AbstractQueryBase</name><parameter_list pos:line="146" pos:column="35">(<param><decl><type><name pos:line="146" pos:column="36">AbstractWorkingSet</name></type> <name pos:line="146" pos:column="55">workingSet</name></decl></param>, <param><decl><type><name pos:line="146" pos:column="67">int</name></type> <name pos:line="146" pos:column="71">lockTimeout</name></decl></param>, <param><decl><type><name pos:line="146" pos:column="84">TaskFactory</name></type> <name pos:line="146" pos:column="96">factory</name></decl></param>)</parameter_list> <block pos:line="146" pos:column="105">{
            <expr_stmt><expr><name><name pos:line="147" pos:column="13">this</name><op:operator pos:line="147" pos:column="17">.</op:operator><name pos:line="147" pos:column="18">WorkingSet</name></name> <op:operator pos:line="147" pos:column="29">=</op:operator> <name pos:line="147" pos:column="31">workingSet</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="148" pos:column="13">this</name><op:operator pos:line="148" pos:column="17">.</op:operator><name pos:line="148" pos:column="18">LockTimeout</name></name> <op:operator pos:line="148" pos:column="30">=</op:operator> <name pos:line="148" pos:column="32">lockTimeout</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="149" pos:column="13">this</name><op:operator pos:line="149" pos:column="17">.</op:operator><name pos:line="149" pos:column="18">Factory</name></name> <op:operator pos:line="149" pos:column="26">=</op:operator> <name pos:line="149" pos:column="28">factory</name></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="152" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="153" pos:column="9">/// The amount of time to wait for the &lt;see cref="AbstractWorkingSet.TryObtainReadLock"&gt;read lock&lt;/see&gt;</comment>
        <comment type="line" pos:line="154" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="155" pos:column="9">public</specifier> <name pos:line="155" pos:column="16">int</name></type> <name pos:line="155" pos:column="20">LockTimeout</name> <block pos:line="155" pos:column="32">{ <function_decl><name pos:line="155" pos:column="34">get</name>;</function_decl> <function_decl><specifier pos:line="155" pos:column="39">private</specifier> <name pos:line="155" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="157" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="158" pos:column="9">/// The working set for this query</comment>
        <comment type="line" pos:line="159" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="160" pos:column="9">public</specifier> <name pos:line="160" pos:column="16">AbstractWorkingSet</name></type> <name pos:line="160" pos:column="35">WorkingSet</name> <block pos:line="160" pos:column="46">{ <function_decl><name pos:line="160" pos:column="48">get</name>;</function_decl> <function_decl><specifier pos:line="160" pos:column="53">private</specifier> <name pos:line="160" pos:column="61">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="162" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="163" pos:column="9">/// The task factory for asynchronous operations</comment>
        <comment type="line" pos:line="164" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="165" pos:column="9">protected</specifier> <name pos:line="165" pos:column="19">TaskFactory</name></type> <name pos:line="165" pos:column="31">Factory</name> <block pos:line="165" pos:column="39">{ <function_decl><name pos:line="165" pos:column="41">get</name>;</function_decl> <function_decl><specifier pos:line="165" pos:column="46">private</specifier> <name pos:line="165" pos:column="54">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="167" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="168" pos:column="9">/// &lt;see cref="ExecuteImpl"&gt;Executes the query&lt;/see&gt; asynchronously on &lt;see cref="WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="169" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="170" pos:column="9">/// &lt;param name="parameterTuple"&gt;A tuple with the query parameters&lt;/param&gt;</comment>
        <comment type="line" pos:line="171" pos:column="9">/// &lt;param name="cancellationToken"&gt;The cancellation token&lt;/param&gt;</comment>
        <comment type="line" pos:line="172" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="173" pos:column="9">protected</specifier> <name><name pos:line="173" pos:column="19">Task</name><argument_list pos:line="173" pos:column="23">&lt;<argument><name pos:line="173" pos:column="24">TResult</name></argument>&gt;</argument_list></name></type> <name pos:line="173" pos:column="33">ExecuteAsync</name><parameter_list pos:line="173" pos:column="45">(<param><decl><type><name pos:line="173" pos:column="46">TTuple</name></type> <name pos:line="173" pos:column="53">parameterTuple</name></decl></param>, <param><decl><type><name pos:line="173" pos:column="69">CancellationToken</name></type> <name pos:line="173" pos:column="87">cancellationToken</name></decl></param>)</parameter_list> <block pos:line="173" pos:column="106">{
            <if pos:line="174" pos:column="13">if<condition pos:line="174" pos:column="15">(<expr><name pos:line="174" pos:column="16">null</name> <op:operator pos:line="174" pos:column="21">==</op:operator> <name pos:line="174" pos:column="24">WorkingSet</name></expr>)</condition><then pos:line="174" pos:column="35"> <block pos:line="174" pos:column="36">{
                <throw pos:line="175" pos:column="17">throw <expr><op:operator pos:line="175" pos:column="23">new</op:operator> <call><name pos:line="175" pos:column="27">InvalidOperationException</name><argument_list pos:line="175" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="175" pos:column="53">"Query has no working set"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>
            <decl_stmt><decl><type><name><name pos:line="177" pos:column="13">Func</name><argument_list pos:line="177" pos:column="17">&lt;<argument><name pos:line="177" pos:column="18">TResult</name></argument>&gt;</argument_list></name></type> <name pos:line="177" pos:column="27">action</name> <init pos:line="177" pos:column="34">= <expr><lambda><parameter_list pos:line="177" pos:column="36">()</parameter_list> <op:operator pos:line="177" pos:column="39">=&gt;</op:operator> <block pos:line="177" pos:column="42">{
                <decl_stmt><decl><type><name pos:line="178" pos:column="17">NamespaceDefinition</name></type> <name pos:line="178" pos:column="37">globalScope</name></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="179" pos:column="17">cancellationToken</name><op:operator pos:line="179" pos:column="34">.</op:operator><name pos:line="179" pos:column="35">ThrowIfCancellationRequested</name></name><argument_list pos:line="179" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
                <if pos:line="180" pos:column="17">if<condition pos:line="180" pos:column="19">(<expr><call><name><name pos:line="180" pos:column="20">WorkingSet</name><op:operator pos:line="180" pos:column="30">.</op:operator><name pos:line="180" pos:column="31">TryObtainReadLock</name></name><argument_list pos:line="180" pos:column="48">(<argument><expr><name pos:line="180" pos:column="49">LockTimeout</name></expr></argument>, <argument><expr pos:line="180" pos:column="62">out <name pos:line="180" pos:column="66">globalScope</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="180" pos:column="79"> <block pos:line="180" pos:column="80">{
                    <try pos:line="181" pos:column="21">try <block pos:line="181" pos:column="25">{
                        <expr_stmt><expr><call><name><name pos:line="182" pos:column="25">cancellationToken</name><op:operator pos:line="182" pos:column="42">.</op:operator><name pos:line="182" pos:column="43">ThrowIfCancellationRequested</name></name><argument_list pos:line="182" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
                        <return pos:line="183" pos:column="25">return <expr><call><name pos:line="183" pos:column="32">ExecuteImpl</name><argument_list pos:line="183" pos:column="43">(<argument><expr><name pos:line="183" pos:column="44">globalScope</name></expr></argument>, <argument><expr><name pos:line="183" pos:column="57">parameterTuple</name></expr></argument>)</argument_list></call></expr>;</return>
                    }</block> <finally pos:line="184" pos:column="23">finally <block pos:line="184" pos:column="31">{
                        <expr_stmt><expr><call><name><name pos:line="185" pos:column="25">WorkingSet</name><op:operator pos:line="185" pos:column="35">.</op:operator><name pos:line="185" pos:column="36">ReleaseReadLock</name></name><argument_list pos:line="185" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
                    }</block></finally></try>
                }</block></then></if>
                <throw pos:line="188" pos:column="17">throw <expr><op:operator pos:line="188" pos:column="23">new</op:operator> <call><name pos:line="188" pos:column="27">TimeoutException</name><argument_list pos:line="188" pos:column="43">()</argument_list></call></expr>;</throw>
            }</block></lambda></expr></init></decl>;</decl_stmt>

            <return pos:line="191" pos:column="13">return <expr><call><name><name pos:line="191" pos:column="20">Factory</name><op:operator pos:line="191" pos:column="27">.</op:operator><name><name pos:line="191" pos:column="28">StartNew</name><argument_list pos:line="191" pos:column="36">&lt;<argument><name pos:line="191" pos:column="37">TResult</name></argument>&gt;</argument_list></name></name><argument_list pos:line="191" pos:column="45">(<argument><expr><name pos:line="191" pos:column="46">action</name></expr></argument>, <argument><expr><name pos:line="191" pos:column="54">cancellationToken</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="194" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="195" pos:column="9">/// &lt;see cref="ExecuteImpl"&gt;Executes the query&lt;/see&gt; asynchronously on &lt;see cref="WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="196" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="197" pos:column="9">/// &lt;param name="parameterTuple"&gt;A tuple with the query parameters&lt;/param&gt;</comment>
        <comment type="line" pos:line="198" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="199" pos:column="9">protected</specifier> <name pos:line="199" pos:column="19">TResult</name></type> <name pos:line="199" pos:column="27">Execute</name><parameter_list pos:line="199" pos:column="34">(<param><decl><type><name pos:line="199" pos:column="35">TTuple</name></type> <name pos:line="199" pos:column="42">parameterTuple</name></decl></param>)</parameter_list> <block pos:line="199" pos:column="58">{
            <if pos:line="200" pos:column="13">if<condition pos:line="200" pos:column="15">(<expr><name pos:line="200" pos:column="16">null</name> <op:operator pos:line="200" pos:column="21">==</op:operator> <name pos:line="200" pos:column="24">WorkingSet</name></expr>)</condition><then pos:line="200" pos:column="35"> <block pos:line="200" pos:column="36">{
                <throw pos:line="201" pos:column="17">throw <expr><op:operator pos:line="201" pos:column="23">new</op:operator> <call><name pos:line="201" pos:column="27">InvalidOperationException</name><argument_list pos:line="201" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="201" pos:column="53">"Query has no working set"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>
            <decl_stmt><decl><type><name pos:line="203" pos:column="13">NamespaceDefinition</name></type> <name pos:line="203" pos:column="33">globalScope</name></decl>;</decl_stmt>
            <if pos:line="204" pos:column="13">if<condition pos:line="204" pos:column="15">(<expr><call><name><name pos:line="204" pos:column="16">WorkingSet</name><op:operator pos:line="204" pos:column="26">.</op:operator><name pos:line="204" pos:column="27">TryObtainReadLock</name></name><argument_list pos:line="204" pos:column="44">(<argument><expr><name pos:line="204" pos:column="45">LockTimeout</name></expr></argument>, <argument><expr pos:line="204" pos:column="58">out <name pos:line="204" pos:column="62">globalScope</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="204" pos:column="75"> <block pos:line="204" pos:column="76">{
                <try pos:line="205" pos:column="17">try <block pos:line="205" pos:column="21">{
                    <return pos:line="206" pos:column="21">return <expr><call><name pos:line="206" pos:column="28">ExecuteImpl</name><argument_list pos:line="206" pos:column="39">(<argument><expr><name pos:line="206" pos:column="40">globalScope</name></expr></argument>, <argument><expr><name pos:line="206" pos:column="53">parameterTuple</name></expr></argument>)</argument_list></call></expr>;</return>
                }</block> <finally pos:line="207" pos:column="19">finally <block pos:line="207" pos:column="27">{
                    <expr_stmt><expr><call><name><name pos:line="208" pos:column="21">WorkingSet</name><op:operator pos:line="208" pos:column="31">.</op:operator><name pos:line="208" pos:column="32">ReleaseReadLock</name></name><argument_list pos:line="208" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                }</block></finally></try>
            }</block></then></if>
            <throw pos:line="211" pos:column="13">throw <expr><op:operator pos:line="211" pos:column="19">new</op:operator> <call><name pos:line="211" pos:column="23">TimeoutException</name><argument_list pos:line="211" pos:column="39">()</argument_list></call></expr>;</throw>
        }</block></function>

        <comment type="line" pos:line="214" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="215" pos:column="9">/// Executes the query on &lt;paramref name="root"/&gt;</comment>
        <comment type="line" pos:line="216" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="217" pos:column="9">/// &lt;param name="root"&gt;The root to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="218" pos:column="9">/// &lt;param name="parameterTuple"&gt;A tuple with the query parameters&lt;/param&gt;</comment>
        <comment type="line" pos:line="219" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function_decl><type><specifier pos:line="220" pos:column="9">protected</specifier> <specifier pos:line="220" pos:column="19">abstract</specifier> <name pos:line="220" pos:column="28">TResult</name></type> <name pos:line="220" pos:column="36">ExecuteImpl</name><parameter_list pos:line="220" pos:column="47">(<param><decl><type><name pos:line="220" pos:column="48">Statement</name></type> <name pos:line="220" pos:column="58">root</name></decl></param>, <param><decl><type><name pos:line="220" pos:column="64">TTuple</name></type> <name pos:line="220" pos:column="71">parameterTuple</name></decl></param>)</parameter_list>;</function_decl>
    }</block></class>

    <comment type="line" pos:line="223" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="224" pos:column="5">/// An abstract query with one parameter</comment>
    <comment type="line" pos:line="225" pos:column="5">/// &lt;/summary&gt;</comment>
    <comment type="line" pos:line="226" pos:column="5">/// &lt;typeparam name="TParam"&gt;The query parameter type&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="227" pos:column="5">/// &lt;typeparam name="TResult"&gt;The query result type&lt;/typeparam&gt;</comment>
    <class><specifier pos:line="228" pos:column="5">public</specifier> <specifier pos:line="228" pos:column="12">abstract</specifier> class <name><name pos:line="228" pos:column="27">AbstractQuery</name><argument_list pos:line="228" pos:column="40">&lt;<argument><name pos:line="228" pos:column="41">TParam</name></argument>, <argument><name pos:line="228" pos:column="49">TResult</name></argument>&gt;</argument_list></name> <super pos:line="228" pos:column="58">: <name><name pos:line="228" pos:column="60">AbstractQueryBase</name><argument_list pos:line="228" pos:column="77">&lt;<argument><name><name pos:line="228" pos:column="78">Tuple</name><argument_list pos:line="228" pos:column="83">&lt;<argument><name pos:line="228" pos:column="84">TParam</name></argument>&gt;</argument_list></name></argument>, <argument><name pos:line="228" pos:column="93">TResult</name></argument>&gt;</argument_list></name></super> <block pos:line="228" pos:column="102">{
        <comment type="line" pos:line="229" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="230" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="231" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="232" pos:column="9">/// &lt;param name="workingSet"&gt;The working set for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="233" pos:column="9">/// &lt;param name="lockTimeout"&gt;The read lock timeout to use for this query&lt;/param&gt;</comment>
        <constructor><specifier pos:line="234" pos:column="9">protected</specifier> <name pos:line="234" pos:column="19">AbstractQuery</name><parameter_list pos:line="234" pos:column="32">(<param><decl><type><name pos:line="234" pos:column="33">AbstractWorkingSet</name></type> <name pos:line="234" pos:column="52">workingSet</name></decl></param>, <param><decl><type><name pos:line="234" pos:column="64">int</name></type> <name pos:line="234" pos:column="68">lockTimeout</name></decl></param>)</parameter_list>
            <member_list pos:line="235" pos:column="13">: <call><name pos:line="235" pos:column="15">base</name><argument_list pos:line="235" pos:column="19">(<argument><expr><name pos:line="235" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="235" pos:column="32">lockTimeout</name></expr></argument>, <argument><expr><name><name pos:line="235" pos:column="45">Task</name><op:operator pos:line="235" pos:column="49">.</op:operator><name pos:line="235" pos:column="50">Factory</name></name></expr></argument>)</argument_list></call> </member_list><block pos:line="235" pos:column="59">{ }</block></constructor>

        <comment type="line" pos:line="237" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="238" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="239" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="240" pos:column="9">/// &lt;param name="workingSet"&gt;The working set for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="241" pos:column="9">/// &lt;param name="lockTimeout"&gt;The read lock timeout to use for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="242" pos:column="9">/// &lt;param name="factory"&gt;The task factory for this query&lt;/param&gt;</comment>
        <constructor><specifier pos:line="243" pos:column="9">protected</specifier> <name pos:line="243" pos:column="19">AbstractQuery</name><parameter_list pos:line="243" pos:column="32">(<param><decl><type><name pos:line="243" pos:column="33">AbstractWorkingSet</name></type> <name pos:line="243" pos:column="52">workingSet</name></decl></param>, <param><decl><type><name pos:line="243" pos:column="64">int</name></type> <name pos:line="243" pos:column="68">lockTimeout</name></decl></param>, <param><decl><type><name pos:line="243" pos:column="81">TaskFactory</name></type> <name pos:line="243" pos:column="93">factory</name></decl></param>)</parameter_list>
            <member_list pos:line="244" pos:column="13">: <call><name pos:line="244" pos:column="15">base</name><argument_list pos:line="244" pos:column="19">(<argument><expr><name pos:line="244" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="244" pos:column="32">lockTimeout</name></expr></argument>, <argument><expr><name pos:line="244" pos:column="45">factory</name></expr></argument>)</argument_list></call> </member_list><block pos:line="244" pos:column="54">{ }</block></constructor>

        <comment type="line" pos:line="246" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="247" pos:column="9">/// &lt;see cref="Execute(Statement,TParam)"&gt;Executes the query&lt;/see&gt; asynchronously on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="248" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="249" pos:column="9">/// &lt;param name="parameter"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="250" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="251" pos:column="9">public</specifier> <name><name pos:line="251" pos:column="16">Task</name><argument_list pos:line="251" pos:column="20">&lt;<argument><name pos:line="251" pos:column="21">TResult</name></argument>&gt;</argument_list></name></type> <name pos:line="251" pos:column="30">ExecuteAsync</name><parameter_list pos:line="251" pos:column="42">(<param><decl><type><name pos:line="251" pos:column="43">TParam</name></type> <name pos:line="251" pos:column="50">parameter</name></decl></param>)</parameter_list> <block pos:line="251" pos:column="61">{
            <return pos:line="252" pos:column="13">return <expr><call><name><name pos:line="252" pos:column="20">base</name><op:operator pos:line="252" pos:column="24">.</op:operator><name pos:line="252" pos:column="25">ExecuteAsync</name></name><argument_list pos:line="252" pos:column="37">(<argument><expr><call><name><name pos:line="252" pos:column="38">Tuple</name><op:operator pos:line="252" pos:column="43">.</op:operator><name pos:line="252" pos:column="44">Create</name></name><argument_list pos:line="252" pos:column="50">(<argument><expr><name pos:line="252" pos:column="51">parameter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="252" pos:column="63">new</op:operator> <call><name pos:line="252" pos:column="67">CancellationToken</name><argument_list pos:line="252" pos:column="84">(<argument><expr><lit:literal type="boolean" pos:line="252" pos:column="85">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>


        <comment type="line" pos:line="256" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="257" pos:column="9">/// &lt;see cref="Execute(Statement,TParam)"&gt;Executes the query&lt;/see&gt; asynchronously on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="258" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="259" pos:column="9">/// &lt;param name="parameter"&gt;The query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="260" pos:column="9">/// &lt;param name="cancellationToken"&gt;Cancellation token&lt;/param&gt;</comment>
        <comment type="line" pos:line="261" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="262" pos:column="9">public</specifier> <name><name pos:line="262" pos:column="16">Task</name><argument_list pos:line="262" pos:column="20">&lt;<argument><name pos:line="262" pos:column="21">TResult</name></argument>&gt;</argument_list></name></type> <name pos:line="262" pos:column="30">ExecuteAsync</name><parameter_list pos:line="262" pos:column="42">(<param><decl><type><name pos:line="262" pos:column="43">TParam</name></type> <name pos:line="262" pos:column="50">parameter</name></decl></param>, <param><decl><type><name pos:line="262" pos:column="61">CancellationToken</name></type> <name pos:line="262" pos:column="79">cancellationToken</name></decl></param>)</parameter_list> <block pos:line="262" pos:column="98">{
            <return pos:line="263" pos:column="13">return <expr><call><name><name pos:line="263" pos:column="20">base</name><op:operator pos:line="263" pos:column="24">.</op:operator><name pos:line="263" pos:column="25">ExecuteAsync</name></name><argument_list pos:line="263" pos:column="37">(<argument><expr><call><name><name pos:line="263" pos:column="38">Tuple</name><op:operator pos:line="263" pos:column="43">.</op:operator><name pos:line="263" pos:column="44">Create</name></name><argument_list pos:line="263" pos:column="50">(<argument><expr><name pos:line="263" pos:column="51">parameter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="263" pos:column="63">cancellationToken</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="266" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="267" pos:column="9">/// &lt;see cref="Execute(Statement,TParam)"&gt;Executes the query&lt;/see&gt; on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="268" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="269" pos:column="9">/// &lt;param name="parameter"&gt;The query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="270" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="271" pos:column="9">public</specifier> <name pos:line="271" pos:column="16">TResult</name></type> <name pos:line="271" pos:column="24">Execute</name><parameter_list pos:line="271" pos:column="31">(<param><decl><type><name pos:line="271" pos:column="32">TParam</name></type> <name pos:line="271" pos:column="39">parameter</name></decl></param>)</parameter_list> <block pos:line="271" pos:column="50">{
            <return pos:line="272" pos:column="13">return <expr><call><name><name pos:line="272" pos:column="20">base</name><op:operator pos:line="272" pos:column="24">.</op:operator><name pos:line="272" pos:column="25">Execute</name></name><argument_list pos:line="272" pos:column="32">(<argument><expr><call><name><name pos:line="272" pos:column="33">Tuple</name><op:operator pos:line="272" pos:column="38">.</op:operator><name pos:line="272" pos:column="39">Create</name></name><argument_list pos:line="272" pos:column="45">(<argument><expr><name pos:line="272" pos:column="46">parameter</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="275" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="276" pos:column="9">/// Executes the query on the given &lt;paramref name="root"/&gt;</comment>
        <comment type="line" pos:line="277" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="278" pos:column="9">/// &lt;param name="root"&gt;The root to start the query at&lt;/param&gt;</comment>
        <comment type="line" pos:line="279" pos:column="9">/// &lt;param name="parameter"&gt;The query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="280" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function_decl><type><specifier pos:line="281" pos:column="9">public</specifier> <specifier pos:line="281" pos:column="16">abstract</specifier> <name pos:line="281" pos:column="25">TResult</name></type> <name pos:line="281" pos:column="33">Execute</name><parameter_list pos:line="281" pos:column="40">(<param><decl><type><name pos:line="281" pos:column="41">Statement</name></type> <name pos:line="281" pos:column="51">root</name></decl></param>, <param><decl><type><name pos:line="281" pos:column="57">TParam</name></type> <name pos:line="281" pos:column="64">parameter</name></decl></param>)</parameter_list>;</function_decl>

        <comment type="line" pos:line="283" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="284" pos:column="9">/// Executes the query on &lt;paramref name="root"/&gt;</comment>
        <comment type="line" pos:line="285" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="286" pos:column="9">/// &lt;param name="root"&gt;The root to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="287" pos:column="9">/// &lt;param name="parameterTuple"&gt;A tuple with the query parameters&lt;/param&gt;</comment>
        <comment type="line" pos:line="288" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="289" pos:column="9">protected</specifier> <specifier pos:line="289" pos:column="19">sealed</specifier> <specifier pos:line="289" pos:column="26">override</specifier> <name pos:line="289" pos:column="35">TResult</name></type> <name pos:line="289" pos:column="43">ExecuteImpl</name><parameter_list pos:line="289" pos:column="54">(<param><decl><type><name pos:line="289" pos:column="55">Statement</name></type> <name pos:line="289" pos:column="65">root</name></decl></param>, <param><decl><type><name><name pos:line="289" pos:column="71">Tuple</name><argument_list pos:line="289" pos:column="76">&lt;<argument><name pos:line="289" pos:column="77">TParam</name></argument>&gt;</argument_list></name></type> <name pos:line="289" pos:column="85">parameterTuple</name></decl></param>)</parameter_list> <block pos:line="289" pos:column="101">{
            <return pos:line="290" pos:column="13">return <expr><call><name pos:line="290" pos:column="20">Execute</name><argument_list pos:line="290" pos:column="27">(<argument><expr><name pos:line="290" pos:column="28">root</name></expr></argument>, <argument><expr><name><name pos:line="290" pos:column="34">parameterTuple</name><op:operator pos:line="290" pos:column="48">.</op:operator><name pos:line="290" pos:column="49">Item1</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>

    <comment type="line" pos:line="294" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="295" pos:column="5">/// An abstract query with two parameters</comment>
    <comment type="line" pos:line="296" pos:column="5">/// &lt;/summary&gt;</comment>
    <comment type="line" pos:line="297" pos:column="5">/// &lt;typeparam name="TParam1"&gt;The type for the first query parameter&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="298" pos:column="5">/// &lt;typeparam name="TParam2"&gt;The type for the second query parameter&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="299" pos:column="5">/// &lt;typeparam name="TResult"&gt;The query result type&lt;/typeparam&gt;</comment>
    <class><specifier pos:line="300" pos:column="5">public</specifier> <specifier pos:line="300" pos:column="12">abstract</specifier> class <name><name pos:line="300" pos:column="27">AbstractQuery</name><argument_list pos:line="300" pos:column="40">&lt;<argument><name pos:line="300" pos:column="41">TParam1</name></argument>, <argument><name pos:line="300" pos:column="50">TParam2</name></argument>, <argument><name pos:line="300" pos:column="59">TResult</name></argument>&gt;</argument_list></name>
        <super pos:line="301" pos:column="9">: <name><name pos:line="301" pos:column="11">AbstractQueryBase</name><argument_list pos:line="301" pos:column="28">&lt;<argument><name><name pos:line="301" pos:column="29">Tuple</name><argument_list pos:line="301" pos:column="34">&lt;<argument><name pos:line="301" pos:column="35">TParam1</name></argument>, <argument><name pos:line="301" pos:column="44">TParam2</name></argument>&gt;</argument_list></name></argument>, <argument><name pos:line="301" pos:column="54">TResult</name></argument>&gt;</argument_list></name></super> <block pos:line="301" pos:column="63">{
        <comment type="line" pos:line="302" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="303" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="304" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="305" pos:column="9">/// &lt;param name="workingSet"&gt;The working set for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="306" pos:column="9">/// &lt;param name="lockTimeout"&gt;The read lock timeout to use for this query&lt;/param&gt;</comment>
        <constructor><specifier pos:line="307" pos:column="9">protected</specifier> <name pos:line="307" pos:column="19">AbstractQuery</name><parameter_list pos:line="307" pos:column="32">(<param><decl><type><name pos:line="307" pos:column="33">AbstractWorkingSet</name></type> <name pos:line="307" pos:column="52">workingSet</name></decl></param>, <param><decl><type><name pos:line="307" pos:column="64">int</name></type> <name pos:line="307" pos:column="68">lockTimeout</name></decl></param>)</parameter_list>
            <member_list pos:line="308" pos:column="13">: <call><name pos:line="308" pos:column="15">base</name><argument_list pos:line="308" pos:column="19">(<argument><expr><name pos:line="308" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="308" pos:column="32">lockTimeout</name></expr></argument>, <argument><expr><name><name pos:line="308" pos:column="45">Task</name><op:operator pos:line="308" pos:column="49">.</op:operator><name pos:line="308" pos:column="50">Factory</name></name></expr></argument>)</argument_list></call> </member_list><block pos:line="308" pos:column="59">{ }</block></constructor>

        <comment type="line" pos:line="310" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="311" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="312" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="313" pos:column="9">/// &lt;param name="workingSet"&gt;The working set for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="314" pos:column="9">/// &lt;param name="lockTimeout"&gt;The read lock timeout to use for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="315" pos:column="9">/// &lt;param name="factory"&gt;The task factory for this query&lt;/param&gt;</comment>
        <constructor><specifier pos:line="316" pos:column="9">protected</specifier> <name pos:line="316" pos:column="19">AbstractQuery</name><parameter_list pos:line="316" pos:column="32">(<param><decl><type><name pos:line="316" pos:column="33">AbstractWorkingSet</name></type> <name pos:line="316" pos:column="52">workingSet</name></decl></param>, <param><decl><type><name pos:line="316" pos:column="64">int</name></type> <name pos:line="316" pos:column="68">lockTimeout</name></decl></param>, <param><decl><type><name pos:line="316" pos:column="81">TaskFactory</name></type> <name pos:line="316" pos:column="93">factory</name></decl></param>)</parameter_list>
            <member_list pos:line="317" pos:column="13">: <call><name pos:line="317" pos:column="15">base</name><argument_list pos:line="317" pos:column="19">(<argument><expr><name pos:line="317" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="317" pos:column="32">lockTimeout</name></expr></argument>, <argument><expr><name pos:line="317" pos:column="45">factory</name></expr></argument>)</argument_list></call> </member_list><block pos:line="317" pos:column="54">{ }</block></constructor>

        <comment type="line" pos:line="319" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="320" pos:column="9">/// &lt;see cref="Execute(Statement,TParam1,TParam2)"&gt;Executes the query&lt;/see&gt; asynchronously on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="321" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="322" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="323" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="324" pos:column="9">/// &lt;param name="cancellationToken"&gt;Cancellation token&lt;/param&gt;</comment>
        <comment type="line" pos:line="325" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="326" pos:column="9">public</specifier> <name><name pos:line="326" pos:column="16">Task</name><argument_list pos:line="326" pos:column="20">&lt;<argument><name pos:line="326" pos:column="21">TResult</name></argument>&gt;</argument_list></name></type> <name pos:line="326" pos:column="30">ExecuteAsync</name><parameter_list pos:line="326" pos:column="42">(<param><decl><type><name pos:line="326" pos:column="43">TParam1</name></type> <name pos:line="326" pos:column="51">parameter1</name></decl></param>, <param><decl><type><name pos:line="326" pos:column="63">TParam2</name></type> <name pos:line="326" pos:column="71">parameter2</name></decl></param>, <param><decl><type><name pos:line="326" pos:column="83">CancellationToken</name></type> <name pos:line="326" pos:column="101">cancellationToken</name></decl></param>)</parameter_list> <block pos:line="326" pos:column="120">{
            <return pos:line="327" pos:column="13">return <expr><call><name pos:line="327" pos:column="20">ExecuteAsync</name><argument_list pos:line="327" pos:column="32">(<argument><expr><call><name><name pos:line="327" pos:column="33">Tuple</name><op:operator pos:line="327" pos:column="38">.</op:operator><name pos:line="327" pos:column="39">Create</name></name><argument_list pos:line="327" pos:column="45">(<argument><expr><name pos:line="327" pos:column="46">parameter1</name></expr></argument>, <argument><expr><name pos:line="327" pos:column="58">parameter2</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="327" pos:column="71">cancellationToken</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="330" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="331" pos:column="9">/// &lt;see cref="Execute(Statement,TParam1,TParam2)"&gt;Executes the query&lt;/see&gt; asynchronously on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="332" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="333" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="334" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="335" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="336" pos:column="9">public</specifier> <name><name pos:line="336" pos:column="16">Task</name><argument_list pos:line="336" pos:column="20">&lt;<argument><name pos:line="336" pos:column="21">TResult</name></argument>&gt;</argument_list></name></type> <name pos:line="336" pos:column="30">ExecuteAsync</name><parameter_list pos:line="336" pos:column="42">(<param><decl><type><name pos:line="336" pos:column="43">TParam1</name></type> <name pos:line="336" pos:column="51">parameter1</name></decl></param>, <param><decl><type><name pos:line="336" pos:column="63">TParam2</name></type> <name pos:line="336" pos:column="71">parameter2</name></decl></param>)</parameter_list> <block pos:line="336" pos:column="83">{
            <return pos:line="337" pos:column="13">return <expr><call><name pos:line="337" pos:column="20">ExecuteAsync</name><argument_list pos:line="337" pos:column="32">(<argument><expr><call><name><name pos:line="337" pos:column="33">Tuple</name><op:operator pos:line="337" pos:column="38">.</op:operator><name pos:line="337" pos:column="39">Create</name></name><argument_list pos:line="337" pos:column="45">(<argument><expr><name pos:line="337" pos:column="46">parameter1</name></expr></argument>, <argument><expr><name pos:line="337" pos:column="58">parameter2</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="337" pos:column="71">new</op:operator> <call><name pos:line="337" pos:column="75">CancellationToken</name><argument_list pos:line="337" pos:column="92">(<argument><expr><lit:literal type="boolean" pos:line="337" pos:column="93">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="340" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="341" pos:column="9">/// &lt;see cref="Execute(Statement,TParam1,TParam2)"&gt;Executes the query&lt;/see&gt; on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="342" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="343" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="344" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="345" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="346" pos:column="9">public</specifier> <name pos:line="346" pos:column="16">TResult</name></type> <name pos:line="346" pos:column="24">Execute</name><parameter_list pos:line="346" pos:column="31">(<param><decl><type><name pos:line="346" pos:column="32">TParam1</name></type> <name pos:line="346" pos:column="40">parameter1</name></decl></param>, <param><decl><type><name pos:line="346" pos:column="52">TParam2</name></type> <name pos:line="346" pos:column="60">parameter2</name></decl></param>)</parameter_list> <block pos:line="346" pos:column="72">{
            <return pos:line="347" pos:column="13">return <expr><call><name pos:line="347" pos:column="20">Execute</name><argument_list pos:line="347" pos:column="27">(<argument><expr><call><name><name pos:line="347" pos:column="28">Tuple</name><op:operator pos:line="347" pos:column="33">.</op:operator><name pos:line="347" pos:column="34">Create</name></name><argument_list pos:line="347" pos:column="40">(<argument><expr><name pos:line="347" pos:column="41">parameter1</name></expr></argument>, <argument><expr><name pos:line="347" pos:column="53">parameter2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="350" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="351" pos:column="9">/// Executes the query on &lt;paramref name="root"/&gt;</comment>
        <comment type="line" pos:line="352" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="353" pos:column="9">/// &lt;param name="root"&gt;The root to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="354" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="355" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="356" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function_decl><type><specifier pos:line="357" pos:column="9">public</specifier> <specifier pos:line="357" pos:column="16">abstract</specifier> <name pos:line="357" pos:column="25">TResult</name></type> <name pos:line="357" pos:column="33">Execute</name><parameter_list pos:line="357" pos:column="40">(<param><decl><type><name pos:line="357" pos:column="41">Statement</name></type> <name pos:line="357" pos:column="51">root</name></decl></param>, <param><decl><type><name pos:line="357" pos:column="57">TParam1</name></type> <name pos:line="357" pos:column="65">parameter1</name></decl></param>, <param><decl><type><name pos:line="357" pos:column="77">TParam2</name></type> <name pos:line="357" pos:column="85">parameter2</name></decl></param>)</parameter_list>;</function_decl>

        <comment type="line" pos:line="359" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="360" pos:column="9">/// Executes the query on &lt;paramref name="root"/&gt;</comment>
        <comment type="line" pos:line="361" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="362" pos:column="9">/// &lt;param name="root"&gt;The root to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="363" pos:column="9">/// &lt;param name="parameter"&gt;A tuple with the query parameters&lt;/param&gt;</comment>
        <comment type="line" pos:line="364" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="365" pos:column="9">protected</specifier> <specifier pos:line="365" pos:column="19">sealed</specifier> <specifier pos:line="365" pos:column="26">override</specifier> <name pos:line="365" pos:column="35">TResult</name></type> <name pos:line="365" pos:column="43">ExecuteImpl</name><parameter_list pos:line="365" pos:column="54">(<param><decl><type><name pos:line="365" pos:column="55">Statement</name></type> <name pos:line="365" pos:column="65">root</name></decl></param>, <param><decl><type><name><name pos:line="365" pos:column="71">Tuple</name><argument_list pos:line="365" pos:column="76">&lt;<argument><name pos:line="365" pos:column="77">TParam1</name></argument>, <argument><name pos:line="365" pos:column="86">TParam2</name></argument>&gt;</argument_list></name></type> <name pos:line="365" pos:column="95">parameter</name></decl></param>)</parameter_list> <block pos:line="365" pos:column="106">{
            <return pos:line="366" pos:column="13">return <expr><call><name pos:line="366" pos:column="20">Execute</name><argument_list pos:line="366" pos:column="27">(<argument><expr><name pos:line="366" pos:column="28">root</name></expr></argument>, <argument><expr><name><name pos:line="366" pos:column="34">parameter</name><op:operator pos:line="366" pos:column="43">.</op:operator><name pos:line="366" pos:column="44">Item1</name></name></expr></argument>, <argument><expr><name><name pos:line="366" pos:column="51">parameter</name><op:operator pos:line="366" pos:column="60">.</op:operator><name pos:line="366" pos:column="61">Item2</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>

    <comment type="line" pos:line="370" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="371" pos:column="5">/// An abstract query with three parameters</comment>
    <comment type="line" pos:line="372" pos:column="5">/// &lt;/summary&gt;</comment>
    <comment type="line" pos:line="373" pos:column="5">/// &lt;typeparam name="TParam1"&gt;The type for the first query parameter&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="374" pos:column="5">/// &lt;typeparam name="TParam2"&gt;The type for the second query parameter&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="375" pos:column="5">/// &lt;typeparam name="TParam3"&gt;The type for the 3rd query parameter&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="376" pos:column="5">/// &lt;typeparam name="TResult"&gt;The query result type&lt;/typeparam&gt;</comment>
    <class><specifier pos:line="377" pos:column="5">public</specifier> <specifier pos:line="377" pos:column="12">abstract</specifier> class <name><name pos:line="377" pos:column="27">AbstractQuery</name><argument_list pos:line="377" pos:column="40">&lt;<argument><name pos:line="377" pos:column="41">TParam1</name></argument>, <argument><name pos:line="377" pos:column="50">TParam2</name></argument>, <argument><name pos:line="377" pos:column="59">TParam3</name></argument>, <argument><name pos:line="377" pos:column="68">TResult</name></argument>&gt;</argument_list></name>
        <super pos:line="378" pos:column="9">: <name><name pos:line="378" pos:column="11">AbstractQueryBase</name><argument_list pos:line="378" pos:column="28">&lt;<argument><name><name pos:line="378" pos:column="29">Tuple</name><argument_list pos:line="378" pos:column="34">&lt;<argument><name pos:line="378" pos:column="35">TParam1</name></argument>, <argument><name pos:line="378" pos:column="44">TParam2</name></argument>, <argument><name pos:line="378" pos:column="53">TParam3</name></argument>&gt;</argument_list></name></argument>, <argument><name pos:line="378" pos:column="63">TResult</name></argument>&gt;</argument_list></name></super> <block pos:line="378" pos:column="72">{
        <comment type="line" pos:line="379" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="380" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="381" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="382" pos:column="9">/// &lt;param name="workingSet"&gt;The working set for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="383" pos:column="9">/// &lt;param name="lockTimeout"&gt;The read lock timeout to use for this query&lt;/param&gt;</comment>
        <constructor><specifier pos:line="384" pos:column="9">protected</specifier> <name pos:line="384" pos:column="19">AbstractQuery</name><parameter_list pos:line="384" pos:column="32">(<param><decl><type><name pos:line="384" pos:column="33">AbstractWorkingSet</name></type> <name pos:line="384" pos:column="52">workingSet</name></decl></param>, <param><decl><type><name pos:line="384" pos:column="64">int</name></type> <name pos:line="384" pos:column="68">lockTimeout</name></decl></param>)</parameter_list>
            <member_list pos:line="385" pos:column="13">: <call><name pos:line="385" pos:column="15">base</name><argument_list pos:line="385" pos:column="19">(<argument><expr><name pos:line="385" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="385" pos:column="32">lockTimeout</name></expr></argument>, <argument><expr><name><name pos:line="385" pos:column="45">Task</name><op:operator pos:line="385" pos:column="49">.</op:operator><name pos:line="385" pos:column="50">Factory</name></name></expr></argument>)</argument_list></call> </member_list><block pos:line="385" pos:column="59">{ }</block></constructor>

        <comment type="line" pos:line="387" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="388" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="389" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="390" pos:column="9">/// &lt;param name="workingSet"&gt;The working set for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="391" pos:column="9">/// &lt;param name="lockTimeout"&gt;The read lock timeout to use for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="392" pos:column="9">/// &lt;param name="factory"&gt;The task factory for this query&lt;/param&gt;</comment>
        <constructor><specifier pos:line="393" pos:column="9">protected</specifier> <name pos:line="393" pos:column="19">AbstractQuery</name><parameter_list pos:line="393" pos:column="32">(<param><decl><type><name pos:line="393" pos:column="33">AbstractWorkingSet</name></type> <name pos:line="393" pos:column="52">workingSet</name></decl></param>, <param><decl><type><name pos:line="393" pos:column="64">int</name></type> <name pos:line="393" pos:column="68">lockTimeout</name></decl></param>, <param><decl><type><name pos:line="393" pos:column="81">TaskFactory</name></type> <name pos:line="393" pos:column="93">factory</name></decl></param>)</parameter_list>
            <member_list pos:line="394" pos:column="13">: <call><name pos:line="394" pos:column="15">base</name><argument_list pos:line="394" pos:column="19">(<argument><expr><name pos:line="394" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="394" pos:column="32">lockTimeout</name></expr></argument>, <argument><expr><name pos:line="394" pos:column="45">factory</name></expr></argument>)</argument_list></call> </member_list><block pos:line="394" pos:column="54">{ }</block></constructor>

        <comment type="line" pos:line="396" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="397" pos:column="9">/// &lt;see cref="Execute(Statement,TParam1,TParam2,TParam3)"&gt;Executes the query&lt;/see&gt; asynchronously on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="398" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="399" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="400" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="401" pos:column="9">/// &lt;param name="parameter3"&gt;The third query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="402" pos:column="9">/// &lt;param name="cancellationToken"&gt;Cancellation token&lt;/param&gt;</comment>
        <comment type="line" pos:line="403" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="404" pos:column="9">public</specifier> <name><name pos:line="404" pos:column="16">Task</name><argument_list pos:line="404" pos:column="20">&lt;<argument><name pos:line="404" pos:column="21">TResult</name></argument>&gt;</argument_list></name></type> <name pos:line="404" pos:column="30">ExecuteAsync</name><parameter_list pos:line="404" pos:column="42">(<param><decl><type><name pos:line="404" pos:column="43">TParam1</name></type> <name pos:line="404" pos:column="51">parameter1</name></decl></param>, <param><decl><type><name pos:line="404" pos:column="63">TParam2</name></type> <name pos:line="404" pos:column="71">parameter2</name></decl></param>, <param><decl><type><name pos:line="404" pos:column="83">TParam3</name></type> <name pos:line="404" pos:column="91">parameter3</name></decl></param>, <param><decl><type><name pos:line="404" pos:column="103">CancellationToken</name></type> <name pos:line="404" pos:column="121">cancellationToken</name></decl></param>)</parameter_list> <block pos:line="404" pos:column="140">{
            <return pos:line="405" pos:column="13">return <expr><call><name pos:line="405" pos:column="20">ExecuteAsync</name><argument_list pos:line="405" pos:column="32">(<argument><expr><call><name><name pos:line="405" pos:column="33">Tuple</name><op:operator pos:line="405" pos:column="38">.</op:operator><name pos:line="405" pos:column="39">Create</name></name><argument_list pos:line="405" pos:column="45">(<argument><expr><name pos:line="405" pos:column="46">parameter1</name></expr></argument>, <argument><expr><name pos:line="405" pos:column="58">parameter2</name></expr></argument>, <argument><expr><name pos:line="405" pos:column="70">parameter3</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="405" pos:column="83">cancellationToken</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="408" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="409" pos:column="9">/// &lt;see cref="Execute(Statement,TParam1,TParam2,TParam3)"&gt;Executes the query&lt;/see&gt; asynchronously on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="410" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="411" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="412" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="413" pos:column="9">/// &lt;param name="parameter3"&gt;The third query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="414" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="415" pos:column="9">public</specifier> <name><name pos:line="415" pos:column="16">Task</name><argument_list pos:line="415" pos:column="20">&lt;<argument><name pos:line="415" pos:column="21">TResult</name></argument>&gt;</argument_list></name></type> <name pos:line="415" pos:column="30">ExecuteAsync</name><parameter_list pos:line="415" pos:column="42">(<param><decl><type><name pos:line="415" pos:column="43">TParam1</name></type> <name pos:line="415" pos:column="51">parameter1</name></decl></param>, <param><decl><type><name pos:line="415" pos:column="63">TParam2</name></type> <name pos:line="415" pos:column="71">parameter2</name></decl></param>, <param><decl><type><name pos:line="415" pos:column="83">TParam3</name></type> <name pos:line="415" pos:column="91">parameter3</name></decl></param>)</parameter_list> <block pos:line="415" pos:column="103">{
            <return pos:line="416" pos:column="13">return <expr><call><name pos:line="416" pos:column="20">ExecuteAsync</name><argument_list pos:line="416" pos:column="32">(<argument><expr><call><name><name pos:line="416" pos:column="33">Tuple</name><op:operator pos:line="416" pos:column="38">.</op:operator><name pos:line="416" pos:column="39">Create</name></name><argument_list pos:line="416" pos:column="45">(<argument><expr><name pos:line="416" pos:column="46">parameter1</name></expr></argument>, <argument><expr><name pos:line="416" pos:column="58">parameter2</name></expr></argument>, <argument><expr><name pos:line="416" pos:column="70">parameter3</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="416" pos:column="83">new</op:operator> <call><name pos:line="416" pos:column="87">CancellationToken</name><argument_list pos:line="416" pos:column="104">(<argument><expr><lit:literal type="boolean" pos:line="416" pos:column="105">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="419" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="420" pos:column="9">/// &lt;see cref="Execute(Statement,TParam1,TParam2,TParam3)"&gt;Executes the query&lt;/see&gt; on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="421" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="422" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="423" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="424" pos:column="9">/// &lt;param name="parameter3"&gt;The third query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="425" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="426" pos:column="9">public</specifier> <name pos:line="426" pos:column="16">TResult</name></type> <name pos:line="426" pos:column="24">Execute</name><parameter_list pos:line="426" pos:column="31">(<param><decl><type><name pos:line="426" pos:column="32">TParam1</name></type> <name pos:line="426" pos:column="40">parameter1</name></decl></param>, <param><decl><type><name pos:line="426" pos:column="52">TParam2</name></type> <name pos:line="426" pos:column="60">parameter2</name></decl></param>, <param><decl><type><name pos:line="426" pos:column="72">TParam3</name></type> <name pos:line="426" pos:column="80">parameter3</name></decl></param>)</parameter_list> <block pos:line="426" pos:column="92">{
            <return pos:line="427" pos:column="13">return <expr><call><name pos:line="427" pos:column="20">Execute</name><argument_list pos:line="427" pos:column="27">(<argument><expr><call><name><name pos:line="427" pos:column="28">Tuple</name><op:operator pos:line="427" pos:column="33">.</op:operator><name pos:line="427" pos:column="34">Create</name></name><argument_list pos:line="427" pos:column="40">(<argument><expr><name pos:line="427" pos:column="41">parameter1</name></expr></argument>, <argument><expr><name pos:line="427" pos:column="53">parameter2</name></expr></argument>, <argument><expr><name pos:line="427" pos:column="65">parameter3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="430" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="431" pos:column="9">/// Executes the query on &lt;paramref name="root"/&gt;</comment>
        <comment type="line" pos:line="432" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="433" pos:column="9">/// &lt;param name="root"&gt;The root to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="434" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="435" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="436" pos:column="9">/// &lt;param name="parameter3"&gt;The third query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="437" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function_decl><type><specifier pos:line="438" pos:column="9">public</specifier> <specifier pos:line="438" pos:column="16">abstract</specifier> <name pos:line="438" pos:column="25">TResult</name></type> <name pos:line="438" pos:column="33">Execute</name><parameter_list pos:line="438" pos:column="40">(<param><decl><type><name pos:line="438" pos:column="41">Statement</name></type> <name pos:line="438" pos:column="51">root</name></decl></param>, <param><decl><type><name pos:line="438" pos:column="57">TParam1</name></type> <name pos:line="438" pos:column="65">parameter1</name></decl></param>, <param><decl><type><name pos:line="438" pos:column="77">TParam2</name></type> <name pos:line="438" pos:column="85">parameter2</name></decl></param>, <param><decl><type><name pos:line="438" pos:column="97">TParam3</name></type> <name pos:line="438" pos:column="105">parameter3</name></decl></param>)</parameter_list>;</function_decl>

        <comment type="line" pos:line="440" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="441" pos:column="9">/// Executes the query on &lt;paramref name="root"/&gt;</comment>
        <comment type="line" pos:line="442" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="443" pos:column="9">/// &lt;param name="root"&gt;The root to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="444" pos:column="9">/// &lt;param name="parameter"&gt;A tuple with the query parameters&lt;/param&gt;</comment>
        <comment type="line" pos:line="445" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="446" pos:column="9">protected</specifier> <specifier pos:line="446" pos:column="19">sealed</specifier> <specifier pos:line="446" pos:column="26">override</specifier> <name pos:line="446" pos:column="35">TResult</name></type> <name pos:line="446" pos:column="43">ExecuteImpl</name><parameter_list pos:line="446" pos:column="54">(<param><decl><type><name pos:line="446" pos:column="55">Statement</name></type> <name pos:line="446" pos:column="65">root</name></decl></param>, <param><decl><type><name><name pos:line="446" pos:column="71">Tuple</name><argument_list pos:line="446" pos:column="76">&lt;<argument><name pos:line="446" pos:column="77">TParam1</name></argument>, <argument><name pos:line="446" pos:column="86">TParam2</name></argument>, <argument><name pos:line="446" pos:column="95">TParam3</name></argument>&gt;</argument_list></name></type> <name pos:line="446" pos:column="104">parameter</name></decl></param>)</parameter_list> <block pos:line="446" pos:column="115">{
            <return pos:line="447" pos:column="13">return <expr><call><name pos:line="447" pos:column="20">Execute</name><argument_list pos:line="447" pos:column="27">(<argument><expr><name pos:line="447" pos:column="28">root</name></expr></argument>, <argument><expr><name><name pos:line="447" pos:column="34">parameter</name><op:operator pos:line="447" pos:column="43">.</op:operator><name pos:line="447" pos:column="44">Item1</name></name></expr></argument>, <argument><expr><name><name pos:line="447" pos:column="51">parameter</name><op:operator pos:line="447" pos:column="60">.</op:operator><name pos:line="447" pos:column="61">Item2</name></name></expr></argument>, <argument><expr><name><name pos:line="447" pos:column="68">parameter</name><op:operator pos:line="447" pos:column="77">.</op:operator><name pos:line="447" pos:column="78">Item3</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>

    <comment type="line" pos:line="451" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="452" pos:column="5">/// An abstract query with four parameters</comment>
    <comment type="line" pos:line="453" pos:column="5">/// &lt;/summary&gt;</comment>
    <comment type="line" pos:line="454" pos:column="5">/// &lt;typeparam name="TParam1"&gt;The type for the first query parameter&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="455" pos:column="5">/// &lt;typeparam name="TParam2"&gt;The type for the second query parameter&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="456" pos:column="5">/// &lt;typeparam name="TParam3"&gt;The type for the third query parameter&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="457" pos:column="5">/// &lt;typeparam name="TParam4"&gt;The type for the fourth query parameter&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="458" pos:column="5">/// &lt;typeparam name="TResult"&gt;The query result type&lt;/typeparam&gt;</comment>
    <class><specifier pos:line="459" pos:column="5">public</specifier> <specifier pos:line="459" pos:column="12">abstract</specifier> class <name><name pos:line="459" pos:column="27">AbstractQuery</name><argument_list pos:line="459" pos:column="40">&lt;<argument><name pos:line="459" pos:column="41">TParam1</name></argument>, <argument><name pos:line="459" pos:column="50">TParam2</name></argument>, <argument><name pos:line="459" pos:column="59">TParam3</name></argument>, <argument><name pos:line="459" pos:column="68">TParam4</name></argument>, <argument><name pos:line="459" pos:column="77">TResult</name></argument>&gt;</argument_list></name>
        <super pos:line="460" pos:column="9">: <name><name pos:line="460" pos:column="11">AbstractQueryBase</name><argument_list pos:line="460" pos:column="28">&lt;<argument><name><name pos:line="460" pos:column="29">Tuple</name><argument_list pos:line="460" pos:column="34">&lt;<argument><name pos:line="460" pos:column="35">TParam1</name></argument>, <argument><name pos:line="460" pos:column="44">TParam2</name></argument>, <argument><name pos:line="460" pos:column="53">TParam3</name></argument>, <argument><name pos:line="460" pos:column="62">TParam4</name></argument>&gt;</argument_list></name></argument>, <argument><name pos:line="460" pos:column="72">TResult</name></argument>&gt;</argument_list></name></super> <block pos:line="460" pos:column="81">{
        <comment type="line" pos:line="461" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="462" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="463" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="464" pos:column="9">/// &lt;param name="workingSet"&gt;The working set for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="465" pos:column="9">/// &lt;param name="lockTimeout"&gt;The read lock timeout to use for this query&lt;/param&gt;</comment>
        <constructor><specifier pos:line="466" pos:column="9">protected</specifier> <name pos:line="466" pos:column="19">AbstractQuery</name><parameter_list pos:line="466" pos:column="32">(<param><decl><type><name pos:line="466" pos:column="33">AbstractWorkingSet</name></type> <name pos:line="466" pos:column="52">workingSet</name></decl></param>, <param><decl><type><name pos:line="466" pos:column="64">int</name></type> <name pos:line="466" pos:column="68">lockTimeout</name></decl></param>)</parameter_list>
            <member_list pos:line="467" pos:column="13">: <call><name pos:line="467" pos:column="15">base</name><argument_list pos:line="467" pos:column="19">(<argument><expr><name pos:line="467" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="467" pos:column="32">lockTimeout</name></expr></argument>, <argument><expr><name><name pos:line="467" pos:column="45">Task</name><op:operator pos:line="467" pos:column="49">.</op:operator><name pos:line="467" pos:column="50">Factory</name></name></expr></argument>)</argument_list></call> </member_list><block pos:line="467" pos:column="59">{ }</block></constructor>

        <comment type="line" pos:line="469" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="470" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="471" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="472" pos:column="9">/// &lt;param name="workingSet"&gt;The working set for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="473" pos:column="9">/// &lt;param name="lockTimeout"&gt;The read lock timeout to use for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="474" pos:column="9">/// &lt;param name="factory"&gt;The task factory for this query&lt;/param&gt;</comment>
        <constructor><specifier pos:line="475" pos:column="9">protected</specifier> <name pos:line="475" pos:column="19">AbstractQuery</name><parameter_list pos:line="475" pos:column="32">(<param><decl><type><name pos:line="475" pos:column="33">AbstractWorkingSet</name></type> <name pos:line="475" pos:column="52">workingSet</name></decl></param>, <param><decl><type><name pos:line="475" pos:column="64">int</name></type> <name pos:line="475" pos:column="68">lockTimeout</name></decl></param>, <param><decl><type><name pos:line="475" pos:column="81">TaskFactory</name></type> <name pos:line="475" pos:column="93">factory</name></decl></param>)</parameter_list>
            <member_list pos:line="476" pos:column="13">: <call><name pos:line="476" pos:column="15">base</name><argument_list pos:line="476" pos:column="19">(<argument><expr><name pos:line="476" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="476" pos:column="32">lockTimeout</name></expr></argument>, <argument><expr><name pos:line="476" pos:column="45">factory</name></expr></argument>)</argument_list></call> </member_list><block pos:line="476" pos:column="54">{ }</block></constructor>

        <comment type="line" pos:line="478" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="479" pos:column="9">/// &lt;see cref="Execute(Statement,TParam1,TParam2,TParam3,TParam4)"&gt;Executes the query&lt;/see&gt; asynchronously on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="480" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="481" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="482" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="483" pos:column="9">/// &lt;param name="parameter3"&gt;The third query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="484" pos:column="9">/// &lt;param name="parameter4"&gt;The fourth query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="485" pos:column="9">/// &lt;param name="cancellationToken"&gt;Cancellation token&lt;/param&gt;</comment>
        <comment type="line" pos:line="486" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="487" pos:column="9">public</specifier> <name><name pos:line="487" pos:column="16">Task</name><argument_list pos:line="487" pos:column="20">&lt;<argument><name pos:line="487" pos:column="21">TResult</name></argument>&gt;</argument_list></name></type> <name pos:line="487" pos:column="30">ExecuteAsync</name><parameter_list pos:line="487" pos:column="42">(<param><decl><type><name pos:line="487" pos:column="43">TParam1</name></type> <name pos:line="487" pos:column="51">parameter1</name></decl></param>, <param><decl><type><name pos:line="487" pos:column="63">TParam2</name></type> <name pos:line="487" pos:column="71">parameter2</name></decl></param>, <param><decl><type><name pos:line="487" pos:column="83">TParam3</name></type> <name pos:line="487" pos:column="91">parameter3</name></decl></param>, <param><decl><type><name pos:line="487" pos:column="103">TParam4</name></type> <name pos:line="487" pos:column="111">parameter4</name></decl></param>, <param><decl><type><name pos:line="487" pos:column="123">CancellationToken</name></type> <name pos:line="487" pos:column="141">cancellationToken</name></decl></param>)</parameter_list> <block pos:line="487" pos:column="160">{
            <return pos:line="488" pos:column="13">return <expr><call><name pos:line="488" pos:column="20">ExecuteAsync</name><argument_list pos:line="488" pos:column="32">(<argument><expr><call><name><name pos:line="488" pos:column="33">Tuple</name><op:operator pos:line="488" pos:column="38">.</op:operator><name pos:line="488" pos:column="39">Create</name></name><argument_list pos:line="488" pos:column="45">(<argument><expr><name pos:line="488" pos:column="46">parameter1</name></expr></argument>, <argument><expr><name pos:line="488" pos:column="58">parameter2</name></expr></argument>, <argument><expr><name pos:line="488" pos:column="70">parameter3</name></expr></argument>, <argument><expr><name pos:line="488" pos:column="82">parameter4</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="488" pos:column="95">cancellationToken</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="491" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="492" pos:column="9">/// &lt;see cref="Execute(Statement,TParam1,TParam2,TParam3,TParam4)"&gt;Executes the query&lt;/see&gt; asynchronously on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="493" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="494" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="495" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="496" pos:column="9">/// &lt;param name="parameter3"&gt;The third query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="497" pos:column="9">/// &lt;param name="parameter4"&gt;The fourth query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="498" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="499" pos:column="9">public</specifier> <name><name pos:line="499" pos:column="16">Task</name><argument_list pos:line="499" pos:column="20">&lt;<argument><name pos:line="499" pos:column="21">TResult</name></argument>&gt;</argument_list></name></type> <name pos:line="499" pos:column="30">ExecuteAsync</name><parameter_list pos:line="499" pos:column="42">(<param><decl><type><name pos:line="499" pos:column="43">TParam1</name></type> <name pos:line="499" pos:column="51">parameter1</name></decl></param>, <param><decl><type><name pos:line="499" pos:column="63">TParam2</name></type> <name pos:line="499" pos:column="71">parameter2</name></decl></param>, <param><decl><type><name pos:line="499" pos:column="83">TParam3</name></type> <name pos:line="499" pos:column="91">parameter3</name></decl></param>, <param><decl><type><name pos:line="499" pos:column="103">TParam4</name></type> <name pos:line="499" pos:column="111">parameter4</name></decl></param>)</parameter_list> <block pos:line="499" pos:column="123">{
            <return pos:line="500" pos:column="13">return <expr><call><name pos:line="500" pos:column="20">ExecuteAsync</name><argument_list pos:line="500" pos:column="32">(<argument><expr><call><name><name pos:line="500" pos:column="33">Tuple</name><op:operator pos:line="500" pos:column="38">.</op:operator><name pos:line="500" pos:column="39">Create</name></name><argument_list pos:line="500" pos:column="45">(<argument><expr><name pos:line="500" pos:column="46">parameter1</name></expr></argument>, <argument><expr><name pos:line="500" pos:column="58">parameter2</name></expr></argument>, <argument><expr><name pos:line="500" pos:column="70">parameter3</name></expr></argument>, <argument><expr><name pos:line="500" pos:column="82">parameter4</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="500" pos:column="95">new</op:operator> <call><name pos:line="500" pos:column="99">CancellationToken</name><argument_list pos:line="500" pos:column="116">(<argument><expr><lit:literal type="boolean" pos:line="500" pos:column="117">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="503" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="504" pos:column="9">/// &lt;see cref="Execute(Statement,TParam1,TParam2,TParam3,TParam4)"&gt;Executes the query&lt;/see&gt; on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="505" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="506" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="507" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="508" pos:column="9">/// &lt;param name="parameter3"&gt;The third query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="509" pos:column="9">/// &lt;param name="parameter4"&gt;The fourth query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="510" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="511" pos:column="9">public</specifier> <name pos:line="511" pos:column="16">TResult</name></type> <name pos:line="511" pos:column="24">Execute</name><parameter_list pos:line="511" pos:column="31">(<param><decl><type><name pos:line="511" pos:column="32">TParam1</name></type> <name pos:line="511" pos:column="40">parameter1</name></decl></param>, <param><decl><type><name pos:line="511" pos:column="52">TParam2</name></type> <name pos:line="511" pos:column="60">parameter2</name></decl></param>, <param><decl><type><name pos:line="511" pos:column="72">TParam3</name></type> <name pos:line="511" pos:column="80">parameter3</name></decl></param>, <param><decl><type><name pos:line="511" pos:column="92">TParam4</name></type> <name pos:line="511" pos:column="100">parameter4</name></decl></param>)</parameter_list> <block pos:line="511" pos:column="112">{
            <return pos:line="512" pos:column="13">return <expr><call><name pos:line="512" pos:column="20">Execute</name><argument_list pos:line="512" pos:column="27">(<argument><expr><call><name><name pos:line="512" pos:column="28">Tuple</name><op:operator pos:line="512" pos:column="33">.</op:operator><name pos:line="512" pos:column="34">Create</name></name><argument_list pos:line="512" pos:column="40">(<argument><expr><name pos:line="512" pos:column="41">parameter1</name></expr></argument>, <argument><expr><name pos:line="512" pos:column="53">parameter2</name></expr></argument>, <argument><expr><name pos:line="512" pos:column="65">parameter3</name></expr></argument>, <argument><expr><name pos:line="512" pos:column="77">parameter4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="515" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="516" pos:column="9">/// Executes the query on &lt;paramref name="root"/&gt;</comment>
        <comment type="line" pos:line="517" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="518" pos:column="9">/// &lt;param name="root"&gt;The root to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="519" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="520" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="521" pos:column="9">/// &lt;param name="parameter3"&gt;The third query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="522" pos:column="9">/// &lt;param name="parameter4"&gt;The fourth query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="523" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function_decl><type><specifier pos:line="524" pos:column="9">public</specifier> <specifier pos:line="524" pos:column="16">abstract</specifier> <name pos:line="524" pos:column="25">TResult</name></type> <name pos:line="524" pos:column="33">Execute</name><parameter_list pos:line="524" pos:column="40">(<param><decl><type><name pos:line="524" pos:column="41">Statement</name></type> <name pos:line="524" pos:column="51">root</name></decl></param>, <param><decl><type><name pos:line="524" pos:column="57">TParam1</name></type> <name pos:line="524" pos:column="65">parameter1</name></decl></param>, <param><decl><type><name pos:line="524" pos:column="77">TParam2</name></type> <name pos:line="524" pos:column="85">parameter2</name></decl></param>, <param><decl><type><name pos:line="524" pos:column="97">TParam3</name></type> <name pos:line="524" pos:column="105">parameter3</name></decl></param>, <param><decl><type><name pos:line="524" pos:column="117">TParam4</name></type> <name pos:line="524" pos:column="125">parameter4</name></decl></param>)</parameter_list>;</function_decl>

        <comment type="line" pos:line="526" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="527" pos:column="9">/// Executes the query on &lt;paramref name="root"/&gt;</comment>
        <comment type="line" pos:line="528" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="529" pos:column="9">/// &lt;param name="root"&gt;The root to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="530" pos:column="9">/// &lt;param name="parameter"&gt;A tuple with the query parameters&lt;/param&gt;</comment>
        <comment type="line" pos:line="531" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="532" pos:column="9">protected</specifier> <specifier pos:line="532" pos:column="19">sealed</specifier> <specifier pos:line="532" pos:column="26">override</specifier> <name pos:line="532" pos:column="35">TResult</name></type> <name pos:line="532" pos:column="43">ExecuteImpl</name><parameter_list pos:line="532" pos:column="54">(<param><decl><type><name pos:line="532" pos:column="55">Statement</name></type> <name pos:line="532" pos:column="65">root</name></decl></param>, <param><decl><type><name><name pos:line="532" pos:column="71">Tuple</name><argument_list pos:line="532" pos:column="76">&lt;<argument><name pos:line="532" pos:column="77">TParam1</name></argument>, <argument><name pos:line="532" pos:column="86">TParam2</name></argument>, <argument><name pos:line="532" pos:column="95">TParam3</name></argument>, <argument><name pos:line="532" pos:column="104">TParam4</name></argument>&gt;</argument_list></name></type> <name pos:line="532" pos:column="113">parameter</name></decl></param>)</parameter_list> <block pos:line="532" pos:column="124">{
            <return pos:line="533" pos:column="13">return <expr><call><name pos:line="533" pos:column="20">Execute</name><argument_list pos:line="533" pos:column="27">(<argument><expr><name pos:line="533" pos:column="28">root</name></expr></argument>, <argument><expr><name><name pos:line="533" pos:column="34">parameter</name><op:operator pos:line="533" pos:column="43">.</op:operator><name pos:line="533" pos:column="44">Item1</name></name></expr></argument>, <argument><expr><name><name pos:line="533" pos:column="51">parameter</name><op:operator pos:line="533" pos:column="60">.</op:operator><name pos:line="533" pos:column="61">Item2</name></name></expr></argument>, <argument><expr><name><name pos:line="533" pos:column="68">parameter</name><op:operator pos:line="533" pos:column="77">.</op:operator><name pos:line="533" pos:column="78">Item3</name></name></expr></argument>, <argument><expr><name><name pos:line="533" pos:column="85">parameter</name><op:operator pos:line="533" pos:column="94">.</op:operator><name pos:line="533" pos:column="95">Item4</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>

    <comment type="line" pos:line="537" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="538" pos:column="5">/// An abstract query with five parameters</comment>
    <comment type="line" pos:line="539" pos:column="5">/// &lt;/summary&gt;</comment>
    <comment type="line" pos:line="540" pos:column="5">/// &lt;typeparam name="TParam1"&gt;The type for the first query parameter&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="541" pos:column="5">/// &lt;typeparam name="TParam2"&gt;The type for the second query parameter&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="542" pos:column="5">/// &lt;typeparam name="TParam3"&gt;The type for the third query parameter&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="543" pos:column="5">/// &lt;typeparam name="TParam4"&gt;The type for the fourth query parameter&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="544" pos:column="5">/// &lt;typeparam name="TParam5"&gt;The type for the fifth query parameter&lt;/typeparam&gt;</comment>
    <comment type="line" pos:line="545" pos:column="5">/// &lt;typeparam name="TResult"&gt;The query result type&lt;/typeparam&gt;</comment>
    <class><specifier pos:line="546" pos:column="5">public</specifier> <specifier pos:line="546" pos:column="12">abstract</specifier> class <name><name pos:line="546" pos:column="27">AbstractQuery</name><argument_list pos:line="546" pos:column="40">&lt;<argument><name pos:line="546" pos:column="41">TParam1</name></argument>, <argument><name pos:line="546" pos:column="50">TParam2</name></argument>, <argument><name pos:line="546" pos:column="59">TParam3</name></argument>, <argument><name pos:line="546" pos:column="68">TParam4</name></argument>, <argument><name pos:line="546" pos:column="77">TParam5</name></argument>, <argument><name pos:line="546" pos:column="86">TResult</name></argument>&gt;</argument_list></name>
        <super pos:line="547" pos:column="9">: <name><name pos:line="547" pos:column="11">AbstractQueryBase</name><argument_list pos:line="547" pos:column="28">&lt;<argument><name><name pos:line="547" pos:column="29">Tuple</name><argument_list pos:line="547" pos:column="34">&lt;<argument><name pos:line="547" pos:column="35">TParam1</name></argument>, <argument><name pos:line="547" pos:column="44">TParam2</name></argument>, <argument><name pos:line="547" pos:column="53">TParam3</name></argument>, <argument><name pos:line="547" pos:column="62">TParam4</name></argument>, <argument><name pos:line="547" pos:column="71">TParam5</name></argument>&gt;</argument_list></name></argument>, <argument><name pos:line="547" pos:column="81">TResult</name></argument>&gt;</argument_list></name></super> <block pos:line="547" pos:column="90">{
        <comment type="line" pos:line="548" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="549" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="550" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="551" pos:column="9">/// &lt;param name="workingSet"&gt;The working set for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="552" pos:column="9">/// &lt;param name="lockTimeout"&gt;The read lock timeout to use for this query&lt;/param&gt;</comment>
        <constructor><specifier pos:line="553" pos:column="9">protected</specifier> <name pos:line="553" pos:column="19">AbstractQuery</name><parameter_list pos:line="553" pos:column="32">(<param><decl><type><name pos:line="553" pos:column="33">AbstractWorkingSet</name></type> <name pos:line="553" pos:column="52">workingSet</name></decl></param>, <param><decl><type><name pos:line="553" pos:column="64">int</name></type> <name pos:line="553" pos:column="68">lockTimeout</name></decl></param>)</parameter_list>
            <member_list pos:line="554" pos:column="13">: <call><name pos:line="554" pos:column="15">base</name><argument_list pos:line="554" pos:column="19">(<argument><expr><name pos:line="554" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="554" pos:column="32">lockTimeout</name></expr></argument>, <argument><expr><name><name pos:line="554" pos:column="45">Task</name><op:operator pos:line="554" pos:column="49">.</op:operator><name pos:line="554" pos:column="50">Factory</name></name></expr></argument>)</argument_list></call> </member_list><block pos:line="554" pos:column="59">{ }</block></constructor>

        <comment type="line" pos:line="556" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="557" pos:column="9">/// Creates a new query object</comment>
        <comment type="line" pos:line="558" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="559" pos:column="9">/// &lt;param name="workingSet"&gt;The working set for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="560" pos:column="9">/// &lt;param name="lockTimeout"&gt;The read lock timeout to use for this query&lt;/param&gt;</comment>
        <comment type="line" pos:line="561" pos:column="9">/// &lt;param name="factory"&gt;The task factory for this query&lt;/param&gt;</comment>
        <constructor><specifier pos:line="562" pos:column="9">protected</specifier> <name pos:line="562" pos:column="19">AbstractQuery</name><parameter_list pos:line="562" pos:column="32">(<param><decl><type><name pos:line="562" pos:column="33">AbstractWorkingSet</name></type> <name pos:line="562" pos:column="52">workingSet</name></decl></param>, <param><decl><type><name pos:line="562" pos:column="64">int</name></type> <name pos:line="562" pos:column="68">lockTimeout</name></decl></param>, <param><decl><type><name pos:line="562" pos:column="81">TaskFactory</name></type> <name pos:line="562" pos:column="93">factory</name></decl></param>)</parameter_list>
            <member_list pos:line="563" pos:column="13">: <call><name pos:line="563" pos:column="15">base</name><argument_list pos:line="563" pos:column="19">(<argument><expr><name pos:line="563" pos:column="20">workingSet</name></expr></argument>, <argument><expr><name pos:line="563" pos:column="32">lockTimeout</name></expr></argument>, <argument><expr><name pos:line="563" pos:column="45">factory</name></expr></argument>)</argument_list></call> </member_list><block pos:line="563" pos:column="54">{ }</block></constructor>

        <comment type="line" pos:line="565" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="566" pos:column="9">/// &lt;see cref="Execute(Statement,TParam1,TParam2,TParam3,TParam4,TParam5)"&gt;Executes the query&lt;/see&gt; asynchronously on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="567" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="568" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="569" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="570" pos:column="9">/// &lt;param name="parameter3"&gt;The third query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="571" pos:column="9">/// &lt;param name="parameter4"&gt;The fourth query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="572" pos:column="9">/// &lt;param name="parameter5"&gt;The fifth query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="573" pos:column="9">/// &lt;param name="cancellationToken"&gt;Cancellation token&lt;/param&gt;</comment>
        <comment type="line" pos:line="574" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="575" pos:column="9">public</specifier> <name><name pos:line="575" pos:column="16">Task</name><argument_list pos:line="575" pos:column="20">&lt;<argument><name pos:line="575" pos:column="21">TResult</name></argument>&gt;</argument_list></name></type> <name pos:line="575" pos:column="30">ExecuteAsync</name><parameter_list pos:line="575" pos:column="42">(<param><decl><type><name pos:line="575" pos:column="43">TParam1</name></type> <name pos:line="575" pos:column="51">parameter1</name></decl></param>, <param><decl><type><name pos:line="575" pos:column="63">TParam2</name></type> <name pos:line="575" pos:column="71">parameter2</name></decl></param>, <param><decl><type><name pos:line="575" pos:column="83">TParam3</name></type> <name pos:line="575" pos:column="91">parameter3</name></decl></param>, <param><decl><type><name pos:line="575" pos:column="103">TParam4</name></type> <name pos:line="575" pos:column="111">parameter4</name></decl></param>, <param><decl><type><name pos:line="575" pos:column="123">TParam5</name></type> <name pos:line="575" pos:column="131">parameter5</name></decl></param>, <param><decl><type><name pos:line="575" pos:column="143">CancellationToken</name></type> <name pos:line="575" pos:column="161">cancellationToken</name></decl></param>)</parameter_list> <block pos:line="575" pos:column="180">{
            <return pos:line="576" pos:column="13">return <expr><call><name pos:line="576" pos:column="20">ExecuteAsync</name><argument_list pos:line="576" pos:column="32">(<argument><expr><call><name><name pos:line="576" pos:column="33">Tuple</name><op:operator pos:line="576" pos:column="38">.</op:operator><name pos:line="576" pos:column="39">Create</name></name><argument_list pos:line="576" pos:column="45">(<argument><expr><name pos:line="576" pos:column="46">parameter1</name></expr></argument>, <argument><expr><name pos:line="576" pos:column="58">parameter2</name></expr></argument>, <argument><expr><name pos:line="576" pos:column="70">parameter3</name></expr></argument>, <argument><expr><name pos:line="576" pos:column="82">parameter4</name></expr></argument>, <argument><expr><name pos:line="576" pos:column="94">parameter5</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="576" pos:column="107">cancellationToken</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="579" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="580" pos:column="9">/// &lt;see cref="Execute(Statement,TParam1,TParam2,TParam3,TParam4,TParam5)"&gt;Executes the query&lt;/see&gt; asynchronously on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="581" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="582" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="583" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="584" pos:column="9">/// &lt;param name="parameter3"&gt;The third query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="585" pos:column="9">/// &lt;param name="parameter4"&gt;The fourth query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="586" pos:column="9">/// &lt;param name="parameter5"&gt;The fifth query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="587" pos:column="9">/// &lt;returns&gt;A task with the query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="588" pos:column="9">public</specifier> <name><name pos:line="588" pos:column="16">Task</name><argument_list pos:line="588" pos:column="20">&lt;<argument><name pos:line="588" pos:column="21">TResult</name></argument>&gt;</argument_list></name></type> <name pos:line="588" pos:column="30">ExecuteAsync</name><parameter_list pos:line="588" pos:column="42">(<param><decl><type><name pos:line="588" pos:column="43">TParam1</name></type> <name pos:line="588" pos:column="51">parameter1</name></decl></param>, <param><decl><type><name pos:line="588" pos:column="63">TParam2</name></type> <name pos:line="588" pos:column="71">parameter2</name></decl></param>, <param><decl><type><name pos:line="588" pos:column="83">TParam3</name></type> <name pos:line="588" pos:column="91">parameter3</name></decl></param>, <param><decl><type><name pos:line="588" pos:column="103">TParam4</name></type> <name pos:line="588" pos:column="111">parameter4</name></decl></param>, <param><decl><type><name pos:line="588" pos:column="123">TParam5</name></type> <name pos:line="588" pos:column="131">parameter5</name></decl></param>)</parameter_list> <block pos:line="588" pos:column="143">{
            <return pos:line="589" pos:column="13">return <expr><call><name pos:line="589" pos:column="20">ExecuteAsync</name><argument_list pos:line="589" pos:column="32">(<argument><expr><call><name><name pos:line="589" pos:column="33">Tuple</name><op:operator pos:line="589" pos:column="38">.</op:operator><name pos:line="589" pos:column="39">Create</name></name><argument_list pos:line="589" pos:column="45">(<argument><expr><name pos:line="589" pos:column="46">parameter1</name></expr></argument>, <argument><expr><name pos:line="589" pos:column="58">parameter2</name></expr></argument>, <argument><expr><name pos:line="589" pos:column="70">parameter3</name></expr></argument>, <argument><expr><name pos:line="589" pos:column="82">parameter4</name></expr></argument>, <argument><expr><name pos:line="589" pos:column="94">parameter5</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="589" pos:column="107">new</op:operator> <call><name pos:line="589" pos:column="111">CancellationToken</name><argument_list pos:line="589" pos:column="128">(<argument><expr><lit:literal type="boolean" pos:line="589" pos:column="129">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="592" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="593" pos:column="9">/// &lt;see cref="Execute(Statement,TParam1,TParam2,TParam3,TParam4,TParam5)"&gt;Executes the query&lt;/see&gt; asynchronously on the &lt;see cref="AbstractQueryBase{TTuple,TResult}.WorkingSet"/&gt;</comment>
        <comment type="line" pos:line="594" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="595" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="596" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="597" pos:column="9">/// &lt;param name="parameter3"&gt;The third query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="598" pos:column="9">/// &lt;param name="parameter4"&gt;The fourth query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="599" pos:column="9">/// &lt;param name="parameter5"&gt;The fifth query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="600" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="601" pos:column="9">public</specifier> <name pos:line="601" pos:column="16">TResult</name></type> <name pos:line="601" pos:column="24">Execute</name><parameter_list pos:line="601" pos:column="31">(<param><decl><type><name pos:line="601" pos:column="32">TParam1</name></type> <name pos:line="601" pos:column="40">parameter1</name></decl></param>, <param><decl><type><name pos:line="601" pos:column="52">TParam2</name></type> <name pos:line="601" pos:column="60">parameter2</name></decl></param>, <param><decl><type><name pos:line="601" pos:column="72">TParam3</name></type> <name pos:line="601" pos:column="80">parameter3</name></decl></param>, <param><decl><type><name pos:line="601" pos:column="92">TParam4</name></type> <name pos:line="601" pos:column="100">parameter4</name></decl></param>, <param><decl><type><name pos:line="601" pos:column="112">TParam5</name></type> <name pos:line="601" pos:column="120">parameter5</name></decl></param>)</parameter_list> <block pos:line="601" pos:column="132">{
            <return pos:line="602" pos:column="13">return <expr><call><name pos:line="602" pos:column="20">Execute</name><argument_list pos:line="602" pos:column="27">(<argument><expr><call><name><name pos:line="602" pos:column="28">Tuple</name><op:operator pos:line="602" pos:column="33">.</op:operator><name pos:line="602" pos:column="34">Create</name></name><argument_list pos:line="602" pos:column="40">(<argument><expr><name pos:line="602" pos:column="41">parameter1</name></expr></argument>, <argument><expr><name pos:line="602" pos:column="53">parameter2</name></expr></argument>, <argument><expr><name pos:line="602" pos:column="65">parameter3</name></expr></argument>, <argument><expr><name pos:line="602" pos:column="77">parameter4</name></expr></argument>, <argument><expr><name pos:line="602" pos:column="89">parameter5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="605" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="606" pos:column="9">/// Executes the query on &lt;paramref name="root"/&gt;</comment>
        <comment type="line" pos:line="607" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="608" pos:column="9">/// &lt;param name="root"&gt;The root to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="609" pos:column="9">/// &lt;param name="parameter1"&gt;The first query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="610" pos:column="9">/// &lt;param name="parameter2"&gt;The second query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="611" pos:column="9">/// &lt;param name="parameter3"&gt;The third query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="612" pos:column="9">/// &lt;param name="parameter4"&gt;The fourth query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="613" pos:column="9">/// &lt;param name="parameter5"&gt;The fifth query parameter&lt;/param&gt;</comment>
        <comment type="line" pos:line="614" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function_decl><type><specifier pos:line="615" pos:column="9">public</specifier> <specifier pos:line="615" pos:column="16">abstract</specifier> <name pos:line="615" pos:column="25">TResult</name></type> <name pos:line="615" pos:column="33">Execute</name><parameter_list pos:line="615" pos:column="40">(<param><decl><type><name pos:line="615" pos:column="41">Statement</name></type> <name pos:line="615" pos:column="51">root</name></decl></param>, <param><decl><type><name pos:line="615" pos:column="57">TParam1</name></type> <name pos:line="615" pos:column="65">parameter1</name></decl></param>, <param><decl><type><name pos:line="615" pos:column="77">TParam2</name></type> <name pos:line="615" pos:column="85">parameter2</name></decl></param>, <param><decl><type><name pos:line="615" pos:column="97">TParam3</name></type> <name pos:line="615" pos:column="105">parameter3</name></decl></param>, <param><decl><type><name pos:line="615" pos:column="117">TParam4</name></type> <name pos:line="615" pos:column="125">parameter4</name></decl></param>, <param><decl><type><name pos:line="615" pos:column="137">TParam5</name></type> <name pos:line="615" pos:column="145">parameter5</name></decl></param>)</parameter_list>;</function_decl>

        <comment type="line" pos:line="617" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="618" pos:column="9">/// Executes the query on &lt;paramref name="root"/&gt;</comment>
        <comment type="line" pos:line="619" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="620" pos:column="9">/// &lt;param name="root"&gt;The root to query&lt;/param&gt;</comment>
        <comment type="line" pos:line="621" pos:column="9">/// &lt;param name="parameter"&gt;A tuple with the query parameters&lt;/param&gt;</comment>
        <comment type="line" pos:line="622" pos:column="9">/// &lt;returns&gt;The query result&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="623" pos:column="9">protected</specifier> <specifier pos:line="623" pos:column="19">sealed</specifier> <specifier pos:line="623" pos:column="26">override</specifier> <name pos:line="623" pos:column="35">TResult</name></type> <name pos:line="623" pos:column="43">ExecuteImpl</name><parameter_list pos:line="623" pos:column="54">(<param><decl><type><name pos:line="623" pos:column="55">Statement</name></type> <name pos:line="623" pos:column="65">root</name></decl></param>, <param><decl><type><name><name pos:line="623" pos:column="71">Tuple</name><argument_list pos:line="623" pos:column="76">&lt;<argument><name pos:line="623" pos:column="77">TParam1</name></argument>, <argument><name pos:line="623" pos:column="86">TParam2</name></argument>, <argument><name pos:line="623" pos:column="95">TParam3</name></argument>, <argument><name pos:line="623" pos:column="104">TParam4</name></argument>, <argument><name pos:line="623" pos:column="113">TParam5</name></argument>&gt;</argument_list></name></type> <name pos:line="623" pos:column="122">parameter</name></decl></param>)</parameter_list> <block pos:line="623" pos:column="133">{
            <return pos:line="624" pos:column="13">return <expr><call><name pos:line="624" pos:column="20">Execute</name><argument_list pos:line="624" pos:column="27">(<argument><expr><name pos:line="624" pos:column="28">root</name></expr></argument>, <argument><expr><name><name pos:line="624" pos:column="34">parameter</name><op:operator pos:line="624" pos:column="43">.</op:operator><name pos:line="624" pos:column="44">Item1</name></name></expr></argument>, <argument><expr><name><name pos:line="624" pos:column="51">parameter</name><op:operator pos:line="624" pos:column="60">.</op:operator><name pos:line="624" pos:column="61">Item2</name></name></expr></argument>, <argument><expr><name><name pos:line="624" pos:column="68">parameter</name><op:operator pos:line="624" pos:column="77">.</op:operator><name pos:line="624" pos:column="78">Item3</name></name></expr></argument>, <argument><expr><name><name pos:line="624" pos:column="85">parameter</name><op:operator pos:line="624" pos:column="94">.</op:operator><name pos:line="624" pos:column="95">Item4</name></name></expr></argument>, <argument><expr><name><name pos:line="624" pos:column="102">parameter</name><op:operator pos:line="624" pos:column="111">.</op:operator><name pos:line="624" pos:column="112">Item5</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
