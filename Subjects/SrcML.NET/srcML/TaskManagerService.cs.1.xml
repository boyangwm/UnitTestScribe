<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\VisualStudio\ABB.SrcML.VisualStudio.SrcMLService\TaskManagerService.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">ABB</name><op:operator pos:line="1" pos:column="10">.</op:operator><name pos:line="1" pos:column="11">SrcML</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">ABB</name><op:operator pos:line="2" pos:column="10">.</op:operator><name pos:line="2" pos:column="11">SrcML</name><op:operator pos:line="2" pos:column="16">.</op:operator><name pos:line="2" pos:column="17">Utilities</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">ABB</name><op:operator pos:line="3" pos:column="10">.</op:operator><name pos:line="3" pos:column="11">VisualStudio</name></name>;</using>
<using pos:line="4" pos:column="1">using <name pos:line="4" pos:column="7">System</name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Collections</name><op:operator pos:line="5" pos:column="25">.</op:operator><name pos:line="5" pos:column="26">Generic</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Linq</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Runtime</name><op:operator pos:line="7" pos:column="21">.</op:operator><name pos:line="7" pos:column="22">InteropServices</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">System</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">Text</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">System</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">Threading</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">System</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">Threading</name><op:operator pos:line="10" pos:column="23">.</op:operator><name pos:line="10" pos:column="24">Tasks</name></name>;</using>

<namespace pos:line="12" pos:column="1">namespace <name><name pos:line="12" pos:column="11">ABB</name><op:operator pos:line="12" pos:column="14">.</op:operator><name pos:line="12" pos:column="15">VisualStudio</name></name> <block pos:line="12" pos:column="28">{
    <class><specifier pos:line="13" pos:column="5">public</specifier> class <name pos:line="13" pos:column="18">TaskManagerService</name> <super pos:line="13" pos:column="37">: <name pos:line="13" pos:column="39">ITaskManagerService</name>, <name pos:line="13" pos:column="60">STaskManagerService</name></super> <block pos:line="13" pos:column="80">{
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">private</specifier> <name pos:line="14" pos:column="17">IServiceProvider</name></type> <name pos:line="14" pos:column="34">_serviceProvider</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">private</specifier> <name pos:line="15" pos:column="17">LimitedConcurrencyLevelTaskScheduler</name></type> <name pos:line="15" pos:column="54">_scheduler</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">private</specifier> <name pos:line="16" pos:column="17">TaskFactory</name></type> <name pos:line="16" pos:column="29">_factory</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">private</specifier> <name><name pos:line="17" pos:column="17">EnvDTE</name><op:operator pos:line="17" pos:column="23">.</op:operator><name pos:line="17" pos:column="24">DTE</name></name></type> <name pos:line="17" pos:column="28">_dteService</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">private</specifier> <name><name pos:line="18" pos:column="17">EnvDTE</name><op:operator pos:line="18" pos:column="23">.</op:operator><name pos:line="18" pos:column="24">BuildEvents</name></name></type> <name pos:line="18" pos:column="36">_buildEvents</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">private</specifier> <name><name pos:line="19" pos:column="17">EnvDTE</name><op:operator pos:line="19" pos:column="23">.</op:operator><name pos:line="19" pos:column="24">WindowEvents</name></name></type> <name pos:line="19" pos:column="37">_windowEvents</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="21" pos:column="9">public</specifier> <name pos:line="21" pos:column="16">TaskManagerService</name><parameter_list pos:line="21" pos:column="34">(<param><decl><type><name pos:line="21" pos:column="35">IServiceProvider</name></type> <name pos:line="21" pos:column="52">serviceProvider</name></decl></param>, <param><decl><type><name pos:line="21" pos:column="69">IConcurrencyStrategy</name></type> <name pos:line="21" pos:column="90">concurrencyStrategy</name></decl></param>)</parameter_list> <block pos:line="21" pos:column="111">{
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">this</name><op:operator pos:line="22" pos:column="17">.</op:operator><name pos:line="22" pos:column="18">_serviceProvider</name></name> <op:operator pos:line="22" pos:column="35">=</op:operator> <name pos:line="22" pos:column="37">serviceProvider</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="23" pos:column="13">this</name><op:operator pos:line="23" pos:column="17">.</op:operator><name pos:line="23" pos:column="18">_scheduler</name></name> <op:operator pos:line="23" pos:column="29">=</op:operator> <op:operator pos:line="23" pos:column="31">new</op:operator> <call><name pos:line="23" pos:column="35">LimitedConcurrencyLevelTaskScheduler</name><argument_list pos:line="23" pos:column="71">(<argument><expr><call><name><name pos:line="23" pos:column="72">concurrencyStrategy</name><op:operator pos:line="23" pos:column="91">.</op:operator><name pos:line="23" pos:column="92">ComputeAvailableCores</name></name><argument_list pos:line="23" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="24" pos:column="13">this</name><op:operator pos:line="24" pos:column="17">.</op:operator><name pos:line="24" pos:column="18">_factory</name></name> <op:operator pos:line="24" pos:column="27">=</op:operator> <op:operator pos:line="24" pos:column="29">new</op:operator> <call><name pos:line="24" pos:column="33">TaskFactory</name><argument_list pos:line="24" pos:column="44">(<argument><expr><name pos:line="24" pos:column="45">_scheduler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">SubscribeToEvents</name><argument_list pos:line="25" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="28" pos:column="9">public</specifier> <specifier pos:line="28" pos:column="16">event</specifier> <name pos:line="28" pos:column="22">EventHandler</name></type> <name pos:line="28" pos:column="35">SchedulerIdled</name> <block pos:line="28" pos:column="50">{
            <function><name pos:line="29" pos:column="13">add</name> <block pos:line="29" pos:column="17">{ <expr_stmt><expr><name><name pos:line="29" pos:column="19">this</name><op:operator pos:line="29" pos:column="23">.</op:operator><name pos:line="29" pos:column="24">_scheduler</name><op:operator pos:line="29" pos:column="34">.</op:operator><name pos:line="29" pos:column="35">SchedulerIdled</name></name> <op:operator pos:line="29" pos:column="50">+=</op:operator> <name pos:line="29" pos:column="53">value</name></expr>;</expr_stmt> }</block></function>
            <function><name pos:line="30" pos:column="13">remove</name> <block pos:line="30" pos:column="20">{ <expr_stmt><expr><name><name pos:line="30" pos:column="22">this</name><op:operator pos:line="30" pos:column="26">.</op:operator><name pos:line="30" pos:column="27">_scheduler</name><op:operator pos:line="30" pos:column="37">.</op:operator><name pos:line="30" pos:column="38">SchedulerIdled</name></name> <op:operator pos:line="30" pos:column="53">-=</op:operator> <name pos:line="30" pos:column="56">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="33" pos:column="9">private</specifier> <name pos:line="33" pos:column="17">void</name></type> <name pos:line="33" pos:column="22">SubscribeToEvents</name><parameter_list pos:line="33" pos:column="39">()</parameter_list> <block pos:line="33" pos:column="42">{
            <expr_stmt><expr><name pos:line="34" pos:column="13">_dteService</name> <op:operator pos:line="34" pos:column="25">=</op:operator> <call><name><name pos:line="34" pos:column="27">_serviceProvider</name><op:operator pos:line="34" pos:column="43">.</op:operator><name pos:line="34" pos:column="44">GetService</name></name><argument_list pos:line="34" pos:column="54">(<argument><expr><call><name pos:line="34" pos:column="55">typeof</name><argument_list pos:line="34" pos:column="61">(<argument><expr><name><name pos:line="34" pos:column="62">EnvDTE</name><op:operator pos:line="34" pos:column="68">.</op:operator><name pos:line="34" pos:column="69">DTE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="34" pos:column="75">as</op:operator> <name><name pos:line="34" pos:column="78">EnvDTE</name><op:operator pos:line="34" pos:column="84">.</op:operator><name pos:line="34" pos:column="85">DTE</name></name></expr>;</expr_stmt>
            <if pos:line="35" pos:column="13">if<condition pos:line="35" pos:column="15">(<expr><name pos:line="35" pos:column="16">null</name> <op:operator pos:line="35" pos:column="21">!=</op:operator> <name pos:line="35" pos:column="24">_dteService</name></expr>)</condition><then pos:line="35" pos:column="36"> <block pos:line="35" pos:column="37">{
                <expr_stmt><expr><name pos:line="36" pos:column="17">_buildEvents</name> <op:operator pos:line="36" pos:column="30">=</op:operator> <name><name pos:line="36" pos:column="32">_dteService</name><op:operator pos:line="36" pos:column="43">.</op:operator><name pos:line="36" pos:column="44">Events</name><op:operator pos:line="36" pos:column="50">.</op:operator><name pos:line="36" pos:column="51">BuildEvents</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="37" pos:column="17">_windowEvents</name> <op:operator pos:line="37" pos:column="31">=</op:operator> <name><name pos:line="37" pos:column="33">_dteService</name><op:operator pos:line="37" pos:column="44">.</op:operator><name pos:line="37" pos:column="45">Events</name><op:operator pos:line="37" pos:column="51">.</op:operator><name pos:line="37" pos:column="52">WindowEvents</name></name></expr>;</expr_stmt>

                <if pos:line="39" pos:column="17">if<condition pos:line="39" pos:column="19">(<expr><name pos:line="39" pos:column="20">null</name> <op:operator pos:line="39" pos:column="25">!=</op:operator> <name pos:line="39" pos:column="28">_buildEvents</name></expr>)</condition><then pos:line="39" pos:column="41"> <block pos:line="39" pos:column="42">{
                    <expr_stmt><expr><name><name pos:line="40" pos:column="21">_buildEvents</name><op:operator pos:line="40" pos:column="33">.</op:operator><name pos:line="40" pos:column="34">OnBuildBegin</name></name> <op:operator pos:line="40" pos:column="47">+=</op:operator> <name pos:line="40" pos:column="50">_buildEvents_OnBuildBegin</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name pos:line="41" pos:column="21">_buildEvents</name><op:operator pos:line="41" pos:column="33">.</op:operator><name pos:line="41" pos:column="34">OnBuildDone</name></name> <op:operator pos:line="41" pos:column="46">+=</op:operator> <name pos:line="41" pos:column="49">_buildEvents_OnBuildDone</name></expr>;</expr_stmt>
                }</block></then></if>

                <if pos:line="44" pos:column="17">if<condition pos:line="44" pos:column="19">(<expr><name pos:line="44" pos:column="20">null</name> <op:operator pos:line="44" pos:column="25">!=</op:operator> <name pos:line="44" pos:column="28">_windowEvents</name></expr>)</condition><then pos:line="44" pos:column="42"> <block pos:line="44" pos:column="43">{
                    <expr_stmt><expr><name><name pos:line="45" pos:column="21">_windowEvents</name><op:operator pos:line="45" pos:column="34">.</op:operator><name pos:line="45" pos:column="35">WindowActivated</name></name> <op:operator pos:line="45" pos:column="51">+=</op:operator> <name pos:line="45" pos:column="54">_windowEvents_WindowActivated</name></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="50" pos:column="9">private</specifier> <name pos:line="50" pos:column="17">bool</name></type> <name pos:line="50" pos:column="22">IsInDebugLayout</name><parameter_list pos:line="50" pos:column="37">()</parameter_list> <block pos:line="50" pos:column="40">{
            <try pos:line="51" pos:column="13">try <block pos:line="51" pos:column="17">{
                <return pos:line="52" pos:column="17">return <expr><call><name><name pos:line="52" pos:column="24">_dteService</name><op:operator pos:line="52" pos:column="35">.</op:operator><name pos:line="52" pos:column="36">WindowConfigurations</name><op:operator pos:line="52" pos:column="56">.</op:operator><name pos:line="52" pos:column="57">ActiveConfigurationName</name><op:operator pos:line="52" pos:column="80">.</op:operator><name pos:line="52" pos:column="81">Contains</name></name><argument_list pos:line="52" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="90">"Debug"</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
            }</block> <catch pos:line="53" pos:column="15">catch<parameter_list pos:line="53" pos:column="20">(<param><decl><type><name pos:line="53" pos:column="21">COMException</name></type></decl></param>)</parameter_list> <block pos:line="53" pos:column="35">{
                <return pos:line="54" pos:column="17">return <expr><lit:literal type="boolean" pos:line="54" pos:column="24">false</lit:literal></expr>;</return>
            }</block></catch></try>
        }</block></function>
        <function><type><name pos:line="57" pos:column="9">void</name></type> <name pos:line="57" pos:column="14">_windowEvents_WindowActivated</name><parameter_list pos:line="57" pos:column="43">(<param><decl><type><name><name pos:line="57" pos:column="44">EnvDTE</name><op:operator pos:line="57" pos:column="50">.</op:operator><name pos:line="57" pos:column="51">Window</name></name></type> <name pos:line="57" pos:column="58">GotFocus</name></decl></param>, <param><decl><type><name><name pos:line="57" pos:column="68">EnvDTE</name><op:operator pos:line="57" pos:column="74">.</op:operator><name pos:line="57" pos:column="75">Window</name></name></type> <name pos:line="57" pos:column="82">LostFocus</name></decl></param>)</parameter_list> <block pos:line="57" pos:column="93">{
            <if pos:line="58" pos:column="13">if<condition pos:line="58" pos:column="15">(<expr><call><name pos:line="58" pos:column="16">IsInDebugLayout</name><argument_list pos:line="58" pos:column="31">()</argument_list></call></expr>)</condition><then pos:line="58" pos:column="34"> <block pos:line="58" pos:column="35">{
                <expr_stmt><expr><call><name><name pos:line="59" pos:column="17">_scheduler</name><op:operator pos:line="59" pos:column="27">.</op:operator><name pos:line="59" pos:column="28">Stop</name></name><argument_list pos:line="59" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="60" pos:column="15">else <block pos:line="60" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="61" pos:column="17">_scheduler</name><op:operator pos:line="61" pos:column="27">.</op:operator><name pos:line="61" pos:column="28">Start</name></name><argument_list pos:line="61" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><name pos:line="65" pos:column="9">void</name></type> <name pos:line="65" pos:column="14">_buildEvents_OnBuildBegin</name><parameter_list pos:line="65" pos:column="39">(<param><decl><type><name><name pos:line="65" pos:column="40">EnvDTE</name><op:operator pos:line="65" pos:column="46">.</op:operator><name pos:line="65" pos:column="47">vsBuildScope</name></name></type> <name pos:line="65" pos:column="60">Scope</name></decl></param>, <param><decl><type><name><name pos:line="65" pos:column="67">EnvDTE</name><op:operator pos:line="65" pos:column="73">.</op:operator><name pos:line="65" pos:column="74">vsBuildAction</name></name></type> <name pos:line="65" pos:column="88">Action</name></decl></param>)</parameter_list> <block pos:line="65" pos:column="96">{
            <expr_stmt><expr><call><name><name pos:line="66" pos:column="13">_scheduler</name><op:operator pos:line="66" pos:column="23">.</op:operator><name pos:line="66" pos:column="24">Stop</name></name><argument_list pos:line="66" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><name pos:line="69" pos:column="9">void</name></type> <name pos:line="69" pos:column="14">_buildEvents_OnBuildDone</name><parameter_list pos:line="69" pos:column="38">(<param><decl><type><name><name pos:line="69" pos:column="39">EnvDTE</name><op:operator pos:line="69" pos:column="45">.</op:operator><name pos:line="69" pos:column="46">vsBuildScope</name></name></type> <name pos:line="69" pos:column="59">Scope</name></decl></param>, <param><decl><type><name><name pos:line="69" pos:column="66">EnvDTE</name><op:operator pos:line="69" pos:column="72">.</op:operator><name pos:line="69" pos:column="73">vsBuildAction</name></name></type> <name pos:line="69" pos:column="87">Action</name></decl></param>)</parameter_list> <block pos:line="69" pos:column="95">{
            <expr_stmt><expr><call><name><name pos:line="70" pos:column="13">_scheduler</name><op:operator pos:line="70" pos:column="23">.</op:operator><name pos:line="70" pos:column="24">Start</name></name><argument_list pos:line="70" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="73" pos:column="9">private</specifier> <name pos:line="73" pos:column="17">void</name></type> <name pos:line="73" pos:column="22">UnsubscribeFromEvents</name><parameter_list pos:line="73" pos:column="43">()</parameter_list> <block pos:line="73" pos:column="46">{
            <if pos:line="74" pos:column="13">if<condition pos:line="74" pos:column="15">(<expr><name pos:line="74" pos:column="16">null</name> <op:operator pos:line="74" pos:column="21">!=</op:operator> <name pos:line="74" pos:column="24">_buildEvents</name></expr>)</condition><then pos:line="74" pos:column="37"> <block pos:line="74" pos:column="38">{
                <expr_stmt><expr><name><name pos:line="75" pos:column="17">_buildEvents</name><op:operator pos:line="75" pos:column="29">.</op:operator><name pos:line="75" pos:column="30">OnBuildBegin</name></name> <op:operator pos:line="75" pos:column="43">-=</op:operator> <name pos:line="75" pos:column="46">_buildEvents_OnBuildBegin</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="76" pos:column="17">_buildEvents</name><op:operator pos:line="76" pos:column="29">.</op:operator><name pos:line="76" pos:column="30">OnBuildDone</name></name> <op:operator pos:line="76" pos:column="42">-=</op:operator> <name pos:line="76" pos:column="45">_buildEvents_OnBuildDone</name></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="78" pos:column="13">if<condition pos:line="78" pos:column="15">(<expr><name pos:line="78" pos:column="16">null</name> <op:operator pos:line="78" pos:column="21">!=</op:operator> <name pos:line="78" pos:column="24">_windowEvents</name></expr>)</condition><then pos:line="78" pos:column="38"> <block pos:line="78" pos:column="39">{
                <expr_stmt><expr><name><name pos:line="79" pos:column="17">_windowEvents</name><op:operator pos:line="79" pos:column="30">.</op:operator><name pos:line="79" pos:column="31">WindowActivated</name></name> <op:operator pos:line="79" pos:column="47">-=</op:operator> <name pos:line="79" pos:column="50">_windowEvents_WindowActivated</name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="83" pos:column="9">public</specifier> <name pos:line="83" pos:column="16">void</name></type> <name pos:line="83" pos:column="21">Start</name><parameter_list pos:line="83" pos:column="26">()</parameter_list> <block pos:line="83" pos:column="29">{
            <if pos:line="84" pos:column="13">if<condition pos:line="84" pos:column="15">(<expr><name pos:line="84" pos:column="16">_scheduler</name> <op:operator pos:line="84" pos:column="27">!=</op:operator> <name pos:line="84" pos:column="30">null</name></expr>)</condition><then pos:line="84" pos:column="35"> <block pos:line="84" pos:column="36">{
                <expr_stmt><expr><call><name><name pos:line="85" pos:column="17">_scheduler</name><op:operator pos:line="85" pos:column="27">.</op:operator><name pos:line="85" pos:column="28">Start</name></name><argument_list pos:line="85" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="89" pos:column="9">public</specifier> <name pos:line="89" pos:column="16">void</name></type> <name pos:line="89" pos:column="21">Stop</name><parameter_list pos:line="89" pos:column="25">()</parameter_list> <block pos:line="89" pos:column="28">{
            <if pos:line="90" pos:column="13">if<condition pos:line="90" pos:column="15">(<expr><name pos:line="90" pos:column="16">_scheduler</name> <op:operator pos:line="90" pos:column="27">!=</op:operator> <name pos:line="90" pos:column="30">null</name></expr>)</condition><then pos:line="90" pos:column="35"> <block pos:line="90" pos:column="36">{
                <expr_stmt><expr><call><name><name pos:line="91" pos:column="17">_scheduler</name><op:operator pos:line="91" pos:column="27">.</op:operator><name pos:line="91" pos:column="28">Stop</name></name><argument_list pos:line="91" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="95" pos:column="9">public</specifier> <name pos:line="95" pos:column="16">TaskScheduler</name></type> <name pos:line="95" pos:column="30">GlobalScheduler</name> <block pos:line="95" pos:column="46">{ <function><name pos:line="95" pos:column="48">get</name> <block pos:line="95" pos:column="52">{ <return pos:line="95" pos:column="54">return <expr><name><name pos:line="95" pos:column="61">this</name><op:operator pos:line="95" pos:column="65">.</op:operator><name pos:line="95" pos:column="66">_scheduler</name></name></expr>;</return> }</block></function> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="97" pos:column="9">public</specifier> <name pos:line="97" pos:column="16">TaskFactory</name></type> <name pos:line="97" pos:column="28">GlobalFactory</name> <block pos:line="97" pos:column="42">{ <function><name pos:line="97" pos:column="44">get</name> <block pos:line="97" pos:column="48">{ <return pos:line="97" pos:column="50">return <expr><name><name pos:line="97" pos:column="57">this</name><op:operator pos:line="97" pos:column="61">.</op:operator><name pos:line="97" pos:column="62">_factory</name></name></expr>;</return> }</block></function> }</block></decl></decl_stmt>
    }</block></class>
}</block></namespace>
</unit>
