<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\ABB.SrcML.Test.Utilities\FileUtils.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2013 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Vinay Augustine (ABB Group) - initial API, implementation, &amp; documentation
 *****************************************************************************/</comment>

<using pos:line="12" pos:column="1">using <name pos:line="12" pos:column="7">System</name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Collections</name><op:operator pos:line="13" pos:column="25">.</op:operator><name pos:line="13" pos:column="26">Generic</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">IO</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">Linq</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Text</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">System</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Threading</name><op:operator pos:line="17" pos:column="23">.</op:operator><name pos:line="17" pos:column="24">Tasks</name></name>;</using>

<namespace pos:line="19" pos:column="1">namespace <name><name pos:line="19" pos:column="11">ABB</name><op:operator pos:line="19" pos:column="14">.</op:operator><name pos:line="19" pos:column="15">SrcML</name><op:operator pos:line="19" pos:column="20">.</op:operator><name pos:line="19" pos:column="21">Test</name><op:operator pos:line="19" pos:column="25">.</op:operator><name pos:line="19" pos:column="26">Utilities</name></name>
<block pos:line="20" pos:column="1">{
    <class><specifier pos:line="21" pos:column="5">public</specifier> class <name pos:line="21" pos:column="18">FileUtils</name>
    <block pos:line="22" pos:column="5">{
        <function><type><specifier pos:line="23" pos:column="9">public</specifier> <specifier pos:line="23" pos:column="16">static</specifier> <name pos:line="23" pos:column="23">void</name></type> <name pos:line="23" pos:column="28">CopyDirectory</name><parameter_list pos:line="23" pos:column="41">(<param><decl><type><name pos:line="23" pos:column="42">string</name></type> <name pos:line="23" pos:column="49">sourcePath</name></decl></param>, <param><decl><type><name pos:line="23" pos:column="61">string</name></type> <name pos:line="23" pos:column="68">destinationPath</name></decl></param>)</parameter_list> <block pos:line="23" pos:column="85">{
            <foreach pos:line="24" pos:column="13">foreach(<init><decl><type><name pos:line="24" pos:column="21">var</name></type> <name pos:line="24" pos:column="25">fileTemplate</name> <range pos:line="24" pos:column="38">in <expr><call><name><name pos:line="24" pos:column="41">Directory</name><op:operator pos:line="24" pos:column="50">.</op:operator><name pos:line="24" pos:column="51">GetFiles</name></name><argument_list pos:line="24" pos:column="59">(<argument><expr><name pos:line="24" pos:column="60">sourcePath</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="24" pos:column="72">"*"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="77">SearchOption</name><op:operator pos:line="24" pos:column="89">.</op:operator><name pos:line="24" pos:column="90">AllDirectories</name></name></expr></argument>)</argument_list></call></expr></range></decl></init>) <block pos:line="24" pos:column="107">{
                <decl_stmt><decl><type><name pos:line="25" pos:column="17">var</name></type> <name pos:line="25" pos:column="21">fileName</name> <init pos:line="25" pos:column="30">= <expr><call><name><name pos:line="25" pos:column="32">fileTemplate</name><op:operator pos:line="25" pos:column="44">.</op:operator><name pos:line="25" pos:column="45">Replace</name></name><argument_list pos:line="25" pos:column="52">(<argument><expr><name pos:line="25" pos:column="53">sourcePath</name></expr></argument>, <argument><expr><name pos:line="25" pos:column="65">destinationPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="26" pos:column="17">var</name></type> <name pos:line="26" pos:column="21">directoryName</name> <init pos:line="26" pos:column="35">= <expr><call><name><name pos:line="26" pos:column="37">Path</name><op:operator pos:line="26" pos:column="41">.</op:operator><name pos:line="26" pos:column="42">GetDirectoryName</name></name><argument_list pos:line="26" pos:column="58">(<argument><expr><name pos:line="26" pos:column="59">fileName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="27" pos:column="17">if<condition pos:line="27" pos:column="19">(<expr><op:operator pos:line="27" pos:column="20">!</op:operator><call><name><name pos:line="27" pos:column="21">Directory</name><op:operator pos:line="27" pos:column="30">.</op:operator><name pos:line="27" pos:column="31">Exists</name></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name pos:line="27" pos:column="38">directoryName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="27" pos:column="53"> <block pos:line="27" pos:column="54">{
                    <expr_stmt><expr><call><name><name pos:line="28" pos:column="21">Directory</name><op:operator pos:line="28" pos:column="30">.</op:operator><name pos:line="28" pos:column="31">CreateDirectory</name></name><argument_list pos:line="28" pos:column="46">(<argument><expr><name pos:line="28" pos:column="47">directoryName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><call><name><name pos:line="30" pos:column="17">File</name><op:operator pos:line="30" pos:column="21">.</op:operator><name pos:line="30" pos:column="22">Copy</name></name><argument_list pos:line="30" pos:column="26">(<argument><expr><name pos:line="30" pos:column="27">fileTemplate</name></expr></argument>, <argument><expr><name pos:line="30" pos:column="41">fileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="34" pos:column="9">public</specifier> <specifier pos:line="34" pos:column="16">static</specifier> <name pos:line="34" pos:column="23">string</name></type> <name pos:line="34" pos:column="30">GetSolutionDirectory</name><parameter_list pos:line="34" pos:column="50">(<param><decl><type><name pos:line="34" pos:column="51">string</name></type> <name pos:line="34" pos:column="58">solutionRelativeToRoot</name></decl></param>)</parameter_list> <block pos:line="34" pos:column="82">{
            <decl_stmt><decl><type><name pos:line="35" pos:column="13">var</name></type> <name pos:line="35" pos:column="17">currentDirectory</name> <init pos:line="35" pos:column="34">= <expr><op:operator pos:line="35" pos:column="36">new</op:operator> <call><name pos:line="35" pos:column="40">DirectoryInfo</name><argument_list pos:line="35" pos:column="53">(<argument><expr><name><name pos:line="35" pos:column="54">Environment</name><op:operator pos:line="35" pos:column="65">.</op:operator><name pos:line="35" pos:column="66">CurrentDirectory</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <while pos:line="36" pos:column="13">while<condition pos:line="36" pos:column="18">(<expr><name pos:line="36" pos:column="19">currentDirectory</name> <op:operator pos:line="36" pos:column="36">!=</op:operator> <name pos:line="36" pos:column="39">null</name> <op:operator pos:line="36" pos:column="44">&amp;&amp;</op:operator> <op:operator pos:line="36" pos:column="47">!</op:operator><call><name><name pos:line="36" pos:column="48">File</name><op:operator pos:line="36" pos:column="52">.</op:operator><name pos:line="36" pos:column="53">Exists</name></name><argument_list pos:line="36" pos:column="59">(<argument><expr><call><name><name pos:line="36" pos:column="60">Path</name><op:operator pos:line="36" pos:column="64">.</op:operator><name pos:line="36" pos:column="65">Combine</name></name><argument_list pos:line="36" pos:column="72">(<argument><expr><name><name pos:line="36" pos:column="73">currentDirectory</name><op:operator pos:line="36" pos:column="89">.</op:operator><name pos:line="36" pos:column="90">FullName</name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="100">solutionRelativeToRoot</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:line="36" pos:column="126">{
                <expr_stmt><expr><name pos:line="37" pos:column="17">currentDirectory</name> <op:operator pos:line="37" pos:column="34">=</op:operator> <name><name pos:line="37" pos:column="36">currentDirectory</name><op:operator pos:line="37" pos:column="52">.</op:operator><name pos:line="37" pos:column="53">Parent</name></name></expr>;</expr_stmt>
            }</block></while>
            <return pos:line="39" pos:column="13">return <expr><name><name pos:line="39" pos:column="20">currentDirectory</name><op:operator pos:line="39" pos:column="36">.</op:operator><name pos:line="39" pos:column="37">FullName</name></name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
