<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\ABB.SrcML\SrcMLFileNameMapping.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2013 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Patrick Francis (ABB Group) - Initial implementation
 *    Vinay Augustine (ABB Group) - Initial implementation
 *****************************************************************************/</comment>

<using pos:line="13" pos:column="1">using <name pos:line="13" pos:column="7">System</name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Collections</name><op:operator pos:line="14" pos:column="25">.</op:operator><name pos:line="14" pos:column="26">Generic</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">IO</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">System</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Linq</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">System</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">Text</name></name>;</using>
<using pos:line="19" pos:column="1">using <name><name pos:line="19" pos:column="7">System</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">Text</name><op:operator pos:line="19" pos:column="18">.</op:operator><name pos:line="19" pos:column="19">RegularExpressions</name></name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">System</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">Xml</name></name>;</using>

<namespace pos:line="22" pos:column="1">namespace <name><name pos:line="22" pos:column="11">ABB</name><op:operator pos:line="22" pos:column="14">.</op:operator><name pos:line="22" pos:column="15">SrcML</name></name> <block pos:line="22" pos:column="21">{

    <comment type="line" pos:line="24" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="25" pos:column="5">/// Maintains a mapping between source file paths and the paths where XML versions are stored.</comment>
    <comment type="line" pos:line="26" pos:column="5">/// The names of the XML files are relatively short to avoid exceeding the Windows file path</comment>
    <comment type="line" pos:line="27" pos:column="5">/// character limit.</comment>
    <comment type="line" pos:line="28" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="29" pos:column="5">public</specifier> class <name pos:line="29" pos:column="18">SrcMLFileNameMapping</name> <super pos:line="29" pos:column="39">: <name pos:line="29" pos:column="41">ShortFileNameMapping</name></super> <block pos:line="29" pos:column="62">{
        <comment type="line" pos:line="30" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="31" pos:column="9">/// Creates a new ShortXmlFileNameMapping.</comment>
        <comment type="line" pos:line="32" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="33" pos:column="9">/// &lt;param name="targetDirectory"&gt;The directory for the target files.&lt;/param&gt;</comment>
        <constructor><specifier pos:line="34" pos:column="9">public</specifier> <name pos:line="34" pos:column="16">SrcMLFileNameMapping</name><parameter_list pos:line="34" pos:column="36">(<param><decl><type><name pos:line="34" pos:column="37">string</name></type> <name pos:line="34" pos:column="44">targetDirectory</name></decl></param>)</parameter_list>
            <member_list pos:line="35" pos:column="13">: <call><name pos:line="35" pos:column="15">this</name><argument_list pos:line="35" pos:column="19">(<argument><expr><name pos:line="35" pos:column="20">targetDirectory</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="35" pos:column="37">".xml"</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="35" pos:column="45">{ }</block></constructor>

        <comment type="line" pos:line="37" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="38" pos:column="9">/// Creates a new ShortXmlFileNameMapping</comment>
        <comment type="line" pos:line="39" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="40" pos:column="9">/// &lt;param name="targetDirectory"&gt;The directory for the target files&lt;/param&gt;</comment>
        <comment type="line" pos:line="41" pos:column="9">/// &lt;param name="targetExtension"&gt;the extension for the target files&lt;/param&gt;</comment>
        <constructor><specifier pos:line="42" pos:column="9">public</specifier> <name pos:line="42" pos:column="16">SrcMLFileNameMapping</name><parameter_list pos:line="42" pos:column="36">(<param><decl><type><name pos:line="42" pos:column="37">string</name></type> <name pos:line="42" pos:column="44">targetDirectory</name></decl></param>, <param><decl><type><name pos:line="42" pos:column="61">string</name></type> <name pos:line="42" pos:column="68">targetExtension</name></decl></param>)</parameter_list>
            <member_list pos:line="43" pos:column="13">: <call><name pos:line="43" pos:column="15">base</name><argument_list pos:line="43" pos:column="19">(<argument><expr><name pos:line="43" pos:column="20">targetDirectory</name></expr></argument>, <argument><expr><name pos:line="43" pos:column="37">targetExtension</name></expr></argument>)</argument_list></call> </member_list><block pos:line="43" pos:column="54">{ }</block></constructor>

        <comment type="line" pos:line="45" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="46" pos:column="9">/// Gets the filename stored in the unit element of &lt;paramref name="targetPath"/&gt;</comment>
        <comment type="line" pos:line="47" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="48" pos:column="9">/// &lt;param name="targetPath"&gt;The target srcML file&lt;/param&gt;</comment>
        <comment type="line" pos:line="49" pos:column="9">/// &lt;returns&gt;The file name stored in &lt;paramref name="targetPath"/&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="50" pos:column="9">protected</specifier> <specifier pos:line="50" pos:column="19">override</specifier> <name pos:line="50" pos:column="28">string</name></type> <name pos:line="50" pos:column="35">GetSourcePathFromTargetFile</name><parameter_list pos:line="50" pos:column="62">(<param><decl><type><name pos:line="50" pos:column="63">string</name></type> <name pos:line="50" pos:column="70">targetPath</name></decl></param>)</parameter_list> <block pos:line="50" pos:column="82">{
            <try pos:line="51" pos:column="13">try <block pos:line="51" pos:column="17">{
                <decl_stmt><decl><type><name pos:line="52" pos:column="17">var</name></type> <name pos:line="52" pos:column="21">unit</name> <init pos:line="52" pos:column="26">= <expr><call><name><name pos:line="52" pos:column="28">XmlHelper</name><op:operator pos:line="52" pos:column="37">.</op:operator><name pos:line="52" pos:column="38">StreamElements</name></name><argument_list pos:line="52" pos:column="52">(<argument><expr><name pos:line="52" pos:column="53">targetPath</name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="65">SRC</name><op:operator pos:line="52" pos:column="68">.</op:operator><name pos:line="52" pos:column="69">Unit</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="52" pos:column="75">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="52" pos:column="77">.</op:operator><call><name pos:line="52" pos:column="78">FirstOrDefault</name><argument_list pos:line="52" pos:column="92">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <return pos:line="53" pos:column="17">return <expr><op:operator pos:line="53" pos:column="24">(</op:operator><name pos:line="53" pos:column="25">null</name> <op:operator pos:line="53" pos:column="30">!=</op:operator> <name pos:line="53" pos:column="33">unit</name> <op:operator pos:line="53" pos:column="38">?</op:operator> <call><name><name pos:line="53" pos:column="40">SrcMLElement</name><op:operator pos:line="53" pos:column="52">.</op:operator><name pos:line="53" pos:column="53">GetFileNameForUnit</name></name><argument_list pos:line="53" pos:column="71">(<argument><expr><name pos:line="53" pos:column="72">unit</name></expr></argument>)</argument_list></call> <op:operator pos:line="53" pos:column="78">:</op:operator> <name pos:line="53" pos:column="80">null</name><op:operator pos:line="53" pos:column="84">)</op:operator></expr>;</return>
            }</block> <catch pos:line="54" pos:column="15">catch<parameter_list pos:line="54" pos:column="20">(<param><decl><type><name pos:line="54" pos:column="21">XmlException</name></type></decl></param>)</parameter_list> <block pos:line="54" pos:column="35">{
                <return pos:line="55" pos:column="17">return <expr><name pos:line="55" pos:column="24">null</name></expr>;</return>
            }</block></catch></try>
            
        }</block></function>
    }</block></class>
}</block></namespace></unit>
