<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\ABB.SrcML\SrcMLHelper.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2010 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Vinay Augustine (ABB Group) - initial API, implementation, &amp; documentation
 *****************************************************************************/</comment>

<using pos:line="12" pos:column="1">using <name pos:line="12" pos:column="7">System</name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Collections</name><op:operator pos:line="13" pos:column="25">.</op:operator><name pos:line="13" pos:column="26">Generic</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Linq</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">Text</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Xml</name><op:operator pos:line="16" pos:column="17">.</op:operator><name pos:line="16" pos:column="18">Linq</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">System</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">IO</name></name>;</using>

<namespace pos:line="19" pos:column="1">namespace <name><name pos:line="19" pos:column="11">ABB</name><op:operator pos:line="19" pos:column="14">.</op:operator><name pos:line="19" pos:column="15">SrcML</name></name>
<block pos:line="20" pos:column="1">{
    <comment type="line" pos:line="21" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="22" pos:column="5">/// Collection of helper functions for working with srcML elements</comment>
    <comment type="line" pos:line="23" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="24" pos:column="5">public</specifier> <specifier pos:line="24" pos:column="12">static</specifier> class <name pos:line="24" pos:column="25">SrcMLHelper</name>
    <block pos:line="25" pos:column="5">{
        

        <comment type="line" pos:line="28" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="29" pos:column="9">/// Gets the default srcML binary directory. It checks the following conditions:</comment>
        <comment type="line" pos:line="30" pos:column="9">/// 1. If the SRCMLBINDIR environment variable is set, then that is used.</comment>
        <comment type="line" pos:line="31" pos:column="9">/// 2. If c:\Program Files (x86)\SrcML\bin directory exists (should only exist on 64-bit systems), then that is used.</comment>
        <comment type="line" pos:line="32" pos:column="9">/// 3. If c:\Program Files\SrcML\bin directory exists, then that is used.</comment>
        <comment type="line" pos:line="33" pos:column="9">/// 4. If none of the above is true, then the current directory is used.</comment>
        <comment type="line" pos:line="34" pos:column="9">/// </comment>
        <comment type="line" pos:line="35" pos:column="9">/// This function does not check that any of the paths actually contains the srcML executables.</comment>
        <comment type="line" pos:line="36" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="37" pos:column="9">/// &lt;returns&gt;The default srcML binary directory.&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="38" pos:column="9">public</specifier> <specifier pos:line="38" pos:column="16">static</specifier> <name pos:line="38" pos:column="23">string</name></type> <name pos:line="38" pos:column="30">GetSrcMLDefaultDirectory</name><parameter_list pos:line="38" pos:column="54">()</parameter_list>
         <block pos:line="39" pos:column="10">{
            <decl_stmt><decl><type><name pos:line="40" pos:column="13">var</name></type> <name pos:line="40" pos:column="17">srcmlDir</name> <init pos:line="40" pos:column="26">= <expr><call><name><name pos:line="40" pos:column="28">Environment</name><op:operator pos:line="40" pos:column="39">.</op:operator><name pos:line="40" pos:column="40">GetEnvironmentVariable</name></name><argument_list pos:line="40" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="40" pos:column="63">"SRCMLBINDIR"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><name pos:line="41" pos:column="17">null</name> <op:operator pos:line="41" pos:column="22">==</op:operator> <name pos:line="41" pos:column="25">srcmlDir</name></expr>)</condition><then pos:line="41" pos:column="34">
            <block pos:line="42" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="43" pos:column="17">var</name></type> <name pos:line="43" pos:column="21">programFilesDir</name> <init pos:line="43" pos:column="37">= <expr><call><name><name pos:line="43" pos:column="39">Environment</name><op:operator pos:line="43" pos:column="50">.</op:operator><name pos:line="43" pos:column="51">GetEnvironmentVariable</name></name><argument_list pos:line="43" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="43" pos:column="74">"ProgramFiles(x86)"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">null</name> <op:operator pos:line="44" pos:column="26">==</op:operator> <name pos:line="44" pos:column="29">programFilesDir</name></expr>)</condition><then pos:line="44" pos:column="45">
                    <expr_stmt><expr><name pos:line="45" pos:column="21">programFilesDir</name> <op:operator pos:line="45" pos:column="37">=</op:operator> <call><name><name pos:line="45" pos:column="39">Environment</name><op:operator pos:line="45" pos:column="50">.</op:operator><name pos:line="45" pos:column="51">GetEnvironmentVariable</name></name><argument_list pos:line="45" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="45" pos:column="74">"ProgramFiles"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
                <expr_stmt><expr><name pos:line="46" pos:column="17">srcmlDir</name> <op:operator pos:line="46" pos:column="26">=</op:operator> <call><name><name pos:line="46" pos:column="28">Path</name><op:operator pos:line="46" pos:column="32">.</op:operator><name pos:line="46" pos:column="33">Combine</name></name><argument_list pos:line="46" pos:column="40">(<argument><expr><name pos:line="46" pos:column="41">programFilesDir</name></expr></argument>, <argument><expr><call><name><name pos:line="46" pos:column="58">Path</name><op:operator pos:line="46" pos:column="62">.</op:operator><name pos:line="46" pos:column="63">Combine</name></name><argument_list pos:line="46" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="71">"SrcML"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="46" pos:column="80">"bin"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
             
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><op:operator pos:line="49" pos:column="17">!</op:operator><call><name><name pos:line="49" pos:column="18">Directory</name><op:operator pos:line="49" pos:column="27">.</op:operator><name pos:line="49" pos:column="28">Exists</name></name><argument_list pos:line="49" pos:column="34">(<argument><expr><name pos:line="49" pos:column="35">srcmlDir</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="49" pos:column="45">
                <return pos:line="50" pos:column="17">return <expr><call><name><name pos:line="50" pos:column="24">Directory</name><op:operator pos:line="50" pos:column="33">.</op:operator><name pos:line="50" pos:column="34">GetCurrentDirectory</name></name><argument_list pos:line="50" pos:column="53">()</argument_list></call></expr>;</return></then></if>
            <return pos:line="51" pos:column="13">return <expr><name pos:line="51" pos:column="20">srcmlDir</name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="54" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="55" pos:column="9">/// Returns the default srcML binary directory.</comment>
        <comment type="line" pos:line="56" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="57" pos:column="9">/// &lt;param name="extensionDirectory"&gt;&lt;/param&gt;</comment>
        <comment type="line" pos:line="58" pos:column="9">/// &lt;returns&gt;&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="59" pos:column="9">public</specifier> <specifier pos:line="59" pos:column="16">static</specifier> <name pos:line="59" pos:column="23">string</name></type> <name pos:line="59" pos:column="30">GetSrcMLDefaultDirectory</name><parameter_list pos:line="59" pos:column="54">(<param><decl><type><name pos:line="59" pos:column="55">string</name></type> <name pos:line="59" pos:column="62">extensionDirectory</name></decl></param>)</parameter_list>
        <block pos:line="60" pos:column="9">{
            <if pos:line="61" pos:column="13">if<condition pos:line="61" pos:column="15">(<expr><op:operator pos:line="61" pos:column="16">!</op:operator><call><name><name pos:line="61" pos:column="17">Directory</name><op:operator pos:line="61" pos:column="26">.</op:operator><name pos:line="61" pos:column="27">Exists</name></name><argument_list pos:line="61" pos:column="33">(<argument><expr><call><name><name pos:line="61" pos:column="34">Path</name><op:operator pos:line="61" pos:column="38">.</op:operator><name pos:line="61" pos:column="39">Combine</name></name><argument_list pos:line="61" pos:column="46">(<argument><expr><name pos:line="61" pos:column="47">extensionDirectory</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="61" pos:column="67">"SrcML"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="61" pos:column="77"> <block pos:line="61" pos:column="78">{
                <return pos:line="62" pos:column="17">return <expr><call><name><name pos:line="62" pos:column="24">SrcMLHelper</name><op:operator pos:line="62" pos:column="35">.</op:operator><name pos:line="62" pos:column="36">GetSrcMLDefaultDirectory</name></name><argument_list pos:line="62" pos:column="60">()</argument_list></call></expr>;</return>
            }</block></then> <else pos:line="63" pos:column="15">else <block pos:line="63" pos:column="20">{
                <return pos:line="64" pos:column="17">return <expr><call><name><name pos:line="64" pos:column="24">Path</name><op:operator pos:line="64" pos:column="28">.</op:operator><name pos:line="64" pos:column="29">Combine</name></name><argument_list pos:line="64" pos:column="36">(<argument><expr><name pos:line="64" pos:column="37">extensionDirectory</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="64" pos:column="57">"SrcML"</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
            }</block></else></if>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
