<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\SrcML.NET\ABB.SrcML.Data\TypeKind.cs" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/******************************************************************************
 * Copyright (c) 2013 ABB Group
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Vinay Augustine (ABB Group) - initial API, implementation, &amp; documentation
 *    Patrick Francis (ABB Group) - initial API, implementation, &amp; documentation
 *****************************************************************************/</comment>

<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Collections</name><op:operator pos:line="13" pos:column="25">.</op:operator><name pos:line="13" pos:column="26">Generic</name></name>;</using>
<namespace pos:line="14" pos:column="1">namespace <name><name pos:line="14" pos:column="11">ABB</name><op:operator pos:line="14" pos:column="14">.</op:operator><name pos:line="14" pos:column="15">SrcML</name><op:operator pos:line="14" pos:column="20">.</op:operator><name pos:line="14" pos:column="21">Data</name></name> <block pos:line="14" pos:column="26">{

    <comment type="line" pos:line="16" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="17" pos:column="5">/// Enumerates the kinds of types encountered in the supported programming languages.</comment>
    <comment type="line" pos:line="18" pos:column="5">/// &lt;/summary&gt;</comment>
    <enum><specifier pos:line="19" pos:column="5">public</specifier> enum <macro><name pos:line="19" pos:column="17">TypeKind</name></macro> <block pos:line="19" pos:column="26">{

        <comment type="line" pos:line="21" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="22" pos:column="9">/// Built-In type</comment>
        <comment type="line" pos:line="23" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl><name pos:line="24" pos:column="9">BuiltIn</name> <init pos:line="24" pos:column="17">= <expr><lit:literal type="number" pos:line="24" pos:column="19">0</lit:literal></expr></init></decl><op:operator pos:line="24" pos:column="20">,</op:operator>

        <comment type="line" pos:line="26" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="27" pos:column="9">/// Class type</comment>
        <comment type="line" pos:line="28" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl><name pos:line="29" pos:column="9">Class</name></decl><op:operator pos:line="29" pos:column="14">,</op:operator>

        <comment type="line" pos:line="31" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="32" pos:column="9">/// Struct type</comment>
        <comment type="line" pos:line="33" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl><name pos:line="34" pos:column="9">Struct</name></decl><op:operator pos:line="34" pos:column="15">,</op:operator>

        <comment type="line" pos:line="36" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="37" pos:column="9">/// Union type</comment>
        <comment type="line" pos:line="38" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl><name pos:line="39" pos:column="9">Union</name></decl><op:operator pos:line="39" pos:column="14">,</op:operator>

        <comment type="line" pos:line="41" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="42" pos:column="9">/// Interface type</comment>
        <comment type="line" pos:line="43" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl><name pos:line="44" pos:column="9">Interface</name></decl><op:operator pos:line="44" pos:column="18">,</op:operator>

        <comment type="line" pos:line="46" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="47" pos:column="9">/// Enumeration type</comment>
        <comment type="line" pos:line="48" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl><name pos:line="49" pos:column="9">Enumeration</name></decl>
    }</block>

    <comment type="line" pos:line="52" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="53" pos:column="5">/// Contains extension methods for the TypeKind enum.</comment>
    <comment type="line" pos:line="54" pos:column="5">/// &lt;/summary&gt;</comment>
    <decl pos:line="55" pos:column="5">public static <name pos:line="55" pos:column="19">class</name> <name pos:line="55" pos:column="25">TypeKindExtensions</name> <block pos:line="55" pos:column="44">{
        <comment type="line" pos:line="56" pos:column="9">/// &lt;summary&gt; Returns a keyword string for this TypeKind. &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="57" pos:column="9">public</specifier> <specifier pos:line="57" pos:column="16">static</specifier> <name pos:line="57" pos:column="23">string</name></type> <name pos:line="57" pos:column="30">ToKeyword</name><parameter_list pos:line="57" pos:column="39">(<param><decl><type><name pos:line="57" pos:column="40">this</name> <name pos:line="57" pos:column="45">TypeKind</name></type> <name pos:line="57" pos:column="54">tk</name></decl></param>)</parameter_list> <block pos:line="57" pos:column="58">{
            <switch pos:line="58" pos:column="13">switch<condition pos:line="58" pos:column="19">(<expr><name pos:line="58" pos:column="20">tk</name></expr>)</condition> <block pos:line="58" pos:column="24">{
                <case pos:line="59" pos:column="17">case <expr><name><name pos:line="59" pos:column="22">TypeKind</name><op:operator pos:line="59" pos:column="30">.</op:operator><name pos:line="59" pos:column="31">BuiltIn</name></name></expr>:
                    <return pos:line="60" pos:column="21">return <expr><lit:literal type="string" pos:line="60" pos:column="28">"built-in"</lit:literal></expr>;</return>
                </case><case pos:line="61" pos:column="17">case <expr><name><name pos:line="61" pos:column="22">TypeKind</name><op:operator pos:line="61" pos:column="30">.</op:operator><name pos:line="61" pos:column="31">Class</name></name></expr>:
                    <return pos:line="62" pos:column="21">return <expr><lit:literal type="string" pos:line="62" pos:column="28">"class"</lit:literal></expr>;</return>
                </case><case pos:line="63" pos:column="17">case <expr><name><name pos:line="63" pos:column="22">TypeKind</name><op:operator pos:line="63" pos:column="30">.</op:operator><name pos:line="63" pos:column="31">Struct</name></name></expr>:
                    <return pos:line="64" pos:column="21">return <expr><lit:literal type="string" pos:line="64" pos:column="28">"struct"</lit:literal></expr>;</return>
                </case><case pos:line="65" pos:column="17">case <expr><name><name pos:line="65" pos:column="22">TypeKind</name><op:operator pos:line="65" pos:column="30">.</op:operator><name pos:line="65" pos:column="31">Union</name></name></expr>:
                    <return pos:line="66" pos:column="21">return <expr><lit:literal type="string" pos:line="66" pos:column="28">"union"</lit:literal></expr>;</return>
                </case><case pos:line="67" pos:column="17">case <expr><name><name pos:line="67" pos:column="22">TypeKind</name><op:operator pos:line="67" pos:column="30">.</op:operator><name pos:line="67" pos:column="31">Interface</name></name></expr>:
                    <return pos:line="68" pos:column="21">return <expr><lit:literal type="string" pos:line="68" pos:column="28">"interface"</lit:literal></expr>;</return>
                </case><case pos:line="69" pos:column="17">case <expr><name><name pos:line="69" pos:column="22">TypeKind</name><op:operator pos:line="69" pos:column="30">.</op:operator><name pos:line="69" pos:column="31">Enumeration</name></name></expr>:
                    <return pos:line="70" pos:column="21">return <expr><lit:literal type="string" pos:line="70" pos:column="28">"enumeration"</lit:literal></expr>;</return>
                </case><default pos:line="71" pos:column="17">default:
                    <return pos:line="72" pos:column="21">return <expr><lit:literal type="string" pos:line="72" pos:column="28">"built-in"</lit:literal></expr>;</return>
            </default>}</block></switch>
        }</block></function>

        <comment type="line" pos:line="76" pos:column="9">/// &lt;summary&gt; Returns a LiteralKind for the given keyword string. &lt;/summary&gt;</comment>
        <function><type><specifier pos:line="77" pos:column="9">public</specifier> <specifier pos:line="77" pos:column="16">static</specifier> <name pos:line="77" pos:column="23">TypeKind</name></type> <name pos:line="77" pos:column="32">FromKeyword</name><parameter_list pos:line="77" pos:column="43">(<param><decl><type><name pos:line="77" pos:column="44">string</name></type> <name pos:line="77" pos:column="51">keyword</name></decl></param>)</parameter_list> <block pos:line="77" pos:column="60">{
            <decl_stmt><decl><type><name pos:line="78" pos:column="13">var</name></type> <name pos:line="78" pos:column="17">mapping</name> <init pos:line="78" pos:column="25">= <expr><op:operator pos:line="78" pos:column="27">new</op:operator> <call><name><name pos:line="78" pos:column="31">Dictionary</name><argument_list pos:line="78" pos:column="41">&lt;<argument><name pos:line="78" pos:column="42">string</name></argument>, <argument><name pos:line="78" pos:column="50">TypeKind</name></argument>&gt;</argument_list></name><argument_list pos:line="78" pos:column="59">()</argument_list></call> <block pos:line="78" pos:column="62">{
                <expr><block pos:line="79" pos:column="17">{<expr><lit:literal type="string" pos:line="79" pos:column="18">"built-in"</lit:literal></expr>, <expr><name><name pos:line="79" pos:column="30">TypeKind</name><op:operator pos:line="79" pos:column="38">.</op:operator><name pos:line="79" pos:column="39">BuiltIn</name></name></expr>}</block></expr>,
                <expr><block pos:line="80" pos:column="17">{<expr><lit:literal type="string" pos:line="80" pos:column="18">"class"</lit:literal></expr>, <expr><name><name pos:line="80" pos:column="27">TypeKind</name><op:operator pos:line="80" pos:column="35">.</op:operator><name pos:line="80" pos:column="36">Class</name></name></expr>}</block></expr>,
                <expr><block pos:line="81" pos:column="17">{<expr><lit:literal type="string" pos:line="81" pos:column="18">"struct"</lit:literal></expr>, <expr><name><name pos:line="81" pos:column="28">TypeKind</name><op:operator pos:line="81" pos:column="36">.</op:operator><name pos:line="81" pos:column="37">Struct</name></name></expr>}</block></expr>,
                <expr><block pos:line="82" pos:column="17">{<expr><lit:literal type="string" pos:line="82" pos:column="18">"union"</lit:literal></expr>, <expr><name><name pos:line="82" pos:column="27">TypeKind</name><op:operator pos:line="82" pos:column="35">.</op:operator><name pos:line="82" pos:column="36">Union</name></name></expr>}</block></expr>,
                <expr><block pos:line="83" pos:column="17">{<expr><lit:literal type="string" pos:line="83" pos:column="18">"interface"</lit:literal></expr>, <expr><name><name pos:line="83" pos:column="31">TypeKind</name><op:operator pos:line="83" pos:column="39">.</op:operator><name pos:line="83" pos:column="40">Interface</name></name></expr>}</block></expr>,
                <expr><block pos:line="84" pos:column="17">{<expr><lit:literal type="string" pos:line="84" pos:column="18">"enumeration"</lit:literal></expr>, <expr><name><name pos:line="84" pos:column="33">TypeKind</name><op:operator pos:line="84" pos:column="41">.</op:operator><name pos:line="84" pos:column="42">Enumeration</name></name></expr>}</block></expr>,
            }</block></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="86" pos:column="13">TypeKind</name></type> <name pos:line="86" pos:column="22">output</name></decl>;</decl_stmt>
            <if pos:line="87" pos:column="13">if<condition pos:line="87" pos:column="15">(<expr><op:operator pos:line="87" pos:column="16">!</op:operator><call><name><name pos:line="87" pos:column="17">string</name><op:operator pos:line="87" pos:column="23">.</op:operator><name pos:line="87" pos:column="24">IsNullOrEmpty</name></name><argument_list pos:line="87" pos:column="37">(<argument><expr><name pos:line="87" pos:column="38">keyword</name></expr></argument>)</argument_list></call> <op:operator pos:line="87" pos:column="47">&amp;&amp;</op:operator> <call><name><name pos:line="87" pos:column="50">mapping</name><op:operator pos:line="87" pos:column="57">.</op:operator><name pos:line="87" pos:column="58">TryGetValue</name></name><argument_list pos:line="87" pos:column="69">(<argument><expr><name pos:line="87" pos:column="70">keyword</name></expr></argument>, <argument><expr pos:line="87" pos:column="79">out <name pos:line="87" pos:column="83">output</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="87" pos:column="91"> <block pos:line="87" pos:column="92">{
                <return pos:line="88" pos:column="17">return <expr><name pos:line="88" pos:column="24">output</name></expr>;</return>
            }</block></then></if>
            <return pos:line="90" pos:column="13">return <expr><name><name pos:line="90" pos:column="20">TypeKind</name><op:operator pos:line="90" pos:column="28">.</op:operator><name pos:line="90" pos:column="29">BuiltIn</name></name></expr>;</return>
        }</block></function>
    }</block></decl>
<decl/></enum>}</block></namespace></unit>
