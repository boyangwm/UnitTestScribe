<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WebForms.WingTip.Sample\Logic\ShoppingCartActions.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">WingtipToys</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">Models</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">WingtipToys</name><op:operator pos:line="7" pos:column="22">.</op:operator><name pos:line="7" pos:column="23">Logic</name></name>
<block pos:line="8" pos:column="1">{
    <class><specifier pos:line="9" pos:column="5">public</specifier> class <name pos:line="9" pos:column="18">ShoppingCartActions</name>
    <block pos:line="10" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">public</specifier> <name pos:line="11" pos:column="16">string</name></type> <name pos:line="11" pos:column="23">ShoppingCartId</name> <block pos:line="11" pos:column="38">{ <function_decl><name pos:line="11" pos:column="40">get</name>;</function_decl> <function_decl><name pos:line="11" pos:column="45">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">private</specifier> <name pos:line="13" pos:column="17">ProductContext</name></type> <name pos:line="13" pos:column="32">_db</name> <init pos:line="13" pos:column="36">= <expr><op:operator pos:line="13" pos:column="38">new</op:operator> <call><name pos:line="13" pos:column="42">ProductContext</name><argument_list pos:line="13" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">public</specifier> <specifier pos:line="15" pos:column="16">const</specifier> <name pos:line="15" pos:column="22">string</name></type> <name pos:line="15" pos:column="29">CartSessionKey</name> <init pos:line="15" pos:column="44">= <expr><lit:literal type="string" pos:line="15" pos:column="46">"CartId"</lit:literal></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="17" pos:column="9">public</specifier> <name pos:line="17" pos:column="16">void</name></type> <name pos:line="17" pos:column="21">AddToCart</name><parameter_list pos:line="17" pos:column="30">(<param><decl><type><name pos:line="17" pos:column="31">int</name></type> <name pos:line="17" pos:column="35">id</name></decl></param>)</parameter_list>
        <block pos:line="18" pos:column="9">{
            <comment type="line" pos:line="19" pos:column="13">// Retrieve the product from the database.           </comment>
            <expr_stmt><expr><name pos:line="20" pos:column="13">ShoppingCartId</name> <op:operator pos:line="20" pos:column="28">=</op:operator> <call><name pos:line="20" pos:column="30">GetCartId</name><argument_list pos:line="20" pos:column="39">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="22" pos:column="13">var</name></type> <name pos:line="22" pos:column="17">cartItem</name> <init pos:line="22" pos:column="26">= <expr><call><name><name pos:line="22" pos:column="28">_db</name><op:operator pos:line="22" pos:column="31">.</op:operator><name pos:line="22" pos:column="32">ShoppingCartItems</name><op:operator pos:line="22" pos:column="49">.</op:operator><name pos:line="22" pos:column="50">SingleOrDefault</name></name><argument_list pos:line="22" pos:column="65">(
                <argument><expr><lambda><name pos:line="23" pos:column="17">c</name> <op:operator pos:line="23" pos:column="19">=&gt;</op:operator> <name><name pos:line="23" pos:column="22">c</name><op:operator pos:line="23" pos:column="23">.</op:operator><name pos:line="23" pos:column="24">CartId</name></name> <op:operator pos:line="23" pos:column="31">==</op:operator> <name pos:line="23" pos:column="34">ShoppingCartId</name>
                <op:operator pos:line="24" pos:column="17">&amp;&amp;</op:operator> <name><name pos:line="24" pos:column="20">c</name><op:operator pos:line="24" pos:column="21">.</op:operator><name pos:line="24" pos:column="22">ProductId</name></name> <op:operator pos:line="24" pos:column="32">==</op:operator> <name pos:line="24" pos:column="35">id</name></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name pos:line="25" pos:column="17">cartItem</name> <op:operator pos:line="25" pos:column="26">==</op:operator> <name pos:line="25" pos:column="29">null</name></expr>)</condition><then pos:line="25" pos:column="34">
            <block pos:line="26" pos:column="13">{
                <comment type="line" pos:line="27" pos:column="17">// Create a new cart item if no cart item exists.                 </comment>
                <expr_stmt><expr><name pos:line="28" pos:column="17">cartItem</name> <op:operator pos:line="28" pos:column="26">=</op:operator> <op:operator pos:line="28" pos:column="28">new</op:operator> <name pos:line="28" pos:column="32">CartItem</name>
                <block pos:line="29" pos:column="17">{
                    <expr><name pos:line="30" pos:column="21">ItemId</name> <op:operator pos:line="30" pos:column="28">=</op:operator> <call><name><name pos:line="30" pos:column="30">Guid</name><op:operator pos:line="30" pos:column="34">.</op:operator><name pos:line="30" pos:column="35">NewGuid</name></name><argument_list pos:line="30" pos:column="42">()</argument_list></call><op:operator pos:line="30" pos:column="44">.</op:operator><call><name pos:line="30" pos:column="45">ToString</name><argument_list pos:line="30" pos:column="53">()</argument_list></call></expr><op:operator pos:line="30" pos:column="55">,</op:operator>
                    <expr><name pos:line="31" pos:column="21">ProductId</name> <op:operator pos:line="31" pos:column="31">=</op:operator> <name pos:line="31" pos:column="33">id</name></expr><op:operator pos:line="31" pos:column="35">,</op:operator>
                    <expr><name pos:line="32" pos:column="21">CartId</name> <op:operator pos:line="32" pos:column="28">=</op:operator> <name pos:line="32" pos:column="30">ShoppingCartId</name></expr><op:operator pos:line="32" pos:column="44">,</op:operator>
                    <expr><name pos:line="33" pos:column="21">Product</name> <op:operator pos:line="33" pos:column="29">=</op:operator> <call><name><name pos:line="33" pos:column="31">_db</name><op:operator pos:line="33" pos:column="34">.</op:operator><name pos:line="33" pos:column="35">Products</name><op:operator pos:line="33" pos:column="43">.</op:operator><name pos:line="33" pos:column="44">SingleOrDefault</name></name><argument_list pos:line="33" pos:column="59">(
                     <argument><expr><lambda><name pos:line="34" pos:column="22">p</name> <op:operator pos:line="34" pos:column="24">=&gt;</op:operator> <name><name pos:line="34" pos:column="27">p</name><op:operator pos:line="34" pos:column="28">.</op:operator><name pos:line="34" pos:column="29">ProductID</name></name> <op:operator pos:line="34" pos:column="39">==</op:operator> <name pos:line="34" pos:column="42">id</name></lambda></expr></argument>)</argument_list></call></expr><op:operator pos:line="34" pos:column="45">,</op:operator>
                    <expr><name pos:line="35" pos:column="21">Quantity</name> <op:operator pos:line="35" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="35" pos:column="32">1</lit:literal></expr><op:operator pos:line="35" pos:column="33">,</op:operator>
                    <expr><name pos:line="36" pos:column="21">DateCreated</name> <op:operator pos:line="36" pos:column="33">=</op:operator> <name><name pos:line="36" pos:column="35">DateTime</name><op:operator pos:line="36" pos:column="43">.</op:operator><name pos:line="36" pos:column="44">Now</name></name></expr>
                }</block></expr>;</expr_stmt>

                <expr_stmt><expr><call><name><name pos:line="39" pos:column="17">_db</name><op:operator pos:line="39" pos:column="20">.</op:operator><name pos:line="39" pos:column="21">ShoppingCartItems</name><op:operator pos:line="39" pos:column="38">.</op:operator><name pos:line="39" pos:column="39">Add</name></name><argument_list pos:line="39" pos:column="42">(<argument><expr><name pos:line="39" pos:column="43">cartItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="41" pos:column="13">else
            <block pos:line="42" pos:column="13">{
                <comment type="line" pos:line="43" pos:column="17">// If the item does exist in the cart,                  </comment>
                <comment type="line" pos:line="44" pos:column="17">// then add one to the quantity.                 </comment>
                <expr_stmt><expr><name><name pos:line="45" pos:column="17">cartItem</name><op:operator pos:line="45" pos:column="25">.</op:operator><name pos:line="45" pos:column="26">Quantity</name></name><op:operator pos:line="45" pos:column="34">++</op:operator></expr>;</expr_stmt>
            }</block></else></if>
            <expr_stmt><expr><call><name><name pos:line="47" pos:column="13">_db</name><op:operator pos:line="47" pos:column="16">.</op:operator><name pos:line="47" pos:column="17">SaveChanges</name></name><argument_list pos:line="47" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="50" pos:column="9">public</specifier> <name pos:line="50" pos:column="16">string</name></type> <name pos:line="50" pos:column="23">GetCartId</name><parameter_list pos:line="50" pos:column="32">()</parameter_list>
        <block pos:line="51" pos:column="9">{
            <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><name><name pos:line="52" pos:column="17">HttpContext</name><op:operator pos:line="52" pos:column="28">.</op:operator><name pos:line="52" pos:column="29">Current</name><op:operator pos:line="52" pos:column="36">.</op:operator><name pos:line="52" pos:column="37">Session</name><index pos:line="52" pos:column="44">[<expr><name pos:line="52" pos:column="45">CartSessionKey</name></expr>]</index></name> <op:operator pos:line="52" pos:column="61">==</op:operator> <name pos:line="52" pos:column="64">null</name></expr>)</condition><then pos:line="52" pos:column="69">
            <block pos:line="53" pos:column="13">{
                <if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><op:operator pos:line="54" pos:column="21">!</op:operator><call><name><name pos:line="54" pos:column="22">string</name><op:operator pos:line="54" pos:column="28">.</op:operator><name pos:line="54" pos:column="29">IsNullOrWhiteSpace</name></name><argument_list pos:line="54" pos:column="47">(<argument><expr><name><name pos:line="54" pos:column="48">HttpContext</name><op:operator pos:line="54" pos:column="59">.</op:operator><name pos:line="54" pos:column="60">Current</name><op:operator pos:line="54" pos:column="67">.</op:operator><name pos:line="54" pos:column="68">User</name><op:operator pos:line="54" pos:column="72">.</op:operator><name pos:line="54" pos:column="73">Identity</name><op:operator pos:line="54" pos:column="81">.</op:operator><name pos:line="54" pos:column="82">Name</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="54" pos:column="88">
                <block pos:line="55" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="56" pos:column="21">HttpContext</name><op:operator pos:line="56" pos:column="32">.</op:operator><name pos:line="56" pos:column="33">Current</name><op:operator pos:line="56" pos:column="40">.</op:operator><name pos:line="56" pos:column="41">Session</name><index pos:line="56" pos:column="48">[<expr><name pos:line="56" pos:column="49">CartSessionKey</name></expr>]</index></name> <op:operator pos:line="56" pos:column="65">=</op:operator> <name><name pos:line="56" pos:column="67">HttpContext</name><op:operator pos:line="56" pos:column="78">.</op:operator><name pos:line="56" pos:column="79">Current</name><op:operator pos:line="56" pos:column="86">.</op:operator><name pos:line="56" pos:column="87">User</name><op:operator pos:line="56" pos:column="91">.</op:operator><name pos:line="56" pos:column="92">Identity</name><op:operator pos:line="56" pos:column="100">.</op:operator><name pos:line="56" pos:column="101">Name</name></name></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="58" pos:column="17">else
                <block pos:line="59" pos:column="17">{
                    <comment type="line" pos:line="60" pos:column="21">// Generate a new random GUID using System.Guid class.     </comment>
                    <decl_stmt><decl><type><name pos:line="61" pos:column="21">Guid</name></type> <name pos:line="61" pos:column="26">tempCartId</name> <init pos:line="61" pos:column="37">= <expr><call><name><name pos:line="61" pos:column="39">Guid</name><op:operator pos:line="61" pos:column="43">.</op:operator><name pos:line="61" pos:column="44">NewGuid</name></name><argument_list pos:line="61" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><name><name pos:line="62" pos:column="21">HttpContext</name><op:operator pos:line="62" pos:column="32">.</op:operator><name pos:line="62" pos:column="33">Current</name><op:operator pos:line="62" pos:column="40">.</op:operator><name pos:line="62" pos:column="41">Session</name><index pos:line="62" pos:column="48">[<expr><name pos:line="62" pos:column="49">CartSessionKey</name></expr>]</index></name> <op:operator pos:line="62" pos:column="65">=</op:operator> <call><name><name pos:line="62" pos:column="67">tempCartId</name><op:operator pos:line="62" pos:column="77">.</op:operator><name pos:line="62" pos:column="78">ToString</name></name><argument_list pos:line="62" pos:column="86">()</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
            }</block></then></if>
            <return pos:line="65" pos:column="13">return <expr><name><name pos:line="65" pos:column="20">HttpContext</name><op:operator pos:line="65" pos:column="31">.</op:operator><name pos:line="65" pos:column="32">Current</name><op:operator pos:line="65" pos:column="39">.</op:operator><name pos:line="65" pos:column="40">Session</name><index pos:line="65" pos:column="47">[<expr><name pos:line="65" pos:column="48">CartSessionKey</name></expr>]</index></name><op:operator pos:line="65" pos:column="63">.</op:operator><call><name pos:line="65" pos:column="64">ToString</name><argument_list pos:line="65" pos:column="72">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="68" pos:column="9">public</specifier> <name><name pos:line="68" pos:column="16">List</name><argument_list pos:line="68" pos:column="20">&lt;<argument><name pos:line="68" pos:column="21">CartItem</name></argument>&gt;</argument_list></name></type> <name pos:line="68" pos:column="31">GetCartItems</name><parameter_list pos:line="68" pos:column="43">()</parameter_list>
        <block pos:line="69" pos:column="9">{
            <expr_stmt><expr><name pos:line="70" pos:column="13">ShoppingCartId</name> <op:operator pos:line="70" pos:column="28">=</op:operator> <call><name pos:line="70" pos:column="30">GetCartId</name><argument_list pos:line="70" pos:column="39">()</argument_list></call></expr>;</expr_stmt>

            <return pos:line="72" pos:column="13">return <expr><call><name><name pos:line="72" pos:column="20">_db</name><op:operator pos:line="72" pos:column="23">.</op:operator><name pos:line="72" pos:column="24">ShoppingCartItems</name><op:operator pos:line="72" pos:column="41">.</op:operator><name pos:line="72" pos:column="42">Where</name></name><argument_list pos:line="72" pos:column="47">(
                <argument><expr><lambda><name pos:line="73" pos:column="17">c</name> <op:operator pos:line="73" pos:column="19">=&gt;</op:operator> <name><name pos:line="73" pos:column="22">c</name><op:operator pos:line="73" pos:column="23">.</op:operator><name pos:line="73" pos:column="24">CartId</name></name> <op:operator pos:line="73" pos:column="31">==</op:operator> <name pos:line="73" pos:column="34">ShoppingCartId</name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="73" pos:column="49">.</op:operator><call><name pos:line="73" pos:column="50">ToList</name><argument_list pos:line="73" pos:column="56">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="76" pos:column="9">public</specifier> <name pos:line="76" pos:column="16">decimal</name></type> <name pos:line="76" pos:column="24">GetTotal</name><parameter_list pos:line="76" pos:column="32">()</parameter_list>
        <block pos:line="77" pos:column="9">{
            <expr_stmt><expr><name pos:line="78" pos:column="13">ShoppingCartId</name> <op:operator pos:line="78" pos:column="28">=</op:operator> <call><name pos:line="78" pos:column="30">GetCartId</name><argument_list pos:line="78" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="79" pos:column="13">// Multiply product price by quantity of that product to get        </comment>
            <comment type="line" pos:line="80" pos:column="13">// the current price for each of those products in the cart.  </comment>
            <comment type="line" pos:line="81" pos:column="13">// Sum all product price totals to get the cart total.   </comment>
            <decl_stmt><decl><type><name pos:line="82" pos:column="13">decimal</name><type:modifier pos:line="82" pos:column="20">?</type:modifier></type> <name pos:line="82" pos:column="22">total</name> <init pos:line="82" pos:column="28">= <expr><name><name pos:line="82" pos:column="30">decimal</name><op:operator pos:line="82" pos:column="37">.</op:operator><name pos:line="82" pos:column="38">Zero</name></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name pos:line="83" pos:column="13">total</name> <op:operator pos:line="83" pos:column="19">=</op:operator> <op:operator pos:line="83" pos:column="21">(</op:operator><name pos:line="83" pos:column="22">decimal</name><op:operator pos:line="83" pos:column="29">?</op:operator><op:operator pos:line="83" pos:column="30">)</op:operator><op:operator pos:line="83" pos:column="31">(</op:operator><linq><from pos:line="83" pos:column="32">from <expr><name pos:line="83" pos:column="37">cartItems</name></expr> <in pos:line="83" pos:column="47">in <expr><name><name pos:line="83" pos:column="50">_db</name><op:operator pos:line="83" pos:column="53">.</op:operator><name pos:line="83" pos:column="54">ShoppingCartItems</name></name></expr></in></from>
                               <where pos:line="84" pos:column="32">where <expr><name><name pos:line="84" pos:column="38">cartItems</name><op:operator pos:line="84" pos:column="47">.</op:operator><name pos:line="84" pos:column="48">CartId</name></name> <op:operator pos:line="84" pos:column="55">==</op:operator> <name pos:line="84" pos:column="58">ShoppingCartId</name></expr></where>
                               <select pos:line="85" pos:column="32">select <expr><op:operator pos:line="85" pos:column="39">(</op:operator><name pos:line="85" pos:column="40">int</name><op:operator pos:line="85" pos:column="43">?</op:operator><op:operator pos:line="85" pos:column="44">)</op:operator><name><name pos:line="85" pos:column="45">cartItems</name><op:operator pos:line="85" pos:column="54">.</op:operator><name pos:line="85" pos:column="55">Quantity</name> <type:modifier pos:line="85" pos:column="64">*</type:modifier></name>
                               <name><name pos:line="86" pos:column="32">cartItems</name><op:operator pos:line="86" pos:column="41">.</op:operator><name pos:line="86" pos:column="42">Product</name><op:operator pos:line="86" pos:column="49">.</op:operator><name pos:line="86" pos:column="50">UnitPrice</name></name></expr></select></linq><op:operator pos:line="86" pos:column="59">)</op:operator><op:operator pos:line="86" pos:column="60">.</op:operator><call><name pos:line="86" pos:column="61">Sum</name><argument_list pos:line="86" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="87" pos:column="13">return <expr><name pos:line="87" pos:column="20">total</name> <op:operator pos:line="87" pos:column="26">??</op:operator> <name><name pos:line="87" pos:column="29">decimal</name><op:operator pos:line="87" pos:column="36">.</op:operator><name pos:line="87" pos:column="37">Zero</name></name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="90" pos:column="9">public</specifier> <name pos:line="90" pos:column="16">ShoppingCartActions</name></type> <name pos:line="90" pos:column="36">GetCart</name><parameter_list pos:line="90" pos:column="43">(<param><decl><type><name pos:line="90" pos:column="44">HttpContext</name></type> <name pos:line="90" pos:column="56">context</name></decl></param>)</parameter_list>
        <block pos:line="91" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="92" pos:column="13">var</name></type> <name pos:line="92" pos:column="17">cart</name> <init pos:line="92" pos:column="22">= <expr><op:operator pos:line="92" pos:column="24">new</op:operator> <call><name pos:line="92" pos:column="28">ShoppingCartActions</name><argument_list pos:line="92" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="93" pos:column="13">cart</name><op:operator pos:line="93" pos:column="17">.</op:operator><name pos:line="93" pos:column="18">ShoppingCartId</name></name> <op:operator pos:line="93" pos:column="33">=</op:operator> <call><name><name pos:line="93" pos:column="35">cart</name><op:operator pos:line="93" pos:column="39">.</op:operator><name pos:line="93" pos:column="40">GetCartId</name></name><argument_list pos:line="93" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="94" pos:column="13">return <expr><name pos:line="94" pos:column="20">cart</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="97" pos:column="9">public</specifier> <name pos:line="97" pos:column="16">void</name></type> <name pos:line="97" pos:column="21">UpdateShoppingCartDatabase</name><parameter_list pos:line="97" pos:column="47">(<param><decl><type><name pos:line="97" pos:column="48">String</name></type> <name pos:line="97" pos:column="55">cartId</name></decl></param>, <param><decl><type><name><name pos:line="97" pos:column="63">ShoppingCartUpdates</name><index pos:line="97" pos:column="82">[]</index></name></type> <name pos:line="97" pos:column="85">CartItemUpdates</name></decl></param>)</parameter_list>
        <block pos:line="98" pos:column="9">{
            <using pos:line="99" pos:column="13">using (<decl><type><name pos:line="99" pos:column="20">var</name></type> <name pos:line="99" pos:column="24">db</name> <init pos:line="99" pos:column="27">= <expr><op:operator pos:line="99" pos:column="29">new</op:operator> <call><name><name pos:line="99" pos:column="33">WingtipToys</name><op:operator pos:line="99" pos:column="44">.</op:operator><name pos:line="99" pos:column="45">Models</name><op:operator pos:line="99" pos:column="51">.</op:operator><name pos:line="99" pos:column="52">ProductContext</name></name><argument_list pos:line="99" pos:column="66">()</argument_list></call></expr></init></decl>)
            <block pos:line="100" pos:column="13">{
                <try pos:line="101" pos:column="17">try
                <block pos:line="102" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="103" pos:column="21">int</name></type> <name pos:line="103" pos:column="25">CartItemCount</name> <init pos:line="103" pos:column="39">= <expr><call><name><name pos:line="103" pos:column="41">CartItemUpdates</name><op:operator pos:line="103" pos:column="56">.</op:operator><name pos:line="103" pos:column="57">Count</name></name><argument_list pos:line="103" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name><name pos:line="104" pos:column="21">List</name><argument_list pos:line="104" pos:column="25">&lt;<argument><name pos:line="104" pos:column="26">CartItem</name></argument>&gt;</argument_list></name></type> <name pos:line="104" pos:column="36">myCart</name> <init pos:line="104" pos:column="43">= <expr><call><name pos:line="104" pos:column="45">GetCartItems</name><argument_list pos:line="104" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <foreach pos:line="105" pos:column="21">foreach (<init><decl><type><name pos:line="105" pos:column="30">var</name></type> <name pos:line="105" pos:column="34">cartItem</name> <range pos:line="105" pos:column="43">in <expr><name pos:line="105" pos:column="46">myCart</name></expr></range></decl></init>)
                    <block pos:line="106" pos:column="21">{
                        <comment type="line" pos:line="107" pos:column="25">// Iterate through all rows within shopping cart list</comment>
                        <for pos:line="108" pos:column="25">for (<init><decl><type><name pos:line="108" pos:column="30">int</name></type> <name pos:line="108" pos:column="34">i</name> <init pos:line="108" pos:column="36">= <expr><lit:literal type="number" pos:line="108" pos:column="38">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="108" pos:column="41">i</name> <op:operator pos:line="108" pos:column="43">&lt;</op:operator> <name pos:line="108" pos:column="45">CartItemCount</name></expr>;</condition> <incr><expr><name pos:line="108" pos:column="60">i</name><op:operator pos:line="108" pos:column="61">++</op:operator></expr></incr>)
                        <block pos:line="109" pos:column="25">{
                            <if pos:line="110" pos:column="29">if <condition pos:line="110" pos:column="32">(<expr><name><name pos:line="110" pos:column="33">cartItem</name><op:operator pos:line="110" pos:column="41">.</op:operator><name pos:line="110" pos:column="42">Product</name><op:operator pos:line="110" pos:column="49">.</op:operator><name pos:line="110" pos:column="50">ProductID</name></name> <op:operator pos:line="110" pos:column="60">==</op:operator> <name><name pos:line="110" pos:column="63">CartItemUpdates</name><index pos:line="110" pos:column="78">[<expr><name pos:line="110" pos:column="79">i</name></expr>]</index></name><op:operator pos:line="110" pos:column="81">.</op:operator><name pos:line="110" pos:column="82">ProductId</name></expr>)</condition><then pos:line="110" pos:column="92">
                            <block pos:line="111" pos:column="29">{
                                <if pos:line="112" pos:column="33">if <condition pos:line="112" pos:column="36">(<expr><name><name pos:line="112" pos:column="37">CartItemUpdates</name><index pos:line="112" pos:column="52">[<expr><name pos:line="112" pos:column="53">i</name></expr>]</index></name><op:operator pos:line="112" pos:column="55">.</op:operator><name pos:line="112" pos:column="56">PurchaseQuantity</name> <op:operator pos:line="112" pos:column="73">&lt;</op:operator> <lit:literal type="number" pos:line="112" pos:column="75">1</lit:literal> <op:operator pos:line="112" pos:column="77">||</op:operator> <name><name pos:line="112" pos:column="80">CartItemUpdates</name><index pos:line="112" pos:column="95">[<expr><name pos:line="112" pos:column="96">i</name></expr>]</index></name><op:operator pos:line="112" pos:column="98">.</op:operator><name pos:line="112" pos:column="99">RemoveItem</name> <op:operator pos:line="112" pos:column="110">==</op:operator> <lit:literal type="boolean" pos:line="112" pos:column="113">true</lit:literal></expr>)</condition><then pos:line="112" pos:column="118">
                                <block pos:line="113" pos:column="33">{
                                    <expr_stmt><expr><call><name pos:line="114" pos:column="37">RemoveItem</name><argument_list pos:line="114" pos:column="47">(<argument><expr><name pos:line="114" pos:column="48">cartId</name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="56">cartItem</name><op:operator pos:line="114" pos:column="64">.</op:operator><name pos:line="114" pos:column="65">ProductId</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                }</block></then>
                                <else pos:line="116" pos:column="33">else
                                <block pos:line="117" pos:column="33">{
                                    <expr_stmt><expr><call><name pos:line="118" pos:column="37">UpdateItem</name><argument_list pos:line="118" pos:column="47">(<argument><expr><name pos:line="118" pos:column="48">cartId</name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="56">cartItem</name><op:operator pos:line="118" pos:column="64">.</op:operator><name pos:line="118" pos:column="65">ProductId</name></name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="76">CartItemUpdates</name><index pos:line="118" pos:column="91">[<expr><name pos:line="118" pos:column="92">i</name></expr>]</index></name><op:operator pos:line="118" pos:column="94">.</op:operator><name pos:line="118" pos:column="95">PurchaseQuantity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                }</block></else></if>
                            }</block></then></if>
                        }</block></for>
                    }</block></foreach>
                }</block>
                <catch pos:line="124" pos:column="17">catch <parameter_list pos:line="124" pos:column="23">(<param><decl><type><name pos:line="124" pos:column="24">Exception</name></type> <name pos:line="124" pos:column="34">exp</name></decl></param>)</parameter_list>
                <block pos:line="125" pos:column="17">{
                    <throw pos:line="126" pos:column="21">throw <expr><op:operator pos:line="126" pos:column="27">new</op:operator> <call><name pos:line="126" pos:column="31">Exception</name><argument_list pos:line="126" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="126" pos:column="41">"ERROR: Unable to Update Cart Database - "</lit:literal> <op:operator pos:line="126" pos:column="84">+</op:operator> <call><name><name pos:line="126" pos:column="86">exp</name><op:operator pos:line="126" pos:column="89">.</op:operator><name pos:line="126" pos:column="90">Message</name><op:operator pos:line="126" pos:column="97">.</op:operator><name pos:line="126" pos:column="98">ToString</name></name><argument_list pos:line="126" pos:column="106">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="126" pos:column="110">exp</name></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></catch></try>
            }</block></using>
        }</block></function>

        <function><type><specifier pos:line="131" pos:column="9">public</specifier> <name pos:line="131" pos:column="16">void</name></type> <name pos:line="131" pos:column="21">RemoveItem</name><parameter_list pos:line="131" pos:column="31">(<param><decl><type><name pos:line="131" pos:column="32">string</name></type> <name pos:line="131" pos:column="39">removeCartID</name></decl></param>, <param><decl><type><name pos:line="131" pos:column="53">int</name></type> <name pos:line="131" pos:column="57">removeProductID</name></decl></param>)</parameter_list>
        <block pos:line="132" pos:column="9">{
            <using pos:line="133" pos:column="13">using (<decl><type><name pos:line="133" pos:column="20">var</name></type> <name pos:line="133" pos:column="24">db</name> <init pos:line="133" pos:column="27">= <expr><op:operator pos:line="133" pos:column="29">new</op:operator> <call><name><name pos:line="133" pos:column="33">WingtipToys</name><op:operator pos:line="133" pos:column="44">.</op:operator><name pos:line="133" pos:column="45">Models</name><op:operator pos:line="133" pos:column="51">.</op:operator><name pos:line="133" pos:column="52">ProductContext</name></name><argument_list pos:line="133" pos:column="66">()</argument_list></call></expr></init></decl>)
            <block pos:line="134" pos:column="13">{
                <try pos:line="135" pos:column="17">try
                <block pos:line="136" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="137" pos:column="21">var</name></type> <name pos:line="137" pos:column="25">myItem</name> <init pos:line="137" pos:column="32">= <expr><op:operator pos:line="137" pos:column="34">(</op:operator><linq><from pos:line="137" pos:column="35">from <expr><name pos:line="137" pos:column="40">c</name></expr> <in pos:line="137" pos:column="42">in <expr><name><name pos:line="137" pos:column="45">db</name><op:operator pos:line="137" pos:column="47">.</op:operator><name pos:line="137" pos:column="48">ShoppingCartItems</name></name></expr></in></from> <where pos:line="137" pos:column="66">where <expr><name><name pos:line="137" pos:column="72">c</name><op:operator pos:line="137" pos:column="73">.</op:operator><name pos:line="137" pos:column="74">CartId</name></name> <op:operator pos:line="137" pos:column="81">==</op:operator> <name pos:line="137" pos:column="84">removeCartID</name> <op:operator pos:line="137" pos:column="97">&amp;&amp;</op:operator> <name><name pos:line="137" pos:column="100">c</name><op:operator pos:line="137" pos:column="101">.</op:operator><name pos:line="137" pos:column="102">Product</name><op:operator pos:line="137" pos:column="109">.</op:operator><name pos:line="137" pos:column="110">ProductID</name></name> <op:operator pos:line="137" pos:column="120">==</op:operator> <name pos:line="137" pos:column="123">removeProductID</name></expr></where> <select pos:line="137" pos:column="139">select <expr><name pos:line="137" pos:column="146">c</name></expr></select></linq><op:operator pos:line="137" pos:column="147">)</op:operator><op:operator pos:line="137" pos:column="148">.</op:operator><call><name pos:line="137" pos:column="149">FirstOrDefault</name><argument_list pos:line="137" pos:column="163">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if pos:line="138" pos:column="21">if <condition pos:line="138" pos:column="24">(<expr><name pos:line="138" pos:column="25">myItem</name> <op:operator pos:line="138" pos:column="32">!=</op:operator> <name pos:line="138" pos:column="35">null</name></expr>)</condition><then pos:line="138" pos:column="40">
                    <block pos:line="139" pos:column="21">{
                        <comment type="line" pos:line="140" pos:column="25">// db.DeleteObject(myItem);</comment>
                        <expr_stmt><expr><call><name><name pos:line="141" pos:column="25">db</name><op:operator pos:line="141" pos:column="27">.</op:operator><name pos:line="141" pos:column="28">ShoppingCartItems</name><op:operator pos:line="141" pos:column="45">.</op:operator><name pos:line="141" pos:column="46">Remove</name></name><argument_list pos:line="141" pos:column="52">(<argument><expr><name pos:line="141" pos:column="53">myItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="142" pos:column="25">db</name><op:operator pos:line="142" pos:column="27">.</op:operator><name pos:line="142" pos:column="28">SaveChanges</name></name><argument_list pos:line="142" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                }</block>
                <catch pos:line="145" pos:column="17">catch <parameter_list pos:line="145" pos:column="23">(<param><decl><type><name pos:line="145" pos:column="24">Exception</name></type> <name pos:line="145" pos:column="34">exp</name></decl></param>)</parameter_list>
                <block pos:line="146" pos:column="17">{
                    <throw pos:line="147" pos:column="21">throw <expr><op:operator pos:line="147" pos:column="27">new</op:operator> <call><name pos:line="147" pos:column="31">Exception</name><argument_list pos:line="147" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="147" pos:column="41">"ERROR: Unable to Remove Cart Item - "</lit:literal> <op:operator pos:line="147" pos:column="80">+</op:operator> <call><name><name pos:line="147" pos:column="82">exp</name><op:operator pos:line="147" pos:column="85">.</op:operator><name pos:line="147" pos:column="86">Message</name><op:operator pos:line="147" pos:column="93">.</op:operator><name pos:line="147" pos:column="94">ToString</name></name><argument_list pos:line="147" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="147" pos:column="106">exp</name></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></catch></try>
            }</block></using>
        }</block></function>

        <function><type><specifier pos:line="152" pos:column="9">public</specifier> <name pos:line="152" pos:column="16">void</name></type> <name pos:line="152" pos:column="21">UpdateItem</name><parameter_list pos:line="152" pos:column="31">(<param><decl><type><name pos:line="152" pos:column="32">string</name></type> <name pos:line="152" pos:column="39">updateCartID</name></decl></param>, <param><decl><type><name pos:line="152" pos:column="53">int</name></type> <name pos:line="152" pos:column="57">updateProductID</name></decl></param>, <param><decl><type><name pos:line="152" pos:column="74">int</name></type> <name pos:line="152" pos:column="78">quantity</name></decl></param>)</parameter_list>
        <block pos:line="153" pos:column="9">{
            <comment type="line" pos:line="154" pos:column="13">//            using (webformsstorefrontEntities db = new webformsstorefrontEntities())</comment>
            <using pos:line="155" pos:column="13">using (<decl><type><name pos:line="155" pos:column="20">var</name></type> <name pos:line="155" pos:column="24">db</name> <init pos:line="155" pos:column="27">= <expr><op:operator pos:line="155" pos:column="29">new</op:operator> <call><name><name pos:line="155" pos:column="33">WingtipToys</name><op:operator pos:line="155" pos:column="44">.</op:operator><name pos:line="155" pos:column="45">Models</name><op:operator pos:line="155" pos:column="51">.</op:operator><name pos:line="155" pos:column="52">ProductContext</name></name><argument_list pos:line="155" pos:column="66">()</argument_list></call></expr></init></decl>)
            <block pos:line="156" pos:column="13">{
                <try pos:line="157" pos:column="17">try
                <block pos:line="158" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="159" pos:column="21">var</name></type> <name pos:line="159" pos:column="25">myItem</name> <init pos:line="159" pos:column="32">= <expr><op:operator pos:line="159" pos:column="34">(</op:operator><linq><from pos:line="159" pos:column="35">from <expr><name pos:line="159" pos:column="40">c</name></expr> <in pos:line="159" pos:column="42">in <expr><name><name pos:line="159" pos:column="45">db</name><op:operator pos:line="159" pos:column="47">.</op:operator><name pos:line="159" pos:column="48">ShoppingCartItems</name></name></expr></in></from> <where pos:line="159" pos:column="66">where <expr><name><name pos:line="159" pos:column="72">c</name><op:operator pos:line="159" pos:column="73">.</op:operator><name pos:line="159" pos:column="74">CartId</name></name> <op:operator pos:line="159" pos:column="81">==</op:operator> <name pos:line="159" pos:column="84">updateCartID</name> <op:operator pos:line="159" pos:column="97">&amp;&amp;</op:operator> <name><name pos:line="159" pos:column="100">c</name><op:operator pos:line="159" pos:column="101">.</op:operator><name pos:line="159" pos:column="102">Product</name><op:operator pos:line="159" pos:column="109">.</op:operator><name pos:line="159" pos:column="110">ProductID</name></name> <op:operator pos:line="159" pos:column="120">==</op:operator> <name pos:line="159" pos:column="123">updateProductID</name></expr></where> <select pos:line="159" pos:column="139">select <expr><name pos:line="159" pos:column="146">c</name></expr></select></linq><op:operator pos:line="159" pos:column="147">)</op:operator><op:operator pos:line="159" pos:column="148">.</op:operator><call><name pos:line="159" pos:column="149">FirstOrDefault</name><argument_list pos:line="159" pos:column="163">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if pos:line="160" pos:column="21">if <condition pos:line="160" pos:column="24">(<expr><name pos:line="160" pos:column="25">myItem</name> <op:operator pos:line="160" pos:column="32">!=</op:operator> <name pos:line="160" pos:column="35">null</name></expr>)</condition><then pos:line="160" pos:column="40">
                    <block pos:line="161" pos:column="21">{
                        <expr_stmt><expr><name><name pos:line="162" pos:column="25">myItem</name><op:operator pos:line="162" pos:column="31">.</op:operator><name pos:line="162" pos:column="32">Quantity</name></name> <op:operator pos:line="162" pos:column="41">=</op:operator> <name pos:line="162" pos:column="43">quantity</name></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="163" pos:column="25">db</name><op:operator pos:line="163" pos:column="27">.</op:operator><name pos:line="163" pos:column="28">SaveChanges</name></name><argument_list pos:line="163" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                }</block>
                <catch pos:line="166" pos:column="17">catch <parameter_list pos:line="166" pos:column="23">(<param><decl><type><name pos:line="166" pos:column="24">Exception</name></type> <name pos:line="166" pos:column="34">exp</name></decl></param>)</parameter_list>
                <block pos:line="167" pos:column="17">{
                    <throw pos:line="168" pos:column="21">throw <expr><op:operator pos:line="168" pos:column="27">new</op:operator> <call><name pos:line="168" pos:column="31">Exception</name><argument_list pos:line="168" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="168" pos:column="41">"ERROR: Unable to Update Cart Item - "</lit:literal> <op:operator pos:line="168" pos:column="80">+</op:operator> <call><name><name pos:line="168" pos:column="82">exp</name><op:operator pos:line="168" pos:column="85">.</op:operator><name pos:line="168" pos:column="86">Message</name><op:operator pos:line="168" pos:column="93">.</op:operator><name pos:line="168" pos:column="94">ToString</name></name><argument_list pos:line="168" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="168" pos:column="106">exp</name></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></catch></try>
            }</block></using>
        }</block></function>

        <function><type><specifier pos:line="173" pos:column="9">public</specifier> <name pos:line="173" pos:column="16">void</name></type> <name pos:line="173" pos:column="21">EmptyCart</name><parameter_list pos:line="173" pos:column="30">()</parameter_list>
        <block pos:line="174" pos:column="9">{
            <expr_stmt><expr><name pos:line="175" pos:column="13">ShoppingCartId</name> <op:operator pos:line="175" pos:column="28">=</op:operator> <call><name pos:line="175" pos:column="30">GetCartId</name><argument_list pos:line="175" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="176" pos:column="13">var</name></type> <name pos:line="176" pos:column="17">cartItems</name> <init pos:line="176" pos:column="27">= <expr><call><name><name pos:line="176" pos:column="29">_db</name><op:operator pos:line="176" pos:column="32">.</op:operator><name pos:line="176" pos:column="33">ShoppingCartItems</name><op:operator pos:line="176" pos:column="50">.</op:operator><name pos:line="176" pos:column="51">Where</name></name><argument_list pos:line="176" pos:column="56">(
                <argument><expr><lambda><name pos:line="177" pos:column="17">c</name> <op:operator pos:line="177" pos:column="19">=&gt;</op:operator> <name><name pos:line="177" pos:column="22">c</name><op:operator pos:line="177" pos:column="23">.</op:operator><name pos:line="177" pos:column="24">CartId</name></name> <op:operator pos:line="177" pos:column="31">==</op:operator> <name pos:line="177" pos:column="34">ShoppingCartId</name></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="178" pos:column="13">foreach (<init><decl><type><name pos:line="178" pos:column="22">var</name></type> <name pos:line="178" pos:column="26">cartItem</name> <range pos:line="178" pos:column="35">in <expr><name pos:line="178" pos:column="38">cartItems</name></expr></range></decl></init>)
            <block pos:line="179" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="180" pos:column="17">_db</name><op:operator pos:line="180" pos:column="20">.</op:operator><name pos:line="180" pos:column="21">ShoppingCartItems</name><op:operator pos:line="180" pos:column="38">.</op:operator><name pos:line="180" pos:column="39">Remove</name></name><argument_list pos:line="180" pos:column="45">(<argument><expr><name pos:line="180" pos:column="46">cartItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
            <comment type="line" pos:line="182" pos:column="13">// Save changes.             </comment>
            <expr_stmt><expr><call><name><name pos:line="183" pos:column="13">_db</name><op:operator pos:line="183" pos:column="16">.</op:operator><name pos:line="183" pos:column="17">SaveChanges</name></name><argument_list pos:line="183" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="186" pos:column="9">public</specifier> <name pos:line="186" pos:column="16">int</name></type> <name pos:line="186" pos:column="20">GetCount</name><parameter_list pos:line="186" pos:column="28">()</parameter_list>
        <block pos:line="187" pos:column="9">{
            <expr_stmt><expr><name pos:line="188" pos:column="13">ShoppingCartId</name> <op:operator pos:line="188" pos:column="28">=</op:operator> <call><name pos:line="188" pos:column="30">GetCartId</name><argument_list pos:line="188" pos:column="39">()</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="190" pos:column="13">// Get the count of each item in the cart and sum them up          </comment>
            <decl_stmt><decl><type><name pos:line="191" pos:column="13">int</name><type:modifier pos:line="191" pos:column="16">?</type:modifier></type> <name pos:line="191" pos:column="18">count</name> <init pos:line="191" pos:column="24">= <expr><op:operator pos:line="191" pos:column="26">(</op:operator><linq><from pos:line="191" pos:column="27">from <expr><name pos:line="191" pos:column="32">cartItems</name></expr> <in pos:line="191" pos:column="42">in <expr><name><name pos:line="191" pos:column="45">_db</name><op:operator pos:line="191" pos:column="48">.</op:operator><name pos:line="191" pos:column="49">ShoppingCartItems</name></name></expr></in></from>
                          <where pos:line="192" pos:column="27">where <expr><name><name pos:line="192" pos:column="33">cartItems</name><op:operator pos:line="192" pos:column="42">.</op:operator><name pos:line="192" pos:column="43">CartId</name></name> <op:operator pos:line="192" pos:column="50">==</op:operator> <name pos:line="192" pos:column="53">ShoppingCartId</name></expr></where>
                          <select pos:line="193" pos:column="27">select <expr><op:operator pos:line="193" pos:column="34">(</op:operator><name pos:line="193" pos:column="35">int</name><op:operator pos:line="193" pos:column="38">?</op:operator><op:operator pos:line="193" pos:column="39">)</op:operator><name><name pos:line="193" pos:column="40">cartItems</name><op:operator pos:line="193" pos:column="49">.</op:operator><name pos:line="193" pos:column="50">Quantity</name></name></expr></select></linq><op:operator pos:line="193" pos:column="58">)</op:operator><op:operator pos:line="193" pos:column="59">.</op:operator><call><name pos:line="193" pos:column="60">Sum</name><argument_list pos:line="193" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="194" pos:column="13">// Return 0 if all entries are null         </comment>
            <return pos:line="195" pos:column="13">return <expr><name pos:line="195" pos:column="20">count</name> <op:operator pos:line="195" pos:column="26">??</op:operator> <lit:literal type="number" pos:line="195" pos:column="29">0</lit:literal></expr>;</return>
        }</block></function>

        <struct><specifier pos:line="198" pos:column="9">public</specifier> struct <name pos:line="198" pos:column="23">ShoppingCartUpdates</name>
        <block pos:line="199" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="200" pos:column="13">public</specifier> <name pos:line="200" pos:column="20">int</name></type> <name pos:line="200" pos:column="24">ProductId</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="201" pos:column="13">public</specifier> <name pos:line="201" pos:column="20">int</name></type> <name pos:line="201" pos:column="24">PurchaseQuantity</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="202" pos:column="13">public</specifier> <name pos:line="202" pos:column="20">bool</name></type> <name pos:line="202" pos:column="25">RemoveItem</name></decl>;</decl_stmt>
        }</block></struct>

        <function><type><specifier pos:line="205" pos:column="9">public</specifier> <name pos:line="205" pos:column="16">void</name></type> <name pos:line="205" pos:column="21">MigrateCart</name><parameter_list pos:line="205" pos:column="32">(<param><decl><type><name pos:line="205" pos:column="33">string</name></type> <name pos:line="205" pos:column="40">cartId</name></decl></param>, <param><decl><type><name pos:line="205" pos:column="48">string</name></type> <name pos:line="205" pos:column="55">userName</name></decl></param>)</parameter_list>
        <block pos:line="206" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="207" pos:column="13">var</name></type> <name pos:line="207" pos:column="17">shoppingCart</name> <init pos:line="207" pos:column="30">= <expr><call><name><name pos:line="207" pos:column="32">_db</name><op:operator pos:line="207" pos:column="35">.</op:operator><name pos:line="207" pos:column="36">ShoppingCartItems</name><op:operator pos:line="207" pos:column="53">.</op:operator><name pos:line="207" pos:column="54">Where</name></name><argument_list pos:line="207" pos:column="59">(<argument><expr><lambda><name pos:line="207" pos:column="60">c</name> <op:operator pos:line="207" pos:column="62">=&gt;</op:operator> <name><name pos:line="207" pos:column="65">c</name><op:operator pos:line="207" pos:column="66">.</op:operator><name pos:line="207" pos:column="67">CartId</name></name> <op:operator pos:line="207" pos:column="74">==</op:operator> <name pos:line="207" pos:column="77">cartId</name></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="208" pos:column="13">foreach (<init><decl><type><name pos:line="208" pos:column="22">CartItem</name></type> <name pos:line="208" pos:column="31">item</name> <range pos:line="208" pos:column="36">in <expr><name pos:line="208" pos:column="39">shoppingCart</name></expr></range></decl></init>)
            <block pos:line="209" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="210" pos:column="17">item</name><op:operator pos:line="210" pos:column="21">.</op:operator><name pos:line="210" pos:column="22">CartId</name></name> <op:operator pos:line="210" pos:column="29">=</op:operator> <name pos:line="210" pos:column="31">userName</name></expr>;</expr_stmt>
            }</block></foreach>
            <expr_stmt><expr><name><name pos:line="212" pos:column="13">HttpContext</name><op:operator pos:line="212" pos:column="24">.</op:operator><name pos:line="212" pos:column="25">Current</name><op:operator pos:line="212" pos:column="32">.</op:operator><name pos:line="212" pos:column="33">Session</name><index pos:line="212" pos:column="40">[<expr><name pos:line="212" pos:column="41">CartSessionKey</name></expr>]</index></name> <op:operator pos:line="212" pos:column="57">=</op:operator> <name pos:line="212" pos:column="59">userName</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="213" pos:column="13">_db</name><op:operator pos:line="213" pos:column="16">.</op:operator><name pos:line="213" pos:column="17">SaveChanges</name></name><argument_list pos:line="213" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
