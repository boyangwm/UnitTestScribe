<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WebForms.WingTip.Sample\Logic\PayPalFunctions.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Collections</name><op:operator pos:line="3" pos:column="25">.</op:operator><name pos:line="3" pos:column="26">Specialized</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">IO</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Net</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Text</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Data</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">System</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">Configuration</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">System</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">Web</name></name>;</using>
<using pos:line="10" pos:column="1">using <name pos:line="10" pos:column="7">WingtipToys</name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">WingtipToys</name><op:operator pos:line="11" pos:column="18">.</op:operator><name pos:line="11" pos:column="19">Models</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">System</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">Collections</name><op:operator pos:line="12" pos:column="25">.</op:operator><name pos:line="12" pos:column="26">Generic</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Linq</name></name>;</using>

<class><specifier pos:line="15" pos:column="1">public</specifier> class <name pos:line="15" pos:column="14">NVPAPICaller</name>
<block pos:line="16" pos:column="1">{
    <comment type="line" pos:line="17" pos:column="5">//Flag that determines the PayPal environment (live or sandbox)</comment>
    <decl_stmt><decl><type><specifier pos:line="18" pos:column="5">private</specifier> <specifier pos:line="18" pos:column="13">const</specifier> <name pos:line="18" pos:column="19">bool</name></type> <name pos:line="18" pos:column="24">bSandbox</name> <init pos:line="18" pos:column="33">= <expr><lit:literal type="boolean" pos:line="18" pos:column="35">true</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="19" pos:column="5">private</specifier> <specifier pos:line="19" pos:column="13">const</specifier> <name pos:line="19" pos:column="19">string</name></type> <name pos:line="19" pos:column="26">CVV2</name> <init pos:line="19" pos:column="31">= <expr><lit:literal type="string" pos:line="19" pos:column="33">"CVV2"</lit:literal></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:line="21" pos:column="5">// Live strings.</comment>
    <decl_stmt><decl><type><specifier pos:line="22" pos:column="5">private</specifier> <name pos:line="22" pos:column="13">string</name></type> <name pos:line="22" pos:column="20">pEndPointURL</name> <init pos:line="22" pos:column="33">= <expr><lit:literal type="string" pos:line="22" pos:column="35">"https://api-3t.paypal.com/nvp"</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="23" pos:column="5">private</specifier> <name pos:line="23" pos:column="13">string</name></type> <name pos:line="23" pos:column="20">host</name> <init pos:line="23" pos:column="25">= <expr><lit:literal type="string" pos:line="23" pos:column="27">"www.paypal.com"</lit:literal></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:line="25" pos:column="5">// Sandbox strings.</comment>
    <decl_stmt><decl><type><specifier pos:line="26" pos:column="5">private</specifier> <name pos:line="26" pos:column="13">string</name></type> <name pos:line="26" pos:column="20">pEndPointURL_SB</name> <init pos:line="26" pos:column="36">= <expr><lit:literal type="string" pos:line="26" pos:column="38">"https://api-3t.sandbox.paypal.com/nvp"</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="27" pos:column="5">private</specifier> <name pos:line="27" pos:column="13">string</name></type> <name pos:line="27" pos:column="20">host_SB</name> <init pos:line="27" pos:column="28">= <expr><lit:literal type="string" pos:line="27" pos:column="30">"www.sandbox.paypal.com"</lit:literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="29" pos:column="5">private</specifier> <specifier pos:line="29" pos:column="13">const</specifier> <name pos:line="29" pos:column="19">string</name></type> <name pos:line="29" pos:column="26">SIGNATURE</name> <init pos:line="29" pos:column="36">= <expr><lit:literal type="string" pos:line="29" pos:column="38">"SIGNATURE"</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="30" pos:column="5">private</specifier> <specifier pos:line="30" pos:column="13">const</specifier> <name pos:line="30" pos:column="19">string</name></type> <name pos:line="30" pos:column="26">PWD</name> <init pos:line="30" pos:column="30">= <expr><lit:literal type="string" pos:line="30" pos:column="32">"PWD"</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="31" pos:column="5">private</specifier> <specifier pos:line="31" pos:column="13">const</specifier> <name pos:line="31" pos:column="19">string</name></type> <name pos:line="31" pos:column="26">ACCT</name> <init pos:line="31" pos:column="31">= <expr><lit:literal type="string" pos:line="31" pos:column="33">"ACCT"</lit:literal></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:line="33" pos:column="5">//Replace &lt;Your API Username&gt; with your API Username</comment>
    <comment type="line" pos:line="34" pos:column="5">//Replace &lt;Your API Password&gt; with your API Password</comment>
    <comment type="line" pos:line="35" pos:column="5">//Replace &lt;Your Signature&gt; with your Signature</comment>
    <decl_stmt><decl><type><specifier pos:line="36" pos:column="5">public</specifier> <name pos:line="36" pos:column="12">string</name></type> <name pos:line="36" pos:column="19">APIUsername</name> <init pos:line="36" pos:column="31">= <expr><lit:literal type="string" pos:line="36" pos:column="33">"WTS_1344290105_biz_api1.live.com"</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="37" pos:column="5">private</specifier> <name pos:line="37" pos:column="13">string</name></type> <name pos:line="37" pos:column="20">APIPassword</name> <init pos:line="37" pos:column="32">= <expr><lit:literal type="string" pos:line="37" pos:column="34">"1344290129"</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="38" pos:column="5">private</specifier> <name pos:line="38" pos:column="13">string</name></type> <name pos:line="38" pos:column="20">APISignature</name> <init pos:line="38" pos:column="33">= <expr><lit:literal type="string" pos:line="38" pos:column="35">"AUrz5spHXetQp8oNaQrO9EIr8t1WA01cu3D6SSADhMtqQe7.CrNedIUH"</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="39" pos:column="5">private</specifier> <name pos:line="39" pos:column="13">string</name></type> <name pos:line="39" pos:column="20">Subject</name> <init pos:line="39" pos:column="28">= <expr><lit:literal type="string" pos:line="39" pos:column="30">""</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="40" pos:column="5">private</specifier> <name pos:line="40" pos:column="13">string</name></type> <name pos:line="40" pos:column="20">BNCode</name> <init pos:line="40" pos:column="27">= <expr><lit:literal type="string" pos:line="40" pos:column="29">"PP-ECWizard"</lit:literal></expr></init></decl>;</decl_stmt>


    <comment type="line" pos:line="43" pos:column="5">//HttpWebRequest Timeout specified in milliseconds </comment>
    <decl_stmt><decl><type><specifier pos:line="44" pos:column="5">private</specifier> <specifier pos:line="44" pos:column="13">const</specifier> <name pos:line="44" pos:column="19">int</name></type> <name pos:line="44" pos:column="23">Timeout</name> <init pos:line="44" pos:column="31">= <expr><lit:literal type="number" pos:line="44" pos:column="33">15000</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="45" pos:column="5">private</specifier> <specifier pos:line="45" pos:column="13">static</specifier> <specifier pos:line="45" pos:column="20">readonly</specifier> <name pos:line="45" pos:column="29">string</name><index pos:line="45" pos:column="35">[]</index></type> <name pos:line="45" pos:column="38">SECURED_NVPS</name> <init pos:line="45" pos:column="51">= <expr><op:operator pos:line="45" pos:column="53">new</op:operator> <name><name pos:line="45" pos:column="57">string</name><index pos:line="45" pos:column="63">[]</index></name> <block pos:line="45" pos:column="66">{ <expr><name pos:line="45" pos:column="68">ACCT</name></expr>, <expr><name pos:line="45" pos:column="74">CVV2</name></expr>, <expr><name pos:line="45" pos:column="80">SIGNATURE</name></expr>, <expr><name pos:line="45" pos:column="91">PWD</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <function><type><specifier pos:line="47" pos:column="5">public</specifier> <name pos:line="47" pos:column="12">void</name></type> <name pos:line="47" pos:column="17">SetCredentials</name><parameter_list pos:line="47" pos:column="31">(<param><decl><type><name pos:line="47" pos:column="32">string</name></type> <name pos:line="47" pos:column="39">Userid</name></decl></param>, <param><decl><type><name pos:line="47" pos:column="47">string</name></type> <name pos:line="47" pos:column="54">Pwd</name></decl></param>, <param><decl><type><name pos:line="47" pos:column="59">string</name></type> <name pos:line="47" pos:column="66">Signature</name></decl></param>)</parameter_list>
    <block pos:line="48" pos:column="5">{
        <expr_stmt><expr><name pos:line="49" pos:column="9">APIUsername</name> <op:operator pos:line="49" pos:column="21">=</op:operator> <name pos:line="49" pos:column="23">Userid</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">APIPassword</name> <op:operator pos:line="50" pos:column="21">=</op:operator> <name pos:line="50" pos:column="23">Pwd</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">APISignature</name> <op:operator pos:line="51" pos:column="22">=</op:operator> <name pos:line="51" pos:column="24">Signature</name></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier pos:line="54" pos:column="5">public</specifier> <name pos:line="54" pos:column="12">bool</name></type> <name pos:line="54" pos:column="17">ShortcutExpressCheckout</name><parameter_list pos:line="54" pos:column="40">(<param><decl><type><name pos:line="54" pos:column="41">string</name></type> <name pos:line="54" pos:column="48">amt</name></decl></param>, <param><decl><type><specifier pos:line="54" pos:column="53">ref</specifier> <name pos:line="54" pos:column="57">string</name></type> <name pos:line="54" pos:column="64">token</name></decl></param>, <param><decl><type><specifier pos:line="54" pos:column="71">ref</specifier> <name pos:line="54" pos:column="75">string</name></type> <name pos:line="54" pos:column="82">retMsg</name></decl></param>)</parameter_list>
    <block pos:line="55" pos:column="5">{
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">bSandbox</name></expr>)</condition><then pos:line="56" pos:column="22">
        <block pos:line="57" pos:column="9">{
            <expr_stmt><expr><name pos:line="58" pos:column="13">pEndPointURL</name> <op:operator pos:line="58" pos:column="26">=</op:operator> <name pos:line="58" pos:column="28">pEndPointURL_SB</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="59" pos:column="13">host</name> <op:operator pos:line="59" pos:column="18">=</op:operator> <name pos:line="59" pos:column="20">host_SB</name></expr>;</expr_stmt>
        }</block></then></if>

        <decl_stmt><decl><type><name pos:line="62" pos:column="9">string</name></type> <name pos:line="62" pos:column="16">returnURL</name> <init pos:line="62" pos:column="26">= <expr><lit:literal type="string" pos:line="62" pos:column="28">"http://localhost:53417/Checkout/CheckoutReview.aspx"</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="63" pos:column="9">string</name></type> <name pos:line="63" pos:column="16">cancelURL</name> <init pos:line="63" pos:column="26">= <expr><lit:literal type="string" pos:line="63" pos:column="28">"http://localhost:53417/Checkout/CheckoutCancel.aspx"</lit:literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name pos:line="65" pos:column="9">NVPCodec</name></type> <name pos:line="65" pos:column="18">encoder</name> <init pos:line="65" pos:column="26">= <expr><op:operator pos:line="65" pos:column="28">new</op:operator> <call><name pos:line="65" pos:column="32">NVPCodec</name><argument_list pos:line="65" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name pos:line="66" pos:column="9">encoder</name><index pos:line="66" pos:column="16">[<expr><lit:literal type="string" pos:line="66" pos:column="17">"METHOD"</lit:literal></expr>]</index></name> <op:operator pos:line="66" pos:column="27">=</op:operator> <lit:literal type="string" pos:line="66" pos:column="29">"SetExpressCheckout"</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">encoder</name><index pos:line="67" pos:column="16">[<expr><lit:literal type="string" pos:line="67" pos:column="17">"RETURNURL"</lit:literal></expr>]</index></name> <op:operator pos:line="67" pos:column="30">=</op:operator> <name pos:line="67" pos:column="32">returnURL</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="68" pos:column="9">encoder</name><index pos:line="68" pos:column="16">[<expr><lit:literal type="string" pos:line="68" pos:column="17">"CANCELURL"</lit:literal></expr>]</index></name> <op:operator pos:line="68" pos:column="30">=</op:operator> <name pos:line="68" pos:column="32">cancelURL</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="69" pos:column="9">encoder</name><index pos:line="69" pos:column="16">[<expr><lit:literal type="string" pos:line="69" pos:column="17">"BRANDNAME"</lit:literal></expr>]</index></name> <op:operator pos:line="69" pos:column="30">=</op:operator> <lit:literal type="string" pos:line="69" pos:column="32">"Wingtip Toys Sample Application"</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">encoder</name><index pos:line="70" pos:column="16">[<expr><lit:literal type="string" pos:line="70" pos:column="17">"PAYMENTREQUEST_0_AMT"</lit:literal></expr>]</index></name> <op:operator pos:line="70" pos:column="41">=</op:operator> <name pos:line="70" pos:column="43">amt</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="71" pos:column="9">encoder</name><index pos:line="71" pos:column="16">[<expr><lit:literal type="string" pos:line="71" pos:column="17">"PAYMENTREQUEST_0_ITEMAMT"</lit:literal></expr>]</index></name> <op:operator pos:line="71" pos:column="45">=</op:operator> <name pos:line="71" pos:column="47">amt</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">encoder</name><index pos:line="72" pos:column="16">[<expr><lit:literal type="string" pos:line="72" pos:column="17">"PAYMENTREQUEST_0_PAYMENTACTION"</lit:literal></expr>]</index></name> <op:operator pos:line="72" pos:column="51">=</op:operator> <lit:literal type="string" pos:line="72" pos:column="53">"Sale"</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="73" pos:column="9">encoder</name><index pos:line="73" pos:column="16">[<expr><lit:literal type="string" pos:line="73" pos:column="17">"PAYMENTREQUEST_0_CURRENCYCODE"</lit:literal></expr>]</index></name> <op:operator pos:line="73" pos:column="50">=</op:operator> <lit:literal type="string" pos:line="73" pos:column="52">"USD"</lit:literal></expr>;</expr_stmt>

        <comment type="line" pos:line="75" pos:column="9">// Get the Shopping Cart Products</comment>
        <decl_stmt><decl><type><name><name pos:line="76" pos:column="9">WingtipToys</name><op:operator pos:line="76" pos:column="20">.</op:operator><name pos:line="76" pos:column="21">Logic</name><op:operator pos:line="76" pos:column="26">.</op:operator><name pos:line="76" pos:column="27">ShoppingCartActions</name></name></type> <name pos:line="76" pos:column="47">myCartOrders</name> <init pos:line="76" pos:column="60">= <expr><op:operator pos:line="76" pos:column="62">new</op:operator> <call><name><name pos:line="76" pos:column="66">WingtipToys</name><op:operator pos:line="76" pos:column="77">.</op:operator><name pos:line="76" pos:column="78">Logic</name><op:operator pos:line="76" pos:column="83">.</op:operator><name pos:line="76" pos:column="84">ShoppingCartActions</name></name><argument_list pos:line="76" pos:column="103">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="77" pos:column="9">List</name><argument_list pos:line="77" pos:column="13">&lt;<argument><name pos:line="77" pos:column="14">CartItem</name></argument>&gt;</argument_list></name></type> <name pos:line="77" pos:column="24">myOrderList</name> <init pos:line="77" pos:column="36">= <expr><call><name><name pos:line="77" pos:column="38">myCartOrders</name><op:operator pos:line="77" pos:column="50">.</op:operator><name pos:line="77" pos:column="51">GetCartItems</name></name><argument_list pos:line="77" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <for pos:line="79" pos:column="9">for (<init><decl><type><name pos:line="79" pos:column="14">int</name></type> <name pos:line="79" pos:column="18">i</name> <init pos:line="79" pos:column="20">= <expr><lit:literal type="number" pos:line="79" pos:column="22">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="79" pos:column="25">i</name> <op:operator pos:line="79" pos:column="27">&lt;</op:operator> <name><name pos:line="79" pos:column="29">myOrderList</name><op:operator pos:line="79" pos:column="40">.</op:operator><name pos:line="79" pos:column="41">Count</name></name></expr>;</condition> <incr><expr><name pos:line="79" pos:column="48">i</name><op:operator pos:line="79" pos:column="49">++</op:operator></expr></incr>)
        <block pos:line="80" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="81" pos:column="13">encoder</name><index pos:line="81" pos:column="20">[<expr><lit:literal type="string" pos:line="81" pos:column="21">"L_PAYMENTREQUEST_0_NAME"</lit:literal> <op:operator pos:line="81" pos:column="47">+</op:operator> <name pos:line="81" pos:column="49">i</name></expr>]</index></name> <op:operator pos:line="81" pos:column="52">=</op:operator> <name><name pos:line="81" pos:column="54">myOrderList</name><index pos:line="81" pos:column="65">[<expr><name pos:line="81" pos:column="66">i</name></expr>]</index></name><op:operator pos:line="81" pos:column="68">.</op:operator><call><name><name pos:line="81" pos:column="69">Product</name><op:operator pos:line="81" pos:column="76">.</op:operator><name pos:line="81" pos:column="77">ProductName</name><op:operator pos:line="81" pos:column="88">.</op:operator><name pos:line="81" pos:column="89">ToString</name></name><argument_list pos:line="81" pos:column="97">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="82" pos:column="13">encoder</name><index pos:line="82" pos:column="20">[<expr><lit:literal type="string" pos:line="82" pos:column="21">"L_PAYMENTREQUEST_0_AMT"</lit:literal> <op:operator pos:line="82" pos:column="46">+</op:operator> <name pos:line="82" pos:column="48">i</name></expr>]</index></name> <op:operator pos:line="82" pos:column="51">=</op:operator> <name><name pos:line="82" pos:column="53">myOrderList</name><index pos:line="82" pos:column="64">[<expr><name pos:line="82" pos:column="65">i</name></expr>]</index></name><op:operator pos:line="82" pos:column="67">.</op:operator><call><name><name pos:line="82" pos:column="68">Product</name><op:operator pos:line="82" pos:column="75">.</op:operator><name pos:line="82" pos:column="76">UnitPrice</name><op:operator pos:line="82" pos:column="85">.</op:operator><name pos:line="82" pos:column="86">ToString</name></name><argument_list pos:line="82" pos:column="94">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="83" pos:column="13">encoder</name><index pos:line="83" pos:column="20">[<expr><lit:literal type="string" pos:line="83" pos:column="21">"L_PAYMENTREQUEST_0_QTY"</lit:literal> <op:operator pos:line="83" pos:column="46">+</op:operator> <name pos:line="83" pos:column="48">i</name></expr>]</index></name> <op:operator pos:line="83" pos:column="51">=</op:operator> <name><name pos:line="83" pos:column="53">myOrderList</name><index pos:line="83" pos:column="64">[<expr><name pos:line="83" pos:column="65">i</name></expr>]</index></name><op:operator pos:line="83" pos:column="67">.</op:operator><call><name><name pos:line="83" pos:column="68">Quantity</name><op:operator pos:line="83" pos:column="76">.</op:operator><name pos:line="83" pos:column="77">ToString</name></name><argument_list pos:line="83" pos:column="85">()</argument_list></call></expr>;</expr_stmt>
        }</block></for>

        <decl_stmt><decl><type><name pos:line="86" pos:column="9">string</name></type> <name pos:line="86" pos:column="16">pStrrequestforNvp</name> <init pos:line="86" pos:column="34">= <expr><call><name><name pos:line="86" pos:column="36">encoder</name><op:operator pos:line="86" pos:column="43">.</op:operator><name pos:line="86" pos:column="44">Encode</name></name><argument_list pos:line="86" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="87" pos:column="9">string</name></type> <name pos:line="87" pos:column="16">pStresponsenvp</name> <init pos:line="87" pos:column="31">= <expr><call><name pos:line="87" pos:column="33">HttpCall</name><argument_list pos:line="87" pos:column="41">(<argument><expr><name pos:line="87" pos:column="42">pStrrequestforNvp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name pos:line="89" pos:column="9">NVPCodec</name></type> <name pos:line="89" pos:column="18">decoder</name> <init pos:line="89" pos:column="26">= <expr><op:operator pos:line="89" pos:column="28">new</op:operator> <call><name pos:line="89" pos:column="32">NVPCodec</name><argument_list pos:line="89" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="90" pos:column="9">decoder</name><op:operator pos:line="90" pos:column="16">.</op:operator><name pos:line="90" pos:column="17">Decode</name></name><argument_list pos:line="90" pos:column="23">(<argument><expr><name pos:line="90" pos:column="24">pStresponsenvp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="92" pos:column="9">string</name></type> <name pos:line="92" pos:column="16">strAck</name> <init pos:line="92" pos:column="23">= <expr><name><name pos:line="92" pos:column="25">decoder</name><index pos:line="92" pos:column="32">[<expr><lit:literal type="string" pos:line="92" pos:column="33">"ACK"</lit:literal></expr>]</index></name><op:operator pos:line="92" pos:column="39">.</op:operator><call><name pos:line="92" pos:column="40">ToLower</name><argument_list pos:line="92" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">strAck</name> <op:operator pos:line="93" pos:column="20">!=</op:operator> <name pos:line="93" pos:column="23">null</name> <op:operator pos:line="93" pos:column="28">&amp;&amp;</op:operator> <op:operator pos:line="93" pos:column="31">(</op:operator><name pos:line="93" pos:column="32">strAck</name> <op:operator pos:line="93" pos:column="39">==</op:operator> <lit:literal type="string" pos:line="93" pos:column="42">"success"</lit:literal> <op:operator pos:line="93" pos:column="52">||</op:operator> <name pos:line="93" pos:column="55">strAck</name> <op:operator pos:line="93" pos:column="62">==</op:operator> <lit:literal type="string" pos:line="93" pos:column="65">"successwithwarning"</lit:literal><op:operator pos:line="93" pos:column="85">)</op:operator></expr>)</condition><then pos:line="93" pos:column="87">
        <block pos:line="94" pos:column="9">{
            <expr_stmt><expr><name pos:line="95" pos:column="13">token</name> <op:operator pos:line="95" pos:column="19">=</op:operator> <name><name pos:line="95" pos:column="21">decoder</name><index pos:line="95" pos:column="28">[<expr><lit:literal type="string" pos:line="95" pos:column="29">"TOKEN"</lit:literal></expr>]</index></name></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="96" pos:column="13">string</name></type> <name pos:line="96" pos:column="20">ECURL</name> <init pos:line="96" pos:column="26">= <expr><lit:literal type="string" pos:line="96" pos:column="28">"https://"</lit:literal> <op:operator pos:line="96" pos:column="39">+</op:operator> <name pos:line="96" pos:column="41">host</name> <op:operator pos:line="96" pos:column="46">+</op:operator> <lit:literal type="string" pos:line="96" pos:column="48">"/cgi-bin/webscr?cmd=_express-checkout"</lit:literal> <op:operator pos:line="96" pos:column="88">+</op:operator> <lit:literal type="string" pos:line="96" pos:column="90">"&amp;token="</lit:literal> <op:operator pos:line="96" pos:column="100">+</op:operator> <name pos:line="96" pos:column="102">token</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name pos:line="97" pos:column="13">retMsg</name> <op:operator pos:line="97" pos:column="20">=</op:operator> <name pos:line="97" pos:column="22">ECURL</name></expr>;</expr_stmt>
            <return pos:line="98" pos:column="13">return <expr><lit:literal type="boolean" pos:line="98" pos:column="20">true</lit:literal></expr>;</return>
        }</block></then>
        <else pos:line="100" pos:column="9">else
        <block pos:line="101" pos:column="9">{
            <expr_stmt><expr><name pos:line="102" pos:column="13">retMsg</name> <op:operator pos:line="102" pos:column="20">=</op:operator> <lit:literal type="string" pos:line="102" pos:column="22">"ErrorCode="</lit:literal> <op:operator pos:line="102" pos:column="35">+</op:operator> <name><name pos:line="102" pos:column="37">decoder</name><index pos:line="102" pos:column="44">[<expr><lit:literal type="string" pos:line="102" pos:column="45">"L_ERRORCODE0"</lit:literal></expr>]</index></name> <op:operator pos:line="102" pos:column="61">+</op:operator> <lit:literal type="string" pos:line="102" pos:column="63">"&amp;"</lit:literal> <op:operator pos:line="102" pos:column="67">+</op:operator>
                <lit:literal type="string" pos:line="103" pos:column="17">"Desc="</lit:literal> <op:operator pos:line="103" pos:column="25">+</op:operator> <name><name pos:line="103" pos:column="27">decoder</name><index pos:line="103" pos:column="34">[<expr><lit:literal type="string" pos:line="103" pos:column="35">"L_SHORTMESSAGE0"</lit:literal></expr>]</index></name> <op:operator pos:line="103" pos:column="54">+</op:operator> <lit:literal type="string" pos:line="103" pos:column="56">"&amp;"</lit:literal> <op:operator pos:line="103" pos:column="60">+</op:operator>
                <lit:literal type="string" pos:line="104" pos:column="17">"Desc2="</lit:literal> <op:operator pos:line="104" pos:column="26">+</op:operator> <name><name pos:line="104" pos:column="28">decoder</name><index pos:line="104" pos:column="35">[<expr><lit:literal type="string" pos:line="104" pos:column="36">"L_LONGMESSAGE0"</lit:literal></expr>]</index></name></expr>;</expr_stmt>
            <return pos:line="105" pos:column="13">return <expr><lit:literal type="boolean" pos:line="105" pos:column="20">false</lit:literal></expr>;</return>
        }</block></else></if>
    }</block></function>

    <function><type><specifier pos:line="109" pos:column="5">public</specifier> <name pos:line="109" pos:column="12">bool</name></type> <name pos:line="109" pos:column="17">GetCheckoutDetails</name><parameter_list pos:line="109" pos:column="35">(<param><decl><type><name pos:line="109" pos:column="36">string</name></type> <name pos:line="109" pos:column="43">token</name></decl></param>, <param><decl><type><specifier pos:line="109" pos:column="50">ref</specifier> <name pos:line="109" pos:column="54">string</name></type> <name pos:line="109" pos:column="61">PayerID</name></decl></param>, <param><decl><type><specifier pos:line="109" pos:column="70">ref</specifier> <name pos:line="109" pos:column="74">NVPCodec</name></type> <name pos:line="109" pos:column="83">decoder</name></decl></param>, <param><decl><type><specifier pos:line="109" pos:column="92">ref</specifier> <name pos:line="109" pos:column="96">string</name></type> <name pos:line="109" pos:column="103">retMsg</name></decl></param>)</parameter_list>
    <block pos:line="110" pos:column="5">{
        <if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><name pos:line="111" pos:column="13">bSandbox</name></expr>)</condition><then pos:line="111" pos:column="22">
        <block pos:line="112" pos:column="9">{
            <expr_stmt><expr><name pos:line="113" pos:column="13">pEndPointURL</name> <op:operator pos:line="113" pos:column="26">=</op:operator> <name pos:line="113" pos:column="28">pEndPointURL_SB</name></expr>;</expr_stmt>
        }</block></then></if>

        <decl_stmt><decl><type><name pos:line="116" pos:column="9">NVPCodec</name></type> <name pos:line="116" pos:column="18">encoder</name> <init pos:line="116" pos:column="26">= <expr><op:operator pos:line="116" pos:column="28">new</op:operator> <call><name pos:line="116" pos:column="32">NVPCodec</name><argument_list pos:line="116" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name pos:line="117" pos:column="9">encoder</name><index pos:line="117" pos:column="16">[<expr><lit:literal type="string" pos:line="117" pos:column="17">"METHOD"</lit:literal></expr>]</index></name> <op:operator pos:line="117" pos:column="27">=</op:operator> <lit:literal type="string" pos:line="117" pos:column="29">"GetExpressCheckoutDetails"</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="118" pos:column="9">encoder</name><index pos:line="118" pos:column="16">[<expr><lit:literal type="string" pos:line="118" pos:column="17">"TOKEN"</lit:literal></expr>]</index></name> <op:operator pos:line="118" pos:column="26">=</op:operator> <name pos:line="118" pos:column="28">token</name></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="120" pos:column="9">string</name></type> <name pos:line="120" pos:column="16">pStrrequestforNvp</name> <init pos:line="120" pos:column="34">= <expr><call><name><name pos:line="120" pos:column="36">encoder</name><op:operator pos:line="120" pos:column="43">.</op:operator><name pos:line="120" pos:column="44">Encode</name></name><argument_list pos:line="120" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="121" pos:column="9">string</name></type> <name pos:line="121" pos:column="16">pStresponsenvp</name> <init pos:line="121" pos:column="31">= <expr><call><name pos:line="121" pos:column="33">HttpCall</name><argument_list pos:line="121" pos:column="41">(<argument><expr><name pos:line="121" pos:column="42">pStrrequestforNvp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><name pos:line="123" pos:column="9">decoder</name> <op:operator pos:line="123" pos:column="17">=</op:operator> <op:operator pos:line="123" pos:column="19">new</op:operator> <call><name pos:line="123" pos:column="23">NVPCodec</name><argument_list pos:line="123" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="124" pos:column="9">decoder</name><op:operator pos:line="124" pos:column="16">.</op:operator><name pos:line="124" pos:column="17">Decode</name></name><argument_list pos:line="124" pos:column="23">(<argument><expr><name pos:line="124" pos:column="24">pStresponsenvp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="126" pos:column="9">string</name></type> <name pos:line="126" pos:column="16">strAck</name> <init pos:line="126" pos:column="23">= <expr><name><name pos:line="126" pos:column="25">decoder</name><index pos:line="126" pos:column="32">[<expr><lit:literal type="string" pos:line="126" pos:column="33">"ACK"</lit:literal></expr>]</index></name><op:operator pos:line="126" pos:column="39">.</op:operator><call><name pos:line="126" pos:column="40">ToLower</name><argument_list pos:line="126" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="127" pos:column="9">if <condition pos:line="127" pos:column="12">(<expr><name pos:line="127" pos:column="13">strAck</name> <op:operator pos:line="127" pos:column="20">!=</op:operator> <name pos:line="127" pos:column="23">null</name> <op:operator pos:line="127" pos:column="28">&amp;&amp;</op:operator> <op:operator pos:line="127" pos:column="31">(</op:operator><name pos:line="127" pos:column="32">strAck</name> <op:operator pos:line="127" pos:column="39">==</op:operator> <lit:literal type="string" pos:line="127" pos:column="42">"success"</lit:literal> <op:operator pos:line="127" pos:column="52">||</op:operator> <name pos:line="127" pos:column="55">strAck</name> <op:operator pos:line="127" pos:column="62">==</op:operator> <lit:literal type="string" pos:line="127" pos:column="65">"successwithwarning"</lit:literal><op:operator pos:line="127" pos:column="85">)</op:operator></expr>)</condition><then pos:line="127" pos:column="87">
        <block pos:line="128" pos:column="9">{
            <expr_stmt><expr><name pos:line="129" pos:column="13">PayerID</name> <op:operator pos:line="129" pos:column="21">=</op:operator> <name><name pos:line="129" pos:column="23">decoder</name><index pos:line="129" pos:column="30">[<expr><lit:literal type="string" pos:line="129" pos:column="31">"PAYERID"</lit:literal></expr>]</index></name></expr>;</expr_stmt>
            <return pos:line="130" pos:column="13">return <expr><lit:literal type="boolean" pos:line="130" pos:column="20">true</lit:literal></expr>;</return>
        }</block></then>
        <else pos:line="132" pos:column="9">else
        <block pos:line="133" pos:column="9">{
            <expr_stmt><expr><name pos:line="134" pos:column="13">retMsg</name> <op:operator pos:line="134" pos:column="20">=</op:operator> <lit:literal type="string" pos:line="134" pos:column="22">"ErrorCode="</lit:literal> <op:operator pos:line="134" pos:column="35">+</op:operator> <name><name pos:line="134" pos:column="37">decoder</name><index pos:line="134" pos:column="44">[<expr><lit:literal type="string" pos:line="134" pos:column="45">"L_ERRORCODE0"</lit:literal></expr>]</index></name> <op:operator pos:line="134" pos:column="61">+</op:operator> <lit:literal type="string" pos:line="134" pos:column="63">"&amp;"</lit:literal> <op:operator pos:line="134" pos:column="67">+</op:operator>
                <lit:literal type="string" pos:line="135" pos:column="17">"Desc="</lit:literal> <op:operator pos:line="135" pos:column="25">+</op:operator> <name><name pos:line="135" pos:column="27">decoder</name><index pos:line="135" pos:column="34">[<expr><lit:literal type="string" pos:line="135" pos:column="35">"L_SHORTMESSAGE0"</lit:literal></expr>]</index></name> <op:operator pos:line="135" pos:column="54">+</op:operator> <lit:literal type="string" pos:line="135" pos:column="56">"&amp;"</lit:literal> <op:operator pos:line="135" pos:column="60">+</op:operator>
                <lit:literal type="string" pos:line="136" pos:column="17">"Desc2="</lit:literal> <op:operator pos:line="136" pos:column="26">+</op:operator> <name><name pos:line="136" pos:column="28">decoder</name><index pos:line="136" pos:column="35">[<expr><lit:literal type="string" pos:line="136" pos:column="36">"L_LONGMESSAGE0"</lit:literal></expr>]</index></name></expr>;</expr_stmt>

            <return pos:line="138" pos:column="13">return <expr><lit:literal type="boolean" pos:line="138" pos:column="20">false</lit:literal></expr>;</return>
        }</block></else></if>
    }</block></function>

    <function><type><specifier pos:line="142" pos:column="5">public</specifier> <name pos:line="142" pos:column="12">bool</name></type> <name pos:line="142" pos:column="17">DoCheckoutPayment</name><parameter_list pos:line="142" pos:column="34">(<param><decl><type><name pos:line="142" pos:column="35">string</name></type> <name pos:line="142" pos:column="42">finalPaymentAmount</name></decl></param>, <param><decl><type><name pos:line="142" pos:column="62">string</name></type> <name pos:line="142" pos:column="69">token</name></decl></param>, <param><decl><type><name pos:line="142" pos:column="76">string</name></type> <name pos:line="142" pos:column="83">PayerID</name></decl></param>, <param><decl><type><specifier pos:line="142" pos:column="92">ref</specifier> <name pos:line="142" pos:column="96">NVPCodec</name></type> <name pos:line="142" pos:column="105">decoder</name></decl></param>, <param><decl><type><specifier pos:line="142" pos:column="114">ref</specifier> <name pos:line="142" pos:column="118">string</name></type> <name pos:line="142" pos:column="125">retMsg</name></decl></param>)</parameter_list>
    <block pos:line="143" pos:column="5">{
        <if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><name pos:line="144" pos:column="13">bSandbox</name></expr>)</condition><then pos:line="144" pos:column="22">
        <block pos:line="145" pos:column="9">{
            <expr_stmt><expr><name pos:line="146" pos:column="13">pEndPointURL</name> <op:operator pos:line="146" pos:column="26">=</op:operator> <name pos:line="146" pos:column="28">pEndPointURL_SB</name></expr>;</expr_stmt>
        }</block></then></if>

        <decl_stmt><decl><type><name pos:line="149" pos:column="9">NVPCodec</name></type> <name pos:line="149" pos:column="18">encoder</name> <init pos:line="149" pos:column="26">= <expr><op:operator pos:line="149" pos:column="28">new</op:operator> <call><name pos:line="149" pos:column="32">NVPCodec</name><argument_list pos:line="149" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name pos:line="150" pos:column="9">encoder</name><index pos:line="150" pos:column="16">[<expr><lit:literal type="string" pos:line="150" pos:column="17">"METHOD"</lit:literal></expr>]</index></name> <op:operator pos:line="150" pos:column="27">=</op:operator> <lit:literal type="string" pos:line="150" pos:column="29">"DoExpressCheckoutPayment"</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="151" pos:column="9">encoder</name><index pos:line="151" pos:column="16">[<expr><lit:literal type="string" pos:line="151" pos:column="17">"TOKEN"</lit:literal></expr>]</index></name> <op:operator pos:line="151" pos:column="26">=</op:operator> <name pos:line="151" pos:column="28">token</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="152" pos:column="9">encoder</name><index pos:line="152" pos:column="16">[<expr><lit:literal type="string" pos:line="152" pos:column="17">"PAYERID"</lit:literal></expr>]</index></name> <op:operator pos:line="152" pos:column="28">=</op:operator> <name pos:line="152" pos:column="30">PayerID</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="153" pos:column="9">encoder</name><index pos:line="153" pos:column="16">[<expr><lit:literal type="string" pos:line="153" pos:column="17">"PAYMENTREQUEST_0_AMT"</lit:literal></expr>]</index></name> <op:operator pos:line="153" pos:column="41">=</op:operator> <name pos:line="153" pos:column="43">finalPaymentAmount</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="154" pos:column="9">encoder</name><index pos:line="154" pos:column="16">[<expr><lit:literal type="string" pos:line="154" pos:column="17">"PAYMENTREQUEST_0_CURRENCYCODE"</lit:literal></expr>]</index></name> <op:operator pos:line="154" pos:column="50">=</op:operator> <lit:literal type="string" pos:line="154" pos:column="52">"USD"</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="155" pos:column="9">encoder</name><index pos:line="155" pos:column="16">[<expr><lit:literal type="string" pos:line="155" pos:column="17">"PAYMENTREQUEST_0_PAYMENTACTION"</lit:literal></expr>]</index></name> <op:operator pos:line="155" pos:column="51">=</op:operator> <lit:literal type="string" pos:line="155" pos:column="53">"Sale"</lit:literal></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="157" pos:column="9">string</name></type> <name pos:line="157" pos:column="16">pStrrequestforNvp</name> <init pos:line="157" pos:column="34">= <expr><call><name><name pos:line="157" pos:column="36">encoder</name><op:operator pos:line="157" pos:column="43">.</op:operator><name pos:line="157" pos:column="44">Encode</name></name><argument_list pos:line="157" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="158" pos:column="9">string</name></type> <name pos:line="158" pos:column="16">pStresponsenvp</name> <init pos:line="158" pos:column="31">= <expr><call><name pos:line="158" pos:column="33">HttpCall</name><argument_list pos:line="158" pos:column="41">(<argument><expr><name pos:line="158" pos:column="42">pStrrequestforNvp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><name pos:line="160" pos:column="9">decoder</name> <op:operator pos:line="160" pos:column="17">=</op:operator> <op:operator pos:line="160" pos:column="19">new</op:operator> <call><name pos:line="160" pos:column="23">NVPCodec</name><argument_list pos:line="160" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="161" pos:column="9">decoder</name><op:operator pos:line="161" pos:column="16">.</op:operator><name pos:line="161" pos:column="17">Decode</name></name><argument_list pos:line="161" pos:column="23">(<argument><expr><name pos:line="161" pos:column="24">pStresponsenvp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="163" pos:column="9">string</name></type> <name pos:line="163" pos:column="16">strAck</name> <init pos:line="163" pos:column="23">= <expr><name><name pos:line="163" pos:column="25">decoder</name><index pos:line="163" pos:column="32">[<expr><lit:literal type="string" pos:line="163" pos:column="33">"ACK"</lit:literal></expr>]</index></name><op:operator pos:line="163" pos:column="39">.</op:operator><call><name pos:line="163" pos:column="40">ToLower</name><argument_list pos:line="163" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><name pos:line="164" pos:column="13">strAck</name> <op:operator pos:line="164" pos:column="20">!=</op:operator> <name pos:line="164" pos:column="23">null</name> <op:operator pos:line="164" pos:column="28">&amp;&amp;</op:operator> <op:operator pos:line="164" pos:column="31">(</op:operator><name pos:line="164" pos:column="32">strAck</name> <op:operator pos:line="164" pos:column="39">==</op:operator> <lit:literal type="string" pos:line="164" pos:column="42">"success"</lit:literal> <op:operator pos:line="164" pos:column="52">||</op:operator> <name pos:line="164" pos:column="55">strAck</name> <op:operator pos:line="164" pos:column="62">==</op:operator> <lit:literal type="string" pos:line="164" pos:column="65">"successwithwarning"</lit:literal><op:operator pos:line="164" pos:column="85">)</op:operator></expr>)</condition><then pos:line="164" pos:column="87">
        <block pos:line="165" pos:column="9">{
            <return pos:line="166" pos:column="13">return <expr><lit:literal type="boolean" pos:line="166" pos:column="20">true</lit:literal></expr>;</return>
        }</block></then>
        <else pos:line="168" pos:column="9">else
        <block pos:line="169" pos:column="9">{
            <expr_stmt><expr><name pos:line="170" pos:column="13">retMsg</name> <op:operator pos:line="170" pos:column="20">=</op:operator> <lit:literal type="string" pos:line="170" pos:column="22">"ErrorCode="</lit:literal> <op:operator pos:line="170" pos:column="35">+</op:operator> <name><name pos:line="170" pos:column="37">decoder</name><index pos:line="170" pos:column="44">[<expr><lit:literal type="string" pos:line="170" pos:column="45">"L_ERRORCODE0"</lit:literal></expr>]</index></name> <op:operator pos:line="170" pos:column="61">+</op:operator> <lit:literal type="string" pos:line="170" pos:column="63">"&amp;"</lit:literal> <op:operator pos:line="170" pos:column="67">+</op:operator>
                <lit:literal type="string" pos:line="171" pos:column="17">"Desc="</lit:literal> <op:operator pos:line="171" pos:column="25">+</op:operator> <name><name pos:line="171" pos:column="27">decoder</name><index pos:line="171" pos:column="34">[<expr><lit:literal type="string" pos:line="171" pos:column="35">"L_SHORTMESSAGE0"</lit:literal></expr>]</index></name> <op:operator pos:line="171" pos:column="54">+</op:operator> <lit:literal type="string" pos:line="171" pos:column="56">"&amp;"</lit:literal> <op:operator pos:line="171" pos:column="60">+</op:operator>
                <lit:literal type="string" pos:line="172" pos:column="17">"Desc2="</lit:literal> <op:operator pos:line="172" pos:column="26">+</op:operator> <name><name pos:line="172" pos:column="28">decoder</name><index pos:line="172" pos:column="35">[<expr><lit:literal type="string" pos:line="172" pos:column="36">"L_LONGMESSAGE0"</lit:literal></expr>]</index></name></expr>;</expr_stmt>

            <return pos:line="174" pos:column="13">return <expr><lit:literal type="boolean" pos:line="174" pos:column="20">false</lit:literal></expr>;</return>
        }</block></else></if>
    }</block></function>

    <function><type><specifier pos:line="178" pos:column="5">public</specifier> <name pos:line="178" pos:column="12">string</name></type> <name pos:line="178" pos:column="19">HttpCall</name><parameter_list pos:line="178" pos:column="27">(<param><decl><type><name pos:line="178" pos:column="28">string</name></type> <name pos:line="178" pos:column="35">NvpRequest</name></decl></param>)</parameter_list>
    <block pos:line="179" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="180" pos:column="9">string</name></type> <name pos:line="180" pos:column="16">url</name> <init pos:line="180" pos:column="20">= <expr><name pos:line="180" pos:column="22">pEndPointURL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name pos:line="182" pos:column="9">string</name></type> <name pos:line="182" pos:column="16">strPost</name> <init pos:line="182" pos:column="24">= <expr><name pos:line="182" pos:column="26">NvpRequest</name> <op:operator pos:line="182" pos:column="37">+</op:operator> <lit:literal type="string" pos:line="182" pos:column="39">"&amp;"</lit:literal> <op:operator pos:line="182" pos:column="43">+</op:operator> <call><name pos:line="182" pos:column="45">buildCredentialsNVPString</name><argument_list pos:line="182" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="183" pos:column="9">strPost</name> <op:operator pos:line="183" pos:column="17">=</op:operator> <name pos:line="183" pos:column="19">strPost</name> <op:operator pos:line="183" pos:column="27">+</op:operator> <lit:literal type="string" pos:line="183" pos:column="29">"&amp;BUTTONSOURCE="</lit:literal> <op:operator pos:line="183" pos:column="46">+</op:operator> <call><name><name pos:line="183" pos:column="48">HttpUtility</name><op:operator pos:line="183" pos:column="59">.</op:operator><name pos:line="183" pos:column="60">UrlEncode</name></name><argument_list pos:line="183" pos:column="69">(<argument><expr><name pos:line="183" pos:column="70">BNCode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="185" pos:column="9">HttpWebRequest</name></type> <name pos:line="185" pos:column="24">objRequest</name> <init pos:line="185" pos:column="35">= <expr><op:operator pos:line="185" pos:column="37">(</op:operator><name pos:line="185" pos:column="38">HttpWebRequest</name><op:operator pos:line="185" pos:column="52">)</op:operator><call><name><name pos:line="185" pos:column="53">WebRequest</name><op:operator pos:line="185" pos:column="63">.</op:operator><name pos:line="185" pos:column="64">Create</name></name><argument_list pos:line="185" pos:column="70">(<argument><expr><name pos:line="185" pos:column="71">url</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name pos:line="186" pos:column="9">objRequest</name><op:operator pos:line="186" pos:column="19">.</op:operator><name pos:line="186" pos:column="20">Timeout</name></name> <op:operator pos:line="186" pos:column="28">=</op:operator> <name pos:line="186" pos:column="30">Timeout</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="187" pos:column="9">objRequest</name><op:operator pos:line="187" pos:column="19">.</op:operator><name pos:line="187" pos:column="20">Method</name></name> <op:operator pos:line="187" pos:column="27">=</op:operator> <lit:literal type="string" pos:line="187" pos:column="29">"POST"</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="188" pos:column="9">objRequest</name><op:operator pos:line="188" pos:column="19">.</op:operator><name pos:line="188" pos:column="20">ContentLength</name></name> <op:operator pos:line="188" pos:column="34">=</op:operator> <name><name pos:line="188" pos:column="36">strPost</name><op:operator pos:line="188" pos:column="43">.</op:operator><name pos:line="188" pos:column="44">Length</name></name></expr>;</expr_stmt>

        <try pos:line="190" pos:column="9">try
        <block pos:line="191" pos:column="9">{
            <using pos:line="192" pos:column="13">using (<decl><type><name pos:line="192" pos:column="20">StreamWriter</name></type> <name pos:line="192" pos:column="33">myWriter</name> <init pos:line="192" pos:column="42">= <expr><op:operator pos:line="192" pos:column="44">new</op:operator> <call><name pos:line="192" pos:column="48">StreamWriter</name><argument_list pos:line="192" pos:column="60">(<argument><expr><call><name><name pos:line="192" pos:column="61">objRequest</name><op:operator pos:line="192" pos:column="71">.</op:operator><name pos:line="192" pos:column="72">GetRequestStream</name></name><argument_list pos:line="192" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>)
            <block pos:line="193" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="194" pos:column="17">myWriter</name><op:operator pos:line="194" pos:column="25">.</op:operator><name pos:line="194" pos:column="26">Write</name></name><argument_list pos:line="194" pos:column="31">(<argument><expr><name pos:line="194" pos:column="32">strPost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></using>
        }</block>
        <catch pos:line="197" pos:column="9">catch <parameter_list pos:line="197" pos:column="15">(<param><decl><type><name pos:line="197" pos:column="16">Exception</name></type> <name pos:line="197" pos:column="26">e</name></decl></param>)</parameter_list>
        <block pos:line="198" pos:column="9">{
            <comment type="line" pos:line="199" pos:column="13">// Log the exception.</comment>
            <expr_stmt><expr><call><name><name pos:line="200" pos:column="13">WingtipToys</name><op:operator pos:line="200" pos:column="24">.</op:operator><name pos:line="200" pos:column="25">Logic</name><op:operator pos:line="200" pos:column="30">.</op:operator><name pos:line="200" pos:column="31">ExceptionUtility</name><op:operator pos:line="200" pos:column="47">.</op:operator><name pos:line="200" pos:column="48">LogException</name></name><argument_list pos:line="200" pos:column="60">(<argument><expr><name pos:line="200" pos:column="61">e</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="200" pos:column="64">"HttpCall in PayPalFunction.cs"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>

        <comment type="line" pos:line="203" pos:column="9">//Retrieve the Response returned from the NVP API call to PayPal.</comment>
        <decl_stmt><decl><type><name pos:line="204" pos:column="9">HttpWebResponse</name></type> <name pos:line="204" pos:column="25">objResponse</name> <init pos:line="204" pos:column="37">= <expr><op:operator pos:line="204" pos:column="39">(</op:operator><name pos:line="204" pos:column="40">HttpWebResponse</name><op:operator pos:line="204" pos:column="55">)</op:operator><call><name><name pos:line="204" pos:column="56">objRequest</name><op:operator pos:line="204" pos:column="66">.</op:operator><name pos:line="204" pos:column="67">GetResponse</name></name><argument_list pos:line="204" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="205" pos:column="9">string</name></type> <name pos:line="205" pos:column="16">result</name></decl>;</decl_stmt>
        <using pos:line="206" pos:column="9">using (<decl><type><name pos:line="206" pos:column="16">StreamReader</name></type> <name pos:line="206" pos:column="29">sr</name> <init pos:line="206" pos:column="32">= <expr><op:operator pos:line="206" pos:column="34">new</op:operator> <call><name pos:line="206" pos:column="38">StreamReader</name><argument_list pos:line="206" pos:column="50">(<argument><expr><call><name><name pos:line="206" pos:column="51">objResponse</name><op:operator pos:line="206" pos:column="62">.</op:operator><name pos:line="206" pos:column="63">GetResponseStream</name></name><argument_list pos:line="206" pos:column="80">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>)
        <block pos:line="207" pos:column="9">{
            <expr_stmt><expr><name pos:line="208" pos:column="13">result</name> <op:operator pos:line="208" pos:column="20">=</op:operator> <call><name><name pos:line="208" pos:column="22">sr</name><op:operator pos:line="208" pos:column="24">.</op:operator><name pos:line="208" pos:column="25">ReadToEnd</name></name><argument_list pos:line="208" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
        }</block></using>

        <return pos:line="211" pos:column="9">return <expr><name pos:line="211" pos:column="16">result</name></expr>;</return>
    }</block></function>

    <function><type><specifier pos:line="214" pos:column="5">private</specifier> <name pos:line="214" pos:column="13">string</name></type> <name pos:line="214" pos:column="20">buildCredentialsNVPString</name><parameter_list pos:line="214" pos:column="45">()</parameter_list>
    <block pos:line="215" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="216" pos:column="9">NVPCodec</name></type> <name pos:line="216" pos:column="18">codec</name> <init pos:line="216" pos:column="24">= <expr><op:operator pos:line="216" pos:column="26">new</op:operator> <call><name pos:line="216" pos:column="30">NVPCodec</name><argument_list pos:line="216" pos:column="38">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if pos:line="218" pos:column="9">if <condition pos:line="218" pos:column="12">(<expr><op:operator pos:line="218" pos:column="13">!</op:operator><call><name pos:line="218" pos:column="14">IsEmpty</name><argument_list pos:line="218" pos:column="21">(<argument><expr><name pos:line="218" pos:column="22">APIUsername</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="218" pos:column="35">
            <expr_stmt><expr><name><name pos:line="219" pos:column="13">codec</name><index pos:line="219" pos:column="18">[<expr><lit:literal type="string" pos:line="219" pos:column="19">"USER"</lit:literal></expr>]</index></name> <op:operator pos:line="219" pos:column="27">=</op:operator> <name pos:line="219" pos:column="29">APIUsername</name></expr>;</expr_stmt></then></if>

        <if pos:line="221" pos:column="9">if <condition pos:line="221" pos:column="12">(<expr><op:operator pos:line="221" pos:column="13">!</op:operator><call><name pos:line="221" pos:column="14">IsEmpty</name><argument_list pos:line="221" pos:column="21">(<argument><expr><name pos:line="221" pos:column="22">APIPassword</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="221" pos:column="35">
            <expr_stmt><expr><name><name pos:line="222" pos:column="13">codec</name><index pos:line="222" pos:column="18">[<expr><name pos:line="222" pos:column="19">PWD</name></expr>]</index></name> <op:operator pos:line="222" pos:column="24">=</op:operator> <name pos:line="222" pos:column="26">APIPassword</name></expr>;</expr_stmt></then></if>

        <if pos:line="224" pos:column="9">if <condition pos:line="224" pos:column="12">(<expr><op:operator pos:line="224" pos:column="13">!</op:operator><call><name pos:line="224" pos:column="14">IsEmpty</name><argument_list pos:line="224" pos:column="21">(<argument><expr><name pos:line="224" pos:column="22">APISignature</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="224" pos:column="36">
            <expr_stmt><expr><name><name pos:line="225" pos:column="13">codec</name><index pos:line="225" pos:column="18">[<expr><name pos:line="225" pos:column="19">SIGNATURE</name></expr>]</index></name> <op:operator pos:line="225" pos:column="30">=</op:operator> <name pos:line="225" pos:column="32">APISignature</name></expr>;</expr_stmt></then></if>

        <if pos:line="227" pos:column="9">if <condition pos:line="227" pos:column="12">(<expr><op:operator pos:line="227" pos:column="13">!</op:operator><call><name pos:line="227" pos:column="14">IsEmpty</name><argument_list pos:line="227" pos:column="21">(<argument><expr><name pos:line="227" pos:column="22">Subject</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="227" pos:column="31">
            <expr_stmt><expr><name><name pos:line="228" pos:column="13">codec</name><index pos:line="228" pos:column="18">[<expr><lit:literal type="string" pos:line="228" pos:column="19">"SUBJECT"</lit:literal></expr>]</index></name> <op:operator pos:line="228" pos:column="30">=</op:operator> <name pos:line="228" pos:column="32">Subject</name></expr>;</expr_stmt></then></if>

        <expr_stmt><expr><name><name pos:line="230" pos:column="9">codec</name><index pos:line="230" pos:column="14">[<expr><lit:literal type="string" pos:line="230" pos:column="15">"VERSION"</lit:literal></expr>]</index></name> <op:operator pos:line="230" pos:column="26">=</op:operator> <lit:literal type="string" pos:line="230" pos:column="28">"88.0"</lit:literal></expr>;</expr_stmt>

        <return pos:line="232" pos:column="9">return <expr><call><name><name pos:line="232" pos:column="16">codec</name><op:operator pos:line="232" pos:column="21">.</op:operator><name pos:line="232" pos:column="22">Encode</name></name><argument_list pos:line="232" pos:column="28">()</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><specifier pos:line="235" pos:column="5">public</specifier> <specifier pos:line="235" pos:column="12">static</specifier> <name pos:line="235" pos:column="19">bool</name></type> <name pos:line="235" pos:column="24">IsEmpty</name><parameter_list pos:line="235" pos:column="31">(<param><decl><type><name pos:line="235" pos:column="32">string</name></type> <name pos:line="235" pos:column="39">s</name></decl></param>)</parameter_list>
    <block pos:line="236" pos:column="5">{
        <return pos:line="237" pos:column="9">return <expr><name pos:line="237" pos:column="16">s</name> <op:operator pos:line="237" pos:column="18">==</op:operator> <name pos:line="237" pos:column="21">null</name> <op:operator pos:line="237" pos:column="26">||</op:operator> <call><name><name pos:line="237" pos:column="29">s</name><op:operator pos:line="237" pos:column="30">.</op:operator><name pos:line="237" pos:column="31">Trim</name></name><argument_list pos:line="237" pos:column="35">()</argument_list></call> <op:operator pos:line="237" pos:column="38">==</op:operator> <name><name pos:line="237" pos:column="41">string</name><op:operator pos:line="237" pos:column="47">.</op:operator><name pos:line="237" pos:column="48">Empty</name></name></expr>;</return>
    }</block></function>
}</block></class>

<class><specifier pos:line="241" pos:column="1">public</specifier> <specifier pos:line="241" pos:column="8">sealed</specifier> class <name pos:line="241" pos:column="21">NVPCodec</name> <super pos:line="241" pos:column="30">: <name pos:line="241" pos:column="32">NameValueCollection</name></super>
<block pos:line="242" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="243" pos:column="5">private</specifier> <specifier pos:line="243" pos:column="13">const</specifier> <name pos:line="243" pos:column="19">string</name></type> <name pos:line="243" pos:column="26">AMPERSAND</name> <init pos:line="243" pos:column="36">= <expr><lit:literal type="string" pos:line="243" pos:column="38">"&amp;"</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="244" pos:column="5">private</specifier> <specifier pos:line="244" pos:column="13">const</specifier> <name pos:line="244" pos:column="19">string</name></type> <name pos:line="244" pos:column="26">EQUALS</name> <init pos:line="244" pos:column="33">= <expr><lit:literal type="string" pos:line="244" pos:column="35">"="</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="245" pos:column="5">private</specifier> <specifier pos:line="245" pos:column="13">static</specifier> <specifier pos:line="245" pos:column="20">readonly</specifier> <name pos:line="245" pos:column="29">char</name><index pos:line="245" pos:column="33">[]</index></type> <name pos:line="245" pos:column="36">AMPERSAND_CHAR_ARRAY</name> <init pos:line="245" pos:column="57">= <expr><call><name><name pos:line="245" pos:column="59">AMPERSAND</name><op:operator pos:line="245" pos:column="68">.</op:operator><name pos:line="245" pos:column="69">ToCharArray</name></name><argument_list pos:line="245" pos:column="80">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="246" pos:column="5">private</specifier> <specifier pos:line="246" pos:column="13">static</specifier> <specifier pos:line="246" pos:column="20">readonly</specifier> <name pos:line="246" pos:column="29">char</name><index pos:line="246" pos:column="33">[]</index></type> <name pos:line="246" pos:column="36">EQUALS_CHAR_ARRAY</name> <init pos:line="246" pos:column="54">= <expr><call><name><name pos:line="246" pos:column="56">EQUALS</name><op:operator pos:line="246" pos:column="62">.</op:operator><name pos:line="246" pos:column="63">ToCharArray</name></name><argument_list pos:line="246" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <function><type><specifier pos:line="248" pos:column="5">public</specifier> <name pos:line="248" pos:column="12">string</name></type> <name pos:line="248" pos:column="19">Encode</name><parameter_list pos:line="248" pos:column="25">()</parameter_list>
    <block pos:line="249" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="250" pos:column="9">StringBuilder</name></type> <name pos:line="250" pos:column="23">sb</name> <init pos:line="250" pos:column="26">= <expr><op:operator pos:line="250" pos:column="28">new</op:operator> <call><name pos:line="250" pos:column="32">StringBuilder</name><argument_list pos:line="250" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="251" pos:column="9">bool</name></type> <name pos:line="251" pos:column="14">firstPair</name> <init pos:line="251" pos:column="24">= <expr><lit:literal type="boolean" pos:line="251" pos:column="26">true</lit:literal></expr></init></decl>;</decl_stmt>
        <foreach pos:line="252" pos:column="9">foreach (<init><decl><type><name pos:line="252" pos:column="18">string</name></type> <name pos:line="252" pos:column="25">kv</name> <range pos:line="252" pos:column="28">in <expr><name pos:line="252" pos:column="31">AllKeys</name></expr></range></decl></init>)
        <block pos:line="253" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="254" pos:column="13">string</name></type> <name pos:line="254" pos:column="20">name</name> <init pos:line="254" pos:column="25">= <expr><call><name><name pos:line="254" pos:column="27">HttpUtility</name><op:operator pos:line="254" pos:column="38">.</op:operator><name pos:line="254" pos:column="39">UrlEncode</name></name><argument_list pos:line="254" pos:column="48">(<argument><expr><name pos:line="254" pos:column="49">kv</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="255" pos:column="13">string</name></type> <name pos:line="255" pos:column="20">value</name> <init pos:line="255" pos:column="26">= <expr><call><name><name pos:line="255" pos:column="28">HttpUtility</name><op:operator pos:line="255" pos:column="39">.</op:operator><name pos:line="255" pos:column="40">UrlEncode</name></name><argument_list pos:line="255" pos:column="49">(<argument><expr><name><name pos:line="255" pos:column="50">this</name><index pos:line="255" pos:column="54">[<expr><name pos:line="255" pos:column="55">kv</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="256" pos:column="13">if <condition pos:line="256" pos:column="16">(<expr><op:operator pos:line="256" pos:column="17">!</op:operator><name pos:line="256" pos:column="18">firstPair</name></expr>)</condition><then pos:line="256" pos:column="28">
            <block pos:line="257" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="258" pos:column="17">sb</name><op:operator pos:line="258" pos:column="19">.</op:operator><name pos:line="258" pos:column="20">Append</name></name><argument_list pos:line="258" pos:column="26">(<argument><expr><name pos:line="258" pos:column="27">AMPERSAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="260" pos:column="13">sb</name><op:operator pos:line="260" pos:column="15">.</op:operator><name pos:line="260" pos:column="16">Append</name></name><argument_list pos:line="260" pos:column="22">(<argument><expr><name pos:line="260" pos:column="23">name</name></expr></argument>)</argument_list></call><op:operator pos:line="260" pos:column="28">.</op:operator><call><name pos:line="260" pos:column="29">Append</name><argument_list pos:line="260" pos:column="35">(<argument><expr><name pos:line="260" pos:column="36">EQUALS</name></expr></argument>)</argument_list></call><op:operator pos:line="260" pos:column="43">.</op:operator><call><name pos:line="260" pos:column="44">Append</name><argument_list pos:line="260" pos:column="50">(<argument><expr><name pos:line="260" pos:column="51">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="261" pos:column="13">firstPair</name> <op:operator pos:line="261" pos:column="23">=</op:operator> <lit:literal type="boolean" pos:line="261" pos:column="25">false</lit:literal></expr>;</expr_stmt>
        }</block></foreach>
        <return pos:line="263" pos:column="9">return <expr><call><name><name pos:line="263" pos:column="16">sb</name><op:operator pos:line="263" pos:column="18">.</op:operator><name pos:line="263" pos:column="19">ToString</name></name><argument_list pos:line="263" pos:column="27">()</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><specifier pos:line="266" pos:column="5">public</specifier> <name pos:line="266" pos:column="12">void</name></type> <name pos:line="266" pos:column="17">Decode</name><parameter_list pos:line="266" pos:column="23">(<param><decl><type><name pos:line="266" pos:column="24">string</name></type> <name pos:line="266" pos:column="31">nvpstring</name></decl></param>)</parameter_list>
    <block pos:line="267" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="268" pos:column="9">Clear</name><argument_list pos:line="268" pos:column="14">()</argument_list></call></expr>;</expr_stmt>
        <foreach pos:line="269" pos:column="9">foreach (<init><decl><type><name pos:line="269" pos:column="18">string</name></type> <name pos:line="269" pos:column="25">nvp</name> <range pos:line="269" pos:column="29">in <expr><call><name><name pos:line="269" pos:column="32">nvpstring</name><op:operator pos:line="269" pos:column="41">.</op:operator><name pos:line="269" pos:column="42">Split</name></name><argument_list pos:line="269" pos:column="47">(<argument><expr><name pos:line="269" pos:column="48">AMPERSAND_CHAR_ARRAY</name></expr></argument>)</argument_list></call></expr></range></decl></init>)
        <block pos:line="270" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="271" pos:column="13">string</name><index pos:line="271" pos:column="19">[]</index></type> <name pos:line="271" pos:column="22">tokens</name> <init pos:line="271" pos:column="29">= <expr><call><name><name pos:line="271" pos:column="31">nvp</name><op:operator pos:line="271" pos:column="34">.</op:operator><name pos:line="271" pos:column="35">Split</name></name><argument_list pos:line="271" pos:column="40">(<argument><expr><name pos:line="271" pos:column="41">EQUALS_CHAR_ARRAY</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="272" pos:column="13">if <condition pos:line="272" pos:column="16">(<expr><name><name pos:line="272" pos:column="17">tokens</name><op:operator pos:line="272" pos:column="23">.</op:operator><name pos:line="272" pos:column="24">Length</name></name> <op:operator pos:line="272" pos:column="31">&gt;=</op:operator> <lit:literal type="number" pos:line="272" pos:column="34">2</lit:literal></expr>)</condition><then pos:line="272" pos:column="36">
            <block pos:line="273" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="274" pos:column="17">string</name></type> <name pos:line="274" pos:column="24">name</name> <init pos:line="274" pos:column="29">= <expr><call><name><name pos:line="274" pos:column="31">HttpUtility</name><op:operator pos:line="274" pos:column="42">.</op:operator><name pos:line="274" pos:column="43">UrlDecode</name></name><argument_list pos:line="274" pos:column="52">(<argument><expr><name><name pos:line="274" pos:column="53">tokens</name><index pos:line="274" pos:column="59">[<expr><lit:literal type="number" pos:line="274" pos:column="60">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="275" pos:column="17">string</name></type> <name pos:line="275" pos:column="24">value</name> <init pos:line="275" pos:column="30">= <expr><call><name><name pos:line="275" pos:column="32">HttpUtility</name><op:operator pos:line="275" pos:column="43">.</op:operator><name pos:line="275" pos:column="44">UrlDecode</name></name><argument_list pos:line="275" pos:column="53">(<argument><expr><name><name pos:line="275" pos:column="54">tokens</name><index pos:line="275" pos:column="60">[<expr><lit:literal type="number" pos:line="275" pos:column="61">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name pos:line="276" pos:column="17">Add</name><argument_list pos:line="276" pos:column="20">(<argument><expr><name pos:line="276" pos:column="21">name</name></expr></argument>, <argument><expr><name pos:line="276" pos:column="27">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></foreach>
    }</block></function>

    <function><type><specifier pos:line="281" pos:column="5">public</specifier> <name pos:line="281" pos:column="12">void</name></type> <name pos:line="281" pos:column="17">Add</name><parameter_list pos:line="281" pos:column="20">(<param><decl><type><name pos:line="281" pos:column="21">string</name></type> <name pos:line="281" pos:column="28">name</name></decl></param>, <param><decl><type><name pos:line="281" pos:column="34">string</name></type> <name pos:line="281" pos:column="41">value</name></decl></param>, <param><decl><type><name pos:line="281" pos:column="48">int</name></type> <name pos:line="281" pos:column="52">index</name></decl></param>)</parameter_list>
    <block pos:line="282" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="283" pos:column="9">this</name><op:operator pos:line="283" pos:column="13">.</op:operator><name pos:line="283" pos:column="14">Add</name></name><argument_list pos:line="283" pos:column="17">(<argument><expr><call><name pos:line="283" pos:column="18">GetArrayName</name><argument_list pos:line="283" pos:column="30">(<argument><expr><name pos:line="283" pos:column="31">index</name></expr></argument>, <argument><expr><name pos:line="283" pos:column="38">name</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="283" pos:column="45">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier pos:line="286" pos:column="5">public</specifier> <name pos:line="286" pos:column="12">void</name></type> <name pos:line="286" pos:column="17">Remove</name><parameter_list pos:line="286" pos:column="23">(<param><decl><type><name pos:line="286" pos:column="24">string</name></type> <name pos:line="286" pos:column="31">arrayName</name></decl></param>, <param><decl><type><name pos:line="286" pos:column="42">int</name></type> <name pos:line="286" pos:column="46">index</name></decl></param>)</parameter_list>
    <block pos:line="287" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="288" pos:column="9">this</name><op:operator pos:line="288" pos:column="13">.</op:operator><name pos:line="288" pos:column="14">Remove</name></name><argument_list pos:line="288" pos:column="20">(<argument><expr><call><name pos:line="288" pos:column="21">GetArrayName</name><argument_list pos:line="288" pos:column="33">(<argument><expr><name pos:line="288" pos:column="34">index</name></expr></argument>, <argument><expr><name pos:line="288" pos:column="41">arrayName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <decl_stmt><decl><type><specifier pos:line="291" pos:column="5">public</specifier> <name pos:line="291" pos:column="12">string</name></type> <name pos:line="291" pos:column="19">this</name><parameter_list pos:line="291" pos:column="23">[<param><decl><type><name pos:line="291" pos:column="24">string</name></type> <name pos:line="291" pos:column="31">name</name></decl></param><op:operator pos:line="291" pos:column="35">,</op:operator> <param><decl><type><name pos:line="291" pos:column="37">int</name></type> <name pos:line="291" pos:column="41">index</name></decl></param>]</parameter_list>
    <block pos:line="292" pos:column="5">{
        <function><name pos:line="293" pos:column="9">get</name>
        <block pos:line="294" pos:column="9">{
            <return pos:line="295" pos:column="13">return <expr><name><name pos:line="295" pos:column="20">this</name><index pos:line="295" pos:column="24">[<expr><call><name pos:line="295" pos:column="25">GetArrayName</name><argument_list pos:line="295" pos:column="37">(<argument><expr><name pos:line="295" pos:column="38">index</name></expr></argument>, <argument><expr><name pos:line="295" pos:column="45">name</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</return>
        }</block></function>
        <function><name pos:line="297" pos:column="9">set</name>
        <block pos:line="298" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="299" pos:column="13">this</name><index pos:line="299" pos:column="17">[<expr><call><name pos:line="299" pos:column="18">GetArrayName</name><argument_list pos:line="299" pos:column="30">(<argument><expr><name pos:line="299" pos:column="31">index</name></expr></argument>, <argument><expr><name pos:line="299" pos:column="38">name</name></expr></argument>)</argument_list></call></expr>]</index></name> <op:operator pos:line="299" pos:column="45">=</op:operator> <name pos:line="299" pos:column="47">value</name></expr>;</expr_stmt>
        }</block></function>
    }</block></decl></decl_stmt>

    <function><type><specifier pos:line="303" pos:column="5">private</specifier> <specifier pos:line="303" pos:column="13">static</specifier> <name pos:line="303" pos:column="20">string</name></type> <name pos:line="303" pos:column="27">GetArrayName</name><parameter_list pos:line="303" pos:column="39">(<param><decl><type><name pos:line="303" pos:column="40">int</name></type> <name pos:line="303" pos:column="44">index</name></decl></param>, <param><decl><type><name pos:line="303" pos:column="51">string</name></type> <name pos:line="303" pos:column="58">name</name></decl></param>)</parameter_list>
    <block pos:line="304" pos:column="5">{
        <if pos:line="305" pos:column="9">if <condition pos:line="305" pos:column="12">(<expr><name pos:line="305" pos:column="13">index</name> <op:operator pos:line="305" pos:column="19">&lt;</op:operator> <lit:literal type="number" pos:line="305" pos:column="21">0</lit:literal></expr>)</condition><then pos:line="305" pos:column="23">
        <block pos:line="306" pos:column="9">{
            <throw pos:line="307" pos:column="13">throw <expr><op:operator pos:line="307" pos:column="19">new</op:operator> <call><name pos:line="307" pos:column="23">ArgumentOutOfRangeException</name><argument_list pos:line="307" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="307" pos:column="51">"index"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="307" pos:column="60">"index cannot be negative : "</lit:literal> <op:operator pos:line="307" pos:column="90">+</op:operator> <name pos:line="307" pos:column="92">index</name></expr></argument>)</argument_list></call></expr>;</throw>
        }</block></then></if>
        <return pos:line="309" pos:column="9">return <expr><name pos:line="309" pos:column="16">name</name> <op:operator pos:line="309" pos:column="21">+</op:operator> <name pos:line="309" pos:column="23">index</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>
