<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.AspNet\Tester\HttpHandlerTester.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Specialized</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Web</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">AspNet</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Framework</name></name>;</using>
<using pos:line="5" pos:column="1">using <name pos:line="5" pos:column="7">Moq</name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">Glimpse</name><op:operator pos:line="7" pos:column="18">.</op:operator><name pos:line="7" pos:column="19">Test</name><op:operator pos:line="7" pos:column="23">.</op:operator><name pos:line="7" pos:column="24">AspNet</name><op:operator pos:line="7" pos:column="30">.</op:operator><name pos:line="7" pos:column="31">Tester</name></name>
<block pos:line="8" pos:column="1">{
    <class><specifier pos:line="9" pos:column="5">public</specifier> class <name pos:line="9" pos:column="18">HttpHandlerTester</name> <super pos:line="9" pos:column="36">: <name pos:line="9" pos:column="38">HttpHandler</name></super>
    <block pos:line="10" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">public</specifier> <name><name pos:line="11" pos:column="16">Mock</name><argument_list pos:line="11" pos:column="20">&lt;<argument><name pos:line="11" pos:column="21">HttpContextBase</name></argument>&gt;</argument_list></name></type> <name pos:line="11" pos:column="38">ContextMock</name> <block pos:line="11" pos:column="50">{ <function_decl><name pos:line="11" pos:column="52">get</name>;</function_decl> <function_decl><name pos:line="11" pos:column="57">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">public</specifier> <name><name pos:line="12" pos:column="16">Mock</name><argument_list pos:line="12" pos:column="20">&lt;<argument><name pos:line="12" pos:column="21">HttpApplicationStateBase</name></argument>&gt;</argument_list></name></type> <name pos:line="12" pos:column="47">ApplicationStateMock</name> <block pos:line="12" pos:column="68">{ <function_decl><name pos:line="12" pos:column="70">get</name>;</function_decl> <function_decl><name pos:line="12" pos:column="75">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">public</specifier> <name><name pos:line="13" pos:column="16">Mock</name><argument_list pos:line="13" pos:column="20">&lt;<argument><name pos:line="13" pos:column="21">IGlimpseRuntime</name></argument>&gt;</argument_list></name></type> <name pos:line="13" pos:column="38">RuntimeMock</name> <block pos:line="13" pos:column="50">{ <function_decl><name pos:line="13" pos:column="52">get</name>;</function_decl> <function_decl><name pos:line="13" pos:column="57">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">public</specifier> <name pos:line="14" pos:column="16">NameValueCollection</name></type> <name pos:line="14" pos:column="36">QueryString</name> <block pos:line="14" pos:column="48">{ <function_decl><name pos:line="14" pos:column="50">get</name>;</function_decl> <function_decl><name pos:line="14" pos:column="55">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">public</specifier> <name pos:line="15" pos:column="16">string</name></type> <name pos:line="15" pos:column="23">ResourceName</name> <block pos:line="15" pos:column="36">{ <function_decl><name pos:line="15" pos:column="38">get</name>;</function_decl> <function_decl><name pos:line="15" pos:column="43">set</name>;</function_decl> }</block></decl></decl_stmt>

        <constructor><specifier pos:line="17" pos:column="9">private</specifier> <name pos:line="17" pos:column="17">HttpHandlerTester</name><parameter_list pos:line="17" pos:column="34">()</parameter_list>
        <block pos:line="18" pos:column="9">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">ResourceName</name> <op:operator pos:line="19" pos:column="26">=</op:operator> <lit:literal type="string" pos:line="19" pos:column="28">"Test"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="20" pos:column="13">QueryString</name> <op:operator pos:line="20" pos:column="25">=</op:operator> <op:operator pos:line="20" pos:column="27">new</op:operator> <name pos:line="20" pos:column="31">NameValueCollection</name> <block pos:line="20" pos:column="51">{<expr><block pos:line="20" pos:column="52">{<expr><lit:literal type="string" pos:line="20" pos:column="53">"n"</lit:literal></expr><op:operator pos:line="20" pos:column="56">,</op:operator> <expr><name pos:line="20" pos:column="58">ResourceName</name></expr>}</block></expr><op:operator pos:line="20" pos:column="71">,</op:operator> <expr><block pos:line="20" pos:column="73">{<expr><lit:literal type="string" pos:line="20" pos:column="74">"One"</lit:literal></expr><op:operator pos:line="20" pos:column="79">,</op:operator> <expr><lit:literal type="string" pos:line="20" pos:column="81">"1"</lit:literal></expr>}</block></expr>}</block></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="22" pos:column="13">RuntimeMock</name> <op:operator pos:line="22" pos:column="25">=</op:operator> <op:operator pos:line="22" pos:column="27">new</op:operator> <call><name><name pos:line="22" pos:column="31">Mock</name><argument_list pos:line="22" pos:column="35">&lt;<argument><name pos:line="22" pos:column="36">IGlimpseRuntime</name></argument>&gt;</argument_list></name><argument_list pos:line="22" pos:column="52">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="24" pos:column="13">ApplicationStateMock</name> <op:operator pos:line="24" pos:column="34">=</op:operator> <op:operator pos:line="24" pos:column="36">new</op:operator> <call><name><name pos:line="24" pos:column="40">Mock</name><argument_list pos:line="24" pos:column="44">&lt;<argument><name pos:line="24" pos:column="45">HttpApplicationStateBase</name></argument>&gt;</argument_list></name><argument_list pos:line="24" pos:column="70">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">ApplicationStateMock</name><op:operator pos:line="25" pos:column="33">.</op:operator><name pos:line="25" pos:column="34">Setup</name></name><argument_list pos:line="25" pos:column="39">(<argument><expr><lambda><name pos:line="25" pos:column="40">a</name> <op:operator pos:line="25" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="25" pos:column="45">a</name><op:operator pos:line="25" pos:column="46">.</op:operator><name pos:line="25" pos:column="47">Get</name></name><argument_list pos:line="25" pos:column="50">(<argument><expr><name><name pos:line="25" pos:column="51">Constants</name><op:operator pos:line="25" pos:column="60">.</op:operator><name pos:line="25" pos:column="61">RuntimeKey</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="25" pos:column="73">.</op:operator><call><name pos:line="25" pos:column="74">Returns</name><argument_list pos:line="25" pos:column="81">(<argument><expr><name><name pos:line="25" pos:column="82">RuntimeMock</name><op:operator pos:line="25" pos:column="93">.</op:operator><name pos:line="25" pos:column="94">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="27" pos:column="13">ContextMock</name> <op:operator pos:line="27" pos:column="25">=</op:operator> <op:operator pos:line="27" pos:column="27">new</op:operator> <call><name><name pos:line="27" pos:column="31">Mock</name><argument_list pos:line="27" pos:column="35">&lt;<argument><name pos:line="27" pos:column="36">HttpContextBase</name></argument>&gt;</argument_list></name><argument_list pos:line="27" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">ContextMock</name><op:operator pos:line="28" pos:column="24">.</op:operator><name pos:line="28" pos:column="25">Setup</name></name><argument_list pos:line="28" pos:column="30">(<argument><expr><lambda><name pos:line="28" pos:column="31">c</name> <op:operator pos:line="28" pos:column="33">=&gt;</op:operator> <name><name pos:line="28" pos:column="36">c</name><op:operator pos:line="28" pos:column="37">.</op:operator><name pos:line="28" pos:column="38">Application</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="28" pos:column="50">.</op:operator><call><name pos:line="28" pos:column="51">Returns</name><argument_list pos:line="28" pos:column="58">(<argument><expr><name><name pos:line="28" pos:column="59">ApplicationStateMock</name><op:operator pos:line="28" pos:column="79">.</op:operator><name pos:line="28" pos:column="80">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="29" pos:column="13">ContextMock</name><op:operator pos:line="29" pos:column="24">.</op:operator><name pos:line="29" pos:column="25">Setup</name></name><argument_list pos:line="29" pos:column="30">(<argument><expr><lambda><name pos:line="29" pos:column="31">c</name> <op:operator pos:line="29" pos:column="33">=&gt;</op:operator> <name><name pos:line="29" pos:column="36">c</name><op:operator pos:line="29" pos:column="37">.</op:operator><name pos:line="29" pos:column="38">Request</name><op:operator pos:line="29" pos:column="45">.</op:operator><name pos:line="29" pos:column="46">QueryString</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="29" pos:column="58">.</op:operator><call><name pos:line="29" pos:column="59">Returns</name><argument_list pos:line="29" pos:column="66">(<argument><expr><name pos:line="29" pos:column="67">QueryString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="32" pos:column="9">public</specifier> <specifier pos:line="32" pos:column="16">static</specifier> <name pos:line="32" pos:column="23">HttpHandlerTester</name></type> <name pos:line="32" pos:column="41">Create</name><parameter_list pos:line="32" pos:column="47">()</parameter_list>
        <block pos:line="33" pos:column="9">{
            <return pos:line="34" pos:column="13">return <expr><op:operator pos:line="34" pos:column="20">new</op:operator> <call><name pos:line="34" pos:column="24">HttpHandlerTester</name><argument_list pos:line="34" pos:column="41">()</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
