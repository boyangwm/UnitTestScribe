<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc\AlternateType\ViewEngine.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Reflection</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name><op:operator pos:line="4" pos:column="17">.</op:operator><name pos:line="4" pos:column="18">Mvc</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Message</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Mvc</name><op:operator pos:line="7" pos:column="18">.</op:operator><name pos:line="7" pos:column="19">Message</name></name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Glimpse</name><op:operator pos:line="9" pos:column="18">.</op:operator><name pos:line="9" pos:column="19">Mvc</name><op:operator pos:line="9" pos:column="22">.</op:operator><name pos:line="9" pos:column="23">AlternateType</name></name>
<block pos:line="10" pos:column="1">{
    <class><specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">ViewEngine</name> <super pos:line="11" pos:column="29">: <name><name pos:line="11" pos:column="31">AlternateType</name><argument_list pos:line="11" pos:column="44">&lt;<argument><name pos:line="11" pos:column="45">IViewEngine</name></argument>&gt;</argument_list></name></super>
    <block pos:line="12" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">private</specifier> <name><name pos:line="13" pos:column="17">List</name><argument_list pos:line="13" pos:column="21">&lt;<argument><name pos:line="13" pos:column="22">IAlternateMethod</name></argument>&gt;</argument_list></name></type> <name pos:line="13" pos:column="40">allMethods</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="15" pos:column="9">public</specifier> <name pos:line="15" pos:column="16">ViewEngine</name><parameter_list pos:line="15" pos:column="26">(<param><decl><type><name pos:line="15" pos:column="27">IProxyFactory</name></type> <name pos:line="15" pos:column="41">proxyFactory</name></decl></param>)</parameter_list> <member_list pos:line="15" pos:column="55">: <call><name pos:line="15" pos:column="57">base</name><argument_list pos:line="15" pos:column="61">(<argument><expr><name pos:line="15" pos:column="62">proxyFactory</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="16" pos:column="9">{
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">public</specifier> <specifier pos:line="19" pos:column="16">override</specifier> <name><name pos:line="19" pos:column="25">IEnumerable</name><argument_list pos:line="19" pos:column="36">&lt;<argument><name pos:line="19" pos:column="37">IAlternateMethod</name></argument>&gt;</argument_list></name></type> <name pos:line="19" pos:column="55">AllMethods</name>
        <block pos:line="20" pos:column="9">{
            <function><name pos:line="21" pos:column="13">get</name>
            <block pos:line="22" pos:column="13">{
                <if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">allMethods</name> <op:operator pos:line="23" pos:column="32">==</op:operator> <name pos:line="23" pos:column="35">null</name></expr>)</condition><then pos:line="23" pos:column="40">
                <block pos:line="24" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="25" pos:column="21">var</name></type> <name pos:line="25" pos:column="25">alternateView</name> <init pos:line="25" pos:column="39">= <expr><op:operator pos:line="25" pos:column="41">new</op:operator> <call><name pos:line="25" pos:column="45">View</name><argument_list pos:line="25" pos:column="49">(<argument><expr><name pos:line="25" pos:column="50">ProxyFactory</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><name pos:line="26" pos:column="21">allMethods</name> <op:operator pos:line="26" pos:column="32">=</op:operator> <op:operator pos:line="26" pos:column="34">new</op:operator> <name><name pos:line="26" pos:column="38">List</name><argument_list pos:line="26" pos:column="42">&lt;<argument><name pos:line="26" pos:column="43">IAlternateMethod</name></argument>&gt;</argument_list></name>
                        <block pos:line="27" pos:column="25">{
                            <expr><op:operator pos:line="28" pos:column="29">new</op:operator> <call><name pos:line="28" pos:column="33">FindViews</name><argument_list pos:line="28" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="28" pos:column="43">false</lit:literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="50">alternateView</name></expr></argument>)</argument_list></call></expr><op:operator pos:line="28" pos:column="64">,</op:operator>
                            <expr><op:operator pos:line="29" pos:column="29">new</op:operator> <call><name pos:line="29" pos:column="33">FindViews</name><argument_list pos:line="29" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="29" pos:column="43">true</lit:literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">alternateView</name></expr></argument>)</argument_list></call></expr>
                        }</block></expr>;</expr_stmt>
                }</block></then></if>

                <return pos:line="33" pos:column="17">return <expr><name pos:line="33" pos:column="24">allMethods</name></expr>;</return>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="37" pos:column="9">// This class is the alternate implementation for both .FindView() AND .FindPartialView()</comment>
        <class><specifier pos:line="38" pos:column="9">public</specifier> class <name pos:line="38" pos:column="22">FindViews</name> <super pos:line="38" pos:column="32">: <name pos:line="38" pos:column="34">AlternateMethod</name></super>
        <block pos:line="39" pos:column="9">{
            <constructor><specifier pos:line="40" pos:column="13">public</specifier> <name pos:line="40" pos:column="20">FindViews</name><parameter_list pos:line="40" pos:column="29">(<param><decl><type><name pos:line="40" pos:column="30">bool</name></type> <name pos:line="40" pos:column="35">isPartial</name></decl></param>, <param><decl><type><name><name pos:line="40" pos:column="46">AlternateType</name><argument_list pos:line="40" pos:column="59">&lt;<argument><name pos:line="40" pos:column="60">IView</name></argument>&gt;</argument_list></name></type> <name pos:line="40" pos:column="67">alternateView</name></decl></param>)</parameter_list> <member_list pos:line="40" pos:column="82">: <call><name pos:line="40" pos:column="84">base</name><argument_list pos:line="40" pos:column="88">(<argument><expr><call><name pos:line="40" pos:column="89">typeof</name><argument_list pos:line="40" pos:column="95">(<argument><expr><name pos:line="40" pos:column="96">IViewEngine</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="110">isPartial</name> <op:operator pos:line="40" pos:column="120">?</op:operator> <lit:literal type="string" pos:line="40" pos:column="122">"FindPartialView"</lit:literal> <op:operator pos:line="40" pos:column="140">:</op:operator> <lit:literal type="string" pos:line="40" pos:column="142">"FindView"</lit:literal></expr></argument>)</argument_list></call>
            </member_list><block pos:line="41" pos:column="13">{
                <expr_stmt><expr><name pos:line="42" pos:column="17">AlternateView</name> <op:operator pos:line="42" pos:column="31">=</op:operator> <name pos:line="42" pos:column="33">alternateView</name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="43" pos:column="17">IsPartial</name> <op:operator pos:line="43" pos:column="27">=</op:operator> <name pos:line="43" pos:column="29">isPartial</name></expr>;</expr_stmt>
            }</block></constructor>

            <decl_stmt><decl><type><specifier pos:line="46" pos:column="13">public</specifier> <name><name pos:line="46" pos:column="20">AlternateType</name><argument_list pos:line="46" pos:column="33">&lt;<argument><name pos:line="46" pos:column="34">IView</name></argument>&gt;</argument_list></name></type> <name pos:line="46" pos:column="41">AlternateView</name> <block pos:line="46" pos:column="55">{ <function_decl><name pos:line="46" pos:column="57">get</name>;</function_decl> <function_decl><name pos:line="46" pos:column="62">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="48" pos:column="13">public</specifier> <name pos:line="48" pos:column="20">bool</name></type> <name pos:line="48" pos:column="25">IsPartial</name> <block pos:line="48" pos:column="35">{ <function_decl><name pos:line="48" pos:column="37">get</name>;</function_decl> <function_decl><name pos:line="48" pos:column="42">set</name>;</function_decl> }</block></decl></decl_stmt>

            <function><type><specifier pos:line="50" pos:column="13">public</specifier> <specifier pos:line="50" pos:column="20">override</specifier> <name pos:line="50" pos:column="29">void</name></type> <name pos:line="50" pos:column="34">PostImplementation</name><parameter_list pos:line="50" pos:column="52">(<param><decl><type><name pos:line="50" pos:column="53">IAlternateMethodContext</name></type> <name pos:line="50" pos:column="77">context</name></decl></param>, <param><decl><type><name pos:line="50" pos:column="86">TimerResult</name></type> <name pos:line="50" pos:column="98">timerResult</name></decl></param>)</parameter_list>
            <block pos:line="51" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="52" pos:column="17">var</name></type> <name pos:line="52" pos:column="21">args</name> <init pos:line="52" pos:column="26">= <expr><op:operator pos:line="52" pos:column="28">new</op:operator> <call><name pos:line="52" pos:column="32">Arguments</name><argument_list pos:line="52" pos:column="41">(<argument><expr><name pos:line="52" pos:column="42">IsPartial</name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="53">context</name><op:operator pos:line="52" pos:column="60">.</op:operator><name pos:line="52" pos:column="61">Arguments</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="53" pos:column="17">var</name></type> <name pos:line="53" pos:column="21">id</name> <init pos:line="53" pos:column="24">= <expr><call><name><name pos:line="53" pos:column="26">Guid</name><op:operator pos:line="53" pos:column="30">.</op:operator><name pos:line="53" pos:column="31">NewGuid</name></name><argument_list pos:line="53" pos:column="38">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt><decl><type><name pos:line="55" pos:column="17">var</name></type> <name pos:line="55" pos:column="21">output</name> <init pos:line="55" pos:column="28">= <expr><name><name pos:line="55" pos:column="30">context</name><op:operator pos:line="55" pos:column="37">.</op:operator><name pos:line="55" pos:column="38">ReturnValue</name></name> <op:operator pos:line="55" pos:column="50">as</op:operator> <name pos:line="55" pos:column="53">ViewEngineResult</name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name pos:line="56" pos:column="17">output</name> <op:operator pos:line="56" pos:column="24">=</op:operator> <call><name pos:line="56" pos:column="26">ProxyOutput</name><argument_list pos:line="56" pos:column="37">(<argument><expr><name pos:line="56" pos:column="38">output</name></expr></argument>, <argument><expr><name pos:line="56" pos:column="46">context</name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="55">args</name><op:operator pos:line="56" pos:column="59">.</op:operator><name pos:line="56" pos:column="60">ViewName</name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="70">IsPartial</name></expr></argument>, <argument><expr><name pos:line="56" pos:column="81">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name pos:line="58" pos:column="17">string</name></type> <name pos:line="58" pos:column="24">displayModeId</name> <init pos:line="58" pos:column="38">= <expr><name pos:line="58" pos:column="40">null</name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="59" pos:column="17">Type</name></type> <name pos:line="59" pos:column="22">displayModeType</name> <init pos:line="59" pos:column="38">= <expr><name pos:line="59" pos:column="40">null</name></expr></init></decl>;</decl_stmt>

<cpp:if pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">if</cpp:directive> <expr><name pos:line="61" pos:column="5">MVC4</name></expr></cpp:if>
                <decl_stmt><decl><type><name pos:line="62" pos:column="17">var</name></type> <name pos:line="62" pos:column="21">displayMode</name> <init pos:line="62" pos:column="33">= <expr><name><name pos:line="62" pos:column="35">args</name><op:operator pos:line="62" pos:column="39">.</op:operator><name pos:line="62" pos:column="40">ControllerContext</name><op:operator pos:line="62" pos:column="57">.</op:operator><name pos:line="62" pos:column="58">DisplayMode</name></name></expr></init></decl>;</decl_stmt>
                <if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><name pos:line="63" pos:column="21">displayMode</name> <op:operator pos:line="63" pos:column="33">!=</op:operator> <name pos:line="63" pos:column="36">null</name></expr>)</condition><then pos:line="63" pos:column="41">
                <block pos:line="64" pos:column="17">{
                    <expr_stmt><expr><name pos:line="65" pos:column="21">displayModeId</name> <op:operator pos:line="65" pos:column="35">=</op:operator> <name><name pos:line="65" pos:column="37">displayMode</name><op:operator pos:line="65" pos:column="48">.</op:operator><name pos:line="65" pos:column="49">DisplayModeId</name></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="66" pos:column="21">displayModeType</name> <op:operator pos:line="66" pos:column="37">=</op:operator> <call><name><name pos:line="66" pos:column="39">displayMode</name><op:operator pos:line="66" pos:column="50">.</op:operator><name pos:line="66" pos:column="51">GetType</name></name><argument_list pos:line="66" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif</cpp:directive></cpp:endif>

                <decl_stmt><decl><type><name pos:line="70" pos:column="17">var</name></type> <name pos:line="70" pos:column="21">message</name> <init pos:line="70" pos:column="29">= <expr><op:operator pos:line="70" pos:column="31">new</op:operator> <call><name pos:line="70" pos:column="35">Message</name><argument_list pos:line="70" pos:column="42">(<argument><expr><name pos:line="70" pos:column="43">id</name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="47">args</name><op:operator pos:line="70" pos:column="51">.</op:operator><name pos:line="70" pos:column="52">ViewName</name></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="62">args</name><op:operator pos:line="70" pos:column="66">.</op:operator><name pos:line="70" pos:column="67">MasterName</name></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="79">args</name><op:operator pos:line="70" pos:column="83">.</op:operator><name pos:line="70" pos:column="84">UseCache</name></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="94">output</name><op:operator pos:line="70" pos:column="100">.</op:operator><name pos:line="70" pos:column="101">SearchedLocations</name></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="120">context</name><op:operator pos:line="70" pos:column="127">.</op:operator><name pos:line="70" pos:column="128">TargetType</name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="140">IsPartial</name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="151">output</name><op:operator pos:line="70" pos:column="157">.</op:operator><name pos:line="70" pos:column="158">View</name></name> <op:operator pos:line="70" pos:column="163">!=</op:operator> <name pos:line="70" pos:column="166">null</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="172">displayModeId</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="187">displayModeType</name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="71" pos:column="21">.</op:operator><call><name pos:line="71" pos:column="22">AsActionMessage</name><argument_list pos:line="71" pos:column="37">(<argument><expr><name><name pos:line="71" pos:column="38">args</name><op:operator pos:line="71" pos:column="42">.</op:operator><name pos:line="71" pos:column="43">ControllerContext</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="72" pos:column="21">.</op:operator><call><name pos:line="72" pos:column="22">AsChildActionMessage</name><argument_list pos:line="72" pos:column="42">(<argument><expr><name><name pos:line="72" pos:column="43">args</name><op:operator pos:line="72" pos:column="47">.</op:operator><name pos:line="72" pos:column="48">ControllerContext</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="73" pos:column="21">.</op:operator><call><name pos:line="73" pos:column="22">AsSourceMessage</name><argument_list pos:line="73" pos:column="37">(<argument><expr><call><name><name pos:line="73" pos:column="38">context</name><op:operator pos:line="73" pos:column="45">.</op:operator><name pos:line="73" pos:column="46">InvocationTarget</name><op:operator pos:line="73" pos:column="62">.</op:operator><name pos:line="73" pos:column="63">GetType</name></name><argument_list pos:line="73" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="74">context</name><op:operator pos:line="73" pos:column="81">.</op:operator><name pos:line="73" pos:column="82">MethodInvocationTarget</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="74" pos:column="21">.</op:operator><call><name pos:line="74" pos:column="22">AsTimedMessage</name><argument_list pos:line="74" pos:column="36">(<argument><expr><name pos:line="74" pos:column="37">timerResult</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><call><name><name pos:line="76" pos:column="17">context</name><op:operator pos:line="76" pos:column="24">.</op:operator><name pos:line="76" pos:column="25">MessageBroker</name><op:operator pos:line="76" pos:column="38">.</op:operator><name pos:line="76" pos:column="39">Publish</name></name><argument_list pos:line="76" pos:column="46">(<argument><expr><name pos:line="76" pos:column="47">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  
            }</block></function>

            <function><type><specifier pos:line="79" pos:column="13">private</specifier> <name pos:line="79" pos:column="21">ViewEngineResult</name></type> <name pos:line="79" pos:column="38">ProxyOutput</name><parameter_list pos:line="79" pos:column="49">(<param><decl><type><name pos:line="79" pos:column="50">ViewEngineResult</name></type> <name pos:line="79" pos:column="67">viewEngineResult</name></decl></param>, <param><decl><type><name pos:line="79" pos:column="85">IAlternateMethodContext</name></type> <name pos:line="79" pos:column="109">context</name></decl></param>, <param><decl><type><name pos:line="79" pos:column="118">string</name></type> <name pos:line="79" pos:column="125">viewName</name></decl></param>, <param><decl><type><name pos:line="79" pos:column="135">bool</name></type> <name pos:line="79" pos:column="140">isPartial</name></decl></param>, <param><decl><type><name pos:line="79" pos:column="151">Guid</name></type> <name pos:line="79" pos:column="156">id</name></decl></param>)</parameter_list>
            <block pos:line="80" pos:column="13">{
                <if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><name><name pos:line="81" pos:column="21">viewEngineResult</name><op:operator pos:line="81" pos:column="37">.</op:operator><name pos:line="81" pos:column="38">View</name></name> <op:operator pos:line="81" pos:column="43">!=</op:operator> <name pos:line="81" pos:column="46">null</name></expr>)</condition><then pos:line="81" pos:column="51">
                <block pos:line="82" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="83" pos:column="21">var</name></type> <name pos:line="83" pos:column="25">originalView</name> <init pos:line="83" pos:column="38">= <expr><name><name pos:line="83" pos:column="40">viewEngineResult</name><op:operator pos:line="83" pos:column="56">.</op:operator><name pos:line="83" pos:column="57">View</name></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt><decl><type><name pos:line="85" pos:column="21">IView</name></type> <name pos:line="85" pos:column="27">newView</name></decl>;</decl_stmt>
                    <if pos:line="86" pos:column="21">if <condition pos:line="86" pos:column="24">(<expr><call><name><name pos:line="86" pos:column="25">AlternateView</name><op:operator pos:line="86" pos:column="38">.</op:operator><name pos:line="86" pos:column="39">TryCreate</name></name><argument_list pos:line="86" pos:column="48">(<argument><expr><name pos:line="86" pos:column="49">originalView</name></expr></argument>, <argument><expr pos:line="86" pos:column="63">out <name pos:line="86" pos:column="67">newView</name></expr></argument>, <argument><expr><op:operator pos:line="86" pos:column="76">new</op:operator><index pos:line="86" pos:column="79">[]</index></expr></argument></argument_list></call></expr></condition><then pos:line="86" pos:column="81"> <block pos:line="86" pos:column="82">{ <expr_stmt><expr><op:operator pos:line="86" pos:column="84">new</op:operator> <call><name pos:line="86" pos:column="88">ViewCorrelationMixin</name><argument_list pos:line="86" pos:column="108">(<argument><expr><name pos:line="86" pos:column="109">viewName</name></expr></argument>, <argument><expr><name pos:line="86" pos:column="119">isPartial</name></expr></argument>, <argument><expr><name pos:line="86" pos:column="130">id</name></expr></argument>)</argument_list></call></expr></expr_stmt> }</block></then></if>)</block></then></if>)</block>
                    <block pos:line="87" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="88" pos:column="25">context</name><op:operator pos:line="88" pos:column="32">.</op:operator><name pos:line="88" pos:column="33">Logger</name><op:operator pos:line="88" pos:column="39">.</op:operator><name pos:line="88" pos:column="40">Info</name></name><argument_list pos:line="88" pos:column="44">(<argument><expr><name><name pos:line="88" pos:column="45">Resources</name><op:operator pos:line="88" pos:column="54">.</op:operator><name pos:line="88" pos:column="55">FindViewsProxyOutputReplacedIView</name></name></expr></argument>, <argument><expr><call><name><name pos:line="88" pos:column="90">originalView</name><op:operator pos:line="88" pos:column="102">.</op:operator><name pos:line="88" pos:column="103">GetType</name></name><argument_list pos:line="88" pos:column="110">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="88" pos:column="114">viewName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <decl_stmt><decl><type><name pos:line="90" pos:column="25">var</name></type> <name pos:line="90" pos:column="29">result</name> <init pos:line="90" pos:column="36">= <expr><op:operator pos:line="90" pos:column="38">new</op:operator> <call><name pos:line="90" pos:column="42">ViewEngineResult</name><argument_list pos:line="90" pos:column="58">(<argument><expr><name pos:line="90" pos:column="59">newView</name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="68">viewEngineResult</name><op:operator pos:line="90" pos:column="84">.</op:operator><name pos:line="90" pos:column="85">ViewEngine</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><name><name pos:line="91" pos:column="25">context</name><op:operator pos:line="91" pos:column="32">.</op:operator><name pos:line="91" pos:column="33">ReturnValue</name></name> <op:operator pos:line="91" pos:column="45">=</op:operator> <name pos:line="91" pos:column="47">result</name></expr>;</expr_stmt>
                        <return pos:line="92" pos:column="25">return <expr><name pos:line="92" pos:column="32">result</name></expr>;</return>
                    }</block></function>
                }</block></class>

                <return pos:line="96" pos:column="17">return <expr><name pos:line="96" pos:column="24">viewEngineResult</name></expr>;</return>
            }</block></class>

            <class><specifier pos:line="99" pos:column="13">public</specifier> class <name pos:line="99" pos:column="26">Arguments</name>
            <block pos:line="100" pos:column="13">{
                <constructor><specifier pos:line="101" pos:column="17">public</specifier> <name pos:line="101" pos:column="24">Arguments</name><parameter_list pos:line="101" pos:column="33">(<param><decl><type><name pos:line="101" pos:column="34">bool</name></type> <name pos:line="101" pos:column="39">isPartial</name></decl></param>, <param><decl><type><specifier pos:line="101" pos:column="50">params</specifier> <name><name pos:line="101" pos:column="57">object</name><index pos:line="101" pos:column="63">[]</index></name></type> <name pos:line="101" pos:column="66">arguments</name></decl></param>)</parameter_list>
                <block pos:line="102" pos:column="17">{
                    <expr_stmt><expr><name pos:line="103" pos:column="21">ControllerContext</name> <op:operator pos:line="103" pos:column="39">=</op:operator> <op:operator pos:line="103" pos:column="41">(</op:operator><name pos:line="103" pos:column="42">ControllerContext</name><op:operator pos:line="103" pos:column="59">)</op:operator><name><name pos:line="103" pos:column="60">arguments</name><index pos:line="103" pos:column="69">[<expr><lit:literal type="number" pos:line="103" pos:column="70">0</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="104" pos:column="21">ViewName</name> <op:operator pos:line="104" pos:column="30">=</op:operator> <op:operator pos:line="104" pos:column="32">(</op:operator><name pos:line="104" pos:column="33">string</name><op:operator pos:line="104" pos:column="39">)</op:operator><name><name pos:line="104" pos:column="40">arguments</name><index pos:line="104" pos:column="49">[<expr><lit:literal type="number" pos:line="104" pos:column="50">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="105" pos:column="21">UseCache</name> <op:operator pos:line="105" pos:column="30">=</op:operator> <name pos:line="105" pos:column="32">isPartial</name> <op:operator pos:line="105" pos:column="42">?</op:operator> <op:operator pos:line="105" pos:column="44">(</op:operator><name pos:line="105" pos:column="45">bool</name><op:operator pos:line="105" pos:column="49">)</op:operator><name><name pos:line="105" pos:column="50">arguments</name><index pos:line="105" pos:column="59">[<expr><lit:literal type="number" pos:line="105" pos:column="60">2</lit:literal></expr>]</index></name> <op:operator pos:line="105" pos:column="63">:</op:operator> <op:operator pos:line="105" pos:column="65">(</op:operator><name pos:line="105" pos:column="66">bool</name><op:operator pos:line="105" pos:column="70">)</op:operator><name><name pos:line="105" pos:column="71">arguments</name><index pos:line="105" pos:column="80">[<expr><lit:literal type="number" pos:line="105" pos:column="81">3</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="106" pos:column="21">MasterName</name> <op:operator pos:line="106" pos:column="32">=</op:operator> <name pos:line="106" pos:column="34">isPartial</name> <op:operator pos:line="106" pos:column="44">?</op:operator> <name><name pos:line="106" pos:column="46">string</name><op:operator pos:line="106" pos:column="52">.</op:operator><name pos:line="106" pos:column="53">Empty</name></name> <op:operator pos:line="106" pos:column="59">:</op:operator> <op:operator pos:line="106" pos:column="61">(</op:operator><name pos:line="106" pos:column="62">string</name><op:operator pos:line="106" pos:column="68">)</op:operator><name><name pos:line="106" pos:column="69">arguments</name><index pos:line="106" pos:column="78">[<expr><lit:literal type="number" pos:line="106" pos:column="79">2</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                }</block></constructor>

                <decl_stmt><decl><type><specifier pos:line="109" pos:column="17">public</specifier> <name pos:line="109" pos:column="24">ControllerContext</name></type> <name pos:line="109" pos:column="42">ControllerContext</name> <block pos:line="109" pos:column="60">{ <function_decl><name pos:line="109" pos:column="62">get</name>;</function_decl> <function_decl><name pos:line="109" pos:column="67">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="111" pos:column="17">public</specifier> <name pos:line="111" pos:column="24">string</name></type> <name pos:line="111" pos:column="31">ViewName</name> <block pos:line="111" pos:column="40">{ <function_decl><name pos:line="111" pos:column="42">get</name>;</function_decl> <function_decl><name pos:line="111" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="113" pos:column="17">public</specifier> <name pos:line="113" pos:column="24">string</name></type> <name pos:line="113" pos:column="31">MasterName</name> <block pos:line="113" pos:column="42">{ <function_decl><name pos:line="113" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="113" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="115" pos:column="17">public</specifier> <name pos:line="115" pos:column="24">bool</name></type> <name pos:line="115" pos:column="29">UseCache</name> <block pos:line="115" pos:column="38">{ <function_decl><name pos:line="115" pos:column="40">get</name>;</function_decl> <function_decl><name pos:line="115" pos:column="45">set</name>;</function_decl> }</block></decl></decl_stmt>
            }</block></class>

            <class><specifier pos:line="118" pos:column="13">public</specifier> class <name pos:line="118" pos:column="26">Message</name> <super pos:line="118" pos:column="34">: <name pos:line="118" pos:column="36">ISourceMessage</name>, <name pos:line="118" pos:column="52">IChildActionMessage</name>, <name pos:line="118" pos:column="73">ITimedMessage</name></super>
            <block pos:line="119" pos:column="13">{
                <constructor><specifier pos:line="120" pos:column="17">public</specifier> <name pos:line="120" pos:column="24">Message</name><parameter_list pos:line="120" pos:column="31">(<param><decl><type><name pos:line="120" pos:column="32">Guid</name></type> <name pos:line="120" pos:column="37">id</name></decl></param>, <param><decl><type><name pos:line="120" pos:column="41">string</name></type> <name pos:line="120" pos:column="48">viewName</name></decl></param>, <param><decl><type><name pos:line="120" pos:column="58">string</name></type> <name pos:line="120" pos:column="65">masterName</name></decl></param>, <param><decl><type><name pos:line="120" pos:column="77">bool</name></type> <name pos:line="120" pos:column="82">useCache</name></decl></param>, <param><decl><type><name><name pos:line="120" pos:column="92">IEnumerable</name><argument_list pos:line="120" pos:column="103">&lt;<argument><name pos:line="120" pos:column="104">string</name></argument>&gt;</argument_list></name></type> <name pos:line="120" pos:column="112">searchedLocations</name></decl></param>, <param><decl><type><name pos:line="120" pos:column="131">Type</name></type> <name pos:line="120" pos:column="136">baseType</name></decl></param>, <param><decl><type><name pos:line="120" pos:column="146">bool</name></type> <name pos:line="120" pos:column="151">isPartial</name></decl></param>, <param><decl><type><name pos:line="120" pos:column="162">bool</name></type> <name pos:line="120" pos:column="167">isFound</name></decl></param>, <param><decl><type><name pos:line="120" pos:column="176">string</name></type> <name pos:line="120" pos:column="183">displayModeId</name></decl></param>, <param><decl><type><name pos:line="120" pos:column="198">Type</name></type> <name pos:line="120" pos:column="203">displayModeType</name></decl></param>)</parameter_list>
                <block pos:line="121" pos:column="17">{
                    <expr_stmt><expr><name pos:line="122" pos:column="21">Id</name> <op:operator pos:line="122" pos:column="24">=</op:operator> <name pos:line="122" pos:column="26">id</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="123" pos:column="21">ViewName</name> <op:operator pos:line="123" pos:column="30">=</op:operator> <name pos:line="123" pos:column="32">viewName</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="124" pos:column="21">MasterName</name> <op:operator pos:line="124" pos:column="32">=</op:operator> <name pos:line="124" pos:column="34">masterName</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="125" pos:column="21">UseCache</name> <op:operator pos:line="125" pos:column="30">=</op:operator> <name pos:line="125" pos:column="32">useCache</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="126" pos:column="21">SearchedLocations</name> <op:operator pos:line="126" pos:column="39">=</op:operator> <name pos:line="126" pos:column="41">searchedLocations</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="127" pos:column="21">BaseType</name> <op:operator pos:line="127" pos:column="30">=</op:operator> <name pos:line="127" pos:column="32">baseType</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="128" pos:column="21">IsPartial</name> <op:operator pos:line="128" pos:column="31">=</op:operator> <name pos:line="128" pos:column="33">isPartial</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="129" pos:column="21">IsFound</name> <op:operator pos:line="129" pos:column="29">=</op:operator> <name pos:line="129" pos:column="31">isFound</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="130" pos:column="21">DisplayModeId</name> <op:operator pos:line="130" pos:column="35">=</op:operator> <name pos:line="130" pos:column="37">displayModeId</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="131" pos:column="21">DisplayModeType</name> <op:operator pos:line="131" pos:column="37">=</op:operator> <name pos:line="131" pos:column="39">displayModeType</name></expr>;</expr_stmt>
                }</block></constructor>

                <decl_stmt><decl><type><specifier pos:line="134" pos:column="17">public</specifier> <name pos:line="134" pos:column="24">Guid</name></type> <name pos:line="134" pos:column="29">Id</name> <block pos:line="134" pos:column="32">{ <function_decl><name pos:line="134" pos:column="34">get</name>;</function_decl> <function_decl><specifier pos:line="134" pos:column="39">private</specifier> <name pos:line="134" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="136" pos:column="17">public</specifier> <name pos:line="136" pos:column="24">string</name></type> <name pos:line="136" pos:column="31">ControllerName</name> <block pos:line="136" pos:column="46">{ <function_decl><name pos:line="136" pos:column="48">get</name>;</function_decl> <function_decl><name pos:line="136" pos:column="53">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="138" pos:column="17">public</specifier> <name pos:line="138" pos:column="24">string</name></type> <name pos:line="138" pos:column="31">ActionName</name> <block pos:line="138" pos:column="42">{ <function_decl><name pos:line="138" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="138" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="140" pos:column="17">public</specifier> <name pos:line="140" pos:column="24">bool</name></type> <name pos:line="140" pos:column="29">IsChildAction</name> <block pos:line="140" pos:column="43">{ <function_decl><name pos:line="140" pos:column="45">get</name>;</function_decl> <function_decl><name pos:line="140" pos:column="50">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="142" pos:column="17">public</specifier> <name pos:line="142" pos:column="24">TimeSpan</name></type> <name pos:line="142" pos:column="33">Offset</name> <block pos:line="142" pos:column="40">{ <function_decl><name pos:line="142" pos:column="42">get</name>;</function_decl> <function_decl><name pos:line="142" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="144" pos:column="17">public</specifier> <name pos:line="144" pos:column="24">TimeSpan</name></type> <name pos:line="144" pos:column="33">Duration</name> <block pos:line="144" pos:column="42">{ <function_decl><name pos:line="144" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="144" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="146" pos:column="17">public</specifier> <name pos:line="146" pos:column="24">DateTime</name></type> <name pos:line="146" pos:column="33">StartTime</name> <block pos:line="146" pos:column="43">{ <function_decl><name pos:line="146" pos:column="45">get</name>;</function_decl> <function_decl><name pos:line="146" pos:column="50">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="148" pos:column="17">public</specifier> <name pos:line="148" pos:column="24">string</name></type> <name pos:line="148" pos:column="31">EventName</name> <block pos:line="148" pos:column="41">{ <function_decl><name pos:line="148" pos:column="43">get</name>;</function_decl> <function_decl><name pos:line="148" pos:column="48">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="150" pos:column="17">public</specifier> <name pos:line="150" pos:column="24">string</name></type> <name pos:line="150" pos:column="31">DisplayModeId</name> <block pos:line="150" pos:column="45">{ <function_decl><name pos:line="150" pos:column="47">get</name>;</function_decl> <function_decl><name pos:line="150" pos:column="52">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="152" pos:column="17">public</specifier> <name pos:line="152" pos:column="24">Type</name></type> <name pos:line="152" pos:column="29">DisplayModeType</name> <block pos:line="152" pos:column="45">{ <function_decl><name pos:line="152" pos:column="47">get</name>;</function_decl> <function_decl><name pos:line="152" pos:column="52">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="154" pos:column="17">public</specifier> <name pos:line="154" pos:column="24">TimelineCategoryItem</name></type> <name pos:line="154" pos:column="45">EventCategory</name> <block pos:line="154" pos:column="59">{ <function_decl><name pos:line="154" pos:column="61">get</name>;</function_decl> <function_decl><name pos:line="154" pos:column="66">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="156" pos:column="17">public</specifier> <name pos:line="156" pos:column="24">string</name></type> <name pos:line="156" pos:column="31">EventSubText</name> <block pos:line="156" pos:column="44">{ <function_decl><name pos:line="156" pos:column="46">get</name>;</function_decl> <function_decl><name pos:line="156" pos:column="51">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="158" pos:column="17">public</specifier> <name pos:line="158" pos:column="24">string</name></type> <name pos:line="158" pos:column="31">ViewName</name> <block pos:line="158" pos:column="40">{ <function_decl><name pos:line="158" pos:column="42">get</name>;</function_decl> <function_decl><specifier pos:line="158" pos:column="47">protected</specifier> <name pos:line="158" pos:column="57">set</name>;</function_decl> }</block></decl></decl_stmt> 
                
                <decl_stmt><decl><type><specifier pos:line="160" pos:column="17">public</specifier> <name pos:line="160" pos:column="24">string</name></type> <name pos:line="160" pos:column="31">MasterName</name> <block pos:line="160" pos:column="42">{ <function_decl><name pos:line="160" pos:column="44">get</name>;</function_decl> <function_decl><specifier pos:line="160" pos:column="49">protected</specifier> <name pos:line="160" pos:column="59">set</name>;</function_decl> }</block></decl></decl_stmt> 
                
                <decl_stmt><decl><type><specifier pos:line="162" pos:column="17">public</specifier> <name pos:line="162" pos:column="24">bool</name></type> <name pos:line="162" pos:column="29">UseCache</name> <block pos:line="162" pos:column="38">{ <function_decl><name pos:line="162" pos:column="40">get</name>;</function_decl> <function_decl><specifier pos:line="162" pos:column="45">protected</specifier> <name pos:line="162" pos:column="55">set</name>;</function_decl> }</block></decl></decl_stmt> 
                
                <decl_stmt><decl><type><specifier pos:line="164" pos:column="17">public</specifier> <name><name pos:line="164" pos:column="24">IEnumerable</name><argument_list pos:line="164" pos:column="35">&lt;<argument><name pos:line="164" pos:column="36">string</name></argument>&gt;</argument_list></name></type> <name pos:line="164" pos:column="44">SearchedLocations</name> <block pos:line="164" pos:column="62">{ <function_decl><name pos:line="164" pos:column="64">get</name>;</function_decl> <function_decl><specifier pos:line="164" pos:column="69">protected</specifier> <name pos:line="164" pos:column="79">set</name>;</function_decl> }</block></decl></decl_stmt> 
                
                <decl_stmt><decl><type><specifier pos:line="166" pos:column="17">public</specifier> <name pos:line="166" pos:column="24">Type</name></type> <name pos:line="166" pos:column="29">BaseType</name> <block pos:line="166" pos:column="38">{ <function_decl><name pos:line="166" pos:column="40">get</name>;</function_decl> <function_decl><specifier pos:line="166" pos:column="45">protected</specifier> <name pos:line="166" pos:column="55">set</name>;</function_decl> }</block></decl></decl_stmt> 
                
                <decl_stmt><decl><type><specifier pos:line="168" pos:column="17">public</specifier> <name pos:line="168" pos:column="24">bool</name></type> <name pos:line="168" pos:column="29">IsPartial</name> <block pos:line="168" pos:column="39">{ <function_decl><name pos:line="168" pos:column="41">get</name>;</function_decl> <function_decl><specifier pos:line="168" pos:column="46">protected</specifier> <name pos:line="168" pos:column="56">set</name>;</function_decl> }</block></decl></decl_stmt> 
                
                <decl_stmt><decl><type><specifier pos:line="170" pos:column="17">public</specifier> <name pos:line="170" pos:column="24">bool</name></type> <name pos:line="170" pos:column="29">IsFound</name> <block pos:line="170" pos:column="37">{ <function_decl><name pos:line="170" pos:column="39">get</name>;</function_decl> <function_decl><specifier pos:line="170" pos:column="44">protected</specifier> <name pos:line="170" pos:column="54">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="172" pos:column="17">public</specifier> <name pos:line="172" pos:column="24">Type</name></type> <name pos:line="172" pos:column="29">ExecutedType</name> <block pos:line="172" pos:column="42">{ <function_decl><name pos:line="172" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="172" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="174" pos:column="17">public</specifier> <name pos:line="174" pos:column="24">MethodInfo</name></type> <name pos:line="174" pos:column="35">ExecutedMethod</name> <block pos:line="174" pos:column="50">{ <function_decl><name pos:line="174" pos:column="52">get</name>;</function_decl> <function_decl><name pos:line="174" pos:column="57">set</name>;</function_decl> }</block></decl></decl_stmt>
            }</block></class>
        }</block></namespace>
    }
}</unit>
