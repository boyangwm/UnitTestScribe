<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Extensions\NameValueCollectionExtension.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Specialized</name></name>;</using>

<namespace pos:line="4" pos:column="1">namespace <name><name pos:line="4" pos:column="11">Glimpse</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">Core</name><op:operator pos:line="4" pos:column="23">.</op:operator><name pos:line="4" pos:column="24">Extensions</name></name>
<block pos:line="5" pos:column="1">{
    <comment type="line" pos:line="6" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="7" pos:column="5">/// Extension methods to simplify common tasks completed with &lt;see cref="NameValueCollection"/&gt;.</comment>
    <comment type="line" pos:line="8" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="9" pos:column="5">public</specifier> <specifier pos:line="9" pos:column="12">static</specifier> class <name pos:line="9" pos:column="25">NameValueCollectionExtension</name>
    <block pos:line="10" pos:column="5">{
        <comment type="line" pos:line="11" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="12" pos:column="9">/// Converts a &lt;see cref="NameValueCollection"/&gt; to a &lt;c&gt;IDictionary&amp;lt;string, string&amp;gt;&lt;/c&gt;.</comment>
        <comment type="line" pos:line="13" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="14" pos:column="9">/// &lt;param name="input"&gt;The &lt;see cref="NameValueCollection"/&gt; to convert.&lt;/param&gt;</comment>
        <comment type="line" pos:line="15" pos:column="9">/// &lt;returns&gt;</comment>
        <comment type="line" pos:line="16" pos:column="9">/// A &lt;c&gt;IDictionary&amp;lt;string, string&amp;gt;&lt;/c&gt; containing the same key/value pairs as &lt;paramref name="input"/&gt;.</comment>
        <comment type="line" pos:line="17" pos:column="9">/// &lt;/returns&gt;</comment>
        <function><type><specifier pos:line="18" pos:column="9">public</specifier> <specifier pos:line="18" pos:column="16">static</specifier> <name><name pos:line="18" pos:column="23">IDictionary</name><argument_list pos:line="18" pos:column="34">&lt;<argument><name pos:line="18" pos:column="35">string</name></argument>, <argument><name pos:line="18" pos:column="43">string</name></argument>&gt;</argument_list></name></type> <name pos:line="18" pos:column="51">ToDictionary</name><parameter_list pos:line="18" pos:column="63">(<param><decl><type><name pos:line="18" pos:column="64">this</name> <name pos:line="18" pos:column="69">NameValueCollection</name></type> <name pos:line="18" pos:column="89">input</name></decl></param>)</parameter_list>
        <block pos:line="19" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="20" pos:column="13">var</name></type> <name pos:line="20" pos:column="17">result</name> <init pos:line="20" pos:column="24">= <expr><op:operator pos:line="20" pos:column="26">new</op:operator> <call><name><name pos:line="20" pos:column="30">Dictionary</name><argument_list pos:line="20" pos:column="40">&lt;<argument><name pos:line="20" pos:column="41">string</name></argument>, <argument><name pos:line="20" pos:column="49">string</name></argument>&gt;</argument_list></name><argument_list pos:line="20" pos:column="56">(<argument><expr><name><name pos:line="20" pos:column="57">input</name><op:operator pos:line="20" pos:column="62">.</op:operator><name pos:line="20" pos:column="63">Count</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="21" pos:column="13">foreach (<init><decl><type><name pos:line="21" pos:column="22">var</name></type> <name pos:line="21" pos:column="26">key</name> <range pos:line="21" pos:column="30">in <expr><name><name pos:line="21" pos:column="33">input</name><op:operator pos:line="21" pos:column="38">.</op:operator><name pos:line="21" pos:column="39">Keys</name></name></expr></range></decl></init>)
            <block pos:line="22" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="23" pos:column="17">var</name></type> <name pos:line="23" pos:column="21">typedKey</name> <init pos:line="23" pos:column="30">= <expr><call><name><name pos:line="23" pos:column="32">key</name><op:operator pos:line="23" pos:column="35">.</op:operator><name pos:line="23" pos:column="36">ToString</name></name><argument_list pos:line="23" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="24" pos:column="17">result</name><op:operator pos:line="24" pos:column="23">.</op:operator><name pos:line="24" pos:column="24">Add</name></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">typedKey</name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="38">input</name><index pos:line="24" pos:column="43">[<expr><name pos:line="24" pos:column="44">typedKey</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

            <return pos:line="27" pos:column="13">return <expr><name pos:line="27" pos:column="20">result</name></expr>;</return>
        }</block></function> 
    }</block></class>
}</block></namespace>
</unit>
