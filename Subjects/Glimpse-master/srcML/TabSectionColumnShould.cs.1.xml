<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Core\Plugin\Assist\TabSectionColumnShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">Glimpse</name><op:operator pos:line="1" pos:column="14">.</op:operator><name pos:line="1" pos:column="15">Core</name><op:operator pos:line="1" pos:column="19">.</op:operator><name pos:line="1" pos:column="20">Tab</name><op:operator pos:line="1" pos:column="23">.</op:operator><name pos:line="1" pos:column="24">Assist</name></name>;</using>
<using pos:line="2" pos:column="1">using <name pos:line="2" pos:column="7">Xunit</name>;</using>

<namespace pos:line="4" pos:column="1">namespace <name><name pos:line="4" pos:column="11">Glimpse</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">Test</name><op:operator pos:line="4" pos:column="23">.</op:operator><name pos:line="4" pos:column="24">Core</name><op:operator pos:line="4" pos:column="28">.</op:operator><name pos:line="4" pos:column="29">Plugin</name><op:operator pos:line="4" pos:column="35">.</op:operator><name pos:line="4" pos:column="36">Assist</name></name>
<block pos:line="5" pos:column="1">{
    <class><specifier pos:line="6" pos:column="5">public</specifier> class <name pos:line="6" pos:column="18">TabSectionColumnShould</name>
    <block pos:line="7" pos:column="5">{
        <function><type><attribute pos:line="8" pos:column="9">[<expr><name pos:line="8" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="9" pos:column="9">public</specifier> <name pos:line="9" pos:column="16">void</name></type> <name pos:line="9" pos:column="21">ConstructWithData</name><parameter_list pos:line="9" pos:column="38">()</parameter_list>
        <block pos:line="10" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="11" pos:column="13">var</name></type> <name pos:line="11" pos:column="17">column</name> <init pos:line="11" pos:column="24">= <expr><name><name pos:line="11" pos:column="26">this</name><op:operator pos:line="11" pos:column="30">.</op:operator><name pos:line="11" pos:column="31">SectionColumn</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="13" pos:column="13">Assert</name><op:operator pos:line="13" pos:column="19">.</op:operator><name pos:line="13" pos:column="20">Equal</name></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">ColumnObject</name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="40">column</name><op:operator pos:line="13" pos:column="46">.</op:operator><name pos:line="13" pos:column="47">Data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="16" pos:column="9">[<expr><name pos:line="16" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="17" pos:column="9">public</specifier> <name pos:line="17" pos:column="16">void</name></type> <name pos:line="17" pos:column="21">SetData</name><parameter_list pos:line="17" pos:column="28">()</parameter_list>
        <block pos:line="18" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="19" pos:column="13">var</name></type> <name pos:line="19" pos:column="17">columnData</name> <init pos:line="19" pos:column="28">= <expr><op:operator pos:line="19" pos:column="30">new</op:operator> <block pos:line="19" pos:column="34">{ }</block></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="20" pos:column="13">var</name></type> <name pos:line="20" pos:column="17">overrideColumnData</name> <init pos:line="20" pos:column="36">= <expr><op:operator pos:line="20" pos:column="38">new</op:operator> <block pos:line="20" pos:column="42">{ }</block></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="21" pos:column="13">var</name></type> <name pos:line="21" pos:column="17">column</name> <init pos:line="21" pos:column="24">= <expr><op:operator pos:line="21" pos:column="26">new</op:operator> <call><name pos:line="21" pos:column="30">TabSectionColumn</name><argument_list pos:line="21" pos:column="46">(<argument><expr><name pos:line="21" pos:column="47">columnData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="23" pos:column="13">column</name><op:operator pos:line="23" pos:column="19">.</op:operator><name pos:line="23" pos:column="20">OverrideData</name></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">overrideColumnData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">Assert</name><op:operator pos:line="25" pos:column="19">.</op:operator><name pos:line="25" pos:column="20">Equal</name></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">overrideColumnData</name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="46">column</name><op:operator pos:line="25" pos:column="52">.</op:operator><name pos:line="25" pos:column="53">Data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="28" pos:column="9">private</specifier> <name pos:line="28" pos:column="17">object</name></type> <name pos:line="28" pos:column="24">ColumnObject</name> <block pos:line="28" pos:column="37">{ <function_decl><name pos:line="28" pos:column="39">get</name>;</function_decl> <function_decl><name pos:line="28" pos:column="44">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="29" pos:column="9">private</specifier> <name pos:line="29" pos:column="17">TabSectionColumn</name></type> <name pos:line="29" pos:column="34">SectionColumn</name> <block pos:line="29" pos:column="48">{ <function_decl><name pos:line="29" pos:column="50">get</name>;</function_decl> <function_decl><name pos:line="29" pos:column="55">set</name>;</function_decl> }</block></decl></decl_stmt>

        <constructor><specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">TabSectionColumnShould</name><parameter_list pos:line="31" pos:column="38">()</parameter_list>
        <block pos:line="32" pos:column="9">{
            <expr_stmt><expr><name pos:line="33" pos:column="13">ColumnObject</name> <op:operator pos:line="33" pos:column="26">=</op:operator> <op:operator pos:line="33" pos:column="28">new</op:operator> <block pos:line="33" pos:column="32">{ <expr><name pos:line="33" pos:column="34">SomeProperty</name> <op:operator pos:line="33" pos:column="47">=</op:operator> <lit:literal type="string" pos:line="33" pos:column="49">"SomeValue"</lit:literal></expr> }</block></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">this</name><op:operator pos:line="34" pos:column="17">.</op:operator><name pos:line="34" pos:column="18">SectionColumn</name></name> <op:operator pos:line="34" pos:column="32">=</op:operator> <op:operator pos:line="34" pos:column="34">new</op:operator> <call><name pos:line="34" pos:column="38">TabSectionColumn</name><argument_list pos:line="34" pos:column="54">(<argument><expr><name pos:line="34" pos:column="55">ColumnObject</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>
    }</block></class>
}</block></namespace>
</unit>
