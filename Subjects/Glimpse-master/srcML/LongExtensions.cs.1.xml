<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WindowsAzure.Caching\Infrastructure\LongExtensions.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>

<namespace pos:line="3" pos:column="1">namespace <name><name pos:line="3" pos:column="11">Glimpse</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">WindowsAzure</name><op:operator pos:line="3" pos:column="31">.</op:operator><name pos:line="3" pos:column="32">Caching</name><op:operator pos:line="3" pos:column="39">.</op:operator><name pos:line="3" pos:column="40">Infrastructure</name></name>
<block pos:line="4" pos:column="1">{
    <class><specifier pos:line="5" pos:column="5">public</specifier> <specifier pos:line="5" pos:column="12">static</specifier> class <name pos:line="5" pos:column="25">LongExtensions</name>
    <block pos:line="6" pos:column="5">{
        <function><type><specifier pos:line="7" pos:column="9">public</specifier> <specifier pos:line="7" pos:column="16">static</specifier> <name pos:line="7" pos:column="23">string</name></type> <name pos:line="7" pos:column="30">ToBytesHuman</name><parameter_list pos:line="7" pos:column="42">(<param><decl><type><name pos:line="7" pos:column="43">this</name> <name pos:line="7" pos:column="48">long</name></type> <name pos:line="7" pos:column="53">bytes</name></decl></param>)</parameter_list>
        <block pos:line="8" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="9" pos:column="13">const</specifier> <name pos:line="9" pos:column="19">int</name></type> <name pos:line="9" pos:column="23">scale</name> <init pos:line="9" pos:column="29">= <expr><lit:literal type="number" pos:line="9" pos:column="31">1024</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="10" pos:column="13">string</name><index pos:line="10" pos:column="19">[]</index></type> <name pos:line="10" pos:column="22">orders</name> <init pos:line="10" pos:column="29">= <expr><op:operator pos:line="10" pos:column="31">new</op:operator><index pos:line="10" pos:column="34">[]</index> <block pos:line="10" pos:column="37">{ <expr><lit:literal type="string" pos:line="10" pos:column="39">"TB"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="10" pos:column="45">"GB"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="10" pos:column="51">"MB"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="10" pos:column="57">"KB"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="10" pos:column="63">"bytes"</lit:literal></expr> }</block></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="11" pos:column="13">long</name></type> <name pos:line="11" pos:column="18">max</name> <init pos:line="11" pos:column="22">= <expr><op:operator pos:line="11" pos:column="24">(</op:operator><name pos:line="11" pos:column="25">long</name><op:operator pos:line="11" pos:column="29">)</op:operator><call><name><name pos:line="11" pos:column="30">Math</name><op:operator pos:line="11" pos:column="34">.</op:operator><name pos:line="11" pos:column="35">Pow</name></name><argument_list pos:line="11" pos:column="38">(<argument><expr><name pos:line="11" pos:column="39">scale</name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="46">orders</name><op:operator pos:line="11" pos:column="52">.</op:operator><name pos:line="11" pos:column="53">Length</name></name> <op:operator pos:line="11" pos:column="60">-</op:operator> <lit:literal type="number" pos:line="11" pos:column="62">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <foreach pos:line="13" pos:column="13">foreach (<init><decl><type><name pos:line="13" pos:column="22">string</name></type> <name pos:line="13" pos:column="29">order</name> <range pos:line="13" pos:column="35">in <expr><name pos:line="13" pos:column="38">orders</name></expr></range></decl></init>)
            <block pos:line="14" pos:column="13">{
                <if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">bytes</name> <op:operator pos:line="15" pos:column="27">&gt;=</op:operator> <name pos:line="15" pos:column="30">max</name></expr>)</condition><then pos:line="15" pos:column="34">
                <block pos:line="16" pos:column="17">{
                    <return pos:line="17" pos:column="21">return <expr><call><name><name pos:line="17" pos:column="28">string</name><op:operator pos:line="17" pos:column="34">.</op:operator><name pos:line="17" pos:column="35">Format</name></name><argument_list pos:line="17" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="17" pos:column="42">"{0:##.##} {1}"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="17" pos:column="59">decimal</name><op:operator pos:line="17" pos:column="66">.</op:operator><name pos:line="17" pos:column="67">Divide</name></name><argument_list pos:line="17" pos:column="73">(<argument><expr><name pos:line="17" pos:column="74">bytes</name></expr></argument>, <argument><expr><name pos:line="17" pos:column="81">max</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="87">order</name></expr></argument>)</argument_list></call></expr>;</return>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="20" pos:column="17">max</name> <op:operator pos:line="20" pos:column="21">/=</op:operator> <name pos:line="20" pos:column="24">scale</name></expr>;</expr_stmt>
            }</block></foreach>

            <return pos:line="23" pos:column="13">return <expr><lit:literal type="string" pos:line="23" pos:column="20">"0 bytes"</lit:literal></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
