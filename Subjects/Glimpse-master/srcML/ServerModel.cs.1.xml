<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.AspNet\Model\ServerModel.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Web</name></name>;</using>
<decl_stmt><decl><type><name pos:line="3" pos:column="1">ï»¿using</name></type> <name><name pos:line="3" pos:column="10">Glimpse</name><op:operator pos:line="3" pos:column="17">.</op:operator><name pos:line="3" pos:column="18">Core</name><op:operator pos:line="3" pos:column="22">.</op:operator><name pos:line="3" pos:column="23">Extensions</name></name></decl>;</decl_stmt>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Glimpse</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">AspNet</name><op:operator pos:line="5" pos:column="25">.</op:operator><name pos:line="5" pos:column="26">Model</name></name>
<block pos:line="6" pos:column="1">{
    <class><specifier pos:line="7" pos:column="5">public</specifier> class <name pos:line="7" pos:column="18">ServerModel</name>
    <block pos:line="8" pos:column="5">{
        <constructor><specifier pos:line="9" pos:column="9">public</specifier> <name pos:line="9" pos:column="16">ServerModel</name><parameter_list pos:line="9" pos:column="27">(<param><decl><type><name pos:line="9" pos:column="28">HttpContextBase</name></type> <name pos:line="9" pos:column="44">httpContext</name></decl></param>)</parameter_list>
        <block pos:line="10" pos:column="9">{
            <expr_stmt><expr><name pos:line="11" pos:column="13">HttpVariables</name> <op:operator pos:line="11" pos:column="27">=</op:operator> <op:operator pos:line="11" pos:column="29">new</op:operator> <call><name><name pos:line="11" pos:column="33">Dictionary</name><argument_list pos:line="11" pos:column="43">&lt;<argument><name pos:line="11" pos:column="44">string</name></argument>, <argument><name pos:line="11" pos:column="52">string</name></argument>&gt;</argument_list></name><argument_list pos:line="11" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="12" pos:column="13">GeneralVariables</name> <op:operator pos:line="12" pos:column="30">=</op:operator> <op:operator pos:line="12" pos:column="32">new</op:operator> <call><name><name pos:line="12" pos:column="36">Dictionary</name><argument_list pos:line="12" pos:column="46">&lt;<argument><name pos:line="12" pos:column="47">string</name></argument>, <argument><name pos:line="12" pos:column="55">string</name></argument>&gt;</argument_list></name><argument_list pos:line="12" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="13" pos:column="13">SecurityRelatedVariables</name> <op:operator pos:line="13" pos:column="38">=</op:operator> <op:operator pos:line="13" pos:column="40">new</op:operator> <call><name><name pos:line="13" pos:column="44">Dictionary</name><argument_list pos:line="13" pos:column="54">&lt;<argument><name pos:line="13" pos:column="55">string</name></argument>, <argument><name pos:line="13" pos:column="63">string</name></argument>&gt;</argument_list></name><argument_list pos:line="13" pos:column="70">()</argument_list></call></expr>;</expr_stmt>
            
            <foreach pos:line="15" pos:column="13">foreach (<init><decl><type><name pos:line="15" pos:column="22">var</name></type> <name pos:line="15" pos:column="26">serverVariable</name> <range pos:line="15" pos:column="41">in <expr><call><name><name pos:line="15" pos:column="44">httpContext</name><op:operator pos:line="15" pos:column="55">.</op:operator><name pos:line="15" pos:column="56">Request</name><op:operator pos:line="15" pos:column="63">.</op:operator><name pos:line="15" pos:column="64">ServerVariables</name><op:operator pos:line="15" pos:column="79">.</op:operator><name pos:line="15" pos:column="80">ToDictionary</name></name><argument_list pos:line="15" pos:column="92">()</argument_list></call></expr></range></decl></init>)
            <block pos:line="16" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="17" pos:column="17">string</name></type> <name pos:line="17" pos:column="24">lowerCasedKey</name> <init pos:line="17" pos:column="38">= <expr><call><name><name pos:line="17" pos:column="40">serverVariable</name><op:operator pos:line="17" pos:column="54">.</op:operator><name pos:line="17" pos:column="55">Key</name><op:operator pos:line="17" pos:column="58">.</op:operator><name pos:line="17" pos:column="59">ToLower</name></name><argument_list pos:line="17" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><call><name><name pos:line="19" pos:column="21">lowerCasedKey</name><op:operator pos:line="19" pos:column="34">.</op:operator><name pos:line="19" pos:column="35">StartsWith</name></name><argument_list pos:line="19" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="19" pos:column="46">"http_"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="19" pos:column="55">
                <block pos:line="20" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="21" pos:column="21">HttpVariables</name><op:operator pos:line="21" pos:column="34">.</op:operator><name pos:line="21" pos:column="35">Add</name></name><argument_list pos:line="21" pos:column="38">(<argument><expr><name><name pos:line="21" pos:column="39">serverVariable</name><op:operator pos:line="21" pos:column="53">.</op:operator><name pos:line="21" pos:column="54">Key</name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="59">serverVariable</name><op:operator pos:line="21" pos:column="73">.</op:operator><name pos:line="21" pos:column="74">Value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="23" pos:column="17">else <if pos:line="23" pos:column="22">if <condition pos:line="23" pos:column="25">(<expr><call><name><name pos:line="23" pos:column="26">lowerCasedKey</name><op:operator pos:line="23" pos:column="39">.</op:operator><name pos:line="23" pos:column="40">StartsWith</name></name><argument_list pos:line="23" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="23" pos:column="51">"cert_"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="23" pos:column="60">||</op:operator> <call><name><name pos:line="23" pos:column="63">lowerCasedKey</name><op:operator pos:line="23" pos:column="76">.</op:operator><name pos:line="23" pos:column="77">StartsWith</name></name><argument_list pos:line="23" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="23" pos:column="88">"https_"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="23" pos:column="98">
                <block pos:line="24" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="25" pos:column="21">SecurityRelatedVariables</name><op:operator pos:line="25" pos:column="45">.</op:operator><name pos:line="25" pos:column="46">Add</name></name><argument_list pos:line="25" pos:column="49">(<argument><expr><name><name pos:line="25" pos:column="50">serverVariable</name><op:operator pos:line="25" pos:column="64">.</op:operator><name pos:line="25" pos:column="65">Key</name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="70">serverVariable</name><op:operator pos:line="25" pos:column="84">.</op:operator><name pos:line="25" pos:column="85">Value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="27" pos:column="17">else
                <block pos:line="28" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="29" pos:column="21">GeneralVariables</name><op:operator pos:line="29" pos:column="37">.</op:operator><name pos:line="29" pos:column="38">Add</name></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name><name pos:line="29" pos:column="42">serverVariable</name><op:operator pos:line="29" pos:column="56">.</op:operator><name pos:line="29" pos:column="57">Key</name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="62">serverVariable</name><op:operator pos:line="29" pos:column="76">.</op:operator><name pos:line="29" pos:column="77">Value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></else></if></else></if>
            }</block></foreach>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="34" pos:column="9">public</specifier> <name><name pos:line="34" pos:column="16">IDictionary</name><argument_list pos:line="34" pos:column="27">&lt;<argument><name pos:line="34" pos:column="28">string</name></argument>, <argument><name pos:line="34" pos:column="36">string</name></argument>&gt;</argument_list></name></type> <name pos:line="34" pos:column="44">HttpVariables</name> <block pos:line="34" pos:column="58">{ <function_decl><name pos:line="34" pos:column="60">get</name>;</function_decl> <function_decl><specifier pos:line="34" pos:column="65">private</specifier> <name pos:line="34" pos:column="73">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="35" pos:column="9">public</specifier> <name><name pos:line="35" pos:column="16">IDictionary</name><argument_list pos:line="35" pos:column="27">&lt;<argument><name pos:line="35" pos:column="28">string</name></argument>, <argument><name pos:line="35" pos:column="36">string</name></argument>&gt;</argument_list></name></type> <name pos:line="35" pos:column="44">GeneralVariables</name> <block pos:line="35" pos:column="61">{ <function_decl><name pos:line="35" pos:column="63">get</name>;</function_decl> <function_decl><specifier pos:line="35" pos:column="68">private</specifier> <name pos:line="35" pos:column="76">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="36" pos:column="9">public</specifier> <name><name pos:line="36" pos:column="16">IDictionary</name><argument_list pos:line="36" pos:column="27">&lt;<argument><name pos:line="36" pos:column="28">string</name></argument>, <argument><name pos:line="36" pos:column="36">string</name></argument>&gt;</argument_list></name></type> <name pos:line="36" pos:column="44">SecurityRelatedVariables</name> <block pos:line="36" pos:column="69">{ <function_decl><name pos:line="36" pos:column="71">get</name>;</function_decl> <function_decl><specifier pos:line="36" pos:column="76">private</specifier> <name pos:line="36" pos:column="84">set</name>;</function_decl> }</block></decl></decl_stmt>
    }</block></class>
}</block></namespace>
</unit>
