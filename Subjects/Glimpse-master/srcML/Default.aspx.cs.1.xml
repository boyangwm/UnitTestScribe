<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WebForms.WingTip.Sample\Default.aspx.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Web</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">UI</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Web</name><op:operator pos:line="6" pos:column="17">.</op:operator><name pos:line="6" pos:column="18">UI</name><op:operator pos:line="6" pos:column="20">.</op:operator><name pos:line="6" pos:column="21">WebControls</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name pos:line="8" pos:column="11">WingtipToys</name>
<block pos:line="9" pos:column="1">{
    <class><specifier pos:line="10" pos:column="5">public</specifier> <specifier pos:line="10" pos:column="12">partial</specifier> class <name pos:line="10" pos:column="26">_Default</name> <super pos:line="10" pos:column="35">: <name pos:line="10" pos:column="37">Page</name></super>
    <block pos:line="11" pos:column="5">{
        <function><type><specifier pos:line="12" pos:column="9">protected</specifier> <name pos:line="12" pos:column="19">void</name></type> <name pos:line="12" pos:column="24">Page_Load</name><parameter_list pos:line="12" pos:column="33">(<param><decl><type><name pos:line="12" pos:column="34">object</name></type> <name pos:line="12" pos:column="41">sender</name></decl></param>, <param><decl><type><name pos:line="12" pos:column="49">EventArgs</name></type> <name pos:line="12" pos:column="59">e</name></decl></param>)</parameter_list>
        <block pos:line="13" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="14" pos:column="13">HttpContext</name><op:operator pos:line="14" pos:column="24">.</op:operator><name pos:line="14" pos:column="25">Current</name><op:operator pos:line="14" pos:column="32">.</op:operator><name pos:line="14" pos:column="33">Trace</name><op:operator pos:line="14" pos:column="38">.</op:operator><name pos:line="14" pos:column="39">Write</name></name><argument_list pos:line="14" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="14" pos:column="45">"Something that happened in Load"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <expr_stmt><expr><name><name pos:line="17" pos:column="13">this</name><op:operator pos:line="17" pos:column="17">.</op:operator><name pos:line="17" pos:column="18">ViewState</name><index pos:line="17" pos:column="27">[<expr><lit:literal type="string" pos:line="17" pos:column="28">"Test"</lit:literal></expr>]</index></name> <op:operator pos:line="17" pos:column="36">=</op:operator> <lit:literal type="string" pos:line="17" pos:column="38">"hello"</lit:literal></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="20" pos:column="9">protected</specifier> <name pos:line="20" pos:column="19">void</name></type> <name pos:line="20" pos:column="24">Page_Init</name><parameter_list pos:line="20" pos:column="33">(<param><decl><type><name pos:line="20" pos:column="34">object</name></type> <name pos:line="20" pos:column="41">sender</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="49">EventArgs</name></type> <name pos:line="20" pos:column="59">e</name></decl></param>)</parameter_list>
        <block pos:line="21" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">HttpContext</name><op:operator pos:line="22" pos:column="24">.</op:operator><name pos:line="22" pos:column="25">Current</name><op:operator pos:line="22" pos:column="32">.</op:operator><name pos:line="22" pos:column="33">Trace</name><op:operator pos:line="22" pos:column="38">.</op:operator><name pos:line="22" pos:column="39">Write</name></name><argument_list pos:line="22" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="22" pos:column="45">"Something that happened in Init"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
        <function><type><specifier pos:line="24" pos:column="9">protected</specifier> <name pos:line="24" pos:column="19">void</name></type> <name pos:line="24" pos:column="24">Page_Render</name><parameter_list pos:line="24" pos:column="35">(<param><decl><type><name pos:line="24" pos:column="36">object</name></type> <name pos:line="24" pos:column="43">sender</name></decl></param>, <param><decl><type><name pos:line="24" pos:column="51">EventArgs</name></type> <name pos:line="24" pos:column="61">e</name></decl></param>)</parameter_list>
        <block pos:line="25" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">HttpContext</name><op:operator pos:line="26" pos:column="24">.</op:operator><name pos:line="26" pos:column="25">Current</name><op:operator pos:line="26" pos:column="32">.</op:operator><name pos:line="26" pos:column="33">Trace</name><op:operator pos:line="26" pos:column="38">.</op:operator><name pos:line="26" pos:column="39">Write</name></name><argument_list pos:line="26" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="26" pos:column="45">"Something that happened in Render"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
        <function><type><specifier pos:line="28" pos:column="9">protected</specifier> <name pos:line="28" pos:column="19">void</name></type> <name pos:line="28" pos:column="24">Page_SaveStateComplete</name><parameter_list pos:line="28" pos:column="46">(<param><decl><type><name pos:line="28" pos:column="47">object</name></type> <name pos:line="28" pos:column="54">sender</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="62">EventArgs</name></type> <name pos:line="28" pos:column="72">e</name></decl></param>)</parameter_list>
        <block pos:line="29" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">HttpContext</name><op:operator pos:line="30" pos:column="24">.</op:operator><name pos:line="30" pos:column="25">Current</name><op:operator pos:line="30" pos:column="32">.</op:operator><name pos:line="30" pos:column="33">Trace</name><op:operator pos:line="30" pos:column="38">.</op:operator><name pos:line="30" pos:column="39">Write</name></name><argument_list pos:line="30" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="30" pos:column="45">"Something that happened in SaveStateComplete"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
        <function><type><specifier pos:line="32" pos:column="9">protected</specifier> <name pos:line="32" pos:column="19">void</name></type> <name pos:line="32" pos:column="24">Page_SaveState</name><parameter_list pos:line="32" pos:column="38">(<param><decl><type><name pos:line="32" pos:column="39">object</name></type> <name pos:line="32" pos:column="46">sender</name></decl></param>, <param><decl><type><name pos:line="32" pos:column="54">EventArgs</name></type> <name pos:line="32" pos:column="64">e</name></decl></param>)</parameter_list>
        <block pos:line="33" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="34" pos:column="13">HttpContext</name><op:operator pos:line="34" pos:column="24">.</op:operator><name pos:line="34" pos:column="25">Current</name><op:operator pos:line="34" pos:column="32">.</op:operator><name pos:line="34" pos:column="33">Trace</name><op:operator pos:line="34" pos:column="38">.</op:operator><name pos:line="34" pos:column="39">Write</name></name><argument_list pos:line="34" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="34" pos:column="45">"Something that happened in SaveState"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
        <function><type><specifier pos:line="36" pos:column="9">protected</specifier> <name pos:line="36" pos:column="19">void</name></type> <name pos:line="36" pos:column="24">Page_PreRender</name><parameter_list pos:line="36" pos:column="38">(<param><decl><type><name pos:line="36" pos:column="39">object</name></type> <name pos:line="36" pos:column="46">sender</name></decl></param>, <param><decl><type><name pos:line="36" pos:column="54">EventArgs</name></type> <name pos:line="36" pos:column="64">e</name></decl></param>)</parameter_list>
        <block pos:line="37" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">HttpContext</name><op:operator pos:line="38" pos:column="24">.</op:operator><name pos:line="38" pos:column="25">Current</name><op:operator pos:line="38" pos:column="32">.</op:operator><name pos:line="38" pos:column="33">Trace</name><op:operator pos:line="38" pos:column="38">.</op:operator><name pos:line="38" pos:column="39">Write</name></name><argument_list pos:line="38" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="45">"Something that happened in PreRender"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
        <function><type><specifier pos:line="40" pos:column="9">protected</specifier> <name pos:line="40" pos:column="19">void</name></type> <name pos:line="40" pos:column="24">Page_PreRenderComplete</name><parameter_list pos:line="40" pos:column="46">(<param><decl><type><name pos:line="40" pos:column="47">object</name></type> <name pos:line="40" pos:column="54">sender</name></decl></param>, <param><decl><type><name pos:line="40" pos:column="62">EventArgs</name></type> <name pos:line="40" pos:column="72">e</name></decl></param>)</parameter_list>
        <block pos:line="41" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="42" pos:column="13">HttpContext</name><op:operator pos:line="42" pos:column="24">.</op:operator><name pos:line="42" pos:column="25">Current</name><op:operator pos:line="42" pos:column="32">.</op:operator><name pos:line="42" pos:column="33">Trace</name><op:operator pos:line="42" pos:column="38">.</op:operator><name pos:line="42" pos:column="39">Write</name></name><argument_list pos:line="42" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="42" pos:column="45">"Something that happened in PreRenderComplete"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="45" pos:column="9">protected</specifier> <specifier pos:line="45" pos:column="19">override</specifier> <name pos:line="45" pos:column="28">void</name></type> <name pos:line="45" pos:column="33">OnInitComplete</name><parameter_list pos:line="45" pos:column="47">(<param><decl><type><name pos:line="45" pos:column="48">EventArgs</name></type> <name pos:line="45" pos:column="58">e</name></decl></param>)</parameter_list>
        <block pos:line="46" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="47" pos:column="13">HttpContext</name><op:operator pos:line="47" pos:column="24">.</op:operator><name pos:line="47" pos:column="25">Current</name><op:operator pos:line="47" pos:column="32">.</op:operator><name pos:line="47" pos:column="33">Trace</name><op:operator pos:line="47" pos:column="38">.</op:operator><name pos:line="47" pos:column="39">Write</name></name><argument_list pos:line="47" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="47" pos:column="45">"Something that happened in InitComplete"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">base</name><op:operator pos:line="48" pos:column="17">.</op:operator><name pos:line="48" pos:column="18">OnInitComplete</name></name><argument_list pos:line="48" pos:column="32">(<argument><expr><name pos:line="48" pos:column="33">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="51" pos:column="9">protected</specifier> <specifier pos:line="51" pos:column="19">override</specifier> <name pos:line="51" pos:column="28">void</name></type> <name pos:line="51" pos:column="33">OnPreInit</name><parameter_list pos:line="51" pos:column="42">(<param><decl><type><name pos:line="51" pos:column="43">EventArgs</name></type> <name pos:line="51" pos:column="53">e</name></decl></param>)</parameter_list>
        <block pos:line="52" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="53" pos:column="13">HttpContext</name><op:operator pos:line="53" pos:column="24">.</op:operator><name pos:line="53" pos:column="25">Current</name><op:operator pos:line="53" pos:column="32">.</op:operator><name pos:line="53" pos:column="33">Trace</name><op:operator pos:line="53" pos:column="38">.</op:operator><name pos:line="53" pos:column="39">Write</name></name><argument_list pos:line="53" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="53" pos:column="45">"Something that happened in PreInit"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="54" pos:column="13">base</name><op:operator pos:line="54" pos:column="17">.</op:operator><name pos:line="54" pos:column="18">OnPreInit</name></name><argument_list pos:line="54" pos:column="27">(<argument><expr><name pos:line="54" pos:column="28">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="57" pos:column="9">protected</specifier> <specifier pos:line="57" pos:column="19">override</specifier> <name pos:line="57" pos:column="28">void</name></type> <name pos:line="57" pos:column="33">OnPreLoad</name><parameter_list pos:line="57" pos:column="42">(<param><decl><type><name pos:line="57" pos:column="43">EventArgs</name></type> <name pos:line="57" pos:column="53">e</name></decl></param>)</parameter_list>
        <block pos:line="58" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="59" pos:column="13">HttpContext</name><op:operator pos:line="59" pos:column="24">.</op:operator><name pos:line="59" pos:column="25">Current</name><op:operator pos:line="59" pos:column="32">.</op:operator><name pos:line="59" pos:column="33">Trace</name><op:operator pos:line="59" pos:column="38">.</op:operator><name pos:line="59" pos:column="39">Write</name></name><argument_list pos:line="59" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="59" pos:column="45">"Something that happened in PreLoad"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="60" pos:column="13">base</name><op:operator pos:line="60" pos:column="17">.</op:operator><name pos:line="60" pos:column="18">OnPreLoad</name></name><argument_list pos:line="60" pos:column="27">(<argument><expr><name pos:line="60" pos:column="28">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="63" pos:column="9">private</specifier> <name pos:line="63" pos:column="17">void</name></type> <name pos:line="63" pos:column="22">Page_Error</name><parameter_list pos:line="63" pos:column="32">(<param><decl><type><name pos:line="63" pos:column="33">object</name></type> <name pos:line="63" pos:column="40">sender</name></decl></param>, <param><decl><type><name pos:line="63" pos:column="48">EventArgs</name></type> <name pos:line="63" pos:column="58">e</name></decl></param>)</parameter_list>
        <block pos:line="64" pos:column="9">{
            <comment type="line" pos:line="65" pos:column="13">// Get last error from the server.</comment>
            <decl_stmt><decl><type><name pos:line="66" pos:column="13">Exception</name></type> <name pos:line="66" pos:column="23">exc</name> <init pos:line="66" pos:column="27">= <expr><call><name><name pos:line="66" pos:column="29">Server</name><op:operator pos:line="66" pos:column="35">.</op:operator><name pos:line="66" pos:column="36">GetLastError</name></name><argument_list pos:line="66" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="68" pos:column="13">// Handle specific exception.</comment>
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name pos:line="69" pos:column="17">exc</name> <op:operator pos:line="69" pos:column="21">is</op:operator> <name pos:line="69" pos:column="24">InvalidOperationException</name></expr>)</condition><then pos:line="69" pos:column="50">
            <block pos:line="70" pos:column="13">{
                <comment type="line" pos:line="71" pos:column="17">// Pass the error on to the error page.</comment>
                <expr_stmt><expr><call><name><name pos:line="72" pos:column="17">Server</name><op:operator pos:line="72" pos:column="23">.</op:operator><name pos:line="72" pos:column="24">Transfer</name></name><argument_list pos:line="72" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="72" pos:column="33">"ErrorPage.aspx?handler=Page_Error%20-%20Default.aspx"</lit:literal></expr></argument>,
                    <argument><expr><lit:literal type="boolean" pos:line="73" pos:column="21">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
