<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Mvc\Model\ViewModelSummaryShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Web</name><op:operator pos:line="2" pos:column="17">.</op:operator><name pos:line="2" pos:column="18">Mvc</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Mvc</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">Model</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Test</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Common</name></name>;</using>
<using pos:line="5" pos:column="1">using <name pos:line="5" pos:column="7">Xunit</name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Xunit</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">Extensions</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Glimpse</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">Test</name><op:operator pos:line="8" pos:column="23">.</op:operator><name pos:line="8" pos:column="24">Mvc</name><op:operator pos:line="8" pos:column="27">.</op:operator><name pos:line="8" pos:column="28">Model</name></name>
<block pos:line="9" pos:column="1">{
    <class><specifier pos:line="10" pos:column="5">public</specifier> class <name pos:line="10" pos:column="18">ViewModelSummaryShould</name>
    <block pos:line="11" pos:column="5">{
        <function><type><attribute pos:line="12" pos:column="9">[<expr><name pos:line="12" pos:column="10">Theory</name></expr><op:operator pos:line="12" pos:column="16">,</op:operator> <expr><name pos:line="12" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="13" pos:column="9">public</specifier> <name pos:line="13" pos:column="16">void</name></type> <name pos:line="13" pos:column="21">SetModelType</name><parameter_list pos:line="13" pos:column="33">(<param><decl><type><name pos:line="13" pos:column="34">ViewDataDictionary</name></type> <name pos:line="13" pos:column="53">viewData</name></decl></param>, <param><decl><type><name pos:line="13" pos:column="63">TempDataDictionary</name></type> <name pos:line="13" pos:column="82">tempData</name></decl></param>, <param><decl><type><name pos:line="13" pos:column="92">string</name></type> <name pos:line="13" pos:column="99">displayMode</name></decl></param>, <param><decl><type><name pos:line="13" pos:column="112">Type</name></type> <name pos:line="13" pos:column="117">displayModeType</name></decl></param>)</parameter_list>
        <block pos:line="14" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="15" pos:column="13">var</name></type> <name pos:line="15" pos:column="17">sut</name> <init pos:line="15" pos:column="21">= <expr><op:operator pos:line="15" pos:column="23">new</op:operator> <call><name pos:line="15" pos:column="27">ViewModelSummary</name><argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">viewData</name></expr></argument>, <argument><expr><name pos:line="15" pos:column="54">tempData</name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="64">typeof</name><argument_list pos:line="15" pos:column="70">(<argument><expr><name pos:line="15" pos:column="71">ViewModelSummary</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="15" pos:column="90">true</lit:literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="96">displayMode</name></expr></argument>, <argument><expr><name pos:line="15" pos:column="109">displayModeType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             
            <expr_stmt><expr><call><name><name pos:line="17" pos:column="13">Assert</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">Equal</name></name><argument_list pos:line="17" pos:column="25">(<argument><expr><lit:literal type="boolean" pos:line="17" pos:column="26">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="32">sut</name><op:operator pos:line="17" pos:column="35">.</op:operator><name pos:line="17" pos:column="36">IsValid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="18" pos:column="13">Assert</name><op:operator pos:line="18" pos:column="19">.</op:operator><name pos:line="18" pos:column="20">Equal</name></name><argument_list pos:line="18" pos:column="25">(<argument><expr><call><name pos:line="18" pos:column="26">typeof</name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">ViewModelSummary</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="52">sut</name><op:operator pos:line="18" pos:column="55">.</op:operator><name pos:line="18" pos:column="56">ModelType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
         
        <function><type><attribute pos:line="21" pos:column="9">[<expr><name pos:line="21" pos:column="10">Theory</name></expr><op:operator pos:line="21" pos:column="16">,</op:operator> <expr><name pos:line="21" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="22" pos:column="9">public</specifier> <name pos:line="22" pos:column="16">void</name></type> <name pos:line="22" pos:column="21">ReturnViewDataKeys</name><parameter_list pos:line="22" pos:column="39">(<param><decl><type><name pos:line="22" pos:column="40">TempDataDictionary</name></type> <name pos:line="22" pos:column="59">tempData</name></decl></param>, <param><decl><type><name pos:line="22" pos:column="69">string</name></type> <name pos:line="22" pos:column="76">displayMode</name></decl></param>, <param><decl><type><name pos:line="22" pos:column="89">Type</name></type> <name pos:line="22" pos:column="94">displayModeType</name></decl></param>)</parameter_list>
        <block pos:line="23" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="24" pos:column="13">var</name></type> <name pos:line="24" pos:column="17">viewData</name> <init pos:line="24" pos:column="26">= <expr><op:operator pos:line="24" pos:column="28">new</op:operator> <name pos:line="24" pos:column="32">ViewDataDictionary</name> <block pos:line="24" pos:column="51">{ <expr><block pos:line="24" pos:column="53">{ <expr><lit:literal type="string" pos:line="24" pos:column="55">"A"</lit:literal></expr>, <expr><lit:literal type="number" pos:line="24" pos:column="60">1</lit:literal></expr> }</block></expr>, <expr><block pos:line="24" pos:column="65">{ <expr><lit:literal type="string" pos:line="24" pos:column="67">"B"</lit:literal></expr>, <expr><lit:literal type="number" pos:line="24" pos:column="72">2</lit:literal></expr> }</block></expr>, <expr><block pos:line="24" pos:column="77">{ <expr><lit:literal type="string" pos:line="24" pos:column="79">"C"</lit:literal></expr>, <expr><lit:literal type="number" pos:line="24" pos:column="84">3</lit:literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="26" pos:column="13">var</name></type> <name pos:line="26" pos:column="17">sut</name> <init pos:line="26" pos:column="21">= <expr><op:operator pos:line="26" pos:column="23">new</op:operator> <call><name pos:line="26" pos:column="27">ViewModelSummary</name><argument_list pos:line="26" pos:column="43">(<argument><expr><name pos:line="26" pos:column="44">viewData</name></expr></argument>, <argument><expr><name pos:line="26" pos:column="54">tempData</name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="64">typeof</name><argument_list pos:line="26" pos:column="70">(<argument><expr><name pos:line="26" pos:column="71">ViewModelSummary</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="26" pos:column="90">true</lit:literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="96">displayMode</name></expr></argument>, <argument><expr><name pos:line="26" pos:column="109">displayModeType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">Assert</name><op:operator pos:line="28" pos:column="19">.</op:operator><name pos:line="28" pos:column="20">Contains</name></name><argument_list pos:line="28" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="28" pos:column="29">"A"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="34">sut</name><op:operator pos:line="28" pos:column="37">.</op:operator><name pos:line="28" pos:column="38">ViewDataKeys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="29" pos:column="13">Assert</name><op:operator pos:line="29" pos:column="19">.</op:operator><name pos:line="29" pos:column="20">Contains</name></name><argument_list pos:line="29" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="29" pos:column="29">"B"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="34">sut</name><op:operator pos:line="29" pos:column="37">.</op:operator><name pos:line="29" pos:column="38">ViewDataKeys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">Assert</name><op:operator pos:line="30" pos:column="19">.</op:operator><name pos:line="30" pos:column="20">Contains</name></name><argument_list pos:line="30" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="30" pos:column="29">"C"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="34">sut</name><op:operator pos:line="30" pos:column="37">.</op:operator><name pos:line="30" pos:column="38">ViewDataKeys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="33" pos:column="9">[<expr><name pos:line="33" pos:column="10">Theory</name></expr><op:operator pos:line="33" pos:column="16">,</op:operator> <expr><name pos:line="33" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="34" pos:column="9">public</specifier> <name pos:line="34" pos:column="16">void</name></type> <name pos:line="34" pos:column="21">ReturnTempDataKeys</name><parameter_list pos:line="34" pos:column="39">(<param><decl><type><name pos:line="34" pos:column="40">ViewDataDictionary</name></type> <name pos:line="34" pos:column="59">viewData</name></decl></param>, <param><decl><type><name pos:line="34" pos:column="69">string</name></type> <name pos:line="34" pos:column="76">displayMode</name></decl></param>, <param><decl><type><name pos:line="34" pos:column="89">Type</name></type> <name pos:line="34" pos:column="94">displayModeType</name></decl></param>)</parameter_list>
        <block pos:line="35" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="36" pos:column="13">var</name></type> <name pos:line="36" pos:column="17">tempData</name> <init pos:line="36" pos:column="26">= <expr><op:operator pos:line="36" pos:column="28">new</op:operator> <name pos:line="36" pos:column="32">TempDataDictionary</name> <block pos:line="36" pos:column="51">{ <expr><block pos:line="36" pos:column="53">{ <expr><lit:literal type="string" pos:line="36" pos:column="55">"A"</lit:literal></expr>, <expr><lit:literal type="number" pos:line="36" pos:column="60">1</lit:literal></expr> }</block></expr>, <expr><block pos:line="36" pos:column="65">{ <expr><lit:literal type="string" pos:line="36" pos:column="67">"B"</lit:literal></expr>, <expr><lit:literal type="number" pos:line="36" pos:column="72">2</lit:literal></expr> }</block></expr>, <expr><block pos:line="36" pos:column="77">{ <expr><lit:literal type="string" pos:line="36" pos:column="79">"C"</lit:literal></expr>, <expr><lit:literal type="number" pos:line="36" pos:column="84">3</lit:literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="38" pos:column="13">var</name></type> <name pos:line="38" pos:column="17">sut</name> <init pos:line="38" pos:column="21">= <expr><op:operator pos:line="38" pos:column="23">new</op:operator> <call><name pos:line="38" pos:column="27">ViewModelSummary</name><argument_list pos:line="38" pos:column="43">(<argument><expr><name pos:line="38" pos:column="44">viewData</name></expr></argument>, <argument><expr><name pos:line="38" pos:column="54">tempData</name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="64">typeof</name><argument_list pos:line="38" pos:column="70">(<argument><expr><name pos:line="38" pos:column="71">ViewModelSummary</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="38" pos:column="90">true</lit:literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="96">displayMode</name></expr></argument>, <argument><expr><name pos:line="38" pos:column="109">displayModeType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="40" pos:column="13">Assert</name><op:operator pos:line="40" pos:column="19">.</op:operator><name pos:line="40" pos:column="20">Contains</name></name><argument_list pos:line="40" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="40" pos:column="29">"A"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="34">sut</name><op:operator pos:line="40" pos:column="37">.</op:operator><name pos:line="40" pos:column="38">TempDataKeys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="41" pos:column="13">Assert</name><op:operator pos:line="41" pos:column="19">.</op:operator><name pos:line="41" pos:column="20">Contains</name></name><argument_list pos:line="41" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="29">"B"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="34">sut</name><op:operator pos:line="41" pos:column="37">.</op:operator><name pos:line="41" pos:column="38">TempDataKeys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="42" pos:column="13">Assert</name><op:operator pos:line="42" pos:column="19">.</op:operator><name pos:line="42" pos:column="20">Contains</name></name><argument_list pos:line="42" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="42" pos:column="29">"C"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="34">sut</name><op:operator pos:line="42" pos:column="37">.</op:operator><name pos:line="42" pos:column="38">TempDataKeys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="45" pos:column="9">[<expr><name pos:line="45" pos:column="10">Theory</name></expr><op:operator pos:line="45" pos:column="16">,</op:operator> <expr><name pos:line="45" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="46" pos:column="9">public</specifier> <name pos:line="46" pos:column="16">void</name></type> <name pos:line="46" pos:column="21">SetDisplayMode</name><parameter_list pos:line="46" pos:column="35">(<param><decl><type><name pos:line="46" pos:column="36">ViewDataDictionary</name></type> <name pos:line="46" pos:column="55">viewData</name></decl></param>, <param><decl><type><name pos:line="46" pos:column="65">TempDataDictionary</name></type> <name pos:line="46" pos:column="84">tempData</name></decl></param>, <param><decl><type><name pos:line="46" pos:column="94">string</name></type> <name pos:line="46" pos:column="101">displayMode</name></decl></param>, <param><decl><type><name pos:line="46" pos:column="114">Type</name></type> <name pos:line="46" pos:column="119">displayModeType</name></decl></param>)</parameter_list>
        <block pos:line="47" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="48" pos:column="13">var</name></type> <name pos:line="48" pos:column="17">sut</name> <init pos:line="48" pos:column="21">= <expr><op:operator pos:line="48" pos:column="23">new</op:operator> <call><name pos:line="48" pos:column="27">ViewModelSummary</name><argument_list pos:line="48" pos:column="43">(<argument><expr><name pos:line="48" pos:column="44">viewData</name></expr></argument>, <argument><expr><name pos:line="48" pos:column="54">tempData</name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="64">typeof</name><argument_list pos:line="48" pos:column="70">(<argument><expr><name pos:line="48" pos:column="71">ViewModelSummary</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="48" pos:column="90">true</lit:literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="96">displayMode</name></expr></argument>, <argument><expr><name pos:line="48" pos:column="109">displayModeType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="50" pos:column="13">Assert</name><op:operator pos:line="50" pos:column="19">.</op:operator><name pos:line="50" pos:column="20">Equal</name></name><argument_list pos:line="50" pos:column="25">(<argument><expr><name pos:line="50" pos:column="26">displayMode</name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="39">sut</name><op:operator pos:line="50" pos:column="42">.</op:operator><name pos:line="50" pos:column="43">DisplayModeId</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="53" pos:column="9">[<expr><name pos:line="53" pos:column="10">Theory</name></expr><op:operator pos:line="53" pos:column="16">,</op:operator> <expr><name pos:line="53" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="54" pos:column="9">public</specifier> <name pos:line="54" pos:column="16">void</name></type> <name pos:line="54" pos:column="21">SetDisplayModeType</name><parameter_list pos:line="54" pos:column="39">(<param><decl><type><name pos:line="54" pos:column="40">ViewDataDictionary</name></type> <name pos:line="54" pos:column="59">viewData</name></decl></param>, <param><decl><type><name pos:line="54" pos:column="69">TempDataDictionary</name></type> <name pos:line="54" pos:column="88">tempData</name></decl></param>, <param><decl><type><name pos:line="54" pos:column="98">string</name></type> <name pos:line="54" pos:column="105">displayMode</name></decl></param>, <param><decl><type><name pos:line="54" pos:column="118">Type</name></type> <name pos:line="54" pos:column="123">displayModeType</name></decl></param>)</parameter_list>
        <block pos:line="55" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="56" pos:column="13">var</name></type> <name pos:line="56" pos:column="17">sut</name> <init pos:line="56" pos:column="21">= <expr><op:operator pos:line="56" pos:column="23">new</op:operator> <call><name pos:line="56" pos:column="27">ViewModelSummary</name><argument_list pos:line="56" pos:column="43">(<argument><expr><name pos:line="56" pos:column="44">viewData</name></expr></argument>, <argument><expr><name pos:line="56" pos:column="54">tempData</name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="64">typeof</name><argument_list pos:line="56" pos:column="70">(<argument><expr><name pos:line="56" pos:column="71">ViewModelSummary</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="56" pos:column="90">true</lit:literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="96">displayMode</name></expr></argument>, <argument><expr><name pos:line="56" pos:column="109">displayModeType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="58" pos:column="13">Assert</name><op:operator pos:line="58" pos:column="19">.</op:operator><name pos:line="58" pos:column="20">Equal</name></name><argument_list pos:line="58" pos:column="25">(<argument><expr><name pos:line="58" pos:column="26">displayModeType</name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="43">sut</name><op:operator pos:line="58" pos:column="46">.</op:operator><name pos:line="58" pos:column="47">DisplayModeType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="59" pos:column="13">Assert</name><op:operator pos:line="59" pos:column="19">.</op:operator><name pos:line="59" pos:column="20">True</name></name><argument_list pos:line="59" pos:column="24">(<argument><expr><name><name pos:line="59" pos:column="25">sut</name><op:operator pos:line="59" pos:column="28">.</op:operator><name pos:line="59" pos:column="29">HasDisplayMode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
