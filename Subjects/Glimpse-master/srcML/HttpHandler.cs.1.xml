<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.AspNet\HttpHandler.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Linq</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Web</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Framework</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Glimpse</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">AspNet</name></name>
<block pos:line="6" pos:column="1">{
    <class><specifier pos:line="7" pos:column="5">public</specifier> class <name pos:line="7" pos:column="18">HttpHandler</name> <super pos:line="7" pos:column="30">: <name pos:line="7" pos:column="32">IHttpHandler</name></super>
    <block pos:line="8" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="9" pos:column="9">public</specifier> <name pos:line="9" pos:column="16">bool</name></type> <name pos:line="9" pos:column="21">IsReusable</name>
        <block pos:line="10" pos:column="9">{
            <function><name pos:line="11" pos:column="13">get</name> <block pos:line="11" pos:column="17">{ <return pos:line="11" pos:column="19">return <expr><lit:literal type="boolean" pos:line="11" pos:column="26">true</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="14" pos:column="9">public</specifier> <name pos:line="14" pos:column="16">void</name></type> <name pos:line="14" pos:column="21">ProcessRequest</name><parameter_list pos:line="14" pos:column="35">(<param><decl><type><name pos:line="14" pos:column="36">HttpContext</name></type> <name pos:line="14" pos:column="48">context</name></decl></param>)</parameter_list>
        <block pos:line="15" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">ProcessRequest</name><argument_list pos:line="16" pos:column="27">(<argument><expr><op:operator pos:line="16" pos:column="28">new</op:operator> <call><name pos:line="16" pos:column="32">HttpContextWrapper</name><argument_list pos:line="16" pos:column="50">(<argument><expr><name pos:line="16" pos:column="51">context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="19" pos:column="9">public</specifier> <name pos:line="19" pos:column="16">void</name></type> <name pos:line="19" pos:column="21">ProcessRequest</name><parameter_list pos:line="19" pos:column="35">(<param><decl><type><name pos:line="19" pos:column="36">HttpContextBase</name></type> <name pos:line="19" pos:column="52">context</name></decl></param>)</parameter_list>
        <block pos:line="20" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="21" pos:column="13">var</name></type> <name pos:line="21" pos:column="17">runtime</name> <init pos:line="21" pos:column="25">= <expr><call><name><name pos:line="21" pos:column="27">context</name><op:operator pos:line="21" pos:column="34">.</op:operator><name pos:line="21" pos:column="35">Application</name><op:operator pos:line="21" pos:column="46">.</op:operator><name pos:line="21" pos:column="47">Get</name></name><argument_list pos:line="21" pos:column="50">(<argument><expr><name><name pos:line="21" pos:column="51">Constants</name><op:operator pos:line="21" pos:column="60">.</op:operator><name pos:line="21" pos:column="61">RuntimeKey</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="21" pos:column="73">as</op:operator> <name pos:line="21" pos:column="76">IGlimpseRuntime</name></expr></init></decl>;</decl_stmt>

            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name pos:line="23" pos:column="17">runtime</name> <op:operator pos:line="23" pos:column="25">==</op:operator> <name pos:line="23" pos:column="28">null</name></expr>)</condition><then pos:line="23" pos:column="33">
            <block pos:line="24" pos:column="13">{
                <throw pos:line="25" pos:column="17">throw <expr><op:operator pos:line="25" pos:column="23">new</op:operator> <call><name pos:line="25" pos:column="27">HttpException</name><argument_list pos:line="25" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="25" pos:column="41">404</lit:literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="46">Resources</name><op:operator pos:line="25" pos:column="55">.</op:operator><name pos:line="25" pos:column="56">ProcessRequestMissingRuntime</name></name></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="28" pos:column="13">var</name></type> <name pos:line="28" pos:column="17">queryString</name> <init pos:line="28" pos:column="29">= <expr><name><name pos:line="28" pos:column="31">context</name><op:operator pos:line="28" pos:column="38">.</op:operator><name pos:line="28" pos:column="39">Request</name><op:operator pos:line="28" pos:column="46">.</op:operator><name pos:line="28" pos:column="47">QueryString</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="30" pos:column="13">var</name></type> <name pos:line="30" pos:column="17">resourceName</name> <init pos:line="30" pos:column="30">= <expr><name><name pos:line="30" pos:column="32">queryString</name><index pos:line="30" pos:column="43">[<expr><lit:literal type="string" pos:line="30" pos:column="44">"n"</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><call><name><name pos:line="32" pos:column="17">string</name><op:operator pos:line="32" pos:column="23">.</op:operator><name pos:line="32" pos:column="24">IsNullOrEmpty</name></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">resourceName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="32" pos:column="52">
            <block pos:line="33" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="34" pos:column="17">runtime</name><op:operator pos:line="34" pos:column="24">.</op:operator><name pos:line="34" pos:column="25">ExecuteDefaultResource</name></name><argument_list pos:line="34" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="36" pos:column="13">else
            <block pos:line="37" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="38" pos:column="17">runtime</name><op:operator pos:line="38" pos:column="24">.</op:operator><name pos:line="38" pos:column="25">ExecuteResource</name></name><argument_list pos:line="38" pos:column="40">(<argument><expr><name pos:line="38" pos:column="41">resourceName</name></expr></argument>, <argument><expr><op:operator pos:line="38" pos:column="55">new</op:operator> <call><name pos:line="38" pos:column="59">ResourceParameters</name><argument_list pos:line="38" pos:column="77">(<argument><expr><call><name><name pos:line="38" pos:column="78">queryString</name><op:operator pos:line="38" pos:column="89">.</op:operator><name pos:line="38" pos:column="90">AllKeys</name><op:operator pos:line="38" pos:column="97">.</op:operator><name pos:line="38" pos:column="98">Where</name></name><argument_list pos:line="38" pos:column="103">(<argument><expr><lambda><name pos:line="38" pos:column="104">key</name> <op:operator pos:line="38" pos:column="108">=&gt;</op:operator> <name pos:line="38" pos:column="111">key</name> <op:operator pos:line="38" pos:column="115">!=</op:operator> <name pos:line="38" pos:column="118">null</name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="38" pos:column="123">.</op:operator><call><name pos:line="38" pos:column="124">ToDictionary</name><argument_list pos:line="38" pos:column="136">(<argument><expr><lambda><name pos:line="38" pos:column="137">key</name> <op:operator pos:line="38" pos:column="141">=&gt;</op:operator> <name pos:line="38" pos:column="144">key</name></lambda></expr></argument>, <argument><expr><lambda><name pos:line="38" pos:column="149">key</name> <op:operator pos:line="38" pos:column="153">=&gt;</op:operator> <name><name pos:line="38" pos:column="156">queryString</name><index pos:line="38" pos:column="167">[<expr><name pos:line="38" pos:column="168">key</name></expr>]</index></name></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
