<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Core\Tester\ControlCookiePolicyTester.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">Glimpse</name><op:operator pos:line="1" pos:column="14">.</op:operator><name pos:line="1" pos:column="15">Core</name><op:operator pos:line="1" pos:column="19">.</op:operator><name pos:line="1" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name><op:operator pos:line="2" pos:column="19">.</op:operator><name pos:line="2" pos:column="20">Framework</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Policy</name></name>;</using>
<using pos:line="4" pos:column="1">using <name pos:line="4" pos:column="7">Moq</name>;</using>

<namespace pos:line="6" pos:column="1">namespace <name><name pos:line="6" pos:column="11">Glimpse</name><op:operator pos:line="6" pos:column="18">.</op:operator><name pos:line="6" pos:column="19">Test</name><op:operator pos:line="6" pos:column="23">.</op:operator><name pos:line="6" pos:column="24">Core</name><op:operator pos:line="6" pos:column="28">.</op:operator><name pos:line="6" pos:column="29">Tester</name></name>
<block pos:line="7" pos:column="1">{
    <class><specifier pos:line="8" pos:column="5">public</specifier> class <name pos:line="8" pos:column="18">ControlCookiePolicyTester</name><super pos:line="8" pos:column="43">:<name pos:line="8" pos:column="44">ControlCookiePolicy</name></super>
    <block pos:line="9" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="10" pos:column="9">public</specifier> <name><name pos:line="10" pos:column="16">Mock</name><argument_list pos:line="10" pos:column="20">&lt;<argument><name pos:line="10" pos:column="21">IRequestMetadata</name></argument>&gt;</argument_list></name></type> <name pos:line="10" pos:column="39">RequestMetadataMock</name> <block pos:line="10" pos:column="59">{ <function_decl><name pos:line="10" pos:column="61">get</name>;</function_decl> <function_decl><name pos:line="10" pos:column="66">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">public</specifier> <name><name pos:line="11" pos:column="16">Mock</name><argument_list pos:line="11" pos:column="20">&lt;<argument><name pos:line="11" pos:column="21">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></type> <name pos:line="11" pos:column="44">PolicyContextMock</name> <block pos:line="11" pos:column="62">{ <function_decl><name pos:line="11" pos:column="64">get</name>;</function_decl> <function_decl><name pos:line="11" pos:column="69">set</name>;</function_decl> }</block></decl></decl_stmt>

        <constructor><specifier pos:line="13" pos:column="9">private</specifier> <name pos:line="13" pos:column="17">ControlCookiePolicyTester</name><parameter_list pos:line="13" pos:column="42">()</parameter_list>
        <block pos:line="14" pos:column="9">{
            <expr_stmt><expr><name pos:line="15" pos:column="13">RequestMetadataMock</name> <op:operator pos:line="15" pos:column="33">=</op:operator> <op:operator pos:line="15" pos:column="35">new</op:operator> <call><name><name pos:line="15" pos:column="39">Mock</name><argument_list pos:line="15" pos:column="43">&lt;<argument><name pos:line="15" pos:column="44">IRequestMetadata</name></argument>&gt;</argument_list></name><argument_list pos:line="15" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="16" pos:column="13">RequestMetadataMock</name><op:operator pos:line="16" pos:column="32">.</op:operator><name pos:line="16" pos:column="33">Setup</name></name><argument_list pos:line="16" pos:column="38">(<argument><expr><lambda><name pos:line="16" pos:column="39">r</name> <op:operator pos:line="16" pos:column="41">=&gt;</op:operator> <call><name><name pos:line="16" pos:column="44">r</name><op:operator pos:line="16" pos:column="45">.</op:operator><name pos:line="16" pos:column="46">GetCookie</name></name><argument_list pos:line="16" pos:column="55">(<argument><expr><name pos:line="16" pos:column="56">ControlCookieName</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="16" pos:column="75">.</op:operator><call><name><name pos:line="16" pos:column="76">Returns</name><argument_list pos:line="16" pos:column="83">&lt;<argument><name pos:line="16" pos:column="84">string</name></argument>&gt;</argument_list></name><argument_list pos:line="16" pos:column="91">(<argument><expr><name pos:line="16" pos:column="92">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="18" pos:column="13">PolicyContextMock</name> <op:operator pos:line="18" pos:column="31">=</op:operator> <op:operator pos:line="18" pos:column="33">new</op:operator> <call><name><name pos:line="18" pos:column="37">Mock</name><argument_list pos:line="18" pos:column="41">&lt;<argument><name pos:line="18" pos:column="42">IRuntimePolicyContext</name></argument>&gt;</argument_list></name><argument_list pos:line="18" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">PolicyContextMock</name><op:operator pos:line="19" pos:column="30">.</op:operator><name pos:line="19" pos:column="31">Setup</name></name><argument_list pos:line="19" pos:column="36">(<argument><expr><lambda><name pos:line="19" pos:column="37">c</name> <op:operator pos:line="19" pos:column="39">=&gt;</op:operator> <name><name pos:line="19" pos:column="42">c</name><op:operator pos:line="19" pos:column="43">.</op:operator><name pos:line="19" pos:column="44">RequestMetadata</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="19" pos:column="60">.</op:operator><call><name pos:line="19" pos:column="61">Returns</name><argument_list pos:line="19" pos:column="68">(<argument><expr><name><name pos:line="19" pos:column="69">RequestMetadataMock</name><op:operator pos:line="19" pos:column="88">.</op:operator><name pos:line="19" pos:column="89">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="22" pos:column="9">public</specifier> <specifier pos:line="22" pos:column="16">static</specifier> <name pos:line="22" pos:column="23">ControlCookiePolicyTester</name></type> <name pos:line="22" pos:column="49">Create</name><parameter_list pos:line="22" pos:column="55">()</parameter_list>
        <block pos:line="23" pos:column="9">{
            <return pos:line="24" pos:column="13">return <expr><op:operator pos:line="24" pos:column="20">new</op:operator> <call><name pos:line="24" pos:column="24">ControlCookiePolicyTester</name><argument_list pos:line="24" pos:column="49">()</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
