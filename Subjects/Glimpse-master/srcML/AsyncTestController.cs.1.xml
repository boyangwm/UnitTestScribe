<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Integration.Site\Controllers\AsyncTestController.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Web</name><op:operator pos:line="2" pos:column="17">.</op:operator><name pos:line="2" pos:column="18">Mvc</name></name>;</using>

<namespace pos:line="4" pos:column="1">namespace <name><name pos:line="4" pos:column="11">Glimpse</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">Test</name><op:operator pos:line="4" pos:column="23">.</op:operator><name pos:line="4" pos:column="24">Integration</name><op:operator pos:line="4" pos:column="35">.</op:operator><name pos:line="4" pos:column="36">Site</name><op:operator pos:line="4" pos:column="40">.</op:operator><name pos:line="4" pos:column="41">Controllers</name></name>
<block pos:line="5" pos:column="1">{
    <class><specifier pos:line="6" pos:column="5">public</specifier> class <name pos:line="6" pos:column="18">AsyncTestController</name> <super pos:line="6" pos:column="38">: <name pos:line="6" pos:column="40">AsyncController</name></super>
    <block pos:line="7" pos:column="5">{
        <function><type><specifier pos:line="8" pos:column="9">public</specifier> <name pos:line="8" pos:column="16">void</name></type> <name pos:line="8" pos:column="21">IndexAsync</name><parameter_list pos:line="8" pos:column="31">(<param><decl><type><name pos:line="8" pos:column="32">string</name></type> <name pos:line="8" pos:column="39">id</name></decl></param>)</parameter_list>
        <block pos:line="9" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="10" pos:column="13">HttpContext</name><op:operator pos:line="10" pos:column="24">.</op:operator><name pos:line="10" pos:column="25">Items</name><op:operator pos:line="10" pos:column="30">.</op:operator><name pos:line="10" pos:column="31">Add</name></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name><name pos:line="10" pos:column="35">IntegrationTestTab</name><op:operator pos:line="10" pos:column="53">.</op:operator><name pos:line="10" pos:column="54">Expected</name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="64">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="12" pos:column="13">AsyncManager</name><op:operator pos:line="12" pos:column="25">.</op:operator><name pos:line="12" pos:column="26">OutstandingOperations</name><op:operator pos:line="12" pos:column="47">.</op:operator><name pos:line="12" pos:column="48">Increment</name></name><argument_list pos:line="12" pos:column="57">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="14" pos:column="13">var</name></type> <name pos:line="14" pos:column="17">waitService</name> <init pos:line="14" pos:column="29">= <expr><op:operator pos:line="14" pos:column="31">new</op:operator> <call><name pos:line="14" pos:column="35">WaitService</name><argument_list pos:line="14" pos:column="46">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="15" pos:column="13">waitService</name><op:operator pos:line="15" pos:column="24">.</op:operator><name pos:line="15" pos:column="25">GetHeadlinesCompleted</name></name> <op:operator pos:line="15" pos:column="47">+=</op:operator> <lambda><name pos:line="15" pos:column="50">result</name> <op:operator pos:line="15" pos:column="57">=&gt;</op:operator>
            <block pos:line="16" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="17" pos:column="17">AsyncManager</name><op:operator pos:line="17" pos:column="29">.</op:operator><name pos:line="17" pos:column="30">Parameters</name><index pos:line="17" pos:column="40">[<expr><lit:literal type="string" pos:line="17" pos:column="41">"id"</lit:literal></expr>]</index></name> <op:operator pos:line="17" pos:column="47">=</op:operator> <name pos:line="17" pos:column="49">result</name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="18" pos:column="17">AsyncManager</name><op:operator pos:line="18" pos:column="29">.</op:operator><name pos:line="18" pos:column="30">OutstandingOperations</name><op:operator pos:line="18" pos:column="51">.</op:operator><name pos:line="18" pos:column="52">Decrement</name></name><argument_list pos:line="18" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
            }</block></lambda></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">waitService</name><op:operator pos:line="20" pos:column="24">.</op:operator><name pos:line="20" pos:column="25">GetHeadlinesAsync</name></name><argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="23" pos:column="9">public</specifier> <name pos:line="23" pos:column="16">ActionResult</name></type> <name pos:line="23" pos:column="29">IndexCompleted</name><parameter_list pos:line="23" pos:column="43">(<param><decl><type><name pos:line="23" pos:column="44">string</name></type> <name pos:line="23" pos:column="51">id</name></decl></param>)</parameter_list>
        <block pos:line="24" pos:column="9">{
            <return pos:line="25" pos:column="13">return <expr><call><name pos:line="25" pos:column="20">View</name><argument_list pos:line="25" pos:column="24">()</argument_list></call></expr>;</return>
        }</block></function>

    }</block></class>

    <class><specifier pos:line="30" pos:column="5">public</specifier> class <name pos:line="30" pos:column="18">WaitService</name>
    <block pos:line="31" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="32" pos:column="9">public</specifier> <specifier pos:line="32" pos:column="16">event</specifier> <name><name pos:line="32" pos:column="22">Action</name><argument_list pos:line="32" pos:column="28">&lt;<argument><name pos:line="32" pos:column="29">string</name></argument>&gt;</argument_list></name></type> <name pos:line="32" pos:column="37">GetHeadlinesCompleted</name></decl>;</decl_stmt>

        <function><type><specifier pos:line="34" pos:column="9">public</specifier> <name pos:line="34" pos:column="16">void</name></type> <name pos:line="34" pos:column="21">GetHeadlinesAsync</name><parameter_list pos:line="34" pos:column="38">(<param><decl><type><name pos:line="34" pos:column="39">string</name></type> <name pos:line="34" pos:column="46">id</name></decl></param>)</parameter_list>
        <block pos:line="35" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">GetHeadlinesCompleted</name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
