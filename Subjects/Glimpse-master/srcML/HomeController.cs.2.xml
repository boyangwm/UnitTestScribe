<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc4.MusicStore.Sample\Controllers\HomeController.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Configuration</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Data</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Data</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">Common</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Data</name><op:operator pos:line="6" pos:column="18">.</op:operator><name pos:line="6" pos:column="19">Entity</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">System</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">Linq</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">System</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">Threading</name><op:operator pos:line="9" pos:column="23">.</op:operator><name pos:line="9" pos:column="24">Tasks</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">System</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">Web</name><op:operator pos:line="10" pos:column="17">.</op:operator><name pos:line="10" pos:column="18">Mvc</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">MvcMusicStore</name><op:operator pos:line="11" pos:column="20">.</op:operator><name pos:line="11" pos:column="21">Models</name></name>;</using>

<namespace pos:line="13" pos:column="1">namespace <name><name pos:line="13" pos:column="11">MvcMusicStore</name><op:operator pos:line="13" pos:column="24">.</op:operator><name pos:line="13" pos:column="25">Controllers</name></name>
<block pos:line="14" pos:column="1">{
    <class><specifier pos:line="15" pos:column="5">public</specifier> class <name pos:line="15" pos:column="18">HomeController</name> <super pos:line="15" pos:column="33">: <name pos:line="15" pos:column="35">Controller</name></super>
    <block pos:line="16" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">private</specifier> <name pos:line="17" pos:column="17">MusicStoreEntities</name></type> <name pos:line="17" pos:column="36">storeDB</name> <init pos:line="17" pos:column="44">= <expr><op:operator pos:line="17" pos:column="46">new</op:operator> <call><name pos:line="17" pos:column="50">MusicStoreEntities</name><argument_list pos:line="17" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line" pos:line="18" pos:column="9">//</comment>
        <comment type="line" pos:line="19" pos:column="9">// GET: /Home/</comment>

        <function><type><specifier pos:line="21" pos:column="9">public</specifier> <specifier pos:line="21" pos:column="16">async</specifier> <name><name pos:line="21" pos:column="22">Task</name><argument_list pos:line="21" pos:column="26">&lt;<argument><name pos:line="21" pos:column="27">ActionResult</name></argument>&gt;</argument_list></name></type> <name pos:line="21" pos:column="41">Index</name><parameter_list pos:line="21" pos:column="46">()</parameter_list>
        <block pos:line="22" pos:column="9">{
            <comment type="line" pos:line="23" pos:column="13">// Get most popular albums</comment>
            <decl_stmt><decl><type><name pos:line="24" pos:column="13">var</name></type> <name pos:line="24" pos:column="17">albums</name> <init pos:line="24" pos:column="24">= <expr><op:operator pos:line="24" pos:column="26">await</op:operator> <call><name pos:line="24" pos:column="32">GetTopSellingAlbums</name><argument_list pos:line="24" pos:column="51">(<argument><expr><lit:literal type="number" pos:line="24" pos:column="52">6</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="25" pos:column="13">//var albums = GetTopSellingAlbums(6);</comment>

            <comment type="line" pos:line="27" pos:column="13">// Trigger some good old ADO code </comment>
            <decl_stmt><decl><type><name pos:line="28" pos:column="13">var</name></type> <name pos:line="28" pos:column="17">albumCount</name> <init pos:line="28" pos:column="28">= <expr><call><name pos:line="28" pos:column="30">GetTotalAlbumns</name><argument_list pos:line="28" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt> 
            <expr_stmt><expr><call><name><name pos:line="29" pos:column="13">Trace</name><op:operator pos:line="29" pos:column="18">.</op:operator><name pos:line="29" pos:column="19">Write</name></name><argument_list pos:line="29" pos:column="24">(<argument><expr><call><name><name pos:line="29" pos:column="25">string</name><op:operator pos:line="29" pos:column="31">.</op:operator><name pos:line="29" pos:column="32">Format</name></name><argument_list pos:line="29" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="29" pos:column="39">"Total number of Albums = {0} and Albums with 'The' = {1}"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="99">albumCount</name><op:operator pos:line="29" pos:column="109">.</op:operator><name pos:line="29" pos:column="110">Item1</name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="117">albumCount</name><op:operator pos:line="29" pos:column="127">.</op:operator><name pos:line="29" pos:column="128">Item2</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:line="31" pos:column="13">return <expr><call><name pos:line="31" pos:column="20">View</name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">albums</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>


        <function><type><specifier pos:line="35" pos:column="9">private</specifier> <name><name pos:line="35" pos:column="17">Task</name><argument_list pos:line="35" pos:column="21">&lt;<argument><name><name pos:line="35" pos:column="22">List</name><argument_list pos:line="35" pos:column="26">&lt;<argument><name pos:line="35" pos:column="27">Album</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:line="35" pos:column="35">GetTopSellingAlbums</name><parameter_list pos:line="35" pos:column="54">(<param><decl><type><name pos:line="35" pos:column="55">int</name></type> <name pos:line="35" pos:column="59">count</name></decl></param>)</parameter_list>
        <block pos:line="36" pos:column="9">{
            <comment type="line" pos:line="37" pos:column="13">// Group the order details by album and return</comment>
            <comment type="line" pos:line="38" pos:column="13">// the albums with the highest count</comment>

            <return pos:line="40" pos:column="13">return <expr><call><name><name pos:line="40" pos:column="20">storeDB</name><op:operator pos:line="40" pos:column="27">.</op:operator><name pos:line="40" pos:column="28">Albums</name>
                <op:operator pos:line="41" pos:column="17">.</op:operator><name pos:line="41" pos:column="18">OrderByDescending</name></name><argument_list pos:line="41" pos:column="35">(<argument><expr><lambda><name pos:line="41" pos:column="36">a</name> <op:operator pos:line="41" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="41" pos:column="41">a</name><op:operator pos:line="41" pos:column="42">.</op:operator><name pos:line="41" pos:column="43">OrderDetails</name><op:operator pos:line="41" pos:column="55">.</op:operator><name pos:line="41" pos:column="56">Count</name></name><argument_list pos:line="41" pos:column="61">()</argument_list></call></lambda></expr></argument>)</argument_list></call>
                <op:operator pos:line="42" pos:column="17">.</op:operator><call><name pos:line="42" pos:column="18">Take</name><argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">count</name></expr></argument>)</argument_list></call>
                <op:operator pos:line="43" pos:column="17">.</op:operator><call><name pos:line="43" pos:column="18">ToListAsync</name><argument_list pos:line="43" pos:column="29">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="46" pos:column="9">private</specifier> <name><name pos:line="46" pos:column="17">Tuple</name><argument_list pos:line="46" pos:column="22">&lt;<argument><name pos:line="46" pos:column="23">int</name></argument>, <argument><name pos:line="46" pos:column="28">int</name></argument>&gt;</argument_list></name></type> <name pos:line="46" pos:column="33">GetTotalAlbumns</name><parameter_list pos:line="46" pos:column="48">()</parameter_list>
        <block pos:line="47" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="48" pos:column="13">var</name></type> <name pos:line="48" pos:column="17">result1</name> <init pos:line="48" pos:column="25">= <expr><lit:literal type="number" pos:line="48" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="49" pos:column="13">var</name></type> <name pos:line="49" pos:column="17">result2</name> <init pos:line="49" pos:column="25">= <expr><lit:literal type="number" pos:line="49" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="51" pos:column="13">var</name></type> <name pos:line="51" pos:column="17">connectionString</name> <init pos:line="51" pos:column="34">= <expr><name><name pos:line="51" pos:column="36">ConfigurationManager</name><op:operator pos:line="51" pos:column="56">.</op:operator><name pos:line="51" pos:column="57">ConnectionStrings</name><index pos:line="51" pos:column="74">[<expr><lit:literal type="string" pos:line="51" pos:column="75">"MusicStoreEntities"</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="52" pos:column="13">var</name></type> <name pos:line="52" pos:column="17">factory</name> <init pos:line="52" pos:column="25">= <expr><call><name><name pos:line="52" pos:column="27">DbProviderFactories</name><op:operator pos:line="52" pos:column="46">.</op:operator><name pos:line="52" pos:column="47">GetFactory</name></name><argument_list pos:line="52" pos:column="57">(<argument><expr><name><name pos:line="52" pos:column="58">connectionString</name><op:operator pos:line="52" pos:column="74">.</op:operator><name pos:line="52" pos:column="75">ProviderName</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <using pos:line="53" pos:column="13">using (<decl><type><name pos:line="53" pos:column="20">var</name></type> <name pos:line="53" pos:column="24">connection</name> <init pos:line="53" pos:column="35">= <expr><call><name><name pos:line="53" pos:column="37">factory</name><op:operator pos:line="53" pos:column="44">.</op:operator><name pos:line="53" pos:column="45">CreateConnection</name></name><argument_list pos:line="53" pos:column="61">()</argument_list></call></expr></init></decl>)
            <block pos:line="54" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="55" pos:column="17">connection</name><op:operator pos:line="55" pos:column="27">.</op:operator><name pos:line="55" pos:column="28">ConnectionString</name></name> <op:operator pos:line="55" pos:column="45">=</op:operator> <name><name pos:line="55" pos:column="47">connectionString</name><op:operator pos:line="55" pos:column="63">.</op:operator><name pos:line="55" pos:column="64">ConnectionString</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="56" pos:column="17">connection</name><op:operator pos:line="56" pos:column="27">.</op:operator><name pos:line="56" pos:column="28">Open</name></name><argument_list pos:line="56" pos:column="32">()</argument_list></call></expr>;</expr_stmt>

                <using pos:line="58" pos:column="17">using (<decl><type><name pos:line="58" pos:column="24">var</name></type> <name pos:line="58" pos:column="28">command</name> <init pos:line="58" pos:column="36">= <expr><call><name><name pos:line="58" pos:column="38">connection</name><op:operator pos:line="58" pos:column="48">.</op:operator><name pos:line="58" pos:column="49">CreateCommand</name></name><argument_list pos:line="58" pos:column="62">()</argument_list></call></expr></init></decl>)
                <block pos:line="59" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="60" pos:column="21">command</name><op:operator pos:line="60" pos:column="28">.</op:operator><name pos:line="60" pos:column="29">CommandText</name></name> <op:operator pos:line="60" pos:column="41">=</op:operator> <lit:literal type="string" pos:line="60" pos:column="43">"SELECT COUNT(*) FROM Albums"</lit:literal></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name pos:line="61" pos:column="21">command</name><op:operator pos:line="61" pos:column="28">.</op:operator><name pos:line="61" pos:column="29">CommandType</name></name> <op:operator pos:line="61" pos:column="41">=</op:operator> <name><name pos:line="61" pos:column="43">CommandType</name><op:operator pos:line="61" pos:column="54">.</op:operator><name pos:line="61" pos:column="55">Text</name></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="62" pos:column="21">result1</name> <op:operator pos:line="62" pos:column="29">=</op:operator> <op:operator pos:line="62" pos:column="31">(</op:operator><name pos:line="62" pos:column="32">int</name><op:operator pos:line="62" pos:column="35">)</op:operator><call><name><name pos:line="62" pos:column="36">command</name><op:operator pos:line="62" pos:column="43">.</op:operator><name pos:line="62" pos:column="44">ExecuteScalar</name></name><argument_list pos:line="62" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
                }</block></using>

                <using pos:line="65" pos:column="17">using (<decl><type><name pos:line="65" pos:column="24">var</name></type> <name pos:line="65" pos:column="28">command</name> <init pos:line="65" pos:column="36">= <expr><call><name><name pos:line="65" pos:column="38">connection</name><op:operator pos:line="65" pos:column="48">.</op:operator><name pos:line="65" pos:column="49">CreateCommand</name></name><argument_list pos:line="65" pos:column="62">()</argument_list></call></expr></init></decl>)
                <block pos:line="66" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="67" pos:column="21">command</name><op:operator pos:line="67" pos:column="28">.</op:operator><name pos:line="67" pos:column="29">CommandText</name></name> <op:operator pos:line="67" pos:column="41">=</op:operator> <lit:literal type="string" pos:line="67" pos:column="43">"SELECT COUNT(*) FROM Albums WHERE Title LIKE 'The%'"</lit:literal></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name pos:line="68" pos:column="21">command</name><op:operator pos:line="68" pos:column="28">.</op:operator><name pos:line="68" pos:column="29">CommandType</name></name> <op:operator pos:line="68" pos:column="41">=</op:operator> <name><name pos:line="68" pos:column="43">CommandType</name><op:operator pos:line="68" pos:column="54">.</op:operator><name pos:line="68" pos:column="55">Text</name></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="69" pos:column="21">result2</name> <op:operator pos:line="69" pos:column="29">=</op:operator> <op:operator pos:line="69" pos:column="31">(</op:operator><name pos:line="69" pos:column="32">int</name><op:operator pos:line="69" pos:column="35">)</op:operator><call><name><name pos:line="69" pos:column="36">command</name><op:operator pos:line="69" pos:column="43">.</op:operator><name pos:line="69" pos:column="44">ExecuteScalar</name></name><argument_list pos:line="69" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
                }</block></using>
            }</block></using>

            <return pos:line="73" pos:column="13">return <expr><op:operator pos:line="73" pos:column="20">new</op:operator> <call><name><name pos:line="73" pos:column="24">Tuple</name><argument_list pos:line="73" pos:column="29">&lt;<argument><name pos:line="73" pos:column="30">int</name></argument>, <argument><name pos:line="73" pos:column="35">int</name></argument>&gt;</argument_list></name><argument_list pos:line="73" pos:column="39">(<argument><expr><name pos:line="73" pos:column="40">result1</name></expr></argument>, <argument><expr><name pos:line="73" pos:column="49">result2</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="76" pos:column="9">protected</specifier> <specifier pos:line="76" pos:column="19">override</specifier> <name pos:line="76" pos:column="28">void</name></type> <name pos:line="76" pos:column="33">Dispose</name><parameter_list pos:line="76" pos:column="40">(<param><decl><type><name pos:line="76" pos:column="41">bool</name></type> <name pos:line="76" pos:column="46">disposing</name></decl></param>)</parameter_list>
        <block pos:line="77" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="78" pos:column="13">storeDB</name><op:operator pos:line="78" pos:column="20">.</op:operator><name pos:line="78" pos:column="21">Dispose</name></name><argument_list pos:line="78" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="79" pos:column="13">base</name><op:operator pos:line="79" pos:column="17">.</op:operator><name pos:line="79" pos:column="18">Dispose</name></name><argument_list pos:line="79" pos:column="25">(<argument><expr><name pos:line="79" pos:column="26">disposing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
