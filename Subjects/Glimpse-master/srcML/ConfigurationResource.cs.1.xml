<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Resource\ConfigurationResource.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">IO</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Linq</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Reflection</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Antlr4</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">StringTemplate</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Core</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Glimpse</name><op:operator pos:line="8" pos:column="14">.</op:operator><name pos:line="8" pos:column="15">Core</name><op:operator pos:line="8" pos:column="19">.</op:operator><name pos:line="8" pos:column="20">Framework</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Glimpse</name><op:operator pos:line="9" pos:column="14">.</op:operator><name pos:line="9" pos:column="15">Core</name><op:operator pos:line="9" pos:column="19">.</op:operator><name pos:line="9" pos:column="20">ResourceResult</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Glimpse</name><op:operator pos:line="10" pos:column="14">.</op:operator><name pos:line="10" pos:column="15">Core</name><op:operator pos:line="10" pos:column="19">.</op:operator><name pos:line="10" pos:column="20">Support</name></name>;</using>

<namespace pos:line="12" pos:column="1">namespace <name><name pos:line="12" pos:column="11">Glimpse</name><op:operator pos:line="12" pos:column="18">.</op:operator><name pos:line="12" pos:column="19">Core</name><op:operator pos:line="12" pos:column="23">.</op:operator><name pos:line="12" pos:column="24">Resource</name></name>
<block pos:line="13" pos:column="1">{
    <comment type="line" pos:line="14" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="15" pos:column="5">/// The &lt;see cref="IResource"/&gt; implementation responsible for providing the Glimpse configuration page, which is usually where a user turns Glimpse on and off.</comment>
    <comment type="line" pos:line="16" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="17" pos:column="5">public</specifier> class <name pos:line="17" pos:column="18">ConfigurationResource</name> <super pos:line="17" pos:column="40">: <name pos:line="17" pos:column="42">IPrivilegedResource</name>, <name pos:line="17" pos:column="63">IKey</name>, <name pos:line="17" pos:column="69">IDependOnResources</name></super>
    <block pos:line="18" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">internal</specifier> <specifier pos:line="19" pos:column="18">const</specifier> <name pos:line="19" pos:column="24">string</name></type> <name pos:line="19" pos:column="31">InternalName</name> <init pos:line="19" pos:column="44">= <expr><lit:literal type="string" pos:line="19" pos:column="46">"glimpse_config"</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">private</specifier> <specifier pos:line="20" pos:column="17">readonly</specifier> <name pos:line="20" pos:column="26">string</name><index pos:line="20" pos:column="32">[]</index></type> <name pos:line="20" pos:column="35">resourceDependencies</name></decl>;</decl_stmt>

        <comment type="line" pos:line="22" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="23" pos:column="9">/// Initializes a new instance of the &lt;see cref="ConfigurationResource"/&gt; class</comment>
        <comment type="line" pos:line="24" pos:column="9">/// &lt;/summary&gt;</comment>
        <constructor><specifier pos:line="25" pos:column="9">public</specifier> <name pos:line="25" pos:column="16">ConfigurationResource</name><parameter_list pos:line="25" pos:column="37">()</parameter_list>
        <block pos:line="26" pos:column="9">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">resourceDependencies</name> <op:operator pos:line="27" pos:column="34">=</op:operator> <op:operator pos:line="27" pos:column="36">new</op:operator><index pos:line="27" pos:column="39">[]</index>
            <block pos:line="28" pos:column="13">{
                <expr><name><name pos:line="29" pos:column="17">LogosResource</name><op:operator pos:line="29" pos:column="30">.</op:operator><name pos:line="29" pos:column="31">InternalName</name></name></expr><op:operator pos:line="29" pos:column="43">,</op:operator>
                <expr><name><name pos:line="30" pos:column="17">ConfigurationStyleResource</name><op:operator pos:line="30" pos:column="43">.</op:operator><name pos:line="30" pos:column="44">InternalName</name></name></expr><op:operator pos:line="30" pos:column="56">,</op:operator>
                <expr><name><name pos:line="31" pos:column="17">ConfigurationScriptResource</name><op:operator pos:line="31" pos:column="44">.</op:operator><name pos:line="31" pos:column="45">InternalName</name></name></expr>    
            }</block></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="35" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="36" pos:column="9">/// Gets the name of the resource.</comment>
        <comment type="line" pos:line="37" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="38" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="39" pos:column="9">/// The name.</comment>
        <comment type="line" pos:line="40" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="41" pos:column="9">/// &lt;remarks&gt;</comment>
        <comment type="line" pos:line="42" pos:column="9">/// Resource name's should be unique across a given web application. If multiple &lt;see cref="IResource" /&gt; implementations contain the same name, Glimpse may throw an exception resulting in an Http 500 Server Error.</comment>
        <comment type="line" pos:line="43" pos:column="9">/// &lt;/remarks&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="44" pos:column="9">public</specifier> <name pos:line="44" pos:column="16">string</name></type> <name pos:line="44" pos:column="23">Name</name>
        <block pos:line="45" pos:column="9">{
            <function><name pos:line="46" pos:column="13">get</name> <block pos:line="46" pos:column="17">{ <return pos:line="46" pos:column="19">return <expr><name pos:line="46" pos:column="26">InternalName</name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="49" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="50" pos:column="9">/// Gets the required or optional parameters that a resource needs as processing input.</comment>
        <comment type="line" pos:line="51" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="52" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="53" pos:column="9">/// The parameters.</comment>
        <comment type="line" pos:line="54" pos:column="9">/// &lt;/value&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="55" pos:column="9">public</specifier> <name><name pos:line="55" pos:column="16">IEnumerable</name><argument_list pos:line="55" pos:column="27">&lt;<argument><name pos:line="55" pos:column="28">ResourceParameterMetadata</name></argument>&gt;</argument_list></name></type> <name pos:line="55" pos:column="55">Parameters</name>
        <block pos:line="56" pos:column="9">{
            <function><name pos:line="57" pos:column="13">get</name> <block pos:line="57" pos:column="17">{ <return pos:line="57" pos:column="19">return <expr><call><name><name pos:line="57" pos:column="26">Enumerable</name><op:operator pos:line="57" pos:column="36">.</op:operator><name><name pos:line="57" pos:column="37">Empty</name><argument_list pos:line="57" pos:column="42">&lt;<argument><name pos:line="57" pos:column="43">ResourceParameterMetadata</name></argument>&gt;</argument_list></name></name><argument_list pos:line="57" pos:column="69">()</argument_list></call></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="60" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="61" pos:column="9">/// Gets the key.</comment>
        <comment type="line" pos:line="62" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="63" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="64" pos:column="9">/// The key. Only valid JavaScript identifiers should be used for future compatibility.</comment>
        <comment type="line" pos:line="65" pos:column="9">/// &lt;/value&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="66" pos:column="9">public</specifier> <name pos:line="66" pos:column="16">string</name></type> <name pos:line="66" pos:column="23">Key</name>
        <block pos:line="67" pos:column="9">{
            <function><name pos:line="68" pos:column="13">get</name> <block pos:line="68" pos:column="17">{ <return pos:line="68" pos:column="19">return <expr><name pos:line="68" pos:column="26">Name</name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="71" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="72" pos:column="9">/// Determines whether or not the resource depends on the given resource</comment>
        <comment type="line" pos:line="73" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="74" pos:column="9">/// &lt;param name="resourceName"&gt;The internal name of the resource&lt;/param&gt;</comment>
        <comment type="line" pos:line="75" pos:column="9">/// &lt;returns&gt;Boolean indicating whether or not the resource depends on the given resource&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="76" pos:column="9">public</specifier> <name pos:line="76" pos:column="16">bool</name></type> <name pos:line="76" pos:column="21">DependsOn</name><parameter_list pos:line="76" pos:column="30">(<param><decl><type><name pos:line="76" pos:column="31">string</name></type> <name pos:line="76" pos:column="38">resourceName</name></decl></param>)</parameter_list>
        <block pos:line="77" pos:column="9">{
            <return pos:line="78" pos:column="13">return <expr><call><name><name pos:line="78" pos:column="20">resourceDependencies</name><op:operator pos:line="78" pos:column="40">.</op:operator><name pos:line="78" pos:column="41">Contains</name></name><argument_list pos:line="78" pos:column="49">(<argument><expr><name pos:line="78" pos:column="50">resourceName</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="81" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="82" pos:column="9">/// Executes the specified resource with the specific context.</comment>
        <comment type="line" pos:line="83" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="84" pos:column="9">/// &lt;param name="context"&gt;The context.&lt;/param&gt;</comment>
        <comment type="line" pos:line="85" pos:column="9">/// &lt;returns&gt;</comment>
        <comment type="line" pos:line="86" pos:column="9">///   &lt;see cref="IResourceResult" /&gt; that can be executed when the Http response is ready to be returned.</comment>
        <comment type="line" pos:line="87" pos:column="9">/// &lt;/returns&gt;</comment>
        <comment type="line" pos:line="88" pos:column="9">/// &lt;exception cref="System.NotSupportedException"&gt;Throws a &lt;see cref="NotSupportedException"/&gt; since this is a &lt;see cref="IPrivilegedResource"/&gt;.&lt;/exception&gt;</comment>
        <function><type><specifier pos:line="89" pos:column="9">public</specifier> <name pos:line="89" pos:column="16">IResourceResult</name></type> <name pos:line="89" pos:column="32">Execute</name><parameter_list pos:line="89" pos:column="39">(<param><decl><type><name pos:line="89" pos:column="40">IResourceContext</name></type> <name pos:line="89" pos:column="57">context</name></decl></param>)</parameter_list>
        <block pos:line="90" pos:column="9">{
            <throw pos:line="91" pos:column="13">throw <expr><op:operator pos:line="91" pos:column="19">new</op:operator> <call><name pos:line="91" pos:column="23">NotSupportedException</name><argument_list pos:line="91" pos:column="44">(<argument><expr><call><name><name pos:line="91" pos:column="45">string</name><op:operator pos:line="91" pos:column="51">.</op:operator><name pos:line="91" pos:column="52">Format</name></name><argument_list pos:line="91" pos:column="58">(<argument><expr><name><name pos:line="91" pos:column="59">Resources</name><op:operator pos:line="91" pos:column="68">.</op:operator><name pos:line="91" pos:column="69">PrivilegedResourceExecuteNotSupported</name></name></expr></argument>, <argument><expr><call><name pos:line="91" pos:column="108">GetType</name><argument_list pos:line="91" pos:column="115">()</argument_list></call><op:operator pos:line="91" pos:column="117">.</op:operator><name pos:line="91" pos:column="118">Name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
        }</block></function>

        <comment type="line" pos:line="94" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="95" pos:column="9">/// Executes the specified context.</comment>
        <comment type="line" pos:line="96" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="97" pos:column="9">/// &lt;param name="context"&gt;The context.&lt;/param&gt;</comment>
        <comment type="line" pos:line="98" pos:column="9">/// &lt;param name="configuration"&gt;The configuration.&lt;/param&gt;</comment>
        <comment type="line" pos:line="99" pos:column="9">/// &lt;returns&gt;</comment>
        <comment type="line" pos:line="100" pos:column="9">/// A &lt;see cref="IResourceResult" /&gt;.</comment>
        <comment type="line" pos:line="101" pos:column="9">/// &lt;/returns&gt;</comment>
        <comment type="line" pos:line="102" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;Exception thrown if either &lt;paramref name="context"/&gt; or &lt;paramref name="configuration"/&gt; are &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <comment type="line" pos:line="103" pos:column="9">/// &lt;remarks&gt;</comment>
        <comment type="line" pos:line="104" pos:column="9">/// Use of &lt;see cref="IPrivilegedResource" /&gt; is reserved.</comment>
        <comment type="line" pos:line="105" pos:column="9">/// &lt;/remarks&gt;</comment>
        <comment type="line" pos:line="106" pos:column="9">/// </comment>
        <function><type><specifier pos:line="107" pos:column="9">public</specifier> <name pos:line="107" pos:column="16">IResourceResult</name></type> <name pos:line="107" pos:column="32">Execute</name><parameter_list pos:line="107" pos:column="39">(<param><decl><type><name pos:line="107" pos:column="40">IResourceContext</name></type> <name pos:line="107" pos:column="57">context</name></decl></param>, <param><decl><type><name pos:line="107" pos:column="66">IGlimpseConfiguration</name></type> <name pos:line="107" pos:column="88">configuration</name></decl></param>)</parameter_list>
        <block pos:line="108" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="109" pos:column="13">const</specifier> <name pos:line="109" pos:column="19">string</name></type> <name pos:line="109" pos:column="26">glimpseConfigurationResourceName</name> <init pos:line="109" pos:column="59">= <expr><lit:literal type="string" pos:line="109" pos:column="61">"Glimpse.Core.EmbeddedResources."</lit:literal> <op:operator pos:line="109" pos:column="95">+</op:operator> <name pos:line="109" pos:column="97">InternalName</name> <op:operator pos:line="109" pos:column="110">+</op:operator> <lit:literal type="string" pos:line="109" pos:column="112">".html"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="110" pos:column="13">Stream</name></type> <name pos:line="110" pos:column="20">glimpseConfigurationResourceStream</name> <init pos:line="110" pos:column="55">= <expr><call><name><name pos:line="110" pos:column="57">this</name><op:operator pos:line="110" pos:column="61">.</op:operator><name pos:line="110" pos:column="62">GetType</name></name><argument_list pos:line="110" pos:column="69">()</argument_list></call><op:operator pos:line="110" pos:column="71">.</op:operator><call><name><name pos:line="110" pos:column="72">Assembly</name><op:operator pos:line="110" pos:column="80">.</op:operator><name pos:line="110" pos:column="81">GetManifestResourceStream</name></name><argument_list pos:line="110" pos:column="106">(<argument><expr><name pos:line="110" pos:column="107">glimpseConfigurationResourceName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="111" pos:column="13">if <condition pos:line="111" pos:column="16">(<expr><name pos:line="111" pos:column="17">glimpseConfigurationResourceStream</name> <op:operator pos:line="111" pos:column="52">==</op:operator> <name pos:line="111" pos:column="55">null</name></expr>)</condition><then pos:line="111" pos:column="60">
            <block pos:line="112" pos:column="13">{
                <throw pos:line="113" pos:column="17">throw <expr><op:operator pos:line="113" pos:column="23">new</op:operator> <call><name pos:line="113" pos:column="27">GlimpseException</name><argument_list pos:line="113" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="44">"Could not load embedded resource '"</lit:literal> <op:operator pos:line="113" pos:column="81">+</op:operator> <name pos:line="113" pos:column="83">glimpseConfigurationResourceName</name> <op:operator pos:line="113" pos:column="116">+</op:operator> <lit:literal type="string" pos:line="113" pos:column="118">"'"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="116" pos:column="13">string</name></type> <name pos:line="116" pos:column="20">glimpseConfigurationTemplateContent</name> <init pos:line="116" pos:column="56">= <expr><op:operator pos:line="116" pos:column="58">new</op:operator> <call><name pos:line="116" pos:column="62">StreamReader</name><argument_list pos:line="116" pos:column="74">(<argument><expr><name pos:line="116" pos:column="75">glimpseConfigurationResourceStream</name></expr></argument>)</argument_list></call><op:operator pos:line="116" pos:column="110">.</op:operator><call><name pos:line="116" pos:column="111">ReadToEnd</name><argument_list pos:line="116" pos:column="120">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="117" pos:column="13">Template</name></type> <name pos:line="117" pos:column="22">glimpseConfigurationTemplate</name> <init pos:line="117" pos:column="51">= <expr><op:operator pos:line="117" pos:column="53">new</op:operator> <call><name pos:line="117" pos:column="57">Template</name><argument_list pos:line="117" pos:column="65">(<argument><expr><op:operator pos:line="117" pos:column="66">new</op:operator> <call><name pos:line="117" pos:column="70">TemplateGroup</name><argument_list pos:line="117" pos:column="83">(<argument><expr><lit:literal type="char" pos:line="117" pos:column="84">'$'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="117" pos:column="89">'$'</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="117" pos:column="95">glimpseConfigurationTemplateContent</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="119" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="119" pos:column="41">.</op:operator><name pos:line="119" pos:column="42">Add</name></name><argument_list pos:line="119" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="119" pos:column="46">"glimpseRuntimeVersion"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="71">GlimpseRuntime</name><op:operator pos:line="119" pos:column="85">.</op:operator><name pos:line="119" pos:column="86">Version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="121" pos:column="13">var</name></type> <name pos:line="121" pos:column="17">glimpseMetadata</name> <init pos:line="121" pos:column="33">= <expr><call><name><name pos:line="121" pos:column="35">configuration</name><op:operator pos:line="121" pos:column="48">.</op:operator><name pos:line="121" pos:column="49">PersistenceStore</name><op:operator pos:line="121" pos:column="65">.</op:operator><name pos:line="121" pos:column="66">GetMetadata</name></name><argument_list pos:line="121" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="122" pos:column="13">var</name></type> <name pos:line="122" pos:column="17">logosResource</name> <init pos:line="122" pos:column="31">= <expr><name><name pos:line="122" pos:column="33">glimpseMetadata</name><op:operator pos:line="122" pos:column="48">.</op:operator><name pos:line="122" pos:column="49">Resources</name><index pos:line="122" pos:column="58">[<expr><name><name pos:line="122" pos:column="59">LogosResource</name><op:operator pos:line="122" pos:column="72">.</op:operator><name pos:line="122" pos:column="73">InternalName</name></name></expr>]</index></name><op:operator pos:line="122" pos:column="86">.</op:operator><call><name pos:line="122" pos:column="87">Replace</name><argument_list pos:line="122" pos:column="94">(<argument><expr><lit:literal type="string" pos:line="122" pos:column="95">"{&amp;"</lit:literal> <op:operator pos:line="122" pos:column="100">+</op:operator> <name><name pos:line="122" pos:column="102">ResourceParameter</name><op:operator pos:line="122" pos:column="119">.</op:operator><name pos:line="122" pos:column="120">Hash</name><op:operator pos:line="122" pos:column="124">.</op:operator><name pos:line="122" pos:column="125">Name</name></name> <op:operator pos:line="122" pos:column="130">+</op:operator> <lit:literal type="string" pos:line="122" pos:column="132">"}"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="137">string</name><op:operator pos:line="122" pos:column="143">.</op:operator><name pos:line="122" pos:column="144">Empty</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="123" pos:column="13">var</name></type> <name pos:line="123" pos:column="17">logoNamePlaceholder</name> <init pos:line="123" pos:column="37">= <expr><lit:literal type="string" pos:line="123" pos:column="39">"{"</lit:literal> <op:operator pos:line="123" pos:column="43">+</op:operator> <name><name pos:line="123" pos:column="45">ResourceParameter</name><op:operator pos:line="123" pos:column="62">.</op:operator><name pos:line="123" pos:column="63">LogoName</name><op:operator pos:line="123" pos:column="71">.</op:operator><name pos:line="123" pos:column="72">Name</name></name> <op:operator pos:line="123" pos:column="77">+</op:operator> <lit:literal type="string" pos:line="123" pos:column="79">"}"</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="124" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="124" pos:column="41">.</op:operator><name pos:line="124" pos:column="42">Add</name></name><argument_list pos:line="124" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="124" pos:column="46">"glimpseFaviconUri"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="124" pos:column="67">logosResource</name><op:operator pos:line="124" pos:column="80">.</op:operator><name pos:line="124" pos:column="81">Replace</name></name><argument_list pos:line="124" pos:column="88">(<argument><expr><name pos:line="124" pos:column="89">logoNamePlaceholder</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="124" pos:column="110">"glimpse_favicon"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="125" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="125" pos:column="41">.</op:operator><name pos:line="125" pos:column="42">Add</name></name><argument_list pos:line="125" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="125" pos:column="46">"glimpseLogoUri"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="125" pos:column="64">logosResource</name><op:operator pos:line="125" pos:column="77">.</op:operator><name pos:line="125" pos:column="78">Replace</name></name><argument_list pos:line="125" pos:column="85">(<argument><expr><name pos:line="125" pos:column="86">logoNamePlaceholder</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="125" pos:column="107">"glimpse_image_logo"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="126" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="126" pos:column="41">.</op:operator><name pos:line="126" pos:column="42">Add</name></name><argument_list pos:line="126" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="126" pos:column="46">"githubLogoUri"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="126" pos:column="63">logosResource</name><op:operator pos:line="126" pos:column="76">.</op:operator><name pos:line="126" pos:column="77">Replace</name></name><argument_list pos:line="126" pos:column="84">(<argument><expr><name pos:line="126" pos:column="85">logoNamePlaceholder</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="126" pos:column="106">"github_logo"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="127" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="127" pos:column="41">.</op:operator><name pos:line="127" pos:column="42">Add</name></name><argument_list pos:line="127" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="127" pos:column="46">"twitterLogoUri"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="127" pos:column="64">logosResource</name><op:operator pos:line="127" pos:column="77">.</op:operator><name pos:line="127" pos:column="78">Replace</name></name><argument_list pos:line="127" pos:column="85">(<argument><expr><name pos:line="127" pos:column="86">logoNamePlaceholder</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="127" pos:column="107">"twitter_logo"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="129" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="129" pos:column="41">.</op:operator><name pos:line="129" pos:column="42">Add</name></name><argument_list pos:line="129" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="129" pos:column="46">"configurationStyleUri"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="71">glimpseMetadata</name><op:operator pos:line="129" pos:column="86">.</op:operator><name pos:line="129" pos:column="87">Resources</name><index pos:line="129" pos:column="96">[<expr><name><name pos:line="129" pos:column="97">ConfigurationStyleResource</name><op:operator pos:line="129" pos:column="123">.</op:operator><name pos:line="129" pos:column="124">InternalName</name></name></expr>]</index></name><op:operator pos:line="129" pos:column="137">.</op:operator><call><name pos:line="129" pos:column="138">Replace</name><argument_list pos:line="129" pos:column="145">(<argument><expr><lit:literal type="string" pos:line="129" pos:column="146">"{&amp;"</lit:literal> <op:operator pos:line="129" pos:column="151">+</op:operator> <name><name pos:line="129" pos:column="153">ResourceParameter</name><op:operator pos:line="129" pos:column="170">.</op:operator><name pos:line="129" pos:column="171">Hash</name><op:operator pos:line="129" pos:column="175">.</op:operator><name pos:line="129" pos:column="176">Name</name></name> <op:operator pos:line="129" pos:column="181">+</op:operator> <lit:literal type="string" pos:line="129" pos:column="183">"}"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="188">string</name><op:operator pos:line="129" pos:column="194">.</op:operator><name pos:line="129" pos:column="195">Empty</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="130" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="130" pos:column="41">.</op:operator><name pos:line="130" pos:column="42">Add</name></name><argument_list pos:line="130" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="130" pos:column="46">"configurationScriptUri"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="72">glimpseMetadata</name><op:operator pos:line="130" pos:column="87">.</op:operator><name pos:line="130" pos:column="88">Resources</name><index pos:line="130" pos:column="97">[<expr><name><name pos:line="130" pos:column="98">ConfigurationScriptResource</name><op:operator pos:line="130" pos:column="125">.</op:operator><name pos:line="130" pos:column="126">InternalName</name></name></expr>]</index></name><op:operator pos:line="130" pos:column="139">.</op:operator><call><name pos:line="130" pos:column="140">Replace</name><argument_list pos:line="130" pos:column="147">(<argument><expr><lit:literal type="string" pos:line="130" pos:column="148">"{&amp;"</lit:literal> <op:operator pos:line="130" pos:column="153">+</op:operator> <name><name pos:line="130" pos:column="155">ResourceParameter</name><op:operator pos:line="130" pos:column="172">.</op:operator><name pos:line="130" pos:column="173">Hash</name><op:operator pos:line="130" pos:column="177">.</op:operator><name pos:line="130" pos:column="178">Name</name></name> <op:operator pos:line="130" pos:column="183">+</op:operator> <lit:literal type="string" pos:line="130" pos:column="185">"}"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="190">string</name><op:operator pos:line="130" pos:column="196">.</op:operator><name pos:line="130" pos:column="197">Empty</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="132" pos:column="13">// Duplicate resources</comment>
            <decl_stmt><decl><type><name pos:line="133" pos:column="13">var</name></type> <name pos:line="133" pos:column="17">duplicateResources</name> <init pos:line="133" pos:column="36">= <expr><call><name pos:line="133" pos:column="38">DetectDuplicateResources</name><argument_list pos:line="133" pos:column="62">(<argument><expr><name><name pos:line="133" pos:column="63">configuration</name><op:operator pos:line="133" pos:column="76">.</op:operator><name pos:line="133" pos:column="77">Resources</name></name></expr></argument>)</argument_list></call><op:operator pos:line="133" pos:column="87">.</op:operator><call><name pos:line="133" pos:column="88">ToList</name><argument_list pos:line="133" pos:column="94">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="134" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="134" pos:column="41">.</op:operator><name pos:line="134" pos:column="42">Add</name></name><argument_list pos:line="134" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="134" pos:column="46">"hasDuplicateResources"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="71">duplicateResources</name><op:operator pos:line="134" pos:column="89">.</op:operator><name pos:line="134" pos:column="90">Count</name></name> <op:operator pos:line="134" pos:column="96">!=</op:operator> <lit:literal type="number" pos:line="134" pos:column="99">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="135" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="135" pos:column="41">.</op:operator><name pos:line="135" pos:column="42">Add</name></name><argument_list pos:line="135" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="135" pos:column="46">"duplicateResources"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="135" pos:column="68">duplicateResources</name><op:operator pos:line="135" pos:column="86">.</op:operator><name pos:line="135" pos:column="87">Select</name></name><argument_list pos:line="135" pos:column="93">(<argument><expr><lambda><parameter_list pos:line="135" pos:column="94">(<param><decl><name pos:line="135" pos:column="95">duplicateResource</name></decl></param>, <param><decl><name pos:line="135" pos:column="114">index</name></decl></param>)</parameter_list> <op:operator pos:line="135" pos:column="121">=&gt;</op:operator> <op:operator pos:line="135" pos:column="124">new</op:operator> <block pos:line="135" pos:column="128">{ <expr><name pos:line="135" pos:column="130">Name</name> <op:operator pos:line="135" pos:column="135">=</op:operator> <name pos:line="135" pos:column="137">duplicateResource</name></expr><op:operator pos:line="135" pos:column="154">,</op:operator> <expr><name pos:line="135" pos:column="156">IsNotFirstDuplicate</name> <op:operator pos:line="135" pos:column="176">=</op:operator> <name pos:line="135" pos:column="178">index</name> <op:operator pos:line="135" pos:column="184">!=</op:operator> <lit:literal type="number" pos:line="135" pos:column="187">0</lit:literal></expr> }</block></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="137" pos:column="13">var</name></type> <name pos:line="137" pos:column="17">packages</name> <init pos:line="137" pos:column="26">= <expr><call><name pos:line="137" pos:column="28">FindPackages</name><argument_list pos:line="137" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="139" pos:column="13">// Tabs</comment>
            <decl_stmt><decl><type><name><name pos:line="140" pos:column="13">Func</name><argument_list pos:line="140" pos:column="17">&lt;<argument><name pos:line="140" pos:column="18">ITab</name></argument>, <argument><name pos:line="140" pos:column="24">object</name></argument>&gt;</argument_list></name></type> <name pos:line="140" pos:column="32">createTabItemDisplay</name> <init pos:line="140" pos:column="53">= <expr><lambda><name pos:line="140" pos:column="55">registeredTab</name> <op:operator pos:line="140" pos:column="69">=&gt;</op:operator> <op:operator pos:line="140" pos:column="72">new</op:operator>
            <block pos:line="141" pos:column="13">{
                <expr><name><name pos:line="142" pos:column="17">registeredTab</name><op:operator pos:line="142" pos:column="30">.</op:operator><name pos:line="142" pos:column="31">Name</name></name></expr>,
                <expr><name pos:line="143" pos:column="17">Type</name> <op:operator pos:line="143" pos:column="22">=</op:operator> <call><name><name pos:line="143" pos:column="24">registeredTab</name><op:operator pos:line="143" pos:column="37">.</op:operator><name pos:line="143" pos:column="38">GetType</name></name><argument_list pos:line="143" pos:column="45">()</argument_list></call><op:operator pos:line="143" pos:column="47">.</op:operator><name pos:line="143" pos:column="48">FullName</name></expr>,
                <expr><name><name pos:line="144" pos:column="17">registeredTab</name><op:operator pos:line="144" pos:column="30">.</op:operator><name pos:line="144" pos:column="31">ExecuteOn</name></name></expr>,
                <expr><name pos:line="145" pos:column="17">AssemblyName</name> <op:operator pos:line="145" pos:column="30">=</op:operator> <call><name><name pos:line="145" pos:column="32">registeredTab</name><op:operator pos:line="145" pos:column="45">.</op:operator><name pos:line="145" pos:column="46">GetType</name></name><argument_list pos:line="145" pos:column="53">()</argument_list></call><op:operator pos:line="145" pos:column="55">.</op:operator><call><name><name pos:line="145" pos:column="56">Assembly</name><op:operator pos:line="145" pos:column="64">.</op:operator><name pos:line="145" pos:column="65">GetName</name></name><argument_list pos:line="145" pos:column="72">()</argument_list></call><op:operator pos:line="145" pos:column="74">.</op:operator><name pos:line="145" pos:column="75">Name</name></expr>
            }</block></lambda></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="148" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="148" pos:column="41">.</op:operator><name pos:line="148" pos:column="42">Add</name></name><argument_list pos:line="148" pos:column="45">(
                <argument><expr><lit:literal type="string" pos:line="149" pos:column="17">"tabsByPackage"</lit:literal></expr></argument>,
                <argument><expr><call><name pos:line="150" pos:column="17">GroupItemsByPackage</name><argument_list pos:line="150" pos:column="36">(<argument><expr><call><name><name pos:line="150" pos:column="37">configuration</name><op:operator pos:line="150" pos:column="50">.</op:operator><name pos:line="150" pos:column="51">Tabs</name><op:operator pos:line="150" pos:column="55">.</op:operator><name pos:line="150" pos:column="56">OrderBy</name></name><argument_list pos:line="150" pos:column="63">(<argument><expr><lambda><name pos:line="150" pos:column="64">x</name> <op:operator pos:line="150" pos:column="66">=&gt;</op:operator> <name><name pos:line="150" pos:column="69">x</name><op:operator pos:line="150" pos:column="70">.</op:operator><name pos:line="150" pos:column="71">Name</name></name></lambda></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="150" pos:column="78">packages</name></expr></argument>, <argument><expr><name pos:line="150" pos:column="88">createTabItemDisplay</name></expr></argument>)</argument_list></call><op:operator pos:line="150" pos:column="109">.</op:operator><call><name pos:line="150" pos:column="110">ToArray</name><argument_list pos:line="150" pos:column="117">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="152" pos:column="13">// Runtime Policies</comment>
            <decl_stmt><decl><type><name><name pos:line="153" pos:column="13">Func</name><argument_list pos:line="153" pos:column="17">&lt;<argument><name pos:line="153" pos:column="18">IRuntimePolicy</name></argument>, <argument><name pos:line="153" pos:column="34">object</name></argument>&gt;</argument_list></name></type> <name pos:line="153" pos:column="42">createRuntimePolicyItemDisplay</name> <init pos:line="153" pos:column="73">= <expr><lambda><name pos:line="153" pos:column="75">registeredRuntimePolicy</name> <op:operator pos:line="153" pos:column="99">=&gt;</op:operator>
            <block pos:line="154" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="155" pos:column="17">string</name></type> <name pos:line="155" pos:column="24">warningMessage</name> <init pos:line="155" pos:column="39">= <expr><call><name><name pos:line="155" pos:column="41">registeredRuntimePolicy</name><op:operator pos:line="155" pos:column="64">.</op:operator><name pos:line="155" pos:column="65">GetType</name></name><argument_list pos:line="155" pos:column="72">()</argument_list></call><op:operator pos:line="155" pos:column="74">.</op:operator><name pos:line="155" pos:column="75">FullName</name> <op:operator pos:line="155" pos:column="84">==</op:operator> <lit:literal type="string" pos:line="155" pos:column="87">"Glimpse.AspNet.Policy.LocalPolicy"</lit:literal> <op:operator pos:line="155" pos:column="123">?</op:operator> <lit:literal type="string" pos:line="155" pos:column="125">"*This policy means that Glimpse won't run remotely.*"</lit:literal> <op:operator pos:line="155" pos:column="180">:</op:operator> <name><name pos:line="155" pos:column="182">string</name><op:operator pos:line="155" pos:column="188">.</op:operator><name pos:line="155" pos:column="189">Empty</name></name></expr></init></decl>;</decl_stmt>
                <return pos:line="156" pos:column="17">return <expr><op:operator pos:line="156" pos:column="24">new</op:operator>
                <block pos:line="157" pos:column="17">{
                    <expr_stmt><expr><name pos:line="158" pos:column="21">Type</name> <op:operator pos:line="158" pos:column="26">=</op:operator> <call><name><name pos:line="158" pos:column="28">registeredRuntimePolicy</name><op:operator pos:line="158" pos:column="51">.</op:operator><name pos:line="158" pos:column="52">GetType</name></name><argument_list pos:line="158" pos:column="59">()</argument_list></call><op:operator pos:line="158" pos:column="61">.</op:operator><name pos:line="158" pos:column="62">FullName</name></expr><op:operator pos:line="158" pos:column="70">,</op:operator>
                    <expr><name><name pos:line="159" pos:column="21">registeredRuntimePolicy</name><op:operator pos:line="159" pos:column="44">.</op:operator><name pos:line="159" pos:column="45">ExecuteOn</name></name></expr><op:operator pos:line="159" pos:column="54">,</op:operator>
                    <expr><name pos:line="160" pos:column="21">AssemblyName</name> <op:operator pos:line="160" pos:column="34">=</op:operator> <call><name><name pos:line="160" pos:column="36">registeredRuntimePolicy</name><op:operator pos:line="160" pos:column="59">.</op:operator><name pos:line="160" pos:column="60">GetType</name></name><argument_list pos:line="160" pos:column="67">()</argument_list></call><op:operator pos:line="160" pos:column="69">.</op:operator><call><name><name pos:line="160" pos:column="70">Assembly</name><op:operator pos:line="160" pos:column="78">.</op:operator><name pos:line="160" pos:column="79">GetName</name></name><argument_list pos:line="160" pos:column="86">()</argument_list></call><op:operator pos:line="160" pos:column="88">.</op:operator><name pos:line="160" pos:column="89">Name</name></expr><op:operator pos:line="160" pos:column="93">,</op:operator>
                    <expr><name pos:line="161" pos:column="21">WarningMessage</name> <op:operator pos:line="161" pos:column="36">=</op:operator> <name pos:line="161" pos:column="38">warningMessage</name></expr><op:operator pos:line="161" pos:column="52">,</op:operator>
                    <expr><name pos:line="162" pos:column="21">HasWarningMessage</name> <op:operator pos:line="162" pos:column="39">=</op:operator> <op:operator pos:line="162" pos:column="41">!</op:operator><call><name><name pos:line="162" pos:column="42">string</name><op:operator pos:line="162" pos:column="48">.</op:operator><name pos:line="162" pos:column="49">IsNullOrEmpty</name></name><argument_list pos:line="162" pos:column="62">(<argument><expr><name pos:line="162" pos:column="63">warningMessage</name></expr></argument>)</argument_list></call></expr></expr_stmt>
                }</block></expr></return><empty_stmt pos:line="163" pos:column="18">;</empty_stmt>
            }</block></lambda></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="165" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="165" pos:column="41">.</op:operator><name pos:line="165" pos:column="42">Add</name></name><argument_list pos:line="165" pos:column="45">(
                <argument><expr><lit:literal type="string" pos:line="166" pos:column="17">"runtimePoliciesByPackage"</lit:literal></expr></argument>,
                <argument><expr><call><name pos:line="167" pos:column="17">GroupItemsByPackage</name><argument_list pos:line="167" pos:column="36">(<argument><expr><call><name><name pos:line="167" pos:column="37">configuration</name><op:operator pos:line="167" pos:column="50">.</op:operator><name pos:line="167" pos:column="51">RuntimePolicies</name><op:operator pos:line="167" pos:column="66">.</op:operator><name pos:line="167" pos:column="67">OrderBy</name></name><argument_list pos:line="167" pos:column="74">(<argument><expr><lambda><name pos:line="167" pos:column="75">x</name> <op:operator pos:line="167" pos:column="77">=&gt;</op:operator> <call><name><name pos:line="167" pos:column="80">x</name><op:operator pos:line="167" pos:column="81">.</op:operator><name pos:line="167" pos:column="82">GetType</name></name><argument_list pos:line="167" pos:column="89">()</argument_list></call><op:operator pos:line="167" pos:column="91">.</op:operator><name pos:line="167" pos:column="92">FullName</name></lambda></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="167" pos:column="103">packages</name></expr></argument>, <argument><expr><name pos:line="167" pos:column="113">createRuntimePolicyItemDisplay</name></expr></argument>)</argument_list></call><op:operator pos:line="167" pos:column="144">.</op:operator><call><name pos:line="167" pos:column="145">ToArray</name><argument_list pos:line="167" pos:column="152">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="169" pos:column="13">// Inspectors</comment>
            <decl_stmt><decl><type><name><name pos:line="170" pos:column="13">Func</name><argument_list pos:line="170" pos:column="17">&lt;<argument><name pos:line="170" pos:column="18">IInspector</name></argument>, <argument><name pos:line="170" pos:column="30">object</name></argument>&gt;</argument_list></name></type> <name pos:line="170" pos:column="38">createInspectorItemDisplay</name> <init pos:line="170" pos:column="65">= <expr><lambda><name pos:line="170" pos:column="67">inspector</name> <op:operator pos:line="170" pos:column="77">=&gt;</op:operator> <op:operator pos:line="170" pos:column="80">new</op:operator>
            <block pos:line="171" pos:column="13">{
                <expr><name pos:line="172" pos:column="17">Type</name> <op:operator pos:line="172" pos:column="22">=</op:operator> <call><name><name pos:line="172" pos:column="24">inspector</name><op:operator pos:line="172" pos:column="33">.</op:operator><name pos:line="172" pos:column="34">GetType</name></name><argument_list pos:line="172" pos:column="41">()</argument_list></call><op:operator pos:line="172" pos:column="43">.</op:operator><name pos:line="172" pos:column="44">FullName</name></expr>,
                <expr><name pos:line="173" pos:column="17">AssemblyName</name> <op:operator pos:line="173" pos:column="30">=</op:operator> <call><name><name pos:line="173" pos:column="32">inspector</name><op:operator pos:line="173" pos:column="41">.</op:operator><name pos:line="173" pos:column="42">GetType</name></name><argument_list pos:line="173" pos:column="49">()</argument_list></call><op:operator pos:line="173" pos:column="51">.</op:operator><call><name><name pos:line="173" pos:column="52">Assembly</name><op:operator pos:line="173" pos:column="60">.</op:operator><name pos:line="173" pos:column="61">GetName</name></name><argument_list pos:line="173" pos:column="68">()</argument_list></call><op:operator pos:line="173" pos:column="70">.</op:operator><name pos:line="173" pos:column="71">Name</name></expr>
            }</block></lambda></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="176" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="176" pos:column="41">.</op:operator><name pos:line="176" pos:column="42">Add</name></name><argument_list pos:line="176" pos:column="45">(
                <argument><expr><lit:literal type="string" pos:line="177" pos:column="17">"inspectorsByPackage"</lit:literal></expr></argument>,
                <argument><expr><call><name pos:line="178" pos:column="17">GroupItemsByPackage</name><argument_list pos:line="178" pos:column="36">(<argument><expr><call><name><name pos:line="178" pos:column="37">configuration</name><op:operator pos:line="178" pos:column="50">.</op:operator><name pos:line="178" pos:column="51">Inspectors</name><op:operator pos:line="178" pos:column="61">.</op:operator><name pos:line="178" pos:column="62">OrderBy</name></name><argument_list pos:line="178" pos:column="69">(<argument><expr><lambda><name pos:line="178" pos:column="70">x</name> <op:operator pos:line="178" pos:column="72">=&gt;</op:operator> <call><name><name pos:line="178" pos:column="75">x</name><op:operator pos:line="178" pos:column="76">.</op:operator><name pos:line="178" pos:column="77">GetType</name></name><argument_list pos:line="178" pos:column="84">()</argument_list></call><op:operator pos:line="178" pos:column="86">.</op:operator><name pos:line="178" pos:column="87">FullName</name></lambda></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="178" pos:column="98">packages</name></expr></argument>, <argument><expr><name pos:line="178" pos:column="108">createInspectorItemDisplay</name></expr></argument>)</argument_list></call><op:operator pos:line="178" pos:column="135">.</op:operator><call><name pos:line="178" pos:column="136">ToArray</name><argument_list pos:line="178" pos:column="143">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="180" pos:column="13">// Resources</comment>
            <decl_stmt><decl><type><name><name pos:line="181" pos:column="13">Func</name><argument_list pos:line="181" pos:column="17">&lt;<argument><name pos:line="181" pos:column="18">IResource</name></argument>, <argument><name pos:line="181" pos:column="29">object</name></argument>&gt;</argument_list></name></type> <name pos:line="181" pos:column="37">createResourceItemDisplay</name> <init pos:line="181" pos:column="63">= <expr><lambda><name pos:line="181" pos:column="65">resource</name> <op:operator pos:line="181" pos:column="74">=&gt;</op:operator> <op:operator pos:line="181" pos:column="77">new</op:operator>
            <block pos:line="182" pos:column="13">{
                <expr><name><name pos:line="183" pos:column="17">resource</name><op:operator pos:line="183" pos:column="25">.</op:operator><name pos:line="183" pos:column="26">Name</name></name></expr>,
                <expr><name pos:line="184" pos:column="17">Type</name> <op:operator pos:line="184" pos:column="22">=</op:operator> <call><name><name pos:line="184" pos:column="24">resource</name><op:operator pos:line="184" pos:column="32">.</op:operator><name pos:line="184" pos:column="33">GetType</name></name><argument_list pos:line="184" pos:column="40">()</argument_list></call><op:operator pos:line="184" pos:column="42">.</op:operator><name pos:line="184" pos:column="43">FullName</name></expr>,
                <expr><name pos:line="185" pos:column="17">Parameters</name> <op:operator pos:line="185" pos:column="28">=</op:operator> <name><name pos:line="185" pos:column="30">resource</name><op:operator pos:line="185" pos:column="38">.</op:operator><name pos:line="185" pos:column="39">Parameters</name></name> <op:operator pos:line="185" pos:column="50">!=</op:operator> <name pos:line="185" pos:column="53">null</name> <op:operator pos:line="185" pos:column="58">?</op:operator> <call><name><name pos:line="185" pos:column="60">string</name><op:operator pos:line="185" pos:column="66">.</op:operator><name pos:line="185" pos:column="67">Join</name></name><argument_list pos:line="185" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="185" pos:column="72">", "</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="185" pos:column="78">resource</name><op:operator pos:line="185" pos:column="86">.</op:operator><name pos:line="185" pos:column="87">Parameters</name><op:operator pos:line="185" pos:column="97">.</op:operator><name pos:line="185" pos:column="98">Select</name></name><argument_list pos:line="185" pos:column="104">(<argument><expr><lambda><name pos:line="185" pos:column="105">parameter</name> <op:operator pos:line="185" pos:column="115">=&gt;</op:operator> <call><name><name pos:line="185" pos:column="118">string</name><op:operator pos:line="185" pos:column="124">.</op:operator><name pos:line="185" pos:column="125">Format</name></name><argument_list pos:line="185" pos:column="131">(<argument><expr><lit:literal type="string" pos:line="185" pos:column="132">"{0} ({1})"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="185" pos:column="145">parameter</name><op:operator pos:line="185" pos:column="154">.</op:operator><name pos:line="185" pos:column="155">Name</name></name></expr></argument>, <argument><expr><name><name pos:line="185" pos:column="161">parameter</name><op:operator pos:line="185" pos:column="170">.</op:operator><name pos:line="185" pos:column="171">IsRequired</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="185" pos:column="183">.</op:operator><call><name pos:line="185" pos:column="184">ToArray</name><argument_list pos:line="185" pos:column="191">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="185" pos:column="195">:</op:operator> <name><name pos:line="185" pos:column="197">string</name><op:operator pos:line="185" pos:column="203">.</op:operator><name pos:line="185" pos:column="204">Empty</name></name></expr>,
                <expr><name pos:line="186" pos:column="17">HasDuplicate</name> <op:operator pos:line="186" pos:column="30">=</op:operator> <call><name><name pos:line="186" pos:column="32">duplicateResources</name><op:operator pos:line="186" pos:column="50">.</op:operator><name pos:line="186" pos:column="51">Contains</name></name><argument_list pos:line="186" pos:column="59">(<argument><expr><name><name pos:line="186" pos:column="60">resource</name><op:operator pos:line="186" pos:column="68">.</op:operator><name pos:line="186" pos:column="69">Name</name></name></expr></argument>)</argument_list></call></expr>
            }</block></lambda></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="189" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="189" pos:column="41">.</op:operator><name pos:line="189" pos:column="42">Add</name></name><argument_list pos:line="189" pos:column="45">(
                <argument><expr><lit:literal type="string" pos:line="190" pos:column="17">"resourcesByPackage"</lit:literal></expr></argument>,
                <argument><expr><call><name pos:line="191" pos:column="17">GroupItemsByPackage</name><argument_list pos:line="191" pos:column="36">(<argument><expr><call><name><name pos:line="191" pos:column="37">configuration</name><op:operator pos:line="191" pos:column="50">.</op:operator><name pos:line="191" pos:column="51">Resources</name><op:operator pos:line="191" pos:column="60">.</op:operator><name pos:line="191" pos:column="61">OrderBy</name></name><argument_list pos:line="191" pos:column="68">(<argument><expr><lambda><name pos:line="191" pos:column="69">x</name> <op:operator pos:line="191" pos:column="71">=&gt;</op:operator> <name><name pos:line="191" pos:column="74">x</name><op:operator pos:line="191" pos:column="75">.</op:operator><name pos:line="191" pos:column="76">Name</name></name></lambda></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="191" pos:column="83">packages</name></expr></argument>, <argument><expr><name pos:line="191" pos:column="93">createResourceItemDisplay</name></expr></argument>)</argument_list></call><op:operator pos:line="191" pos:column="119">.</op:operator><call><name pos:line="191" pos:column="120">ToArray</name><argument_list pos:line="191" pos:column="127">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="193" pos:column="13">// Client Scripts</comment>
            <decl_stmt><decl><type><name><name pos:line="194" pos:column="13">Func</name><argument_list pos:line="194" pos:column="17">&lt;<argument><name pos:line="194" pos:column="18">IClientScript</name></argument>, <argument><name pos:line="194" pos:column="33">object</name></argument>&gt;</argument_list></name></type> <name pos:line="194" pos:column="41">createClientScriptItemDisplay</name> <init pos:line="194" pos:column="71">= <expr><lambda><name pos:line="194" pos:column="73">clientScript</name> <op:operator pos:line="194" pos:column="86">=&gt;</op:operator> <op:operator pos:line="194" pos:column="89">new</op:operator>
            <block pos:line="195" pos:column="13">{
                <expr><name pos:line="196" pos:column="17">Type</name> <op:operator pos:line="196" pos:column="22">=</op:operator> <call><name><name pos:line="196" pos:column="24">clientScript</name><op:operator pos:line="196" pos:column="36">.</op:operator><name pos:line="196" pos:column="37">GetType</name></name><argument_list pos:line="196" pos:column="44">()</argument_list></call><op:operator pos:line="196" pos:column="46">.</op:operator><name pos:line="196" pos:column="47">FullName</name></expr>,
                <expr><name><name pos:line="197" pos:column="17">clientScript</name><op:operator pos:line="197" pos:column="29">.</op:operator><name pos:line="197" pos:column="30">Order</name></name></expr>
            }</block></lambda></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="200" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="200" pos:column="41">.</op:operator><name pos:line="200" pos:column="42">Add</name></name><argument_list pos:line="200" pos:column="45">(
                <argument><expr><lit:literal type="string" pos:line="201" pos:column="17">"clientScriptsByPackage"</lit:literal></expr></argument>,
                <argument><expr><call><name pos:line="202" pos:column="17">GroupItemsByPackage</name><argument_list pos:line="202" pos:column="36">(<argument><expr><call><name><name pos:line="202" pos:column="37">configuration</name><op:operator pos:line="202" pos:column="50">.</op:operator><name pos:line="202" pos:column="51">ClientScripts</name><op:operator pos:line="202" pos:column="64">.</op:operator><name pos:line="202" pos:column="65">OrderBy</name></name><argument_list pos:line="202" pos:column="72">(<argument><expr><lambda><name pos:line="202" pos:column="73">x</name> <op:operator pos:line="202" pos:column="75">=&gt;</op:operator> <call><name><name pos:line="202" pos:column="78">x</name><op:operator pos:line="202" pos:column="79">.</op:operator><name pos:line="202" pos:column="80">GetType</name></name><argument_list pos:line="202" pos:column="87">()</argument_list></call><op:operator pos:line="202" pos:column="89">.</op:operator><name pos:line="202" pos:column="90">FullName</name></lambda></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="202" pos:column="101">packages</name></expr></argument>, <argument><expr><name pos:line="202" pos:column="111">createClientScriptItemDisplay</name></expr></argument>)</argument_list></call><op:operator pos:line="202" pos:column="141">.</op:operator><call><name pos:line="202" pos:column="142">ToArray</name><argument_list pos:line="202" pos:column="149">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="204" pos:column="13">// Remainder</comment>
            <expr_stmt><expr><call><name><name pos:line="205" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="205" pos:column="41">.</op:operator><name pos:line="205" pos:column="42">Add</name></name><argument_list pos:line="205" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="205" pos:column="46">"frameworkProviderType"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="205" pos:column="71">configuration</name><op:operator pos:line="205" pos:column="84">.</op:operator><name pos:line="205" pos:column="85">FrameworkProvider</name><op:operator pos:line="205" pos:column="102">.</op:operator><name pos:line="205" pos:column="103">GetType</name></name><argument_list pos:line="205" pos:column="110">()</argument_list></call><op:operator pos:line="205" pos:column="112">.</op:operator><name pos:line="205" pos:column="113">FullName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="206" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="206" pos:column="41">.</op:operator><name pos:line="206" pos:column="42">Add</name></name><argument_list pos:line="206" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="206" pos:column="46">"htmlEncoderType"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="206" pos:column="65">configuration</name><op:operator pos:line="206" pos:column="78">.</op:operator><name pos:line="206" pos:column="79">HtmlEncoder</name><op:operator pos:line="206" pos:column="90">.</op:operator><name pos:line="206" pos:column="91">GetType</name></name><argument_list pos:line="206" pos:column="98">()</argument_list></call><op:operator pos:line="206" pos:column="100">.</op:operator><name pos:line="206" pos:column="101">FullName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="207" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="207" pos:column="41">.</op:operator><name pos:line="207" pos:column="42">Add</name></name><argument_list pos:line="207" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="207" pos:column="46">"loggerType"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="207" pos:column="60">configuration</name><op:operator pos:line="207" pos:column="73">.</op:operator><name pos:line="207" pos:column="74">Logger</name><op:operator pos:line="207" pos:column="80">.</op:operator><name pos:line="207" pos:column="81">GetType</name></name><argument_list pos:line="207" pos:column="88">()</argument_list></call><op:operator pos:line="207" pos:column="90">.</op:operator><name pos:line="207" pos:column="91">FullName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="208" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="208" pos:column="41">.</op:operator><name pos:line="208" pos:column="42">Add</name></name><argument_list pos:line="208" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="208" pos:column="46">"persistenceStoreType"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="208" pos:column="70">configuration</name><op:operator pos:line="208" pos:column="83">.</op:operator><name pos:line="208" pos:column="84">PersistenceStore</name><op:operator pos:line="208" pos:column="100">.</op:operator><name pos:line="208" pos:column="101">GetType</name></name><argument_list pos:line="208" pos:column="108">()</argument_list></call><op:operator pos:line="208" pos:column="110">.</op:operator><name pos:line="208" pos:column="111">FullName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="209" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="209" pos:column="41">.</op:operator><name pos:line="209" pos:column="42">Add</name></name><argument_list pos:line="209" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="209" pos:column="46">"resourceEndpointType"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="209" pos:column="70">configuration</name><op:operator pos:line="209" pos:column="83">.</op:operator><name pos:line="209" pos:column="84">ResourceEndpoint</name><op:operator pos:line="209" pos:column="100">.</op:operator><name pos:line="209" pos:column="101">GetType</name></name><argument_list pos:line="209" pos:column="108">()</argument_list></call><op:operator pos:line="209" pos:column="110">.</op:operator><name pos:line="209" pos:column="111">FullName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="210" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="210" pos:column="41">.</op:operator><name pos:line="210" pos:column="42">Add</name></name><argument_list pos:line="210" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="210" pos:column="46">"serializerType"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="210" pos:column="64">configuration</name><op:operator pos:line="210" pos:column="77">.</op:operator><name pos:line="210" pos:column="78">Serializer</name><op:operator pos:line="210" pos:column="88">.</op:operator><name pos:line="210" pos:column="89">GetType</name></name><argument_list pos:line="210" pos:column="96">()</argument_list></call><op:operator pos:line="210" pos:column="98">.</op:operator><name pos:line="210" pos:column="99">FullName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="211" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="211" pos:column="41">.</op:operator><name pos:line="211" pos:column="42">Add</name></name><argument_list pos:line="211" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="211" pos:column="46">"defaultResourceType"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="211" pos:column="69">configuration</name><op:operator pos:line="211" pos:column="82">.</op:operator><name pos:line="211" pos:column="83">DefaultResource</name><op:operator pos:line="211" pos:column="98">.</op:operator><name pos:line="211" pos:column="99">GetType</name></name><argument_list pos:line="211" pos:column="106">()</argument_list></call><op:operator pos:line="211" pos:column="108">.</op:operator><name pos:line="211" pos:column="109">FullName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="212" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="212" pos:column="41">.</op:operator><name pos:line="212" pos:column="42">Add</name></name><argument_list pos:line="212" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="212" pos:column="46">"defaultResourceName"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="212" pos:column="69">configuration</name><op:operator pos:line="212" pos:column="82">.</op:operator><name pos:line="212" pos:column="83">DefaultResource</name><op:operator pos:line="212" pos:column="98">.</op:operator><name pos:line="212" pos:column="99">Name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="213" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="213" pos:column="41">.</op:operator><name pos:line="213" pos:column="42">Add</name></name><argument_list pos:line="213" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="213" pos:column="46">"defaultRuntimePolicyType"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="213" pos:column="74">configuration</name><op:operator pos:line="213" pos:column="87">.</op:operator><name pos:line="213" pos:column="88">DefaultRuntimePolicy</name><op:operator pos:line="213" pos:column="108">.</op:operator><name pos:line="213" pos:column="109">GetType</name></name><argument_list pos:line="213" pos:column="116">()</argument_list></call><op:operator pos:line="213" pos:column="118">.</op:operator><name pos:line="213" pos:column="119">FullName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="214" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="214" pos:column="41">.</op:operator><name pos:line="214" pos:column="42">Add</name></name><argument_list pos:line="214" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="214" pos:column="46">"proxyFactoryType"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="214" pos:column="66">configuration</name><op:operator pos:line="214" pos:column="79">.</op:operator><name pos:line="214" pos:column="80">ProxyFactory</name><op:operator pos:line="214" pos:column="92">.</op:operator><name pos:line="214" pos:column="93">GetType</name></name><argument_list pos:line="214" pos:column="100">()</argument_list></call><op:operator pos:line="214" pos:column="102">.</op:operator><name pos:line="214" pos:column="103">FullName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="215" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="215" pos:column="41">.</op:operator><name pos:line="215" pos:column="42">Add</name></name><argument_list pos:line="215" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="215" pos:column="46">"messageBrokerType"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="215" pos:column="67">configuration</name><op:operator pos:line="215" pos:column="80">.</op:operator><name pos:line="215" pos:column="81">MessageBroker</name><op:operator pos:line="215" pos:column="94">.</op:operator><name pos:line="215" pos:column="95">GetType</name></name><argument_list pos:line="215" pos:column="102">()</argument_list></call><op:operator pos:line="215" pos:column="104">.</op:operator><name pos:line="215" pos:column="105">FullName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="216" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="216" pos:column="41">.</op:operator><name pos:line="216" pos:column="42">Add</name></name><argument_list pos:line="216" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="216" pos:column="46">"endpointBaseUri"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="216" pos:column="65">configuration</name><op:operator pos:line="216" pos:column="78">.</op:operator><name pos:line="216" pos:column="79">EndpointBaseUri</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="218" pos:column="13">// General Settings</comment>
            <expr_stmt><expr><call><name><name pos:line="219" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="219" pos:column="41">.</op:operator><name pos:line="219" pos:column="42">Add</name></name><argument_list pos:line="219" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="219" pos:column="46">"generalSettings"</lit:literal></expr></argument>, <argument><expr><call><name pos:line="219" pos:column="65">GetGeneralSettings</name><argument_list pos:line="219" pos:column="83">()</argument_list></call><op:operator pos:line="219" pos:column="85">.</op:operator><call><name pos:line="219" pos:column="86">ToArray</name><argument_list pos:line="219" pos:column="93">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="221" pos:column="13">// Registered Packages</comment>
            <decl_stmt><decl><type><name pos:line="222" pos:column="13">var</name></type> <name pos:line="222" pos:column="17">nuGetPackageDiscoveryResult</name> <init pos:line="222" pos:column="45">= <expr><call><name><name pos:line="222" pos:column="47">NuGetPackageDiscoverer</name><op:operator pos:line="222" pos:column="69">.</op:operator><name pos:line="222" pos:column="70">Discover</name></name><argument_list pos:line="222" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="223" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="223" pos:column="41">.</op:operator><name pos:line="223" pos:column="42">Add</name></name><argument_list pos:line="223" pos:column="45">(
                <argument><expr><lit:literal type="string" pos:line="224" pos:column="17">"registeredNuGetPackages"</lit:literal></expr></argument>,
                <argument><expr><call><name><name pos:line="225" pos:column="17">nuGetPackageDiscoveryResult</name><op:operator pos:line="225" pos:column="44">.</op:operator><name pos:line="225" pos:column="45">FoundNuGetPackages</name><op:operator pos:line="225" pos:column="63">.</op:operator><name pos:line="225" pos:column="64">Select</name></name><argument_list pos:line="225" pos:column="70">(
                    <argument><expr><lambda><name pos:line="226" pos:column="21">registeredNuGetPackage</name> <op:operator pos:line="226" pos:column="44">=&gt;</op:operator> <op:operator pos:line="226" pos:column="47">new</op:operator>
                    <block pos:line="227" pos:column="21">{
                        <expr><name pos:line="228" pos:column="25">Id</name> <op:operator pos:line="228" pos:column="28">=</op:operator> <call><name><name pos:line="228" pos:column="30">registeredNuGetPackage</name><op:operator pos:line="228" pos:column="52">.</op:operator><name pos:line="228" pos:column="53">GetId</name></name><argument_list pos:line="228" pos:column="58">()</argument_list></call></expr><op:operator pos:line="228" pos:column="60">,</op:operator>
                        <expr><name pos:line="229" pos:column="25">Version</name> <op:operator pos:line="229" pos:column="33">=</op:operator> <call><name><name pos:line="229" pos:column="35">registeredNuGetPackage</name><op:operator pos:line="229" pos:column="57">.</op:operator><name pos:line="229" pos:column="58">GetVersion</name></name><argument_list pos:line="229" pos:column="68">()</argument_list></call></expr>
                    }</block></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="232" pos:column="13">Assembly</name><index pos:line="232" pos:column="21">[]</index></type> <name pos:line="232" pos:column="24">nonProcessableAssemblies</name> <init pos:line="232" pos:column="49">= <expr><name><name pos:line="232" pos:column="51">nuGetPackageDiscoveryResult</name><op:operator pos:line="232" pos:column="78">.</op:operator><name pos:line="232" pos:column="79">NonProcessableAssemblies</name></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="233" pos:column="13">glimpseConfigurationTemplate</name><op:operator pos:line="233" pos:column="41">.</op:operator><name pos:line="233" pos:column="42">Add</name></name><argument_list pos:line="233" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="233" pos:column="46">"hasNonProcessableAssemblies"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="233" pos:column="77">nonProcessableAssemblies</name><op:operator pos:line="233" pos:column="101">.</op:operator><name pos:line="233" pos:column="102">Length</name></name> <op:operator pos:line="233" pos:column="109">!=</op:operator> <lit:literal type="number" pos:line="233" pos:column="112">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="234" pos:column="13">if <condition pos:line="234" pos:column="16">(<expr><name><name pos:line="234" pos:column="17">nonProcessableAssemblies</name><op:operator pos:line="234" pos:column="41">.</op:operator><name pos:line="234" pos:column="42">Length</name></name> <op:operator pos:line="234" pos:column="49">!=</op:operator> <lit:literal type="number" pos:line="234" pos:column="52">0</lit:literal></expr>)</condition><then pos:line="234" pos:column="54">
            <block pos:line="235" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="236" pos:column="17">glimpseConfigurationTemplate</name><op:operator pos:line="236" pos:column="45">.</op:operator><name pos:line="236" pos:column="46">Add</name></name><argument_list pos:line="236" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="236" pos:column="50">"nonProcessableAssemblies"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="236" pos:column="78">nonProcessableAssemblies</name><op:operator pos:line="236" pos:column="102">.</op:operator><name pos:line="236" pos:column="103">Select</name></name><argument_list pos:line="236" pos:column="109">(<argument><expr><lambda><name pos:line="236" pos:column="110">nonProcessableAssembly</name> <op:operator pos:line="236" pos:column="133">=&gt;</op:operator> <name><name pos:line="236" pos:column="136">nonProcessableAssembly</name><op:operator pos:line="236" pos:column="158">.</op:operator><name pos:line="236" pos:column="159">FullName</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="236" pos:column="168">.</op:operator><call><name pos:line="236" pos:column="169">ToArray</name><argument_list pos:line="236" pos:column="176">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <return pos:line="239" pos:column="13">return <expr><op:operator pos:line="239" pos:column="20">new</op:operator> <call><name pos:line="239" pos:column="24">HtmlResourceResult</name><argument_list pos:line="239" pos:column="42">(<argument><expr><call><name><name pos:line="239" pos:column="43">glimpseConfigurationTemplate</name><op:operator pos:line="239" pos:column="71">.</op:operator><name pos:line="239" pos:column="72">Render</name></name><argument_list pos:line="239" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="242" pos:column="9">private</specifier> <specifier pos:line="242" pos:column="17">static</specifier> <name><name pos:line="242" pos:column="24">IEnumerable</name><argument_list pos:line="242" pos:column="35">&lt;<argument><name pos:line="242" pos:column="36">object</name></argument>&gt;</argument_list></name></type> <name pos:line="242" pos:column="44">GetGeneralSettings</name><parameter_list pos:line="242" pos:column="62">()</parameter_list>
        <block pos:line="243" pos:column="9">{
            <return pos:line="244" pos:column="13">return <expr><op:operator pos:line="244" pos:column="20">new</op:operator> <call><name><name pos:line="244" pos:column="24">List</name><argument_list pos:line="244" pos:column="28">&lt;<argument><name pos:line="244" pos:column="29">object</name></argument>&gt;</argument_list></name><argument_list pos:line="244" pos:column="36">()</argument_list></call>
            <block pos:line="245" pos:column="13">{
                <expr><op:operator pos:line="246" pos:column="17">new</op:operator> <block pos:line="246" pos:column="21">{  <expr><name pos:line="246" pos:column="24">Name</name><op:operator pos:line="246" pos:column="28">=</op:operator> <lit:literal type="string" pos:line="246" pos:column="30">"Enable Shortcut Keys"</lit:literal></expr><op:operator pos:line="246" pos:column="52">,</op:operator> <expr><name pos:line="246" pos:column="54">Type</name> <op:operator pos:line="246" pos:column="59">=</op:operator> <lit:literal type="string" pos:line="246" pos:column="61">"ShortcutKeys"</lit:literal></expr> }</block></expr>
            }</block></expr>;</return>
        }</block></function>
        
        <function><type><specifier pos:line="250" pos:column="9">private</specifier> <specifier pos:line="250" pos:column="17">static</specifier> <name><name pos:line="250" pos:column="24">IEnumerable</name><argument_list pos:line="250" pos:column="35">&lt;<argument><name pos:line="250" pos:column="36">object</name></argument>&gt;</argument_list></name></type> <name><name pos:line="250" pos:column="44">GroupItemsByPackage</name><argument_list pos:line="250" pos:column="63">&lt;<argument><name pos:line="250" pos:column="64">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="250" pos:column="66">(<param><decl><type><name><name pos:line="250" pos:column="67">IEnumerable</name><argument_list pos:line="250" pos:column="78">&lt;<argument><name pos:line="250" pos:column="79">T</name></argument>&gt;</argument_list></name></type> <name pos:line="250" pos:column="82">items</name></decl></param>, <param><decl><type><name><name pos:line="250" pos:column="89">IDictionary</name><argument_list pos:line="250" pos:column="100">&lt;<argument><name pos:line="250" pos:column="101">string</name></argument>, <argument><name pos:line="250" pos:column="109">PackageItemDetail</name></argument>&gt;</argument_list></name></type> <name pos:line="250" pos:column="128">packages</name></decl></param>, <param><decl><type><name><name pos:line="250" pos:column="138">Func</name><argument_list pos:line="250" pos:column="142">&lt;<argument><name pos:line="250" pos:column="143">T</name></argument>, <argument><name pos:line="250" pos:column="146">object</name></argument>&gt;</argument_list></name></type> <name pos:line="250" pos:column="154">createItemDisplay</name></decl></param>)</parameter_list>
        <block pos:line="251" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="252" pos:column="13">var</name></type> <name pos:line="252" pos:column="17">groupedItemsByPackage</name> <init pos:line="252" pos:column="39">= <expr><call><name pos:line="252" pos:column="41">GroupItems</name><argument_list pos:line="252" pos:column="51">(<argument><expr><name pos:line="252" pos:column="52">items</name></expr></argument>, <argument><expr><name pos:line="252" pos:column="59">packages</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="254" pos:column="13">var</name></type> <name pos:line="254" pos:column="17">itemsByPackage</name> <init pos:line="254" pos:column="32">= <expr><op:operator pos:line="254" pos:column="34">new</op:operator> <call><name><name pos:line="254" pos:column="38">List</name><argument_list pos:line="254" pos:column="42">&lt;<argument><name pos:line="254" pos:column="43">object</name></argument>&gt;</argument_list></name><argument_list pos:line="254" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <foreach pos:line="256" pos:column="13">foreach (<init><decl><type><name pos:line="256" pos:column="22">var</name></type> <name pos:line="256" pos:column="26">groupedItemsForPackage</name> <range pos:line="256" pos:column="49">in <expr><name pos:line="256" pos:column="52">groupedItemsByPackage</name></expr></range></decl></init>)
            <block pos:line="257" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="258" pos:column="17">var</name></type> <name pos:line="258" pos:column="21">package</name> <init pos:line="258" pos:column="29">= <expr><name><name pos:line="258" pos:column="31">groupedItemsForPackage</name><op:operator pos:line="258" pos:column="53">.</op:operator><name pos:line="258" pos:column="54">Value</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><call><name><name pos:line="260" pos:column="17">itemsByPackage</name><op:operator pos:line="260" pos:column="31">.</op:operator><name pos:line="260" pos:column="32">Add</name></name><argument_list pos:line="260" pos:column="35">(<argument><expr><op:operator pos:line="260" pos:column="36">new</op:operator>
                <block pos:line="261" pos:column="17">{
                    <expr><name pos:line="262" pos:column="21">PackageName</name> <op:operator pos:line="262" pos:column="33">=</op:operator> <name><name pos:line="262" pos:column="35">package</name><op:operator pos:line="262" pos:column="42">.</op:operator><name pos:line="262" pos:column="43">Package</name><op:operator pos:line="262" pos:column="50">.</op:operator><name pos:line="262" pos:column="51">Name</name></name></expr><op:operator pos:line="262" pos:column="55">,</op:operator>
                    <expr><name pos:line="263" pos:column="21">PackageVersion</name> <op:operator pos:line="263" pos:column="36">=</op:operator> <op:operator pos:line="263" pos:column="38">!</op:operator><call><name><name pos:line="263" pos:column="39">string</name><op:operator pos:line="263" pos:column="45">.</op:operator><name pos:line="263" pos:column="46">IsNullOrEmpty</name></name><argument_list pos:line="263" pos:column="59">(<argument><expr><name><name pos:line="263" pos:column="60">package</name><op:operator pos:line="263" pos:column="67">.</op:operator><name pos:line="263" pos:column="68">Package</name><op:operator pos:line="263" pos:column="75">.</op:operator><name pos:line="263" pos:column="76">Version</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="263" pos:column="85">?</op:operator> <call><name><name pos:line="263" pos:column="87">string</name><op:operator pos:line="263" pos:column="93">.</op:operator><name pos:line="263" pos:column="94">Format</name></name><argument_list pos:line="263" pos:column="100">(<argument><expr><lit:literal type="string" pos:line="263" pos:column="101">"({0})"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="263" pos:column="110">package</name><op:operator pos:line="263" pos:column="117">.</op:operator><name pos:line="263" pos:column="118">Package</name><op:operator pos:line="263" pos:column="125">.</op:operator><name pos:line="263" pos:column="126">Version</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="263" pos:column="135">:</op:operator> <name><name pos:line="263" pos:column="137">string</name><op:operator pos:line="263" pos:column="143">.</op:operator><name pos:line="263" pos:column="144">Empty</name></name></expr><op:operator pos:line="263" pos:column="149">,</op:operator>
                    <expr><name pos:line="264" pos:column="21">ContainedItems</name> <op:operator pos:line="264" pos:column="36">=</op:operator> <call><name><name pos:line="264" pos:column="38">package</name><op:operator pos:line="264" pos:column="45">.</op:operator><name pos:line="264" pos:column="46">Items</name><op:operator pos:line="264" pos:column="51">.</op:operator><name pos:line="264" pos:column="52">Select</name></name><argument_list pos:line="264" pos:column="58">(<argument><expr><name pos:line="264" pos:column="59">createItemDisplay</name></expr></argument>)</argument_list></call><op:operator pos:line="264" pos:column="77">.</op:operator><call><name pos:line="264" pos:column="78">ToArray</name><argument_list pos:line="264" pos:column="85">()</argument_list></call></expr>
                }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

            <return pos:line="268" pos:column="13">return <expr><name pos:line="268" pos:column="20">itemsByPackage</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="271" pos:column="9">private</specifier> <specifier pos:line="271" pos:column="17">static</specifier> <name><name pos:line="271" pos:column="24">IDictionary</name><argument_list pos:line="271" pos:column="35">&lt;<argument><name pos:line="271" pos:column="36">string</name></argument>, <argument><name><name pos:line="271" pos:column="44">PackageItem</name><argument_list pos:line="271" pos:column="55">&lt;<argument><name pos:line="271" pos:column="56">T</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name><name pos:line="271" pos:column="60">GroupItems</name><argument_list pos:line="271" pos:column="70">&lt;<argument><name pos:line="271" pos:column="71">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="271" pos:column="73">(<param><decl><type><name><name pos:line="271" pos:column="74">IEnumerable</name><argument_list pos:line="271" pos:column="85">&lt;<argument><name pos:line="271" pos:column="86">T</name></argument>&gt;</argument_list></name></type> <name pos:line="271" pos:column="89">items</name></decl></param>, <param><decl><type><name><name pos:line="271" pos:column="96">IDictionary</name><argument_list pos:line="271" pos:column="107">&lt;<argument><name pos:line="271" pos:column="108">string</name></argument>, <argument><name pos:line="271" pos:column="116">PackageItemDetail</name></argument>&gt;</argument_list></name></type> <name pos:line="271" pos:column="135">packages</name></decl></param>)</parameter_list>
        <block pos:line="272" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="273" pos:column="13">var</name></type> <name pos:line="273" pos:column="17">result</name> <init pos:line="273" pos:column="24">= <expr><op:operator pos:line="273" pos:column="26">new</op:operator> <call><name><name pos:line="273" pos:column="30">SortedDictionary</name><argument_list pos:line="273" pos:column="46">&lt;<argument><name pos:line="273" pos:column="47">string</name></argument>, <argument><name><name pos:line="273" pos:column="55">PackageItem</name><argument_list pos:line="273" pos:column="66">&lt;<argument><name pos:line="273" pos:column="67">T</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list pos:line="273" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="274" pos:column="13">var</name></type> <name pos:line="274" pos:column="17">otherPackage</name> <init pos:line="274" pos:column="30">= <expr><op:operator pos:line="274" pos:column="32">new</op:operator> <name pos:line="274" pos:column="36">PackageItemDetail</name> <block pos:line="274" pos:column="54">{ <expr><name pos:line="274" pos:column="56">Name</name> <op:operator pos:line="274" pos:column="61">=</op:operator> <lit:literal type="string" pos:line="274" pos:column="63">"Other"</lit:literal></expr>, <expr><name pos:line="274" pos:column="72">Assembly</name> <op:operator pos:line="274" pos:column="81">=</op:operator> <name><name pos:line="274" pos:column="83">string</name><op:operator pos:line="274" pos:column="89">.</op:operator><name pos:line="274" pos:column="90">Empty</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

            <if pos:line="276" pos:column="13">if <condition pos:line="276" pos:column="16">(<expr><name pos:line="276" pos:column="17">items</name> <op:operator pos:line="276" pos:column="23">!=</op:operator> <name pos:line="276" pos:column="26">null</name></expr>)</condition><then pos:line="276" pos:column="31">
            <block pos:line="277" pos:column="13">{
                <foreach pos:line="278" pos:column="17">foreach (<init><decl><type><name pos:line="278" pos:column="26">var</name></type> <name pos:line="278" pos:column="30">item</name> <range pos:line="278" pos:column="35">in <expr><name pos:line="278" pos:column="38">items</name></expr></range></decl></init>)
                <block pos:line="279" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="280" pos:column="21">PackageItemDetail</name></type> <name pos:line="280" pos:column="39">package</name></decl>;</decl_stmt>
                    <if pos:line="281" pos:column="21">if <condition pos:line="281" pos:column="24">(<expr><op:operator pos:line="281" pos:column="25">!</op:operator><call><name><name pos:line="281" pos:column="26">packages</name><op:operator pos:line="281" pos:column="34">.</op:operator><name pos:line="281" pos:column="35">TryGetValue</name></name><argument_list pos:line="281" pos:column="46">(<argument><expr><call><name><name pos:line="281" pos:column="47">item</name><op:operator pos:line="281" pos:column="51">.</op:operator><name pos:line="281" pos:column="52">GetType</name></name><argument_list pos:line="281" pos:column="59">()</argument_list></call><op:operator pos:line="281" pos:column="61">.</op:operator><name><name pos:line="281" pos:column="62">Assembly</name><op:operator pos:line="281" pos:column="70">.</op:operator><name pos:line="281" pos:column="71">FullName</name></name></expr></argument>, <argument><expr pos:line="281" pos:column="81">out <name pos:line="281" pos:column="85">package</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="281" pos:column="94">
                    <block pos:line="282" pos:column="21">{
                        <expr_stmt><expr><name pos:line="283" pos:column="25">package</name> <op:operator pos:line="283" pos:column="33">=</op:operator> <name pos:line="283" pos:column="35">otherPackage</name></expr>;</expr_stmt>
                    }</block></then></if>

                    <decl_stmt><decl><type><name><name pos:line="286" pos:column="21">PackageItem</name><argument_list pos:line="286" pos:column="32">&lt;<argument><name pos:line="286" pos:column="33">T</name></argument>&gt;</argument_list></name></type> <name pos:line="286" pos:column="36">entry</name></decl>;</decl_stmt>
                    <if pos:line="287" pos:column="21">if <condition pos:line="287" pos:column="24">(<expr><op:operator pos:line="287" pos:column="25">!</op:operator><call><name><name pos:line="287" pos:column="26">result</name><op:operator pos:line="287" pos:column="32">.</op:operator><name pos:line="287" pos:column="33">TryGetValue</name></name><argument_list pos:line="287" pos:column="44">(<argument><expr><name><name pos:line="287" pos:column="45">package</name><op:operator pos:line="287" pos:column="52">.</op:operator><name pos:line="287" pos:column="53">Assembly</name></name></expr></argument>, <argument><expr pos:line="287" pos:column="63">out <name pos:line="287" pos:column="67">entry</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="287" pos:column="74">
                    <block pos:line="288" pos:column="21">{
                        <expr_stmt><expr><name pos:line="289" pos:column="25">entry</name> <op:operator pos:line="289" pos:column="31">=</op:operator> <name><name pos:line="289" pos:column="33">result</name><index pos:line="289" pos:column="39">[<expr><name><name pos:line="289" pos:column="40">package</name><op:operator pos:line="289" pos:column="47">.</op:operator><name pos:line="289" pos:column="48">Assembly</name></name></expr>]</index></name> <op:operator pos:line="289" pos:column="58">=</op:operator> <op:operator pos:line="289" pos:column="60">new</op:operator> <call><name><name pos:line="289" pos:column="64">PackageItem</name><argument_list pos:line="289" pos:column="75">&lt;<argument><name pos:line="289" pos:column="76">T</name></argument>&gt;</argument_list></name><argument_list pos:line="289" pos:column="78">()</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><name><name pos:line="290" pos:column="25">entry</name><op:operator pos:line="290" pos:column="30">.</op:operator><name pos:line="290" pos:column="31">Package</name></name> <op:operator pos:line="290" pos:column="39">=</op:operator> <name pos:line="290" pos:column="41">package</name></expr>;</expr_stmt>
                    }</block></then></if>

                    <expr_stmt><expr><call><name><name pos:line="293" pos:column="21">entry</name><op:operator pos:line="293" pos:column="26">.</op:operator><name pos:line="293" pos:column="27">Items</name><op:operator pos:line="293" pos:column="32">.</op:operator><name pos:line="293" pos:column="33">Add</name></name><argument_list pos:line="293" pos:column="36">(<argument><expr><name pos:line="293" pos:column="37">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></foreach>
            }</block></then></if>

            <return pos:line="297" pos:column="13">return <expr><name pos:line="297" pos:column="20">result</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="300" pos:column="9">private</specifier> <specifier pos:line="300" pos:column="17">static</specifier> <name><name pos:line="300" pos:column="24">IDictionary</name><argument_list pos:line="300" pos:column="35">&lt;<argument><name pos:line="300" pos:column="36">string</name></argument>, <argument><name pos:line="300" pos:column="44">PackageItemDetail</name></argument>&gt;</argument_list></name></type> <name pos:line="300" pos:column="63">FindPackages</name><parameter_list pos:line="300" pos:column="75">()</parameter_list>
        <block pos:line="301" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="302" pos:column="13">var</name></type> <name pos:line="302" pos:column="17">result</name> <init pos:line="302" pos:column="24">= <expr><op:operator pos:line="302" pos:column="26">new</op:operator> <call><name><name pos:line="302" pos:column="30">Dictionary</name><argument_list pos:line="302" pos:column="40">&lt;<argument><name pos:line="302" pos:column="41">string</name></argument>, <argument><name pos:line="302" pos:column="49">PackageItemDetail</name></argument>&gt;</argument_list></name><argument_list pos:line="302" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="303" pos:column="13">var</name></type> <name pos:line="303" pos:column="17">packages</name> <init pos:line="303" pos:column="26">= <expr><call><name><name pos:line="303" pos:column="28">NuGetPackage</name><op:operator pos:line="303" pos:column="40">.</op:operator><name pos:line="303" pos:column="41">GetRegisteredPackages</name></name><argument_list pos:line="303" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <foreach pos:line="305" pos:column="13">foreach (<init><decl><type><name pos:line="305" pos:column="22">var</name></type> <name pos:line="305" pos:column="26">package</name> <range pos:line="305" pos:column="34">in <expr><name pos:line="305" pos:column="37">packages</name></expr></range></decl></init>)
            <block pos:line="306" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="307" pos:column="17">var</name></type> <name pos:line="307" pos:column="21">name</name> <init pos:line="307" pos:column="26">= <expr><call><name><name pos:line="307" pos:column="28">package</name><op:operator pos:line="307" pos:column="35">.</op:operator><name pos:line="307" pos:column="36">GetAssemblyName</name></name><argument_list pos:line="307" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="308" pos:column="17">result</name><index pos:line="308" pos:column="23">[<expr><name pos:line="308" pos:column="24">name</name></expr>]</index></name> <op:operator pos:line="308" pos:column="30">=</op:operator> <op:operator pos:line="308" pos:column="32">new</op:operator> <name pos:line="308" pos:column="36">PackageItemDetail</name> <block pos:line="308" pos:column="54">{ <expr><name pos:line="308" pos:column="56">Name</name> <op:operator pos:line="308" pos:column="61">=</op:operator> <call><name><name pos:line="308" pos:column="63">package</name><op:operator pos:line="308" pos:column="70">.</op:operator><name pos:line="308" pos:column="71">GetId</name></name><argument_list pos:line="308" pos:column="76">()</argument_list></call></expr><op:operator pos:line="308" pos:column="78">,</op:operator> <expr><name pos:line="308" pos:column="80">Version</name> <op:operator pos:line="308" pos:column="88">=</op:operator> <call><name><name pos:line="308" pos:column="90">package</name><op:operator pos:line="308" pos:column="97">.</op:operator><name pos:line="308" pos:column="98">GetVersion</name></name><argument_list pos:line="308" pos:column="108">()</argument_list></call></expr><op:operator pos:line="308" pos:column="110">,</op:operator> <expr><name pos:line="308" pos:column="112">Assembly</name> <op:operator pos:line="308" pos:column="121">=</op:operator> <name pos:line="308" pos:column="123">name</name></expr> }</block></expr>;</expr_stmt>
            }</block></foreach>

            <return pos:line="311" pos:column="13">return <expr><name pos:line="311" pos:column="20">result</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="314" pos:column="9">private</specifier> <specifier pos:line="314" pos:column="17">static</specifier> <name><name pos:line="314" pos:column="24">IEnumerable</name><argument_list pos:line="314" pos:column="35">&lt;<argument><name pos:line="314" pos:column="36">string</name></argument>&gt;</argument_list></name></type> <name pos:line="314" pos:column="44">DetectDuplicateResources</name><parameter_list pos:line="314" pos:column="68">(<param><decl><type><name><name pos:line="314" pos:column="69">IEnumerable</name><argument_list pos:line="314" pos:column="80">&lt;<argument><name pos:line="314" pos:column="81">IResource</name></argument>&gt;</argument_list></name></type> <name pos:line="314" pos:column="92">resources</name></decl></param>)</parameter_list>
        <block pos:line="315" pos:column="9">{
            <return pos:line="316" pos:column="13">return <expr><call><name><name pos:line="316" pos:column="20">resources</name><op:operator pos:line="316" pos:column="29">.</op:operator><name pos:line="316" pos:column="30">GroupBy</name></name><argument_list pos:line="316" pos:column="37">(<argument><expr><lambda><name pos:line="316" pos:column="38">x</name> <op:operator pos:line="316" pos:column="40">=&gt;</op:operator> <name><name pos:line="316" pos:column="43">x</name><op:operator pos:line="316" pos:column="44">.</op:operator><name pos:line="316" pos:column="45">Name</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="316" pos:column="50">.</op:operator><call><name pos:line="316" pos:column="51">Where</name><argument_list pos:line="316" pos:column="56">(<argument><expr><lambda><name pos:line="316" pos:column="57">x</name> <op:operator pos:line="316" pos:column="59">=&gt;</op:operator> <call><name><name pos:line="316" pos:column="62">x</name><op:operator pos:line="316" pos:column="63">.</op:operator><name pos:line="316" pos:column="64">Count</name></name><argument_list pos:line="316" pos:column="69">()</argument_list></call> <op:operator pos:line="316" pos:column="72">&gt;</op:operator> <lit:literal type="number" pos:line="316" pos:column="74">1</lit:literal></lambda></expr></argument>)</argument_list></call><op:operator pos:line="316" pos:column="76">.</op:operator><call><name pos:line="316" pos:column="77">Select</name><argument_list pos:line="316" pos:column="83">(<argument><expr><lambda><name pos:line="316" pos:column="84">x</name> <op:operator pos:line="316" pos:column="86">=&gt;</op:operator> <name><name pos:line="316" pos:column="89">x</name><op:operator pos:line="316" pos:column="90">.</op:operator><name pos:line="316" pos:column="91">Key</name></name></lambda></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <class><specifier pos:line="319" pos:column="9">private</specifier> class <name><name pos:line="319" pos:column="23">PackageItem</name><argument_list pos:line="319" pos:column="34">&lt;<argument><name pos:line="319" pos:column="35">T</name></argument>&gt;</argument_list></name>
        <block pos:line="320" pos:column="9">{
            <constructor><specifier pos:line="321" pos:column="13">public</specifier> <name pos:line="321" pos:column="20">PackageItem</name><parameter_list pos:line="321" pos:column="31">()</parameter_list>
            <block pos:line="322" pos:column="13">{
                <expr_stmt><expr><name pos:line="323" pos:column="17">Items</name> <op:operator pos:line="323" pos:column="23">=</op:operator> <op:operator pos:line="323" pos:column="25">new</op:operator> <call><name><name pos:line="323" pos:column="29">List</name><argument_list pos:line="323" pos:column="33">&lt;<argument><name pos:line="323" pos:column="34">T</name></argument>&gt;</argument_list></name><argument_list pos:line="323" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
            }</block></constructor>

            <decl_stmt><decl><type><specifier pos:line="326" pos:column="13">public</specifier> <name pos:line="326" pos:column="20">PackageItemDetail</name></type> <name pos:line="326" pos:column="38">Package</name> <block pos:line="326" pos:column="46">{ <function_decl><name pos:line="326" pos:column="48">get</name>;</function_decl> <function_decl><name pos:line="326" pos:column="53">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="328" pos:column="13">public</specifier> <name><name pos:line="328" pos:column="20">IList</name><argument_list pos:line="328" pos:column="25">&lt;<argument><name pos:line="328" pos:column="26">T</name></argument>&gt;</argument_list></name></type> <name pos:line="328" pos:column="29">Items</name> <block pos:line="328" pos:column="35">{ <function_decl><name pos:line="328" pos:column="37">get</name>;</function_decl> <function_decl><specifier pos:line="328" pos:column="42">private</specifier> <name pos:line="328" pos:column="50">set</name>;</function_decl> }</block></decl></decl_stmt>
        }</block></class>

        <class><specifier pos:line="331" pos:column="9">private</specifier> class <name pos:line="331" pos:column="23">PackageItemDetail</name>
        <block pos:line="332" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="333" pos:column="13">public</specifier> <name pos:line="333" pos:column="20">string</name></type> <name pos:line="333" pos:column="27">Name</name> <block pos:line="333" pos:column="32">{ <function_decl><name pos:line="333" pos:column="34">get</name>;</function_decl> <function_decl><name pos:line="333" pos:column="39">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="335" pos:column="13">public</specifier> <name pos:line="335" pos:column="20">string</name></type> <name pos:line="335" pos:column="27">Version</name> <block pos:line="335" pos:column="35">{ <function_decl><name pos:line="335" pos:column="37">get</name>;</function_decl> <function_decl><name pos:line="335" pos:column="42">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="337" pos:column="13">public</specifier> <name pos:line="337" pos:column="20">string</name></type> <name pos:line="337" pos:column="27">Assembly</name> <block pos:line="337" pos:column="36">{ <function_decl><name pos:line="337" pos:column="38">get</name>;</function_decl> <function_decl><name pos:line="337" pos:column="43">set</name>;</function_decl> }</block></decl></decl_stmt>
        }</block></class>
    }</block></class>
}</block></namespace></unit>
