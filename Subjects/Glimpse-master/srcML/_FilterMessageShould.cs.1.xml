<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Mvc\Message\_FilterMessageShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Reflection</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Mvc</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">Message</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Test</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Common</name></name>;</using>
<using pos:line="7" pos:column="1">using <name pos:line="7" pos:column="7">Xunit</name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Xunit</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">Extensions</name></name>;</using>

<namespace pos:line="10" pos:column="1">namespace <name><name pos:line="10" pos:column="11">Glimpse</name><op:operator pos:line="10" pos:column="18">.</op:operator><name pos:line="10" pos:column="19">Test</name><op:operator pos:line="10" pos:column="23">.</op:operator><name pos:line="10" pos:column="24">Mvc3</name><op:operator pos:line="10" pos:column="28">.</op:operator><name pos:line="10" pos:column="29">Message</name></name>
<block pos:line="11" pos:column="1">{
    <class><specifier pos:line="12" pos:column="5">public</specifier> class <name pos:line="12" pos:column="18">FilterMessageShould</name>
    <block pos:line="13" pos:column="5">{
        <function><type><attribute pos:line="14" pos:column="9">[<expr><name pos:line="14" pos:column="10">Theory</name></expr><op:operator pos:line="14" pos:column="16">,</op:operator> <expr><name pos:line="14" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="15" pos:column="9">public</specifier> <name pos:line="15" pos:column="16">void</name></type> <name pos:line="15" pos:column="21">Construct</name><parameter_list pos:line="15" pos:column="30">(<param><decl><type><name pos:line="15" pos:column="31">TimerResult</name></type> <name pos:line="15" pos:column="43">timerResult</name></decl></param>, <param><decl><type><name pos:line="15" pos:column="56">FilterCategory</name></type> <name pos:line="15" pos:column="71">filterCategory</name></decl></param>, <param><decl><type><name pos:line="15" pos:column="87">Type</name></type> <name pos:line="15" pos:column="92">resultType</name></decl></param>, <param><decl><type><name pos:line="15" pos:column="104">bool</name></type> <name pos:line="15" pos:column="109">isChildAction</name></decl></param>, <param><decl><type><name pos:line="15" pos:column="124">Type</name></type> <name pos:line="15" pos:column="129">executedType</name></decl></param>, <param><decl><type><name pos:line="15" pos:column="143">MethodInfo</name></type> <name pos:line="15" pos:column="154">method</name></decl></param>)</parameter_list>
        <block pos:line="16" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="17" pos:column="13">var</name></type> <name pos:line="17" pos:column="17">message</name> <init pos:line="17" pos:column="25">= <expr><op:operator pos:line="17" pos:column="27">new</op:operator> <call><name pos:line="17" pos:column="31">FilterMessage</name><argument_list pos:line="17" pos:column="44">(<argument><expr><name pos:line="17" pos:column="45">timerResult</name></expr></argument>, <argument><expr><name pos:line="17" pos:column="58">filterCategory</name></expr></argument>, <argument><expr><name pos:line="17" pos:column="74">resultType</name></expr></argument>, <argument><expr><name pos:line="17" pos:column="86">isChildAction</name></expr></argument>, <argument><expr><name pos:line="17" pos:column="101">executedType</name></expr></argument>, <argument><expr><name pos:line="17" pos:column="115">method</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">Assert</name><op:operator pos:line="19" pos:column="19">.</op:operator><name pos:line="19" pos:column="20">Equal</name></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name><name pos:line="19" pos:column="26">timerResult</name><op:operator pos:line="19" pos:column="37">.</op:operator><name pos:line="19" pos:column="38">Duration</name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="48">message</name><op:operator pos:line="19" pos:column="55">.</op:operator><name pos:line="19" pos:column="56">Duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">Assert</name><op:operator pos:line="20" pos:column="19">.</op:operator><name pos:line="20" pos:column="20">Equal</name></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name><name pos:line="20" pos:column="26">timerResult</name><op:operator pos:line="20" pos:column="37">.</op:operator><name pos:line="20" pos:column="38">Offset</name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="46">message</name><op:operator pos:line="20" pos:column="53">.</op:operator><name pos:line="20" pos:column="54">Offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="21" pos:column="13">Assert</name><op:operator pos:line="21" pos:column="19">.</op:operator><name pos:line="21" pos:column="20">Equal</name></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name><name pos:line="21" pos:column="26">timerResult</name><op:operator pos:line="21" pos:column="37">.</op:operator><name pos:line="21" pos:column="38">StartTime</name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="49">message</name><op:operator pos:line="21" pos:column="56">.</op:operator><name pos:line="21" pos:column="57">StartTime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">Assert</name><op:operator pos:line="22" pos:column="19">.</op:operator><name pos:line="22" pos:column="20">Equal</name></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">executedType</name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="40">message</name><op:operator pos:line="22" pos:column="47">.</op:operator><name pos:line="22" pos:column="48">ExecutedType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="23" pos:column="13">Assert</name><op:operator pos:line="23" pos:column="19">.</op:operator><name pos:line="23" pos:column="20">Equal</name></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">method</name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="34">message</name><op:operator pos:line="23" pos:column="41">.</op:operator><name pos:line="23" pos:column="42">ExecutedMethod</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="24" pos:column="13">Assert</name><op:operator pos:line="24" pos:column="19">.</op:operator><name pos:line="24" pos:column="20">Equal</name></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">filterCategory</name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="42">message</name><op:operator pos:line="24" pos:column="49">.</op:operator><name pos:line="24" pos:column="50">Category</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">Assert</name><op:operator pos:line="25" pos:column="19">.</op:operator><name pos:line="25" pos:column="20">Equal</name></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">resultType</name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="38">message</name><op:operator pos:line="25" pos:column="45">.</op:operator><name pos:line="25" pos:column="46">ResultType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">Assert</name><op:operator pos:line="26" pos:column="19">.</op:operator><name pos:line="26" pos:column="20">Equal</name></name><argument_list pos:line="26" pos:column="25">(<argument><expr><call><name><name pos:line="26" pos:column="26">string</name><op:operator pos:line="26" pos:column="32">.</op:operator><name pos:line="26" pos:column="33">Format</name></name><argument_list pos:line="26" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="26" pos:column="40">"{0}"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="26" pos:column="47">filterCategory</name><op:operator pos:line="26" pos:column="61">.</op:operator><name pos:line="26" pos:column="62">ToString</name></name><argument_list pos:line="26" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="75">message</name><op:operator pos:line="26" pos:column="82">.</op:operator><name pos:line="26" pos:column="83">EventName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="29" pos:column="9">[<expr><name pos:line="29" pos:column="10">Theory</name></expr><op:operator pos:line="29" pos:column="16">,</op:operator> <expr><name pos:line="29" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="30" pos:column="9">public</specifier> <name pos:line="30" pos:column="16">void</name></type> <name pos:line="30" pos:column="21">BuildDetails</name><parameter_list pos:line="30" pos:column="33">(<param><decl><type><name pos:line="30" pos:column="34">TimerResult</name></type> <name pos:line="30" pos:column="46">timerResult</name></decl></param>, <param><decl><type><name pos:line="30" pos:column="59">FilterCategory</name></type> <name pos:line="30" pos:column="74">filterCategory</name></decl></param>, <param><decl><type><name pos:line="30" pos:column="90">Type</name></type> <name pos:line="30" pos:column="95">resultType</name></decl></param>, <param><decl><type><name pos:line="30" pos:column="107">bool</name></type> <name pos:line="30" pos:column="112">isChildAction</name></decl></param>, <param><decl><type><name pos:line="30" pos:column="127">Type</name></type> <name pos:line="30" pos:column="132">executedType</name></decl></param>, <param><decl><type><name pos:line="30" pos:column="146">MethodInfo</name></type> <name pos:line="30" pos:column="157">method</name></decl></param>, <param><decl><type><name pos:line="30" pos:column="165">string</name></type> <name pos:line="30" pos:column="172">eventName</name></decl></param>, <param><decl><type><name><name pos:line="30" pos:column="183">Core</name><op:operator pos:line="30" pos:column="187">.</op:operator><name pos:line="30" pos:column="188">Message</name><op:operator pos:line="30" pos:column="195">.</op:operator><name pos:line="30" pos:column="196">TimelineCategory</name></name></type> <name pos:line="30" pos:column="213">eventCategory</name></decl></param>)</parameter_list>
        <block pos:line="31" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="32" pos:column="13">var</name></type> <name pos:line="32" pos:column="17">message</name> <init pos:line="32" pos:column="25">= <expr><op:operator pos:line="32" pos:column="27">new</op:operator> <call><name pos:line="32" pos:column="31">FilterMessage</name><argument_list pos:line="32" pos:column="44">(<argument><expr><name pos:line="32" pos:column="45">timerResult</name></expr></argument>, <argument><expr><name pos:line="32" pos:column="58">filterCategory</name></expr></argument>, <argument><expr><name pos:line="32" pos:column="74">resultType</name></expr></argument>, <argument><expr><name pos:line="32" pos:column="86">isChildAction</name></expr></argument>, <argument><expr><name pos:line="32" pos:column="101">executedType</name></expr></argument>, <argument><expr><name pos:line="32" pos:column="115">method</name></expr></argument>, <argument><expr><name pos:line="32" pos:column="123">eventName</name></expr></argument>, <argument><expr><name pos:line="32" pos:column="134">eventCategory</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="34" pos:column="13">var</name></type> <name pos:line="34" pos:column="17">dictionary</name> <init pos:line="34" pos:column="28">= <expr><op:operator pos:line="34" pos:column="30">new</op:operator> <call><name><name pos:line="34" pos:column="34">Dictionary</name><argument_list pos:line="34" pos:column="44">&lt;<argument><name pos:line="34" pos:column="45">string</name></argument>, <argument><name pos:line="34" pos:column="53">object</name></argument>&gt;</argument_list></name><argument_list pos:line="34" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="35" pos:column="13">message</name><op:operator pos:line="35" pos:column="20">.</op:operator><name pos:line="35" pos:column="21">BuildDetails</name></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">dictionary</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="37" pos:column="13">Assert</name><op:operator pos:line="37" pos:column="19">.</op:operator><name pos:line="37" pos:column="20">Equal</name></name><argument_list pos:line="37" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="37" pos:column="26">4</lit:literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="29">dictionary</name><op:operator pos:line="37" pos:column="39">.</op:operator><name pos:line="37" pos:column="40">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">Assert</name><op:operator pos:line="38" pos:column="19">.</op:operator><name pos:line="38" pos:column="20">Equal</name></name><argument_list pos:line="38" pos:column="25">(<argument><expr><name pos:line="38" pos:column="26">resultType</name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="38">dictionary</name><index pos:line="38" pos:column="48">[<expr><lit:literal type="string" pos:line="38" pos:column="49">"ResultType"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
