<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Core\Framework\GlimpseRuntimeShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Linq</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Core</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Extensions</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Glimpse</name><op:operator pos:line="8" pos:column="14">.</op:operator><name pos:line="8" pos:column="15">Core</name><op:operator pos:line="8" pos:column="19">.</op:operator><name pos:line="8" pos:column="20">Framework</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Glimpse</name><op:operator pos:line="9" pos:column="14">.</op:operator><name pos:line="9" pos:column="15">Test</name><op:operator pos:line="9" pos:column="19">.</op:operator><name pos:line="9" pos:column="20">Core</name><op:operator pos:line="9" pos:column="24">.</op:operator><name pos:line="9" pos:column="25">TestDoubles</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Glimpse</name><op:operator pos:line="10" pos:column="14">.</op:operator><name pos:line="10" pos:column="15">Test</name><op:operator pos:line="10" pos:column="19">.</op:operator><name pos:line="10" pos:column="20">Core</name><op:operator pos:line="10" pos:column="24">.</op:operator><name pos:line="10" pos:column="25">Tester</name></name>;</using>
<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">Moq</name>;</using>
<using pos:line="12" pos:column="1">using <name pos:line="12" pos:column="7">Xunit</name>;</using>

<namespace pos:line="14" pos:column="1">namespace <name><name pos:line="14" pos:column="11">Glimpse</name><op:operator pos:line="14" pos:column="18">.</op:operator><name pos:line="14" pos:column="19">Test</name><op:operator pos:line="14" pos:column="23">.</op:operator><name pos:line="14" pos:column="24">Core</name><op:operator pos:line="14" pos:column="28">.</op:operator><name pos:line="14" pos:column="29">Framework</name></name>
<block pos:line="15" pos:column="1">{
    <class><specifier pos:line="16" pos:column="5">public</specifier> class <name pos:line="16" pos:column="18">GlimpseRuntimeShould</name> <super pos:line="16" pos:column="39">: <name pos:line="16" pos:column="41">IDisposable</name></super>
    <block pos:line="17" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">private</specifier> <name pos:line="18" pos:column="17">GlimpseRuntimeTester</name></type> <name pos:line="18" pos:column="38">Runtime</name> <block pos:line="18" pos:column="46">{ <function_decl><name pos:line="18" pos:column="48">get</name>;</function_decl> <function_decl><name pos:line="18" pos:column="53">set</name>;</function_decl> }</block></decl></decl_stmt>

        <constructor><specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">GlimpseRuntimeShould</name><parameter_list pos:line="20" pos:column="36">()</parameter_list>
        <block pos:line="21" pos:column="9">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">Runtime</name> <op:operator pos:line="22" pos:column="21">=</op:operator> <call><name><name pos:line="22" pos:column="23">GlimpseRuntimeTester</name><op:operator pos:line="22" pos:column="43">.</op:operator><name pos:line="22" pos:column="44">Create</name></name><argument_list pos:line="22" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="25" pos:column="9">public</specifier> <name pos:line="25" pos:column="16">void</name></type> <name pos:line="25" pos:column="21">Dispose</name><parameter_list pos:line="25" pos:column="28">()</parameter_list>
        <block pos:line="26" pos:column="9">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">Runtime</name> <op:operator pos:line="27" pos:column="21">=</op:operator> <name pos:line="27" pos:column="23">null</name></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="30" pos:column="9">[<expr><name pos:line="30" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">void</name></type> <name pos:line="31" pos:column="21">SetRequestIdOnBeginRequest</name><parameter_list pos:line="31" pos:column="47">()</parameter_list>
        <block pos:line="32" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">Runtime</name><op:operator pos:line="33" pos:column="20">.</op:operator><name pos:line="33" pos:column="21">FrameworkProviderMock</name><op:operator pos:line="33" pos:column="42">.</op:operator><name pos:line="33" pos:column="43">Setup</name></name><argument_list pos:line="33" pos:column="48">(<argument><expr><lambda><name pos:line="33" pos:column="49">fp</name> <op:operator pos:line="33" pos:column="52">=&gt;</op:operator> <name><name pos:line="33" pos:column="55">fp</name><op:operator pos:line="33" pos:column="57">.</op:operator><name pos:line="33" pos:column="58">HttpRequestStore</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="33" pos:column="75">.</op:operator><call><name pos:line="33" pos:column="76">Returns</name><argument_list pos:line="33" pos:column="83">(<argument><expr><name><name pos:line="33" pos:column="84">Runtime</name><op:operator pos:line="33" pos:column="91">.</op:operator><name pos:line="33" pos:column="92">HttpRequestStoreMock</name><op:operator pos:line="33" pos:column="112">.</op:operator><name pos:line="33" pos:column="113">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="35" pos:column="13">Runtime</name><op:operator pos:line="35" pos:column="20">.</op:operator><name pos:line="35" pos:column="21">Initialize</name></name><argument_list pos:line="35" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">Runtime</name><op:operator pos:line="36" pos:column="20">.</op:operator><name pos:line="36" pos:column="21">BeginRequest</name></name><argument_list pos:line="36" pos:column="33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">Runtime</name><op:operator pos:line="38" pos:column="20">.</op:operator><name pos:line="38" pos:column="21">HttpRequestStoreMock</name><op:operator pos:line="38" pos:column="41">.</op:operator><name pos:line="38" pos:column="42">Verify</name></name><argument_list pos:line="38" pos:column="48">(<argument><expr><lambda><name pos:line="38" pos:column="49">store</name> <op:operator pos:line="38" pos:column="55">=&gt;</op:operator> <call><name><name pos:line="38" pos:column="58">store</name><op:operator pos:line="38" pos:column="63">.</op:operator><name pos:line="38" pos:column="64">Set</name></name><argument_list pos:line="38" pos:column="67">(<argument><expr><name><name pos:line="38" pos:column="68">Constants</name><op:operator pos:line="38" pos:column="77">.</op:operator><name pos:line="38" pos:column="78">RequestIdKey</name></name></expr></argument>, <argument><expr><call><name><name pos:line="38" pos:column="92">It</name><op:operator pos:line="38" pos:column="94">.</op:operator><name><name pos:line="38" pos:column="95">IsAny</name><argument_list pos:line="38" pos:column="100">&lt;<argument><name pos:line="38" pos:column="101">Guid</name></argument>&gt;</argument_list></name></name><argument_list pos:line="38" pos:column="106">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="41" pos:column="9">[<expr><name pos:line="41" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="42" pos:column="9">public</specifier> <name pos:line="42" pos:column="16">void</name></type> <name pos:line="42" pos:column="21">StartGlobalStopwatchOnBeginRequest</name><parameter_list pos:line="42" pos:column="55">()</parameter_list>
        <block pos:line="43" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="44" pos:column="13">Runtime</name><op:operator pos:line="44" pos:column="20">.</op:operator><name pos:line="44" pos:column="21">FrameworkProviderMock</name><op:operator pos:line="44" pos:column="42">.</op:operator><name pos:line="44" pos:column="43">Setup</name></name><argument_list pos:line="44" pos:column="48">(<argument><expr><lambda><name pos:line="44" pos:column="49">fp</name> <op:operator pos:line="44" pos:column="52">=&gt;</op:operator> <name><name pos:line="44" pos:column="55">fp</name><op:operator pos:line="44" pos:column="57">.</op:operator><name pos:line="44" pos:column="58">HttpRequestStore</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="44" pos:column="75">.</op:operator><call><name pos:line="44" pos:column="76">Returns</name><argument_list pos:line="44" pos:column="83">(<argument><expr><name><name pos:line="44" pos:column="84">Runtime</name><op:operator pos:line="44" pos:column="91">.</op:operator><name pos:line="44" pos:column="92">HttpRequestStoreMock</name><op:operator pos:line="44" pos:column="112">.</op:operator><name pos:line="44" pos:column="113">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="45" pos:column="13">Runtime</name><op:operator pos:line="45" pos:column="20">.</op:operator><name pos:line="45" pos:column="21">Initialize</name></name><argument_list pos:line="45" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">Runtime</name><op:operator pos:line="46" pos:column="20">.</op:operator><name pos:line="46" pos:column="21">BeginRequest</name></name><argument_list pos:line="46" pos:column="33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">Runtime</name><op:operator pos:line="48" pos:column="20">.</op:operator><name pos:line="48" pos:column="21">HttpRequestStoreMock</name><op:operator pos:line="48" pos:column="41">.</op:operator><name pos:line="48" pos:column="42">Verify</name></name><argument_list pos:line="48" pos:column="48">(<argument><expr><lambda><name pos:line="48" pos:column="49">store</name> <op:operator pos:line="48" pos:column="55">=&gt;</op:operator> <call><name><name pos:line="48" pos:column="58">store</name><op:operator pos:line="48" pos:column="63">.</op:operator><name pos:line="48" pos:column="64">Set</name></name><argument_list pos:line="48" pos:column="67">(<argument><expr><name><name pos:line="48" pos:column="68">Constants</name><op:operator pos:line="48" pos:column="77">.</op:operator><name pos:line="48" pos:column="78">GlobalStopwatchKey</name></name></expr></argument>, <argument><expr><call><name><name pos:line="48" pos:column="98">It</name><op:operator pos:line="48" pos:column="100">.</op:operator><name><name pos:line="48" pos:column="101">IsAny</name><argument_list pos:line="48" pos:column="106">&lt;<argument><name pos:line="48" pos:column="107">Stopwatch</name></argument>&gt;</argument_list></name></name><argument_list pos:line="48" pos:column="117">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="51" pos:column="9">[<expr><name pos:line="51" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="52" pos:column="9">public</specifier> <name pos:line="52" pos:column="16">void</name></type> <name pos:line="52" pos:column="21">Construct</name><parameter_list pos:line="52" pos:column="30">()</parameter_list>
        <block pos:line="53" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="54" pos:column="13">Assert</name><op:operator pos:line="54" pos:column="19">.</op:operator><name pos:line="54" pos:column="20">False</name></name><argument_list pos:line="54" pos:column="25">(<argument><expr><call><name><name pos:line="54" pos:column="26">string</name><op:operator pos:line="54" pos:column="32">.</op:operator><name pos:line="54" pos:column="33">IsNullOrWhiteSpace</name></name><argument_list pos:line="54" pos:column="51">(<argument><expr><name><name pos:line="54" pos:column="52">GlimpseRuntime</name><op:operator pos:line="54" pos:column="66">.</op:operator><name pos:line="54" pos:column="67">Version</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="57" pos:column="9">[<expr><name pos:line="57" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="58" pos:column="9">public</specifier> <name pos:line="58" pos:column="16">void</name></type> <name pos:line="58" pos:column="21">ThrowsExceptionIfEndRequestIsCalledBeforeBeginRequest</name><parameter_list pos:line="58" pos:column="74">()</parameter_list>
        <block pos:line="59" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="60" pos:column="13">Runtime</name><op:operator pos:line="60" pos:column="20">.</op:operator><name pos:line="60" pos:column="21">Initialize</name></name><argument_list pos:line="60" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="61" pos:column="13">//runtime.BeginRequest(); commented out on purpose for this test</comment>

            <expr_stmt><expr><call><name><name pos:line="63" pos:column="13">Assert</name><op:operator pos:line="63" pos:column="19">.</op:operator><name><name pos:line="63" pos:column="20">Throws</name><argument_list pos:line="63" pos:column="26">&lt;<argument><name pos:line="63" pos:column="27">GlimpseException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="63" pos:column="44">(<argument><expr><lambda><parameter_list pos:line="63" pos:column="45">()</parameter_list> <op:operator pos:line="63" pos:column="48">=&gt;</op:operator> <call><name><name pos:line="63" pos:column="51">Runtime</name><op:operator pos:line="63" pos:column="58">.</op:operator><name pos:line="63" pos:column="59">EndRequest</name></name><argument_list pos:line="63" pos:column="69">()</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="66" pos:column="9">[<expr><name pos:line="66" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="67" pos:column="9">public</specifier> <name pos:line="67" pos:column="16">void</name></type> <name pos:line="67" pos:column="21">ThrowsExceptionIfBeginRequestIsCalledBeforeInittialize</name><parameter_list pos:line="67" pos:column="75">()</parameter_list>
        <block pos:line="68" pos:column="9">{
            <comment type="line" pos:line="69" pos:column="13">//Runtime.Initialize();commented out on purpose for this test</comment>

            <expr_stmt><expr><call><name><name pos:line="71" pos:column="13">Assert</name><op:operator pos:line="71" pos:column="19">.</op:operator><name><name pos:line="71" pos:column="20">Throws</name><argument_list pos:line="71" pos:column="26">&lt;<argument><name pos:line="71" pos:column="27">GlimpseException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="71" pos:column="44">(<argument><expr><lambda><parameter_list pos:line="71" pos:column="45">()</parameter_list> <op:operator pos:line="71" pos:column="48">=&gt;</op:operator> <call><name><name pos:line="71" pos:column="51">Runtime</name><op:operator pos:line="71" pos:column="58">.</op:operator><name pos:line="71" pos:column="59">BeginRequest</name></name><argument_list pos:line="71" pos:column="71">()</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="74" pos:column="9">[<expr><name pos:line="74" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="75" pos:column="9">public</specifier> <name pos:line="75" pos:column="16">void</name></type> <name pos:line="75" pos:column="21">ExecutePluginsWithDefaultLifeCycle</name><parameter_list pos:line="75" pos:column="55">()</parameter_list>
        <block pos:line="76" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="77" pos:column="13">Runtime</name><op:operator pos:line="77" pos:column="20">.</op:operator><name pos:line="77" pos:column="21">Configuration</name><op:operator pos:line="77" pos:column="34">.</op:operator><name pos:line="77" pos:column="35">Tabs</name><op:operator pos:line="77" pos:column="39">.</op:operator><name pos:line="77" pos:column="40">Add</name></name><argument_list pos:line="77" pos:column="43">(<argument><expr><name><name pos:line="77" pos:column="44">Runtime</name><op:operator pos:line="77" pos:column="51">.</op:operator><name pos:line="77" pos:column="52">TabMock</name><op:operator pos:line="77" pos:column="59">.</op:operator><name pos:line="77" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="78" pos:column="13">Runtime</name><op:operator pos:line="78" pos:column="20">.</op:operator><name pos:line="78" pos:column="21">Initialize</name></name><argument_list pos:line="78" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="80" pos:column="13">Runtime</name><op:operator pos:line="80" pos:column="20">.</op:operator><name pos:line="80" pos:column="21">BeginRequest</name></name><argument_list pos:line="80" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="81" pos:column="13">Runtime</name><op:operator pos:line="81" pos:column="20">.</op:operator><name pos:line="81" pos:column="21">EndRequest</name></name><argument_list pos:line="81" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="83" pos:column="13">var</name></type> <name pos:line="83" pos:column="17">results</name> <init pos:line="83" pos:column="25">= <expr><call><name><name pos:line="83" pos:column="27">Runtime</name><op:operator pos:line="83" pos:column="34">.</op:operator><name pos:line="83" pos:column="35">Configuration</name><op:operator pos:line="83" pos:column="48">.</op:operator><name pos:line="83" pos:column="49">FrameworkProvider</name><op:operator pos:line="83" pos:column="66">.</op:operator><name pos:line="83" pos:column="67">HttpRequestStore</name><op:operator pos:line="83" pos:column="83">.</op:operator><name><name pos:line="83" pos:column="84">Get</name><argument_list pos:line="83" pos:column="87">&lt;<argument><name><name pos:line="83" pos:column="88">IDictionary</name><argument_list pos:line="83" pos:column="99">&lt;<argument><name pos:line="83" pos:column="100">string</name></argument>, <argument><name pos:line="83" pos:column="108">TabResult</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="83" pos:column="119">(<argument><expr><name><name pos:line="83" pos:column="120">Constants</name><op:operator pos:line="83" pos:column="129">.</op:operator><name pos:line="83" pos:column="130">TabResultsDataStoreKey</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="84" pos:column="13">Assert</name><op:operator pos:line="84" pos:column="19">.</op:operator><name pos:line="84" pos:column="20">NotNull</name></name><argument_list pos:line="84" pos:column="27">(<argument><expr><name pos:line="84" pos:column="28">results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="85" pos:column="13">Assert</name><op:operator pos:line="85" pos:column="19">.</op:operator><name pos:line="85" pos:column="20">Equal</name></name><argument_list pos:line="85" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="85" pos:column="26">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="29">results</name><op:operator pos:line="85" pos:column="36">.</op:operator><name pos:line="85" pos:column="37">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="87" pos:column="13">Runtime</name><op:operator pos:line="87" pos:column="20">.</op:operator><name pos:line="87" pos:column="21">TabMock</name><op:operator pos:line="87" pos:column="28">.</op:operator><name pos:line="87" pos:column="29">Verify</name></name><argument_list pos:line="87" pos:column="35">(<argument><expr><lambda><name pos:line="87" pos:column="36">p</name> <op:operator pos:line="87" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="87" pos:column="41">p</name><op:operator pos:line="87" pos:column="42">.</op:operator><name pos:line="87" pos:column="43">GetData</name></name><argument_list pos:line="87" pos:column="50">(<argument><expr><call><name><name pos:line="87" pos:column="51">It</name><op:operator pos:line="87" pos:column="53">.</op:operator><name><name pos:line="87" pos:column="54">IsAny</name><argument_list pos:line="87" pos:column="59">&lt;<argument><name pos:line="87" pos:column="60">ITabContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="87" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="87" pos:column="77">Times</name><op:operator pos:line="87" pos:column="82">.</op:operator><name pos:line="87" pos:column="83">Once</name></name><argument_list pos:line="87" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="90" pos:column="9">[<expr><name pos:line="90" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="91" pos:column="9">public</specifier> <name pos:line="91" pos:column="16">void</name></type> <name pos:line="91" pos:column="21">ExecutePluginsWithLifeCycleMismatch</name><parameter_list pos:line="91" pos:column="56">()</parameter_list>
        <block pos:line="92" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="93" pos:column="13">Runtime</name><op:operator pos:line="93" pos:column="20">.</op:operator><name pos:line="93" pos:column="21">TabMock</name><op:operator pos:line="93" pos:column="28">.</op:operator><name pos:line="93" pos:column="29">Setup</name></name><argument_list pos:line="93" pos:column="34">(<argument><expr><lambda><name pos:line="93" pos:column="35">m</name> <op:operator pos:line="93" pos:column="37">=&gt;</op:operator> <name><name pos:line="93" pos:column="40">m</name><op:operator pos:line="93" pos:column="41">.</op:operator><name pos:line="93" pos:column="42">ExecuteOn</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="93" pos:column="52">.</op:operator><call><name pos:line="93" pos:column="53">Returns</name><argument_list pos:line="93" pos:column="60">(<argument><expr><name><name pos:line="93" pos:column="61">RuntimeEvent</name><op:operator pos:line="93" pos:column="73">.</op:operator><name pos:line="93" pos:column="74">EndRequest</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="95" pos:column="13">Runtime</name><op:operator pos:line="95" pos:column="20">.</op:operator><name pos:line="95" pos:column="21">Configuration</name><op:operator pos:line="95" pos:column="34">.</op:operator><name pos:line="95" pos:column="35">Tabs</name><op:operator pos:line="95" pos:column="39">.</op:operator><name pos:line="95" pos:column="40">Add</name></name><argument_list pos:line="95" pos:column="43">(<argument><expr><name><name pos:line="95" pos:column="44">Runtime</name><op:operator pos:line="95" pos:column="51">.</op:operator><name pos:line="95" pos:column="52">TabMock</name><op:operator pos:line="95" pos:column="59">.</op:operator><name pos:line="95" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="96" pos:column="13">Runtime</name><op:operator pos:line="96" pos:column="20">.</op:operator><name pos:line="96" pos:column="21">Initialize</name></name><argument_list pos:line="96" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="97" pos:column="13">Runtime</name><op:operator pos:line="97" pos:column="20">.</op:operator><name pos:line="97" pos:column="21">BeginRequest</name></name><argument_list pos:line="97" pos:column="33">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="99" pos:column="13">var</name></type> <name pos:line="99" pos:column="17">results</name> <init pos:line="99" pos:column="25">= <expr><call><name><name pos:line="99" pos:column="27">Runtime</name><op:operator pos:line="99" pos:column="34">.</op:operator><name pos:line="99" pos:column="35">Configuration</name><op:operator pos:line="99" pos:column="48">.</op:operator><name pos:line="99" pos:column="49">FrameworkProvider</name><op:operator pos:line="99" pos:column="66">.</op:operator><name pos:line="99" pos:column="67">HttpRequestStore</name><op:operator pos:line="99" pos:column="83">.</op:operator><name><name pos:line="99" pos:column="84">Get</name><argument_list pos:line="99" pos:column="87">&lt;<argument><name><name pos:line="99" pos:column="88">IDictionary</name><argument_list pos:line="99" pos:column="99">&lt;<argument><name pos:line="99" pos:column="100">string</name></argument>, <argument><name pos:line="99" pos:column="108">TabResult</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="99" pos:column="119">(<argument><expr><name><name pos:line="99" pos:column="120">Constants</name><op:operator pos:line="99" pos:column="129">.</op:operator><name pos:line="99" pos:column="130">TabResultsDataStoreKey</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="100" pos:column="13">Assert</name><op:operator pos:line="100" pos:column="19">.</op:operator><name pos:line="100" pos:column="20">NotNull</name></name><argument_list pos:line="100" pos:column="27">(<argument><expr><name pos:line="100" pos:column="28">results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="101" pos:column="13">Assert</name><op:operator pos:line="101" pos:column="19">.</op:operator><name pos:line="101" pos:column="20">Equal</name></name><argument_list pos:line="101" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="101" pos:column="26">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="29">results</name><op:operator pos:line="101" pos:column="36">.</op:operator><name pos:line="101" pos:column="37">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="103" pos:column="13">Runtime</name><op:operator pos:line="103" pos:column="20">.</op:operator><name pos:line="103" pos:column="21">TabMock</name><op:operator pos:line="103" pos:column="28">.</op:operator><name pos:line="103" pos:column="29">Verify</name></name><argument_list pos:line="103" pos:column="35">(<argument><expr><lambda><name pos:line="103" pos:column="36">p</name> <op:operator pos:line="103" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="103" pos:column="41">p</name><op:operator pos:line="103" pos:column="42">.</op:operator><name pos:line="103" pos:column="43">GetData</name></name><argument_list pos:line="103" pos:column="50">(<argument><expr><call><name><name pos:line="103" pos:column="51">It</name><op:operator pos:line="103" pos:column="53">.</op:operator><name><name pos:line="103" pos:column="54">IsAny</name><argument_list pos:line="103" pos:column="59">&lt;<argument><name pos:line="103" pos:column="60">ITabContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="103" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="103" pos:column="77">Times</name><op:operator pos:line="103" pos:column="82">.</op:operator><name pos:line="103" pos:column="83">Never</name></name><argument_list pos:line="103" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="106" pos:column="9">[<expr><name pos:line="106" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="107" pos:column="9">public</specifier> <name pos:line="107" pos:column="16">void</name></type> <name pos:line="107" pos:column="21">ExecutePluginsMakeSureNamesAreJsonSafe</name><parameter_list pos:line="107" pos:column="59">()</parameter_list>
        <block pos:line="108" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="109" pos:column="13">Runtime</name><op:operator pos:line="109" pos:column="20">.</op:operator><name pos:line="109" pos:column="21">Configuration</name><op:operator pos:line="109" pos:column="34">.</op:operator><name pos:line="109" pos:column="35">Tabs</name><op:operator pos:line="109" pos:column="39">.</op:operator><name pos:line="109" pos:column="40">Add</name></name><argument_list pos:line="109" pos:column="43">(<argument><expr><name><name pos:line="109" pos:column="44">Runtime</name><op:operator pos:line="109" pos:column="51">.</op:operator><name pos:line="109" pos:column="52">TabMock</name><op:operator pos:line="109" pos:column="59">.</op:operator><name pos:line="109" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="110" pos:column="13">Runtime</name><op:operator pos:line="110" pos:column="20">.</op:operator><name pos:line="110" pos:column="21">Initialize</name></name><argument_list pos:line="110" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="111" pos:column="13">Runtime</name><op:operator pos:line="111" pos:column="20">.</op:operator><name pos:line="111" pos:column="21">BeginRequest</name></name><argument_list pos:line="111" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="112" pos:column="13">Runtime</name><op:operator pos:line="112" pos:column="20">.</op:operator><name pos:line="112" pos:column="21">EndRequest</name></name><argument_list pos:line="112" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="114" pos:column="13">var</name></type> <name pos:line="114" pos:column="17">results</name> <init pos:line="114" pos:column="25">= <expr><call><name><name pos:line="114" pos:column="27">Runtime</name><op:operator pos:line="114" pos:column="34">.</op:operator><name pos:line="114" pos:column="35">Configuration</name><op:operator pos:line="114" pos:column="48">.</op:operator><name pos:line="114" pos:column="49">FrameworkProvider</name><op:operator pos:line="114" pos:column="66">.</op:operator><name pos:line="114" pos:column="67">HttpRequestStore</name><op:operator pos:line="114" pos:column="83">.</op:operator><name><name pos:line="114" pos:column="84">Get</name><argument_list pos:line="114" pos:column="87">&lt;<argument><name><name pos:line="114" pos:column="88">IDictionary</name><argument_list pos:line="114" pos:column="99">&lt;<argument><name pos:line="114" pos:column="100">string</name></argument>, <argument><name pos:line="114" pos:column="108">TabResult</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="114" pos:column="119">(<argument><expr><name><name pos:line="114" pos:column="120">Constants</name><op:operator pos:line="114" pos:column="129">.</op:operator><name pos:line="114" pos:column="130">TabResultsDataStoreKey</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="115" pos:column="13">Assert</name><op:operator pos:line="115" pos:column="19">.</op:operator><name pos:line="115" pos:column="20">NotNull</name></name><argument_list pos:line="115" pos:column="27">(<argument><expr><name pos:line="115" pos:column="28">results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="116" pos:column="13">Assert</name><op:operator pos:line="116" pos:column="19">.</op:operator><name pos:line="116" pos:column="20">Equal</name></name><argument_list pos:line="116" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="116" pos:column="26">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="29">results</name><op:operator pos:line="116" pos:column="36">.</op:operator><name pos:line="116" pos:column="37">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="117" pos:column="13">Assert</name><op:operator pos:line="117" pos:column="19">.</op:operator><name pos:line="117" pos:column="20">Contains</name></name><argument_list pos:line="117" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="117" pos:column="29">"castle_proxies_itabproxy"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="117" pos:column="57">results</name><op:operator pos:line="117" pos:column="64">.</op:operator><name pos:line="117" pos:column="65">First</name></name><argument_list pos:line="117" pos:column="70">()</argument_list></call><op:operator pos:line="117" pos:column="72">.</op:operator><name pos:line="117" pos:column="73">Key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="120" pos:column="9">[<expr><name pos:line="120" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="121" pos:column="9">public</specifier> <name pos:line="121" pos:column="16">void</name></type> <name pos:line="121" pos:column="21">ExecutePluginsWithMatchingRuntimeContextType</name><parameter_list pos:line="121" pos:column="65">()</parameter_list>
        <block pos:line="122" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="123" pos:column="13">Runtime</name><op:operator pos:line="123" pos:column="20">.</op:operator><name pos:line="123" pos:column="21">Configuration</name><op:operator pos:line="123" pos:column="34">.</op:operator><name pos:line="123" pos:column="35">Tabs</name><op:operator pos:line="123" pos:column="39">.</op:operator><name pos:line="123" pos:column="40">Add</name></name><argument_list pos:line="123" pos:column="43">(<argument><expr><name><name pos:line="123" pos:column="44">Runtime</name><op:operator pos:line="123" pos:column="51">.</op:operator><name pos:line="123" pos:column="52">TabMock</name><op:operator pos:line="123" pos:column="59">.</op:operator><name pos:line="123" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="124" pos:column="13">Runtime</name><op:operator pos:line="124" pos:column="20">.</op:operator><name pos:line="124" pos:column="21">Initialize</name></name><argument_list pos:line="124" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="125" pos:column="13">Runtime</name><op:operator pos:line="125" pos:column="20">.</op:operator><name pos:line="125" pos:column="21">BeginRequest</name></name><argument_list pos:line="125" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="126" pos:column="13">Runtime</name><op:operator pos:line="126" pos:column="20">.</op:operator><name pos:line="126" pos:column="21">EndRequest</name></name><argument_list pos:line="126" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="128" pos:column="13">var</name></type> <name pos:line="128" pos:column="17">results</name> <init pos:line="128" pos:column="25">= <expr><call><name><name pos:line="128" pos:column="27">Runtime</name><op:operator pos:line="128" pos:column="34">.</op:operator><name pos:line="128" pos:column="35">Configuration</name><op:operator pos:line="128" pos:column="48">.</op:operator><name pos:line="128" pos:column="49">FrameworkProvider</name><op:operator pos:line="128" pos:column="66">.</op:operator><name pos:line="128" pos:column="67">HttpRequestStore</name><op:operator pos:line="128" pos:column="83">.</op:operator><name><name pos:line="128" pos:column="84">Get</name><argument_list pos:line="128" pos:column="87">&lt;<argument><name><name pos:line="128" pos:column="88">IDictionary</name><argument_list pos:line="128" pos:column="99">&lt;<argument><name pos:line="128" pos:column="100">string</name></argument>, <argument><name pos:line="128" pos:column="108">TabResult</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="128" pos:column="119">(<argument><expr><name><name pos:line="128" pos:column="120">Constants</name><op:operator pos:line="128" pos:column="129">.</op:operator><name pos:line="128" pos:column="130">TabResultsDataStoreKey</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="129" pos:column="13">Assert</name><op:operator pos:line="129" pos:column="19">.</op:operator><name pos:line="129" pos:column="20">NotNull</name></name><argument_list pos:line="129" pos:column="27">(<argument><expr><name pos:line="129" pos:column="28">results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="130" pos:column="13">Assert</name><op:operator pos:line="130" pos:column="19">.</op:operator><name pos:line="130" pos:column="20">Equal</name></name><argument_list pos:line="130" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="130" pos:column="26">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="29">results</name><op:operator pos:line="130" pos:column="36">.</op:operator><name pos:line="130" pos:column="37">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="132" pos:column="13">Runtime</name><op:operator pos:line="132" pos:column="20">.</op:operator><name pos:line="132" pos:column="21">TabMock</name><op:operator pos:line="132" pos:column="28">.</op:operator><name pos:line="132" pos:column="29">Verify</name></name><argument_list pos:line="132" pos:column="35">(<argument><expr><lambda><name pos:line="132" pos:column="36">p</name> <op:operator pos:line="132" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="132" pos:column="41">p</name><op:operator pos:line="132" pos:column="42">.</op:operator><name pos:line="132" pos:column="43">GetData</name></name><argument_list pos:line="132" pos:column="50">(<argument><expr><call><name><name pos:line="132" pos:column="51">It</name><op:operator pos:line="132" pos:column="53">.</op:operator><name><name pos:line="132" pos:column="54">IsAny</name><argument_list pos:line="132" pos:column="59">&lt;<argument><name pos:line="132" pos:column="60">ITabContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="132" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="132" pos:column="77">Times</name><op:operator pos:line="132" pos:column="82">.</op:operator><name pos:line="132" pos:column="83">Once</name></name><argument_list pos:line="132" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="135" pos:column="9">[<expr><name pos:line="135" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="136" pos:column="9">public</specifier> <name pos:line="136" pos:column="16">void</name></type> <name pos:line="136" pos:column="21">ExecutePluginsWithUnknownRuntimeContextType</name><parameter_list pos:line="136" pos:column="64">()</parameter_list>
        <block pos:line="137" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="138" pos:column="13">Runtime</name><op:operator pos:line="138" pos:column="20">.</op:operator><name pos:line="138" pos:column="21">TabMock</name><op:operator pos:line="138" pos:column="28">.</op:operator><name pos:line="138" pos:column="29">Setup</name></name><argument_list pos:line="138" pos:column="34">(<argument><expr><lambda><name pos:line="138" pos:column="35">m</name> <op:operator pos:line="138" pos:column="37">=&gt;</op:operator> <name><name pos:line="138" pos:column="40">m</name><op:operator pos:line="138" pos:column="41">.</op:operator><name pos:line="138" pos:column="42">RequestContextType</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="138" pos:column="61">.</op:operator><call><name><name pos:line="138" pos:column="62">Returns</name><argument_list pos:line="138" pos:column="69">&lt;<argument><name pos:line="138" pos:column="70">Type</name></argument>&gt;</argument_list></name><argument_list pos:line="138" pos:column="75">(<argument><expr><name pos:line="138" pos:column="76">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="140" pos:column="13">Runtime</name><op:operator pos:line="140" pos:column="20">.</op:operator><name pos:line="140" pos:column="21">Configuration</name><op:operator pos:line="140" pos:column="34">.</op:operator><name pos:line="140" pos:column="35">Tabs</name><op:operator pos:line="140" pos:column="39">.</op:operator><name pos:line="140" pos:column="40">Add</name></name><argument_list pos:line="140" pos:column="43">(<argument><expr><name><name pos:line="140" pos:column="44">Runtime</name><op:operator pos:line="140" pos:column="51">.</op:operator><name pos:line="140" pos:column="52">TabMock</name><op:operator pos:line="140" pos:column="59">.</op:operator><name pos:line="140" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="141" pos:column="13">Runtime</name><op:operator pos:line="141" pos:column="20">.</op:operator><name pos:line="141" pos:column="21">Initialize</name></name><argument_list pos:line="141" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="142" pos:column="13">Runtime</name><op:operator pos:line="142" pos:column="20">.</op:operator><name pos:line="142" pos:column="21">BeginRequest</name></name><argument_list pos:line="142" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="143" pos:column="13">Runtime</name><op:operator pos:line="143" pos:column="20">.</op:operator><name pos:line="143" pos:column="21">EndRequest</name></name><argument_list pos:line="143" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="145" pos:column="13">var</name></type> <name pos:line="145" pos:column="17">results</name> <init pos:line="145" pos:column="25">= <expr><call><name><name pos:line="145" pos:column="27">Runtime</name><op:operator pos:line="145" pos:column="34">.</op:operator><name pos:line="145" pos:column="35">Configuration</name><op:operator pos:line="145" pos:column="48">.</op:operator><name pos:line="145" pos:column="49">FrameworkProvider</name><op:operator pos:line="145" pos:column="66">.</op:operator><name pos:line="145" pos:column="67">HttpRequestStore</name><op:operator pos:line="145" pos:column="83">.</op:operator><name><name pos:line="145" pos:column="84">Get</name><argument_list pos:line="145" pos:column="87">&lt;<argument><name><name pos:line="145" pos:column="88">IDictionary</name><argument_list pos:line="145" pos:column="99">&lt;<argument><name pos:line="145" pos:column="100">string</name></argument>, <argument><name pos:line="145" pos:column="108">TabResult</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="145" pos:column="119">(<argument><expr><name><name pos:line="145" pos:column="120">Constants</name><op:operator pos:line="145" pos:column="129">.</op:operator><name pos:line="145" pos:column="130">TabResultsDataStoreKey</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="146" pos:column="13">Assert</name><op:operator pos:line="146" pos:column="19">.</op:operator><name pos:line="146" pos:column="20">NotNull</name></name><argument_list pos:line="146" pos:column="27">(<argument><expr><name pos:line="146" pos:column="28">results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="147" pos:column="13">Assert</name><op:operator pos:line="147" pos:column="19">.</op:operator><name pos:line="147" pos:column="20">Equal</name></name><argument_list pos:line="147" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="147" pos:column="26">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="29">results</name><op:operator pos:line="147" pos:column="36">.</op:operator><name pos:line="147" pos:column="37">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="149" pos:column="13">Runtime</name><op:operator pos:line="149" pos:column="20">.</op:operator><name pos:line="149" pos:column="21">TabMock</name><op:operator pos:line="149" pos:column="28">.</op:operator><name pos:line="149" pos:column="29">Verify</name></name><argument_list pos:line="149" pos:column="35">(<argument><expr><lambda><name pos:line="149" pos:column="36">p</name> <op:operator pos:line="149" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="149" pos:column="41">p</name><op:operator pos:line="149" pos:column="42">.</op:operator><name pos:line="149" pos:column="43">GetData</name></name><argument_list pos:line="149" pos:column="50">(<argument><expr><call><name><name pos:line="149" pos:column="51">It</name><op:operator pos:line="149" pos:column="53">.</op:operator><name><name pos:line="149" pos:column="54">IsAny</name><argument_list pos:line="149" pos:column="59">&lt;<argument><name pos:line="149" pos:column="60">ITabContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="149" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="149" pos:column="77">Times</name><op:operator pos:line="149" pos:column="82">.</op:operator><name pos:line="149" pos:column="83">Once</name></name><argument_list pos:line="149" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="152" pos:column="9">[<expr><name pos:line="152" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="153" pos:column="9">public</specifier> <name pos:line="153" pos:column="16">void</name></type> <name pos:line="153" pos:column="21">ExecutePluginsWithDuplicateCollectionEntries</name><parameter_list pos:line="153" pos:column="65">()</parameter_list>
        <block pos:line="154" pos:column="9">{
            <comment type="line" pos:line="155" pos:column="13">//Insert the same plugin multiple times</comment>
            <expr_stmt><expr><call><name><name pos:line="156" pos:column="13">Runtime</name><op:operator pos:line="156" pos:column="20">.</op:operator><name pos:line="156" pos:column="21">Configuration</name><op:operator pos:line="156" pos:column="34">.</op:operator><name pos:line="156" pos:column="35">Tabs</name><op:operator pos:line="156" pos:column="39">.</op:operator><name pos:line="156" pos:column="40">Add</name></name><argument_list pos:line="156" pos:column="43">(<argument><expr><name><name pos:line="156" pos:column="44">Runtime</name><op:operator pos:line="156" pos:column="51">.</op:operator><name pos:line="156" pos:column="52">TabMock</name><op:operator pos:line="156" pos:column="59">.</op:operator><name pos:line="156" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="157" pos:column="13">Runtime</name><op:operator pos:line="157" pos:column="20">.</op:operator><name pos:line="157" pos:column="21">Configuration</name><op:operator pos:line="157" pos:column="34">.</op:operator><name pos:line="157" pos:column="35">Tabs</name><op:operator pos:line="157" pos:column="39">.</op:operator><name pos:line="157" pos:column="40">Add</name></name><argument_list pos:line="157" pos:column="43">(<argument><expr><name><name pos:line="157" pos:column="44">Runtime</name><op:operator pos:line="157" pos:column="51">.</op:operator><name pos:line="157" pos:column="52">TabMock</name><op:operator pos:line="157" pos:column="59">.</op:operator><name pos:line="157" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="158" pos:column="13">Runtime</name><op:operator pos:line="158" pos:column="20">.</op:operator><name pos:line="158" pos:column="21">Configuration</name><op:operator pos:line="158" pos:column="34">.</op:operator><name pos:line="158" pos:column="35">Tabs</name><op:operator pos:line="158" pos:column="39">.</op:operator><name pos:line="158" pos:column="40">Add</name></name><argument_list pos:line="158" pos:column="43">(<argument><expr><name><name pos:line="158" pos:column="44">Runtime</name><op:operator pos:line="158" pos:column="51">.</op:operator><name pos:line="158" pos:column="52">TabMock</name><op:operator pos:line="158" pos:column="59">.</op:operator><name pos:line="158" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="159" pos:column="13">Runtime</name><op:operator pos:line="159" pos:column="20">.</op:operator><name pos:line="159" pos:column="21">Initialize</name></name><argument_list pos:line="159" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="160" pos:column="13">Runtime</name><op:operator pos:line="160" pos:column="20">.</op:operator><name pos:line="160" pos:column="21">BeginRequest</name></name><argument_list pos:line="160" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="161" pos:column="13">Runtime</name><op:operator pos:line="161" pos:column="20">.</op:operator><name pos:line="161" pos:column="21">EndRequest</name></name><argument_list pos:line="161" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="163" pos:column="13">var</name></type> <name pos:line="163" pos:column="17">results</name> <init pos:line="163" pos:column="25">= <expr><call><name><name pos:line="163" pos:column="27">Runtime</name><op:operator pos:line="163" pos:column="34">.</op:operator><name pos:line="163" pos:column="35">Configuration</name><op:operator pos:line="163" pos:column="48">.</op:operator><name pos:line="163" pos:column="49">FrameworkProvider</name><op:operator pos:line="163" pos:column="66">.</op:operator><name pos:line="163" pos:column="67">HttpRequestStore</name><op:operator pos:line="163" pos:column="83">.</op:operator><name><name pos:line="163" pos:column="84">Get</name><argument_list pos:line="163" pos:column="87">&lt;<argument><name><name pos:line="163" pos:column="88">IDictionary</name><argument_list pos:line="163" pos:column="99">&lt;<argument><name pos:line="163" pos:column="100">string</name></argument>, <argument><name pos:line="163" pos:column="108">TabResult</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="163" pos:column="119">(<argument><expr><name><name pos:line="163" pos:column="120">Constants</name><op:operator pos:line="163" pos:column="129">.</op:operator><name pos:line="163" pos:column="130">TabResultsDataStoreKey</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="164" pos:column="13">Assert</name><op:operator pos:line="164" pos:column="19">.</op:operator><name pos:line="164" pos:column="20">NotNull</name></name><argument_list pos:line="164" pos:column="27">(<argument><expr><name pos:line="164" pos:column="28">results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="165" pos:column="13">Assert</name><op:operator pos:line="165" pos:column="19">.</op:operator><name pos:line="165" pos:column="20">Equal</name></name><argument_list pos:line="165" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="165" pos:column="26">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="29">results</name><op:operator pos:line="165" pos:column="36">.</op:operator><name pos:line="165" pos:column="37">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="167" pos:column="13">Runtime</name><op:operator pos:line="167" pos:column="20">.</op:operator><name pos:line="167" pos:column="21">TabMock</name><op:operator pos:line="167" pos:column="28">.</op:operator><name pos:line="167" pos:column="29">Verify</name></name><argument_list pos:line="167" pos:column="35">(<argument><expr><lambda><name pos:line="167" pos:column="36">p</name> <op:operator pos:line="167" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="167" pos:column="41">p</name><op:operator pos:line="167" pos:column="42">.</op:operator><name pos:line="167" pos:column="43">GetData</name></name><argument_list pos:line="167" pos:column="50">(<argument><expr><call><name><name pos:line="167" pos:column="51">It</name><op:operator pos:line="167" pos:column="53">.</op:operator><name><name pos:line="167" pos:column="54">IsAny</name><argument_list pos:line="167" pos:column="59">&lt;<argument><name pos:line="167" pos:column="60">ITabContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="167" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="167" pos:column="77">Times</name><op:operator pos:line="167" pos:column="82">.</op:operator><name pos:line="167" pos:column="83">AtLeastOnce</name></name><argument_list pos:line="167" pos:column="94">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="170" pos:column="9">[<expr><name pos:line="170" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="171" pos:column="9">public</specifier> <name pos:line="171" pos:column="16">void</name></type> <name pos:line="171" pos:column="21">ExecutePluginThatFails</name><parameter_list pos:line="171" pos:column="43">()</parameter_list>
        <block pos:line="172" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="173" pos:column="13">Runtime</name><op:operator pos:line="173" pos:column="20">.</op:operator><name pos:line="173" pos:column="21">TabMock</name><op:operator pos:line="173" pos:column="28">.</op:operator><name pos:line="173" pos:column="29">Setup</name></name><argument_list pos:line="173" pos:column="34">(<argument><expr><lambda><name pos:line="173" pos:column="35">p</name> <op:operator pos:line="173" pos:column="37">=&gt;</op:operator> <call><name><name pos:line="173" pos:column="40">p</name><op:operator pos:line="173" pos:column="41">.</op:operator><name pos:line="173" pos:column="42">GetData</name></name><argument_list pos:line="173" pos:column="49">(<argument><expr><call><name><name pos:line="173" pos:column="50">It</name><op:operator pos:line="173" pos:column="52">.</op:operator><name><name pos:line="173" pos:column="53">IsAny</name><argument_list pos:line="173" pos:column="58">&lt;<argument><name pos:line="173" pos:column="59">ITabContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="173" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="173" pos:column="75">.</op:operator><call><name><name pos:line="173" pos:column="76">Throws</name><argument_list pos:line="173" pos:column="82">&lt;<argument><name pos:line="173" pos:column="83">DummyException</name></argument>&gt;</argument_list></name><argument_list pos:line="173" pos:column="98">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="175" pos:column="13">Runtime</name><op:operator pos:line="175" pos:column="20">.</op:operator><name pos:line="175" pos:column="21">Configuration</name><op:operator pos:line="175" pos:column="34">.</op:operator><name pos:line="175" pos:column="35">Tabs</name><op:operator pos:line="175" pos:column="39">.</op:operator><name pos:line="175" pos:column="40">Add</name></name><argument_list pos:line="175" pos:column="43">(<argument><expr><name><name pos:line="175" pos:column="44">Runtime</name><op:operator pos:line="175" pos:column="51">.</op:operator><name pos:line="175" pos:column="52">TabMock</name><op:operator pos:line="175" pos:column="59">.</op:operator><name pos:line="175" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="176" pos:column="13">Runtime</name><op:operator pos:line="176" pos:column="20">.</op:operator><name pos:line="176" pos:column="21">Initialize</name></name><argument_list pos:line="176" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="177" pos:column="13">Runtime</name><op:operator pos:line="177" pos:column="20">.</op:operator><name pos:line="177" pos:column="21">BeginRequest</name></name><argument_list pos:line="177" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="178" pos:column="13">Runtime</name><op:operator pos:line="178" pos:column="20">.</op:operator><name pos:line="178" pos:column="21">EndRequest</name></name><argument_list pos:line="178" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="180" pos:column="13">var</name></type> <name pos:line="180" pos:column="17">results</name> <init pos:line="180" pos:column="25">= <expr><call><name><name pos:line="180" pos:column="27">Runtime</name><op:operator pos:line="180" pos:column="34">.</op:operator><name pos:line="180" pos:column="35">Configuration</name><op:operator pos:line="180" pos:column="48">.</op:operator><name pos:line="180" pos:column="49">FrameworkProvider</name><op:operator pos:line="180" pos:column="66">.</op:operator><name pos:line="180" pos:column="67">HttpRequestStore</name><op:operator pos:line="180" pos:column="83">.</op:operator><name><name pos:line="180" pos:column="84">Get</name><argument_list pos:line="180" pos:column="87">&lt;<argument><name><name pos:line="180" pos:column="88">IDictionary</name><argument_list pos:line="180" pos:column="99">&lt;<argument><name pos:line="180" pos:column="100">string</name></argument>, <argument><name pos:line="180" pos:column="108">TabResult</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="180" pos:column="119">(<argument><expr><name><name pos:line="180" pos:column="120">Constants</name><op:operator pos:line="180" pos:column="129">.</op:operator><name pos:line="180" pos:column="130">TabResultsDataStoreKey</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="181" pos:column="13">Assert</name><op:operator pos:line="181" pos:column="19">.</op:operator><name pos:line="181" pos:column="20">NotNull</name></name><argument_list pos:line="181" pos:column="27">(<argument><expr><name pos:line="181" pos:column="28">results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="182" pos:column="13">Assert</name><op:operator pos:line="182" pos:column="19">.</op:operator><name pos:line="182" pos:column="20">Equal</name></name><argument_list pos:line="182" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="182" pos:column="26">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="182" pos:column="29">results</name><op:operator pos:line="182" pos:column="36">.</op:operator><name pos:line="182" pos:column="37">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="184" pos:column="13">Runtime</name><op:operator pos:line="184" pos:column="20">.</op:operator><name pos:line="184" pos:column="21">TabMock</name><op:operator pos:line="184" pos:column="28">.</op:operator><name pos:line="184" pos:column="29">Verify</name></name><argument_list pos:line="184" pos:column="35">(<argument><expr><lambda><name pos:line="184" pos:column="36">p</name> <op:operator pos:line="184" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="184" pos:column="41">p</name><op:operator pos:line="184" pos:column="42">.</op:operator><name pos:line="184" pos:column="43">GetData</name></name><argument_list pos:line="184" pos:column="50">(<argument><expr><call><name><name pos:line="184" pos:column="51">It</name><op:operator pos:line="184" pos:column="53">.</op:operator><name><name pos:line="184" pos:column="54">IsAny</name><argument_list pos:line="184" pos:column="59">&lt;<argument><name pos:line="184" pos:column="60">ITabContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="184" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="184" pos:column="77">Times</name><op:operator pos:line="184" pos:column="82">.</op:operator><name pos:line="184" pos:column="83">Once</name></name><argument_list pos:line="184" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="186" pos:column="13">// Make sure the excption type above is logged here.</comment>
            <expr_stmt><expr><call><name><name pos:line="187" pos:column="13">Runtime</name><op:operator pos:line="187" pos:column="20">.</op:operator><name pos:line="187" pos:column="21">LoggerMock</name><op:operator pos:line="187" pos:column="31">.</op:operator><name pos:line="187" pos:column="32">Verify</name></name><argument_list pos:line="187" pos:column="38">(<argument><expr><lambda><name pos:line="187" pos:column="39">l</name> <op:operator pos:line="187" pos:column="41">=&gt;</op:operator> <call><name><name pos:line="187" pos:column="44">l</name><op:operator pos:line="187" pos:column="45">.</op:operator><name pos:line="187" pos:column="46">Error</name></name><argument_list pos:line="187" pos:column="51">(<argument><expr><call><name><name pos:line="187" pos:column="52">It</name><op:operator pos:line="187" pos:column="54">.</op:operator><name><name pos:line="187" pos:column="55">IsAny</name><argument_list pos:line="187" pos:column="60">&lt;<argument><name pos:line="187" pos:column="61">string</name></argument>&gt;</argument_list></name></name><argument_list pos:line="187" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="187" pos:column="72">It</name><op:operator pos:line="187" pos:column="74">.</op:operator><name><name pos:line="187" pos:column="75">IsAny</name><argument_list pos:line="187" pos:column="80">&lt;<argument><name pos:line="187" pos:column="81">DummyException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="187" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="187" pos:column="101">Times</name><op:operator pos:line="187" pos:column="106">.</op:operator><name pos:line="187" pos:column="107">AtMost</name></name><argument_list pos:line="187" pos:column="113">(<argument><expr><name><name pos:line="187" pos:column="114">Runtime</name><op:operator pos:line="187" pos:column="121">.</op:operator><name pos:line="187" pos:column="122">Configuration</name><op:operator pos:line="187" pos:column="135">.</op:operator><name pos:line="187" pos:column="136">Tabs</name><op:operator pos:line="187" pos:column="140">.</op:operator><name pos:line="187" pos:column="141">Count</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="190" pos:column="9">[<expr><name pos:line="190" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="191" pos:column="9">public</specifier> <name pos:line="191" pos:column="16">void</name></type> <name pos:line="191" pos:column="21">ExecutePluginsWithEmptyCollection</name><parameter_list pos:line="191" pos:column="54">()</parameter_list>
        <block pos:line="192" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="193" pos:column="13">Runtime</name><op:operator pos:line="193" pos:column="20">.</op:operator><name pos:line="193" pos:column="21">Configuration</name><op:operator pos:line="193" pos:column="34">.</op:operator><name pos:line="193" pos:column="35">Tabs</name><op:operator pos:line="193" pos:column="39">.</op:operator><name pos:line="193" pos:column="40">Clear</name></name><argument_list pos:line="193" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="194" pos:column="13">Runtime</name><op:operator pos:line="194" pos:column="20">.</op:operator><name pos:line="194" pos:column="21">Initialize</name></name><argument_list pos:line="194" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="195" pos:column="13">Runtime</name><op:operator pos:line="195" pos:column="20">.</op:operator><name pos:line="195" pos:column="21">BeginRequest</name></name><argument_list pos:line="195" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="196" pos:column="13">Runtime</name><op:operator pos:line="196" pos:column="20">.</op:operator><name pos:line="196" pos:column="21">EndRequest</name></name><argument_list pos:line="196" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="198" pos:column="13">var</name></type> <name pos:line="198" pos:column="17">results</name> <init pos:line="198" pos:column="25">= <expr><call><name><name pos:line="198" pos:column="27">Runtime</name><op:operator pos:line="198" pos:column="34">.</op:operator><name pos:line="198" pos:column="35">Configuration</name><op:operator pos:line="198" pos:column="48">.</op:operator><name pos:line="198" pos:column="49">FrameworkProvider</name><op:operator pos:line="198" pos:column="66">.</op:operator><name pos:line="198" pos:column="67">HttpRequestStore</name><op:operator pos:line="198" pos:column="83">.</op:operator><name><name pos:line="198" pos:column="84">Get</name><argument_list pos:line="198" pos:column="87">&lt;<argument><name><name pos:line="198" pos:column="88">IDictionary</name><argument_list pos:line="198" pos:column="99">&lt;<argument><name pos:line="198" pos:column="100">string</name></argument>, <argument><name pos:line="198" pos:column="108">TabResult</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="198" pos:column="119">(<argument><expr><name><name pos:line="198" pos:column="120">Constants</name><op:operator pos:line="198" pos:column="129">.</op:operator><name pos:line="198" pos:column="130">TabResultsDataStoreKey</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="199" pos:column="13">Assert</name><op:operator pos:line="199" pos:column="19">.</op:operator><name pos:line="199" pos:column="20">NotNull</name></name><argument_list pos:line="199" pos:column="27">(<argument><expr><name pos:line="199" pos:column="28">results</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="200" pos:column="13">Assert</name><op:operator pos:line="200" pos:column="19">.</op:operator><name pos:line="200" pos:column="20">Equal</name></name><argument_list pos:line="200" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="200" pos:column="26">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="200" pos:column="29">results</name><op:operator pos:line="200" pos:column="36">.</op:operator><name pos:line="200" pos:column="37">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="203" pos:column="9">[<expr><name pos:line="203" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="204" pos:column="9">public</specifier> <name pos:line="204" pos:column="16">void</name></type> <name pos:line="204" pos:column="21">FlagsTest</name><parameter_list pos:line="204" pos:column="30">()</parameter_list>
        <block pos:line="205" pos:column="9">{
            <comment type="line" pos:line="206" pos:column="13">//This test is just to help me keep my sanity with bitwise operators</comment>
            <decl_stmt><decl><type><name pos:line="207" pos:column="13">var</name></type> <name pos:line="207" pos:column="17">support</name> <init pos:line="207" pos:column="25">= <expr><name><name pos:line="207" pos:column="27">RuntimeEvent</name><op:operator pos:line="207" pos:column="39">.</op:operator><name pos:line="207" pos:column="40">EndRequest</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="209" pos:column="13">Assert</name><op:operator pos:line="209" pos:column="19">.</op:operator><name pos:line="209" pos:column="20">True</name></name><argument_list pos:line="209" pos:column="24">(<argument><expr><call><name><name pos:line="209" pos:column="25">support</name><op:operator pos:line="209" pos:column="32">.</op:operator><name pos:line="209" pos:column="33">HasFlag</name></name><argument_list pos:line="209" pos:column="40">(<argument><expr><name><name pos:line="209" pos:column="41">RuntimeEvent</name><op:operator pos:line="209" pos:column="53">.</op:operator><name pos:line="209" pos:column="54">EndRequest</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="209" pos:column="67">"End is End"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="211" pos:column="13">support</name> <op:operator pos:line="211" pos:column="21">=</op:operator> <name><name pos:line="211" pos:column="23">RuntimeEvent</name><op:operator pos:line="211" pos:column="35">.</op:operator><name pos:line="211" pos:column="36">EndRequest</name></name> <op:operator pos:line="211" pos:column="47">|</op:operator> <name><name pos:line="211" pos:column="49">RuntimeEvent</name><op:operator pos:line="211" pos:column="61">.</op:operator><name pos:line="211" pos:column="62">EndSessionAccess</name></name></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="213" pos:column="13">Assert</name><op:operator pos:line="213" pos:column="19">.</op:operator><name pos:line="213" pos:column="20">True</name></name><argument_list pos:line="213" pos:column="24">(<argument><expr><call><name><name pos:line="213" pos:column="25">support</name><op:operator pos:line="213" pos:column="32">.</op:operator><name pos:line="213" pos:column="33">HasFlag</name></name><argument_list pos:line="213" pos:column="40">(<argument><expr><name><name pos:line="213" pos:column="41">RuntimeEvent</name><op:operator pos:line="213" pos:column="53">.</op:operator><name pos:line="213" pos:column="54">EndRequest</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="213" pos:column="67">"End in End|SessionEnd"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="214" pos:column="13">Assert</name><op:operator pos:line="214" pos:column="19">.</op:operator><name pos:line="214" pos:column="20">True</name></name><argument_list pos:line="214" pos:column="24">(<argument><expr><call><name><name pos:line="214" pos:column="25">support</name><op:operator pos:line="214" pos:column="32">.</op:operator><name pos:line="214" pos:column="33">HasFlag</name></name><argument_list pos:line="214" pos:column="40">(<argument><expr><name><name pos:line="214" pos:column="41">RuntimeEvent</name><op:operator pos:line="214" pos:column="53">.</op:operator><name pos:line="214" pos:column="54">EndSessionAccess</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="214" pos:column="73">"SessionEnd in End|SessionEnd"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="215" pos:column="13">//support End OR Begin</comment>
            <expr_stmt><expr><call><name><name pos:line="216" pos:column="13">Assert</name><op:operator pos:line="216" pos:column="19">.</op:operator><name pos:line="216" pos:column="20">True</name></name><argument_list pos:line="216" pos:column="24">(<argument><expr><call><name><name pos:line="216" pos:column="25">support</name><op:operator pos:line="216" pos:column="32">.</op:operator><name pos:line="216" pos:column="33">HasFlag</name></name><argument_list pos:line="216" pos:column="40">(<argument><expr><name><name pos:line="216" pos:column="41">RuntimeEvent</name><op:operator pos:line="216" pos:column="53">.</op:operator><name pos:line="216" pos:column="54">EndRequest</name> <type:modifier pos:line="216" pos:column="65">&amp;</type:modifier></name> <name><name pos:line="216" pos:column="67">RuntimeEvent</name><op:operator pos:line="216" pos:column="79">.</op:operator><name pos:line="216" pos:column="80">BeginRequest</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="216" pos:column="95">"End|Begin in End|SessionEnd"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="217" pos:column="13">//support End AND SessionEnd</comment>
            <expr_stmt><expr><call><name><name pos:line="218" pos:column="13">Assert</name><op:operator pos:line="218" pos:column="19">.</op:operator><name pos:line="218" pos:column="20">True</name></name><argument_list pos:line="218" pos:column="24">(<argument><expr><call><name><name pos:line="218" pos:column="25">support</name><op:operator pos:line="218" pos:column="32">.</op:operator><name pos:line="218" pos:column="33">HasFlag</name></name><argument_list pos:line="218" pos:column="40">(<argument><expr><name><name pos:line="218" pos:column="41">RuntimeEvent</name><op:operator pos:line="218" pos:column="53">.</op:operator><name pos:line="218" pos:column="54">EndRequest</name></name> <op:operator pos:line="218" pos:column="65">|</op:operator> <name><name pos:line="218" pos:column="67">RuntimeEvent</name><op:operator pos:line="218" pos:column="79">.</op:operator><name pos:line="218" pos:column="80">EndSessionAccess</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="218" pos:column="99">"End|SessionEnd in End|SessionEnd"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="219" pos:column="13">Assert</name><op:operator pos:line="219" pos:column="19">.</op:operator><name pos:line="219" pos:column="20">False</name></name><argument_list pos:line="219" pos:column="25">(<argument><expr><call><name><name pos:line="219" pos:column="26">support</name><op:operator pos:line="219" pos:column="33">.</op:operator><name pos:line="219" pos:column="34">HasFlag</name></name><argument_list pos:line="219" pos:column="41">(<argument><expr><name><name pos:line="219" pos:column="42">RuntimeEvent</name><op:operator pos:line="219" pos:column="54">.</op:operator><name pos:line="219" pos:column="55">EndRequest</name></name> <op:operator pos:line="219" pos:column="66">|</op:operator> <name><name pos:line="219" pos:column="68">RuntimeEvent</name><op:operator pos:line="219" pos:column="80">.</op:operator><name pos:line="219" pos:column="81">BeginRequest</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="219" pos:column="96">"End|Begin NOT in End|SessionEnd"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="220" pos:column="13">Assert</name><op:operator pos:line="220" pos:column="19">.</op:operator><name pos:line="220" pos:column="20">False</name></name><argument_list pos:line="220" pos:column="25">(<argument><expr><call><name><name pos:line="220" pos:column="26">support</name><op:operator pos:line="220" pos:column="33">.</op:operator><name pos:line="220" pos:column="34">HasFlag</name></name><argument_list pos:line="220" pos:column="41">(<argument><expr><name><name pos:line="220" pos:column="42">RuntimeEvent</name><op:operator pos:line="220" pos:column="54">.</op:operator><name pos:line="220" pos:column="55">BeginRequest</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="220" pos:column="70">"Begin NOT in End|SessionEnd"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="221" pos:column="13">Assert</name><op:operator pos:line="221" pos:column="19">.</op:operator><name pos:line="221" pos:column="20">False</name></name><argument_list pos:line="221" pos:column="25">(<argument><expr><call><name><name pos:line="221" pos:column="26">support</name><op:operator pos:line="221" pos:column="33">.</op:operator><name pos:line="221" pos:column="34">HasFlag</name></name><argument_list pos:line="221" pos:column="41">(<argument><expr><name><name pos:line="221" pos:column="42">RuntimeEvent</name><op:operator pos:line="221" pos:column="54">.</op:operator><name pos:line="221" pos:column="55">BeginSessionAccess</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="221" pos:column="76">"SessionBegin NOT in End|SessionEnd"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="222" pos:column="13">Assert</name><op:operator pos:line="222" pos:column="19">.</op:operator><name pos:line="222" pos:column="20">False</name></name><argument_list pos:line="222" pos:column="25">(<argument><expr><call><name><name pos:line="222" pos:column="26">support</name><op:operator pos:line="222" pos:column="33">.</op:operator><name pos:line="222" pos:column="34">HasFlag</name></name><argument_list pos:line="222" pos:column="41">(<argument><expr><name><name pos:line="222" pos:column="42">RuntimeEvent</name><op:operator pos:line="222" pos:column="54">.</op:operator><name pos:line="222" pos:column="55">BeginRequest</name></name> <op:operator pos:line="222" pos:column="68">|</op:operator> <name><name pos:line="222" pos:column="70">RuntimeEvent</name><op:operator pos:line="222" pos:column="82">.</op:operator><name pos:line="222" pos:column="83">BeginSessionAccess</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="222" pos:column="104">"Begin|SessionBegin NOT in End|SessionEnd"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="225" pos:column="9">[<expr><name pos:line="225" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="226" pos:column="9">public</specifier> <name pos:line="226" pos:column="16">void</name></type> <name pos:line="226" pos:column="21">HaveASemanticVersion</name><parameter_list pos:line="226" pos:column="41">()</parameter_list>
        <block pos:line="227" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="228" pos:column="13">Version</name></type> <name pos:line="228" pos:column="21">version</name></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="229" pos:column="13">Assert</name><op:operator pos:line="229" pos:column="19">.</op:operator><name pos:line="229" pos:column="20">True</name></name><argument_list pos:line="229" pos:column="24">(<argument><expr><call><name><name pos:line="229" pos:column="25">Version</name><op:operator pos:line="229" pos:column="32">.</op:operator><name pos:line="229" pos:column="33">TryParse</name></name><argument_list pos:line="229" pos:column="41">(<argument><expr><name><name pos:line="229" pos:column="42">GlimpseRuntime</name><op:operator pos:line="229" pos:column="56">.</op:operator><name pos:line="229" pos:column="57">Version</name></name></expr></argument>, <argument><expr pos:line="229" pos:column="66">out <name pos:line="229" pos:column="70">version</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="230" pos:column="13">Assert</name><op:operator pos:line="230" pos:column="19">.</op:operator><name pos:line="230" pos:column="20">NotNull</name></name><argument_list pos:line="230" pos:column="27">(<argument><expr><name><name pos:line="230" pos:column="28">version</name><op:operator pos:line="230" pos:column="35">.</op:operator><name pos:line="230" pos:column="36">Major</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="231" pos:column="13">Assert</name><op:operator pos:line="231" pos:column="19">.</op:operator><name pos:line="231" pos:column="20">NotNull</name></name><argument_list pos:line="231" pos:column="27">(<argument><expr><name><name pos:line="231" pos:column="28">version</name><op:operator pos:line="231" pos:column="35">.</op:operator><name pos:line="231" pos:column="36">Minor</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="232" pos:column="13">Assert</name><op:operator pos:line="232" pos:column="19">.</op:operator><name pos:line="232" pos:column="20">NotNull</name></name><argument_list pos:line="232" pos:column="27">(<argument><expr><name><name pos:line="232" pos:column="28">version</name><op:operator pos:line="232" pos:column="35">.</op:operator><name pos:line="232" pos:column="36">Build</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="233" pos:column="13">Assert</name><op:operator pos:line="233" pos:column="19">.</op:operator><name pos:line="233" pos:column="20">Equal</name></name><argument_list pos:line="233" pos:column="25">(<argument><expr><op:operator pos:line="233" pos:column="26">-</op:operator><lit:literal type="number" pos:line="233" pos:column="27">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="233" pos:column="30">version</name><op:operator pos:line="233" pos:column="37">.</op:operator><name pos:line="233" pos:column="38">Revision</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="236" pos:column="9">[<expr><name pos:line="236" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="237" pos:column="9">public</specifier> <name pos:line="237" pos:column="16">void</name></type> <name pos:line="237" pos:column="21">InitializeWithSetupTabs</name><parameter_list pos:line="237" pos:column="44">()</parameter_list>
        <block pos:line="238" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="239" pos:column="13">var</name></type> <name pos:line="239" pos:column="17">setupMock</name> <init pos:line="239" pos:column="27">= <expr><call><name><name pos:line="239" pos:column="29">Runtime</name><op:operator pos:line="239" pos:column="36">.</op:operator><name pos:line="239" pos:column="37">TabMock</name><op:operator pos:line="239" pos:column="44">.</op:operator><name><name pos:line="239" pos:column="45">As</name><argument_list pos:line="239" pos:column="47">&lt;<argument><name pos:line="239" pos:column="48">ITabSetup</name></argument>&gt;</argument_list></name></name><argument_list pos:line="239" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="241" pos:column="13">//one tab needs setup, the other does not</comment>
            <expr_stmt><expr><call><name><name pos:line="242" pos:column="13">Runtime</name><op:operator pos:line="242" pos:column="20">.</op:operator><name pos:line="242" pos:column="21">Configuration</name><op:operator pos:line="242" pos:column="34">.</op:operator><name pos:line="242" pos:column="35">Tabs</name><op:operator pos:line="242" pos:column="39">.</op:operator><name pos:line="242" pos:column="40">Add</name></name><argument_list pos:line="242" pos:column="43">(<argument><expr><name><name pos:line="242" pos:column="44">Runtime</name><op:operator pos:line="242" pos:column="51">.</op:operator><name pos:line="242" pos:column="52">TabMock</name><op:operator pos:line="242" pos:column="59">.</op:operator><name pos:line="242" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="243" pos:column="13">Runtime</name><op:operator pos:line="243" pos:column="20">.</op:operator><name pos:line="243" pos:column="21">Configuration</name><op:operator pos:line="243" pos:column="34">.</op:operator><name pos:line="243" pos:column="35">Tabs</name><op:operator pos:line="243" pos:column="39">.</op:operator><name pos:line="243" pos:column="40">Add</name></name><argument_list pos:line="243" pos:column="43">(<argument><expr><op:operator pos:line="243" pos:column="44">new</op:operator> <call><name pos:line="243" pos:column="48">DummyTab</name><argument_list pos:line="243" pos:column="56">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="245" pos:column="13">Runtime</name><op:operator pos:line="245" pos:column="20">.</op:operator><name pos:line="245" pos:column="21">Initialize</name></name><argument_list pos:line="245" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="247" pos:column="13">setupMock</name><op:operator pos:line="247" pos:column="22">.</op:operator><name pos:line="247" pos:column="23">Verify</name></name><argument_list pos:line="247" pos:column="29">(<argument><expr><lambda><name pos:line="247" pos:column="30">pm</name> <op:operator pos:line="247" pos:column="33">=&gt;</op:operator> <call><name><name pos:line="247" pos:column="36">pm</name><op:operator pos:line="247" pos:column="38">.</op:operator><name pos:line="247" pos:column="39">Setup</name></name><argument_list pos:line="247" pos:column="44">(<argument><expr><call><name><name pos:line="247" pos:column="45">It</name><op:operator pos:line="247" pos:column="47">.</op:operator><name><name pos:line="247" pos:column="48">IsAny</name><argument_list pos:line="247" pos:column="53">&lt;<argument><name pos:line="247" pos:column="54">ITabSetupContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="247" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="247" pos:column="76">Times</name><op:operator pos:line="247" pos:column="81">.</op:operator><name pos:line="247" pos:column="82">Once</name></name><argument_list pos:line="247" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="250" pos:column="9">[<expr><name pos:line="250" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="251" pos:column="9">public</specifier> <name pos:line="251" pos:column="16">void</name></type> <name pos:line="251" pos:column="21">InitializeWithSetupTabThatFails</name><parameter_list pos:line="251" pos:column="52">()</parameter_list>
        <block pos:line="252" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="253" pos:column="13">var</name></type> <name pos:line="253" pos:column="17">setupMock</name> <init pos:line="253" pos:column="27">= <expr><call><name><name pos:line="253" pos:column="29">Runtime</name><op:operator pos:line="253" pos:column="36">.</op:operator><name pos:line="253" pos:column="37">TabMock</name><op:operator pos:line="253" pos:column="44">.</op:operator><name><name pos:line="253" pos:column="45">As</name><argument_list pos:line="253" pos:column="47">&lt;<argument><name pos:line="253" pos:column="48">ITabSetup</name></argument>&gt;</argument_list></name></name><argument_list pos:line="253" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="254" pos:column="13">setupMock</name><op:operator pos:line="254" pos:column="22">.</op:operator><name pos:line="254" pos:column="23">Setup</name></name><argument_list pos:line="254" pos:column="28">(<argument><expr><lambda><name pos:line="254" pos:column="29">s</name> <op:operator pos:line="254" pos:column="31">=&gt;</op:operator> <call><name><name pos:line="254" pos:column="34">s</name><op:operator pos:line="254" pos:column="35">.</op:operator><name pos:line="254" pos:column="36">Setup</name></name><argument_list pos:line="254" pos:column="41">(<argument><expr><op:operator pos:line="254" pos:column="42">new</op:operator> <call><name><name pos:line="254" pos:column="46">Mock</name><argument_list pos:line="254" pos:column="50">&lt;<argument><name pos:line="254" pos:column="51">ITabSetupContext</name></argument>&gt;</argument_list></name><argument_list pos:line="254" pos:column="68">()</argument_list></call><op:operator pos:line="254" pos:column="70">.</op:operator><name pos:line="254" pos:column="71">Object</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="254" pos:column="79">.</op:operator><call><name><name pos:line="254" pos:column="80">Throws</name><argument_list pos:line="254" pos:column="86">&lt;<argument><name pos:line="254" pos:column="87">DummyException</name></argument>&gt;</argument_list></name><argument_list pos:line="254" pos:column="102">()</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="256" pos:column="13">//one tab needs setup, the other does not</comment>
            <expr_stmt><expr><call><name><name pos:line="257" pos:column="13">Runtime</name><op:operator pos:line="257" pos:column="20">.</op:operator><name pos:line="257" pos:column="21">Configuration</name><op:operator pos:line="257" pos:column="34">.</op:operator><name pos:line="257" pos:column="35">Tabs</name><op:operator pos:line="257" pos:column="39">.</op:operator><name pos:line="257" pos:column="40">Add</name></name><argument_list pos:line="257" pos:column="43">(<argument><expr><name><name pos:line="257" pos:column="44">Runtime</name><op:operator pos:line="257" pos:column="51">.</op:operator><name pos:line="257" pos:column="52">TabMock</name><op:operator pos:line="257" pos:column="59">.</op:operator><name pos:line="257" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="258" pos:column="13">Runtime</name><op:operator pos:line="258" pos:column="20">.</op:operator><name pos:line="258" pos:column="21">Configuration</name><op:operator pos:line="258" pos:column="34">.</op:operator><name pos:line="258" pos:column="35">Tabs</name><op:operator pos:line="258" pos:column="39">.</op:operator><name pos:line="258" pos:column="40">Add</name></name><argument_list pos:line="258" pos:column="43">(<argument><expr><op:operator pos:line="258" pos:column="44">new</op:operator> <call><name pos:line="258" pos:column="48">DummyTab</name><argument_list pos:line="258" pos:column="56">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="260" pos:column="13">Runtime</name><op:operator pos:line="260" pos:column="20">.</op:operator><name pos:line="260" pos:column="21">Initialize</name></name><argument_list pos:line="260" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="262" pos:column="13">setupMock</name><op:operator pos:line="262" pos:column="22">.</op:operator><name pos:line="262" pos:column="23">Verify</name></name><argument_list pos:line="262" pos:column="29">(<argument><expr><lambda><name pos:line="262" pos:column="30">pm</name> <op:operator pos:line="262" pos:column="33">=&gt;</op:operator> <call><name><name pos:line="262" pos:column="36">pm</name><op:operator pos:line="262" pos:column="38">.</op:operator><name pos:line="262" pos:column="39">Setup</name></name><argument_list pos:line="262" pos:column="44">(<argument><expr><call><name><name pos:line="262" pos:column="45">It</name><op:operator pos:line="262" pos:column="47">.</op:operator><name><name pos:line="262" pos:column="48">IsAny</name><argument_list pos:line="262" pos:column="53">&lt;<argument><name pos:line="262" pos:column="54">ITabSetupContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="262" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="262" pos:column="76">Times</name><op:operator pos:line="262" pos:column="81">.</op:operator><name pos:line="262" pos:column="82">Once</name></name><argument_list pos:line="262" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="263" pos:column="13">Runtime</name><op:operator pos:line="263" pos:column="20">.</op:operator><name pos:line="263" pos:column="21">LoggerMock</name><op:operator pos:line="263" pos:column="31">.</op:operator><name pos:line="263" pos:column="32">Verify</name></name><argument_list pos:line="263" pos:column="38">(<argument><expr><lambda><name pos:line="263" pos:column="39">l</name> <op:operator pos:line="263" pos:column="41">=&gt;</op:operator> <call><name><name pos:line="263" pos:column="44">l</name><op:operator pos:line="263" pos:column="45">.</op:operator><name pos:line="263" pos:column="46">Error</name></name><argument_list pos:line="263" pos:column="51">(<argument><expr><call><name><name pos:line="263" pos:column="52">It</name><op:operator pos:line="263" pos:column="54">.</op:operator><name><name pos:line="263" pos:column="55">IsAny</name><argument_list pos:line="263" pos:column="60">&lt;<argument><name pos:line="263" pos:column="61">string</name></argument>&gt;</argument_list></name></name><argument_list pos:line="263" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="263" pos:column="72">It</name><op:operator pos:line="263" pos:column="74">.</op:operator><name><name pos:line="263" pos:column="75">IsAny</name><argument_list pos:line="263" pos:column="80">&lt;<argument><name pos:line="263" pos:column="81">DummyException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="263" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="263" pos:column="101">Times</name><op:operator pos:line="263" pos:column="106">.</op:operator><name pos:line="263" pos:column="107">AtMost</name></name><argument_list pos:line="263" pos:column="113">(<argument><expr><name><name pos:line="263" pos:column="114">Runtime</name><op:operator pos:line="263" pos:column="121">.</op:operator><name pos:line="263" pos:column="122">Configuration</name><op:operator pos:line="263" pos:column="135">.</op:operator><name pos:line="263" pos:column="136">Tabs</name><op:operator pos:line="263" pos:column="140">.</op:operator><name pos:line="263" pos:column="141">Count</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="266" pos:column="9">[<expr><name pos:line="266" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="267" pos:column="9">public</specifier> <name pos:line="267" pos:column="16">void</name></type> <name pos:line="267" pos:column="21">InitializeWithInspectors</name><parameter_list pos:line="267" pos:column="45">()</parameter_list>
        <block pos:line="268" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="269" pos:column="13">Runtime</name><op:operator pos:line="269" pos:column="20">.</op:operator><name pos:line="269" pos:column="21">Configuration</name><op:operator pos:line="269" pos:column="34">.</op:operator><name pos:line="269" pos:column="35">Inspectors</name><op:operator pos:line="269" pos:column="45">.</op:operator><name pos:line="269" pos:column="46">Add</name></name><argument_list pos:line="269" pos:column="49">(<argument><expr><name><name pos:line="269" pos:column="50">Runtime</name><op:operator pos:line="269" pos:column="57">.</op:operator><name pos:line="269" pos:column="58">InspectorMock</name><op:operator pos:line="269" pos:column="71">.</op:operator><name pos:line="269" pos:column="72">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="271" pos:column="13">Runtime</name><op:operator pos:line="271" pos:column="20">.</op:operator><name pos:line="271" pos:column="21">Initialize</name></name><argument_list pos:line="271" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="273" pos:column="13">Runtime</name><op:operator pos:line="273" pos:column="20">.</op:operator><name pos:line="273" pos:column="21">InspectorMock</name><op:operator pos:line="273" pos:column="34">.</op:operator><name pos:line="273" pos:column="35">Verify</name></name><argument_list pos:line="273" pos:column="41">(<argument><expr><lambda><name pos:line="273" pos:column="42">pi</name> <op:operator pos:line="273" pos:column="45">=&gt;</op:operator> <call><name><name pos:line="273" pos:column="48">pi</name><op:operator pos:line="273" pos:column="50">.</op:operator><name pos:line="273" pos:column="51">Setup</name></name><argument_list pos:line="273" pos:column="56">(<argument><expr><call><name><name pos:line="273" pos:column="57">It</name><op:operator pos:line="273" pos:column="59">.</op:operator><name><name pos:line="273" pos:column="60">IsAny</name><argument_list pos:line="273" pos:column="65">&lt;<argument><name pos:line="273" pos:column="66">IInspectorContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="273" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="273" pos:column="89">Times</name><op:operator pos:line="273" pos:column="94">.</op:operator><name pos:line="273" pos:column="95">Once</name></name><argument_list pos:line="273" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="276" pos:column="9">[<expr><name pos:line="276" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="277" pos:column="9">public</specifier> <name pos:line="277" pos:column="16">void</name></type> <name pos:line="277" pos:column="21">InitializeWithInspectorThatFails</name><parameter_list pos:line="277" pos:column="53">()</parameter_list>
        <block pos:line="278" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="279" pos:column="13">Runtime</name><op:operator pos:line="279" pos:column="20">.</op:operator><name pos:line="279" pos:column="21">InspectorMock</name><op:operator pos:line="279" pos:column="34">.</op:operator><name pos:line="279" pos:column="35">Setup</name></name><argument_list pos:line="279" pos:column="40">(<argument><expr><lambda><name pos:line="279" pos:column="41">pi</name> <op:operator pos:line="279" pos:column="44">=&gt;</op:operator> <call><name><name pos:line="279" pos:column="47">pi</name><op:operator pos:line="279" pos:column="49">.</op:operator><name pos:line="279" pos:column="50">Setup</name></name><argument_list pos:line="279" pos:column="55">(<argument><expr><call><name><name pos:line="279" pos:column="56">It</name><op:operator pos:line="279" pos:column="58">.</op:operator><name><name pos:line="279" pos:column="59">IsAny</name><argument_list pos:line="279" pos:column="64">&lt;<argument><name pos:line="279" pos:column="65">IInspectorContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="279" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="279" pos:column="87">.</op:operator><call><name><name pos:line="279" pos:column="88">Throws</name><argument_list pos:line="279" pos:column="94">&lt;<argument><name pos:line="279" pos:column="95">DummyException</name></argument>&gt;</argument_list></name><argument_list pos:line="279" pos:column="110">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="281" pos:column="13">Runtime</name><op:operator pos:line="281" pos:column="20">.</op:operator><name pos:line="281" pos:column="21">Configuration</name><op:operator pos:line="281" pos:column="34">.</op:operator><name pos:line="281" pos:column="35">Inspectors</name><op:operator pos:line="281" pos:column="45">.</op:operator><name pos:line="281" pos:column="46">Add</name></name><argument_list pos:line="281" pos:column="49">(<argument><expr><name><name pos:line="281" pos:column="50">Runtime</name><op:operator pos:line="281" pos:column="57">.</op:operator><name pos:line="281" pos:column="58">InspectorMock</name><op:operator pos:line="281" pos:column="71">.</op:operator><name pos:line="281" pos:column="72">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="283" pos:column="13">Runtime</name><op:operator pos:line="283" pos:column="20">.</op:operator><name pos:line="283" pos:column="21">Initialize</name></name><argument_list pos:line="283" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="285" pos:column="13">Runtime</name><op:operator pos:line="285" pos:column="20">.</op:operator><name pos:line="285" pos:column="21">InspectorMock</name><op:operator pos:line="285" pos:column="34">.</op:operator><name pos:line="285" pos:column="35">Verify</name></name><argument_list pos:line="285" pos:column="41">(<argument><expr><lambda><name pos:line="285" pos:column="42">pi</name> <op:operator pos:line="285" pos:column="45">=&gt;</op:operator> <call><name><name pos:line="285" pos:column="48">pi</name><op:operator pos:line="285" pos:column="50">.</op:operator><name pos:line="285" pos:column="51">Setup</name></name><argument_list pos:line="285" pos:column="56">(<argument><expr><call><name><name pos:line="285" pos:column="57">It</name><op:operator pos:line="285" pos:column="59">.</op:operator><name><name pos:line="285" pos:column="60">IsAny</name><argument_list pos:line="285" pos:column="65">&lt;<argument><name pos:line="285" pos:column="66">IInspectorContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="285" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="285" pos:column="89">Times</name><op:operator pos:line="285" pos:column="94">.</op:operator><name pos:line="285" pos:column="95">Once</name></name><argument_list pos:line="285" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="286" pos:column="13">Runtime</name><op:operator pos:line="286" pos:column="20">.</op:operator><name pos:line="286" pos:column="21">LoggerMock</name><op:operator pos:line="286" pos:column="31">.</op:operator><name pos:line="286" pos:column="32">Verify</name></name><argument_list pos:line="286" pos:column="38">(<argument><expr><lambda><name pos:line="286" pos:column="39">l</name> <op:operator pos:line="286" pos:column="41">=&gt;</op:operator> <call><name><name pos:line="286" pos:column="44">l</name><op:operator pos:line="286" pos:column="45">.</op:operator><name pos:line="286" pos:column="46">Error</name></name><argument_list pos:line="286" pos:column="51">(<argument><expr><call><name><name pos:line="286" pos:column="52">It</name><op:operator pos:line="286" pos:column="54">.</op:operator><name><name pos:line="286" pos:column="55">IsAny</name><argument_list pos:line="286" pos:column="60">&lt;<argument><name pos:line="286" pos:column="61">string</name></argument>&gt;</argument_list></name></name><argument_list pos:line="286" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="286" pos:column="72">It</name><op:operator pos:line="286" pos:column="74">.</op:operator><name><name pos:line="286" pos:column="75">IsAny</name><argument_list pos:line="286" pos:column="80">&lt;<argument><name pos:line="286" pos:column="81">DummyException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="286" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="286" pos:column="101">Times</name><op:operator pos:line="286" pos:column="106">.</op:operator><name pos:line="286" pos:column="107">AtMost</name></name><argument_list pos:line="286" pos:column="113">(<argument><expr><name><name pos:line="286" pos:column="114">Runtime</name><op:operator pos:line="286" pos:column="121">.</op:operator><name pos:line="286" pos:column="122">Configuration</name><op:operator pos:line="286" pos:column="135">.</op:operator><name pos:line="286" pos:column="136">Inspectors</name><op:operator pos:line="286" pos:column="146">.</op:operator><name pos:line="286" pos:column="147">Count</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="289" pos:column="9">[<expr><name pos:line="289" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="290" pos:column="9">public</specifier> <name pos:line="290" pos:column="16">void</name></type> <name pos:line="290" pos:column="21">InjectHttpResponseBodyDuringEndRequest</name><parameter_list pos:line="290" pos:column="59">()</parameter_list>
        <block pos:line="291" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="292" pos:column="13">Runtime</name><op:operator pos:line="292" pos:column="20">.</op:operator><name pos:line="292" pos:column="21">Initialize</name></name><argument_list pos:line="292" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="293" pos:column="13">Runtime</name><op:operator pos:line="293" pos:column="20">.</op:operator><name pos:line="293" pos:column="21">BeginRequest</name></name><argument_list pos:line="293" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="294" pos:column="13">Runtime</name><op:operator pos:line="294" pos:column="20">.</op:operator><name pos:line="294" pos:column="21">EndRequest</name></name><argument_list pos:line="294" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="296" pos:column="13">Runtime</name><op:operator pos:line="296" pos:column="20">.</op:operator><name pos:line="296" pos:column="21">FrameworkProviderMock</name><op:operator pos:line="296" pos:column="42">.</op:operator><name pos:line="296" pos:column="43">Verify</name></name><argument_list pos:line="296" pos:column="49">(<argument><expr><lambda><name pos:line="296" pos:column="50">fp</name> <op:operator pos:line="296" pos:column="53">=&gt;</op:operator> <call><name><name pos:line="296" pos:column="56">fp</name><op:operator pos:line="296" pos:column="58">.</op:operator><name pos:line="296" pos:column="59">InjectHttpResponseBody</name></name><argument_list pos:line="296" pos:column="81">(<argument><expr><call><name><name pos:line="296" pos:column="82">It</name><op:operator pos:line="296" pos:column="84">.</op:operator><name><name pos:line="296" pos:column="85">IsAny</name><argument_list pos:line="296" pos:column="90">&lt;<argument><name pos:line="296" pos:column="91">string</name></argument>&gt;</argument_list></name></name><argument_list pos:line="296" pos:column="98">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="299" pos:column="9">[<expr><name pos:line="299" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="300" pos:column="9">public</specifier> <name pos:line="300" pos:column="16">void</name></type> <name pos:line="300" pos:column="21">PersistDataDuringEndRequest</name><parameter_list pos:line="300" pos:column="48">()</parameter_list>
        <block pos:line="301" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="302" pos:column="13">Runtime</name><op:operator pos:line="302" pos:column="20">.</op:operator><name pos:line="302" pos:column="21">Configuration</name><op:operator pos:line="302" pos:column="34">.</op:operator><name pos:line="302" pos:column="35">Tabs</name><op:operator pos:line="302" pos:column="39">.</op:operator><name pos:line="302" pos:column="40">Add</name></name><argument_list pos:line="302" pos:column="43">(<argument><expr><name><name pos:line="302" pos:column="44">Runtime</name><op:operator pos:line="302" pos:column="51">.</op:operator><name pos:line="302" pos:column="52">TabMock</name><op:operator pos:line="302" pos:column="59">.</op:operator><name pos:line="302" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="303" pos:column="13">Runtime</name><op:operator pos:line="303" pos:column="20">.</op:operator><name pos:line="303" pos:column="21">Initialize</name></name><argument_list pos:line="303" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="304" pos:column="13">Runtime</name><op:operator pos:line="304" pos:column="20">.</op:operator><name pos:line="304" pos:column="21">BeginRequest</name></name><argument_list pos:line="304" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="305" pos:column="13">Runtime</name><op:operator pos:line="305" pos:column="20">.</op:operator><name pos:line="305" pos:column="21">EndRequest</name></name><argument_list pos:line="305" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="307" pos:column="13">Runtime</name><op:operator pos:line="307" pos:column="20">.</op:operator><name pos:line="307" pos:column="21">PersistenceStoreMock</name><op:operator pos:line="307" pos:column="41">.</op:operator><name pos:line="307" pos:column="42">Verify</name></name><argument_list pos:line="307" pos:column="48">(<argument><expr><lambda><name pos:line="307" pos:column="49">ps</name> <op:operator pos:line="307" pos:column="52">=&gt;</op:operator> <call><name><name pos:line="307" pos:column="55">ps</name><op:operator pos:line="307" pos:column="57">.</op:operator><name pos:line="307" pos:column="58">Save</name></name><argument_list pos:line="307" pos:column="62">(<argument><expr><call><name><name pos:line="307" pos:column="63">It</name><op:operator pos:line="307" pos:column="65">.</op:operator><name><name pos:line="307" pos:column="66">IsAny</name><argument_list pos:line="307" pos:column="71">&lt;<argument><name pos:line="307" pos:column="72">GlimpseRequest</name></argument>&gt;</argument_list></name></name><argument_list pos:line="307" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="310" pos:column="9">[<expr><name pos:line="310" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="311" pos:column="9">public</specifier> <name pos:line="311" pos:column="16">void</name></type> <name pos:line="311" pos:column="21">SetResponseHeaderDuringEndRequest</name><parameter_list pos:line="311" pos:column="54">()</parameter_list>
        <block pos:line="312" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="313" pos:column="13">Runtime</name><op:operator pos:line="313" pos:column="20">.</op:operator><name pos:line="313" pos:column="21">Configuration</name><op:operator pos:line="313" pos:column="34">.</op:operator><name pos:line="313" pos:column="35">Tabs</name><op:operator pos:line="313" pos:column="39">.</op:operator><name pos:line="313" pos:column="40">Add</name></name><argument_list pos:line="313" pos:column="43">(<argument><expr><name><name pos:line="313" pos:column="44">Runtime</name><op:operator pos:line="313" pos:column="51">.</op:operator><name pos:line="313" pos:column="52">TabMock</name><op:operator pos:line="313" pos:column="59">.</op:operator><name pos:line="313" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="314" pos:column="13">Runtime</name><op:operator pos:line="314" pos:column="20">.</op:operator><name pos:line="314" pos:column="21">Initialize</name></name><argument_list pos:line="314" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="315" pos:column="13">Runtime</name><op:operator pos:line="315" pos:column="20">.</op:operator><name pos:line="315" pos:column="21">BeginRequest</name></name><argument_list pos:line="315" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="316" pos:column="13">Runtime</name><op:operator pos:line="316" pos:column="20">.</op:operator><name pos:line="316" pos:column="21">EndRequest</name></name><argument_list pos:line="316" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="318" pos:column="13">Runtime</name><op:operator pos:line="318" pos:column="20">.</op:operator><name pos:line="318" pos:column="21">FrameworkProviderMock</name><op:operator pos:line="318" pos:column="42">.</op:operator><name pos:line="318" pos:column="43">Verify</name></name><argument_list pos:line="318" pos:column="49">(<argument><expr><lambda><name pos:line="318" pos:column="50">fp</name> <op:operator pos:line="318" pos:column="53">=&gt;</op:operator> <call><name><name pos:line="318" pos:column="56">fp</name><op:operator pos:line="318" pos:column="58">.</op:operator><name pos:line="318" pos:column="59">SetHttpResponseHeader</name></name><argument_list pos:line="318" pos:column="80">(<argument><expr><name><name pos:line="318" pos:column="81">Constants</name><op:operator pos:line="318" pos:column="90">.</op:operator><name pos:line="318" pos:column="91">HttpResponseHeader</name></name></expr></argument>, <argument><expr><call><name><name pos:line="318" pos:column="111">It</name><op:operator pos:line="318" pos:column="113">.</op:operator><name><name pos:line="318" pos:column="114">IsAny</name><argument_list pos:line="318" pos:column="119">&lt;<argument><name pos:line="318" pos:column="120">string</name></argument>&gt;</argument_list></name></name><argument_list pos:line="318" pos:column="127">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="321" pos:column="9">[<expr><name pos:line="321" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="322" pos:column="9">public</specifier> <name pos:line="322" pos:column="16">void</name></type> <name pos:line="322" pos:column="21">ExecuteResourceWithOrderedParameters</name><parameter_list pos:line="322" pos:column="57">()</parameter_list>
        <block pos:line="323" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="324" pos:column="13">var</name></type> <name pos:line="324" pos:column="17">name</name> <init pos:line="324" pos:column="22">= <expr><lit:literal type="string" pos:line="324" pos:column="24">"TestResource"</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="325" pos:column="13">Runtime</name><op:operator pos:line="325" pos:column="20">.</op:operator><name pos:line="325" pos:column="21">ResourceMock</name><op:operator pos:line="325" pos:column="33">.</op:operator><name pos:line="325" pos:column="34">Setup</name></name><argument_list pos:line="325" pos:column="39">(<argument><expr><lambda><name pos:line="325" pos:column="40">r</name> <op:operator pos:line="325" pos:column="42">=&gt;</op:operator> <name><name pos:line="325" pos:column="45">r</name><op:operator pos:line="325" pos:column="46">.</op:operator><name pos:line="325" pos:column="47">Name</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="325" pos:column="52">.</op:operator><call><name pos:line="325" pos:column="53">Returns</name><argument_list pos:line="325" pos:column="60">(<argument><expr><name pos:line="325" pos:column="61">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="326" pos:column="13">Runtime</name><op:operator pos:line="326" pos:column="20">.</op:operator><name pos:line="326" pos:column="21">ResourceMock</name><op:operator pos:line="326" pos:column="33">.</op:operator><name pos:line="326" pos:column="34">Setup</name></name><argument_list pos:line="326" pos:column="39">(<argument><expr><lambda><name pos:line="326" pos:column="40">r</name> <op:operator pos:line="326" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="326" pos:column="45">r</name><op:operator pos:line="326" pos:column="46">.</op:operator><name pos:line="326" pos:column="47">Execute</name></name><argument_list pos:line="326" pos:column="54">(<argument><expr><call><name><name pos:line="326" pos:column="55">It</name><op:operator pos:line="326" pos:column="57">.</op:operator><name><name pos:line="326" pos:column="58">IsAny</name><argument_list pos:line="326" pos:column="63">&lt;<argument><name pos:line="326" pos:column="64">IResourceContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="326" pos:column="81">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="326" pos:column="85">.</op:operator><call><name pos:line="326" pos:column="86">Returns</name><argument_list pos:line="326" pos:column="93">(<argument><expr><name><name pos:line="326" pos:column="94">Runtime</name><op:operator pos:line="326" pos:column="101">.</op:operator><name pos:line="326" pos:column="102">ResourceResultMock</name><op:operator pos:line="326" pos:column="120">.</op:operator><name pos:line="326" pos:column="121">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="327" pos:column="13">Runtime</name><op:operator pos:line="327" pos:column="20">.</op:operator><name pos:line="327" pos:column="21">Configuration</name><op:operator pos:line="327" pos:column="34">.</op:operator><name pos:line="327" pos:column="35">Resources</name><op:operator pos:line="327" pos:column="44">.</op:operator><name pos:line="327" pos:column="45">Add</name></name><argument_list pos:line="327" pos:column="48">(<argument><expr><name><name pos:line="327" pos:column="49">Runtime</name><op:operator pos:line="327" pos:column="56">.</op:operator><name pos:line="327" pos:column="57">ResourceMock</name><op:operator pos:line="327" pos:column="69">.</op:operator><name pos:line="327" pos:column="70">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="329" pos:column="13">Runtime</name><op:operator pos:line="329" pos:column="20">.</op:operator><name pos:line="329" pos:column="21">ExecuteResource</name></name><argument_list pos:line="329" pos:column="36">(<argument><expr><call><name><name pos:line="329" pos:column="37">name</name><op:operator pos:line="329" pos:column="41">.</op:operator><name pos:line="329" pos:column="42">ToLower</name></name><argument_list pos:line="329" pos:column="49">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="329" pos:column="53">new</op:operator> <call><name pos:line="329" pos:column="57">ResourceParameters</name><argument_list pos:line="329" pos:column="75">(<argument><expr><op:operator pos:line="329" pos:column="76">new</op:operator><index pos:line="329" pos:column="79">[]</index> <block pos:line="329" pos:column="82">{ <expr><lit:literal type="string" pos:line="329" pos:column="84">"One"</lit:literal></expr><op:operator pos:line="329" pos:column="89">,</op:operator> <expr><lit:literal type="string" pos:line="329" pos:column="91">"Two"</lit:literal></expr> }</block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="331" pos:column="13">Runtime</name><op:operator pos:line="331" pos:column="20">.</op:operator><name pos:line="331" pos:column="21">ResourceMock</name><op:operator pos:line="331" pos:column="33">.</op:operator><name pos:line="331" pos:column="34">Verify</name></name><argument_list pos:line="331" pos:column="40">(<argument><expr><lambda><name pos:line="331" pos:column="41">r</name> <op:operator pos:line="331" pos:column="43">=&gt;</op:operator> <call><name><name pos:line="331" pos:column="46">r</name><op:operator pos:line="331" pos:column="47">.</op:operator><name pos:line="331" pos:column="48">Execute</name></name><argument_list pos:line="331" pos:column="55">(<argument><expr><call><name><name pos:line="331" pos:column="56">It</name><op:operator pos:line="331" pos:column="58">.</op:operator><name><name pos:line="331" pos:column="59">IsAny</name><argument_list pos:line="331" pos:column="64">&lt;<argument><name pos:line="331" pos:column="65">IResourceContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="331" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="331" pos:column="87">Times</name><op:operator pos:line="331" pos:column="92">.</op:operator><name pos:line="331" pos:column="93">Once</name></name><argument_list pos:line="331" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="332" pos:column="13">Runtime</name><op:operator pos:line="332" pos:column="20">.</op:operator><name pos:line="332" pos:column="21">ResourceResultMock</name><op:operator pos:line="332" pos:column="39">.</op:operator><name pos:line="332" pos:column="40">Verify</name></name><argument_list pos:line="332" pos:column="46">(<argument><expr><lambda><name pos:line="332" pos:column="47">r</name> <op:operator pos:line="332" pos:column="49">=&gt;</op:operator> <call><name><name pos:line="332" pos:column="52">r</name><op:operator pos:line="332" pos:column="53">.</op:operator><name pos:line="332" pos:column="54">Execute</name></name><argument_list pos:line="332" pos:column="61">(<argument><expr><call><name><name pos:line="332" pos:column="62">It</name><op:operator pos:line="332" pos:column="64">.</op:operator><name><name pos:line="332" pos:column="65">IsAny</name><argument_list pos:line="332" pos:column="70">&lt;<argument><name pos:line="332" pos:column="71">IResourceResultContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="332" pos:column="94">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="335" pos:column="9">[<expr><name pos:line="335" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="336" pos:column="9">public</specifier> <name pos:line="336" pos:column="16">void</name></type> <name pos:line="336" pos:column="21">ExecuteResourceWithNamedParameters</name><parameter_list pos:line="336" pos:column="55">()</parameter_list>
        <block pos:line="337" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="338" pos:column="13">var</name></type> <name pos:line="338" pos:column="17">name</name> <init pos:line="338" pos:column="22">= <expr><lit:literal type="string" pos:line="338" pos:column="24">"TestResource"</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="339" pos:column="13">Runtime</name><op:operator pos:line="339" pos:column="20">.</op:operator><name pos:line="339" pos:column="21">ResourceMock</name><op:operator pos:line="339" pos:column="33">.</op:operator><name pos:line="339" pos:column="34">Setup</name></name><argument_list pos:line="339" pos:column="39">(<argument><expr><lambda><name pos:line="339" pos:column="40">r</name> <op:operator pos:line="339" pos:column="42">=&gt;</op:operator> <name><name pos:line="339" pos:column="45">r</name><op:operator pos:line="339" pos:column="46">.</op:operator><name pos:line="339" pos:column="47">Name</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="339" pos:column="52">.</op:operator><call><name pos:line="339" pos:column="53">Returns</name><argument_list pos:line="339" pos:column="60">(<argument><expr><name pos:line="339" pos:column="61">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="340" pos:column="13">Runtime</name><op:operator pos:line="340" pos:column="20">.</op:operator><name pos:line="340" pos:column="21">ResourceMock</name><op:operator pos:line="340" pos:column="33">.</op:operator><name pos:line="340" pos:column="34">Setup</name></name><argument_list pos:line="340" pos:column="39">(<argument><expr><lambda><name pos:line="340" pos:column="40">r</name> <op:operator pos:line="340" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="340" pos:column="45">r</name><op:operator pos:line="340" pos:column="46">.</op:operator><name pos:line="340" pos:column="47">Execute</name></name><argument_list pos:line="340" pos:column="54">(<argument><expr><call><name><name pos:line="340" pos:column="55">It</name><op:operator pos:line="340" pos:column="57">.</op:operator><name><name pos:line="340" pos:column="58">IsAny</name><argument_list pos:line="340" pos:column="63">&lt;<argument><name pos:line="340" pos:column="64">IResourceContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="340" pos:column="81">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="340" pos:column="85">.</op:operator><call><name pos:line="340" pos:column="86">Returns</name><argument_list pos:line="340" pos:column="93">(<argument><expr><name><name pos:line="340" pos:column="94">Runtime</name><op:operator pos:line="340" pos:column="101">.</op:operator><name pos:line="340" pos:column="102">ResourceResultMock</name><op:operator pos:line="340" pos:column="120">.</op:operator><name pos:line="340" pos:column="121">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="341" pos:column="13">Runtime</name><op:operator pos:line="341" pos:column="20">.</op:operator><name pos:line="341" pos:column="21">Configuration</name><op:operator pos:line="341" pos:column="34">.</op:operator><name pos:line="341" pos:column="35">Resources</name><op:operator pos:line="341" pos:column="44">.</op:operator><name pos:line="341" pos:column="45">Add</name></name><argument_list pos:line="341" pos:column="48">(<argument><expr><name><name pos:line="341" pos:column="49">Runtime</name><op:operator pos:line="341" pos:column="56">.</op:operator><name pos:line="341" pos:column="57">ResourceMock</name><op:operator pos:line="341" pos:column="69">.</op:operator><name pos:line="341" pos:column="70">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="343" pos:column="13">Runtime</name><op:operator pos:line="343" pos:column="20">.</op:operator><name pos:line="343" pos:column="21">ExecuteResource</name></name><argument_list pos:line="343" pos:column="36">(<argument><expr><call><name><name pos:line="343" pos:column="37">name</name><op:operator pos:line="343" pos:column="41">.</op:operator><name pos:line="343" pos:column="42">ToLower</name></name><argument_list pos:line="343" pos:column="49">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="343" pos:column="53">new</op:operator> <call><name pos:line="343" pos:column="57">ResourceParameters</name><argument_list pos:line="343" pos:column="75">(<argument><expr><op:operator pos:line="343" pos:column="76">new</op:operator> <name><name pos:line="343" pos:column="80">Dictionary</name><argument_list pos:line="343" pos:column="90">&lt;<argument><name pos:line="343" pos:column="91">string</name></argument>, <argument><name pos:line="343" pos:column="99">string</name></argument>&gt;</argument_list></name> <block pos:line="343" pos:column="107">{ <expr><block pos:line="343" pos:column="109">{ <expr><lit:literal type="string" pos:line="343" pos:column="111">"One"</lit:literal></expr><op:operator pos:line="343" pos:column="116">,</op:operator> <expr><lit:literal type="string" pos:line="343" pos:column="118">"1"</lit:literal></expr> }</block></expr><op:operator pos:line="343" pos:column="123">,</op:operator> <expr><block pos:line="343" pos:column="125">{ <expr><lit:literal type="string" pos:line="343" pos:column="127">"Two"</lit:literal></expr><op:operator pos:line="343" pos:column="132">,</op:operator> <expr><lit:literal type="string" pos:line="343" pos:column="134">"2"</lit:literal></expr> }</block></expr> }</block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="345" pos:column="13">Runtime</name><op:operator pos:line="345" pos:column="20">.</op:operator><name pos:line="345" pos:column="21">ResourceMock</name><op:operator pos:line="345" pos:column="33">.</op:operator><name pos:line="345" pos:column="34">Verify</name></name><argument_list pos:line="345" pos:column="40">(<argument><expr><lambda><name pos:line="345" pos:column="41">r</name> <op:operator pos:line="345" pos:column="43">=&gt;</op:operator> <call><name><name pos:line="345" pos:column="46">r</name><op:operator pos:line="345" pos:column="47">.</op:operator><name pos:line="345" pos:column="48">Execute</name></name><argument_list pos:line="345" pos:column="55">(<argument><expr><call><name><name pos:line="345" pos:column="56">It</name><op:operator pos:line="345" pos:column="58">.</op:operator><name><name pos:line="345" pos:column="59">IsAny</name><argument_list pos:line="345" pos:column="64">&lt;<argument><name pos:line="345" pos:column="65">IResourceContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="345" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="345" pos:column="87">Times</name><op:operator pos:line="345" pos:column="92">.</op:operator><name pos:line="345" pos:column="93">Once</name></name><argument_list pos:line="345" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="346" pos:column="13">Runtime</name><op:operator pos:line="346" pos:column="20">.</op:operator><name pos:line="346" pos:column="21">ResourceResultMock</name><op:operator pos:line="346" pos:column="39">.</op:operator><name pos:line="346" pos:column="40">Verify</name></name><argument_list pos:line="346" pos:column="46">(<argument><expr><lambda><name pos:line="346" pos:column="47">r</name> <op:operator pos:line="346" pos:column="49">=&gt;</op:operator> <call><name><name pos:line="346" pos:column="52">r</name><op:operator pos:line="346" pos:column="53">.</op:operator><name pos:line="346" pos:column="54">Execute</name></name><argument_list pos:line="346" pos:column="61">(<argument><expr><call><name><name pos:line="346" pos:column="62">It</name><op:operator pos:line="346" pos:column="64">.</op:operator><name><name pos:line="346" pos:column="65">IsAny</name><argument_list pos:line="346" pos:column="70">&lt;<argument><name pos:line="346" pos:column="71">IResourceResultContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="346" pos:column="94">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="349" pos:column="9">[<expr><name pos:line="349" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="350" pos:column="9">public</specifier> <name pos:line="350" pos:column="16">void</name></type> <name pos:line="350" pos:column="21">HandleUnknownResource</name><parameter_list pos:line="350" pos:column="42">()</parameter_list>
        <block pos:line="351" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="352" pos:column="13">Runtime</name><op:operator pos:line="352" pos:column="20">.</op:operator><name pos:line="352" pos:column="21">Configuration</name><op:operator pos:line="352" pos:column="34">.</op:operator><name pos:line="352" pos:column="35">Resources</name><op:operator pos:line="352" pos:column="44">.</op:operator><name pos:line="352" pos:column="45">Clear</name></name><argument_list pos:line="352" pos:column="50">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="354" pos:column="13">Runtime</name><op:operator pos:line="354" pos:column="20">.</op:operator><name pos:line="354" pos:column="21">ExecuteResource</name></name><argument_list pos:line="354" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="354" pos:column="37">"random name that doesn't exist"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="354" pos:column="71">new</op:operator> <call><name pos:line="354" pos:column="75">ResourceParameters</name><argument_list pos:line="354" pos:column="93">(<argument><expr><op:operator pos:line="354" pos:column="94">new</op:operator> <name><name pos:line="354" pos:column="98">string</name><index pos:line="354" pos:column="104">[]</index></name> <block pos:line="354" pos:column="107">{ }</block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="356" pos:column="13">Runtime</name><op:operator pos:line="356" pos:column="20">.</op:operator><name pos:line="356" pos:column="21">FrameworkProviderMock</name><op:operator pos:line="356" pos:column="42">.</op:operator><name pos:line="356" pos:column="43">Verify</name></name><argument_list pos:line="356" pos:column="49">(<argument><expr><lambda><name pos:line="356" pos:column="50">fp</name> <op:operator pos:line="356" pos:column="53">=&gt;</op:operator> <call><name><name pos:line="356" pos:column="56">fp</name><op:operator pos:line="356" pos:column="58">.</op:operator><name pos:line="356" pos:column="59">SetHttpResponseStatusCode</name></name><argument_list pos:line="356" pos:column="84">(<argument><expr><lit:literal type="number" pos:line="356" pos:column="85">404</lit:literal></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="356" pos:column="91">Times</name><op:operator pos:line="356" pos:column="96">.</op:operator><name pos:line="356" pos:column="97">Once</name></name><argument_list pos:line="356" pos:column="101">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="359" pos:column="9">[<expr><name pos:line="359" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="360" pos:column="9">public</specifier> <name pos:line="360" pos:column="16">void</name></type> <name pos:line="360" pos:column="21">HandleDuplicateResources</name><parameter_list pos:line="360" pos:column="45">()</parameter_list>
        <block pos:line="361" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="362" pos:column="13">var</name></type> <name pos:line="362" pos:column="17">name</name> <init pos:line="362" pos:column="22">= <expr><lit:literal type="string" pos:line="362" pos:column="24">"Duplicate"</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="363" pos:column="13">Runtime</name><op:operator pos:line="363" pos:column="20">.</op:operator><name pos:line="363" pos:column="21">ResourceMock</name><op:operator pos:line="363" pos:column="33">.</op:operator><name pos:line="363" pos:column="34">Setup</name></name><argument_list pos:line="363" pos:column="39">(<argument><expr><lambda><name pos:line="363" pos:column="40">r</name> <op:operator pos:line="363" pos:column="42">=&gt;</op:operator> <name><name pos:line="363" pos:column="45">r</name><op:operator pos:line="363" pos:column="46">.</op:operator><name pos:line="363" pos:column="47">Name</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="363" pos:column="52">.</op:operator><call><name pos:line="363" pos:column="53">Returns</name><argument_list pos:line="363" pos:column="60">(<argument><expr><name pos:line="363" pos:column="61">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="365" pos:column="13">Runtime</name><op:operator pos:line="365" pos:column="20">.</op:operator><name pos:line="365" pos:column="21">Configuration</name><op:operator pos:line="365" pos:column="34">.</op:operator><name pos:line="365" pos:column="35">Resources</name><op:operator pos:line="365" pos:column="44">.</op:operator><name pos:line="365" pos:column="45">Add</name></name><argument_list pos:line="365" pos:column="48">(<argument><expr><name><name pos:line="365" pos:column="49">Runtime</name><op:operator pos:line="365" pos:column="56">.</op:operator><name pos:line="365" pos:column="57">ResourceMock</name><op:operator pos:line="365" pos:column="69">.</op:operator><name pos:line="365" pos:column="70">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="366" pos:column="13">Runtime</name><op:operator pos:line="366" pos:column="20">.</op:operator><name pos:line="366" pos:column="21">Configuration</name><op:operator pos:line="366" pos:column="34">.</op:operator><name pos:line="366" pos:column="35">Resources</name><op:operator pos:line="366" pos:column="44">.</op:operator><name pos:line="366" pos:column="45">Add</name></name><argument_list pos:line="366" pos:column="48">(<argument><expr><name><name pos:line="366" pos:column="49">Runtime</name><op:operator pos:line="366" pos:column="56">.</op:operator><name pos:line="366" pos:column="57">ResourceMock</name><op:operator pos:line="366" pos:column="69">.</op:operator><name pos:line="366" pos:column="70">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="368" pos:column="13">Runtime</name><op:operator pos:line="368" pos:column="20">.</op:operator><name pos:line="368" pos:column="21">ExecuteResource</name></name><argument_list pos:line="368" pos:column="36">(<argument><expr><name pos:line="368" pos:column="37">name</name></expr></argument>, <argument><expr><op:operator pos:line="368" pos:column="43">new</op:operator> <call><name pos:line="368" pos:column="47">ResourceParameters</name><argument_list pos:line="368" pos:column="65">(<argument><expr><op:operator pos:line="368" pos:column="66">new</op:operator> <name><name pos:line="368" pos:column="70">string</name><index pos:line="368" pos:column="76">[]</index></name> <block pos:line="368" pos:column="79">{ }</block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="370" pos:column="13">Runtime</name><op:operator pos:line="370" pos:column="20">.</op:operator><name pos:line="370" pos:column="21">FrameworkProviderMock</name><op:operator pos:line="370" pos:column="42">.</op:operator><name pos:line="370" pos:column="43">Verify</name></name><argument_list pos:line="370" pos:column="49">(<argument><expr><lambda><name pos:line="370" pos:column="50">fp</name> <op:operator pos:line="370" pos:column="53">=&gt;</op:operator> <call><name><name pos:line="370" pos:column="56">fp</name><op:operator pos:line="370" pos:column="58">.</op:operator><name pos:line="370" pos:column="59">SetHttpResponseStatusCode</name></name><argument_list pos:line="370" pos:column="84">(<argument><expr><lit:literal type="number" pos:line="370" pos:column="85">500</lit:literal></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="370" pos:column="91">Times</name><op:operator pos:line="370" pos:column="96">.</op:operator><name pos:line="370" pos:column="97">Once</name></name><argument_list pos:line="370" pos:column="101">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="373" pos:column="9">[<expr><name pos:line="373" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="374" pos:column="9">public</specifier> <name pos:line="374" pos:column="16">void</name></type> <name pos:line="374" pos:column="21">ThrowExceptionWithEmptyResourceName</name><parameter_list pos:line="374" pos:column="56">()</parameter_list>
        <block pos:line="375" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="376" pos:column="13">Assert</name><op:operator pos:line="376" pos:column="19">.</op:operator><name><name pos:line="376" pos:column="20">Throws</name><argument_list pos:line="376" pos:column="26">&lt;<argument><name pos:line="376" pos:column="27">ArgumentNullException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="376" pos:column="49">(<argument><expr><lambda><parameter_list pos:line="376" pos:column="50">()</parameter_list> <op:operator pos:line="376" pos:column="53">=&gt;</op:operator> <call><name><name pos:line="376" pos:column="56">Runtime</name><op:operator pos:line="376" pos:column="63">.</op:operator><name pos:line="376" pos:column="64">ExecuteResource</name></name><argument_list pos:line="376" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="376" pos:column="80">""</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="376" pos:column="84">new</op:operator> <call><name pos:line="376" pos:column="88">ResourceParameters</name><argument_list pos:line="376" pos:column="106">(<argument><expr><op:operator pos:line="376" pos:column="107">new</op:operator> <name><name pos:line="376" pos:column="111">string</name><index pos:line="376" pos:column="117">[]</index></name> <block pos:line="376" pos:column="120">{ }</block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="379" pos:column="9">[<expr><name pos:line="379" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="380" pos:column="9">public</specifier> <name pos:line="380" pos:column="16">void</name></type> <name pos:line="380" pos:column="21">HandleResourcesThatThrowExceptions</name><parameter_list pos:line="380" pos:column="55">()</parameter_list>
        <block pos:line="381" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="382" pos:column="13">var</name></type> <name pos:line="382" pos:column="17">name</name> <init pos:line="382" pos:column="22">= <expr><lit:literal type="string" pos:line="382" pos:column="24">"Anything"</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="383" pos:column="13">Runtime</name><op:operator pos:line="383" pos:column="20">.</op:operator><name pos:line="383" pos:column="21">ResourceMock</name><op:operator pos:line="383" pos:column="33">.</op:operator><name pos:line="383" pos:column="34">Setup</name></name><argument_list pos:line="383" pos:column="39">(<argument><expr><lambda><name pos:line="383" pos:column="40">r</name> <op:operator pos:line="383" pos:column="42">=&gt;</op:operator> <name><name pos:line="383" pos:column="45">r</name><op:operator pos:line="383" pos:column="46">.</op:operator><name pos:line="383" pos:column="47">Name</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="383" pos:column="52">.</op:operator><call><name pos:line="383" pos:column="53">Returns</name><argument_list pos:line="383" pos:column="60">(<argument><expr><name pos:line="383" pos:column="61">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="384" pos:column="13">Runtime</name><op:operator pos:line="384" pos:column="20">.</op:operator><name pos:line="384" pos:column="21">ResourceMock</name><op:operator pos:line="384" pos:column="33">.</op:operator><name pos:line="384" pos:column="34">Setup</name></name><argument_list pos:line="384" pos:column="39">(<argument><expr><lambda><name pos:line="384" pos:column="40">r</name> <op:operator pos:line="384" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="384" pos:column="45">r</name><op:operator pos:line="384" pos:column="46">.</op:operator><name pos:line="384" pos:column="47">Execute</name></name><argument_list pos:line="384" pos:column="54">(<argument><expr><call><name><name pos:line="384" pos:column="55">It</name><op:operator pos:line="384" pos:column="57">.</op:operator><name><name pos:line="384" pos:column="58">IsAny</name><argument_list pos:line="384" pos:column="63">&lt;<argument><name pos:line="384" pos:column="64">IResourceContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="384" pos:column="81">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="384" pos:column="85">.</op:operator><call><name><name pos:line="384" pos:column="86">Throws</name><argument_list pos:line="384" pos:column="92">&lt;<argument><name pos:line="384" pos:column="93">Exception</name></argument>&gt;</argument_list></name><argument_list pos:line="384" pos:column="103">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="386" pos:column="13">Runtime</name><op:operator pos:line="386" pos:column="20">.</op:operator><name pos:line="386" pos:column="21">Configuration</name><op:operator pos:line="386" pos:column="34">.</op:operator><name pos:line="386" pos:column="35">Resources</name><op:operator pos:line="386" pos:column="44">.</op:operator><name pos:line="386" pos:column="45">Add</name></name><argument_list pos:line="386" pos:column="48">(<argument><expr><name><name pos:line="386" pos:column="49">Runtime</name><op:operator pos:line="386" pos:column="56">.</op:operator><name pos:line="386" pos:column="57">ResourceMock</name><op:operator pos:line="386" pos:column="69">.</op:operator><name pos:line="386" pos:column="70">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="388" pos:column="13">Runtime</name><op:operator pos:line="388" pos:column="20">.</op:operator><name pos:line="388" pos:column="21">ExecuteResource</name></name><argument_list pos:line="388" pos:column="36">(<argument><expr><name pos:line="388" pos:column="37">name</name></expr></argument>, <argument><expr><op:operator pos:line="388" pos:column="43">new</op:operator> <call><name pos:line="388" pos:column="47">ResourceParameters</name><argument_list pos:line="388" pos:column="65">(<argument><expr><op:operator pos:line="388" pos:column="66">new</op:operator> <name><name pos:line="388" pos:column="70">string</name><index pos:line="388" pos:column="76">[]</index></name> <block pos:line="388" pos:column="79">{ }</block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="390" pos:column="13">Runtime</name><op:operator pos:line="390" pos:column="20">.</op:operator><name pos:line="390" pos:column="21">FrameworkProviderMock</name><op:operator pos:line="390" pos:column="42">.</op:operator><name pos:line="390" pos:column="43">Verify</name></name><argument_list pos:line="390" pos:column="49">(<argument><expr><lambda><name pos:line="390" pos:column="50">fp</name> <op:operator pos:line="390" pos:column="53">=&gt;</op:operator> <call><name><name pos:line="390" pos:column="56">fp</name><op:operator pos:line="390" pos:column="58">.</op:operator><name pos:line="390" pos:column="59">SetHttpResponseStatusCode</name></name><argument_list pos:line="390" pos:column="84">(<argument><expr><lit:literal type="number" pos:line="390" pos:column="85">500</lit:literal></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="390" pos:column="91">Times</name><op:operator pos:line="390" pos:column="96">.</op:operator><name pos:line="390" pos:column="97">Once</name></name><argument_list pos:line="390" pos:column="101">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="393" pos:column="9">[<expr><name pos:line="393" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="394" pos:column="9">public</specifier> <name pos:line="394" pos:column="16">void</name></type> <name pos:line="394" pos:column="21">EnsureNullIsNotPassedToResourceExecute</name><parameter_list pos:line="394" pos:column="59">()</parameter_list>
        <block pos:line="395" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="396" pos:column="13">var</name></type> <name pos:line="396" pos:column="17">name</name> <init pos:line="396" pos:column="22">= <expr><lit:literal type="string" pos:line="396" pos:column="24">"aName"</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="397" pos:column="13">Runtime</name><op:operator pos:line="397" pos:column="20">.</op:operator><name pos:line="397" pos:column="21">ResourceMock</name><op:operator pos:line="397" pos:column="33">.</op:operator><name pos:line="397" pos:column="34">Setup</name></name><argument_list pos:line="397" pos:column="39">(<argument><expr><lambda><name pos:line="397" pos:column="40">r</name> <op:operator pos:line="397" pos:column="42">=&gt;</op:operator> <name><name pos:line="397" pos:column="45">r</name><op:operator pos:line="397" pos:column="46">.</op:operator><name pos:line="397" pos:column="47">Name</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="397" pos:column="52">.</op:operator><call><name pos:line="397" pos:column="53">Returns</name><argument_list pos:line="397" pos:column="60">(<argument><expr><name pos:line="397" pos:column="61">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="398" pos:column="13">Runtime</name><op:operator pos:line="398" pos:column="20">.</op:operator><name pos:line="398" pos:column="21">ResourceMock</name><op:operator pos:line="398" pos:column="33">.</op:operator><name pos:line="398" pos:column="34">Setup</name></name><argument_list pos:line="398" pos:column="39">(<argument><expr><lambda><name pos:line="398" pos:column="40">r</name> <op:operator pos:line="398" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="398" pos:column="45">r</name><op:operator pos:line="398" pos:column="46">.</op:operator><name pos:line="398" pos:column="47">Execute</name></name><argument_list pos:line="398" pos:column="54">(<argument><expr><call><name><name pos:line="398" pos:column="55">It</name><op:operator pos:line="398" pos:column="57">.</op:operator><name><name pos:line="398" pos:column="58">IsAny</name><argument_list pos:line="398" pos:column="63">&lt;<argument><name pos:line="398" pos:column="64">IResourceContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="398" pos:column="81">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="398" pos:column="85">.</op:operator><call><name pos:line="398" pos:column="86">Returns</name><argument_list pos:line="398" pos:column="93">(
                <argument><expr><name><name pos:line="399" pos:column="17">Runtime</name><op:operator pos:line="399" pos:column="24">.</op:operator><name pos:line="399" pos:column="25">ResourceResultMock</name><op:operator pos:line="399" pos:column="43">.</op:operator><name pos:line="399" pos:column="44">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="401" pos:column="13">Runtime</name><op:operator pos:line="401" pos:column="20">.</op:operator><name pos:line="401" pos:column="21">Configuration</name><op:operator pos:line="401" pos:column="34">.</op:operator><name pos:line="401" pos:column="35">Resources</name><op:operator pos:line="401" pos:column="44">.</op:operator><name pos:line="401" pos:column="45">Add</name></name><argument_list pos:line="401" pos:column="48">(<argument><expr><name><name pos:line="401" pos:column="49">Runtime</name><op:operator pos:line="401" pos:column="56">.</op:operator><name pos:line="401" pos:column="57">ResourceMock</name><op:operator pos:line="401" pos:column="69">.</op:operator><name pos:line="401" pos:column="70">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="403" pos:column="13">Runtime</name><op:operator pos:line="403" pos:column="20">.</op:operator><name pos:line="403" pos:column="21">ExecuteResource</name></name><argument_list pos:line="403" pos:column="36">(<argument><expr><name pos:line="403" pos:column="37">name</name></expr></argument>, <argument><expr><op:operator pos:line="403" pos:column="43">new</op:operator> <call><name pos:line="403" pos:column="47">ResourceParameters</name><argument_list pos:line="403" pos:column="65">(<argument><expr><op:operator pos:line="403" pos:column="66">new</op:operator> <call><name><name pos:line="403" pos:column="70">Dictionary</name><argument_list pos:line="403" pos:column="80">&lt;<argument><name pos:line="403" pos:column="81">string</name></argument>, <argument><name pos:line="403" pos:column="89">string</name></argument>&gt;</argument_list></name><argument_list pos:line="403" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="405" pos:column="13">Runtime</name><op:operator pos:line="405" pos:column="20">.</op:operator><name pos:line="405" pos:column="21">ResourceMock</name><op:operator pos:line="405" pos:column="33">.</op:operator><name pos:line="405" pos:column="34">Verify</name></name><argument_list pos:line="405" pos:column="40">(<argument><expr><lambda><name pos:line="405" pos:column="41">r</name> <op:operator pos:line="405" pos:column="43">=&gt;</op:operator> <call><name><name pos:line="405" pos:column="46">r</name><op:operator pos:line="405" pos:column="47">.</op:operator><name pos:line="405" pos:column="48">Execute</name></name><argument_list pos:line="405" pos:column="55">(<argument><expr><name pos:line="405" pos:column="56">null</name></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="405" pos:column="63">Times</name><op:operator pos:line="405" pos:column="68">.</op:operator><name pos:line="405" pos:column="69">Never</name></name><argument_list pos:line="405" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="408" pos:column="9">[<expr><name pos:line="408" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="409" pos:column="9">public</specifier> <name pos:line="409" pos:column="16">void</name></type> <name pos:line="409" pos:column="21">HandleResourceResultsThatThrowExceptions</name><parameter_list pos:line="409" pos:column="61">()</parameter_list>
        <block pos:line="410" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="411" pos:column="13">var</name></type> <name pos:line="411" pos:column="17">name</name> <init pos:line="411" pos:column="22">= <expr><lit:literal type="string" pos:line="411" pos:column="24">"Anything"</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="412" pos:column="13">Runtime</name><op:operator pos:line="412" pos:column="20">.</op:operator><name pos:line="412" pos:column="21">ResourceMock</name><op:operator pos:line="412" pos:column="33">.</op:operator><name pos:line="412" pos:column="34">Setup</name></name><argument_list pos:line="412" pos:column="39">(<argument><expr><lambda><name pos:line="412" pos:column="40">r</name> <op:operator pos:line="412" pos:column="42">=&gt;</op:operator> <name><name pos:line="412" pos:column="45">r</name><op:operator pos:line="412" pos:column="46">.</op:operator><name pos:line="412" pos:column="47">Name</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="412" pos:column="52">.</op:operator><call><name pos:line="412" pos:column="53">Returns</name><argument_list pos:line="412" pos:column="60">(<argument><expr><name pos:line="412" pos:column="61">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="413" pos:column="13">Runtime</name><op:operator pos:line="413" pos:column="20">.</op:operator><name pos:line="413" pos:column="21">ResourceMock</name><op:operator pos:line="413" pos:column="33">.</op:operator><name pos:line="413" pos:column="34">Setup</name></name><argument_list pos:line="413" pos:column="39">(<argument><expr><lambda><name pos:line="413" pos:column="40">r</name> <op:operator pos:line="413" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="413" pos:column="45">r</name><op:operator pos:line="413" pos:column="46">.</op:operator><name pos:line="413" pos:column="47">Execute</name></name><argument_list pos:line="413" pos:column="54">(<argument><expr><call><name><name pos:line="413" pos:column="55">It</name><op:operator pos:line="413" pos:column="57">.</op:operator><name><name pos:line="413" pos:column="58">IsAny</name><argument_list pos:line="413" pos:column="63">&lt;<argument><name pos:line="413" pos:column="64">IResourceContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="413" pos:column="81">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="413" pos:column="85">.</op:operator><call><name pos:line="413" pos:column="86">Returns</name><argument_list pos:line="413" pos:column="93">(<argument><expr><name><name pos:line="413" pos:column="94">Runtime</name><op:operator pos:line="413" pos:column="101">.</op:operator><name pos:line="413" pos:column="102">ResourceResultMock</name><op:operator pos:line="413" pos:column="120">.</op:operator><name pos:line="413" pos:column="121">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="415" pos:column="13">Runtime</name><op:operator pos:line="415" pos:column="20">.</op:operator><name pos:line="415" pos:column="21">ResourceResultMock</name><op:operator pos:line="415" pos:column="39">.</op:operator><name pos:line="415" pos:column="40">Setup</name></name><argument_list pos:line="415" pos:column="45">(<argument><expr><lambda><name pos:line="415" pos:column="46">rr</name> <op:operator pos:line="415" pos:column="49">=&gt;</op:operator> <call><name><name pos:line="415" pos:column="52">rr</name><op:operator pos:line="415" pos:column="54">.</op:operator><name pos:line="415" pos:column="55">Execute</name></name><argument_list pos:line="415" pos:column="62">(<argument><expr><call><name><name pos:line="415" pos:column="63">It</name><op:operator pos:line="415" pos:column="65">.</op:operator><name><name pos:line="415" pos:column="66">IsAny</name><argument_list pos:line="415" pos:column="71">&lt;<argument><name pos:line="415" pos:column="72">IResourceResultContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="415" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="415" pos:column="99">.</op:operator><call><name><name pos:line="415" pos:column="100">Throws</name><argument_list pos:line="415" pos:column="106">&lt;<argument><name pos:line="415" pos:column="107">Exception</name></argument>&gt;</argument_list></name><argument_list pos:line="415" pos:column="117">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="417" pos:column="13">Runtime</name><op:operator pos:line="417" pos:column="20">.</op:operator><name pos:line="417" pos:column="21">Configuration</name><op:operator pos:line="417" pos:column="34">.</op:operator><name pos:line="417" pos:column="35">Resources</name><op:operator pos:line="417" pos:column="44">.</op:operator><name pos:line="417" pos:column="45">Add</name></name><argument_list pos:line="417" pos:column="48">(<argument><expr><name><name pos:line="417" pos:column="49">Runtime</name><op:operator pos:line="417" pos:column="56">.</op:operator><name pos:line="417" pos:column="57">ResourceMock</name><op:operator pos:line="417" pos:column="69">.</op:operator><name pos:line="417" pos:column="70">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="419" pos:column="13">Runtime</name><op:operator pos:line="419" pos:column="20">.</op:operator><name pos:line="419" pos:column="21">ExecuteResource</name></name><argument_list pos:line="419" pos:column="36">(<argument><expr><name pos:line="419" pos:column="37">name</name></expr></argument>, <argument><expr><op:operator pos:line="419" pos:column="43">new</op:operator> <call><name pos:line="419" pos:column="47">ResourceParameters</name><argument_list pos:line="419" pos:column="65">(<argument><expr><op:operator pos:line="419" pos:column="66">new</op:operator> <name><name pos:line="419" pos:column="70">string</name><index pos:line="419" pos:column="76">[]</index></name> <block pos:line="419" pos:column="79">{ }</block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="421" pos:column="13">Runtime</name><op:operator pos:line="421" pos:column="20">.</op:operator><name pos:line="421" pos:column="21">LoggerMock</name><op:operator pos:line="421" pos:column="31">.</op:operator><name pos:line="421" pos:column="32">Verify</name></name><argument_list pos:line="421" pos:column="38">(<argument><expr><lambda><name pos:line="421" pos:column="39">l</name> <op:operator pos:line="421" pos:column="41">=&gt;</op:operator> <call><name><name pos:line="421" pos:column="44">l</name><op:operator pos:line="421" pos:column="45">.</op:operator><name pos:line="421" pos:column="46">Fatal</name></name><argument_list pos:line="421" pos:column="51">(<argument><expr><call><name><name pos:line="421" pos:column="52">It</name><op:operator pos:line="421" pos:column="54">.</op:operator><name><name pos:line="421" pos:column="55">IsAny</name><argument_list pos:line="421" pos:column="60">&lt;<argument><name pos:line="421" pos:column="61">string</name></argument>&gt;</argument_list></name></name><argument_list pos:line="421" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="421" pos:column="72">It</name><op:operator pos:line="421" pos:column="74">.</op:operator><name><name pos:line="421" pos:column="75">IsAny</name><argument_list pos:line="421" pos:column="80">&lt;<argument><name pos:line="421" pos:column="81">Exception</name></argument>&gt;</argument_list></name></name><argument_list pos:line="421" pos:column="91">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="421" pos:column="95">It</name><op:operator pos:line="421" pos:column="97">.</op:operator><name><name pos:line="421" pos:column="98">IsAny</name><argument_list pos:line="421" pos:column="103">&lt;<argument><name><name pos:line="421" pos:column="104">object</name><index pos:line="421" pos:column="110">[]</index></name></argument>&gt;</argument_list></name></name><argument_list pos:line="421" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="421" pos:column="118">Times</name><op:operator pos:line="421" pos:column="123">.</op:operator><name pos:line="421" pos:column="124">Once</name></name><argument_list pos:line="421" pos:column="128">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="424" pos:column="9">[<expr><name pos:line="424" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="425" pos:column="9">public</specifier> <name pos:line="425" pos:column="16">void</name></type> <name pos:line="425" pos:column="21">ProvideEnabledInfoOnInitializing</name><parameter_list pos:line="425" pos:column="53">()</parameter_list>
        <block pos:line="426" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="427" pos:column="13">Runtime</name><op:operator pos:line="427" pos:column="20">.</op:operator><name pos:line="427" pos:column="21">Configuration</name><op:operator pos:line="427" pos:column="34">.</op:operator><name pos:line="427" pos:column="35">RuntimePolicies</name><op:operator pos:line="427" pos:column="50">.</op:operator><name pos:line="427" pos:column="51">Add</name></name><argument_list pos:line="427" pos:column="54">(<argument><expr><name><name pos:line="427" pos:column="55">Runtime</name><op:operator pos:line="427" pos:column="62">.</op:operator><name pos:line="427" pos:column="63">RuntimePolicyMock</name><op:operator pos:line="427" pos:column="80">.</op:operator><name pos:line="427" pos:column="81">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="429" pos:column="13">var</name></type> <name pos:line="429" pos:column="17">result</name> <init pos:line="429" pos:column="24">= <expr><call><name><name pos:line="429" pos:column="26">Runtime</name><op:operator pos:line="429" pos:column="33">.</op:operator><name pos:line="429" pos:column="34">Initialize</name></name><argument_list pos:line="429" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="431" pos:column="13">Assert</name><op:operator pos:line="431" pos:column="19">.</op:operator><name pos:line="431" pos:column="20">True</name></name><argument_list pos:line="431" pos:column="24">(<argument><expr><name pos:line="431" pos:column="25">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="434" pos:column="9">[<expr><name pos:line="434" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="435" pos:column="9">public</specifier> <name pos:line="435" pos:column="16">void</name></type> <name pos:line="435" pos:column="21">ProvideLowestModeLevelOnInitializing</name><parameter_list pos:line="435" pos:column="57">()</parameter_list>
        <block pos:line="436" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="437" pos:column="13">var</name></type> <name pos:line="437" pos:column="17">offPolicyMock</name> <init pos:line="437" pos:column="31">= <expr><op:operator pos:line="437" pos:column="33">new</op:operator> <call><name><name pos:line="437" pos:column="37">Mock</name><argument_list pos:line="437" pos:column="41">&lt;<argument><name pos:line="437" pos:column="42">IRuntimePolicy</name></argument>&gt;</argument_list></name><argument_list pos:line="437" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="438" pos:column="13">offPolicyMock</name><op:operator pos:line="438" pos:column="26">.</op:operator><name pos:line="438" pos:column="27">Setup</name></name><argument_list pos:line="438" pos:column="32">(<argument><expr><lambda><name pos:line="438" pos:column="33">v</name> <op:operator pos:line="438" pos:column="35">=&gt;</op:operator> <call><name><name pos:line="438" pos:column="38">v</name><op:operator pos:line="438" pos:column="39">.</op:operator><name pos:line="438" pos:column="40">Execute</name></name><argument_list pos:line="438" pos:column="47">(<argument><expr><call><name><name pos:line="438" pos:column="48">It</name><op:operator pos:line="438" pos:column="50">.</op:operator><name><name pos:line="438" pos:column="51">IsAny</name><argument_list pos:line="438" pos:column="56">&lt;<argument><name pos:line="438" pos:column="57">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="438" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="438" pos:column="83">.</op:operator><call><name pos:line="438" pos:column="84">Returns</name><argument_list pos:line="438" pos:column="91">(<argument><expr><name><name pos:line="438" pos:column="92">RuntimePolicy</name><op:operator pos:line="438" pos:column="105">.</op:operator><name pos:line="438" pos:column="106">Off</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="439" pos:column="13">offPolicyMock</name><op:operator pos:line="439" pos:column="26">.</op:operator><name pos:line="439" pos:column="27">Setup</name></name><argument_list pos:line="439" pos:column="32">(<argument><expr><lambda><name pos:line="439" pos:column="33">v</name> <op:operator pos:line="439" pos:column="35">=&gt;</op:operator> <name><name pos:line="439" pos:column="38">v</name><op:operator pos:line="439" pos:column="39">.</op:operator><name pos:line="439" pos:column="40">ExecuteOn</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="439" pos:column="50">.</op:operator><call><name pos:line="439" pos:column="51">Returns</name><argument_list pos:line="439" pos:column="58">(<argument><expr><name><name pos:line="439" pos:column="59">RuntimeEvent</name><op:operator pos:line="439" pos:column="71">.</op:operator><name pos:line="439" pos:column="72">Initialize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="441" pos:column="13">Runtime</name><op:operator pos:line="441" pos:column="20">.</op:operator><name pos:line="441" pos:column="21">Configuration</name><op:operator pos:line="441" pos:column="34">.</op:operator><name pos:line="441" pos:column="35">RuntimePolicies</name><op:operator pos:line="441" pos:column="50">.</op:operator><name pos:line="441" pos:column="51">Add</name></name><argument_list pos:line="441" pos:column="54">(<argument><expr><name><name pos:line="441" pos:column="55">Runtime</name><op:operator pos:line="441" pos:column="62">.</op:operator><name pos:line="441" pos:column="63">RuntimePolicyMock</name><op:operator pos:line="441" pos:column="80">.</op:operator><name pos:line="441" pos:column="81">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="442" pos:column="13">Runtime</name><op:operator pos:line="442" pos:column="20">.</op:operator><name pos:line="442" pos:column="21">Configuration</name><op:operator pos:line="442" pos:column="34">.</op:operator><name pos:line="442" pos:column="35">RuntimePolicies</name><op:operator pos:line="442" pos:column="50">.</op:operator><name pos:line="442" pos:column="51">Add</name></name><argument_list pos:line="442" pos:column="54">(<argument><expr><name><name pos:line="442" pos:column="55">offPolicyMock</name><op:operator pos:line="442" pos:column="68">.</op:operator><name pos:line="442" pos:column="69">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="444" pos:column="13">var</name></type> <name pos:line="444" pos:column="17">result</name> <init pos:line="444" pos:column="24">= <expr><call><name><name pos:line="444" pos:column="26">Runtime</name><op:operator pos:line="444" pos:column="33">.</op:operator><name pos:line="444" pos:column="34">Initialize</name></name><argument_list pos:line="444" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="446" pos:column="13">Assert</name><op:operator pos:line="446" pos:column="19">.</op:operator><name pos:line="446" pos:column="20">False</name></name><argument_list pos:line="446" pos:column="25">(<argument><expr><name pos:line="446" pos:column="26">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="449" pos:column="9">[<expr><name pos:line="449" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="450" pos:column="9">public</specifier> <name pos:line="450" pos:column="16">void</name></type> <name pos:line="450" pos:column="21">NotIncreaseModeOverLifetimeOfRequest</name><parameter_list pos:line="450" pos:column="57">()</parameter_list>
        <block pos:line="451" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="452" pos:column="13">var</name></type> <name pos:line="452" pos:column="17">glimpseMode</name> <init pos:line="452" pos:column="29">= <expr><name><name pos:line="452" pos:column="31">RuntimePolicy</name><op:operator pos:line="452" pos:column="44">.</op:operator><name pos:line="452" pos:column="45">ModifyResponseBody</name></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="453" pos:column="13">Runtime</name><op:operator pos:line="453" pos:column="20">.</op:operator><name pos:line="453" pos:column="21">Configuration</name><op:operator pos:line="453" pos:column="34">.</op:operator><name pos:line="453" pos:column="35">DefaultRuntimePolicy</name></name> <op:operator pos:line="453" pos:column="56">=</op:operator> <name pos:line="453" pos:column="58">glimpseMode</name></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="455" pos:column="13">var</name></type> <name pos:line="455" pos:column="17">firstMode</name> <init pos:line="455" pos:column="27">= <expr><call><name><name pos:line="455" pos:column="29">Runtime</name><op:operator pos:line="455" pos:column="36">.</op:operator><name pos:line="455" pos:column="37">Initialize</name></name><argument_list pos:line="455" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="457" pos:column="13">Assert</name><op:operator pos:line="457" pos:column="19">.</op:operator><name pos:line="457" pos:column="20">True</name></name><argument_list pos:line="457" pos:column="24">(<argument><expr><name pos:line="457" pos:column="25">firstMode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name><name pos:line="459" pos:column="13">Runtime</name><op:operator pos:line="459" pos:column="20">.</op:operator><name pos:line="459" pos:column="21">Configuration</name><op:operator pos:line="459" pos:column="34">.</op:operator><name pos:line="459" pos:column="35">DefaultRuntimePolicy</name></name> <op:operator pos:line="459" pos:column="56">=</op:operator> <name><name pos:line="459" pos:column="58">RuntimePolicy</name><op:operator pos:line="459" pos:column="71">.</op:operator><name pos:line="459" pos:column="72">On</name></name></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="461" pos:column="13">Runtime</name><op:operator pos:line="461" pos:column="20">.</op:operator><name pos:line="461" pos:column="21">BeginRequest</name></name><argument_list pos:line="461" pos:column="33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="463" pos:column="13">Assert</name><op:operator pos:line="463" pos:column="19">.</op:operator><name pos:line="463" pos:column="20">Equal</name></name><argument_list pos:line="463" pos:column="25">(<argument><expr><name pos:line="463" pos:column="26">glimpseMode</name></expr></argument>, <argument><expr><call><name><name pos:line="463" pos:column="39">Runtime</name><op:operator pos:line="463" pos:column="46">.</op:operator><name pos:line="463" pos:column="47">Configuration</name><op:operator pos:line="463" pos:column="60">.</op:operator><name pos:line="463" pos:column="61">FrameworkProvider</name><op:operator pos:line="463" pos:column="78">.</op:operator><name pos:line="463" pos:column="79">HttpRequestStore</name><op:operator pos:line="463" pos:column="95">.</op:operator><name pos:line="463" pos:column="96">Get</name></name><argument_list pos:line="463" pos:column="99">(<argument><expr><name><name pos:line="463" pos:column="100">Constants</name><op:operator pos:line="463" pos:column="109">.</op:operator><name pos:line="463" pos:column="110">RuntimePolicyKey</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="466" pos:column="9">[<expr><name pos:line="466" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="467" pos:column="9">public</specifier> <name pos:line="467" pos:column="16">void</name></type> <name pos:line="467" pos:column="21">RespectConfigurationSettingInValidators</name><parameter_list pos:line="467" pos:column="60">()</parameter_list>
        <block pos:line="468" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="469" pos:column="13">Runtime</name><op:operator pos:line="469" pos:column="20">.</op:operator><name pos:line="469" pos:column="21">Configuration</name><op:operator pos:line="469" pos:column="34">.</op:operator><name pos:line="469" pos:column="35">DefaultRuntimePolicy</name></name> <op:operator pos:line="469" pos:column="56">=</op:operator> <name><name pos:line="469" pos:column="58">RuntimePolicy</name><op:operator pos:line="469" pos:column="71">.</op:operator><name pos:line="469" pos:column="72">Off</name></name></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="471" pos:column="13">Runtime</name><op:operator pos:line="471" pos:column="20">.</op:operator><name pos:line="471" pos:column="21">RuntimePolicyMock</name><op:operator pos:line="471" pos:column="38">.</op:operator><name pos:line="471" pos:column="39">Setup</name></name><argument_list pos:line="471" pos:column="44">(<argument><expr><lambda><name pos:line="471" pos:column="45">v</name> <op:operator pos:line="471" pos:column="47">=&gt;</op:operator> <call><name><name pos:line="471" pos:column="50">v</name><op:operator pos:line="471" pos:column="51">.</op:operator><name pos:line="471" pos:column="52">Execute</name></name><argument_list pos:line="471" pos:column="59">(<argument><expr><call><name><name pos:line="471" pos:column="60">It</name><op:operator pos:line="471" pos:column="62">.</op:operator><name><name pos:line="471" pos:column="63">IsAny</name><argument_list pos:line="471" pos:column="68">&lt;<argument><name pos:line="471" pos:column="69">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="471" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="471" pos:column="95">.</op:operator><call><name pos:line="471" pos:column="96">Returns</name><argument_list pos:line="471" pos:column="103">(<argument><expr><name><name pos:line="471" pos:column="104">RuntimePolicy</name><op:operator pos:line="471" pos:column="117">.</op:operator><name pos:line="471" pos:column="118">On</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="472" pos:column="13">Runtime</name><op:operator pos:line="472" pos:column="20">.</op:operator><name pos:line="472" pos:column="21">Configuration</name><op:operator pos:line="472" pos:column="34">.</op:operator><name pos:line="472" pos:column="35">RuntimePolicies</name><op:operator pos:line="472" pos:column="50">.</op:operator><name pos:line="472" pos:column="51">Add</name></name><argument_list pos:line="472" pos:column="54">(<argument><expr><name><name pos:line="472" pos:column="55">Runtime</name><op:operator pos:line="472" pos:column="62">.</op:operator><name pos:line="472" pos:column="63">RuntimePolicyMock</name><op:operator pos:line="472" pos:column="80">.</op:operator><name pos:line="472" pos:column="81">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="474" pos:column="13">var</name></type> <name pos:line="474" pos:column="17">result</name> <init pos:line="474" pos:column="24">= <expr><call><name><name pos:line="474" pos:column="26">Runtime</name><op:operator pos:line="474" pos:column="33">.</op:operator><name pos:line="474" pos:column="34">Initialize</name></name><argument_list pos:line="474" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="476" pos:column="13">Assert</name><op:operator pos:line="476" pos:column="19">.</op:operator><name pos:line="476" pos:column="20">False</name></name><argument_list pos:line="476" pos:column="25">(<argument><expr><name pos:line="476" pos:column="26">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="479" pos:column="9">[<expr><name pos:line="479" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="480" pos:column="9">public</specifier> <name pos:line="480" pos:column="16">void</name></type> <name pos:line="480" pos:column="21">ValidateAtBeginRequest</name><parameter_list pos:line="480" pos:column="43">()</parameter_list>
        <block pos:line="481" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="482" pos:column="13">Runtime</name><op:operator pos:line="482" pos:column="20">.</op:operator><name pos:line="482" pos:column="21">RuntimePolicyMock</name><op:operator pos:line="482" pos:column="38">.</op:operator><name pos:line="482" pos:column="39">Setup</name></name><argument_list pos:line="482" pos:column="44">(<argument><expr><lambda><name pos:line="482" pos:column="45">rp</name> <op:operator pos:line="482" pos:column="48">=&gt;</op:operator> <name><name pos:line="482" pos:column="51">rp</name><op:operator pos:line="482" pos:column="53">.</op:operator><name pos:line="482" pos:column="54">ExecuteOn</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="482" pos:column="64">.</op:operator><call><name pos:line="482" pos:column="65">Returns</name><argument_list pos:line="482" pos:column="72">(<argument><expr><name><name pos:line="482" pos:column="73">RuntimeEvent</name><op:operator pos:line="482" pos:column="85">.</op:operator><name pos:line="482" pos:column="86">BeginRequest</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="484" pos:column="13">Runtime</name><op:operator pos:line="484" pos:column="20">.</op:operator><name pos:line="484" pos:column="21">Configuration</name><op:operator pos:line="484" pos:column="34">.</op:operator><name pos:line="484" pos:column="35">RuntimePolicies</name><op:operator pos:line="484" pos:column="50">.</op:operator><name pos:line="484" pos:column="51">Add</name></name><argument_list pos:line="484" pos:column="54">(<argument><expr><name><name pos:line="484" pos:column="55">Runtime</name><op:operator pos:line="484" pos:column="62">.</op:operator><name pos:line="484" pos:column="63">RuntimePolicyMock</name><op:operator pos:line="484" pos:column="80">.</op:operator><name pos:line="484" pos:column="81">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="485" pos:column="13">Runtime</name><op:operator pos:line="485" pos:column="20">.</op:operator><name pos:line="485" pos:column="21">Initialize</name></name><argument_list pos:line="485" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="486" pos:column="13">Runtime</name><op:operator pos:line="486" pos:column="20">.</op:operator><name pos:line="486" pos:column="21">BeginRequest</name></name><argument_list pos:line="486" pos:column="33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="488" pos:column="13">Runtime</name><op:operator pos:line="488" pos:column="20">.</op:operator><name pos:line="488" pos:column="21">RuntimePolicyMock</name><op:operator pos:line="488" pos:column="38">.</op:operator><name pos:line="488" pos:column="39">Verify</name></name><argument_list pos:line="488" pos:column="45">(<argument><expr><lambda><name pos:line="488" pos:column="46">v</name> <op:operator pos:line="488" pos:column="48">=&gt;</op:operator> <call><name><name pos:line="488" pos:column="51">v</name><op:operator pos:line="488" pos:column="52">.</op:operator><name pos:line="488" pos:column="53">Execute</name></name><argument_list pos:line="488" pos:column="60">(<argument><expr><call><name><name pos:line="488" pos:column="61">It</name><op:operator pos:line="488" pos:column="63">.</op:operator><name><name pos:line="488" pos:column="64">IsAny</name><argument_list pos:line="488" pos:column="69">&lt;<argument><name pos:line="488" pos:column="70">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="488" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="488" pos:column="97">Times</name><op:operator pos:line="488" pos:column="102">.</op:operator><name pos:line="488" pos:column="103">AtLeastOnce</name></name><argument_list pos:line="488" pos:column="114">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="491" pos:column="9">[<expr><name pos:line="491" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="492" pos:column="9">public</specifier> <name pos:line="492" pos:column="16">void</name></type> <name pos:line="492" pos:column="21">SkipEecutingInitializeIfGlimpseModeIfOff</name><parameter_list pos:line="492" pos:column="61">()</parameter_list>
        <block pos:line="493" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="494" pos:column="13">Runtime</name><op:operator pos:line="494" pos:column="20">.</op:operator><name pos:line="494" pos:column="21">Configuration</name><op:operator pos:line="494" pos:column="34">.</op:operator><name pos:line="494" pos:column="35">DefaultRuntimePolicy</name></name> <op:operator pos:line="494" pos:column="56">=</op:operator> <name><name pos:line="494" pos:column="58">RuntimePolicy</name><op:operator pos:line="494" pos:column="71">.</op:operator><name pos:line="494" pos:column="72">Off</name></name></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="496" pos:column="13">Runtime</name><op:operator pos:line="496" pos:column="20">.</op:operator><name pos:line="496" pos:column="21">Initialize</name></name><argument_list pos:line="496" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="498" pos:column="13">Assert</name><op:operator pos:line="498" pos:column="19">.</op:operator><name pos:line="498" pos:column="20">Equal</name></name><argument_list pos:line="498" pos:column="25">(<argument><expr><name><name pos:line="498" pos:column="26">RuntimePolicy</name><op:operator pos:line="498" pos:column="39">.</op:operator><name pos:line="498" pos:column="40">Off</name></name></expr></argument>, <argument><expr><call><name><name pos:line="498" pos:column="45">Runtime</name><op:operator pos:line="498" pos:column="52">.</op:operator><name pos:line="498" pos:column="53">Configuration</name><op:operator pos:line="498" pos:column="66">.</op:operator><name pos:line="498" pos:column="67">FrameworkProvider</name><op:operator pos:line="498" pos:column="84">.</op:operator><name pos:line="498" pos:column="85">HttpRequestStore</name><op:operator pos:line="498" pos:column="101">.</op:operator><name pos:line="498" pos:column="102">Get</name></name><argument_list pos:line="498" pos:column="105">(<argument><expr><name><name pos:line="498" pos:column="106">Constants</name><op:operator pos:line="498" pos:column="115">.</op:operator><name pos:line="498" pos:column="116">RuntimePolicyKey</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="501" pos:column="9">[<expr><name pos:line="501" pos:column="10">Fact</name></expr>]</attribute> <comment type="line" pos:line="501" pos:column="16">//False result means GlimpseMode == Off</comment>
        <specifier pos:line="502" pos:column="9">public</specifier> <name pos:line="502" pos:column="16">void</name></type> <name pos:line="502" pos:column="21">WriteCurrentModeToRequestState</name><parameter_list pos:line="502" pos:column="51">()</parameter_list>
        <block pos:line="503" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="504" pos:column="13">Runtime</name><op:operator pos:line="504" pos:column="20">.</op:operator><name pos:line="504" pos:column="21">RuntimePolicyMock</name><op:operator pos:line="504" pos:column="38">.</op:operator><name pos:line="504" pos:column="39">Setup</name></name><argument_list pos:line="504" pos:column="44">(<argument><expr><lambda><name pos:line="504" pos:column="45">v</name> <op:operator pos:line="504" pos:column="47">=&gt;</op:operator> <call><name><name pos:line="504" pos:column="50">v</name><op:operator pos:line="504" pos:column="51">.</op:operator><name pos:line="504" pos:column="52">Execute</name></name><argument_list pos:line="504" pos:column="59">(<argument><expr><call><name><name pos:line="504" pos:column="60">It</name><op:operator pos:line="504" pos:column="62">.</op:operator><name><name pos:line="504" pos:column="63">IsAny</name><argument_list pos:line="504" pos:column="68">&lt;<argument><name pos:line="504" pos:column="69">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="504" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="504" pos:column="95">.</op:operator><call><name pos:line="504" pos:column="96">Returns</name><argument_list pos:line="504" pos:column="103">(<argument><expr><name><name pos:line="504" pos:column="104">RuntimePolicy</name><op:operator pos:line="504" pos:column="117">.</op:operator><name pos:line="504" pos:column="118">ModifyResponseBody</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="505" pos:column="13">Runtime</name><op:operator pos:line="505" pos:column="20">.</op:operator><name pos:line="505" pos:column="21">Configuration</name><op:operator pos:line="505" pos:column="34">.</op:operator><name pos:line="505" pos:column="35">RuntimePolicies</name><op:operator pos:line="505" pos:column="50">.</op:operator><name pos:line="505" pos:column="51">Add</name></name><argument_list pos:line="505" pos:column="54">(<argument><expr><name><name pos:line="505" pos:column="55">Runtime</name><op:operator pos:line="505" pos:column="62">.</op:operator><name pos:line="505" pos:column="63">RuntimePolicyMock</name><op:operator pos:line="505" pos:column="80">.</op:operator><name pos:line="505" pos:column="81">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="507" pos:column="13">var</name></type> <name pos:line="507" pos:column="17">result</name> <init pos:line="507" pos:column="24">= <expr><call><name><name pos:line="507" pos:column="26">Runtime</name><op:operator pos:line="507" pos:column="33">.</op:operator><name pos:line="507" pos:column="34">Initialize</name></name><argument_list pos:line="507" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="509" pos:column="13">Assert</name><op:operator pos:line="509" pos:column="19">.</op:operator><name pos:line="509" pos:column="20">True</name></name><argument_list pos:line="509" pos:column="24">(<argument><expr><name pos:line="509" pos:column="25">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="511" pos:column="13">Assert</name><op:operator pos:line="511" pos:column="19">.</op:operator><name pos:line="511" pos:column="20">Equal</name></name><argument_list pos:line="511" pos:column="25">(<argument><expr><name><name pos:line="511" pos:column="26">RuntimePolicy</name><op:operator pos:line="511" pos:column="39">.</op:operator><name pos:line="511" pos:column="40">ModifyResponseBody</name></name></expr></argument>, <argument><expr><call><name><name pos:line="511" pos:column="60">Runtime</name><op:operator pos:line="511" pos:column="67">.</op:operator><name pos:line="511" pos:column="68">Configuration</name><op:operator pos:line="511" pos:column="81">.</op:operator><name pos:line="511" pos:column="82">FrameworkProvider</name><op:operator pos:line="511" pos:column="99">.</op:operator><name pos:line="511" pos:column="100">HttpRequestStore</name><op:operator pos:line="511" pos:column="116">.</op:operator><name pos:line="511" pos:column="117">Get</name></name><argument_list pos:line="511" pos:column="120">(<argument><expr><name><name pos:line="511" pos:column="121">Constants</name><op:operator pos:line="511" pos:column="130">.</op:operator><name pos:line="511" pos:column="131">RuntimePolicyKey</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="514" pos:column="9">[<expr><name pos:line="514" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="515" pos:column="9">public</specifier> <name pos:line="515" pos:column="16">void</name></type> <name pos:line="515" pos:column="21">SkipInitializeIfGlimpseModeIsOff</name><parameter_list pos:line="515" pos:column="53">()</parameter_list>
        <block pos:line="516" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="517" pos:column="13">Runtime</name><op:operator pos:line="517" pos:column="20">.</op:operator><name pos:line="517" pos:column="21">Configuration</name><op:operator pos:line="517" pos:column="34">.</op:operator><name pos:line="517" pos:column="35">DefaultRuntimePolicy</name></name> <op:operator pos:line="517" pos:column="56">=</op:operator> <name><name pos:line="517" pos:column="58">RuntimePolicy</name><op:operator pos:line="517" pos:column="71">.</op:operator><name pos:line="517" pos:column="72">Off</name></name></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="519" pos:column="13">Runtime</name><op:operator pos:line="519" pos:column="20">.</op:operator><name pos:line="519" pos:column="21">Initialize</name></name><argument_list pos:line="519" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="521" pos:column="13">Assert</name><op:operator pos:line="521" pos:column="19">.</op:operator><name pos:line="521" pos:column="20">Equal</name></name><argument_list pos:line="521" pos:column="25">(<argument><expr><name><name pos:line="521" pos:column="26">RuntimePolicy</name><op:operator pos:line="521" pos:column="39">.</op:operator><name pos:line="521" pos:column="40">Off</name></name></expr></argument>, <argument><expr><call><name><name pos:line="521" pos:column="45">Runtime</name><op:operator pos:line="521" pos:column="52">.</op:operator><name pos:line="521" pos:column="53">Configuration</name><op:operator pos:line="521" pos:column="66">.</op:operator><name pos:line="521" pos:column="67">FrameworkProvider</name><op:operator pos:line="521" pos:column="84">.</op:operator><name pos:line="521" pos:column="85">HttpRequestStore</name><op:operator pos:line="521" pos:column="101">.</op:operator><name pos:line="521" pos:column="102">Get</name></name><argument_list pos:line="521" pos:column="105">(<argument><expr><name><name pos:line="521" pos:column="106">Constants</name><op:operator pos:line="521" pos:column="115">.</op:operator><name pos:line="521" pos:column="116">RuntimePolicyKey</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="524" pos:column="9">[<expr><name pos:line="524" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="525" pos:column="9">public</specifier> <name pos:line="525" pos:column="16">void</name></type> <name pos:line="525" pos:column="21">SkipExecutingResourceIfGlimpseModeIsOff</name><parameter_list pos:line="525" pos:column="60">()</parameter_list>
        <block pos:line="526" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="527" pos:column="13">Runtime</name><op:operator pos:line="527" pos:column="20">.</op:operator><name pos:line="527" pos:column="21">Configuration</name><op:operator pos:line="527" pos:column="34">.</op:operator><name pos:line="527" pos:column="35">DefaultRuntimePolicy</name></name> <op:operator pos:line="527" pos:column="56">=</op:operator> <name><name pos:line="527" pos:column="58">RuntimePolicy</name><op:operator pos:line="527" pos:column="71">.</op:operator><name pos:line="527" pos:column="72">Off</name></name></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="529" pos:column="13">Runtime</name><op:operator pos:line="529" pos:column="20">.</op:operator><name pos:line="529" pos:column="21">ExecuteResource</name></name><argument_list pos:line="529" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="529" pos:column="37">"doesn't matter"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="529" pos:column="55">new</op:operator> <call><name pos:line="529" pos:column="59">ResourceParameters</name><argument_list pos:line="529" pos:column="77">(<argument><expr><op:operator pos:line="529" pos:column="78">new</op:operator> <name><name pos:line="529" pos:column="82">string</name><index pos:line="529" pos:column="88">[]</index></name> <block pos:line="529" pos:column="91">{ }</block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="531" pos:column="13">Assert</name><op:operator pos:line="531" pos:column="19">.</op:operator><name pos:line="531" pos:column="20">Equal</name></name><argument_list pos:line="531" pos:column="25">(<argument><expr><name><name pos:line="531" pos:column="26">RuntimePolicy</name><op:operator pos:line="531" pos:column="39">.</op:operator><name pos:line="531" pos:column="40">Off</name></name></expr></argument>, <argument><expr><call><name><name pos:line="531" pos:column="45">Runtime</name><op:operator pos:line="531" pos:column="52">.</op:operator><name pos:line="531" pos:column="53">Configuration</name><op:operator pos:line="531" pos:column="66">.</op:operator><name pos:line="531" pos:column="67">FrameworkProvider</name><op:operator pos:line="531" pos:column="84">.</op:operator><name pos:line="531" pos:column="85">HttpRequestStore</name><op:operator pos:line="531" pos:column="101">.</op:operator><name pos:line="531" pos:column="102">Get</name></name><argument_list pos:line="531" pos:column="105">(<argument><expr><name><name pos:line="531" pos:column="106">Constants</name><op:operator pos:line="531" pos:column="115">.</op:operator><name pos:line="531" pos:column="116">RuntimePolicyKey</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="534" pos:column="9">[<expr><name pos:line="534" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="535" pos:column="9">public</specifier> <name pos:line="535" pos:column="16">void</name></type> <name pos:line="535" pos:column="21">ValidateAtEndRequest</name><parameter_list pos:line="535" pos:column="41">()</parameter_list>
        <block pos:line="536" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="537" pos:column="13">Runtime</name><op:operator pos:line="537" pos:column="20">.</op:operator><name pos:line="537" pos:column="21">Configuration</name><op:operator pos:line="537" pos:column="34">.</op:operator><name pos:line="537" pos:column="35">DefaultRuntimePolicy</name></name> <op:operator pos:line="537" pos:column="56">=</op:operator> <name><name pos:line="537" pos:column="58">RuntimePolicy</name><op:operator pos:line="537" pos:column="71">.</op:operator><name pos:line="537" pos:column="72">Off</name></name></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="539" pos:column="13">Runtime</name><op:operator pos:line="539" pos:column="20">.</op:operator><name pos:line="539" pos:column="21">EndRequest</name></name><argument_list pos:line="539" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="541" pos:column="13">Assert</name><op:operator pos:line="541" pos:column="19">.</op:operator><name pos:line="541" pos:column="20">Equal</name></name><argument_list pos:line="541" pos:column="25">(<argument><expr><name><name pos:line="541" pos:column="26">RuntimePolicy</name><op:operator pos:line="541" pos:column="39">.</op:operator><name pos:line="541" pos:column="40">Off</name></name></expr></argument>, <argument><expr><call><name><name pos:line="541" pos:column="45">Runtime</name><op:operator pos:line="541" pos:column="52">.</op:operator><name pos:line="541" pos:column="53">Configuration</name><op:operator pos:line="541" pos:column="66">.</op:operator><name pos:line="541" pos:column="67">FrameworkProvider</name><op:operator pos:line="541" pos:column="84">.</op:operator><name pos:line="541" pos:column="85">HttpRequestStore</name><op:operator pos:line="541" pos:column="101">.</op:operator><name pos:line="541" pos:column="102">Get</name></name><argument_list pos:line="541" pos:column="105">(<argument><expr><name><name pos:line="541" pos:column="106">Constants</name><op:operator pos:line="541" pos:column="115">.</op:operator><name pos:line="541" pos:column="116">RuntimePolicyKey</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="544" pos:column="9">[<expr><name pos:line="544" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="545" pos:column="9">public</specifier> <name pos:line="545" pos:column="16">void</name></type> <name pos:line="545" pos:column="21">ExecuteOnlyTheProperValidators</name><parameter_list pos:line="545" pos:column="51">()</parameter_list>
        <block pos:line="546" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="547" pos:column="13">var</name></type> <name pos:line="547" pos:column="17">validatorMock2</name> <init pos:line="547" pos:column="32">= <expr><op:operator pos:line="547" pos:column="34">new</op:operator> <call><name><name pos:line="547" pos:column="38">Mock</name><argument_list pos:line="547" pos:column="42">&lt;<argument><name pos:line="547" pos:column="43">IRuntimePolicy</name></argument>&gt;</argument_list></name><argument_list pos:line="547" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="548" pos:column="13">Runtime</name><op:operator pos:line="548" pos:column="20">.</op:operator><name pos:line="548" pos:column="21">Configuration</name><op:operator pos:line="548" pos:column="34">.</op:operator><name pos:line="548" pos:column="35">RuntimePolicies</name><op:operator pos:line="548" pos:column="50">.</op:operator><name pos:line="548" pos:column="51">Add</name></name><argument_list pos:line="548" pos:column="54">(<argument><expr><name><name pos:line="548" pos:column="55">Runtime</name><op:operator pos:line="548" pos:column="62">.</op:operator><name pos:line="548" pos:column="63">RuntimePolicyMock</name><op:operator pos:line="548" pos:column="80">.</op:operator><name pos:line="548" pos:column="81">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="549" pos:column="13">Runtime</name><op:operator pos:line="549" pos:column="20">.</op:operator><name pos:line="549" pos:column="21">Configuration</name><op:operator pos:line="549" pos:column="34">.</op:operator><name pos:line="549" pos:column="35">RuntimePolicies</name><op:operator pos:line="549" pos:column="50">.</op:operator><name pos:line="549" pos:column="51">Add</name></name><argument_list pos:line="549" pos:column="54">(<argument><expr><name><name pos:line="549" pos:column="55">validatorMock2</name><op:operator pos:line="549" pos:column="69">.</op:operator><name pos:line="549" pos:column="70">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="551" pos:column="13">Runtime</name><op:operator pos:line="551" pos:column="20">.</op:operator><name pos:line="551" pos:column="21">Initialize</name></name><argument_list pos:line="551" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="553" pos:column="13">Runtime</name><op:operator pos:line="553" pos:column="20">.</op:operator><name pos:line="553" pos:column="21">RuntimePolicyMock</name><op:operator pos:line="553" pos:column="38">.</op:operator><name pos:line="553" pos:column="39">Verify</name></name><argument_list pos:line="553" pos:column="45">(<argument><expr><lambda><name pos:line="553" pos:column="46">v</name> <op:operator pos:line="553" pos:column="48">=&gt;</op:operator> <call><name><name pos:line="553" pos:column="51">v</name><op:operator pos:line="553" pos:column="52">.</op:operator><name pos:line="553" pos:column="53">Execute</name></name><argument_list pos:line="553" pos:column="60">(<argument><expr><call><name><name pos:line="553" pos:column="61">It</name><op:operator pos:line="553" pos:column="63">.</op:operator><name><name pos:line="553" pos:column="64">IsAny</name><argument_list pos:line="553" pos:column="69">&lt;<argument><name pos:line="553" pos:column="70">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="553" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="553" pos:column="97">Times</name><op:operator pos:line="553" pos:column="102">.</op:operator><name pos:line="553" pos:column="103">Once</name></name><argument_list pos:line="553" pos:column="107">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="554" pos:column="13">validatorMock2</name><op:operator pos:line="554" pos:column="27">.</op:operator><name pos:line="554" pos:column="28">Verify</name></name><argument_list pos:line="554" pos:column="34">(<argument><expr><lambda><name pos:line="554" pos:column="35">v</name> <op:operator pos:line="554" pos:column="37">=&gt;</op:operator> <call><name><name pos:line="554" pos:column="40">v</name><op:operator pos:line="554" pos:column="41">.</op:operator><name pos:line="554" pos:column="42">Execute</name></name><argument_list pos:line="554" pos:column="49">(<argument><expr><call><name><name pos:line="554" pos:column="50">It</name><op:operator pos:line="554" pos:column="52">.</op:operator><name><name pos:line="554" pos:column="53">IsAny</name><argument_list pos:line="554" pos:column="58">&lt;<argument><name pos:line="554" pos:column="59">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="554" pos:column="81">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="554" pos:column="86">Times</name><op:operator pos:line="554" pos:column="91">.</op:operator><name pos:line="554" pos:column="92">Never</name></name><argument_list pos:line="554" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="557" pos:column="9">[<expr><name pos:line="557" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="558" pos:column="9">public</specifier> <name pos:line="558" pos:column="16">void</name></type> <name pos:line="558" pos:column="21">SetIsInitializedWhenInitialized</name><parameter_list pos:line="558" pos:column="52">()</parameter_list>
        <block pos:line="559" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="560" pos:column="13">Runtime</name><op:operator pos:line="560" pos:column="20">.</op:operator><name pos:line="560" pos:column="21">Initialize</name></name><argument_list pos:line="560" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="562" pos:column="13">Assert</name><op:operator pos:line="562" pos:column="19">.</op:operator><name pos:line="562" pos:column="20">True</name></name><argument_list pos:line="562" pos:column="24">(<argument><expr><name><name pos:line="562" pos:column="25">Runtime</name><op:operator pos:line="562" pos:column="32">.</op:operator><name pos:line="562" pos:column="33">IsInitialized</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="block" pos:line="565" pos:column="9">/*        [Fact]
                public void GenerateNoScriptTagsWithoutClientScripts()
                {
                    Assert.Equal("", Runtime.GenerateScriptTags(Guid.NewGuid()));
            
                    Runtime.LoggerMock.Verify(l=&gt;l.Warn(It.IsAny&lt;string&gt;()), Times.Never());
                }

                [Fact]
                public void GenerateNoScriptTagsAndWarnWithOnlyIClientScriptImplementations()
                {
                    var clientScriptMock = new Mock&lt;IClientScript&gt;();
                    clientScriptMock.Setup(cs =&gt; cs.Order).Returns(ScriptOrder.ClientInterfaceScript);

                    Runtime.Configuration.ClientScripts.Add(clientScriptMock.Object);

                    Assert.Equal("", Runtime.GenerateScriptTags(Guid.NewGuid()));
            
                    Runtime.LoggerMock.Verify(l =&gt; l.Warn(It.IsAny&lt;string&gt;(), It.IsAny&lt;object[]&gt;()), Times.Once());
                }

                [Fact]
                public void GenerateScriptTagWithOneStaticResource()
                {
                    var uri = "http://localhost/static";
                    Runtime.StaticScriptMock.Setup(ss =&gt; ss.GetUri(GlimpseRuntime.Version)).Returns(uri);
                    Runtime.EncoderMock.Setup(e =&gt; e.HtmlAttributeEncode(uri)).Returns(uri + "/encoded");

                    Runtime.Configuration.ClientScripts.Add(Runtime.StaticScriptMock.Object);

                    var result = Runtime.GenerateScriptTags(Guid.NewGuid());

                    Assert.Contains(uri, result);
                }

                [Fact]
                public void GenerateScriptTagsInOrder()
                {
                    var callCount = 0;
                    //Lightweight call sequence checking idea from http://dpwhelan.com/blog/software-development/moq-sequences/
                    Runtime.DynamicScriptMock.Setup(ds =&gt; ds.GetResourceName()).Returns("http://localhost/dynamic").Callback(()=&gt;Assert.Equal(callCount++, 1));
                    Runtime.StaticScriptMock.Setup(ss =&gt; ss.GetUri(GlimpseRuntime.Version)).Returns("http://localhost/static").Callback(()=&gt;Assert.Equal(callCount++, 0));
                    Runtime.EncoderMock.Setup(e =&gt; e.HtmlAttributeEncode("http://localhost/static")).Returns("http://localhost/static/encoded");

                    Runtime.Configuration.ClientScripts.Add(Runtime.StaticScriptMock.Object);
                    Runtime.Configuration.ClientScripts.Add(Runtime.DynamicScriptMock.Object);

                    Assert.NotEmpty(Runtime.GenerateScriptTags(Guid.NewGuid()));
                }

                [Fact]
                public void GenerateScriptTagsWithParameterValueProvider()
                {
                    var resourceName = "resourceName";
                    var uri = "http://somethingEncoded";
                    Runtime.ResourceMock.Setup(r =&gt; r.Name).Returns(resourceName);
                    Runtime.DynamicScriptMock.Setup(ds =&gt; ds.GetResourceName()).Returns(resourceName);
                    var parameterValueProviderMock = Runtime.DynamicScriptMock.As&lt;IParameterValueProvider&gt;();
                    Runtime.EndpointConfigMock.Protected().Setup&lt;string&gt;("GenerateUriTemplate", resourceName, "~/Glimpse.axd", ItExpr.IsAny&lt;IEnumerable&lt;ResourceParameterMetadata&gt;&gt;(), ItExpr.IsAny&lt;ILogger&gt;()).Returns("http://something");
                    Runtime.EncoderMock.Setup(e =&gt; e.HtmlAttributeEncode("http://something")).Returns(uri);

                    Runtime.Configuration.Resources.Add(Runtime.ResourceMock.Object);
                    Runtime.Configuration.ClientScripts.Add(Runtime.DynamicScriptMock.Object);

                    Assert.Contains(uri, Runtime.GenerateScriptTags(Guid.NewGuid()));

                    parameterValueProviderMock.Verify(vp=&gt;vp.OverrideParameterValues(It.IsAny&lt;IDictionary&lt;string,string&gt;&gt;()));
                }

                [Fact]
                public void GenerateScriptTagsWithDynamicScriptAndMatchingResource()
                {
                    var resourceName = "resourceName";
                    var uri = "http://somethingEncoded";
                    Runtime.ResourceMock.Setup(r =&gt; r.Name).Returns(resourceName);
                    Runtime.DynamicScriptMock.Setup(ds =&gt; ds.GetResourceName()).Returns(resourceName);
                    Runtime.EndpointConfigMock.Protected().Setup&lt;string&gt;("GenerateUriTemplate", resourceName, "~/Glimpse.axd", ItExpr.IsAny&lt;IEnumerable&lt;ResourceParameterMetadata&gt;&gt;(), ItExpr.IsAny&lt;ILogger&gt;()).Returns("http://something");
                    Runtime.EncoderMock.Setup(e =&gt; e.HtmlAttributeEncode("http://something")).Returns(uri);

                    Runtime.Configuration.Resources.Add(Runtime.ResourceMock.Object);
                    Runtime.Configuration.ClientScripts.Add(Runtime.DynamicScriptMock.Object);

                    Assert.Contains(uri, Runtime.GenerateScriptTags(Guid.NewGuid()));

                    Runtime.ResourceMock.Verify(rm=&gt;rm.Name, Times.AtLeastOnce());
                    Runtime.EndpointConfigMock.Protected().Verify&lt;string&gt;("GenerateUriTemplate", Times.Once(), resourceName, "~/Glimpse.axd", ItExpr.IsAny&lt;IEnumerable&lt;ResourceParameterMetadata&gt;&gt;(), ItExpr.IsAny&lt;ILogger&gt;());
                    Runtime.EncoderMock.Verify(e =&gt; e.HtmlAttributeEncode("http://something"), Times.Once());
                }

                [Fact]
                public void GenerateScriptTagsSkipsWhenEndpointConfigReturnsEmptyString()
                {
                    var resourceName = "resourceName";
                    Runtime.ResourceMock.Setup(r =&gt; r.Name).Returns(resourceName);
                    Runtime.DynamicScriptMock.Setup(ds =&gt; ds.GetResourceName()).Returns(resourceName);
                    Runtime.EndpointConfigMock.Protected().Setup&lt;string&gt;("GenerateUriTemplate", resourceName, "~/Glimpse.axd", ItExpr.IsAny&lt;IEnumerable&lt;ResourceParameterMetadata&gt;&gt;(), ItExpr.IsAny&lt;ILogger&gt;()).Returns("");
                    Runtime.EncoderMock.Setup(e =&gt; e.HtmlAttributeEncode("")).Returns("");

                    Runtime.Configuration.Resources.Add(Runtime.ResourceMock.Object);
                    Runtime.Configuration.ClientScripts.Add(Runtime.DynamicScriptMock.Object);

                    Assert.Empty(Runtime.GenerateScriptTags(Guid.NewGuid()));

                    Runtime.ResourceMock.Verify(rm =&gt; rm.Name, Times.AtLeastOnce());
                    Runtime.EndpointConfigMock.Protected().Verify&lt;string&gt;("GenerateUriTemplate", Times.Once(), resourceName, "~/Glimpse.axd", ItExpr.IsAny&lt;IEnumerable&lt;ResourceParameterMetadata&gt;&gt;(), ItExpr.IsAny&lt;ILogger&gt;());
                    Runtime.EncoderMock.Verify(e =&gt; e.HtmlAttributeEncode(""), Times.Once());
                }

                [Fact]
                public void GenerateScriptTagsSkipsWhenMatchingResourceNotFound()
                {
                    Runtime.DynamicScriptMock.Setup(ds =&gt; ds.GetResourceName()).Returns("resourceName");

                    Runtime.Configuration.ClientScripts.Add(Runtime.DynamicScriptMock.Object);

                    Assert.Empty(Runtime.GenerateScriptTags(Guid.NewGuid()));

                    Runtime.LoggerMock.Verify(l =&gt; l.Warn(It.IsAny&lt;string&gt;(), It.IsAny&lt;object[]&gt;()));
                }

                [Fact]
                public void GenerateScriptTagsSkipsWhenStaticScriptReturnsEmptyString()
                {
                    Runtime.StaticScriptMock.Setup(ss =&gt; ss.GetUri(GlimpseRuntime.Version)).Returns("");

                    Runtime.Configuration.ClientScripts.Add(Runtime.StaticScriptMock.Object);

                    Assert.Empty(Runtime.GenerateScriptTags(Guid.NewGuid()));
                }*/</comment>

        <function><type><attribute pos:line="695" pos:column="9">[<expr><name pos:line="695" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="696" pos:column="9">public</specifier> <name pos:line="696" pos:column="16">void</name></type> <name pos:line="696" pos:column="21">LogErrorOnPersistenceStoreException</name><parameter_list pos:line="696" pos:column="56">()</parameter_list>
        <block pos:line="697" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="698" pos:column="13">Runtime</name><op:operator pos:line="698" pos:column="20">.</op:operator><name pos:line="698" pos:column="21">PersistenceStoreMock</name><op:operator pos:line="698" pos:column="41">.</op:operator><name pos:line="698" pos:column="42">Setup</name></name><argument_list pos:line="698" pos:column="47">(<argument><expr><lambda><name pos:line="698" pos:column="48">ps</name> <op:operator pos:line="698" pos:column="51">=&gt;</op:operator> <call><name><name pos:line="698" pos:column="54">ps</name><op:operator pos:line="698" pos:column="56">.</op:operator><name pos:line="698" pos:column="57">Save</name></name><argument_list pos:line="698" pos:column="61">(<argument><expr><call><name><name pos:line="698" pos:column="62">It</name><op:operator pos:line="698" pos:column="64">.</op:operator><name><name pos:line="698" pos:column="65">IsAny</name><argument_list pos:line="698" pos:column="70">&lt;<argument><name pos:line="698" pos:column="71">GlimpseRequest</name></argument>&gt;</argument_list></name></name><argument_list pos:line="698" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="698" pos:column="90">.</op:operator><call><name><name pos:line="698" pos:column="91">Throws</name><argument_list pos:line="698" pos:column="97">&lt;<argument><name pos:line="698" pos:column="98">DummyException</name></argument>&gt;</argument_list></name><argument_list pos:line="698" pos:column="113">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="700" pos:column="13">Runtime</name><op:operator pos:line="700" pos:column="20">.</op:operator><name pos:line="700" pos:column="21">Initialize</name></name><argument_list pos:line="700" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="701" pos:column="13">Runtime</name><op:operator pos:line="701" pos:column="20">.</op:operator><name pos:line="701" pos:column="21">BeginRequest</name></name><argument_list pos:line="701" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="702" pos:column="13">Runtime</name><op:operator pos:line="702" pos:column="20">.</op:operator><name pos:line="702" pos:column="21">EndRequest</name></name><argument_list pos:line="702" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="704" pos:column="13">Runtime</name><op:operator pos:line="704" pos:column="20">.</op:operator><name pos:line="704" pos:column="21">LoggerMock</name><op:operator pos:line="704" pos:column="31">.</op:operator><name pos:line="704" pos:column="32">Verify</name></name><argument_list pos:line="704" pos:column="38">(<argument><expr><lambda><name pos:line="704" pos:column="39">l</name> <op:operator pos:line="704" pos:column="41">=&gt;</op:operator> <call><name><name pos:line="704" pos:column="44">l</name><op:operator pos:line="704" pos:column="45">.</op:operator><name pos:line="704" pos:column="46">Error</name></name><argument_list pos:line="704" pos:column="51">(<argument><expr><call><name><name pos:line="704" pos:column="52">It</name><op:operator pos:line="704" pos:column="54">.</op:operator><name><name pos:line="704" pos:column="55">IsAny</name><argument_list pos:line="704" pos:column="60">&lt;<argument><name pos:line="704" pos:column="61">string</name></argument>&gt;</argument_list></name></name><argument_list pos:line="704" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="704" pos:column="72">It</name><op:operator pos:line="704" pos:column="74">.</op:operator><name><name pos:line="704" pos:column="75">IsAny</name><argument_list pos:line="704" pos:column="80">&lt;<argument><name pos:line="704" pos:column="81">DummyException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="704" pos:column="96">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="704" pos:column="100">It</name><op:operator pos:line="704" pos:column="102">.</op:operator><name><name pos:line="704" pos:column="103">IsAny</name><argument_list pos:line="704" pos:column="108">&lt;<argument><name><name pos:line="704" pos:column="109">object</name><index pos:line="704" pos:column="115">[]</index></name></argument>&gt;</argument_list></name></name><argument_list pos:line="704" pos:column="118">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="707" pos:column="9">[<expr><name pos:line="707" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="708" pos:column="9">public</specifier> <name pos:line="708" pos:column="16">void</name></type> <name pos:line="708" pos:column="21">LogWarningWhenRuntimePolicyThrowsException</name><parameter_list pos:line="708" pos:column="63">()</parameter_list>
        <block pos:line="709" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="710" pos:column="13">Runtime</name><op:operator pos:line="710" pos:column="20">.</op:operator><name pos:line="710" pos:column="21">RuntimePolicyMock</name><op:operator pos:line="710" pos:column="38">.</op:operator><name pos:line="710" pos:column="39">Setup</name></name><argument_list pos:line="710" pos:column="44">(<argument><expr><lambda><name pos:line="710" pos:column="45">pm</name> <op:operator pos:line="710" pos:column="48">=&gt;</op:operator> <call><name><name pos:line="710" pos:column="51">pm</name><op:operator pos:line="710" pos:column="53">.</op:operator><name pos:line="710" pos:column="54">Execute</name></name><argument_list pos:line="710" pos:column="61">(<argument><expr><call><name><name pos:line="710" pos:column="62">It</name><op:operator pos:line="710" pos:column="64">.</op:operator><name><name pos:line="710" pos:column="65">IsAny</name><argument_list pos:line="710" pos:column="70">&lt;<argument><name pos:line="710" pos:column="71">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="710" pos:column="93">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="710" pos:column="97">.</op:operator><call><name><name pos:line="710" pos:column="98">Throws</name><argument_list pos:line="710" pos:column="104">&lt;<argument><name pos:line="710" pos:column="105">DummyException</name></argument>&gt;</argument_list></name><argument_list pos:line="710" pos:column="120">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="712" pos:column="13">Runtime</name><op:operator pos:line="712" pos:column="20">.</op:operator><name pos:line="712" pos:column="21">Configuration</name><op:operator pos:line="712" pos:column="34">.</op:operator><name pos:line="712" pos:column="35">RuntimePolicies</name><op:operator pos:line="712" pos:column="50">.</op:operator><name pos:line="712" pos:column="51">Add</name></name><argument_list pos:line="712" pos:column="54">(<argument><expr><name><name pos:line="712" pos:column="55">Runtime</name><op:operator pos:line="712" pos:column="62">.</op:operator><name pos:line="712" pos:column="63">RuntimePolicyMock</name><op:operator pos:line="712" pos:column="80">.</op:operator><name pos:line="712" pos:column="81">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="714" pos:column="13">Assert</name><op:operator pos:line="714" pos:column="19">.</op:operator><name pos:line="714" pos:column="20">False</name></name><argument_list pos:line="714" pos:column="25">(<argument><expr><call><name><name pos:line="714" pos:column="26">Runtime</name><op:operator pos:line="714" pos:column="33">.</op:operator><name pos:line="714" pos:column="34">Initialize</name></name><argument_list pos:line="714" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="716" pos:column="13">Runtime</name><op:operator pos:line="716" pos:column="20">.</op:operator><name pos:line="716" pos:column="21">LoggerMock</name><op:operator pos:line="716" pos:column="31">.</op:operator><name pos:line="716" pos:column="32">Verify</name></name><argument_list pos:line="716" pos:column="38">(<argument><expr><lambda><name pos:line="716" pos:column="39">l</name> <op:operator pos:line="716" pos:column="41">=&gt;</op:operator> <call><name><name pos:line="716" pos:column="44">l</name><op:operator pos:line="716" pos:column="45">.</op:operator><name pos:line="716" pos:column="46">Warn</name></name><argument_list pos:line="716" pos:column="50">(<argument><expr><call><name><name pos:line="716" pos:column="51">It</name><op:operator pos:line="716" pos:column="53">.</op:operator><name><name pos:line="716" pos:column="54">IsAny</name><argument_list pos:line="716" pos:column="59">&lt;<argument><name pos:line="716" pos:column="60">string</name></argument>&gt;</argument_list></name></name><argument_list pos:line="716" pos:column="67">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="716" pos:column="71">It</name><op:operator pos:line="716" pos:column="73">.</op:operator><name><name pos:line="716" pos:column="74">IsAny</name><argument_list pos:line="716" pos:column="79">&lt;<argument><name pos:line="716" pos:column="80">DummyException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="716" pos:column="95">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="716" pos:column="99">It</name><op:operator pos:line="716" pos:column="101">.</op:operator><name><name pos:line="716" pos:column="102">IsAny</name><argument_list pos:line="716" pos:column="107">&lt;<argument><name><name pos:line="716" pos:column="108">object</name><index pos:line="716" pos:column="114">[]</index></name></argument>&gt;</argument_list></name></name><argument_list pos:line="716" pos:column="117">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="719" pos:column="9">[<expr><name pos:line="719" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="720" pos:column="9">public</specifier> <name pos:line="720" pos:column="16">void</name></type> <name pos:line="720" pos:column="21">LogErrorWhenDynamicScriptTagThrowsException</name><parameter_list pos:line="720" pos:column="64">()</parameter_list>
        <block pos:line="721" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="722" pos:column="13">Runtime</name><op:operator pos:line="722" pos:column="20">.</op:operator><name pos:line="722" pos:column="21">DynamicScriptMock</name><op:operator pos:line="722" pos:column="38">.</op:operator><name pos:line="722" pos:column="39">Setup</name></name><argument_list pos:line="722" pos:column="44">(<argument><expr><lambda><name pos:line="722" pos:column="45">ds</name> <op:operator pos:line="722" pos:column="48">=&gt;</op:operator> <call><name><name pos:line="722" pos:column="51">ds</name><op:operator pos:line="722" pos:column="53">.</op:operator><name pos:line="722" pos:column="54">GetResourceName</name></name><argument_list pos:line="722" pos:column="69">()</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="722" pos:column="72">.</op:operator><call><name><name pos:line="722" pos:column="73">Throws</name><argument_list pos:line="722" pos:column="79">&lt;<argument><name pos:line="722" pos:column="80">DummyException</name></argument>&gt;</argument_list></name><argument_list pos:line="722" pos:column="95">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="724" pos:column="13">Runtime</name><op:operator pos:line="724" pos:column="20">.</op:operator><name pos:line="724" pos:column="21">Configuration</name><op:operator pos:line="724" pos:column="34">.</op:operator><name pos:line="724" pos:column="35">ClientScripts</name><op:operator pos:line="724" pos:column="48">.</op:operator><name pos:line="724" pos:column="49">Add</name></name><argument_list pos:line="724" pos:column="52">(<argument><expr><name><name pos:line="724" pos:column="53">Runtime</name><op:operator pos:line="724" pos:column="60">.</op:operator><name pos:line="724" pos:column="61">DynamicScriptMock</name><op:operator pos:line="724" pos:column="78">.</op:operator><name pos:line="724" pos:column="79">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="726" pos:column="13">Runtime</name><op:operator pos:line="726" pos:column="20">.</op:operator><name pos:line="726" pos:column="21">Initialize</name></name><argument_list pos:line="726" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="727" pos:column="13">Runtime</name><op:operator pos:line="727" pos:column="20">.</op:operator><name pos:line="727" pos:column="21">BeginRequest</name></name><argument_list pos:line="727" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="728" pos:column="13">Runtime</name><op:operator pos:line="728" pos:column="20">.</op:operator><name pos:line="728" pos:column="21">EndRequest</name></name><argument_list pos:line="728" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="730" pos:column="13">Runtime</name><op:operator pos:line="730" pos:column="20">.</op:operator><name pos:line="730" pos:column="21">LoggerMock</name><op:operator pos:line="730" pos:column="31">.</op:operator><name pos:line="730" pos:column="32">Verify</name></name><argument_list pos:line="730" pos:column="38">(<argument><expr><lambda><name pos:line="730" pos:column="39">l</name> <op:operator pos:line="730" pos:column="41">=&gt;</op:operator> <call><name><name pos:line="730" pos:column="44">l</name><op:operator pos:line="730" pos:column="45">.</op:operator><name pos:line="730" pos:column="46">Error</name></name><argument_list pos:line="730" pos:column="51">(<argument><expr><call><name><name pos:line="730" pos:column="52">It</name><op:operator pos:line="730" pos:column="54">.</op:operator><name><name pos:line="730" pos:column="55">IsAny</name><argument_list pos:line="730" pos:column="60">&lt;<argument><name pos:line="730" pos:column="61">string</name></argument>&gt;</argument_list></name></name><argument_list pos:line="730" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="730" pos:column="72">It</name><op:operator pos:line="730" pos:column="74">.</op:operator><name><name pos:line="730" pos:column="75">IsAny</name><argument_list pos:line="730" pos:column="80">&lt;<argument><name pos:line="730" pos:column="81">DummyException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="730" pos:column="96">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="730" pos:column="100">It</name><op:operator pos:line="730" pos:column="102">.</op:operator><name><name pos:line="730" pos:column="103">IsAny</name><argument_list pos:line="730" pos:column="108">&lt;<argument><name><name pos:line="730" pos:column="109">object</name><index pos:line="730" pos:column="115">[]</index></name></argument>&gt;</argument_list></name></name><argument_list pos:line="730" pos:column="118">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>


        <function><type><attribute pos:line="734" pos:column="9">[<expr><name pos:line="734" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="735" pos:column="9">public</specifier> <name pos:line="735" pos:column="16">void</name></type> <name pos:line="735" pos:column="21">LogErrorWhenStaticScriptTagThrowsException</name><parameter_list pos:line="735" pos:column="63">()</parameter_list>
        <block pos:line="736" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="737" pos:column="13">Runtime</name><op:operator pos:line="737" pos:column="20">.</op:operator><name pos:line="737" pos:column="21">StaticScriptMock</name><op:operator pos:line="737" pos:column="37">.</op:operator><name pos:line="737" pos:column="38">Setup</name></name><argument_list pos:line="737" pos:column="43">(<argument><expr><lambda><name pos:line="737" pos:column="44">ds</name> <op:operator pos:line="737" pos:column="47">=&gt;</op:operator> <call><name><name pos:line="737" pos:column="50">ds</name><op:operator pos:line="737" pos:column="52">.</op:operator><name pos:line="737" pos:column="53">GetUri</name></name><argument_list pos:line="737" pos:column="59">(<argument><expr><call><name><name pos:line="737" pos:column="60">It</name><op:operator pos:line="737" pos:column="62">.</op:operator><name><name pos:line="737" pos:column="63">IsAny</name><argument_list pos:line="737" pos:column="68">&lt;<argument><name pos:line="737" pos:column="69">string</name></argument>&gt;</argument_list></name></name><argument_list pos:line="737" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="737" pos:column="80">.</op:operator><call><name><name pos:line="737" pos:column="81">Throws</name><argument_list pos:line="737" pos:column="87">&lt;<argument><name pos:line="737" pos:column="88">DummyException</name></argument>&gt;</argument_list></name><argument_list pos:line="737" pos:column="103">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="739" pos:column="13">Runtime</name><op:operator pos:line="739" pos:column="20">.</op:operator><name pos:line="739" pos:column="21">Configuration</name><op:operator pos:line="739" pos:column="34">.</op:operator><name pos:line="739" pos:column="35">ClientScripts</name><op:operator pos:line="739" pos:column="48">.</op:operator><name pos:line="739" pos:column="49">Add</name></name><argument_list pos:line="739" pos:column="52">(<argument><expr><name><name pos:line="739" pos:column="53">Runtime</name><op:operator pos:line="739" pos:column="60">.</op:operator><name pos:line="739" pos:column="61">StaticScriptMock</name><op:operator pos:line="739" pos:column="77">.</op:operator><name pos:line="739" pos:column="78">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="741" pos:column="13">Runtime</name><op:operator pos:line="741" pos:column="20">.</op:operator><name pos:line="741" pos:column="21">Initialize</name></name><argument_list pos:line="741" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="742" pos:column="13">Runtime</name><op:operator pos:line="742" pos:column="20">.</op:operator><name pos:line="742" pos:column="21">BeginRequest</name></name><argument_list pos:line="742" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="743" pos:column="13">Runtime</name><op:operator pos:line="743" pos:column="20">.</op:operator><name pos:line="743" pos:column="21">EndRequest</name></name><argument_list pos:line="743" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="745" pos:column="13">Runtime</name><op:operator pos:line="745" pos:column="20">.</op:operator><name pos:line="745" pos:column="21">LoggerMock</name><op:operator pos:line="745" pos:column="31">.</op:operator><name pos:line="745" pos:column="32">Verify</name></name><argument_list pos:line="745" pos:column="38">(<argument><expr><lambda><name pos:line="745" pos:column="39">l</name> <op:operator pos:line="745" pos:column="41">=&gt;</op:operator> <call><name><name pos:line="745" pos:column="44">l</name><op:operator pos:line="745" pos:column="45">.</op:operator><name pos:line="745" pos:column="46">Error</name></name><argument_list pos:line="745" pos:column="51">(<argument><expr><call><name><name pos:line="745" pos:column="52">It</name><op:operator pos:line="745" pos:column="54">.</op:operator><name><name pos:line="745" pos:column="55">IsAny</name><argument_list pos:line="745" pos:column="60">&lt;<argument><name pos:line="745" pos:column="61">string</name></argument>&gt;</argument_list></name></name><argument_list pos:line="745" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="745" pos:column="72">It</name><op:operator pos:line="745" pos:column="74">.</op:operator><name><name pos:line="745" pos:column="75">IsAny</name><argument_list pos:line="745" pos:column="80">&lt;<argument><name pos:line="745" pos:column="81">DummyException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="745" pos:column="96">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="745" pos:column="100">It</name><op:operator pos:line="745" pos:column="102">.</op:operator><name><name pos:line="745" pos:column="103">IsAny</name><argument_list pos:line="745" pos:column="108">&lt;<argument><name><name pos:line="745" pos:column="109">object</name><index pos:line="745" pos:column="115">[]</index></name></argument>&gt;</argument_list></name></name><argument_list pos:line="745" pos:column="118">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="748" pos:column="9">[<expr><name pos:line="748" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="749" pos:column="9">public</specifier> <name pos:line="749" pos:column="16">void</name></type> <name pos:line="749" pos:column="21">BeginRuntimeReturnsEarlyIfRuntimePolicyIsOff</name><parameter_list pos:line="749" pos:column="65">()</parameter_list>
        <block pos:line="750" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="751" pos:column="13">Runtime</name><op:operator pos:line="751" pos:column="20">.</op:operator><name pos:line="751" pos:column="21">FrameworkProviderMock</name><op:operator pos:line="751" pos:column="42">.</op:operator><name pos:line="751" pos:column="43">Setup</name></name><argument_list pos:line="751" pos:column="48">(<argument><expr><lambda><name pos:line="751" pos:column="49">fp</name> <op:operator pos:line="751" pos:column="52">=&gt;</op:operator> <name><name pos:line="751" pos:column="55">fp</name><op:operator pos:line="751" pos:column="57">.</op:operator><name pos:line="751" pos:column="58">HttpRequestStore</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="751" pos:column="75">.</op:operator><call><name pos:line="751" pos:column="76">Returns</name><argument_list pos:line="751" pos:column="83">(<argument><expr><name><name pos:line="751" pos:column="84">Runtime</name><op:operator pos:line="751" pos:column="91">.</op:operator><name pos:line="751" pos:column="92">HttpRequestStoreMock</name><op:operator pos:line="751" pos:column="112">.</op:operator><name pos:line="751" pos:column="113">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="753" pos:column="13">Runtime</name><op:operator pos:line="753" pos:column="20">.</op:operator><name pos:line="753" pos:column="21">Initialize</name></name><argument_list pos:line="753" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="755" pos:column="13">Runtime</name><op:operator pos:line="755" pos:column="20">.</op:operator><name pos:line="755" pos:column="21">RuntimePolicyMock</name><op:operator pos:line="755" pos:column="38">.</op:operator><name pos:line="755" pos:column="39">Setup</name></name><argument_list pos:line="755" pos:column="44">(<argument><expr><lambda><name pos:line="755" pos:column="45">p</name> <op:operator pos:line="755" pos:column="47">=&gt;</op:operator> <call><name><name pos:line="755" pos:column="50">p</name><op:operator pos:line="755" pos:column="51">.</op:operator><name pos:line="755" pos:column="52">Execute</name></name><argument_list pos:line="755" pos:column="59">(<argument><expr><call><name><name pos:line="755" pos:column="60">It</name><op:operator pos:line="755" pos:column="62">.</op:operator><name><name pos:line="755" pos:column="63">IsAny</name><argument_list pos:line="755" pos:column="68">&lt;<argument><name pos:line="755" pos:column="69">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="755" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="755" pos:column="95">.</op:operator><call><name pos:line="755" pos:column="96">Returns</name><argument_list pos:line="755" pos:column="103">(<argument><expr><name><name pos:line="755" pos:column="104">RuntimePolicy</name><op:operator pos:line="755" pos:column="117">.</op:operator><name pos:line="755" pos:column="118">Off</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="756" pos:column="13">Runtime</name><op:operator pos:line="756" pos:column="20">.</op:operator><name pos:line="756" pos:column="21">RuntimePolicyMock</name><op:operator pos:line="756" pos:column="38">.</op:operator><name pos:line="756" pos:column="39">Setup</name></name><argument_list pos:line="756" pos:column="44">(<argument><expr><lambda><name pos:line="756" pos:column="45">p</name> <op:operator pos:line="756" pos:column="47">=&gt;</op:operator> <name><name pos:line="756" pos:column="50">p</name><op:operator pos:line="756" pos:column="51">.</op:operator><name pos:line="756" pos:column="52">ExecuteOn</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="756" pos:column="62">.</op:operator><call><name pos:line="756" pos:column="63">Returns</name><argument_list pos:line="756" pos:column="70">(<argument><expr><name><name pos:line="756" pos:column="71">RuntimeEvent</name><op:operator pos:line="756" pos:column="83">.</op:operator><name pos:line="756" pos:column="84">BeginRequest</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="757" pos:column="13">Runtime</name><op:operator pos:line="757" pos:column="20">.</op:operator><name pos:line="757" pos:column="21">Configuration</name><op:operator pos:line="757" pos:column="34">.</op:operator><name pos:line="757" pos:column="35">RuntimePolicies</name><op:operator pos:line="757" pos:column="50">.</op:operator><name pos:line="757" pos:column="51">Add</name></name><argument_list pos:line="757" pos:column="54">(<argument><expr><name><name pos:line="757" pos:column="55">Runtime</name><op:operator pos:line="757" pos:column="62">.</op:operator><name pos:line="757" pos:column="63">RuntimePolicyMock</name><op:operator pos:line="757" pos:column="80">.</op:operator><name pos:line="757" pos:column="81">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="759" pos:column="13">Runtime</name><op:operator pos:line="759" pos:column="20">.</op:operator><name pos:line="759" pos:column="21">BeginRequest</name></name><argument_list pos:line="759" pos:column="33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="761" pos:column="13">Runtime</name><op:operator pos:line="761" pos:column="20">.</op:operator><name pos:line="761" pos:column="21">HttpRequestStoreMock</name><op:operator pos:line="761" pos:column="41">.</op:operator><name pos:line="761" pos:column="42">Verify</name></name><argument_list pos:line="761" pos:column="48">(<argument><expr><lambda><name pos:line="761" pos:column="49">fp</name> <op:operator pos:line="761" pos:column="52">=&gt;</op:operator> <call><name><name pos:line="761" pos:column="55">fp</name><op:operator pos:line="761" pos:column="57">.</op:operator><name pos:line="761" pos:column="58">Set</name></name><argument_list pos:line="761" pos:column="61">(<argument><expr><name><name pos:line="761" pos:column="62">Constants</name><op:operator pos:line="761" pos:column="71">.</op:operator><name pos:line="761" pos:column="72">RequestIdKey</name></name></expr></argument>, <argument><expr><call><name><name pos:line="761" pos:column="86">It</name><op:operator pos:line="761" pos:column="88">.</op:operator><name><name pos:line="761" pos:column="89">IsAny</name><argument_list pos:line="761" pos:column="94">&lt;<argument><name pos:line="761" pos:column="95">Guid</name></argument>&gt;</argument_list></name></name><argument_list pos:line="761" pos:column="100">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="761" pos:column="105">Times</name><op:operator pos:line="761" pos:column="110">.</op:operator><name pos:line="761" pos:column="111">Never</name></name><argument_list pos:line="761" pos:column="116">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="764" pos:column="9">[<expr><name pos:line="764" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="765" pos:column="9">public</specifier> <name pos:line="765" pos:column="16">void</name></type> <name pos:line="765" pos:column="21">ExecuteTabsOnBeginSessionAccess</name><parameter_list pos:line="765" pos:column="52">()</parameter_list>
        <block pos:line="766" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="767" pos:column="13">Runtime</name><op:operator pos:line="767" pos:column="20">.</op:operator><name pos:line="767" pos:column="21">TabMock</name><op:operator pos:line="767" pos:column="28">.</op:operator><name pos:line="767" pos:column="29">Setup</name></name><argument_list pos:line="767" pos:column="34">(<argument><expr><lambda><name pos:line="767" pos:column="35">t</name> <op:operator pos:line="767" pos:column="37">=&gt;</op:operator> <name><name pos:line="767" pos:column="40">t</name><op:operator pos:line="767" pos:column="41">.</op:operator><name pos:line="767" pos:column="42">ExecuteOn</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="767" pos:column="52">.</op:operator><call><name pos:line="767" pos:column="53">Returns</name><argument_list pos:line="767" pos:column="60">(<argument><expr><name><name pos:line="767" pos:column="61">RuntimeEvent</name><op:operator pos:line="767" pos:column="73">.</op:operator><name pos:line="767" pos:column="74">BeginSessionAccess</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="768" pos:column="13">Runtime</name><op:operator pos:line="768" pos:column="20">.</op:operator><name pos:line="768" pos:column="21">Configuration</name><op:operator pos:line="768" pos:column="34">.</op:operator><name pos:line="768" pos:column="35">Tabs</name><op:operator pos:line="768" pos:column="39">.</op:operator><name pos:line="768" pos:column="40">Add</name></name><argument_list pos:line="768" pos:column="43">(<argument><expr><name><name pos:line="768" pos:column="44">Runtime</name><op:operator pos:line="768" pos:column="51">.</op:operator><name pos:line="768" pos:column="52">TabMock</name><op:operator pos:line="768" pos:column="59">.</op:operator><name pos:line="768" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="770" pos:column="13">Runtime</name><op:operator pos:line="770" pos:column="20">.</op:operator><name pos:line="770" pos:column="21">Initialize</name></name><argument_list pos:line="770" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="771" pos:column="13">Runtime</name><op:operator pos:line="771" pos:column="20">.</op:operator><name pos:line="771" pos:column="21">BeginRequest</name></name><argument_list pos:line="771" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="772" pos:column="13">Runtime</name><op:operator pos:line="772" pos:column="20">.</op:operator><name pos:line="772" pos:column="21">BeginSessionAccess</name></name><argument_list pos:line="772" pos:column="39">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="774" pos:column="13">Runtime</name><op:operator pos:line="774" pos:column="20">.</op:operator><name pos:line="774" pos:column="21">TabMock</name><op:operator pos:line="774" pos:column="28">.</op:operator><name pos:line="774" pos:column="29">Verify</name></name><argument_list pos:line="774" pos:column="35">(<argument><expr><lambda><name pos:line="774" pos:column="36">t</name> <op:operator pos:line="774" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="774" pos:column="41">t</name><op:operator pos:line="774" pos:column="42">.</op:operator><name pos:line="774" pos:column="43">GetData</name></name><argument_list pos:line="774" pos:column="50">(<argument><expr><call><name><name pos:line="774" pos:column="51">It</name><op:operator pos:line="774" pos:column="53">.</op:operator><name><name pos:line="774" pos:column="54">IsAny</name><argument_list pos:line="774" pos:column="59">&lt;<argument><name pos:line="774" pos:column="60">ITabContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="774" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="774" pos:column="77">Times</name><op:operator pos:line="774" pos:column="82">.</op:operator><name pos:line="774" pos:column="83">Once</name></name><argument_list pos:line="774" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="777" pos:column="9">[<expr><name pos:line="777" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="778" pos:column="9">public</specifier> <name pos:line="778" pos:column="16">void</name></type> <name pos:line="778" pos:column="21">ExecuteTabsOnEndSessionAccess</name><parameter_list pos:line="778" pos:column="50">()</parameter_list>
        <block pos:line="779" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="780" pos:column="13">Runtime</name><op:operator pos:line="780" pos:column="20">.</op:operator><name pos:line="780" pos:column="21">TabMock</name><op:operator pos:line="780" pos:column="28">.</op:operator><name pos:line="780" pos:column="29">Setup</name></name><argument_list pos:line="780" pos:column="34">(<argument><expr><lambda><name pos:line="780" pos:column="35">t</name> <op:operator pos:line="780" pos:column="37">=&gt;</op:operator> <name><name pos:line="780" pos:column="40">t</name><op:operator pos:line="780" pos:column="41">.</op:operator><name pos:line="780" pos:column="42">ExecuteOn</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="780" pos:column="52">.</op:operator><call><name pos:line="780" pos:column="53">Returns</name><argument_list pos:line="780" pos:column="60">(<argument><expr><name><name pos:line="780" pos:column="61">RuntimeEvent</name><op:operator pos:line="780" pos:column="73">.</op:operator><name pos:line="780" pos:column="74">EndSessionAccess</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="781" pos:column="13">Runtime</name><op:operator pos:line="781" pos:column="20">.</op:operator><name pos:line="781" pos:column="21">Configuration</name><op:operator pos:line="781" pos:column="34">.</op:operator><name pos:line="781" pos:column="35">Tabs</name><op:operator pos:line="781" pos:column="39">.</op:operator><name pos:line="781" pos:column="40">Add</name></name><argument_list pos:line="781" pos:column="43">(<argument><expr><name><name pos:line="781" pos:column="44">Runtime</name><op:operator pos:line="781" pos:column="51">.</op:operator><name pos:line="781" pos:column="52">TabMock</name><op:operator pos:line="781" pos:column="59">.</op:operator><name pos:line="781" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="783" pos:column="13">Runtime</name><op:operator pos:line="783" pos:column="20">.</op:operator><name pos:line="783" pos:column="21">Initialize</name></name><argument_list pos:line="783" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="784" pos:column="13">Runtime</name><op:operator pos:line="784" pos:column="20">.</op:operator><name pos:line="784" pos:column="21">BeginRequest</name></name><argument_list pos:line="784" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="785" pos:column="13">Runtime</name><op:operator pos:line="785" pos:column="20">.</op:operator><name pos:line="785" pos:column="21">EndSessionAccess</name></name><argument_list pos:line="785" pos:column="37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="787" pos:column="13">Runtime</name><op:operator pos:line="787" pos:column="20">.</op:operator><name pos:line="787" pos:column="21">TabMock</name><op:operator pos:line="787" pos:column="28">.</op:operator><name pos:line="787" pos:column="29">Verify</name></name><argument_list pos:line="787" pos:column="35">(<argument><expr><lambda><name pos:line="787" pos:column="36">t</name> <op:operator pos:line="787" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="787" pos:column="41">t</name><op:operator pos:line="787" pos:column="42">.</op:operator><name pos:line="787" pos:column="43">GetData</name></name><argument_list pos:line="787" pos:column="50">(<argument><expr><call><name><name pos:line="787" pos:column="51">It</name><op:operator pos:line="787" pos:column="53">.</op:operator><name><name pos:line="787" pos:column="54">IsAny</name><argument_list pos:line="787" pos:column="59">&lt;<argument><name pos:line="787" pos:column="60">ITabContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="787" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="787" pos:column="77">Times</name><op:operator pos:line="787" pos:column="82">.</op:operator><name pos:line="787" pos:column="83">Once</name></name><argument_list pos:line="787" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="790" pos:column="9">[<expr><name pos:line="790" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="791" pos:column="9">public</specifier> <name pos:line="791" pos:column="16">void</name></type> <name pos:line="791" pos:column="21">StopBeginSessionAccessWithRuntimePolicyOff</name><parameter_list pos:line="791" pos:column="63">()</parameter_list>
        <block pos:line="792" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="793" pos:column="13">Runtime</name><op:operator pos:line="793" pos:column="20">.</op:operator><name pos:line="793" pos:column="21">Configuration</name><op:operator pos:line="793" pos:column="34">.</op:operator><name pos:line="793" pos:column="35">DefaultRuntimePolicy</name></name> <op:operator pos:line="793" pos:column="56">=</op:operator> <name><name pos:line="793" pos:column="58">RuntimePolicy</name><op:operator pos:line="793" pos:column="71">.</op:operator><name pos:line="793" pos:column="72">Off</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="794" pos:column="13">Runtime</name><op:operator pos:line="794" pos:column="20">.</op:operator><name pos:line="794" pos:column="21">TabMock</name><op:operator pos:line="794" pos:column="28">.</op:operator><name pos:line="794" pos:column="29">Setup</name></name><argument_list pos:line="794" pos:column="34">(<argument><expr><lambda><name pos:line="794" pos:column="35">t</name> <op:operator pos:line="794" pos:column="37">=&gt;</op:operator> <name><name pos:line="794" pos:column="40">t</name><op:operator pos:line="794" pos:column="41">.</op:operator><name pos:line="794" pos:column="42">ExecuteOn</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="794" pos:column="52">.</op:operator><call><name pos:line="794" pos:column="53">Returns</name><argument_list pos:line="794" pos:column="60">(<argument><expr><name><name pos:line="794" pos:column="61">RuntimeEvent</name><op:operator pos:line="794" pos:column="73">.</op:operator><name pos:line="794" pos:column="74">BeginSessionAccess</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="795" pos:column="13">Runtime</name><op:operator pos:line="795" pos:column="20">.</op:operator><name pos:line="795" pos:column="21">Configuration</name><op:operator pos:line="795" pos:column="34">.</op:operator><name pos:line="795" pos:column="35">Tabs</name><op:operator pos:line="795" pos:column="39">.</op:operator><name pos:line="795" pos:column="40">Add</name></name><argument_list pos:line="795" pos:column="43">(<argument><expr><name><name pos:line="795" pos:column="44">Runtime</name><op:operator pos:line="795" pos:column="51">.</op:operator><name pos:line="795" pos:column="52">TabMock</name><op:operator pos:line="795" pos:column="59">.</op:operator><name pos:line="795" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="797" pos:column="13">Runtime</name><op:operator pos:line="797" pos:column="20">.</op:operator><name pos:line="797" pos:column="21">BeginSessionAccess</name></name><argument_list pos:line="797" pos:column="39">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="799" pos:column="13">Runtime</name><op:operator pos:line="799" pos:column="20">.</op:operator><name pos:line="799" pos:column="21">TabMock</name><op:operator pos:line="799" pos:column="28">.</op:operator><name pos:line="799" pos:column="29">Verify</name></name><argument_list pos:line="799" pos:column="35">(<argument><expr><lambda><name pos:line="799" pos:column="36">t</name> <op:operator pos:line="799" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="799" pos:column="41">t</name><op:operator pos:line="799" pos:column="42">.</op:operator><name pos:line="799" pos:column="43">GetData</name></name><argument_list pos:line="799" pos:column="50">(<argument><expr><call><name><name pos:line="799" pos:column="51">It</name><op:operator pos:line="799" pos:column="53">.</op:operator><name><name pos:line="799" pos:column="54">IsAny</name><argument_list pos:line="799" pos:column="59">&lt;<argument><name pos:line="799" pos:column="60">ITabContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="799" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="799" pos:column="77">Times</name><op:operator pos:line="799" pos:column="82">.</op:operator><name pos:line="799" pos:column="83">Never</name></name><argument_list pos:line="799" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="802" pos:column="9">[<expr><name pos:line="802" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="803" pos:column="9">public</specifier> <name pos:line="803" pos:column="16">void</name></type> <name pos:line="803" pos:column="21">StopEndSessionAccessWithRuntimePolicyOff</name><parameter_list pos:line="803" pos:column="61">()</parameter_list>
        <block pos:line="804" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="805" pos:column="13">Runtime</name><op:operator pos:line="805" pos:column="20">.</op:operator><name pos:line="805" pos:column="21">Configuration</name><op:operator pos:line="805" pos:column="34">.</op:operator><name pos:line="805" pos:column="35">DefaultRuntimePolicy</name></name> <op:operator pos:line="805" pos:column="56">=</op:operator> <name><name pos:line="805" pos:column="58">RuntimePolicy</name><op:operator pos:line="805" pos:column="71">.</op:operator><name pos:line="805" pos:column="72">Off</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="806" pos:column="13">Runtime</name><op:operator pos:line="806" pos:column="20">.</op:operator><name pos:line="806" pos:column="21">TabMock</name><op:operator pos:line="806" pos:column="28">.</op:operator><name pos:line="806" pos:column="29">Setup</name></name><argument_list pos:line="806" pos:column="34">(<argument><expr><lambda><name pos:line="806" pos:column="35">t</name> <op:operator pos:line="806" pos:column="37">=&gt;</op:operator> <name><name pos:line="806" pos:column="40">t</name><op:operator pos:line="806" pos:column="41">.</op:operator><name pos:line="806" pos:column="42">ExecuteOn</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="806" pos:column="52">.</op:operator><call><name pos:line="806" pos:column="53">Returns</name><argument_list pos:line="806" pos:column="60">(<argument><expr><name><name pos:line="806" pos:column="61">RuntimeEvent</name><op:operator pos:line="806" pos:column="73">.</op:operator><name pos:line="806" pos:column="74">EndSessionAccess</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="807" pos:column="13">Runtime</name><op:operator pos:line="807" pos:column="20">.</op:operator><name pos:line="807" pos:column="21">Configuration</name><op:operator pos:line="807" pos:column="34">.</op:operator><name pos:line="807" pos:column="35">Tabs</name><op:operator pos:line="807" pos:column="39">.</op:operator><name pos:line="807" pos:column="40">Add</name></name><argument_list pos:line="807" pos:column="43">(<argument><expr><name><name pos:line="807" pos:column="44">Runtime</name><op:operator pos:line="807" pos:column="51">.</op:operator><name pos:line="807" pos:column="52">TabMock</name><op:operator pos:line="807" pos:column="59">.</op:operator><name pos:line="807" pos:column="60">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="809" pos:column="13">Runtime</name><op:operator pos:line="809" pos:column="20">.</op:operator><name pos:line="809" pos:column="21">EndSessionAccess</name></name><argument_list pos:line="809" pos:column="37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="811" pos:column="13">Runtime</name><op:operator pos:line="811" pos:column="20">.</op:operator><name pos:line="811" pos:column="21">TabMock</name><op:operator pos:line="811" pos:column="28">.</op:operator><name pos:line="811" pos:column="29">Verify</name></name><argument_list pos:line="811" pos:column="35">(<argument><expr><lambda><name pos:line="811" pos:column="36">t</name> <op:operator pos:line="811" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="811" pos:column="41">t</name><op:operator pos:line="811" pos:column="42">.</op:operator><name pos:line="811" pos:column="43">GetData</name></name><argument_list pos:line="811" pos:column="50">(<argument><expr><call><name><name pos:line="811" pos:column="51">It</name><op:operator pos:line="811" pos:column="53">.</op:operator><name><name pos:line="811" pos:column="54">IsAny</name><argument_list pos:line="811" pos:column="59">&lt;<argument><name pos:line="811" pos:column="60">ITabContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="811" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="811" pos:column="77">Times</name><op:operator pos:line="811" pos:column="82">.</op:operator><name pos:line="811" pos:column="83">Never</name></name><argument_list pos:line="811" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="814" pos:column="9">[<expr><name pos:line="814" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="815" pos:column="9">public</specifier> <name pos:line="815" pos:column="16">void</name></type> <name pos:line="815" pos:column="21">ThrowExceptionWhenExecutingResourceWithNullParameters</name><parameter_list pos:line="815" pos:column="74">()</parameter_list>
        <block pos:line="816" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="817" pos:column="13">Assert</name><op:operator pos:line="817" pos:column="19">.</op:operator><name><name pos:line="817" pos:column="20">Throws</name><argument_list pos:line="817" pos:column="26">&lt;<argument><name pos:line="817" pos:column="27">ArgumentNullException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="817" pos:column="49">(<argument><expr><lambda><parameter_list pos:line="817" pos:column="50">()</parameter_list> <op:operator pos:line="817" pos:column="53">=&gt;</op:operator> <call><name><name pos:line="817" pos:column="56">Runtime</name><op:operator pos:line="817" pos:column="63">.</op:operator><name pos:line="817" pos:column="64">ExecuteResource</name></name><argument_list pos:line="817" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="817" pos:column="80">"any"</lit:literal></expr></argument>, <argument><expr><name pos:line="817" pos:column="87">null</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="block" pos:line="820" pos:column="9">/*
         * The following tests are tests related to they way runtime policies are evaluated in case resources are being executed, but they also
         * cover the way normal runtime policies will be evaluated. Below you'll find a table that describes the test cases below
         * 
         * -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
         * DefaultRuntimePolicy | BeginRequestPolicy1 | BeginRequestPolicy2	| ResourcePolicy1                                         | ResourcePolicy2                                         | Default Resource                 | Other Resource
         * -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
         *                      | Returns | Executed? | Returns | Executed? | Returns             | Executed?                         | Returns             | Executed?                         | RuntimePolicy Result | Executed? | RuntimePolicy Result | Executed?
         * -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
         * Off                  |         | false     |         | false     |                     | false                             |                     | false                             | Off                  | false     | Off                  | false
         * On                   | On      | true      | On      | true      | ExecuteResourceOnly | true                              | ExecuteResourceOnly | true                              | ExecuteResourceOnly  | true      | ExecuteResourceOnly  | true
         * On                   | On      | true      | On      | true      | ExecuteResourceOnly | true                              | Off                 | true                              | Off                  | false     | Off                  | false
         * On                   | On      | true      | On      | true      | Off                 | true                              |                     | false                             | Off                  | false     | Off                  | false
         * On                   | On      | true      | Off     | true      | ExecuteResourceOnly | true (only when default resource) | ExecuteResourceOnly | true (only when default resource) | Off                  | true      | Off                  | false
         * On                   | Off     | true      |         | false     | ExecuteResourceOnly | true (only when default resource) | ExecuteResourceOnly | true (only when default resource) | Off                  | true      | Off                  | false
         */</comment>
        <function><type><attribute pos:line="836" pos:column="9">[<expr><name pos:line="836" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="837" pos:column="9">public</specifier> <name pos:line="837" pos:column="16">void</name></type> <name pos:line="837" pos:column="21">SkipExecutionOfDefaultResourceWhenDefaultRuntimePolicyIsOff</name><parameter_list pos:line="837" pos:column="80">()</parameter_list>
        <block pos:line="838" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="839" pos:column="13">ValidateResourceExecutionAndResultingRuntimePolicy</name><argument_list pos:line="839" pos:column="63">(
                <argument><expr><op:operator pos:line="840" pos:column="17">new</op:operator> <name pos:line="840" pos:column="21">ResourceExecutionAndResultingRuntimePolicyTestCase</name>
                <block pos:line="841" pos:column="17">{
                    <expr><name pos:line="842" pos:column="21">CheckDefaultResourceAccess</name> <op:operator pos:line="842" pos:column="48">=</op:operator> <lit:literal type="boolean" pos:line="842" pos:column="50">true</lit:literal></expr><op:operator pos:line="842" pos:column="54">,</op:operator>
                    <expr><name pos:line="843" pos:column="21">DefaultRuntimePolicy</name> <op:operator pos:line="843" pos:column="42">=</op:operator> <name><name pos:line="843" pos:column="44">RuntimePolicy</name><op:operator pos:line="843" pos:column="57">.</op:operator><name pos:line="843" pos:column="58">Off</name></name></expr><op:operator pos:line="843" pos:column="61">,</op:operator>
                    <expr><name pos:line="844" pos:column="21">FirstRuntimePolicyOnBeginRequestMustBeExecuted</name> <op:operator pos:line="844" pos:column="68">=</op:operator> <lit:literal type="boolean" pos:line="844" pos:column="70">false</lit:literal></expr><op:operator pos:line="844" pos:column="75">,</op:operator>
                    <expr><name pos:line="845" pos:column="21">SecondRuntimePolicyOnBeginRequestMustBeExecuted</name> <op:operator pos:line="845" pos:column="69">=</op:operator> <lit:literal type="boolean" pos:line="845" pos:column="71">false</lit:literal></expr><op:operator pos:line="845" pos:column="76">,</op:operator>
                    <expr><name pos:line="846" pos:column="21">FirstRuntimePolicyOnExecuteResourceMustBeExecuted</name> <op:operator pos:line="846" pos:column="71">=</op:operator> <lit:literal type="boolean" pos:line="846" pos:column="73">false</lit:literal></expr><op:operator pos:line="846" pos:column="78">,</op:operator>
                    <expr><name pos:line="847" pos:column="21">SecondRuntimePolicyOnExecuteResourceMustBeExecuted</name> <op:operator pos:line="847" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="847" pos:column="74">false</lit:literal></expr><op:operator pos:line="847" pos:column="79">,</op:operator>
                    <expr><name pos:line="848" pos:column="21">ResultingRuntimePolicyForResource</name> <op:operator pos:line="848" pos:column="55">=</op:operator> <name><name pos:line="848" pos:column="57">RuntimePolicy</name><op:operator pos:line="848" pos:column="70">.</op:operator><name pos:line="848" pos:column="71">Off</name></name></expr><op:operator pos:line="848" pos:column="74">,</op:operator>
                    <expr><name pos:line="849" pos:column="21">ResourceMustBeExecuted</name> <op:operator pos:line="849" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="849" pos:column="46">false</lit:literal></expr>
                }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="853" pos:column="9">[<expr><name pos:line="853" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="854" pos:column="9">public</specifier> <name pos:line="854" pos:column="16">void</name></type> <name pos:line="854" pos:column="21">SkipExecutionOfNonDefaultResourcesWhenDefaultRuntimePolicyIsOff</name><parameter_list pos:line="854" pos:column="84">()</parameter_list>
        <block pos:line="855" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="856" pos:column="13">ValidateResourceExecutionAndResultingRuntimePolicy</name><argument_list pos:line="856" pos:column="63">(
                <argument><expr><op:operator pos:line="857" pos:column="17">new</op:operator> <name pos:line="857" pos:column="21">ResourceExecutionAndResultingRuntimePolicyTestCase</name>
                <block pos:line="858" pos:column="17">{
                    <expr><name pos:line="859" pos:column="21">CheckDefaultResourceAccess</name> <op:operator pos:line="859" pos:column="48">=</op:operator> <lit:literal type="boolean" pos:line="859" pos:column="50">false</lit:literal></expr><op:operator pos:line="859" pos:column="55">,</op:operator>
                    <expr><name pos:line="860" pos:column="21">DefaultRuntimePolicy</name> <op:operator pos:line="860" pos:column="42">=</op:operator> <name><name pos:line="860" pos:column="44">RuntimePolicy</name><op:operator pos:line="860" pos:column="57">.</op:operator><name pos:line="860" pos:column="58">Off</name></name></expr><op:operator pos:line="860" pos:column="61">,</op:operator>
                    <expr><name pos:line="861" pos:column="21">FirstRuntimePolicyOnBeginRequestMustBeExecuted</name> <op:operator pos:line="861" pos:column="68">=</op:operator> <lit:literal type="boolean" pos:line="861" pos:column="70">false</lit:literal></expr><op:operator pos:line="861" pos:column="75">,</op:operator>
                    <expr><name pos:line="862" pos:column="21">SecondRuntimePolicyOnBeginRequestMustBeExecuted</name> <op:operator pos:line="862" pos:column="69">=</op:operator> <lit:literal type="boolean" pos:line="862" pos:column="71">false</lit:literal></expr><op:operator pos:line="862" pos:column="76">,</op:operator>
                    <expr><name pos:line="863" pos:column="21">FirstRuntimePolicyOnExecuteResourceMustBeExecuted</name> <op:operator pos:line="863" pos:column="71">=</op:operator> <lit:literal type="boolean" pos:line="863" pos:column="73">false</lit:literal></expr><op:operator pos:line="863" pos:column="78">,</op:operator>
                    <expr><name pos:line="864" pos:column="21">SecondRuntimePolicyOnExecuteResourceMustBeExecuted</name> <op:operator pos:line="864" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="864" pos:column="74">false</lit:literal></expr><op:operator pos:line="864" pos:column="79">,</op:operator>
                    <expr><name pos:line="865" pos:column="21">ResultingRuntimePolicyForResource</name> <op:operator pos:line="865" pos:column="55">=</op:operator> <name><name pos:line="865" pos:column="57">RuntimePolicy</name><op:operator pos:line="865" pos:column="70">.</op:operator><name pos:line="865" pos:column="71">Off</name></name></expr><op:operator pos:line="865" pos:column="74">,</op:operator>
                    <expr><name pos:line="866" pos:column="21">ResourceMustBeExecuted</name> <op:operator pos:line="866" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="866" pos:column="46">false</lit:literal></expr>
                }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="870" pos:column="9">[<expr><name pos:line="870" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="871" pos:column="9">public</specifier> <name pos:line="871" pos:column="16">void</name></type> <name pos:line="871" pos:column="21">ExecuteDefaultResourceWhenDefaultRuntimePolicyIsOnAndNoOtherRuntimePolicySaidOff</name><parameter_list pos:line="871" pos:column="101">()</parameter_list>
        <block pos:line="872" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="873" pos:column="13">ValidateResourceExecutionAndResultingRuntimePolicy</name><argument_list pos:line="873" pos:column="63">(
                <argument><expr><op:operator pos:line="874" pos:column="17">new</op:operator> <name pos:line="874" pos:column="21">ResourceExecutionAndResultingRuntimePolicyTestCase</name>
                <block pos:line="875" pos:column="17">{
                    <expr><name pos:line="876" pos:column="21">CheckDefaultResourceAccess</name> <op:operator pos:line="876" pos:column="48">=</op:operator> <lit:literal type="boolean" pos:line="876" pos:column="50">true</lit:literal></expr>
                }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="880" pos:column="9">[<expr><name pos:line="880" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="881" pos:column="9">public</specifier> <name pos:line="881" pos:column="16">void</name></type> <name pos:line="881" pos:column="21">ExecuteNonDefaultResourcesWhenDefaultRuntimePolicyIsOnAndNoOtherRuntimePolicySaidOff</name><parameter_list pos:line="881" pos:column="105">()</parameter_list>
        <block pos:line="882" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="883" pos:column="13">ValidateResourceExecutionAndResultingRuntimePolicy</name><argument_list pos:line="883" pos:column="63">(
                <argument><expr><op:operator pos:line="884" pos:column="17">new</op:operator> <call><name pos:line="884" pos:column="21">ResourceExecutionAndResultingRuntimePolicyTestCase</name><argument_list pos:line="884" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="887" pos:column="9">[<expr><name pos:line="887" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="888" pos:column="9">public</specifier> <name pos:line="888" pos:column="16">void</name></type> <name pos:line="888" pos:column="21">SkipExecutingDefaultResourceWhenFirstRuntimePolicyOnExecuteResourceSaidOff</name><parameter_list pos:line="888" pos:column="95">()</parameter_list>
        <block pos:line="889" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="890" pos:column="13">ValidateResourceExecutionAndResultingRuntimePolicy</name><argument_list pos:line="890" pos:column="63">(
                <argument><expr><op:operator pos:line="891" pos:column="17">new</op:operator> <name pos:line="891" pos:column="21">ResourceExecutionAndResultingRuntimePolicyTestCase</name>
                <block pos:line="892" pos:column="17">{
                    <expr><name pos:line="893" pos:column="21">CheckDefaultResourceAccess</name> <op:operator pos:line="893" pos:column="48">=</op:operator> <lit:literal type="boolean" pos:line="893" pos:column="50">true</lit:literal></expr><op:operator pos:line="893" pos:column="54">,</op:operator>
                    <expr><name pos:line="894" pos:column="21">RuntimePolicyReturnedByFirstRuntimePolicyOnExecuteResource</name> <op:operator pos:line="894" pos:column="80">=</op:operator> <name><name pos:line="894" pos:column="82">RuntimePolicy</name><op:operator pos:line="894" pos:column="95">.</op:operator><name pos:line="894" pos:column="96">Off</name></name></expr><op:operator pos:line="894" pos:column="99">,</op:operator>
                    <expr><name pos:line="895" pos:column="21">SecondRuntimePolicyOnExecuteResourceMustBeExecuted</name> <op:operator pos:line="895" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="895" pos:column="74">false</lit:literal></expr><op:operator pos:line="895" pos:column="79">,</op:operator>
                    <expr><name pos:line="896" pos:column="21">ResultingRuntimePolicyForResource</name> <op:operator pos:line="896" pos:column="55">=</op:operator> <name><name pos:line="896" pos:column="57">RuntimePolicy</name><op:operator pos:line="896" pos:column="70">.</op:operator><name pos:line="896" pos:column="71">Off</name></name></expr><op:operator pos:line="896" pos:column="74">,</op:operator>
                    <expr><name pos:line="897" pos:column="21">ResourceMustBeExecuted</name> <op:operator pos:line="897" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="897" pos:column="46">false</lit:literal></expr>
                }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="901" pos:column="9">[<expr><name pos:line="901" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="902" pos:column="9">public</specifier> <name pos:line="902" pos:column="16">void</name></type> <name pos:line="902" pos:column="21">SkipExecutingDefaultResourceWhenSecondRuntimePolicyOnExecuteResourceSaidOff</name><parameter_list pos:line="902" pos:column="96">()</parameter_list>
        <block pos:line="903" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="904" pos:column="13">ValidateResourceExecutionAndResultingRuntimePolicy</name><argument_list pos:line="904" pos:column="63">(
                <argument><expr><op:operator pos:line="905" pos:column="17">new</op:operator> <name pos:line="905" pos:column="21">ResourceExecutionAndResultingRuntimePolicyTestCase</name>
                <block pos:line="906" pos:column="17">{
                    <expr><name pos:line="907" pos:column="21">CheckDefaultResourceAccess</name> <op:operator pos:line="907" pos:column="48">=</op:operator> <lit:literal type="boolean" pos:line="907" pos:column="50">true</lit:literal></expr><op:operator pos:line="907" pos:column="54">,</op:operator>
                    <expr><name pos:line="908" pos:column="21">RuntimePolicyReturnedBySecondRuntimePolicyOnExecuteResource</name> <op:operator pos:line="908" pos:column="81">=</op:operator> <name><name pos:line="908" pos:column="83">RuntimePolicy</name><op:operator pos:line="908" pos:column="96">.</op:operator><name pos:line="908" pos:column="97">Off</name></name></expr><op:operator pos:line="908" pos:column="100">,</op:operator>
                    <expr><name pos:line="909" pos:column="21">ResultingRuntimePolicyForResource</name> <op:operator pos:line="909" pos:column="55">=</op:operator> <name><name pos:line="909" pos:column="57">RuntimePolicy</name><op:operator pos:line="909" pos:column="70">.</op:operator><name pos:line="909" pos:column="71">Off</name></name></expr><op:operator pos:line="909" pos:column="74">,</op:operator>
                    <expr><name pos:line="910" pos:column="21">ResourceMustBeExecuted</name> <op:operator pos:line="910" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="910" pos:column="46">false</lit:literal></expr>
                }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="914" pos:column="9">[<expr><name pos:line="914" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="915" pos:column="9">public</specifier> <name pos:line="915" pos:column="16">void</name></type> <name pos:line="915" pos:column="21">SkipExecutingNonDefaultResourcesWhenFirstRuntimePolicyOnExecuteResourceSaidOff</name><parameter_list pos:line="915" pos:column="99">()</parameter_list>
        <block pos:line="916" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="917" pos:column="13">ValidateResourceExecutionAndResultingRuntimePolicy</name><argument_list pos:line="917" pos:column="63">(
                <argument><expr><op:operator pos:line="918" pos:column="17">new</op:operator> <name pos:line="918" pos:column="21">ResourceExecutionAndResultingRuntimePolicyTestCase</name>
                <block pos:line="919" pos:column="17">{
                    <expr><name pos:line="920" pos:column="21">RuntimePolicyReturnedByFirstRuntimePolicyOnExecuteResource</name> <op:operator pos:line="920" pos:column="80">=</op:operator> <name><name pos:line="920" pos:column="82">RuntimePolicy</name><op:operator pos:line="920" pos:column="95">.</op:operator><name pos:line="920" pos:column="96">Off</name></name></expr><op:operator pos:line="920" pos:column="99">,</op:operator>
                    <expr><name pos:line="921" pos:column="21">SecondRuntimePolicyOnExecuteResourceMustBeExecuted</name> <op:operator pos:line="921" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="921" pos:column="74">false</lit:literal></expr><op:operator pos:line="921" pos:column="79">,</op:operator>
                    <expr><name pos:line="922" pos:column="21">ResultingRuntimePolicyForResource</name> <op:operator pos:line="922" pos:column="55">=</op:operator> <name><name pos:line="922" pos:column="57">RuntimePolicy</name><op:operator pos:line="922" pos:column="70">.</op:operator><name pos:line="922" pos:column="71">Off</name></name></expr><op:operator pos:line="922" pos:column="74">,</op:operator>
                    <expr><name pos:line="923" pos:column="21">ResourceMustBeExecuted</name> <op:operator pos:line="923" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="923" pos:column="46">false</lit:literal></expr>
                }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="927" pos:column="9">[<expr><name pos:line="927" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="928" pos:column="9">public</specifier> <name pos:line="928" pos:column="16">void</name></type> <name pos:line="928" pos:column="21">SkipExecutingNonDefaultResourcesWhenSecondRuntimePolicyOnExecuteResourceSaidOff</name><parameter_list pos:line="928" pos:column="100">()</parameter_list>
        <block pos:line="929" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="930" pos:column="13">ValidateResourceExecutionAndResultingRuntimePolicy</name><argument_list pos:line="930" pos:column="63">(
                <argument><expr><op:operator pos:line="931" pos:column="17">new</op:operator> <name pos:line="931" pos:column="21">ResourceExecutionAndResultingRuntimePolicyTestCase</name>
                <block pos:line="932" pos:column="17">{
                    <expr><name pos:line="933" pos:column="21">RuntimePolicyReturnedBySecondRuntimePolicyOnExecuteResource</name> <op:operator pos:line="933" pos:column="81">=</op:operator> <name><name pos:line="933" pos:column="83">RuntimePolicy</name><op:operator pos:line="933" pos:column="96">.</op:operator><name pos:line="933" pos:column="97">Off</name></name></expr><op:operator pos:line="933" pos:column="100">,</op:operator>
                    <expr><name pos:line="934" pos:column="21">ResultingRuntimePolicyForResource</name> <op:operator pos:line="934" pos:column="55">=</op:operator> <name><name pos:line="934" pos:column="57">RuntimePolicy</name><op:operator pos:line="934" pos:column="70">.</op:operator><name pos:line="934" pos:column="71">Off</name></name></expr><op:operator pos:line="934" pos:column="74">,</op:operator>
                    <expr><name pos:line="935" pos:column="21">ResourceMustBeExecuted</name> <op:operator pos:line="935" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="935" pos:column="46">false</lit:literal></expr>
                }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="939" pos:column="9">[<expr><name pos:line="939" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="940" pos:column="9">public</specifier> <name pos:line="940" pos:column="16">void</name></type> <name pos:line="940" pos:column="21">ExecuteDefaultResourceEvenWhenSecondRuntimePolicyOnBeginRequestSaidOffAndNoRuntimePolicyOnExecuteResourceSaidOff</name><parameter_list pos:line="940" pos:column="133">()</parameter_list>
        <block pos:line="941" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="942" pos:column="13">ValidateResourceExecutionAndResultingRuntimePolicy</name><argument_list pos:line="942" pos:column="63">(
                <argument><expr><op:operator pos:line="943" pos:column="17">new</op:operator> <name pos:line="943" pos:column="21">ResourceExecutionAndResultingRuntimePolicyTestCase</name>
                <block pos:line="944" pos:column="17">{
                    <expr><name pos:line="945" pos:column="21">CheckDefaultResourceAccess</name> <op:operator pos:line="945" pos:column="48">=</op:operator> <lit:literal type="boolean" pos:line="945" pos:column="50">true</lit:literal></expr><op:operator pos:line="945" pos:column="54">,</op:operator>
                    <expr><name pos:line="946" pos:column="21">RuntimePolicyReturnedBySecondRuntimePolicyOnBeginRequest</name> <op:operator pos:line="946" pos:column="78">=</op:operator> <name><name pos:line="946" pos:column="80">RuntimePolicy</name><op:operator pos:line="946" pos:column="93">.</op:operator><name pos:line="946" pos:column="94">Off</name></name></expr><op:operator pos:line="946" pos:column="97">,</op:operator>
                    <expr><name pos:line="947" pos:column="21">ResultingRuntimePolicyForResource</name> <op:operator pos:line="947" pos:column="55">=</op:operator> <name><name pos:line="947" pos:column="57">RuntimePolicy</name><op:operator pos:line="947" pos:column="70">.</op:operator><name pos:line="947" pos:column="71">Off</name></name></expr>
                }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="951" pos:column="9">[<expr><name pos:line="951" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="952" pos:column="9">public</specifier> <name pos:line="952" pos:column="16">void</name></type> <name pos:line="952" pos:column="21">SkipExecutingNonDefaultResourcesWhenSecondRuntimePolicyOnBeginRequestSaidOff</name><parameter_list pos:line="952" pos:column="97">()</parameter_list>
        <block pos:line="953" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="954" pos:column="13">ValidateResourceExecutionAndResultingRuntimePolicy</name><argument_list pos:line="954" pos:column="63">(
                <argument><expr><op:operator pos:line="955" pos:column="17">new</op:operator> <name pos:line="955" pos:column="21">ResourceExecutionAndResultingRuntimePolicyTestCase</name>
                <block pos:line="956" pos:column="17">{
                    <expr><name pos:line="957" pos:column="21">RuntimePolicyReturnedBySecondRuntimePolicyOnBeginRequest</name> <op:operator pos:line="957" pos:column="78">=</op:operator> <name><name pos:line="957" pos:column="80">RuntimePolicy</name><op:operator pos:line="957" pos:column="93">.</op:operator><name pos:line="957" pos:column="94">Off</name></name></expr><op:operator pos:line="957" pos:column="97">,</op:operator>
                    <expr><name pos:line="958" pos:column="21">FirstRuntimePolicyOnExecuteResourceMustBeExecuted</name> <op:operator pos:line="958" pos:column="71">=</op:operator> <lit:literal type="boolean" pos:line="958" pos:column="73">false</lit:literal></expr><op:operator pos:line="958" pos:column="78">,</op:operator>
                    <expr><name pos:line="959" pos:column="21">SecondRuntimePolicyOnExecuteResourceMustBeExecuted</name> <op:operator pos:line="959" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="959" pos:column="74">false</lit:literal></expr><op:operator pos:line="959" pos:column="79">,</op:operator>
                    <expr><name pos:line="960" pos:column="21">ResultingRuntimePolicyForResource</name> <op:operator pos:line="960" pos:column="55">=</op:operator> <name><name pos:line="960" pos:column="57">RuntimePolicy</name><op:operator pos:line="960" pos:column="70">.</op:operator><name pos:line="960" pos:column="71">Off</name></name></expr><op:operator pos:line="960" pos:column="74">,</op:operator>
                    <expr><name pos:line="961" pos:column="21">ResourceMustBeExecuted</name> <op:operator pos:line="961" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="961" pos:column="46">false</lit:literal></expr>
                }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="965" pos:column="9">[<expr><name pos:line="965" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="966" pos:column="9">public</specifier> <name pos:line="966" pos:column="16">void</name></type> <name pos:line="966" pos:column="21">ExecuteDefaultResourceEvenWhenFirstRuntimePolicyOnBeginRequestSaidOffAndNoRuntimePolicyOnExecuteResourceSaidOff</name><parameter_list pos:line="966" pos:column="132">()</parameter_list>
        <block pos:line="967" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="968" pos:column="13">ValidateResourceExecutionAndResultingRuntimePolicy</name><argument_list pos:line="968" pos:column="63">(
                <argument><expr><op:operator pos:line="969" pos:column="17">new</op:operator> <name pos:line="969" pos:column="21">ResourceExecutionAndResultingRuntimePolicyTestCase</name>
                <block pos:line="970" pos:column="17">{
                    <expr><name pos:line="971" pos:column="21">CheckDefaultResourceAccess</name> <op:operator pos:line="971" pos:column="48">=</op:operator> <lit:literal type="boolean" pos:line="971" pos:column="50">true</lit:literal></expr><op:operator pos:line="971" pos:column="54">,</op:operator>
                    <expr><name pos:line="972" pos:column="21">RuntimePolicyReturnedByFirstRuntimePolicyOnBeginRequest</name> <op:operator pos:line="972" pos:column="77">=</op:operator> <name><name pos:line="972" pos:column="79">RuntimePolicy</name><op:operator pos:line="972" pos:column="92">.</op:operator><name pos:line="972" pos:column="93">Off</name></name></expr><op:operator pos:line="972" pos:column="96">,</op:operator>
                    <expr><name pos:line="973" pos:column="21">SecondRuntimePolicyOnBeginRequestMustBeExecuted</name> <op:operator pos:line="973" pos:column="69">=</op:operator> <lit:literal type="boolean" pos:line="973" pos:column="71">false</lit:literal></expr><op:operator pos:line="973" pos:column="76">,</op:operator>
                    <expr><name pos:line="974" pos:column="21">FirstRuntimePolicyOnExecuteResourceMustBeExecuted</name> <op:operator pos:line="974" pos:column="71">=</op:operator> <lit:literal type="boolean" pos:line="974" pos:column="73">true</lit:literal></expr><op:operator pos:line="974" pos:column="77">,</op:operator>
                    <expr><name pos:line="975" pos:column="21">SecondRuntimePolicyOnExecuteResourceMustBeExecuted</name> <op:operator pos:line="975" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="975" pos:column="74">true</lit:literal></expr><op:operator pos:line="975" pos:column="78">,</op:operator>
                    <expr><name pos:line="976" pos:column="21">ResultingRuntimePolicyForResource</name> <op:operator pos:line="976" pos:column="55">=</op:operator> <name><name pos:line="976" pos:column="57">RuntimePolicy</name><op:operator pos:line="976" pos:column="70">.</op:operator><name pos:line="976" pos:column="71">Off</name></name></expr>
                }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="980" pos:column="9">[<expr><name pos:line="980" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="981" pos:column="9">public</specifier> <name pos:line="981" pos:column="16">void</name></type> <name pos:line="981" pos:column="21">SkipExecutingNonDefaultResourcesWhenFirstRuntimePolicyOnBeginRequestSaidOff</name><parameter_list pos:line="981" pos:column="96">()</parameter_list>
        <block pos:line="982" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="983" pos:column="13">ValidateResourceExecutionAndResultingRuntimePolicy</name><argument_list pos:line="983" pos:column="63">(
                <argument><expr><op:operator pos:line="984" pos:column="17">new</op:operator> <name pos:line="984" pos:column="21">ResourceExecutionAndResultingRuntimePolicyTestCase</name>
                <block pos:line="985" pos:column="17">{
                    <expr><name pos:line="986" pos:column="21">RuntimePolicyReturnedByFirstRuntimePolicyOnBeginRequest</name> <op:operator pos:line="986" pos:column="77">=</op:operator> <name><name pos:line="986" pos:column="79">RuntimePolicy</name><op:operator pos:line="986" pos:column="92">.</op:operator><name pos:line="986" pos:column="93">Off</name></name></expr><op:operator pos:line="986" pos:column="96">,</op:operator>
                    <expr><name pos:line="987" pos:column="21">SecondRuntimePolicyOnBeginRequestMustBeExecuted</name> <op:operator pos:line="987" pos:column="69">=</op:operator> <lit:literal type="boolean" pos:line="987" pos:column="71">false</lit:literal></expr><op:operator pos:line="987" pos:column="76">,</op:operator>
                    <expr><name pos:line="988" pos:column="21">FirstRuntimePolicyOnExecuteResourceMustBeExecuted</name> <op:operator pos:line="988" pos:column="71">=</op:operator> <lit:literal type="boolean" pos:line="988" pos:column="73">false</lit:literal></expr><op:operator pos:line="988" pos:column="78">,</op:operator>
                    <expr><name pos:line="989" pos:column="21">SecondRuntimePolicyOnExecuteResourceMustBeExecuted</name> <op:operator pos:line="989" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="989" pos:column="74">false</lit:literal></expr><op:operator pos:line="989" pos:column="79">,</op:operator>
                    <expr><name pos:line="990" pos:column="21">ResultingRuntimePolicyForResource</name> <op:operator pos:line="990" pos:column="55">=</op:operator> <name><name pos:line="990" pos:column="57">RuntimePolicy</name><op:operator pos:line="990" pos:column="70">.</op:operator><name pos:line="990" pos:column="71">Off</name></name></expr><op:operator pos:line="990" pos:column="74">,</op:operator>
                    <expr><name pos:line="991" pos:column="21">ResourceMustBeExecuted</name> <op:operator pos:line="991" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="991" pos:column="46">false</lit:literal></expr>
                }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <class><specifier pos:line="995" pos:column="9">private</specifier> class <name pos:line="995" pos:column="23">ResourceExecutionAndResultingRuntimePolicyTestCase</name>
        <block pos:line="996" pos:column="9">{
            <constructor><specifier pos:line="997" pos:column="13">public</specifier> <name pos:line="997" pos:column="20">ResourceExecutionAndResultingRuntimePolicyTestCase</name><parameter_list pos:line="997" pos:column="70">()</parameter_list>
            <block pos:line="998" pos:column="13">{
                <expr_stmt><expr><name pos:line="999" pos:column="17">DefaultRuntimePolicy</name> <op:operator pos:line="999" pos:column="38">=</op:operator> <name><name pos:line="999" pos:column="40">RuntimePolicy</name><op:operator pos:line="999" pos:column="53">.</op:operator><name pos:line="999" pos:column="54">On</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="1000" pos:column="17">RuntimePolicyReturnedByFirstRuntimePolicyOnBeginRequest</name> <op:operator pos:line="1000" pos:column="73">=</op:operator> <name><name pos:line="1000" pos:column="75">RuntimePolicy</name><op:operator pos:line="1000" pos:column="88">.</op:operator><name pos:line="1000" pos:column="89">On</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="1001" pos:column="17">FirstRuntimePolicyOnBeginRequestMustBeExecuted</name> <op:operator pos:line="1001" pos:column="64">=</op:operator> <lit:literal type="boolean" pos:line="1001" pos:column="66">true</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="1002" pos:column="17">RuntimePolicyReturnedBySecondRuntimePolicyOnBeginRequest</name> <op:operator pos:line="1002" pos:column="74">=</op:operator> <name><name pos:line="1002" pos:column="76">RuntimePolicy</name><op:operator pos:line="1002" pos:column="89">.</op:operator><name pos:line="1002" pos:column="90">On</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="1003" pos:column="17">SecondRuntimePolicyOnBeginRequestMustBeExecuted</name> <op:operator pos:line="1003" pos:column="65">=</op:operator> <lit:literal type="boolean" pos:line="1003" pos:column="67">true</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="1004" pos:column="17">RuntimePolicyReturnedByFirstRuntimePolicyOnExecuteResource</name> <op:operator pos:line="1004" pos:column="76">=</op:operator> <name><name pos:line="1004" pos:column="78">RuntimePolicy</name><op:operator pos:line="1004" pos:column="91">.</op:operator><name pos:line="1004" pos:column="92">ExecuteResourceOnly</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="1005" pos:column="17">FirstRuntimePolicyOnExecuteResourceMustBeExecuted</name> <op:operator pos:line="1005" pos:column="67">=</op:operator> <lit:literal type="boolean" pos:line="1005" pos:column="69">true</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="1006" pos:column="17">RuntimePolicyReturnedBySecondRuntimePolicyOnExecuteResource</name> <op:operator pos:line="1006" pos:column="77">=</op:operator> <name><name pos:line="1006" pos:column="79">RuntimePolicy</name><op:operator pos:line="1006" pos:column="92">.</op:operator><name pos:line="1006" pos:column="93">ExecuteResourceOnly</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="1007" pos:column="17">SecondRuntimePolicyOnExecuteResourceMustBeExecuted</name> <op:operator pos:line="1007" pos:column="68">=</op:operator> <lit:literal type="boolean" pos:line="1007" pos:column="70">true</lit:literal></expr>;</expr_stmt>

                <expr_stmt><expr><name pos:line="1009" pos:column="17">CheckDefaultResourceAccess</name> <op:operator pos:line="1009" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="1009" pos:column="46">false</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="1010" pos:column="17">ResultingRuntimePolicyForResource</name> <op:operator pos:line="1010" pos:column="51">=</op:operator> <name><name pos:line="1010" pos:column="53">RuntimePolicy</name><op:operator pos:line="1010" pos:column="66">.</op:operator><name pos:line="1010" pos:column="67">ExecuteResourceOnly</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="1011" pos:column="17">ResourceMustBeExecuted</name> <op:operator pos:line="1011" pos:column="40">=</op:operator> <lit:literal type="boolean" pos:line="1011" pos:column="42">true</lit:literal></expr>;</expr_stmt>
            }</block></constructor>

            <decl_stmt><decl><type><specifier pos:line="1014" pos:column="13">public</specifier> <name pos:line="1014" pos:column="20">RuntimePolicy</name></type> <name pos:line="1014" pos:column="34">DefaultRuntimePolicy</name> <block pos:line="1014" pos:column="55">{ <function_decl><name pos:line="1014" pos:column="57">get</name>;</function_decl> <function_decl><name pos:line="1014" pos:column="62">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="1015" pos:column="13">public</specifier> <name pos:line="1015" pos:column="20">RuntimePolicy</name></type> <name pos:line="1015" pos:column="34">RuntimePolicyReturnedByFirstRuntimePolicyOnBeginRequest</name> <block pos:line="1015" pos:column="90">{ <function_decl><name pos:line="1015" pos:column="92">get</name>;</function_decl> <function_decl><name pos:line="1015" pos:column="97">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="1016" pos:column="13">public</specifier> <name pos:line="1016" pos:column="20">bool</name></type> <name pos:line="1016" pos:column="25">FirstRuntimePolicyOnBeginRequestMustBeExecuted</name> <block pos:line="1016" pos:column="72">{ <function_decl><name pos:line="1016" pos:column="74">get</name>;</function_decl> <function_decl><name pos:line="1016" pos:column="79">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="1017" pos:column="13">public</specifier> <name pos:line="1017" pos:column="20">RuntimePolicy</name></type> <name pos:line="1017" pos:column="34">RuntimePolicyReturnedBySecondRuntimePolicyOnBeginRequest</name> <block pos:line="1017" pos:column="91">{ <function_decl><name pos:line="1017" pos:column="93">get</name>;</function_decl> <function_decl><name pos:line="1017" pos:column="98">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="1018" pos:column="13">public</specifier> <name pos:line="1018" pos:column="20">bool</name></type> <name pos:line="1018" pos:column="25">SecondRuntimePolicyOnBeginRequestMustBeExecuted</name> <block pos:line="1018" pos:column="73">{ <function_decl><name pos:line="1018" pos:column="75">get</name>;</function_decl> <function_decl><name pos:line="1018" pos:column="80">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="1020" pos:column="13">public</specifier> <name pos:line="1020" pos:column="20">RuntimePolicy</name></type> <name pos:line="1020" pos:column="34">RuntimePolicyReturnedByFirstRuntimePolicyOnExecuteResource</name> <block pos:line="1020" pos:column="93">{ <function_decl><name pos:line="1020" pos:column="95">get</name>;</function_decl> <function_decl><name pos:line="1020" pos:column="100">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="1021" pos:column="13">public</specifier> <name pos:line="1021" pos:column="20">bool</name></type> <name pos:line="1021" pos:column="25">FirstRuntimePolicyOnExecuteResourceMustBeExecuted</name> <block pos:line="1021" pos:column="75">{ <function_decl><name pos:line="1021" pos:column="77">get</name>;</function_decl> <function_decl><name pos:line="1021" pos:column="82">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="1022" pos:column="13">public</specifier> <name pos:line="1022" pos:column="20">RuntimePolicy</name></type> <name pos:line="1022" pos:column="34">RuntimePolicyReturnedBySecondRuntimePolicyOnExecuteResource</name> <block pos:line="1022" pos:column="94">{ <function_decl><name pos:line="1022" pos:column="96">get</name>;</function_decl> <function_decl><name pos:line="1022" pos:column="101">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="1023" pos:column="13">public</specifier> <name pos:line="1023" pos:column="20">bool</name></type> <name pos:line="1023" pos:column="25">SecondRuntimePolicyOnExecuteResourceMustBeExecuted</name> <block pos:line="1023" pos:column="76">{ <function_decl><name pos:line="1023" pos:column="78">get</name>;</function_decl> <function_decl><name pos:line="1023" pos:column="83">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="1025" pos:column="13">public</specifier> <name pos:line="1025" pos:column="20">bool</name></type> <name pos:line="1025" pos:column="25">CheckDefaultResourceAccess</name> <block pos:line="1025" pos:column="52">{ <function_decl><name pos:line="1025" pos:column="54">get</name>;</function_decl> <function_decl><name pos:line="1025" pos:column="59">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="1026" pos:column="13">public</specifier> <name pos:line="1026" pos:column="20">RuntimePolicy</name></type> <name pos:line="1026" pos:column="34">ResultingRuntimePolicyForResource</name> <block pos:line="1026" pos:column="68">{ <function_decl><name pos:line="1026" pos:column="70">get</name>;</function_decl> <function_decl><name pos:line="1026" pos:column="75">set</name>;</function_decl> }</block></decl></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="1027" pos:column="13">public</specifier> <name pos:line="1027" pos:column="20">bool</name></type> <name pos:line="1027" pos:column="25">ResourceMustBeExecuted</name> <block pos:line="1027" pos:column="48">{ <function_decl><name pos:line="1027" pos:column="50">get</name>;</function_decl> <function_decl><name pos:line="1027" pos:column="55">set</name>;</function_decl> }</block></decl></decl_stmt>
        }</block></class>

        <function><type><specifier pos:line="1030" pos:column="9">private</specifier> <name pos:line="1030" pos:column="17">void</name></type> <name pos:line="1030" pos:column="22">ValidateResourceExecutionAndResultingRuntimePolicy</name><parameter_list pos:line="1030" pos:column="72">(<param><decl><type><name pos:line="1030" pos:column="73">ResourceExecutionAndResultingRuntimePolicyTestCase</name></type> <name pos:line="1030" pos:column="124">testCase</name></decl></param>)</parameter_list>
        <block pos:line="1031" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="1032" pos:column="13">var</name></type> <name pos:line="1032" pos:column="17">firstRuntimePolicyOnBeginRequestMock</name> <init pos:line="1032" pos:column="54">= <expr><op:operator pos:line="1032" pos:column="56">new</op:operator> <call><name><name pos:line="1032" pos:column="60">Mock</name><argument_list pos:line="1032" pos:column="64">&lt;<argument><name pos:line="1032" pos:column="65">IRuntimePolicy</name></argument>&gt;</argument_list></name><argument_list pos:line="1032" pos:column="80">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1033" pos:column="13">firstRuntimePolicyOnBeginRequestMock</name><op:operator pos:line="1033" pos:column="49">.</op:operator><name pos:line="1033" pos:column="50">Setup</name></name><argument_list pos:line="1033" pos:column="55">(<argument><expr><lambda><name pos:line="1033" pos:column="56">v</name> <op:operator pos:line="1033" pos:column="58">=&gt;</op:operator> <call><name><name pos:line="1033" pos:column="61">v</name><op:operator pos:line="1033" pos:column="62">.</op:operator><name pos:line="1033" pos:column="63">Execute</name></name><argument_list pos:line="1033" pos:column="70">(<argument><expr><call><name><name pos:line="1033" pos:column="71">It</name><op:operator pos:line="1033" pos:column="73">.</op:operator><name><name pos:line="1033" pos:column="74">IsAny</name><argument_list pos:line="1033" pos:column="79">&lt;<argument><name pos:line="1033" pos:column="80">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1033" pos:column="102">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="1033" pos:column="106">.</op:operator><call><name pos:line="1033" pos:column="107">Returns</name><argument_list pos:line="1033" pos:column="114">(<argument><expr><name><name pos:line="1033" pos:column="115">testCase</name><op:operator pos:line="1033" pos:column="123">.</op:operator><name pos:line="1033" pos:column="124">RuntimePolicyReturnedByFirstRuntimePolicyOnBeginRequest</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1034" pos:column="13">firstRuntimePolicyOnBeginRequestMock</name><op:operator pos:line="1034" pos:column="49">.</op:operator><name pos:line="1034" pos:column="50">Setup</name></name><argument_list pos:line="1034" pos:column="55">(<argument><expr><lambda><name pos:line="1034" pos:column="56">v</name> <op:operator pos:line="1034" pos:column="58">=&gt;</op:operator> <name><name pos:line="1034" pos:column="61">v</name><op:operator pos:line="1034" pos:column="62">.</op:operator><name pos:line="1034" pos:column="63">ExecuteOn</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="1034" pos:column="73">.</op:operator><call><name pos:line="1034" pos:column="74">Returns</name><argument_list pos:line="1034" pos:column="81">(<argument><expr><name><name pos:line="1034" pos:column="82">RuntimeEvent</name><op:operator pos:line="1034" pos:column="94">.</op:operator><name pos:line="1034" pos:column="95">BeginRequest</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1035" pos:column="13">Runtime</name><op:operator pos:line="1035" pos:column="20">.</op:operator><name pos:line="1035" pos:column="21">Configuration</name><op:operator pos:line="1035" pos:column="34">.</op:operator><name pos:line="1035" pos:column="35">RuntimePolicies</name><op:operator pos:line="1035" pos:column="50">.</op:operator><name pos:line="1035" pos:column="51">Add</name></name><argument_list pos:line="1035" pos:column="54">(<argument><expr><name><name pos:line="1035" pos:column="55">firstRuntimePolicyOnBeginRequestMock</name><op:operator pos:line="1035" pos:column="91">.</op:operator><name pos:line="1035" pos:column="92">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="1037" pos:column="13">var</name></type> <name pos:line="1037" pos:column="17">secondRuntimePolicyOnBeginRequestMock</name> <init pos:line="1037" pos:column="55">= <expr><op:operator pos:line="1037" pos:column="57">new</op:operator> <call><name><name pos:line="1037" pos:column="61">Mock</name><argument_list pos:line="1037" pos:column="65">&lt;<argument><name pos:line="1037" pos:column="66">IRuntimePolicy</name></argument>&gt;</argument_list></name><argument_list pos:line="1037" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1038" pos:column="13">secondRuntimePolicyOnBeginRequestMock</name><op:operator pos:line="1038" pos:column="50">.</op:operator><name pos:line="1038" pos:column="51">Setup</name></name><argument_list pos:line="1038" pos:column="56">(<argument><expr><lambda><name pos:line="1038" pos:column="57">v</name> <op:operator pos:line="1038" pos:column="59">=&gt;</op:operator> <call><name><name pos:line="1038" pos:column="62">v</name><op:operator pos:line="1038" pos:column="63">.</op:operator><name pos:line="1038" pos:column="64">Execute</name></name><argument_list pos:line="1038" pos:column="71">(<argument><expr><call><name><name pos:line="1038" pos:column="72">It</name><op:operator pos:line="1038" pos:column="74">.</op:operator><name><name pos:line="1038" pos:column="75">IsAny</name><argument_list pos:line="1038" pos:column="80">&lt;<argument><name pos:line="1038" pos:column="81">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1038" pos:column="103">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="1038" pos:column="107">.</op:operator><call><name pos:line="1038" pos:column="108">Returns</name><argument_list pos:line="1038" pos:column="115">(<argument><expr><name><name pos:line="1038" pos:column="116">testCase</name><op:operator pos:line="1038" pos:column="124">.</op:operator><name pos:line="1038" pos:column="125">RuntimePolicyReturnedBySecondRuntimePolicyOnBeginRequest</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1039" pos:column="13">secondRuntimePolicyOnBeginRequestMock</name><op:operator pos:line="1039" pos:column="50">.</op:operator><name pos:line="1039" pos:column="51">Setup</name></name><argument_list pos:line="1039" pos:column="56">(<argument><expr><lambda><name pos:line="1039" pos:column="57">v</name> <op:operator pos:line="1039" pos:column="59">=&gt;</op:operator> <name><name pos:line="1039" pos:column="62">v</name><op:operator pos:line="1039" pos:column="63">.</op:operator><name pos:line="1039" pos:column="64">ExecuteOn</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="1039" pos:column="74">.</op:operator><call><name pos:line="1039" pos:column="75">Returns</name><argument_list pos:line="1039" pos:column="82">(<argument><expr><name><name pos:line="1039" pos:column="83">RuntimeEvent</name><op:operator pos:line="1039" pos:column="95">.</op:operator><name pos:line="1039" pos:column="96">BeginRequest</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1040" pos:column="13">Runtime</name><op:operator pos:line="1040" pos:column="20">.</op:operator><name pos:line="1040" pos:column="21">Configuration</name><op:operator pos:line="1040" pos:column="34">.</op:operator><name pos:line="1040" pos:column="35">RuntimePolicies</name><op:operator pos:line="1040" pos:column="50">.</op:operator><name pos:line="1040" pos:column="51">Add</name></name><argument_list pos:line="1040" pos:column="54">(<argument><expr><name><name pos:line="1040" pos:column="55">secondRuntimePolicyOnBeginRequestMock</name><op:operator pos:line="1040" pos:column="92">.</op:operator><name pos:line="1040" pos:column="93">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="1042" pos:column="13">var</name></type> <name pos:line="1042" pos:column="17">firstRuntimePolicyOnExecuteResourceMock</name> <init pos:line="1042" pos:column="57">= <expr><op:operator pos:line="1042" pos:column="59">new</op:operator> <call><name><name pos:line="1042" pos:column="63">Mock</name><argument_list pos:line="1042" pos:column="67">&lt;<argument><name pos:line="1042" pos:column="68">IRuntimePolicy</name></argument>&gt;</argument_list></name><argument_list pos:line="1042" pos:column="83">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1043" pos:column="13">firstRuntimePolicyOnExecuteResourceMock</name><op:operator pos:line="1043" pos:column="52">.</op:operator><name pos:line="1043" pos:column="53">Setup</name></name><argument_list pos:line="1043" pos:column="58">(<argument><expr><lambda><name pos:line="1043" pos:column="59">v</name> <op:operator pos:line="1043" pos:column="61">=&gt;</op:operator> <call><name><name pos:line="1043" pos:column="64">v</name><op:operator pos:line="1043" pos:column="65">.</op:operator><name pos:line="1043" pos:column="66">Execute</name></name><argument_list pos:line="1043" pos:column="73">(<argument><expr><call><name><name pos:line="1043" pos:column="74">It</name><op:operator pos:line="1043" pos:column="76">.</op:operator><name><name pos:line="1043" pos:column="77">IsAny</name><argument_list pos:line="1043" pos:column="82">&lt;<argument><name pos:line="1043" pos:column="83">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1043" pos:column="105">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="1043" pos:column="109">.</op:operator><call><name pos:line="1043" pos:column="110">Returns</name><argument_list pos:line="1043" pos:column="117">(<argument><expr><name><name pos:line="1043" pos:column="118">testCase</name><op:operator pos:line="1043" pos:column="126">.</op:operator><name pos:line="1043" pos:column="127">RuntimePolicyReturnedByFirstRuntimePolicyOnExecuteResource</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1044" pos:column="13">firstRuntimePolicyOnExecuteResourceMock</name><op:operator pos:line="1044" pos:column="52">.</op:operator><name pos:line="1044" pos:column="53">Setup</name></name><argument_list pos:line="1044" pos:column="58">(<argument><expr><lambda><name pos:line="1044" pos:column="59">v</name> <op:operator pos:line="1044" pos:column="61">=&gt;</op:operator> <name><name pos:line="1044" pos:column="64">v</name><op:operator pos:line="1044" pos:column="65">.</op:operator><name pos:line="1044" pos:column="66">ExecuteOn</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="1044" pos:column="76">.</op:operator><call><name pos:line="1044" pos:column="77">Returns</name><argument_list pos:line="1044" pos:column="84">(<argument><expr><name><name pos:line="1044" pos:column="85">RuntimeEvent</name><op:operator pos:line="1044" pos:column="97">.</op:operator><name pos:line="1044" pos:column="98">ExecuteResource</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1045" pos:column="13">Runtime</name><op:operator pos:line="1045" pos:column="20">.</op:operator><name pos:line="1045" pos:column="21">Configuration</name><op:operator pos:line="1045" pos:column="34">.</op:operator><name pos:line="1045" pos:column="35">RuntimePolicies</name><op:operator pos:line="1045" pos:column="50">.</op:operator><name pos:line="1045" pos:column="51">Add</name></name><argument_list pos:line="1045" pos:column="54">(<argument><expr><name><name pos:line="1045" pos:column="55">firstRuntimePolicyOnExecuteResourceMock</name><op:operator pos:line="1045" pos:column="94">.</op:operator><name pos:line="1045" pos:column="95">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="1047" pos:column="13">var</name></type> <name pos:line="1047" pos:column="17">secondRuntimePolicyOnExecuteResourceMock</name> <init pos:line="1047" pos:column="58">= <expr><op:operator pos:line="1047" pos:column="60">new</op:operator> <call><name><name pos:line="1047" pos:column="64">Mock</name><argument_list pos:line="1047" pos:column="68">&lt;<argument><name pos:line="1047" pos:column="69">IRuntimePolicy</name></argument>&gt;</argument_list></name><argument_list pos:line="1047" pos:column="84">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1048" pos:column="13">secondRuntimePolicyOnExecuteResourceMock</name><op:operator pos:line="1048" pos:column="53">.</op:operator><name pos:line="1048" pos:column="54">Setup</name></name><argument_list pos:line="1048" pos:column="59">(<argument><expr><lambda><name pos:line="1048" pos:column="60">v</name> <op:operator pos:line="1048" pos:column="62">=&gt;</op:operator> <call><name><name pos:line="1048" pos:column="65">v</name><op:operator pos:line="1048" pos:column="66">.</op:operator><name pos:line="1048" pos:column="67">Execute</name></name><argument_list pos:line="1048" pos:column="74">(<argument><expr><call><name><name pos:line="1048" pos:column="75">It</name><op:operator pos:line="1048" pos:column="77">.</op:operator><name><name pos:line="1048" pos:column="78">IsAny</name><argument_list pos:line="1048" pos:column="83">&lt;<argument><name pos:line="1048" pos:column="84">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1048" pos:column="106">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="1048" pos:column="110">.</op:operator><call><name pos:line="1048" pos:column="111">Returns</name><argument_list pos:line="1048" pos:column="118">(<argument><expr><name><name pos:line="1048" pos:column="119">testCase</name><op:operator pos:line="1048" pos:column="127">.</op:operator><name pos:line="1048" pos:column="128">RuntimePolicyReturnedBySecondRuntimePolicyOnExecuteResource</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1049" pos:column="13">secondRuntimePolicyOnExecuteResourceMock</name><op:operator pos:line="1049" pos:column="53">.</op:operator><name pos:line="1049" pos:column="54">Setup</name></name><argument_list pos:line="1049" pos:column="59">(<argument><expr><lambda><name pos:line="1049" pos:column="60">v</name> <op:operator pos:line="1049" pos:column="62">=&gt;</op:operator> <name><name pos:line="1049" pos:column="65">v</name><op:operator pos:line="1049" pos:column="66">.</op:operator><name pos:line="1049" pos:column="67">ExecuteOn</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="1049" pos:column="77">.</op:operator><call><name pos:line="1049" pos:column="78">Returns</name><argument_list pos:line="1049" pos:column="85">(<argument><expr><name><name pos:line="1049" pos:column="86">RuntimeEvent</name><op:operator pos:line="1049" pos:column="98">.</op:operator><name pos:line="1049" pos:column="99">ExecuteResource</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1050" pos:column="13">Runtime</name><op:operator pos:line="1050" pos:column="20">.</op:operator><name pos:line="1050" pos:column="21">Configuration</name><op:operator pos:line="1050" pos:column="34">.</op:operator><name pos:line="1050" pos:column="35">RuntimePolicies</name><op:operator pos:line="1050" pos:column="50">.</op:operator><name pos:line="1050" pos:column="51">Add</name></name><argument_list pos:line="1050" pos:column="54">(<argument><expr><name><name pos:line="1050" pos:column="55">secondRuntimePolicyOnExecuteResourceMock</name><op:operator pos:line="1050" pos:column="95">.</op:operator><name pos:line="1050" pos:column="96">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name><name pos:line="1052" pos:column="13">Runtime</name><op:operator pos:line="1052" pos:column="20">.</op:operator><name pos:line="1052" pos:column="21">Configuration</name><op:operator pos:line="1052" pos:column="34">.</op:operator><name pos:line="1052" pos:column="35">DefaultRuntimePolicy</name></name> <op:operator pos:line="1052" pos:column="56">=</op:operator> <name><name pos:line="1052" pos:column="58">testCase</name><op:operator pos:line="1052" pos:column="66">.</op:operator><name pos:line="1052" pos:column="67">DefaultRuntimePolicy</name></name></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="1054" pos:column="13">var</name></type> <name pos:line="1054" pos:column="17">defaultResourceMock</name> <init pos:line="1054" pos:column="37">= <expr><op:operator pos:line="1054" pos:column="39">new</op:operator> <call><name><name pos:line="1054" pos:column="43">Mock</name><argument_list pos:line="1054" pos:column="47">&lt;<argument><name pos:line="1054" pos:column="48">IResource</name></argument>&gt;</argument_list></name><argument_list pos:line="1054" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1055" pos:column="13">defaultResourceMock</name><op:operator pos:line="1055" pos:column="32">.</op:operator><name pos:line="1055" pos:column="33">Setup</name></name><argument_list pos:line="1055" pos:column="38">(<argument><expr><lambda><name pos:line="1055" pos:column="39">r</name> <op:operator pos:line="1055" pos:column="41">=&gt;</op:operator> <name><name pos:line="1055" pos:column="44">r</name><op:operator pos:line="1055" pos:column="45">.</op:operator><name pos:line="1055" pos:column="46">Name</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="1055" pos:column="51">.</op:operator><call><name pos:line="1055" pos:column="52">Returns</name><argument_list pos:line="1055" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="1055" pos:column="60">"defaultResourceName"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="1056" pos:column="13">var</name></type> <name pos:line="1056" pos:column="17">defaultResourceResultMock</name> <init pos:line="1056" pos:column="43">= <expr><op:operator pos:line="1056" pos:column="45">new</op:operator> <call><name><name pos:line="1056" pos:column="49">Mock</name><argument_list pos:line="1056" pos:column="53">&lt;<argument><name pos:line="1056" pos:column="54">IResourceResult</name></argument>&gt;</argument_list></name><argument_list pos:line="1056" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1057" pos:column="13">defaultResourceMock</name><op:operator pos:line="1057" pos:column="32">.</op:operator><name pos:line="1057" pos:column="33">Setup</name></name><argument_list pos:line="1057" pos:column="38">(<argument><expr><lambda><name pos:line="1057" pos:column="39">r</name> <op:operator pos:line="1057" pos:column="41">=&gt;</op:operator> <call><name><name pos:line="1057" pos:column="44">r</name><op:operator pos:line="1057" pos:column="45">.</op:operator><name pos:line="1057" pos:column="46">Execute</name></name><argument_list pos:line="1057" pos:column="53">(<argument><expr><call><name><name pos:line="1057" pos:column="54">It</name><op:operator pos:line="1057" pos:column="56">.</op:operator><name><name pos:line="1057" pos:column="57">IsAny</name><argument_list pos:line="1057" pos:column="62">&lt;<argument><name pos:line="1057" pos:column="63">IResourceContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1057" pos:column="80">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="1057" pos:column="84">.</op:operator><call><name pos:line="1057" pos:column="85">Returns</name><argument_list pos:line="1057" pos:column="92">(<argument><expr><name><name pos:line="1057" pos:column="93">defaultResourceResultMock</name><op:operator pos:line="1057" pos:column="118">.</op:operator><name pos:line="1057" pos:column="119">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1058" pos:column="13">Runtime</name><op:operator pos:line="1058" pos:column="20">.</op:operator><name pos:line="1058" pos:column="21">Configuration</name><op:operator pos:line="1058" pos:column="34">.</op:operator><name pos:line="1058" pos:column="35">Resources</name><op:operator pos:line="1058" pos:column="44">.</op:operator><name pos:line="1058" pos:column="45">Add</name></name><argument_list pos:line="1058" pos:column="48">(<argument><expr><name><name pos:line="1058" pos:column="49">defaultResourceMock</name><op:operator pos:line="1058" pos:column="68">.</op:operator><name pos:line="1058" pos:column="69">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="1059" pos:column="13">Runtime</name><op:operator pos:line="1059" pos:column="20">.</op:operator><name pos:line="1059" pos:column="21">Configuration</name><op:operator pos:line="1059" pos:column="34">.</op:operator><name pos:line="1059" pos:column="35">DefaultResource</name></name> <op:operator pos:line="1059" pos:column="51">=</op:operator> <name><name pos:line="1059" pos:column="53">defaultResourceMock</name><op:operator pos:line="1059" pos:column="72">.</op:operator><name pos:line="1059" pos:column="73">Object</name></name></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="1061" pos:column="13">var</name></type> <name pos:line="1061" pos:column="17">normalResourceMock</name> <init pos:line="1061" pos:column="36">= <expr><op:operator pos:line="1061" pos:column="38">new</op:operator> <call><name><name pos:line="1061" pos:column="42">Mock</name><argument_list pos:line="1061" pos:column="46">&lt;<argument><name pos:line="1061" pos:column="47">IResource</name></argument>&gt;</argument_list></name><argument_list pos:line="1061" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1062" pos:column="13">normalResourceMock</name><op:operator pos:line="1062" pos:column="31">.</op:operator><name pos:line="1062" pos:column="32">Setup</name></name><argument_list pos:line="1062" pos:column="37">(<argument><expr><lambda><name pos:line="1062" pos:column="38">r</name> <op:operator pos:line="1062" pos:column="40">=&gt;</op:operator> <name><name pos:line="1062" pos:column="43">r</name><op:operator pos:line="1062" pos:column="44">.</op:operator><name pos:line="1062" pos:column="45">Name</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="1062" pos:column="50">.</op:operator><call><name pos:line="1062" pos:column="51">Returns</name><argument_list pos:line="1062" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="1062" pos:column="59">"normalResourceName"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="1063" pos:column="13">var</name></type> <name pos:line="1063" pos:column="17">normalResourceResultMock</name> <init pos:line="1063" pos:column="42">= <expr><op:operator pos:line="1063" pos:column="44">new</op:operator> <call><name><name pos:line="1063" pos:column="48">Mock</name><argument_list pos:line="1063" pos:column="52">&lt;<argument><name pos:line="1063" pos:column="53">IResourceResult</name></argument>&gt;</argument_list></name><argument_list pos:line="1063" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1064" pos:column="13">normalResourceMock</name><op:operator pos:line="1064" pos:column="31">.</op:operator><name pos:line="1064" pos:column="32">Setup</name></name><argument_list pos:line="1064" pos:column="37">(<argument><expr><lambda><name pos:line="1064" pos:column="38">r</name> <op:operator pos:line="1064" pos:column="40">=&gt;</op:operator> <call><name><name pos:line="1064" pos:column="43">r</name><op:operator pos:line="1064" pos:column="44">.</op:operator><name pos:line="1064" pos:column="45">Execute</name></name><argument_list pos:line="1064" pos:column="52">(<argument><expr><call><name><name pos:line="1064" pos:column="53">It</name><op:operator pos:line="1064" pos:column="55">.</op:operator><name><name pos:line="1064" pos:column="56">IsAny</name><argument_list pos:line="1064" pos:column="61">&lt;<argument><name pos:line="1064" pos:column="62">IResourceContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1064" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="1064" pos:column="83">.</op:operator><call><name pos:line="1064" pos:column="84">Returns</name><argument_list pos:line="1064" pos:column="91">(<argument><expr><name><name pos:line="1064" pos:column="92">normalResourceResultMock</name><op:operator pos:line="1064" pos:column="116">.</op:operator><name pos:line="1064" pos:column="117">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1065" pos:column="13">Runtime</name><op:operator pos:line="1065" pos:column="20">.</op:operator><name pos:line="1065" pos:column="21">Configuration</name><op:operator pos:line="1065" pos:column="34">.</op:operator><name pos:line="1065" pos:column="35">Resources</name><op:operator pos:line="1065" pos:column="44">.</op:operator><name pos:line="1065" pos:column="45">Add</name></name><argument_list pos:line="1065" pos:column="48">(<argument><expr><name><name pos:line="1065" pos:column="49">normalResourceMock</name><op:operator pos:line="1065" pos:column="67">.</op:operator><name pos:line="1065" pos:column="68">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="1067" pos:column="13">Runtime</name><op:operator pos:line="1067" pos:column="20">.</op:operator><name pos:line="1067" pos:column="21">Initialize</name></name><argument_list pos:line="1067" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1068" pos:column="13">Runtime</name><op:operator pos:line="1068" pos:column="20">.</op:operator><name pos:line="1068" pos:column="21">BeginRequest</name></name><argument_list pos:line="1068" pos:column="33">()</argument_list></call></expr>;</expr_stmt>

            <if pos:line="1070" pos:column="13">if <condition pos:line="1070" pos:column="16">(<expr><name><name pos:line="1070" pos:column="17">testCase</name><op:operator pos:line="1070" pos:column="25">.</op:operator><name pos:line="1070" pos:column="26">CheckDefaultResourceAccess</name></name></expr>)</condition><then pos:line="1070" pos:column="53">
            <block pos:line="1071" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="1072" pos:column="17">Runtime</name><op:operator pos:line="1072" pos:column="24">.</op:operator><name pos:line="1072" pos:column="25">ExecuteDefaultResource</name></name><argument_list pos:line="1072" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="1073" pos:column="17">defaultResourceMock</name><op:operator pos:line="1073" pos:column="36">.</op:operator><name pos:line="1073" pos:column="37">Verify</name></name><argument_list pos:line="1073" pos:column="43">(<argument><expr><lambda><name pos:line="1073" pos:column="44">r</name> <op:operator pos:line="1073" pos:column="46">=&gt;</op:operator> <call><name><name pos:line="1073" pos:column="49">r</name><op:operator pos:line="1073" pos:column="50">.</op:operator><name pos:line="1073" pos:column="51">Execute</name></name><argument_list pos:line="1073" pos:column="58">(<argument><expr><call><name><name pos:line="1073" pos:column="59">It</name><op:operator pos:line="1073" pos:column="61">.</op:operator><name><name pos:line="1073" pos:column="62">IsAny</name><argument_list pos:line="1073" pos:column="67">&lt;<argument><name pos:line="1073" pos:column="68">IResourceContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1073" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><name><name pos:line="1073" pos:column="90">testCase</name><op:operator pos:line="1073" pos:column="98">.</op:operator><name pos:line="1073" pos:column="99">ResourceMustBeExecuted</name> <type:modifier pos:line="1073" pos:column="122">?</type:modifier></name> <call><name><name pos:line="1073" pos:column="124">Times</name><op:operator pos:line="1073" pos:column="129">.</op:operator><name pos:line="1073" pos:column="130">Once</name></name><argument_list pos:line="1073" pos:column="134">()</argument_list></call> <op:operator pos:line="1073" pos:column="137">:</op:operator> <call><name><name pos:line="1073" pos:column="139">Times</name><op:operator pos:line="1073" pos:column="144">.</op:operator><name pos:line="1073" pos:column="145">Never</name></name><argument_list pos:line="1073" pos:column="150">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="1074" pos:column="17">defaultResourceResultMock</name><op:operator pos:line="1074" pos:column="42">.</op:operator><name pos:line="1074" pos:column="43">Verify</name></name><argument_list pos:line="1074" pos:column="49">(<argument><expr><lambda><name pos:line="1074" pos:column="50">r</name> <op:operator pos:line="1074" pos:column="52">=&gt;</op:operator> <call><name><name pos:line="1074" pos:column="55">r</name><op:operator pos:line="1074" pos:column="56">.</op:operator><name pos:line="1074" pos:column="57">Execute</name></name><argument_list pos:line="1074" pos:column="64">(<argument><expr><call><name><name pos:line="1074" pos:column="65">It</name><op:operator pos:line="1074" pos:column="67">.</op:operator><name><name pos:line="1074" pos:column="68">IsAny</name><argument_list pos:line="1074" pos:column="73">&lt;<argument><name pos:line="1074" pos:column="74">IResourceResultContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1074" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><name><name pos:line="1074" pos:column="102">testCase</name><op:operator pos:line="1074" pos:column="110">.</op:operator><name pos:line="1074" pos:column="111">ResourceMustBeExecuted</name> <type:modifier pos:line="1074" pos:column="134">?</type:modifier></name> <call><name><name pos:line="1074" pos:column="136">Times</name><op:operator pos:line="1074" pos:column="141">.</op:operator><name pos:line="1074" pos:column="142">Once</name></name><argument_list pos:line="1074" pos:column="146">()</argument_list></call> <op:operator pos:line="1074" pos:column="149">:</op:operator> <call><name><name pos:line="1074" pos:column="151">Times</name><op:operator pos:line="1074" pos:column="156">.</op:operator><name pos:line="1074" pos:column="157">Never</name></name><argument_list pos:line="1074" pos:column="162">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="1076" pos:column="13">else
            <block pos:line="1077" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="1078" pos:column="17">Runtime</name><op:operator pos:line="1078" pos:column="24">.</op:operator><name pos:line="1078" pos:column="25">ExecuteResource</name></name><argument_list pos:line="1078" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="1078" pos:column="41">"normalResourceName"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="1078" pos:column="63">new</op:operator> <call><name pos:line="1078" pos:column="67">ResourceParameters</name><argument_list pos:line="1078" pos:column="85">(<argument><expr><op:operator pos:line="1078" pos:column="86">new</op:operator> <call><name><name pos:line="1078" pos:column="90">Dictionary</name><argument_list pos:line="1078" pos:column="100">&lt;<argument><name pos:line="1078" pos:column="101">string</name></argument>, <argument><name pos:line="1078" pos:column="109">string</name></argument>&gt;</argument_list></name><argument_list pos:line="1078" pos:column="116">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="1079" pos:column="17">normalResourceMock</name><op:operator pos:line="1079" pos:column="35">.</op:operator><name pos:line="1079" pos:column="36">Verify</name></name><argument_list pos:line="1079" pos:column="42">(<argument><expr><lambda><name pos:line="1079" pos:column="43">r</name> <op:operator pos:line="1079" pos:column="45">=&gt;</op:operator> <call><name><name pos:line="1079" pos:column="48">r</name><op:operator pos:line="1079" pos:column="49">.</op:operator><name pos:line="1079" pos:column="50">Execute</name></name><argument_list pos:line="1079" pos:column="57">(<argument><expr><call><name><name pos:line="1079" pos:column="58">It</name><op:operator pos:line="1079" pos:column="60">.</op:operator><name><name pos:line="1079" pos:column="61">IsAny</name><argument_list pos:line="1079" pos:column="66">&lt;<argument><name pos:line="1079" pos:column="67">IResourceContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1079" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><name><name pos:line="1079" pos:column="89">testCase</name><op:operator pos:line="1079" pos:column="97">.</op:operator><name pos:line="1079" pos:column="98">ResourceMustBeExecuted</name> <type:modifier pos:line="1079" pos:column="121">?</type:modifier></name> <call><name><name pos:line="1079" pos:column="123">Times</name><op:operator pos:line="1079" pos:column="128">.</op:operator><name pos:line="1079" pos:column="129">Once</name></name><argument_list pos:line="1079" pos:column="133">()</argument_list></call> <op:operator pos:line="1079" pos:column="136">:</op:operator> <call><name><name pos:line="1079" pos:column="138">Times</name><op:operator pos:line="1079" pos:column="143">.</op:operator><name pos:line="1079" pos:column="144">Never</name></name><argument_list pos:line="1079" pos:column="149">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="1080" pos:column="17">normalResourceResultMock</name><op:operator pos:line="1080" pos:column="41">.</op:operator><name pos:line="1080" pos:column="42">Verify</name></name><argument_list pos:line="1080" pos:column="48">(<argument><expr><lambda><name pos:line="1080" pos:column="49">r</name> <op:operator pos:line="1080" pos:column="51">=&gt;</op:operator> <call><name><name pos:line="1080" pos:column="54">r</name><op:operator pos:line="1080" pos:column="55">.</op:operator><name pos:line="1080" pos:column="56">Execute</name></name><argument_list pos:line="1080" pos:column="63">(<argument><expr><call><name><name pos:line="1080" pos:column="64">It</name><op:operator pos:line="1080" pos:column="66">.</op:operator><name><name pos:line="1080" pos:column="67">IsAny</name><argument_list pos:line="1080" pos:column="72">&lt;<argument><name pos:line="1080" pos:column="73">IResourceResultContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1080" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><name><name pos:line="1080" pos:column="101">testCase</name><op:operator pos:line="1080" pos:column="109">.</op:operator><name pos:line="1080" pos:column="110">ResourceMustBeExecuted</name> <type:modifier pos:line="1080" pos:column="133">?</type:modifier></name> <call><name><name pos:line="1080" pos:column="135">Times</name><op:operator pos:line="1080" pos:column="140">.</op:operator><name pos:line="1080" pos:column="141">Once</name></name><argument_list pos:line="1080" pos:column="145">()</argument_list></call> <op:operator pos:line="1080" pos:column="148">:</op:operator> <call><name><name pos:line="1080" pos:column="150">Times</name><op:operator pos:line="1080" pos:column="155">.</op:operator><name pos:line="1080" pos:column="156">Never</name></name><argument_list pos:line="1080" pos:column="161">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>

            <expr_stmt><expr><call><name><name pos:line="1083" pos:column="13">firstRuntimePolicyOnBeginRequestMock</name><op:operator pos:line="1083" pos:column="49">.</op:operator><name pos:line="1083" pos:column="50">Verify</name></name><argument_list pos:line="1083" pos:column="56">(<argument><expr><lambda><name pos:line="1083" pos:column="57">v</name> <op:operator pos:line="1083" pos:column="59">=&gt;</op:operator> <call><name><name pos:line="1083" pos:column="62">v</name><op:operator pos:line="1083" pos:column="63">.</op:operator><name pos:line="1083" pos:column="64">Execute</name></name><argument_list pos:line="1083" pos:column="71">(<argument><expr><call><name><name pos:line="1083" pos:column="72">It</name><op:operator pos:line="1083" pos:column="74">.</op:operator><name><name pos:line="1083" pos:column="75">IsAny</name><argument_list pos:line="1083" pos:column="80">&lt;<argument><name pos:line="1083" pos:column="81">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1083" pos:column="103">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><name><name pos:line="1083" pos:column="108">testCase</name><op:operator pos:line="1083" pos:column="116">.</op:operator><name pos:line="1083" pos:column="117">FirstRuntimePolicyOnBeginRequestMustBeExecuted</name> <type:modifier pos:line="1083" pos:column="164">?</type:modifier></name> <call><name><name pos:line="1083" pos:column="166">Times</name><op:operator pos:line="1083" pos:column="171">.</op:operator><name pos:line="1083" pos:column="172">AtLeastOnce</name></name><argument_list pos:line="1083" pos:column="183">()</argument_list></call> <op:operator pos:line="1083" pos:column="186">:</op:operator> <call><name><name pos:line="1083" pos:column="188">Times</name><op:operator pos:line="1083" pos:column="193">.</op:operator><name pos:line="1083" pos:column="194">Never</name></name><argument_list pos:line="1083" pos:column="199">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1084" pos:column="13">secondRuntimePolicyOnBeginRequestMock</name><op:operator pos:line="1084" pos:column="50">.</op:operator><name pos:line="1084" pos:column="51">Verify</name></name><argument_list pos:line="1084" pos:column="57">(<argument><expr><lambda><name pos:line="1084" pos:column="58">v</name> <op:operator pos:line="1084" pos:column="60">=&gt;</op:operator> <call><name><name pos:line="1084" pos:column="63">v</name><op:operator pos:line="1084" pos:column="64">.</op:operator><name pos:line="1084" pos:column="65">Execute</name></name><argument_list pos:line="1084" pos:column="72">(<argument><expr><call><name><name pos:line="1084" pos:column="73">It</name><op:operator pos:line="1084" pos:column="75">.</op:operator><name><name pos:line="1084" pos:column="76">IsAny</name><argument_list pos:line="1084" pos:column="81">&lt;<argument><name pos:line="1084" pos:column="82">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1084" pos:column="104">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><name><name pos:line="1084" pos:column="109">testCase</name><op:operator pos:line="1084" pos:column="117">.</op:operator><name pos:line="1084" pos:column="118">SecondRuntimePolicyOnBeginRequestMustBeExecuted</name> <type:modifier pos:line="1084" pos:column="166">?</type:modifier></name> <call><name><name pos:line="1084" pos:column="168">Times</name><op:operator pos:line="1084" pos:column="173">.</op:operator><name pos:line="1084" pos:column="174">AtLeastOnce</name></name><argument_list pos:line="1084" pos:column="185">()</argument_list></call> <op:operator pos:line="1084" pos:column="188">:</op:operator> <call><name><name pos:line="1084" pos:column="190">Times</name><op:operator pos:line="1084" pos:column="195">.</op:operator><name pos:line="1084" pos:column="196">Never</name></name><argument_list pos:line="1084" pos:column="201">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1085" pos:column="13">firstRuntimePolicyOnExecuteResourceMock</name><op:operator pos:line="1085" pos:column="52">.</op:operator><name pos:line="1085" pos:column="53">Verify</name></name><argument_list pos:line="1085" pos:column="59">(<argument><expr><lambda><name pos:line="1085" pos:column="60">v</name> <op:operator pos:line="1085" pos:column="62">=&gt;</op:operator> <call><name><name pos:line="1085" pos:column="65">v</name><op:operator pos:line="1085" pos:column="66">.</op:operator><name pos:line="1085" pos:column="67">Execute</name></name><argument_list pos:line="1085" pos:column="74">(<argument><expr><call><name><name pos:line="1085" pos:column="75">It</name><op:operator pos:line="1085" pos:column="77">.</op:operator><name><name pos:line="1085" pos:column="78">IsAny</name><argument_list pos:line="1085" pos:column="83">&lt;<argument><name pos:line="1085" pos:column="84">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1085" pos:column="106">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><name><name pos:line="1085" pos:column="111">testCase</name><op:operator pos:line="1085" pos:column="119">.</op:operator><name pos:line="1085" pos:column="120">FirstRuntimePolicyOnExecuteResourceMustBeExecuted</name> <type:modifier pos:line="1085" pos:column="170">?</type:modifier></name> <call><name><name pos:line="1085" pos:column="172">Times</name><op:operator pos:line="1085" pos:column="177">.</op:operator><name pos:line="1085" pos:column="178">AtLeastOnce</name></name><argument_list pos:line="1085" pos:column="189">()</argument_list></call> <op:operator pos:line="1085" pos:column="192">:</op:operator> <call><name><name pos:line="1085" pos:column="194">Times</name><op:operator pos:line="1085" pos:column="199">.</op:operator><name pos:line="1085" pos:column="200">Never</name></name><argument_list pos:line="1085" pos:column="205">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1086" pos:column="13">secondRuntimePolicyOnExecuteResourceMock</name><op:operator pos:line="1086" pos:column="53">.</op:operator><name pos:line="1086" pos:column="54">Verify</name></name><argument_list pos:line="1086" pos:column="60">(<argument><expr><lambda><name pos:line="1086" pos:column="61">v</name> <op:operator pos:line="1086" pos:column="63">=&gt;</op:operator> <call><name><name pos:line="1086" pos:column="66">v</name><op:operator pos:line="1086" pos:column="67">.</op:operator><name pos:line="1086" pos:column="68">Execute</name></name><argument_list pos:line="1086" pos:column="75">(<argument><expr><call><name><name pos:line="1086" pos:column="76">It</name><op:operator pos:line="1086" pos:column="78">.</op:operator><name><name pos:line="1086" pos:column="79">IsAny</name><argument_list pos:line="1086" pos:column="84">&lt;<argument><name pos:line="1086" pos:column="85">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1086" pos:column="107">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><name><name pos:line="1086" pos:column="112">testCase</name><op:operator pos:line="1086" pos:column="120">.</op:operator><name pos:line="1086" pos:column="121">SecondRuntimePolicyOnExecuteResourceMustBeExecuted</name> <type:modifier pos:line="1086" pos:column="172">?</type:modifier></name> <call><name><name pos:line="1086" pos:column="174">Times</name><op:operator pos:line="1086" pos:column="179">.</op:operator><name pos:line="1086" pos:column="180">AtLeastOnce</name></name><argument_list pos:line="1086" pos:column="191">()</argument_list></call> <op:operator pos:line="1086" pos:column="194">:</op:operator> <call><name><name pos:line="1086" pos:column="196">Times</name><op:operator pos:line="1086" pos:column="201">.</op:operator><name pos:line="1086" pos:column="202">Never</name></name><argument_list pos:line="1086" pos:column="207">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="1088" pos:column="13">Assert</name><op:operator pos:line="1088" pos:column="19">.</op:operator><name pos:line="1088" pos:column="20">Equal</name></name><argument_list pos:line="1088" pos:column="25">(<argument><expr><name><name pos:line="1088" pos:column="26">testCase</name><op:operator pos:line="1088" pos:column="34">.</op:operator><name pos:line="1088" pos:column="35">ResultingRuntimePolicyForResource</name></name></expr></argument>, <argument><expr><call><name><name pos:line="1088" pos:column="70">Runtime</name><op:operator pos:line="1088" pos:column="77">.</op:operator><name pos:line="1088" pos:column="78">Configuration</name><op:operator pos:line="1088" pos:column="91">.</op:operator><name pos:line="1088" pos:column="92">FrameworkProvider</name><op:operator pos:line="1088" pos:column="109">.</op:operator><name pos:line="1088" pos:column="110">HttpRequestStore</name><op:operator pos:line="1088" pos:column="126">.</op:operator><name pos:line="1088" pos:column="127">Get</name></name><argument_list pos:line="1088" pos:column="130">(<argument><expr><name><name pos:line="1088" pos:column="131">Constants</name><op:operator pos:line="1088" pos:column="140">.</op:operator><name pos:line="1088" pos:column="141">RuntimePolicyKey</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <class><specifier pos:line="1091" pos:column="9">private</specifier> class <name pos:line="1091" pos:column="23">MyResourceWithDependencies</name> <super pos:line="1091" pos:column="50">: <name pos:line="1091" pos:column="52">IResource</name>, <name pos:line="1091" pos:column="63">IDependOnResources</name></super>
        <block pos:line="1092" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="1093" pos:column="13">private</specifier> <name pos:line="1093" pos:column="21">string</name></type> <name pos:line="1093" pos:column="28">DependsOnResourceName</name> <block pos:line="1093" pos:column="50">{ <function_decl><name pos:line="1093" pos:column="52">get</name>;</function_decl> <function_decl><name pos:line="1093" pos:column="57">set</name>;</function_decl> }</block></decl></decl_stmt>

            <constructor><specifier pos:line="1095" pos:column="13">public</specifier> <name pos:line="1095" pos:column="20">MyResourceWithDependencies</name><parameter_list pos:line="1095" pos:column="46">(<param><decl><type><name pos:line="1095" pos:column="47">string</name></type> <name pos:line="1095" pos:column="54">dependsOnResourceName</name></decl></param>)</parameter_list>
            <block pos:line="1096" pos:column="13">{
                <expr_stmt><expr><name pos:line="1097" pos:column="17">DependsOnResourceName</name> <op:operator pos:line="1097" pos:column="39">=</op:operator> <name pos:line="1097" pos:column="41">dependsOnResourceName</name></expr>;</expr_stmt>
            }</block></constructor>

            <function><type><specifier pos:line="1100" pos:column="13">public</specifier> <name pos:line="1100" pos:column="20">bool</name></type> <name pos:line="1100" pos:column="25">DependsOn</name><parameter_list pos:line="1100" pos:column="34">(<param><decl><type><name pos:line="1100" pos:column="35">string</name></type> <name pos:line="1100" pos:column="42">resourceName</name></decl></param>)</parameter_list>
            <block pos:line="1101" pos:column="13">{
                <return pos:line="1102" pos:column="17">return <expr><name pos:line="1102" pos:column="24">resourceName</name> <op:operator pos:line="1102" pos:column="37">==</op:operator> <name pos:line="1102" pos:column="40">DependsOnResourceName</name></expr>;</return>
            }</block></function>

            <decl_stmt><decl><type><specifier pos:line="1105" pos:column="13">public</specifier> <name pos:line="1105" pos:column="20">string</name></type> <name pos:line="1105" pos:column="27">Name</name>
            <block pos:line="1106" pos:column="13">{
                <function><name pos:line="1107" pos:column="17">get</name> <block pos:line="1107" pos:column="21">{ <return pos:line="1107" pos:column="23">return <expr><lit:literal type="string" pos:line="1107" pos:column="30">"MyResourceWithDependencies"</lit:literal></expr>;</return> }</block></function>
            }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="1110" pos:column="13">public</specifier> <name><name pos:line="1110" pos:column="20">IEnumerable</name><argument_list pos:line="1110" pos:column="31">&lt;<argument><name pos:line="1110" pos:column="32">ResourceParameterMetadata</name></argument>&gt;</argument_list></name></type> <name pos:line="1110" pos:column="59">Parameters</name>
            <block pos:line="1111" pos:column="13">{
                <function><name pos:line="1112" pos:column="17">get</name> <block pos:line="1112" pos:column="21">{ <return pos:line="1112" pos:column="23">return <expr><op:operator pos:line="1112" pos:column="30">new</op:operator> <name><name pos:line="1112" pos:column="34">ResourceParameterMetadata</name><index pos:line="1112" pos:column="59">[<expr><lit:literal type="number" pos:line="1112" pos:column="60">0</lit:literal></expr>]</index></name></expr>;</return> }</block></function>
            }</block></decl></decl_stmt>

            <function><type><specifier pos:line="1115" pos:column="13">public</specifier> <name pos:line="1115" pos:column="20">IResourceResult</name></type> <name pos:line="1115" pos:column="36">Execute</name><parameter_list pos:line="1115" pos:column="43">(<param><decl><type><name pos:line="1115" pos:column="44">IResourceContext</name></type> <name pos:line="1115" pos:column="61">context</name></decl></param>)</parameter_list>
            <block pos:line="1116" pos:column="13">{
                <return pos:line="1117" pos:column="17">return <expr><name pos:line="1117" pos:column="24">null</name></expr>;</return> <comment type="line" pos:line="1117" pos:column="30">// should not be executed during tests</comment>
            }</block></function>
        }</block></class>

        <function><type><attribute pos:line="1121" pos:column="9">[<expr><name pos:line="1121" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="1122" pos:column="9">public</specifier> <name pos:line="1122" pos:column="16">void</name></type> <name pos:line="1122" pos:column="21">ExecuteResourceIfItIsADependencyOfTheDefaultResource</name><parameter_list pos:line="1122" pos:column="73">()</parameter_list>
        <block pos:line="1123" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="1124" pos:column="13">ExecuteResourceDependencyTest</name><argument_list pos:line="1124" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="1124" pos:column="43">"dependentResourceName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1124" pos:column="68">"dependentResourceName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1124" pos:column="93">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="1127" pos:column="9">[<expr><name pos:line="1127" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="1128" pos:column="9">public</specifier> <name pos:line="1128" pos:column="16">void</name></type> <name pos:line="1128" pos:column="21">SkipExecutionOfResourceIfItIsNotDependencyOfTheDefaultResource</name><parameter_list pos:line="1128" pos:column="83">()</parameter_list>
        <block pos:line="1129" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="1130" pos:column="13">ExecuteResourceDependencyTest</name><argument_list pos:line="1130" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="1130" pos:column="43">"someOtherDependentResourceName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1130" pos:column="77">"dependentResourceName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1130" pos:column="102">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="1133" pos:column="9">private</specifier> <name pos:line="1133" pos:column="17">void</name></type> <name pos:line="1133" pos:column="22">ExecuteResourceDependencyTest</name><parameter_list pos:line="1133" pos:column="51">(<param><decl><type><name pos:line="1133" pos:column="52">string</name></type> <name pos:line="1133" pos:column="59">resourceToExecute</name></decl></param>, <param><decl><type><name pos:line="1133" pos:column="78">string</name></type> <name pos:line="1133" pos:column="85">dependentResourceName</name></decl></param>, <param><decl><type><name pos:line="1133" pos:column="108">bool</name></type> <name pos:line="1133" pos:column="113">shouldHaveExecuted</name></decl></param>)</parameter_list>
        <block pos:line="1134" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="1135" pos:column="13">Runtime</name><op:operator pos:line="1135" pos:column="20">.</op:operator><name pos:line="1135" pos:column="21">Configuration</name><op:operator pos:line="1135" pos:column="34">.</op:operator><name pos:line="1135" pos:column="35">DefaultRuntimePolicy</name></name> <op:operator pos:line="1135" pos:column="56">=</op:operator> <name><name pos:line="1135" pos:column="58">RuntimePolicy</name><op:operator pos:line="1135" pos:column="71">.</op:operator><name pos:line="1135" pos:column="72">On</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1136" pos:column="13">Runtime</name><op:operator pos:line="1136" pos:column="20">.</op:operator><name pos:line="1136" pos:column="21">Configuration</name><op:operator pos:line="1136" pos:column="34">.</op:operator><name pos:line="1136" pos:column="35">FrameworkProvider</name><op:operator pos:line="1136" pos:column="52">.</op:operator><name pos:line="1136" pos:column="53">HttpRequestStore</name><op:operator pos:line="1136" pos:column="69">.</op:operator><name pos:line="1136" pos:column="70">Set</name></name><argument_list pos:line="1136" pos:column="73">(<argument><expr><name><name pos:line="1136" pos:column="74">Constants</name><op:operator pos:line="1136" pos:column="83">.</op:operator><name pos:line="1136" pos:column="84">RuntimePolicyKey</name></name></expr></argument>, <argument><expr><name><name pos:line="1136" pos:column="102">RuntimePolicy</name><op:operator pos:line="1136" pos:column="115">.</op:operator><name pos:line="1136" pos:column="116">Off</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="1138" pos:column="13">var</name></type> <name pos:line="1138" pos:column="17">defaultResource</name> <init pos:line="1138" pos:column="33">= <expr><op:operator pos:line="1138" pos:column="35">new</op:operator> <call><name pos:line="1138" pos:column="39">MyResourceWithDependencies</name><argument_list pos:line="1138" pos:column="65">(<argument><expr><name pos:line="1138" pos:column="66">dependentResourceName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="1139" pos:column="13">Runtime</name><op:operator pos:line="1139" pos:column="20">.</op:operator><name pos:line="1139" pos:column="21">Configuration</name><op:operator pos:line="1139" pos:column="34">.</op:operator><name pos:line="1139" pos:column="35">DefaultResource</name></name> <op:operator pos:line="1139" pos:column="51">=</op:operator> <name pos:line="1139" pos:column="53">defaultResource</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1140" pos:column="13">Runtime</name><op:operator pos:line="1140" pos:column="20">.</op:operator><name pos:line="1140" pos:column="21">Configuration</name><op:operator pos:line="1140" pos:column="34">.</op:operator><name pos:line="1140" pos:column="35">Resources</name><op:operator pos:line="1140" pos:column="44">.</op:operator><name pos:line="1140" pos:column="45">Add</name></name><argument_list pos:line="1140" pos:column="48">(<argument><expr><name pos:line="1140" pos:column="49">defaultResource</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="1142" pos:column="13">var</name></type> <name pos:line="1142" pos:column="17">dependentResourceMock</name> <init pos:line="1142" pos:column="39">= <expr><op:operator pos:line="1142" pos:column="41">new</op:operator> <call><name><name pos:line="1142" pos:column="45">Mock</name><argument_list pos:line="1142" pos:column="49">&lt;<argument><name pos:line="1142" pos:column="50">IResource</name></argument>&gt;</argument_list></name><argument_list pos:line="1142" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1143" pos:column="13">dependentResourceMock</name><op:operator pos:line="1143" pos:column="34">.</op:operator><name pos:line="1143" pos:column="35">Setup</name></name><argument_list pos:line="1143" pos:column="40">(<argument><expr><lambda><name pos:line="1143" pos:column="41">r</name> <op:operator pos:line="1143" pos:column="43">=&gt;</op:operator> <name><name pos:line="1143" pos:column="46">r</name><op:operator pos:line="1143" pos:column="47">.</op:operator><name pos:line="1143" pos:column="48">Name</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="1143" pos:column="53">.</op:operator><call><name pos:line="1143" pos:column="54">Returns</name><argument_list pos:line="1143" pos:column="61">(<argument><expr><name pos:line="1143" pos:column="62">dependentResourceName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="1144" pos:column="13">var</name></type> <name pos:line="1144" pos:column="17">dependentResourceResultMock</name> <init pos:line="1144" pos:column="45">= <expr><op:operator pos:line="1144" pos:column="47">new</op:operator> <call><name><name pos:line="1144" pos:column="51">Mock</name><argument_list pos:line="1144" pos:column="55">&lt;<argument><name pos:line="1144" pos:column="56">IResourceResult</name></argument>&gt;</argument_list></name><argument_list pos:line="1144" pos:column="72">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1145" pos:column="13">dependentResourceMock</name><op:operator pos:line="1145" pos:column="34">.</op:operator><name pos:line="1145" pos:column="35">Setup</name></name><argument_list pos:line="1145" pos:column="40">(<argument><expr><lambda><name pos:line="1145" pos:column="41">r</name> <op:operator pos:line="1145" pos:column="43">=&gt;</op:operator> <call><name><name pos:line="1145" pos:column="46">r</name><op:operator pos:line="1145" pos:column="47">.</op:operator><name pos:line="1145" pos:column="48">Execute</name></name><argument_list pos:line="1145" pos:column="55">(<argument><expr><call><name><name pos:line="1145" pos:column="56">It</name><op:operator pos:line="1145" pos:column="58">.</op:operator><name><name pos:line="1145" pos:column="59">IsAny</name><argument_list pos:line="1145" pos:column="64">&lt;<argument><name pos:line="1145" pos:column="65">IResourceContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1145" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="1145" pos:column="86">.</op:operator><call><name pos:line="1145" pos:column="87">Returns</name><argument_list pos:line="1145" pos:column="94">(<argument><expr><name><name pos:line="1145" pos:column="95">dependentResourceResultMock</name><op:operator pos:line="1145" pos:column="122">.</op:operator><name pos:line="1145" pos:column="123">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1146" pos:column="13">Runtime</name><op:operator pos:line="1146" pos:column="20">.</op:operator><name pos:line="1146" pos:column="21">Configuration</name><op:operator pos:line="1146" pos:column="34">.</op:operator><name pos:line="1146" pos:column="35">Resources</name><op:operator pos:line="1146" pos:column="44">.</op:operator><name pos:line="1146" pos:column="45">Add</name></name><argument_list pos:line="1146" pos:column="48">(<argument><expr><name><name pos:line="1146" pos:column="49">dependentResourceMock</name><op:operator pos:line="1146" pos:column="70">.</op:operator><name pos:line="1146" pos:column="71">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="1148" pos:column="13">Runtime</name><op:operator pos:line="1148" pos:column="20">.</op:operator><name pos:line="1148" pos:column="21">ExecuteResource</name></name><argument_list pos:line="1148" pos:column="36">(<argument><expr><name pos:line="1148" pos:column="37">resourceToExecute</name></expr></argument>, <argument><expr><op:operator pos:line="1148" pos:column="56">new</op:operator> <call><name pos:line="1148" pos:column="60">ResourceParameters</name><argument_list pos:line="1148" pos:column="78">(<argument><expr><op:operator pos:line="1148" pos:column="79">new</op:operator> <call><name><name pos:line="1148" pos:column="83">Dictionary</name><argument_list pos:line="1148" pos:column="93">&lt;<argument><name pos:line="1148" pos:column="94">string</name></argument>, <argument><name pos:line="1148" pos:column="102">string</name></argument>&gt;</argument_list></name><argument_list pos:line="1148" pos:column="109">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1149" pos:column="13">dependentResourceMock</name><op:operator pos:line="1149" pos:column="34">.</op:operator><name pos:line="1149" pos:column="35">Verify</name></name><argument_list pos:line="1149" pos:column="41">(<argument><expr><lambda><name pos:line="1149" pos:column="42">r</name> <op:operator pos:line="1149" pos:column="44">=&gt;</op:operator> <call><name><name pos:line="1149" pos:column="47">r</name><op:operator pos:line="1149" pos:column="48">.</op:operator><name pos:line="1149" pos:column="49">Execute</name></name><argument_list pos:line="1149" pos:column="56">(<argument><expr><call><name><name pos:line="1149" pos:column="57">It</name><op:operator pos:line="1149" pos:column="59">.</op:operator><name><name pos:line="1149" pos:column="60">IsAny</name><argument_list pos:line="1149" pos:column="65">&lt;<argument><name pos:line="1149" pos:column="66">IResourceContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1149" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><name pos:line="1149" pos:column="88">shouldHaveExecuted</name> <op:operator pos:line="1149" pos:column="107">?</op:operator> <call><name><name pos:line="1149" pos:column="109">Times</name><op:operator pos:line="1149" pos:column="114">.</op:operator><name pos:line="1149" pos:column="115">Once</name></name><argument_list pos:line="1149" pos:column="119">()</argument_list></call> <op:operator pos:line="1149" pos:column="122">:</op:operator> <call><name><name pos:line="1149" pos:column="124">Times</name><op:operator pos:line="1149" pos:column="129">.</op:operator><name pos:line="1149" pos:column="130">Never</name></name><argument_list pos:line="1149" pos:column="135">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1150" pos:column="13">dependentResourceResultMock</name><op:operator pos:line="1150" pos:column="40">.</op:operator><name pos:line="1150" pos:column="41">Verify</name></name><argument_list pos:line="1150" pos:column="47">(<argument><expr><lambda><name pos:line="1150" pos:column="48">r</name> <op:operator pos:line="1150" pos:column="50">=&gt;</op:operator> <call><name><name pos:line="1150" pos:column="53">r</name><op:operator pos:line="1150" pos:column="54">.</op:operator><name pos:line="1150" pos:column="55">Execute</name></name><argument_list pos:line="1150" pos:column="62">(<argument><expr><call><name><name pos:line="1150" pos:column="63">It</name><op:operator pos:line="1150" pos:column="65">.</op:operator><name><name pos:line="1150" pos:column="66">IsAny</name><argument_list pos:line="1150" pos:column="71">&lt;<argument><name pos:line="1150" pos:column="72">IResourceResultContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="1150" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><name pos:line="1150" pos:column="100">shouldHaveExecuted</name> <op:operator pos:line="1150" pos:column="119">?</op:operator> <call><name><name pos:line="1150" pos:column="121">Times</name><op:operator pos:line="1150" pos:column="126">.</op:operator><name pos:line="1150" pos:column="127">Once</name></name><argument_list pos:line="1150" pos:column="131">()</argument_list></call> <op:operator pos:line="1150" pos:column="134">:</op:operator> <call><name><name pos:line="1150" pos:column="136">Times</name><op:operator pos:line="1150" pos:column="141">.</op:operator><name pos:line="1150" pos:column="142">Never</name></name><argument_list pos:line="1150" pos:column="147">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="1152" pos:column="13">Assert</name><op:operator pos:line="1152" pos:column="19">.</op:operator><name pos:line="1152" pos:column="20">Equal</name></name><argument_list pos:line="1152" pos:column="25">(<argument><expr><name><name pos:line="1152" pos:column="26">RuntimePolicy</name><op:operator pos:line="1152" pos:column="39">.</op:operator><name pos:line="1152" pos:column="40">Off</name></name></expr></argument>, <argument><expr><call><name><name pos:line="1152" pos:column="45">Runtime</name><op:operator pos:line="1152" pos:column="52">.</op:operator><name pos:line="1152" pos:column="53">Configuration</name><op:operator pos:line="1152" pos:column="66">.</op:operator><name pos:line="1152" pos:column="67">FrameworkProvider</name><op:operator pos:line="1152" pos:column="84">.</op:operator><name pos:line="1152" pos:column="85">HttpRequestStore</name><op:operator pos:line="1152" pos:column="101">.</op:operator><name pos:line="1152" pos:column="102">Get</name></name><argument_list pos:line="1152" pos:column="105">(<argument><expr><name><name pos:line="1152" pos:column="106">Constants</name><op:operator pos:line="1152" pos:column="115">.</op:operator><name pos:line="1152" pos:column="116">RuntimePolicyKey</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="block" pos:line="1155" pos:column="9">/* End of tests related to they way runtime policies are evaluated in case resources are being executed */</comment>
    }</block></class>
}</block></namespace></unit>
