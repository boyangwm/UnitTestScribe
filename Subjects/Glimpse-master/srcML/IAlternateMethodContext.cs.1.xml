<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Extensibility\IAlternateMethodContext.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Reflection</name></name>;</using>

<namespace pos:line="4" pos:column="1">namespace <name><name pos:line="4" pos:column="11">Glimpse</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">Core</name><op:operator pos:line="4" pos:column="23">.</op:operator><name pos:line="4" pos:column="24">Extensibility</name></name>
<block pos:line="5" pos:column="1">{
    <comment type="line" pos:line="6" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="7" pos:column="5">/// Definition for the context used by &lt;see cref="IAlternateMethod"/&gt;</comment>
    <comment type="line" pos:line="8" pos:column="5">/// &lt;/summary&gt;</comment>
    <class type="interface"><specifier pos:line="9" pos:column="5">public</specifier> interface <name pos:line="9" pos:column="22">IAlternateMethodContext</name> <super pos:line="9" pos:column="46">: <name pos:line="9" pos:column="48">IContext</name></super>
    <block pos:line="10" pos:column="5">{
        <comment type="line" pos:line="11" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="12" pos:column="9">/// Gets the proxy object on which the alternate implementation is invoked.</comment>
        <comment type="line" pos:line="13" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="14" pos:column="9">/// &lt;value&gt;The proxy.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">object</name></type> <name pos:line="15" pos:column="16">Proxy</name> <block pos:line="15" pos:column="22">{ <function_decl><name pos:line="15" pos:column="24">get</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="17" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="18" pos:column="9">/// Gets the object on which the invocation is performed. This is different from proxy object </comment>
        <comment type="line" pos:line="19" pos:column="9">/// because most of the time this will be the proxy target object.</comment>
        <comment type="line" pos:line="20" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="21" pos:column="9">/// &lt;value&gt;The invocation target.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">object</name></type> <name pos:line="22" pos:column="16">InvocationTarget</name> <block pos:line="22" pos:column="33">{ <function_decl><name pos:line="22" pos:column="35">get</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="24" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="25" pos:column="9">/// Gets the type of the target object for the intercepted method.</comment>
        <comment type="line" pos:line="26" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="27" pos:column="9">/// &lt;value&gt;The type of the target.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">Type</name></type> <name pos:line="28" pos:column="14">TargetType</name> <block pos:line="28" pos:column="25">{ <function_decl><name pos:line="28" pos:column="27">get</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="30" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="31" pos:column="9">/// Gets the arguments that &lt;see cref="IAlternateMethod"/&gt; has been invoked with.</comment>
        <comment type="line" pos:line="32" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="33" pos:column="9">/// &lt;value&gt;The arguments.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">object</name><index pos:line="34" pos:column="15">[]</index></type> <name pos:line="34" pos:column="18">Arguments</name> <block pos:line="34" pos:column="28">{ <function_decl><name pos:line="34" pos:column="30">get</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="36" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="37" pos:column="9">/// Gets the generic arguments.</comment>
        <comment type="line" pos:line="38" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="39" pos:column="9">/// &lt;value&gt;The generic arguments.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><name pos:line="40" pos:column="9">Type</name><index pos:line="40" pos:column="13">[]</index></type> <name pos:line="40" pos:column="16">GenericArguments</name> <block pos:line="40" pos:column="33">{ <function_decl><name pos:line="40" pos:column="35">get</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="42" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="43" pos:column="9">/// Gets the method representing the method being invoked on the proxy.</comment>
        <comment type="line" pos:line="44" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="45" pos:column="9">/// &lt;value&gt;The method.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><name pos:line="46" pos:column="9">MethodInfo</name></type> <name pos:line="46" pos:column="20">Method</name> <block pos:line="46" pos:column="27">{ <function_decl><name pos:line="46" pos:column="29">get</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="48" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="49" pos:column="9">/// Gets the method info on the target class.</comment>
        <comment type="line" pos:line="50" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="51" pos:column="9">/// &lt;value&gt;The method invocation target.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><name pos:line="52" pos:column="9">MethodInfo</name></type> <name pos:line="52" pos:column="20">MethodInvocationTarget</name> <block pos:line="52" pos:column="43">{ <function_decl><name pos:line="52" pos:column="45">get</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="54" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="55" pos:column="9">/// Gets or sets the return value of the method.</comment>
        <comment type="line" pos:line="56" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="57" pos:column="9">/// &lt;value&gt;The return value.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><name pos:line="58" pos:column="9">object</name></type> <name pos:line="58" pos:column="16">ReturnValue</name> <block pos:line="58" pos:column="28">{ <function_decl><name pos:line="58" pos:column="30">get</name>;</function_decl> <function_decl><name pos:line="58" pos:column="35">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="60" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="61" pos:column="9">/// Gets the message broker.</comment>
        <comment type="line" pos:line="62" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="63" pos:column="9">/// &lt;value&gt;The message broker.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><name pos:line="64" pos:column="9">IMessageBroker</name></type> <name pos:line="64" pos:column="24">MessageBroker</name> <block pos:line="64" pos:column="38">{ <function_decl><name pos:line="64" pos:column="40">get</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="66" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="67" pos:column="9">/// Gets the proxy factory.</comment>
        <comment type="line" pos:line="68" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="69" pos:column="9">/// &lt;value&gt;The proxy factory.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><name pos:line="70" pos:column="9">IProxyFactory</name></type> <name pos:line="70" pos:column="23">ProxyFactory</name> <block pos:line="70" pos:column="36">{ <function_decl><name pos:line="70" pos:column="38">get</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="72" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="73" pos:column="9">/// Gets the timer strategy.</comment>
        <comment type="line" pos:line="74" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="75" pos:column="9">/// &lt;value&gt;The timer strategy.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><name><name pos:line="76" pos:column="9">Func</name><argument_list pos:line="76" pos:column="13">&lt;<argument><name pos:line="76" pos:column="14">IExecutionTimer</name></argument>&gt;</argument_list></name></type> <name pos:line="76" pos:column="31">TimerStrategy</name> <block pos:line="76" pos:column="45">{ <function_decl><name pos:line="76" pos:column="47">get</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="78" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="79" pos:column="9">/// Gets the runtime policy strategy.</comment>
        <comment type="line" pos:line="80" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="81" pos:column="9">/// &lt;value&gt;The runtime policy strategy.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><name><name pos:line="82" pos:column="9">Func</name><argument_list pos:line="82" pos:column="13">&lt;<argument><name pos:line="82" pos:column="14">RuntimePolicy</name></argument>&gt;</argument_list></name></type> <name pos:line="82" pos:column="29">RuntimePolicyStrategy</name> <block pos:line="82" pos:column="51">{ <function_decl><name pos:line="82" pos:column="53">get</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="84" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="85" pos:column="9">/// Overrides the value of an argument at the given index with the new value provided.</comment>
        <comment type="line" pos:line="86" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="87" pos:column="9">/// &lt;param name="index"&gt;The index.&lt;/param&gt;</comment>
        <comment type="line" pos:line="88" pos:column="9">/// &lt;param name="value"&gt;The value.&lt;/param&gt;</comment>
        <function_decl><type><name pos:line="89" pos:column="9">void</name></type> <name pos:line="89" pos:column="14">SetArgumentValue</name><parameter_list pos:line="89" pos:column="30">(<param><decl><type><name pos:line="89" pos:column="31">int</name></type> <name pos:line="89" pos:column="35">index</name></decl></param>, <param><decl><type><name pos:line="89" pos:column="42">object</name></type> <name pos:line="89" pos:column="49">value</name></decl></param>)</parameter_list>;</function_decl>

        <comment type="line" pos:line="91" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="92" pos:column="9">/// Gets the value of the argument at the specified index.</comment>
        <comment type="line" pos:line="93" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="94" pos:column="9">/// &lt;param name="index"&gt;The index.&lt;/param&gt;</comment>
        <comment type="line" pos:line="95" pos:column="9">/// &lt;returns&gt;Value of the argument.&lt;/returns&gt;</comment>
        <function_decl><type><name pos:line="96" pos:column="9">object</name></type> <name pos:line="96" pos:column="16">GetArgumentValue</name><parameter_list pos:line="96" pos:column="32">(<param><decl><type><name pos:line="96" pos:column="33">int</name></type> <name pos:line="96" pos:column="37">index</name></decl></param>)</parameter_list>;</function_decl>

        <comment type="line" pos:line="98" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="99" pos:column="9">/// Gets the concrete method.</comment>
        <comment type="line" pos:line="100" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="101" pos:column="9">/// &lt;returns&gt;The method info of the method that is the proxy that is the alternative implementation.&lt;/returns&gt;</comment>
        <function_decl><type><name pos:line="102" pos:column="9">MethodInfo</name></type> <name pos:line="102" pos:column="20">GetConcreteMethod</name><parameter_list pos:line="102" pos:column="37">()</parameter_list>;</function_decl>

        <comment type="line" pos:line="104" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="105" pos:column="9">/// Gets the concrete method invocation target.</comment>
        <comment type="line" pos:line="106" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="107" pos:column="9">/// &lt;returns&gt;The method info of the method that is the target of the alternative implementation.&lt;/returns&gt;</comment>
        <function_decl><type><name pos:line="108" pos:column="9">MethodInfo</name></type> <name pos:line="108" pos:column="20">GetConcreteMethodInvocationTarget</name><parameter_list pos:line="108" pos:column="53">()</parameter_list>;</function_decl>

        <comment type="line" pos:line="110" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="111" pos:column="9">/// Proceeds the call to the next implementation in line, and ultimately to the target method.</comment>
        <comment type="line" pos:line="112" pos:column="9">/// &lt;/summary&gt;</comment>
        <function_decl><type><name pos:line="113" pos:column="9">void</name></type> <name pos:line="113" pos:column="14">Proceed</name><parameter_list pos:line="113" pos:column="21">()</parameter_list>;</function_decl>
    }</block></class>
}</block></namespace></unit>
