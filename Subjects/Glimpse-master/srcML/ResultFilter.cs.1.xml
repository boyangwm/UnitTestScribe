<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc\AlternateType\ResultFilter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Reflection</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name><op:operator pos:line="4" pos:column="17">.</op:operator><name pos:line="4" pos:column="18">Mvc</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Extensions</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Core</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Message</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Glimpse</name><op:operator pos:line="8" pos:column="14">.</op:operator><name pos:line="8" pos:column="15">Mvc</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">Message</name></name>;</using>

<namespace pos:line="10" pos:column="1">namespace <name><name pos:line="10" pos:column="11">Glimpse</name><op:operator pos:line="10" pos:column="18">.</op:operator><name pos:line="10" pos:column="19">Mvc</name><op:operator pos:line="10" pos:column="22">.</op:operator><name pos:line="10" pos:column="23">AlternateType</name></name>
<block pos:line="11" pos:column="1">{
    <class><specifier pos:line="12" pos:column="5">public</specifier> class <name pos:line="12" pos:column="18">ResultFilter</name> <super pos:line="12" pos:column="31">: <name><name pos:line="12" pos:column="33">AlternateType</name><argument_list pos:line="12" pos:column="46">&lt;<argument><name pos:line="12" pos:column="47">IResultFilter</name></argument>&gt;</argument_list></name></super>
    <block pos:line="13" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">private</specifier> <name><name pos:line="14" pos:column="17">IEnumerable</name><argument_list pos:line="14" pos:column="28">&lt;<argument><name pos:line="14" pos:column="29">IAlternateMethod</name></argument>&gt;</argument_list></name></type> <name pos:line="14" pos:column="47">allMethods</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="16" pos:column="9">public</specifier> <name pos:line="16" pos:column="16">ResultFilter</name><parameter_list pos:line="16" pos:column="28">(<param><decl><type><name pos:line="16" pos:column="29">IProxyFactory</name></type> <name pos:line="16" pos:column="43">proxyFactory</name></decl></param>)</parameter_list> <member_list pos:line="16" pos:column="57">: <call><name pos:line="16" pos:column="59">base</name><argument_list pos:line="16" pos:column="63">(<argument><expr><name pos:line="16" pos:column="64">proxyFactory</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="17" pos:column="9">{
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">public</specifier> <specifier pos:line="20" pos:column="16">override</specifier> <name><name pos:line="20" pos:column="25">IEnumerable</name><argument_list pos:line="20" pos:column="36">&lt;<argument><name pos:line="20" pos:column="37">IAlternateMethod</name></argument>&gt;</argument_list></name></type> <name pos:line="20" pos:column="55">AllMethods</name>
        <block pos:line="21" pos:column="9">{
            <function><name pos:line="22" pos:column="13">get</name> 
            <block pos:line="23" pos:column="13">{ 
                <return pos:line="24" pos:column="17">return <expr><name pos:line="24" pos:column="24">allMethods</name> <op:operator pos:line="24" pos:column="35">??</op:operator> <op:operator pos:line="24" pos:column="38">(</op:operator><name pos:line="24" pos:column="39">allMethods</name> <op:operator pos:line="24" pos:column="50">=</op:operator> <op:operator pos:line="24" pos:column="52">new</op:operator> <name><name pos:line="24" pos:column="56">List</name><argument_list pos:line="24" pos:column="60">&lt;<argument><name pos:line="24" pos:column="61">IAlternateMethod</name></argument>&gt;</argument_list></name>
                <block pos:line="25" pos:column="17">{
                    <expr><op:operator pos:line="26" pos:column="21">new</op:operator> <call><name pos:line="26" pos:column="25">OnResultExecuting</name><argument_list pos:line="26" pos:column="42">()</argument_list></call></expr><op:operator pos:line="26" pos:column="44">,</op:operator>
                    <expr><op:operator pos:line="27" pos:column="21">new</op:operator> <call><name pos:line="27" pos:column="25">OnResultExecuted</name><argument_list pos:line="27" pos:column="41">()</argument_list></call></expr>
                }</block>)</expr>;</return> 
            }</block></function>
        }</block></decl></decl_stmt>

        <class><specifier pos:line="32" pos:column="9">public</specifier> class <name pos:line="32" pos:column="22">OnResultExecuting</name> <super pos:line="32" pos:column="40">: <name pos:line="32" pos:column="42">AlternateMethod</name></super>
        <block pos:line="33" pos:column="9">{
            <constructor><specifier pos:line="34" pos:column="13">public</specifier> <name pos:line="34" pos:column="20">OnResultExecuting</name><parameter_list pos:line="34" pos:column="37">()</parameter_list> <member_list pos:line="34" pos:column="40">: <call><name pos:line="34" pos:column="42">base</name><argument_list pos:line="34" pos:column="46">(<argument><expr><call><name pos:line="34" pos:column="47">typeof</name><argument_list pos:line="34" pos:column="53">(<argument><expr><name pos:line="34" pos:column="54">IResultFilter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="34" pos:column="70">"OnResultExecuting"</lit:literal></expr></argument>)</argument_list></call>
            </member_list><block pos:line="35" pos:column="13">{
            }</block></constructor>

            <function><type><specifier pos:line="38" pos:column="13">public</specifier> <specifier pos:line="38" pos:column="20">override</specifier> <name pos:line="38" pos:column="29">void</name></type> <name pos:line="38" pos:column="34">PostImplementation</name><parameter_list pos:line="38" pos:column="52">(<param><decl><type><name pos:line="38" pos:column="53">IAlternateMethodContext</name></type> <name pos:line="38" pos:column="77">context</name></decl></param>, <param><decl><type><name pos:line="38" pos:column="86">TimerResult</name></type> <name pos:line="38" pos:column="98">timerResult</name></decl></param>)</parameter_list>
            <block pos:line="39" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="40" pos:column="17">var</name></type> <name pos:line="40" pos:column="21">resultContext</name> <init pos:line="40" pos:column="35">= <expr><op:operator pos:line="40" pos:column="37">(</op:operator><name pos:line="40" pos:column="38">ResultExecutingContext</name><op:operator pos:line="40" pos:column="60">)</op:operator><name><name pos:line="40" pos:column="61">context</name><op:operator pos:line="40" pos:column="68">.</op:operator><name pos:line="40" pos:column="69">Arguments</name><index pos:line="40" pos:column="78">[<expr><lit:literal type="number" pos:line="40" pos:column="79">0</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="41" pos:column="17">var</name></type> <name pos:line="41" pos:column="21">message</name> <init pos:line="41" pos:column="29">= <expr><op:operator pos:line="41" pos:column="31">new</op:operator> <call><name pos:line="41" pos:column="35">Message</name><argument_list pos:line="41" pos:column="42">()</argument_list></call>
                    <op:operator pos:line="42" pos:column="21">.</op:operator><call><name pos:line="42" pos:column="22">AsTimedMessage</name><argument_list pos:line="42" pos:column="36">(<argument><expr><name pos:line="42" pos:column="37">timerResult</name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="43" pos:column="21">.</op:operator><call><name pos:line="43" pos:column="22">AsSourceMessage</name><argument_list pos:line="43" pos:column="37">(<argument><expr><call><name><name pos:line="43" pos:column="38">context</name><op:operator pos:line="43" pos:column="45">.</op:operator><name pos:line="43" pos:column="46">InvocationTarget</name><op:operator pos:line="43" pos:column="62">.</op:operator><name pos:line="43" pos:column="63">GetType</name></name><argument_list pos:line="43" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="74">context</name><op:operator pos:line="43" pos:column="81">.</op:operator><name pos:line="43" pos:column="82">MethodInvocationTarget</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="44" pos:column="21">.</op:operator><call><name pos:line="44" pos:column="22">AsActionMessage</name><argument_list pos:line="44" pos:column="37">(<argument><expr><name><name pos:line="44" pos:column="38">resultContext</name><op:operator pos:line="44" pos:column="51">.</op:operator><name pos:line="44" pos:column="52">Controller</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="45" pos:column="21">.</op:operator><call><name pos:line="45" pos:column="22">AsChildActionMessage</name><argument_list pos:line="45" pos:column="42">(<argument><expr><name><name pos:line="45" pos:column="43">resultContext</name><op:operator pos:line="45" pos:column="56">.</op:operator><name pos:line="45" pos:column="57">Controller</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="46" pos:column="21">.</op:operator><call><name pos:line="46" pos:column="22">AsFilterMessage</name><argument_list pos:line="46" pos:column="37">(<argument><expr><name><name pos:line="46" pos:column="38">FilterCategory</name><op:operator pos:line="46" pos:column="52">.</op:operator><name pos:line="46" pos:column="53">Result</name></name></expr></argument>, <argument><expr><call><name><name pos:line="46" pos:column="61">resultContext</name><op:operator pos:line="46" pos:column="74">.</op:operator><name pos:line="46" pos:column="75">GetTypeOrNull</name></name><argument_list pos:line="46" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call>
                    <op:operator pos:line="47" pos:column="21">.</op:operator><call><name pos:line="47" pos:column="22">AsBoundedFilterMessage</name><argument_list pos:line="47" pos:column="44">(<argument><expr><name><name pos:line="47" pos:column="45">FilterBounds</name><op:operator pos:line="47" pos:column="57">.</op:operator><name pos:line="47" pos:column="58">Executing</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="48" pos:column="21">.</op:operator><call><name pos:line="48" pos:column="22">AsCanceledFilterMessage</name><argument_list pos:line="48" pos:column="45">(<argument><expr><name><name pos:line="48" pos:column="46">resultContext</name><op:operator pos:line="48" pos:column="59">.</op:operator><name pos:line="48" pos:column="60">Cancel</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="49" pos:column="21">.</op:operator><call><name pos:line="49" pos:column="22">AsMvcTimelineMessage</name><argument_list pos:line="49" pos:column="42">(<argument><expr><name><name pos:line="49" pos:column="43">MvcTimelineCategory</name><op:operator pos:line="49" pos:column="62">.</op:operator><name pos:line="49" pos:column="63">Filter</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><call><name><name pos:line="51" pos:column="17">context</name><op:operator pos:line="51" pos:column="24">.</op:operator><name pos:line="51" pos:column="25">MessageBroker</name><op:operator pos:line="51" pos:column="38">.</op:operator><name pos:line="51" pos:column="39">Publish</name></name><argument_list pos:line="51" pos:column="46">(<argument><expr><name pos:line="51" pos:column="47">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></function>

            <class><specifier pos:line="54" pos:column="13">public</specifier> class <name pos:line="54" pos:column="26">Message</name> <super pos:line="54" pos:column="34">: <name pos:line="54" pos:column="36">MessageBase</name>, <name pos:line="54" pos:column="49">IBoundedFilterMessage</name>, <name pos:line="54" pos:column="72">ICanceledBasedFilterMessage</name>, <name pos:line="54" pos:column="101">IExecutionMessage</name></super>
            <block pos:line="55" pos:column="13">{
                <decl_stmt><decl><type><specifier pos:line="56" pos:column="17">public</specifier> <name pos:line="56" pos:column="24">string</name></type> <name pos:line="56" pos:column="31">ControllerName</name> <block pos:line="56" pos:column="46">{ <function_decl><name pos:line="56" pos:column="48">get</name>;</function_decl> <function_decl><name pos:line="56" pos:column="53">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="58" pos:column="17">public</specifier> <name pos:line="58" pos:column="24">string</name></type> <name pos:line="58" pos:column="31">ActionName</name> <block pos:line="58" pos:column="42">{ <function_decl><name pos:line="58" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="58" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="60" pos:column="17">public</specifier> <name pos:line="60" pos:column="24">FilterCategory</name></type> <name pos:line="60" pos:column="39">Category</name> <block pos:line="60" pos:column="48">{ <function_decl><name pos:line="60" pos:column="50">get</name>;</function_decl> <function_decl><name pos:line="60" pos:column="55">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="62" pos:column="17">public</specifier> <name pos:line="62" pos:column="24">Type</name></type> <name pos:line="62" pos:column="29">ResultType</name> <block pos:line="62" pos:column="40">{ <function_decl><name pos:line="62" pos:column="42">get</name>;</function_decl> <function_decl><name pos:line="62" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="64" pos:column="17">public</specifier> <name pos:line="64" pos:column="24">FilterBounds</name></type> <name pos:line="64" pos:column="37">Bounds</name> <block pos:line="64" pos:column="44">{ <function_decl><name pos:line="64" pos:column="46">get</name>;</function_decl> <function_decl><name pos:line="64" pos:column="51">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="66" pos:column="17">public</specifier> <name pos:line="66" pos:column="24">bool</name></type> <name pos:line="66" pos:column="29">Canceled</name> <block pos:line="66" pos:column="38">{ <function_decl><name pos:line="66" pos:column="40">get</name>;</function_decl> <function_decl><name pos:line="66" pos:column="45">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="68" pos:column="17">public</specifier> <name pos:line="68" pos:column="24">bool</name></type> <name pos:line="68" pos:column="29">IsChildAction</name> <block pos:line="68" pos:column="43">{ <function_decl><name pos:line="68" pos:column="45">get</name>;</function_decl> <function_decl><name pos:line="68" pos:column="50">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="70" pos:column="17">public</specifier> <name pos:line="70" pos:column="24">Type</name></type> <name pos:line="70" pos:column="29">ExecutedType</name> <block pos:line="70" pos:column="42">{ <function_decl><name pos:line="70" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="70" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="72" pos:column="17">public</specifier> <name pos:line="72" pos:column="24">MethodInfo</name></type> <name pos:line="72" pos:column="35">ExecutedMethod</name> <block pos:line="72" pos:column="50">{ <function_decl><name pos:line="72" pos:column="52">get</name>;</function_decl> <function_decl><name pos:line="72" pos:column="57">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="74" pos:column="17">public</specifier> <name pos:line="74" pos:column="24">TimeSpan</name></type> <name pos:line="74" pos:column="33">Offset</name> <block pos:line="74" pos:column="40">{ <function_decl><name pos:line="74" pos:column="42">get</name>;</function_decl> <function_decl><name pos:line="74" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="76" pos:column="17">public</specifier> <name pos:line="76" pos:column="24">TimeSpan</name></type> <name pos:line="76" pos:column="33">Duration</name> <block pos:line="76" pos:column="42">{ <function_decl><name pos:line="76" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="76" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="78" pos:column="17">public</specifier> <name pos:line="78" pos:column="24">DateTime</name></type> <name pos:line="78" pos:column="33">StartTime</name> <block pos:line="78" pos:column="43">{ <function_decl><name pos:line="78" pos:column="45">get</name>;</function_decl> <function_decl><name pos:line="78" pos:column="50">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="80" pos:column="17">public</specifier> <name pos:line="80" pos:column="24">string</name></type> <name pos:line="80" pos:column="31">EventName</name> <block pos:line="80" pos:column="41">{ <function_decl><name pos:line="80" pos:column="43">get</name>;</function_decl> <function_decl><name pos:line="80" pos:column="48">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="82" pos:column="17">public</specifier> <name pos:line="82" pos:column="24">TimelineCategoryItem</name></type> <name pos:line="82" pos:column="45">EventCategory</name> <block pos:line="82" pos:column="59">{ <function_decl><name pos:line="82" pos:column="61">get</name>;</function_decl> <function_decl><name pos:line="82" pos:column="66">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="84" pos:column="17">public</specifier> <name pos:line="84" pos:column="24">string</name></type> <name pos:line="84" pos:column="31">EventSubText</name> <block pos:line="84" pos:column="44">{ <function_decl><name pos:line="84" pos:column="46">get</name>;</function_decl> <function_decl><name pos:line="84" pos:column="51">set</name>;</function_decl> }</block></decl></decl_stmt>
            }</block></class>
        }</block></class>

        <class><specifier pos:line="88" pos:column="9">public</specifier> class <name pos:line="88" pos:column="22">OnResultExecuted</name> <super pos:line="88" pos:column="39">: <name pos:line="88" pos:column="41">AlternateMethod</name></super>
        <block pos:line="89" pos:column="9">{
            <constructor><specifier pos:line="90" pos:column="13">public</specifier> <name pos:line="90" pos:column="20">OnResultExecuted</name><parameter_list pos:line="90" pos:column="36">()</parameter_list> <member_list pos:line="90" pos:column="39">: <call><name pos:line="90" pos:column="41">base</name><argument_list pos:line="90" pos:column="45">(<argument><expr><call><name pos:line="90" pos:column="46">typeof</name><argument_list pos:line="90" pos:column="52">(<argument><expr><name pos:line="90" pos:column="53">IResultFilter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="90" pos:column="69">"OnResultExecuted"</lit:literal></expr></argument>)</argument_list></call>
            </member_list><block pos:line="91" pos:column="13">{
            }</block></constructor>

            <function><type><specifier pos:line="94" pos:column="13">public</specifier> <specifier pos:line="94" pos:column="20">override</specifier> <name pos:line="94" pos:column="29">void</name></type> <name pos:line="94" pos:column="34">PostImplementation</name><parameter_list pos:line="94" pos:column="52">(<param><decl><type><name pos:line="94" pos:column="53">IAlternateMethodContext</name></type> <name pos:line="94" pos:column="77">context</name></decl></param>, <param><decl><type><name pos:line="94" pos:column="86">TimerResult</name></type> <name pos:line="94" pos:column="98">timerResult</name></decl></param>)</parameter_list>
            <block pos:line="95" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="96" pos:column="17">var</name></type> <name pos:line="96" pos:column="21">resultContext</name> <init pos:line="96" pos:column="35">= <expr><op:operator pos:line="96" pos:column="37">(</op:operator><name pos:line="96" pos:column="38">ResultExecutedContext</name><op:operator pos:line="96" pos:column="59">)</op:operator><name><name pos:line="96" pos:column="60">context</name><op:operator pos:line="96" pos:column="67">.</op:operator><name pos:line="96" pos:column="68">Arguments</name><index pos:line="96" pos:column="77">[<expr><lit:literal type="number" pos:line="96" pos:column="78">0</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="97" pos:column="17">var</name></type> <name pos:line="97" pos:column="21">message</name> <init pos:line="97" pos:column="29">= <expr><op:operator pos:line="97" pos:column="31">new</op:operator> <call><name pos:line="97" pos:column="35">Message</name><argument_list pos:line="97" pos:column="42">()</argument_list></call>
                    <op:operator pos:line="98" pos:column="21">.</op:operator><call><name pos:line="98" pos:column="22">AsTimedMessage</name><argument_list pos:line="98" pos:column="36">(<argument><expr><name pos:line="98" pos:column="37">timerResult</name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="99" pos:column="21">.</op:operator><call><name pos:line="99" pos:column="22">AsSourceMessage</name><argument_list pos:line="99" pos:column="37">(<argument><expr><call><name><name pos:line="99" pos:column="38">context</name><op:operator pos:line="99" pos:column="45">.</op:operator><name pos:line="99" pos:column="46">InvocationTarget</name><op:operator pos:line="99" pos:column="62">.</op:operator><name pos:line="99" pos:column="63">GetType</name></name><argument_list pos:line="99" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="74">context</name><op:operator pos:line="99" pos:column="81">.</op:operator><name pos:line="99" pos:column="82">MethodInvocationTarget</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="100" pos:column="21">.</op:operator><call><name pos:line="100" pos:column="22">AsActionMessage</name><argument_list pos:line="100" pos:column="37">(<argument><expr><name><name pos:line="100" pos:column="38">resultContext</name><op:operator pos:line="100" pos:column="51">.</op:operator><name pos:line="100" pos:column="52">Controller</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="101" pos:column="21">.</op:operator><call><name pos:line="101" pos:column="22">AsChildActionMessage</name><argument_list pos:line="101" pos:column="42">(<argument><expr><name><name pos:line="101" pos:column="43">resultContext</name><op:operator pos:line="101" pos:column="56">.</op:operator><name pos:line="101" pos:column="57">Controller</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="102" pos:column="21">.</op:operator><call><name pos:line="102" pos:column="22">AsFilterMessage</name><argument_list pos:line="102" pos:column="37">(<argument><expr><name><name pos:line="102" pos:column="38">FilterCategory</name><op:operator pos:line="102" pos:column="52">.</op:operator><name pos:line="102" pos:column="53">Result</name></name></expr></argument>, <argument><expr><call><name><name pos:line="102" pos:column="61">resultContext</name><op:operator pos:line="102" pos:column="74">.</op:operator><name pos:line="102" pos:column="75">GetTypeOrNull</name></name><argument_list pos:line="102" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call>
                    <op:operator pos:line="103" pos:column="21">.</op:operator><call><name pos:line="103" pos:column="22">AsBoundedFilterMessage</name><argument_list pos:line="103" pos:column="44">(<argument><expr><name><name pos:line="103" pos:column="45">FilterBounds</name><op:operator pos:line="103" pos:column="57">.</op:operator><name pos:line="103" pos:column="58">Executed</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="104" pos:column="21">.</op:operator><call><name pos:line="104" pos:column="22">AsCanceledFilterMessage</name><argument_list pos:line="104" pos:column="45">(<argument><expr><name><name pos:line="104" pos:column="46">resultContext</name><op:operator pos:line="104" pos:column="59">.</op:operator><name pos:line="104" pos:column="60">Canceled</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="105" pos:column="21">.</op:operator><call><name pos:line="105" pos:column="22">AsExceptionFilterMessage</name><argument_list pos:line="105" pos:column="46">(<argument><expr><call><name><name pos:line="105" pos:column="47">resultContext</name><op:operator pos:line="105" pos:column="60">.</op:operator><name pos:line="105" pos:column="61">Exception</name><op:operator pos:line="105" pos:column="70">.</op:operator><name pos:line="105" pos:column="71">GetTypeOrNull</name></name><argument_list pos:line="105" pos:column="84">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="88">resultContext</name><op:operator pos:line="105" pos:column="101">.</op:operator><name pos:line="105" pos:column="102">ExceptionHandled</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="106" pos:column="21">.</op:operator><call><name pos:line="106" pos:column="22">AsMvcTimelineMessage</name><argument_list pos:line="106" pos:column="42">(<argument><expr><name><name pos:line="106" pos:column="43">MvcTimelineCategory</name><op:operator pos:line="106" pos:column="62">.</op:operator><name pos:line="106" pos:column="63">Filter</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><call><name><name pos:line="108" pos:column="17">context</name><op:operator pos:line="108" pos:column="24">.</op:operator><name pos:line="108" pos:column="25">MessageBroker</name><op:operator pos:line="108" pos:column="38">.</op:operator><name pos:line="108" pos:column="39">Publish</name></name><argument_list pos:line="108" pos:column="46">(<argument><expr><name pos:line="108" pos:column="47">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
            }</block></function>

            <class><specifier pos:line="111" pos:column="13">public</specifier> class <name pos:line="111" pos:column="26">Message</name> <super pos:line="111" pos:column="34">: <name pos:line="111" pos:column="36">MessageBase</name>, <name pos:line="111" pos:column="49">IExceptionFilterMessage</name>, <name pos:line="111" pos:column="74">IBoundedFilterMessage</name>, <name pos:line="111" pos:column="97">ICanceledBasedFilterMessage</name>, <name pos:line="111" pos:column="126">IExecutionMessage</name></super>
            <block pos:line="112" pos:column="13">{
                <decl_stmt><decl><type><specifier pos:line="113" pos:column="17">public</specifier> <name pos:line="113" pos:column="24">string</name></type> <name pos:line="113" pos:column="31">ControllerName</name> <block pos:line="113" pos:column="46">{ <function_decl><name pos:line="113" pos:column="48">get</name>;</function_decl> <function_decl><name pos:line="113" pos:column="53">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="115" pos:column="17">public</specifier> <name pos:line="115" pos:column="24">string</name></type> <name pos:line="115" pos:column="31">ActionName</name> <block pos:line="115" pos:column="42">{ <function_decl><name pos:line="115" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="115" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="117" pos:column="17">public</specifier> <name pos:line="117" pos:column="24">FilterCategory</name></type> <name pos:line="117" pos:column="39">Category</name> <block pos:line="117" pos:column="48">{ <function_decl><name pos:line="117" pos:column="50">get</name>;</function_decl> <function_decl><name pos:line="117" pos:column="55">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="119" pos:column="17">public</specifier> <name pos:line="119" pos:column="24">Type</name></type> <name pos:line="119" pos:column="29">ResultType</name> <block pos:line="119" pos:column="40">{ <function_decl><name pos:line="119" pos:column="42">get</name>;</function_decl> <function_decl><name pos:line="119" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="121" pos:column="17">public</specifier> <name pos:line="121" pos:column="24">Type</name></type> <name pos:line="121" pos:column="29">ExceptionType</name> <block pos:line="121" pos:column="43">{ <function_decl><name pos:line="121" pos:column="45">get</name>;</function_decl> <function_decl><name pos:line="121" pos:column="50">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="123" pos:column="17">public</specifier> <name pos:line="123" pos:column="24">bool</name></type> <name pos:line="123" pos:column="29">ExceptionHandled</name> <block pos:line="123" pos:column="46">{ <function_decl><name pos:line="123" pos:column="48">get</name>;</function_decl> <function_decl><name pos:line="123" pos:column="53">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="125" pos:column="17">public</specifier> <name pos:line="125" pos:column="24">FilterBounds</name></type> <name pos:line="125" pos:column="37">Bounds</name> <block pos:line="125" pos:column="44">{ <function_decl><name pos:line="125" pos:column="46">get</name>;</function_decl> <function_decl><name pos:line="125" pos:column="51">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="127" pos:column="17">public</specifier> <name pos:line="127" pos:column="24">bool</name></type> <name pos:line="127" pos:column="29">Canceled</name> <block pos:line="127" pos:column="38">{ <function_decl><name pos:line="127" pos:column="40">get</name>;</function_decl> <function_decl><name pos:line="127" pos:column="45">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="129" pos:column="17">public</specifier> <name pos:line="129" pos:column="24">bool</name></type> <name pos:line="129" pos:column="29">IsChildAction</name> <block pos:line="129" pos:column="43">{ <function_decl><name pos:line="129" pos:column="45">get</name>;</function_decl> <function_decl><name pos:line="129" pos:column="50">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="131" pos:column="17">public</specifier> <name pos:line="131" pos:column="24">Type</name></type> <name pos:line="131" pos:column="29">ExecutedType</name> <block pos:line="131" pos:column="42">{ <function_decl><name pos:line="131" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="131" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="133" pos:column="17">public</specifier> <name pos:line="133" pos:column="24">MethodInfo</name></type> <name pos:line="133" pos:column="35">ExecutedMethod</name> <block pos:line="133" pos:column="50">{ <function_decl><name pos:line="133" pos:column="52">get</name>;</function_decl> <function_decl><name pos:line="133" pos:column="57">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="135" pos:column="17">public</specifier> <name pos:line="135" pos:column="24">TimeSpan</name></type> <name pos:line="135" pos:column="33">Offset</name> <block pos:line="135" pos:column="40">{ <function_decl><name pos:line="135" pos:column="42">get</name>;</function_decl> <function_decl><name pos:line="135" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="137" pos:column="17">public</specifier> <name pos:line="137" pos:column="24">TimeSpan</name></type> <name pos:line="137" pos:column="33">Duration</name> <block pos:line="137" pos:column="42">{ <function_decl><name pos:line="137" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="137" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="139" pos:column="17">public</specifier> <name pos:line="139" pos:column="24">DateTime</name></type> <name pos:line="139" pos:column="33">StartTime</name> <block pos:line="139" pos:column="43">{ <function_decl><name pos:line="139" pos:column="45">get</name>;</function_decl> <function_decl><name pos:line="139" pos:column="50">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="141" pos:column="17">public</specifier> <name pos:line="141" pos:column="24">string</name></type> <name pos:line="141" pos:column="31">EventName</name> <block pos:line="141" pos:column="41">{ <function_decl><name pos:line="141" pos:column="43">get</name>;</function_decl> <function_decl><name pos:line="141" pos:column="48">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="143" pos:column="17">public</specifier> <name pos:line="143" pos:column="24">TimelineCategoryItem</name></type> <name pos:line="143" pos:column="45">EventCategory</name> <block pos:line="143" pos:column="59">{ <function_decl><name pos:line="143" pos:column="61">get</name>;</function_decl> <function_decl><name pos:line="143" pos:column="66">set</name>;</function_decl> }</block></decl></decl_stmt>
                
                <decl_stmt><decl><type><specifier pos:line="145" pos:column="17">public</specifier> <name pos:line="145" pos:column="24">string</name></type> <name pos:line="145" pos:column="31">EventSubText</name> <block pos:line="145" pos:column="44">{ <function_decl><name pos:line="145" pos:column="46">get</name>;</function_decl> <function_decl><name pos:line="145" pos:column="51">set</name>;</function_decl> }</block></decl></decl_stmt>
            }</block></class> 
        }</block></class>
    }</block></class>
}</block></namespace></unit>
