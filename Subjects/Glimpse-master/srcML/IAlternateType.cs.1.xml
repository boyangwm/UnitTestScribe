<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Extensibility\IAlternateType.cs" pos:tabs="8"><namespace pos:line="1" pos:column="1">namespace <name><name pos:line="1" pos:column="11">Glimpse</name><op:operator pos:line="1" pos:column="18">.</op:operator><name pos:line="1" pos:column="19">Core</name><op:operator pos:line="1" pos:column="23">.</op:operator><name pos:line="1" pos:column="24">Extensibility</name></name>
<block pos:line="2" pos:column="1">{
    <comment type="line" pos:line="3" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="4" pos:column="5">/// Definition for an alternate that should replace a given Type</comment>
    <comment type="line" pos:line="5" pos:column="5">/// &lt;/summary&gt;</comment>
    <comment type="line" pos:line="6" pos:column="5">/// &lt;typeparam name="T"&gt;The type to retrieve and alternate for.&lt;/typeparam&gt;</comment>
    <class type="interface"><specifier pos:line="7" pos:column="5">public</specifier> interface <name><name pos:line="7" pos:column="22">IAlternateType</name><argument_list pos:line="7" pos:column="36">&lt;<argument><name pos:line="7" pos:column="37">T</name></argument>&gt;</argument_list></name>
    <block pos:line="8" pos:column="5">{
        <comment type="line" pos:line="9" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="10" pos:column="9">/// Tries to create an alternate for the given target.</comment>
        <comment type="line" pos:line="11" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="12" pos:column="9">/// &lt;param name="originalObj"&gt;The original object.&lt;/param&gt;</comment>
        <comment type="line" pos:line="13" pos:column="9">/// &lt;param name="newObj"&gt;The new object.&lt;/param&gt;</comment>
        <comment type="line" pos:line="14" pos:column="9">/// &lt;returns&gt;&lt;c&gt;true&lt;/c&gt; if the create was successful, &lt;c&gt;false&lt;/c&gt; otherwise&lt;/returns&gt;</comment>
        <function_decl><type><name pos:line="15" pos:column="9">bool</name></type> <name pos:line="15" pos:column="14">TryCreate</name><parameter_list pos:line="15" pos:column="23">(<param><decl><type><name pos:line="15" pos:column="24">T</name></type> <name pos:line="15" pos:column="26">originalObj</name></decl></param>, <param><decl><type><specifier pos:line="15" pos:column="39">out</specifier> <name pos:line="15" pos:column="43">T</name></type> <name pos:line="15" pos:column="45">newObj</name></decl></param>)</parameter_list>;</function_decl>
    }</block></class>
}</block></namespace></unit>
