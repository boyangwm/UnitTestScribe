<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Extensibility\RuntimePolicyContext.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name><op:operator pos:line="2" pos:column="19">.</op:operator><name pos:line="2" pos:column="20">Framework</name></name>;</using>

<namespace pos:line="4" pos:column="1">namespace <name><name pos:line="4" pos:column="11">Glimpse</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">Core</name><op:operator pos:line="4" pos:column="23">.</op:operator><name pos:line="4" pos:column="24">Extensibility</name></name>
<block pos:line="5" pos:column="1">{
    <comment type="line" pos:line="6" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="7" pos:column="5">/// The implementation of &lt;see cref="IRuntimePolicyContext"/&gt; used in the &lt;c&gt;Execute&lt;/c&gt; method of &lt;see cref="IRuntimePolicy"/&gt;.</comment>
    <comment type="line" pos:line="8" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="9" pos:column="5">public</specifier> class <name pos:line="9" pos:column="18">RuntimePolicyContext</name> <super pos:line="9" pos:column="39">: <name pos:line="9" pos:column="41">IRuntimePolicyContext</name></super>
    <block pos:line="10" pos:column="5">{
        <comment type="line" pos:line="11" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="12" pos:column="9">/// Initializes a new instance of the &lt;see cref="RuntimePolicyContext" /&gt; class.</comment>
        <comment type="line" pos:line="13" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="14" pos:column="9">/// &lt;param name="requestMetadata"&gt;The request metadata.&lt;/param&gt;</comment>
        <comment type="line" pos:line="15" pos:column="9">/// &lt;param name="logger"&gt;The logger.&lt;/param&gt;</comment>
        <comment type="line" pos:line="16" pos:column="9">/// &lt;param name="requestContext"&gt;The request context.&lt;/param&gt;</comment>
        <comment type="line" pos:line="17" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;Throws an exception if any parameters are &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <constructor><specifier pos:line="18" pos:column="9">public</specifier> <name pos:line="18" pos:column="16">RuntimePolicyContext</name><parameter_list pos:line="18" pos:column="36">(<param><decl><type><name pos:line="18" pos:column="37">IRequestMetadata</name></type> <name pos:line="18" pos:column="54">requestMetadata</name></decl></param>, <param><decl><type><name pos:line="18" pos:column="71">ILogger</name></type> <name pos:line="18" pos:column="79">logger</name></decl></param>, <param><decl><type><name pos:line="18" pos:column="87">object</name></type> <name pos:line="18" pos:column="94">requestContext</name></decl></param>)</parameter_list>
        <block pos:line="19" pos:column="9">{
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><name pos:line="20" pos:column="17">requestMetadata</name> <op:operator pos:line="20" pos:column="33">==</op:operator> <name pos:line="20" pos:column="36">null</name></expr>)</condition><then pos:line="20" pos:column="41">
            <block pos:line="21" pos:column="13">{
                <throw pos:line="22" pos:column="17">throw <expr><op:operator pos:line="22" pos:column="23">new</op:operator> <call><name pos:line="22" pos:column="27">ArgumentNullException</name><argument_list pos:line="22" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="22" pos:column="49">"requestMetadata"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name pos:line="25" pos:column="17">logger</name> <op:operator pos:line="25" pos:column="24">==</op:operator> <name pos:line="25" pos:column="27">null</name></expr>)</condition><then pos:line="25" pos:column="32">
            <block pos:line="26" pos:column="13">{
                <throw pos:line="27" pos:column="17">throw <expr><op:operator pos:line="27" pos:column="23">new</op:operator> <call><name pos:line="27" pos:column="27">ArgumentNullException</name><argument_list pos:line="27" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="27" pos:column="49">"logger"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><name pos:line="30" pos:column="17">requestContext</name> <op:operator pos:line="30" pos:column="32">==</op:operator> <name pos:line="30" pos:column="35">null</name></expr>)</condition><then pos:line="30" pos:column="40">
            <block pos:line="31" pos:column="13">{
                <throw pos:line="32" pos:column="17">throw <expr><op:operator pos:line="32" pos:column="23">new</op:operator> <call><name pos:line="32" pos:column="27">ArgumentNullException</name><argument_list pos:line="32" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="32" pos:column="49">"requestContext"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>
            
            <expr_stmt><expr><name pos:line="35" pos:column="13">RequestMetadata</name> <op:operator pos:line="35" pos:column="29">=</op:operator> <name pos:line="35" pos:column="31">requestMetadata</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="36" pos:column="13">Logger</name> <op:operator pos:line="36" pos:column="20">=</op:operator> <name pos:line="36" pos:column="22">logger</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="37" pos:column="13">RequestContext</name> <op:operator pos:line="37" pos:column="28">=</op:operator> <name pos:line="37" pos:column="30">requestContext</name></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="40" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="41" pos:column="9">/// Gets or sets the logger.</comment>
        <comment type="line" pos:line="42" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="43" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="44" pos:column="9">/// The logger.</comment>
        <comment type="line" pos:line="45" pos:column="9">/// &lt;/value&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="46" pos:column="9">public</specifier> <name pos:line="46" pos:column="16">ILogger</name></type> <name pos:line="46" pos:column="24">Logger</name> <block pos:line="46" pos:column="31">{ <function_decl><name pos:line="46" pos:column="33">get</name>;</function_decl> <function_decl><name pos:line="46" pos:column="38">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="48" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="49" pos:column="9">/// Gets or sets the request metadata.</comment>
        <comment type="line" pos:line="50" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="51" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="52" pos:column="9">/// The request metadata.</comment>
        <comment type="line" pos:line="53" pos:column="9">/// &lt;/value&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="54" pos:column="9">public</specifier> <name pos:line="54" pos:column="16">IRequestMetadata</name></type> <name pos:line="54" pos:column="33">RequestMetadata</name> <block pos:line="54" pos:column="49">{ <function_decl><name pos:line="54" pos:column="51">get</name>;</function_decl> <function_decl><name pos:line="54" pos:column="56">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <decl_stmt><decl><type><specifier pos:line="56" pos:column="9">private</specifier> <name pos:line="56" pos:column="17">object</name></type> <name pos:line="56" pos:column="24">RequestContext</name> <block pos:line="56" pos:column="39">{ <function_decl><name pos:line="56" pos:column="41">get</name>;</function_decl> <function_decl><name pos:line="56" pos:column="46">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="58" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="59" pos:column="9">/// Gets the request context.</comment>
        <comment type="line" pos:line="60" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="61" pos:column="9">/// &lt;typeparam name="T"&gt;Type of result that is expected.&lt;/typeparam&gt;</comment>
        <comment type="line" pos:line="62" pos:column="9">/// &lt;returns&gt;</comment>
        <comment type="line" pos:line="63" pos:column="9">/// The request context that is being used.</comment>
        <comment type="line" pos:line="64" pos:column="9">/// &lt;/returns&gt;</comment>
        <function><type><specifier pos:line="65" pos:column="9">public</specifier> <name pos:line="65" pos:column="16">T</name></type> <name><name pos:line="65" pos:column="18">GetRequestContext</name><argument_list pos:line="65" pos:column="35">&lt;<argument><name pos:line="65" pos:column="36">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="65" pos:column="38">()</parameter_list> <where pos:line="65" pos:column="41">where <name pos:line="65" pos:column="47">T</name> : class</where>
        <block pos:line="66" pos:column="9">{
            <return pos:line="67" pos:column="13">return <expr><name pos:line="67" pos:column="20">RequestContext</name> <op:operator pos:line="67" pos:column="35">as</op:operator> <name pos:line="67" pos:column="38">T</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
