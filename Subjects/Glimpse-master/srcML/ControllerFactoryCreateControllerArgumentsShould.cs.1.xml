<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Mvc\AlternateType\ControllerFactoryCreateControllerArgumentsShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Web</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">Routing</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Mvc</name><op:operator pos:line="2" pos:column="18">.</op:operator><name pos:line="2" pos:column="19">AlternateType</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Test</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Common</name></name>;</using>
<using pos:line="4" pos:column="1">using <name pos:line="4" pos:column="7">Xunit</name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Xunit</name><op:operator pos:line="5" pos:column="12">.</op:operator><name pos:line="5" pos:column="13">Extensions</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">Glimpse</name><op:operator pos:line="7" pos:column="18">.</op:operator><name pos:line="7" pos:column="19">Test</name><op:operator pos:line="7" pos:column="23">.</op:operator><name pos:line="7" pos:column="24">Mvc</name><op:operator pos:line="7" pos:column="27">.</op:operator><name pos:line="7" pos:column="28">AlternateType</name></name>
<block pos:line="8" pos:column="1">{
    <class><specifier pos:line="9" pos:column="5">public</specifier> class <name pos:line="9" pos:column="18">ControllerFactoryCreateControllerArgumentsShould</name>
    <block pos:line="10" pos:column="5">{
        <function><type><attribute pos:line="11" pos:column="9">[<expr><name pos:line="11" pos:column="10">Theory</name></expr><op:operator pos:line="11" pos:column="16">,</op:operator> <expr><name pos:line="11" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="12" pos:column="9">public</specifier> <name pos:line="12" pos:column="16">void</name></type> <name pos:line="12" pos:column="21">Construct</name><parameter_list pos:line="12" pos:column="30">(<param><decl><type><name pos:line="12" pos:column="31">RequestContext</name></type> <name pos:line="12" pos:column="46">requestContext</name></decl></param>, <param><decl><type><name pos:line="12" pos:column="62">string</name></type> <name pos:line="12" pos:column="69">controllerName</name></decl></param>)</parameter_list>
        <block pos:line="13" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">var</name></type> <name pos:line="14" pos:column="17">arguments</name> <init pos:line="14" pos:column="27">= <expr><op:operator pos:line="14" pos:column="29">new</op:operator> <call><name><name pos:line="14" pos:column="33">ControllerFactory</name><op:operator pos:line="14" pos:column="50">.</op:operator><name pos:line="14" pos:column="51">CreateController</name><op:operator pos:line="14" pos:column="67">.</op:operator><name pos:line="14" pos:column="68">Arguments</name></name><argument_list pos:line="14" pos:column="77">(<argument><expr><name pos:line="14" pos:column="78">requestContext</name></expr></argument>, <argument><expr><name pos:line="14" pos:column="94">controllerName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="16" pos:column="13">Assert</name><op:operator pos:line="16" pos:column="19">.</op:operator><name pos:line="16" pos:column="20">Equal</name></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">requestContext</name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="42">arguments</name><op:operator pos:line="16" pos:column="51">.</op:operator><name pos:line="16" pos:column="52">RequestContext</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="17" pos:column="13">Assert</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">Equal</name></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">controllerName</name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="42">arguments</name><op:operator pos:line="17" pos:column="51">.</op:operator><name pos:line="17" pos:column="52">ControllerName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function> 
    }</block></class>
}</block></namespace></unit>
