<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Integration\GlimpseShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">OpenQA</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Selenium</name></name>;</using>
<using pos:line="2" pos:column="1">using <name pos:line="2" pos:column="7">Xunit</name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Xunit</name><op:operator pos:line="3" pos:column="12">.</op:operator><name pos:line="3" pos:column="13">Extensions</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Glimpse</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">Test</name><op:operator pos:line="5" pos:column="23">.</op:operator><name pos:line="5" pos:column="24">Integration</name></name>
<block pos:line="6" pos:column="1">{
    <class><specifier pos:line="7" pos:column="5">public</specifier> class <name pos:line="7" pos:column="18">GlimpseShould</name> <super pos:line="7" pos:column="32">: <name><name pos:line="7" pos:column="34">IUseFixture</name><argument_list pos:line="7" pos:column="45">&lt;<argument><name pos:line="7" pos:column="46">BrowserFactory</name></argument>&gt;</argument_list></name></super>
    <block pos:line="8" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="9" pos:column="9">private</specifier> <name pos:line="9" pos:column="17">IWebDriver</name></type> <name pos:line="9" pos:column="28">browser</name></decl>;</decl_stmt>

        <function><type><attribute pos:line="11" pos:column="9">[<expr><name pos:line="11" pos:column="10">Theory</name></expr><op:operator pos:line="11" pos:column="16">,</op:operator> <expr><call><name pos:line="11" pos:column="18">ExcelData</name><argument_list pos:line="11" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="11" pos:column="28">@"Tests.xls"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="11" pos:column="42">"SELECT * FROM Urls"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="12" pos:column="9">public</specifier> <name pos:line="12" pos:column="16">void</name></type> <name pos:line="12" pos:column="21">Integration</name><parameter_list pos:line="12" pos:column="32">(<param><decl><type><name pos:line="12" pos:column="33">string</name></type> <name pos:line="12" pos:column="40">url</name></decl></param>, <param><decl><type><name pos:line="12" pos:column="45">string</name></type> <name pos:line="12" pos:column="52">expected</name></decl></param>, <param><decl><type><name pos:line="12" pos:column="62">string</name></type> <name pos:line="12" pos:column="69">tabSelector</name></decl></param>, <param><decl><type><name pos:line="12" pos:column="82">string</name></type> <name pos:line="12" pos:column="89">elementSelector</name></decl></param>, <param><decl><type><name pos:line="12" pos:column="106">bool</name></type> <name pos:line="12" pos:column="111">skip</name> <init pos:line="12" pos:column="116">= <expr><lit:literal type="boolean" pos:line="12" pos:column="118">false</lit:literal></expr></init></decl></param>)</parameter_list>
        <block pos:line="13" pos:column="9">{
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><name pos:line="14" pos:column="17">skip</name></expr>)</condition><then pos:line="14" pos:column="22">
            <block pos:line="15" pos:column="13">{
                <return pos:line="16" pos:column="17">return;</return>
            }</block></then></if>

            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">browser</name><op:operator pos:line="19" pos:column="20">.</op:operator><name pos:line="19" pos:column="21">Navigate</name></name><argument_list pos:line="19" pos:column="29">()</argument_list></call><op:operator pos:line="19" pos:column="31">.</op:operator><call><name pos:line="19" pos:column="32">GoToUrl</name><argument_list pos:line="19" pos:column="39">(<argument><expr><name pos:line="19" pos:column="40">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name pos:line="21" pos:column="13">OpenGlimpse</name><argument_list pos:line="21" pos:column="24">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name pos:line="23" pos:column="13">ClickTab</name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">tabSelector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="25" pos:column="13">var</name></type> <name pos:line="25" pos:column="17">actual</name> <init pos:line="25" pos:column="24">= <expr><call><name pos:line="25" pos:column="26">GetElementText</name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">elementSelector</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><op:operator pos:line="27" pos:column="17">!</op:operator><call><name><name pos:line="27" pos:column="18">actual</name><op:operator pos:line="27" pos:column="24">.</op:operator><name pos:line="27" pos:column="25">Equals</name></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">expected</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="27" pos:column="42">
            <block pos:line="28" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="29" pos:column="17">browser</name><op:operator pos:line="29" pos:column="24">.</op:operator><name pos:line="29" pos:column="25">SaveScreenshot</name></name><argument_list pos:line="29" pos:column="39">(<argument><expr><name pos:line="29" pos:column="40">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">Assert</name><op:operator pos:line="32" pos:column="19">.</op:operator><name pos:line="32" pos:column="20">Equal</name></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">expected</name></expr></argument>, <argument><expr><name pos:line="32" pos:column="36">actual</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="35" pos:column="9">public</specifier> <name pos:line="35" pos:column="16">void</name></type> <name pos:line="35" pos:column="21">SetFixture</name><parameter_list pos:line="35" pos:column="31">(<param><decl><type><name pos:line="35" pos:column="32">BrowserFactory</name></type> <name pos:line="35" pos:column="47">factory</name></decl></param>)</parameter_list>
        <block pos:line="36" pos:column="9">{
            <expr_stmt><expr><name pos:line="37" pos:column="13">browser</name> <op:operator pos:line="37" pos:column="21">=</op:operator> <name><name pos:line="37" pos:column="23">factory</name><op:operator pos:line="37" pos:column="30">.</op:operator><name pos:line="37" pos:column="31">Browser</name></name></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="40" pos:column="9">private</specifier> <name pos:line="40" pos:column="17">void</name></type> <name pos:line="40" pos:column="22">OpenGlimpse</name><parameter_list pos:line="40" pos:column="33">()</parameter_list>
        <block pos:line="41" pos:column="9">{
            <try pos:line="42" pos:column="13">try
            <block pos:line="43" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="44" pos:column="17">IWebElement</name></type> <name pos:line="44" pos:column="29">glimpse</name> <init pos:line="44" pos:column="37">= <expr><call><name><name pos:line="44" pos:column="39">browser</name><op:operator pos:line="44" pos:column="46">.</op:operator><name pos:line="44" pos:column="47">FindElement</name></name><argument_list pos:line="44" pos:column="58">(<argument><expr><call><name><name pos:line="44" pos:column="59">By</name><op:operator pos:line="44" pos:column="61">.</op:operator><name pos:line="44" pos:column="62">CssSelector</name></name><argument_list pos:line="44" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="44" pos:column="74">".glimpse-open"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="44" pos:column="92">10</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name pos:line="45" pos:column="17">HighlightElement</name><argument_list pos:line="45" pos:column="33">(<argument><expr><name pos:line="45" pos:column="34">browser</name></expr></argument>, <argument><expr><name pos:line="45" pos:column="43">glimpse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="46" pos:column="17">glimpse</name><op:operator pos:line="46" pos:column="24">.</op:operator><name pos:line="46" pos:column="25">Click</name></name><argument_list pos:line="46" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="48" pos:column="13">catch <parameter_list pos:line="48" pos:column="19">(<param><decl><type><name pos:line="48" pos:column="20">ElementNotVisibleException</name></type></decl></param>)</parameter_list>
            <block pos:line="49" pos:column="13">{
                <comment type="line" pos:line="50" pos:column="17">// swallow, Glimpse is already open</comment>
            }</block></catch></try>
        }</block></function>

        <function><type><specifier pos:line="54" pos:column="9">private</specifier> <name pos:line="54" pos:column="17">void</name></type> <name pos:line="54" pos:column="22">ClickTab</name><parameter_list pos:line="54" pos:column="30">(<param><decl><type><name pos:line="54" pos:column="31">string</name></type> <name pos:line="54" pos:column="38">tabSelector</name></decl></param>)</parameter_list>
        <block pos:line="55" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="56" pos:column="13">var</name></type> <name pos:line="56" pos:column="17">tab</name> <init pos:line="56" pos:column="21">= <expr><call><name><name pos:line="56" pos:column="23">browser</name><op:operator pos:line="56" pos:column="30">.</op:operator><name pos:line="56" pos:column="31">FindElement</name></name><argument_list pos:line="56" pos:column="42">(<argument><expr><call><name><name pos:line="56" pos:column="43">By</name><op:operator pos:line="56" pos:column="45">.</op:operator><name pos:line="56" pos:column="46">CssSelector</name></name><argument_list pos:line="56" pos:column="57">(<argument><expr><call><name><name pos:line="56" pos:column="58">string</name><op:operator pos:line="56" pos:column="64">.</op:operator><name pos:line="56" pos:column="65">IsNullOrEmpty</name></name><argument_list pos:line="56" pos:column="78">(<argument><expr><name pos:line="56" pos:column="79">tabSelector</name></expr></argument>)</argument_list></call> <op:operator pos:line="56" pos:column="92">?</op:operator> <lit:literal type="string" pos:line="56" pos:column="94">".glimpse-tabitem-test-tab"</lit:literal> <op:operator pos:line="56" pos:column="122">:</op:operator> <name pos:line="56" pos:column="124">tabSelector</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="56" pos:column="138">5</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">HighlightElement</name><argument_list pos:line="57" pos:column="29">(<argument><expr><name pos:line="57" pos:column="30">browser</name></expr></argument>, <argument><expr><name pos:line="57" pos:column="39">tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="58" pos:column="13">tab</name><op:operator pos:line="58" pos:column="16">.</op:operator><name pos:line="58" pos:column="17">Click</name></name><argument_list pos:line="58" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="61" pos:column="9">private</specifier> <name pos:line="61" pos:column="17">string</name></type> <name pos:line="61" pos:column="24">GetElementText</name><parameter_list pos:line="61" pos:column="38">(<param><decl><type><name pos:line="61" pos:column="39">string</name></type> <name pos:line="61" pos:column="46">elementSelector</name></decl></param>)</parameter_list>
        <block pos:line="62" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="63" pos:column="13">IWebElement</name></type> <name pos:line="63" pos:column="25">element</name> <init pos:line="63" pos:column="33">= <expr><call><name><name pos:line="63" pos:column="35">browser</name><op:operator pos:line="63" pos:column="42">.</op:operator><name pos:line="63" pos:column="43">FindElement</name></name><argument_list pos:line="63" pos:column="54">(<argument><expr><call><name><name pos:line="63" pos:column="55">By</name><op:operator pos:line="63" pos:column="57">.</op:operator><name pos:line="63" pos:column="58">CssSelector</name></name><argument_list pos:line="63" pos:column="69">(<argument><expr><call><name><name pos:line="63" pos:column="70">string</name><op:operator pos:line="63" pos:column="76">.</op:operator><name pos:line="63" pos:column="77">IsNullOrEmpty</name></name><argument_list pos:line="63" pos:column="90">(<argument><expr><name pos:line="63" pos:column="91">elementSelector</name></expr></argument>)</argument_list></call> <op:operator pos:line="63" pos:column="108">?</op:operator> <lit:literal type="string" pos:line="63" pos:column="110">"#__intTestId"</lit:literal> <op:operator pos:line="63" pos:column="125">:</op:operator> <name pos:line="63" pos:column="127">elementSelector</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="63" pos:column="145">5</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">HighlightElement</name><argument_list pos:line="64" pos:column="29">(<argument><expr><name pos:line="64" pos:column="30">browser</name></expr></argument>, <argument><expr><name pos:line="64" pos:column="39">element</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="65" pos:column="13">var</name></type> <name pos:line="65" pos:column="17">text</name> <init pos:line="65" pos:column="22">= <expr><name><name pos:line="65" pos:column="24">element</name><op:operator pos:line="65" pos:column="31">.</op:operator><name pos:line="65" pos:column="32">Text</name></name></expr></init></decl>;</decl_stmt>
            <return pos:line="66" pos:column="13">return <expr><name pos:line="66" pos:column="20">text</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="69" pos:column="9">private</specifier> <name pos:line="69" pos:column="17">void</name></type> <name pos:line="69" pos:column="22">HighlightElement</name><parameter_list pos:line="69" pos:column="38">(<param><decl><type><name pos:line="69" pos:column="39">IWebDriver</name></type> <name pos:line="69" pos:column="50">driver</name></decl></param>, <param><decl><type><name pos:line="69" pos:column="58">IWebElement</name></type> <name pos:line="69" pos:column="70">element</name></decl></param>)</parameter_list>
        <block pos:line="70" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="71" pos:column="13">var</name></type> <name pos:line="71" pos:column="17">js</name> <init pos:line="71" pos:column="20">= <expr><name pos:line="71" pos:column="22">driver</name> <op:operator pos:line="71" pos:column="29">as</op:operator> <name pos:line="71" pos:column="32">IJavaScriptExecutor</name></expr></init></decl>;</decl_stmt>

            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><name pos:line="73" pos:column="17">js</name> <op:operator pos:line="73" pos:column="20">!=</op:operator> <name pos:line="73" pos:column="23">null</name></expr>)</condition><then pos:line="73" pos:column="28">
            <block pos:line="74" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="75" pos:column="17">js</name><op:operator pos:line="75" pos:column="19">.</op:operator><name pos:line="75" pos:column="20">ExecuteScript</name></name><argument_list pos:line="75" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="75" pos:column="34">"arguments[0].setAttribute('style', arguments[1]);"</lit:literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="87">element</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="75" pos:column="96">"color: yellow; border: 2px solid red;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="76" pos:column="17">js</name><op:operator pos:line="76" pos:column="19">.</op:operator><name pos:line="76" pos:column="20">ExecuteScript</name></name><argument_list pos:line="76" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="76" pos:column="34">"arguments[0].setAttribute('style', arguments[1]);"</lit:literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="87">element</name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="96">string</name><op:operator pos:line="76" pos:column="102">.</op:operator><name pos:line="76" pos:column="103">Empty</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
