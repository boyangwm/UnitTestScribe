<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Tab\Trace.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name><op:operator pos:line="2" pos:column="19">.</op:operator><name pos:line="2" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Extensions</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Message</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Tab</name><op:operator pos:line="5" pos:column="23">.</op:operator><name pos:line="5" pos:column="24">Assist</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">Glimpse</name><op:operator pos:line="7" pos:column="18">.</op:operator><name pos:line="7" pos:column="19">Core</name><op:operator pos:line="7" pos:column="23">.</op:operator><name pos:line="7" pos:column="24">Tab</name></name>
<block pos:line="8" pos:column="1">{
    <comment type="line" pos:line="9" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="10" pos:column="5">/// Trace tab</comment>
    <comment type="line" pos:line="11" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="12" pos:column="5">public</specifier> class <name pos:line="12" pos:column="18">Trace</name> <super pos:line="12" pos:column="24">: <name pos:line="12" pos:column="26">ITab</name>, <name pos:line="12" pos:column="32">ITabSetup</name>, <name pos:line="12" pos:column="43">IDocumentation</name>, <name pos:line="12" pos:column="59">ITabLayout</name>, <name pos:line="12" pos:column="71">IKey</name></super>
    <block pos:line="13" pos:column="5">{
        <comment type="line" pos:line="14" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="15" pos:column="9">/// The tab key that is used during storage.</comment>
        <comment type="line" pos:line="16" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">public</specifier> <specifier pos:line="17" pos:column="16">const</specifier> <name pos:line="17" pos:column="22">string</name></type> <name pos:line="17" pos:column="29">TabKey</name> <init pos:line="17" pos:column="36">= <expr><lit:literal type="string" pos:line="17" pos:column="38">"glimpse_trace"</lit:literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">private</specifier> <specifier pos:line="19" pos:column="17">static</specifier> <specifier pos:line="19" pos:column="24">readonly</specifier> <name pos:line="19" pos:column="33">object</name></type> <name pos:line="19" pos:column="40">Layout</name> <init pos:line="19" pos:column="47">= <expr><call><name><name pos:line="19" pos:column="49">TabLayout</name><op:operator pos:line="19" pos:column="58">.</op:operator><name pos:line="19" pos:column="59">Create</name></name><argument_list pos:line="19" pos:column="65">()</argument_list></call>
                <op:operator pos:line="20" pos:column="17">.</op:operator><call><name pos:line="20" pos:column="18">Row</name><argument_list pos:line="20" pos:column="21">(<argument><expr><lambda><name pos:line="20" pos:column="22">r</name> <op:operator pos:line="20" pos:column="24">=&gt;</op:operator>
                <block pos:line="21" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="22" pos:column="21">r</name><op:operator pos:line="22" pos:column="22">.</op:operator><name pos:line="22" pos:column="23">Cell</name></name><argument_list pos:line="22" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="22" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="22" pos:column="30">.</op:operator><call><name pos:line="22" pos:column="31">AsKey</name><argument_list pos:line="22" pos:column="36">()</argument_list></call><op:operator pos:line="22" pos:column="38">.</op:operator><call><name pos:line="22" pos:column="39">WidthInPixels</name><argument_list pos:line="22" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="22" pos:column="53">100</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="23" pos:column="21">r</name><op:operator pos:line="23" pos:column="22">.</op:operator><name pos:line="23" pos:column="23">Cell</name></name><argument_list pos:line="23" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="23" pos:column="28">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="24" pos:column="21">r</name><op:operator pos:line="24" pos:column="22">.</op:operator><name pos:line="24" pos:column="23">Cell</name></name><argument_list pos:line="24" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="24" pos:column="28">2</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="30">.</op:operator><call><name pos:line="24" pos:column="31">WidthInPercent</name><argument_list pos:line="24" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="24" pos:column="46">15</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="49">.</op:operator><call><name pos:line="24" pos:column="50">Suffix</name><argument_list pos:line="24" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="24" pos:column="57">" ms"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="63">.</op:operator><call><name pos:line="24" pos:column="64">AlignRight</name><argument_list pos:line="24" pos:column="74">()</argument_list></call><op:operator pos:line="24" pos:column="76">.</op:operator><call><name pos:line="24" pos:column="77">Prefix</name><argument_list pos:line="24" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="24" pos:column="84">"T+ "</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="90">.</op:operator><call><name pos:line="24" pos:column="91">Class</name><argument_list pos:line="24" pos:column="96">(<argument><expr><lit:literal type="string" pos:line="24" pos:column="97">"mono"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="25" pos:column="21">r</name><op:operator pos:line="25" pos:column="22">.</op:operator><name pos:line="25" pos:column="23">Cell</name></name><argument_list pos:line="25" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="25" pos:column="28">3</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="25" pos:column="30">.</op:operator><call><name pos:line="25" pos:column="31">WidthInPercent</name><argument_list pos:line="25" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="25" pos:column="46">15</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="25" pos:column="49">.</op:operator><call><name pos:line="25" pos:column="50">Suffix</name><argument_list pos:line="25" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="25" pos:column="57">" ms"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="25" pos:column="63">.</op:operator><call><name pos:line="25" pos:column="64">AlignRight</name><argument_list pos:line="25" pos:column="74">()</argument_list></call><op:operator pos:line="25" pos:column="76">.</op:operator><call><name pos:line="25" pos:column="77">Class</name><argument_list pos:line="25" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="25" pos:column="83">"mono"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
                }</block></lambda></expr></argument>)</argument_list></call><op:operator pos:line="26" pos:column="19">.</op:operator><call><name pos:line="26" pos:column="20">Build</name><argument_list pos:line="26" pos:column="25">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:line="28" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="29" pos:column="9">/// Gets the name that will show in the tab.</comment>
        <comment type="line" pos:line="30" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="31" pos:column="9">/// &lt;value&gt;The name.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="32" pos:column="9">public</specifier> <name pos:line="32" pos:column="16">string</name></type> <name pos:line="32" pos:column="23">Name</name>
        <block pos:line="33" pos:column="9">{
            <function><name pos:line="34" pos:column="13">get</name> <block pos:line="34" pos:column="17">{ <return pos:line="34" pos:column="19">return <expr><lit:literal type="string" pos:line="34" pos:column="26">"Trace"</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="37" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="38" pos:column="9">/// Gets the documentation URI.</comment>
        <comment type="line" pos:line="39" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="40" pos:column="9">/// &lt;value&gt;The documentation URI.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="41" pos:column="9">public</specifier> <name pos:line="41" pos:column="16">string</name></type> <name pos:line="41" pos:column="23">DocumentationUri</name>
        <block pos:line="42" pos:column="9">{
            <function><name pos:line="43" pos:column="13">get</name> <block pos:line="43" pos:column="17">{ <return pos:line="43" pos:column="19">return <expr><lit:literal type="string" pos:line="43" pos:column="26">"http://getglimpse.com/Help/Trace-Tab"</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="46" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="47" pos:column="9">/// Gets when the &lt;see cref="ITab.GetData" /&gt; method should run.</comment>
        <comment type="line" pos:line="48" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="49" pos:column="9">/// &lt;value&gt;The execute on.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="50" pos:column="9">public</specifier> <name pos:line="50" pos:column="16">RuntimeEvent</name></type> <name pos:line="50" pos:column="29">ExecuteOn</name>
        <block pos:line="51" pos:column="9">{
            <function><name pos:line="52" pos:column="13">get</name> <block pos:line="52" pos:column="17">{ <return pos:line="52" pos:column="19">return <expr><name><name pos:line="52" pos:column="26">RuntimeEvent</name><op:operator pos:line="52" pos:column="38">.</op:operator><name pos:line="52" pos:column="39">EndRequest</name></name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="55" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="56" pos:column="9">/// Gets the type of the request context that the Tab relies on. If</comment>
        <comment type="line" pos:line="57" pos:column="9">/// returns null, the tab can be used in any context.</comment>
        <comment type="line" pos:line="58" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="59" pos:column="9">/// &lt;value&gt;The type of the request context.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="60" pos:column="9">public</specifier> <name pos:line="60" pos:column="16">Type</name></type> <name pos:line="60" pos:column="21">RequestContextType</name>
        <block pos:line="61" pos:column="9">{
            <function><name pos:line="62" pos:column="13">get</name> <block pos:line="62" pos:column="17">{ <return pos:line="62" pos:column="19">return <expr><name pos:line="62" pos:column="26">null</name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="65" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="66" pos:column="9">/// Gets the key.</comment>
        <comment type="line" pos:line="67" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="68" pos:column="9">/// &lt;value&gt;The key. Only valid JavaScript identifiers should be used for future compatibility.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="69" pos:column="9">public</specifier> <name pos:line="69" pos:column="16">string</name></type> <name pos:line="69" pos:column="23">Key</name>
        <block pos:line="70" pos:column="9">{
            <function><name pos:line="71" pos:column="13">get</name> <block pos:line="71" pos:column="17">{ <return pos:line="71" pos:column="19">return <expr><name pos:line="71" pos:column="26">TabKey</name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="74" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="75" pos:column="9">/// Gets the layout which controls the layout.</comment>
        <comment type="line" pos:line="76" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="77" pos:column="9">/// &lt;returns&gt;Object that dictates the layout.&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="78" pos:column="9">public</specifier> <name pos:line="78" pos:column="16">object</name></type> <name pos:line="78" pos:column="23">GetLayout</name><parameter_list pos:line="78" pos:column="32">()</parameter_list>
        <block pos:line="79" pos:column="9">{
            <return pos:line="80" pos:column="13">return <expr><name pos:line="80" pos:column="20">Layout</name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="83" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="84" pos:column="9">/// Gets the data that should be shown in the UI.</comment>
        <comment type="line" pos:line="85" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="86" pos:column="9">/// &lt;param name="context"&gt;The context.&lt;/param&gt;</comment>
        <comment type="line" pos:line="87" pos:column="9">/// &lt;returns&gt;Object that will be shown.&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="88" pos:column="9">public</specifier> <name pos:line="88" pos:column="16">object</name></type> <name pos:line="88" pos:column="23">GetData</name><parameter_list pos:line="88" pos:column="30">(<param><decl><type><name pos:line="88" pos:column="31">ITabContext</name></type> <name pos:line="88" pos:column="43">context</name></decl></param>)</parameter_list>
        <block pos:line="89" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="90" pos:column="13">var</name></type> <name pos:line="90" pos:column="17">data</name> <init pos:line="90" pos:column="22">= <expr><call><name><name pos:line="90" pos:column="24">context</name><op:operator pos:line="90" pos:column="31">.</op:operator><name><name pos:line="90" pos:column="32">GetMessages</name><argument_list pos:line="90" pos:column="43">&lt;<argument><name pos:line="90" pos:column="44">ITraceMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="90" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="91" pos:column="13">return <expr><name pos:line="91" pos:column="20">data</name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="94" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="95" pos:column="9">/// Setups the targeted tab using the specified context.</comment>
        <comment type="line" pos:line="96" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="97" pos:column="9">/// &lt;param name="context"&gt;The context which should be used.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="98" pos:column="9">public</specifier> <name pos:line="98" pos:column="16">void</name></type> <name pos:line="98" pos:column="21">Setup</name><parameter_list pos:line="98" pos:column="26">(<param><decl><type><name pos:line="98" pos:column="27">ITabSetupContext</name></type> <name pos:line="98" pos:column="44">context</name></decl></param>)</parameter_list>
        <block pos:line="99" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="100" pos:column="13">context</name><op:operator pos:line="100" pos:column="20">.</op:operator><name><name pos:line="100" pos:column="21">PersistMessages</name><argument_list pos:line="100" pos:column="36">&lt;<argument><name pos:line="100" pos:column="37">ITraceMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="100" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
