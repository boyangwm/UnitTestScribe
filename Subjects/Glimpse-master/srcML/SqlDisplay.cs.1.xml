<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Ado\Display\SqlDisplay.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Linq</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Ado</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">Message</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Ado</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">Model</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Extensions</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Glimpse</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">Ado</name><op:operator pos:line="8" pos:column="22">.</op:operator><name pos:line="8" pos:column="23">Display</name></name>
<block pos:line="9" pos:column="1">{
    <class><attribute pos:line="10" pos:column="5">[<expr><name pos:line="10" pos:column="6">Obsolete</name></expr>]</attribute>
    <specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">SqlDisplay</name> <super pos:line="11" pos:column="29">: <name pos:line="11" pos:column="31">IDisplay</name>, <name pos:line="11" pos:column="41">ITabSetup</name>, <name pos:line="11" pos:column="52">IKey</name></super>
    <block pos:line="12" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">private</specifier> <specifier pos:line="13" pos:column="17">const</specifier> <name pos:line="13" pos:column="23">string</name></type> <name pos:line="13" pos:column="30">InternalName</name> <init pos:line="13" pos:column="43">= <expr><lit:literal type="string" pos:line="13" pos:column="45">"sql"</lit:literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">public</specifier> <name pos:line="15" pos:column="16">string</name></type> <name pos:line="15" pos:column="23">Name</name>
        <block pos:line="16" pos:column="9">{
            <function><name pos:line="17" pos:column="13">get</name> <block pos:line="17" pos:column="17">{ <return pos:line="17" pos:column="19">return <expr><name pos:line="17" pos:column="26">InternalName</name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">string</name></type> <name pos:line="20" pos:column="23">Key</name>
        <block pos:line="21" pos:column="9">{
            <function><name pos:line="22" pos:column="13">get</name> <block pos:line="22" pos:column="17">{ <return pos:line="22" pos:column="19">return <expr><name pos:line="22" pos:column="26">InternalName</name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="25" pos:column="9">public</specifier> <name pos:line="25" pos:column="16">object</name></type> <name pos:line="25" pos:column="23">GetData</name><parameter_list pos:line="25" pos:column="30">(<param><decl><type><name pos:line="25" pos:column="31">ITabContext</name></type> <name pos:line="25" pos:column="43">context</name></decl></param>)</parameter_list>
        <block pos:line="26" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="27" pos:column="13">var</name></type> <name pos:line="27" pos:column="17">messages</name> <init pos:line="27" pos:column="26">= <expr><call><name><name pos:line="27" pos:column="28">context</name><op:operator pos:line="27" pos:column="35">.</op:operator><name><name pos:line="27" pos:column="36">GetMessages</name><argument_list pos:line="27" pos:column="47">&lt;<argument><name pos:line="27" pos:column="48">AdoMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="27" pos:column="59">()</argument_list></call><op:operator pos:line="27" pos:column="61">.</op:operator><call><name pos:line="27" pos:column="62">ToList</name><argument_list pos:line="27" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="28" pos:column="13">var</name></type> <name pos:line="28" pos:column="17">aggregator</name> <init pos:line="28" pos:column="28">= <expr><op:operator pos:line="28" pos:column="30">new</op:operator> <call><name pos:line="28" pos:column="34">MessageAggregator</name><argument_list pos:line="28" pos:column="51">(<argument><expr><name pos:line="28" pos:column="52">messages</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="29" pos:column="13">var</name></type> <name pos:line="29" pos:column="17">queryData</name> <init pos:line="29" pos:column="27">= <expr><call><name><name pos:line="29" pos:column="29">aggregator</name><op:operator pos:line="29" pos:column="39">.</op:operator><name pos:line="29" pos:column="40">Aggregate</name></name><argument_list pos:line="29" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="31" pos:column="13">SqlStatistics</name></type> <name pos:line="31" pos:column="27">sqlStatistics</name> <init pos:line="31" pos:column="41">= <expr><call><name><name pos:line="31" pos:column="43">SqlStatisticsCalculator</name><op:operator pos:line="31" pos:column="66">.</op:operator><name pos:line="31" pos:column="67">Caluculate</name></name><argument_list pos:line="31" pos:column="77">(<argument><expr><name pos:line="31" pos:column="78">queryData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <return pos:line="33" pos:column="13">return <expr><op:operator pos:line="33" pos:column="20">new</op:operator>
            <block pos:line="34" pos:column="13">{
                <expr><name pos:line="35" pos:column="17">queryCount</name> <op:operator pos:line="35" pos:column="28">=</op:operator> <name><name pos:line="35" pos:column="30">sqlStatistics</name><op:operator pos:line="35" pos:column="43">.</op:operator><name pos:line="35" pos:column="44">QueryCount</name></name></expr><op:operator pos:line="35" pos:column="54">,</op:operator>
                <expr><name pos:line="36" pos:column="17">connectionCount</name> <op:operator pos:line="36" pos:column="33">=</op:operator> <name><name pos:line="36" pos:column="35">sqlStatistics</name><op:operator pos:line="36" pos:column="48">.</op:operator><name pos:line="36" pos:column="49">ConnectionCount</name></name></expr><op:operator pos:line="36" pos:column="64">,</op:operator>
                <expr><name pos:line="37" pos:column="17">transactionCount</name> <op:operator pos:line="37" pos:column="34">=</op:operator> <name><name pos:line="37" pos:column="36">sqlStatistics</name><op:operator pos:line="37" pos:column="49">.</op:operator><name pos:line="37" pos:column="50">TransactionCount</name></name></expr><op:operator pos:line="37" pos:column="66">,</op:operator>
                <expr><name pos:line="38" pos:column="17">queryExecutionTime</name> <op:operator pos:line="38" pos:column="36">=</op:operator> <name><name pos:line="38" pos:column="38">sqlStatistics</name><op:operator pos:line="38" pos:column="51">.</op:operator><name pos:line="38" pos:column="52">QueryExecutionTime</name></name></expr><op:operator pos:line="38" pos:column="70">,</op:operator>
                <expr><name pos:line="39" pos:column="17">connectionOpenTime</name> <op:operator pos:line="39" pos:column="36">=</op:operator> <name><name pos:line="39" pos:column="38">sqlStatistics</name><op:operator pos:line="39" pos:column="51">.</op:operator><name pos:line="39" pos:column="52">ConnectionOpenTime</name></name></expr>
            }</block></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="43" pos:column="9">public</specifier> <name pos:line="43" pos:column="16">void</name></type> <name pos:line="43" pos:column="21">Setup</name><parameter_list pos:line="43" pos:column="26">(<param><decl><type><name pos:line="43" pos:column="27">ITabSetupContext</name></type> <name pos:line="43" pos:column="44">context</name></decl></param>)</parameter_list>
        <block pos:line="44" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="45" pos:column="13">context</name><op:operator pos:line="45" pos:column="20">.</op:operator><name><name pos:line="45" pos:column="21">PersistMessages</name><argument_list pos:line="45" pos:column="36">&lt;<argument><name pos:line="45" pos:column="37">AdoMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="45" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
