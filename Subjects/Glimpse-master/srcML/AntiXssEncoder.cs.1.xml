<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Extensibility\AntiXssEncoder.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">Microsoft</name><op:operator pos:line="1" pos:column="16">.</op:operator><name pos:line="1" pos:column="17">Security</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Application</name></name>;</using>

<namespace pos:line="3" pos:column="1">namespace <name><name pos:line="3" pos:column="11">Glimpse</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">Core</name><op:operator pos:line="3" pos:column="23">.</op:operator><name pos:line="3" pos:column="24">Extensibility</name></name>
<block pos:line="4" pos:column="1">{
    <comment type="line" pos:line="5" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="6" pos:column="5">/// The default &lt;see cref="IHtmlEncoder"/&gt; implementation of Glimpse, which leverages Microsoft's Web Protection Library.</comment>
    <comment type="line" pos:line="7" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="8" pos:column="5">public</specifier> class <name pos:line="8" pos:column="18">AntiXssEncoder</name> <super pos:line="8" pos:column="33">: <name pos:line="8" pos:column="35">IHtmlEncoder</name></super>
    <block pos:line="9" pos:column="5">{
        <comment type="line" pos:line="10" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="11" pos:column="9">/// Encode a given value for use as in an Html attribute.</comment>
        <comment type="line" pos:line="12" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="13" pos:column="9">/// &lt;param name="input"&gt;The input.&lt;/param&gt;</comment>
        <comment type="line" pos:line="14" pos:column="9">/// &lt;returns&gt;</comment>
        <comment type="line" pos:line="15" pos:column="9">/// Encoded result.</comment>
        <comment type="line" pos:line="16" pos:column="9">/// &lt;/returns&gt;</comment>
        <function><type><specifier pos:line="17" pos:column="9">public</specifier> <name pos:line="17" pos:column="16">string</name></type> <name pos:line="17" pos:column="23">HtmlAttributeEncode</name><parameter_list pos:line="17" pos:column="42">(<param><decl><type><name pos:line="17" pos:column="43">string</name></type> <name pos:line="17" pos:column="50">input</name></decl></param>)</parameter_list>
        <block pos:line="18" pos:column="9">{
            <return pos:line="19" pos:column="13">return <expr><call><name><name pos:line="19" pos:column="20">Encoder</name><op:operator pos:line="19" pos:column="27">.</op:operator><name pos:line="19" pos:column="28">HtmlAttributeEncode</name></name><argument_list pos:line="19" pos:column="47">(<argument><expr><name pos:line="19" pos:column="48">input</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
