<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WebForms\Inspector\ViewStatePageStatePersister.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Web</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name><op:operator pos:line="4" pos:column="17">.</op:operator><name pos:line="4" pos:column="18">UI</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Framework</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Glimpse</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">WebForms</name><op:operator pos:line="8" pos:column="27">.</op:operator><name pos:line="8" pos:column="28">Inspector</name></name>
<block pos:line="9" pos:column="1">{
    <class><specifier pos:line="10" pos:column="5">public</specifier> class <name pos:line="10" pos:column="18">ViewStatePageStatePersister</name> <super pos:line="10" pos:column="46">: <name pos:line="10" pos:column="48">HiddenFieldPageStatePersister</name></super>
    <block pos:line="11" pos:column="5">{
        <constructor><specifier pos:line="12" pos:column="9">public</specifier> <name pos:line="12" pos:column="16">ViewStatePageStatePersister</name><parameter_list pos:line="12" pos:column="43">(<param><decl><type><name pos:line="12" pos:column="44">Page</name></type> <name pos:line="12" pos:column="49">page</name></decl></param>, <param><decl><type><name pos:line="12" pos:column="55">PageStatePersister</name></type> <name pos:line="12" pos:column="74">innerPageStatePersister</name></decl></param>)</parameter_list>
            <member_list pos:line="13" pos:column="13">: <call><name pos:line="13" pos:column="15">base</name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">page</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="14" pos:column="9">{
            <expr_stmt><expr><name pos:line="15" pos:column="13">Logger</name> <op:operator pos:line="15" pos:column="20">=</op:operator> <call><name><name pos:line="15" pos:column="22">GlimpseConfiguration</name><op:operator pos:line="15" pos:column="42">.</op:operator><name pos:line="15" pos:column="43">GetLogger</name></name><argument_list pos:line="15" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="16" pos:column="13">InnerPageStatePersister</name> <op:operator pos:line="16" pos:column="37">=</op:operator> <name pos:line="16" pos:column="39">innerPageStatePersister</name></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">private</specifier> <name pos:line="19" pos:column="17">ILogger</name></type> <name pos:line="19" pos:column="25">Logger</name> <block pos:line="19" pos:column="32">{ <function_decl><name pos:line="19" pos:column="34">get</name>;</function_decl> <function_decl><name pos:line="19" pos:column="39">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="21" pos:column="9">private</specifier> <name pos:line="21" pos:column="17">PageStatePersister</name></type> <name pos:line="21" pos:column="36">InnerPageStatePersister</name> <block pos:line="21" pos:column="60">{ <function_decl><name pos:line="21" pos:column="62">get</name>;</function_decl> <function_decl><name pos:line="21" pos:column="67">set</name>;</function_decl> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="23" pos:column="9">public</specifier> <specifier pos:line="23" pos:column="16">override</specifier> <name pos:line="23" pos:column="25">void</name></type> <name pos:line="23" pos:column="30">Save</name><parameter_list pos:line="23" pos:column="34">()</parameter_list>
        <block pos:line="24" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">Logger</name><op:operator pos:line="25" pos:column="19">.</op:operator><name pos:line="25" pos:column="20">Debug</name></name><argument_list pos:line="25" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="25" pos:column="26">"PageStatePersister.Save() being executed - {0}"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="76">HttpContext</name><op:operator pos:line="25" pos:column="87">.</op:operator><name pos:line="25" pos:column="88">Current</name><op:operator pos:line="25" pos:column="95">.</op:operator><name pos:line="25" pos:column="96">Request</name><op:operator pos:line="25" pos:column="103">.</op:operator><name pos:line="25" pos:column="104">RawUrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="27" pos:column="13">var</name></type> <name pos:line="27" pos:column="17">controlTree</name> <init pos:line="27" pos:column="29">= <expr><op:operator pos:line="27" pos:column="31">new</op:operator> <call><name><name pos:line="27" pos:column="35">Dictionary</name><argument_list pos:line="27" pos:column="45">&lt;<argument><name pos:line="27" pos:column="46">string</name></argument>, <argument><name pos:line="27" pos:column="54">Type</name></argument>&gt;</argument_list></name><argument_list pos:line="27" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">controlTree</name><op:operator pos:line="28" pos:column="24">.</op:operator><name pos:line="28" pos:column="25">Add</name></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name><name pos:line="28" pos:column="29">Page</name><op:operator pos:line="28" pos:column="33">.</op:operator><name pos:line="28" pos:column="34">UniqueID</name></name></expr></argument>, <argument><expr><call><name><name pos:line="28" pos:column="44">Page</name><op:operator pos:line="28" pos:column="48">.</op:operator><name pos:line="28" pos:column="49">GetType</name></name><argument_list pos:line="28" pos:column="56">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">GetControlTree</name><argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">controlTree</name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="41">Page</name><op:operator pos:line="29" pos:column="45">.</op:operator><name pos:line="29" pos:column="46">Controls</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">Logger</name><op:operator pos:line="31" pos:column="19">.</op:operator><name pos:line="31" pos:column="20">Debug</name></name><argument_list pos:line="31" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="31" pos:column="26">"ControlTree contains '{0}' controls."</lit:literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="66">controlTree</name><op:operator pos:line="31" pos:column="77">.</op:operator><name pos:line="31" pos:column="78">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">HttpContext</name><op:operator pos:line="33" pos:column="24">.</op:operator><name pos:line="33" pos:column="25">Current</name><op:operator pos:line="33" pos:column="32">.</op:operator><name pos:line="33" pos:column="33">Items</name><op:operator pos:line="33" pos:column="38">.</op:operator><name pos:line="33" pos:column="39">Add</name></name><argument_list pos:line="33" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="33" pos:column="43">"_GlimpseWebFormViewState"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="33" pos:column="71">new</op:operator> <call><name pos:line="33" pos:column="75">Pair</name><argument_list pos:line="33" pos:column="79">(<argument><expr><name pos:line="33" pos:column="80">null</name></expr></argument>, <argument><expr><name pos:line="33" pos:column="86">ViewState</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="34" pos:column="13">HttpContext</name><op:operator pos:line="34" pos:column="24">.</op:operator><name pos:line="34" pos:column="25">Current</name><op:operator pos:line="34" pos:column="32">.</op:operator><name pos:line="34" pos:column="33">Items</name><op:operator pos:line="34" pos:column="38">.</op:operator><name pos:line="34" pos:column="39">Add</name></name><argument_list pos:line="34" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="34" pos:column="43">"_GlimpseWebFormControlTreeType"</lit:literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="77">controlTree</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">InnerPageStatePersister</name> <op:operator pos:line="36" pos:column="41">!=</op:operator> <name pos:line="36" pos:column="44">null</name></expr>)</condition><then pos:line="36" pos:column="49">
            <block pos:line="37" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="38" pos:column="17">Logger</name><op:operator pos:line="38" pos:column="23">.</op:operator><name pos:line="38" pos:column="24">Debug</name></name><argument_list pos:line="38" pos:column="29">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="30">"Inner PageStatePersister.Save() being executed - {0}"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="38" pos:column="86">InnerPageStatePersister</name><op:operator pos:line="38" pos:column="109">.</op:operator><name pos:line="38" pos:column="110">GetType</name></name><argument_list pos:line="38" pos:column="117">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><name><name pos:line="40" pos:column="17">InnerPageStatePersister</name><op:operator pos:line="40" pos:column="40">.</op:operator><name pos:line="40" pos:column="41">ViewState</name></name> <op:operator pos:line="40" pos:column="51">=</op:operator> <name pos:line="40" pos:column="53">ViewState</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="41" pos:column="17">InnerPageStatePersister</name><op:operator pos:line="41" pos:column="40">.</op:operator><name pos:line="41" pos:column="41">ControlState</name></name> <op:operator pos:line="41" pos:column="54">=</op:operator> <name pos:line="41" pos:column="56">ControlState</name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="42" pos:column="17">InnerPageStatePersister</name><op:operator pos:line="42" pos:column="40">.</op:operator><name pos:line="42" pos:column="41">Save</name></name><argument_list pos:line="42" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="44" pos:column="13">else
            <block pos:line="45" pos:column="13">{
                <comment type="line" pos:line="46" pos:column="17">// Only want to run ours if we don't have an inner</comment>
                <expr_stmt><expr><call><name><name pos:line="47" pos:column="17">base</name><op:operator pos:line="47" pos:column="21">.</op:operator><name pos:line="47" pos:column="22">Save</name></name><argument_list pos:line="47" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="51" pos:column="9">public</specifier> <specifier pos:line="51" pos:column="16">override</specifier> <name pos:line="51" pos:column="25">void</name></type> <name pos:line="51" pos:column="30">Load</name><parameter_list pos:line="51" pos:column="34">()</parameter_list>
        <block pos:line="52" pos:column="9">{
            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><name pos:line="53" pos:column="17">InnerPageStatePersister</name> <op:operator pos:line="53" pos:column="41">!=</op:operator> <name pos:line="53" pos:column="44">null</name></expr>)</condition><then pos:line="53" pos:column="49">
            <block pos:line="54" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="55" pos:column="17">Logger</name><op:operator pos:line="55" pos:column="23">.</op:operator><name pos:line="55" pos:column="24">Debug</name></name><argument_list pos:line="55" pos:column="29">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="30">"Inner PageStatePersister.Load() being executed - {0}"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="55" pos:column="86">InnerPageStatePersister</name><op:operator pos:line="55" pos:column="109">.</op:operator><name pos:line="55" pos:column="110">GetType</name></name><argument_list pos:line="55" pos:column="117">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name><name pos:line="57" pos:column="17">InnerPageStatePersister</name><op:operator pos:line="57" pos:column="40">.</op:operator><name pos:line="57" pos:column="41">Load</name></name><argument_list pos:line="57" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="58" pos:column="17">ViewState</name> <op:operator pos:line="58" pos:column="27">=</op:operator> <name><name pos:line="58" pos:column="29">InnerPageStatePersister</name><op:operator pos:line="58" pos:column="52">.</op:operator><name pos:line="58" pos:column="53">ViewState</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="59" pos:column="17">ControlState</name> <op:operator pos:line="59" pos:column="30">=</op:operator> <name><name pos:line="59" pos:column="32">InnerPageStatePersister</name><op:operator pos:line="59" pos:column="55">.</op:operator><name pos:line="59" pos:column="56">ControlState</name></name></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="61" pos:column="13">else
            <block pos:line="62" pos:column="13">{
                <comment type="line" pos:line="63" pos:column="17">// Only want to run ours if we don't have an inner</comment>
                <expr_stmt><expr><call><name><name pos:line="64" pos:column="17">base</name><op:operator pos:line="64" pos:column="21">.</op:operator><name pos:line="64" pos:column="22">Load</name></name><argument_list pos:line="64" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if> 
        }</block></function>

        <function><type><specifier pos:line="68" pos:column="9">private</specifier> <name pos:line="68" pos:column="17">void</name></type> <name pos:line="68" pos:column="22">GetControlTree</name><parameter_list pos:line="68" pos:column="36">(<param><decl><type><name><name pos:line="68" pos:column="37">Dictionary</name><argument_list pos:line="68" pos:column="47">&lt;<argument><name pos:line="68" pos:column="48">string</name></argument>, <argument><name pos:line="68" pos:column="56">Type</name></argument>&gt;</argument_list></name></type> <name pos:line="68" pos:column="62">results</name></decl></param>, <param><decl><type><name pos:line="68" pos:column="71">ControlCollection</name></type> <name pos:line="68" pos:column="89">controls</name></decl></param>)</parameter_list>
        <block pos:line="69" pos:column="9">{
            <foreach pos:line="70" pos:column="13">foreach (<init><decl><type><name pos:line="70" pos:column="22">Control</name></type> <name pos:line="70" pos:column="30">control</name> <range pos:line="70" pos:column="38">in <expr><name pos:line="70" pos:column="41">controls</name></expr></range></decl></init>)
            <block pos:line="71" pos:column="13">{ 
                <expr_stmt><expr><call><name><name pos:line="72" pos:column="17">results</name><op:operator pos:line="72" pos:column="24">.</op:operator><name pos:line="72" pos:column="25">Add</name></name><argument_list pos:line="72" pos:column="28">(<argument><expr><name><name pos:line="72" pos:column="29">control</name><op:operator pos:line="72" pos:column="36">.</op:operator><name pos:line="72" pos:column="37">UniqueID</name></name></expr></argument>, <argument><expr><call><name><name pos:line="72" pos:column="47">control</name><op:operator pos:line="72" pos:column="54">.</op:operator><name pos:line="72" pos:column="55">GetType</name></name><argument_list pos:line="72" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
                <if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><call><name><name pos:line="73" pos:column="21">control</name><op:operator pos:line="73" pos:column="28">.</op:operator><name pos:line="73" pos:column="29">HasControls</name></name><argument_list pos:line="73" pos:column="40">()</argument_list></call></expr>)</condition><then pos:line="73" pos:column="43">
                <block pos:line="74" pos:column="17">{
                    <expr_stmt><expr><call><name pos:line="75" pos:column="21">GetControlTree</name><argument_list pos:line="75" pos:column="35">(<argument><expr><name pos:line="75" pos:column="36">results</name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="45">control</name><op:operator pos:line="75" pos:column="52">.</op:operator><name pos:line="75" pos:column="53">Controls</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>   
            }</block></foreach> 
        }</block></function>
    }</block></class>
}</block></namespace></unit>
