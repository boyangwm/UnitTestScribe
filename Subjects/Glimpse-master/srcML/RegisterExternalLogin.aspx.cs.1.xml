<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WebForms.WingTip.Sample\Account\RegisterExternalLogin.aspx.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Web</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Web</name><op:operator pos:line="3" pos:column="17">.</op:operator><name pos:line="3" pos:column="18">Security</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">DotNetOpenAuth</name><op:operator pos:line="4" pos:column="21">.</op:operator><name pos:line="4" pos:column="22">AspNet</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Microsoft</name><op:operator pos:line="5" pos:column="16">.</op:operator><name pos:line="5" pos:column="17">AspNet</name><op:operator pos:line="5" pos:column="23">.</op:operator><name pos:line="5" pos:column="24">Membership</name><op:operator pos:line="5" pos:column="34">.</op:operator><name pos:line="5" pos:column="35">OpenAuth</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">WingtipToys</name><op:operator pos:line="7" pos:column="22">.</op:operator><name pos:line="7" pos:column="23">Account</name></name>
<block pos:line="8" pos:column="1">{
    <class><specifier pos:line="9" pos:column="5">public</specifier> <specifier pos:line="9" pos:column="12">partial</specifier> class <name pos:line="9" pos:column="26">RegisterExternalLogin</name> <super pos:line="9" pos:column="48">: <name><name pos:line="9" pos:column="50">System</name><op:operator pos:line="9" pos:column="56">.</op:operator><name pos:line="9" pos:column="57">Web</name><op:operator pos:line="9" pos:column="60">.</op:operator><name pos:line="9" pos:column="61">UI</name><op:operator pos:line="9" pos:column="63">.</op:operator><name pos:line="9" pos:column="64">Page</name></name></super>
    <block pos:line="10" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">protected</specifier> <name pos:line="11" pos:column="19">string</name></type> <name pos:line="11" pos:column="26">ProviderName</name>
        <block pos:line="12" pos:column="9">{
            <function><name pos:line="13" pos:column="13">get</name> <block pos:line="13" pos:column="17">{ <return pos:line="13" pos:column="19">return <expr><op:operator pos:line="13" pos:column="26">(</op:operator><name pos:line="13" pos:column="27">string</name><op:operator pos:line="13" pos:column="33">)</op:operator><name><name pos:line="13" pos:column="34">ViewState</name><index pos:line="13" pos:column="43">[<expr><lit:literal type="string" pos:line="13" pos:column="44">"ProviderName"</lit:literal></expr>]</index></name> <op:operator pos:line="13" pos:column="60">??</op:operator> <name><name pos:line="13" pos:column="63">String</name><op:operator pos:line="13" pos:column="69">.</op:operator><name pos:line="13" pos:column="70">Empty</name></name></expr>;</return> }</block></function>
            <function><specifier pos:line="14" pos:column="13">private</specifier> <name pos:line="14" pos:column="21">set</name> <block pos:line="14" pos:column="25">{ <expr_stmt><expr><name><name pos:line="14" pos:column="27">ViewState</name><index pos:line="14" pos:column="36">[<expr><lit:literal type="string" pos:line="14" pos:column="37">"ProviderName"</lit:literal></expr>]</index></name> <op:operator pos:line="14" pos:column="53">=</op:operator> <name pos:line="14" pos:column="55">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">protected</specifier> <name pos:line="17" pos:column="19">string</name></type> <name pos:line="17" pos:column="26">ProviderDisplayName</name>
        <block pos:line="18" pos:column="9">{
            <function><name pos:line="19" pos:column="13">get</name> <block pos:line="19" pos:column="17">{ <return pos:line="19" pos:column="19">return <expr><op:operator pos:line="19" pos:column="26">(</op:operator><name pos:line="19" pos:column="27">string</name><op:operator pos:line="19" pos:column="33">)</op:operator><name><name pos:line="19" pos:column="34">ViewState</name><index pos:line="19" pos:column="43">[<expr><lit:literal type="string" pos:line="19" pos:column="44">"ProviderDisplayName"</lit:literal></expr>]</index></name> <op:operator pos:line="19" pos:column="67">??</op:operator> <name><name pos:line="19" pos:column="70">String</name><op:operator pos:line="19" pos:column="76">.</op:operator><name pos:line="19" pos:column="77">Empty</name></name></expr>;</return> }</block></function>
            <function><specifier pos:line="20" pos:column="13">private</specifier> <name pos:line="20" pos:column="21">set</name> <block pos:line="20" pos:column="25">{ <expr_stmt><expr><name><name pos:line="20" pos:column="27">ViewState</name><index pos:line="20" pos:column="36">[<expr><lit:literal type="string" pos:line="20" pos:column="37">"ProviderDisplayName"</lit:literal></expr>]</index></name> <op:operator pos:line="20" pos:column="60">=</op:operator> <name pos:line="20" pos:column="62">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="23" pos:column="9">protected</specifier> <name pos:line="23" pos:column="19">string</name></type> <name pos:line="23" pos:column="26">ProviderUserId</name>
        <block pos:line="24" pos:column="9">{
            <function><name pos:line="25" pos:column="13">get</name> <block pos:line="25" pos:column="17">{ <return pos:line="25" pos:column="19">return <expr><op:operator pos:line="25" pos:column="26">(</op:operator><name pos:line="25" pos:column="27">string</name><op:operator pos:line="25" pos:column="33">)</op:operator><name><name pos:line="25" pos:column="34">ViewState</name><index pos:line="25" pos:column="43">[<expr><lit:literal type="string" pos:line="25" pos:column="44">"ProviderUserId"</lit:literal></expr>]</index></name> <op:operator pos:line="25" pos:column="62">??</op:operator> <name><name pos:line="25" pos:column="65">String</name><op:operator pos:line="25" pos:column="71">.</op:operator><name pos:line="25" pos:column="72">Empty</name></name></expr>;</return> }</block></function>
            <function><specifier pos:line="26" pos:column="13">private</specifier> <name pos:line="26" pos:column="21">set</name> <block pos:line="26" pos:column="25">{ <expr_stmt><expr><name><name pos:line="26" pos:column="27">ViewState</name><index pos:line="26" pos:column="36">[<expr><lit:literal type="string" pos:line="26" pos:column="37">"ProviderUserId"</lit:literal></expr>]</index></name> <op:operator pos:line="26" pos:column="55">=</op:operator> <name pos:line="26" pos:column="57">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="29" pos:column="9">protected</specifier> <name pos:line="29" pos:column="19">string</name></type> <name pos:line="29" pos:column="26">ProviderUserName</name>
        <block pos:line="30" pos:column="9">{
            <function><name pos:line="31" pos:column="13">get</name> <block pos:line="31" pos:column="17">{ <return pos:line="31" pos:column="19">return <expr><op:operator pos:line="31" pos:column="26">(</op:operator><name pos:line="31" pos:column="27">string</name><op:operator pos:line="31" pos:column="33">)</op:operator><name><name pos:line="31" pos:column="34">ViewState</name><index pos:line="31" pos:column="43">[<expr><lit:literal type="string" pos:line="31" pos:column="44">"ProviderUserName"</lit:literal></expr>]</index></name> <op:operator pos:line="31" pos:column="64">??</op:operator> <name><name pos:line="31" pos:column="67">String</name><op:operator pos:line="31" pos:column="73">.</op:operator><name pos:line="31" pos:column="74">Empty</name></name></expr>;</return> }</block></function>
            <function><specifier pos:line="32" pos:column="13">private</specifier> <name pos:line="32" pos:column="21">set</name> <block pos:line="32" pos:column="25">{ <expr_stmt><expr><name><name pos:line="32" pos:column="27">ViewState</name><index pos:line="32" pos:column="36">[<expr><lit:literal type="string" pos:line="32" pos:column="37">"ProviderUserName"</lit:literal></expr>]</index></name> <op:operator pos:line="32" pos:column="57">=</op:operator> <name pos:line="32" pos:column="59">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="35" pos:column="9">protected</specifier> <name pos:line="35" pos:column="19">void</name></type> <name pos:line="35" pos:column="24">Page_Load</name><parameter_list pos:line="35" pos:column="33">()</parameter_list>
        <block pos:line="36" pos:column="9">{
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><op:operator pos:line="37" pos:column="17">!</op:operator><name pos:line="37" pos:column="18">IsPostBack</name></expr>)</condition><then pos:line="37" pos:column="29">
            <block pos:line="38" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="39" pos:column="17">ProcessProviderResult</name><argument_list pos:line="39" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="43" pos:column="9">protected</specifier> <name pos:line="43" pos:column="19">void</name></type> <name pos:line="43" pos:column="24">logIn_Click</name><parameter_list pos:line="43" pos:column="35">(<param><decl><type><name pos:line="43" pos:column="36">object</name></type> <name pos:line="43" pos:column="43">sender</name></decl></param>, <param><decl><type><name pos:line="43" pos:column="51">EventArgs</name></type> <name pos:line="43" pos:column="61">e</name></decl></param>)</parameter_list>
        <block pos:line="44" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">CreateAndLoginUser</name><argument_list pos:line="45" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="48" pos:column="9">protected</specifier> <name pos:line="48" pos:column="19">void</name></type> <name pos:line="48" pos:column="24">cancel_Click</name><parameter_list pos:line="48" pos:column="36">(<param><decl><type><name pos:line="48" pos:column="37">object</name></type> <name pos:line="48" pos:column="44">sender</name></decl></param>, <param><decl><type><name pos:line="48" pos:column="52">EventArgs</name></type> <name pos:line="48" pos:column="62">e</name></decl></param>)</parameter_list>
        <block pos:line="49" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">RedirectToReturnUrl</name><argument_list pos:line="50" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="53" pos:column="9">private</specifier> <name pos:line="53" pos:column="17">void</name></type> <name pos:line="53" pos:column="22">ProcessProviderResult</name><parameter_list pos:line="53" pos:column="43">()</parameter_list>
        <block pos:line="54" pos:column="9">{
            <comment type="line" pos:line="55" pos:column="13">// Process the result from an auth provider in the request</comment>
            <expr_stmt><expr><name pos:line="56" pos:column="13">ProviderName</name> <op:operator pos:line="56" pos:column="26">=</op:operator> <call><name><name pos:line="56" pos:column="28">OpenAuth</name><op:operator pos:line="56" pos:column="36">.</op:operator><name pos:line="56" pos:column="37">GetProviderNameFromCurrentRequest</name></name><argument_list pos:line="56" pos:column="70">()</argument_list></call></expr>;</expr_stmt>

            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><call><name><name pos:line="58" pos:column="17">String</name><op:operator pos:line="58" pos:column="23">.</op:operator><name pos:line="58" pos:column="24">IsNullOrEmpty</name></name><argument_list pos:line="58" pos:column="37">(<argument><expr><name pos:line="58" pos:column="38">ProviderName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="58" pos:column="52">
            <block pos:line="59" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="60" pos:column="17">Response</name><op:operator pos:line="60" pos:column="25">.</op:operator><name pos:line="60" pos:column="26">Redirect</name></name><argument_list pos:line="60" pos:column="34">(<argument><expr><name><name pos:line="60" pos:column="35">FormsAuthentication</name><op:operator pos:line="60" pos:column="54">.</op:operator><name pos:line="60" pos:column="55">LoginUrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <comment type="line" pos:line="63" pos:column="13">// Build the redirect url for OpenAuth verification</comment>
            <decl_stmt><decl><type><name pos:line="64" pos:column="13">var</name></type> <name pos:line="64" pos:column="17">redirectUrl</name> <init pos:line="64" pos:column="29">= <expr><lit:literal type="string" pos:line="64" pos:column="31">"~/Account/RegisterExternalLogin.aspx"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="65" pos:column="13">var</name></type> <name pos:line="65" pos:column="17">returnUrl</name> <init pos:line="65" pos:column="27">= <expr><name><name pos:line="65" pos:column="29">Request</name><op:operator pos:line="65" pos:column="36">.</op:operator><name pos:line="65" pos:column="37">QueryString</name><index pos:line="65" pos:column="48">[<expr><lit:literal type="string" pos:line="65" pos:column="49">"ReturnUrl"</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><op:operator pos:line="66" pos:column="17">!</op:operator><call><name><name pos:line="66" pos:column="18">String</name><op:operator pos:line="66" pos:column="24">.</op:operator><name pos:line="66" pos:column="25">IsNullOrEmpty</name></name><argument_list pos:line="66" pos:column="38">(<argument><expr><name pos:line="66" pos:column="39">returnUrl</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="66" pos:column="50">
            <block pos:line="67" pos:column="13">{
                <expr_stmt><expr><name pos:line="68" pos:column="17">redirectUrl</name> <op:operator pos:line="68" pos:column="29">+=</op:operator> <lit:literal type="string" pos:line="68" pos:column="32">"?ReturnUrl="</lit:literal> <op:operator pos:line="68" pos:column="46">+</op:operator> <call><name><name pos:line="68" pos:column="48">HttpUtility</name><op:operator pos:line="68" pos:column="59">.</op:operator><name pos:line="68" pos:column="60">UrlEncode</name></name><argument_list pos:line="68" pos:column="69">(<argument><expr><name pos:line="68" pos:column="70">returnUrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <comment type="line" pos:line="71" pos:column="13">// Verify the OpenAuth payload</comment>
            <decl_stmt><decl><type><name pos:line="72" pos:column="13">var</name></type> <name pos:line="72" pos:column="17">authResult</name> <init pos:line="72" pos:column="28">= <expr><call><name><name pos:line="72" pos:column="30">OpenAuth</name><op:operator pos:line="72" pos:column="38">.</op:operator><name pos:line="72" pos:column="39">VerifyAuthentication</name></name><argument_list pos:line="72" pos:column="59">(<argument><expr><name pos:line="72" pos:column="60">redirectUrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name pos:line="73" pos:column="13">ProviderDisplayName</name> <op:operator pos:line="73" pos:column="33">=</op:operator> <call><name><name pos:line="73" pos:column="35">OpenAuth</name><op:operator pos:line="73" pos:column="43">.</op:operator><name pos:line="73" pos:column="44">GetProviderDisplayName</name></name><argument_list pos:line="73" pos:column="66">(<argument><expr><name pos:line="73" pos:column="67">ProviderName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="74" pos:column="13">if <condition pos:line="74" pos:column="16">(<expr><op:operator pos:line="74" pos:column="17">!</op:operator><name><name pos:line="74" pos:column="18">authResult</name><op:operator pos:line="74" pos:column="28">.</op:operator><name pos:line="74" pos:column="29">IsSuccessful</name></name></expr>)</condition><then pos:line="74" pos:column="42">
            <block pos:line="75" pos:column="13">{
                <expr_stmt><expr><name pos:line="76" pos:column="17">Title</name> <op:operator pos:line="76" pos:column="23">=</op:operator> <lit:literal type="string" pos:line="76" pos:column="25">"External login failed"</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="77" pos:column="17">userNameForm</name><op:operator pos:line="77" pos:column="29">.</op:operator><name pos:line="77" pos:column="30">Visible</name></name> <op:operator pos:line="77" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="77" pos:column="40">false</lit:literal></expr>;</expr_stmt>

                <expr_stmt><expr><call><name><name pos:line="79" pos:column="17">ModelState</name><op:operator pos:line="79" pos:column="27">.</op:operator><name pos:line="79" pos:column="28">AddModelError</name></name><argument_list pos:line="79" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="79" pos:column="42">"Provider"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="79" pos:column="54">String</name><op:operator pos:line="79" pos:column="60">.</op:operator><name pos:line="79" pos:column="61">Format</name></name><argument_list pos:line="79" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="79" pos:column="68">"External login {0} failed."</lit:literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="98">ProviderDisplayName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:line="81" pos:column="17">// To view this error, enable page tracing in web.config (&lt;system.web&gt;&lt;trace enabled="true"/&gt;&lt;/system.web&gt;) and visit ~/Trace.axd</comment>
                <expr_stmt><expr><call><name><name pos:line="82" pos:column="17">Trace</name><op:operator pos:line="82" pos:column="22">.</op:operator><name pos:line="82" pos:column="23">Warn</name></name><argument_list pos:line="82" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="82" pos:column="28">"OpenAuth"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="82" pos:column="40">String</name><op:operator pos:line="82" pos:column="46">.</op:operator><name pos:line="82" pos:column="47">Format</name></name><argument_list pos:line="82" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="82" pos:column="54">"There was an error verifying authentication with {0})"</lit:literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="111">ProviderDisplayName</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="133">authResult</name><op:operator pos:line="82" pos:column="143">.</op:operator><name pos:line="82" pos:column="144">Error</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="83" pos:column="17">return;</return>
            }</block></then></if>

            <comment type="line" pos:line="86" pos:column="13">// User has logged in with provider successfully</comment>
            <comment type="line" pos:line="87" pos:column="13">// Check if user is already registered locally</comment>
            <if pos:line="88" pos:column="13">if <condition pos:line="88" pos:column="16">(<expr><call><name><name pos:line="88" pos:column="17">OpenAuth</name><op:operator pos:line="88" pos:column="25">.</op:operator><name pos:line="88" pos:column="26">Login</name></name><argument_list pos:line="88" pos:column="31">(<argument><expr><name><name pos:line="88" pos:column="32">authResult</name><op:operator pos:line="88" pos:column="42">.</op:operator><name pos:line="88" pos:column="43">Provider</name></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="53">authResult</name><op:operator pos:line="88" pos:column="63">.</op:operator><name pos:line="88" pos:column="64">ProviderUserId</name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="80">createPersistentCookie</name><op:operator pos:line="88" pos:column="102">:</op:operator> <lit:literal type="boolean" pos:line="88" pos:column="104">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="88" pos:column="111">
            <block pos:line="89" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="90" pos:column="17">RedirectToReturnUrl</name><argument_list pos:line="90" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <comment type="line" pos:line="93" pos:column="13">// Store the provider details in ViewState</comment>
            <expr_stmt><expr><name pos:line="94" pos:column="13">ProviderName</name> <op:operator pos:line="94" pos:column="26">=</op:operator> <name><name pos:line="94" pos:column="28">authResult</name><op:operator pos:line="94" pos:column="38">.</op:operator><name pos:line="94" pos:column="39">Provider</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="95" pos:column="13">ProviderUserId</name> <op:operator pos:line="95" pos:column="28">=</op:operator> <name><name pos:line="95" pos:column="30">authResult</name><op:operator pos:line="95" pos:column="40">.</op:operator><name pos:line="95" pos:column="41">ProviderUserId</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="96" pos:column="13">ProviderUserName</name> <op:operator pos:line="96" pos:column="30">=</op:operator> <name><name pos:line="96" pos:column="32">authResult</name><op:operator pos:line="96" pos:column="42">.</op:operator><name pos:line="96" pos:column="43">UserName</name></name></expr>;</expr_stmt>

            <comment type="line" pos:line="98" pos:column="13">// Strip the query string from action</comment>
            <expr_stmt><expr><name><name pos:line="99" pos:column="13">Form</name><op:operator pos:line="99" pos:column="17">.</op:operator><name pos:line="99" pos:column="18">Action</name></name> <op:operator pos:line="99" pos:column="25">=</op:operator> <call><name pos:line="99" pos:column="27">ResolveUrl</name><argument_list pos:line="99" pos:column="37">(<argument><expr><name pos:line="99" pos:column="38">redirectUrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if pos:line="101" pos:column="13">if <condition pos:line="101" pos:column="16">(<expr><name><name pos:line="101" pos:column="17">User</name><op:operator pos:line="101" pos:column="21">.</op:operator><name pos:line="101" pos:column="22">Identity</name><op:operator pos:line="101" pos:column="30">.</op:operator><name pos:line="101" pos:column="31">IsAuthenticated</name></name></expr>)</condition><then pos:line="101" pos:column="47">
            <block pos:line="102" pos:column="13">{
                <comment type="line" pos:line="103" pos:column="17">// User is already authenticated, add the external login and redirect to return url</comment>
                <expr_stmt><expr><call><name><name pos:line="104" pos:column="17">OpenAuth</name><op:operator pos:line="104" pos:column="25">.</op:operator><name pos:line="104" pos:column="26">AddAccountToExistingUser</name></name><argument_list pos:line="104" pos:column="50">(<argument><expr><name pos:line="104" pos:column="51">ProviderName</name></expr></argument>, <argument><expr><name pos:line="104" pos:column="65">ProviderUserId</name></expr></argument>, <argument><expr><name pos:line="104" pos:column="81">ProviderUserName</name></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="99">User</name><op:operator pos:line="104" pos:column="103">.</op:operator><name pos:line="104" pos:column="104">Identity</name><op:operator pos:line="104" pos:column="112">.</op:operator><name pos:line="104" pos:column="113">Name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="105" pos:column="17">RedirectToReturnUrl</name><argument_list pos:line="105" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="107" pos:column="13">else
            <block pos:line="108" pos:column="13">{
                <comment type="line" pos:line="109" pos:column="17">// User is new, ask for their desired membership name</comment>
                <expr_stmt><expr><name><name pos:line="110" pos:column="17">userName</name><op:operator pos:line="110" pos:column="25">.</op:operator><name pos:line="110" pos:column="26">Text</name></name> <op:operator pos:line="110" pos:column="31">=</op:operator> <name><name pos:line="110" pos:column="33">authResult</name><op:operator pos:line="110" pos:column="43">.</op:operator><name pos:line="110" pos:column="44">UserName</name></name></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="114" pos:column="9">private</specifier> <name pos:line="114" pos:column="17">void</name></type> <name pos:line="114" pos:column="22">CreateAndLoginUser</name><parameter_list pos:line="114" pos:column="40">()</parameter_list>
        <block pos:line="115" pos:column="9">{
            <if pos:line="116" pos:column="13">if <condition pos:line="116" pos:column="16">(<expr><op:operator pos:line="116" pos:column="17">!</op:operator><name pos:line="116" pos:column="18">IsValid</name></expr>)</condition><then pos:line="116" pos:column="26">
            <block pos:line="117" pos:column="13">{
                <return pos:line="118" pos:column="17">return;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="121" pos:column="13">var</name></type> <name pos:line="121" pos:column="17">createResult</name> <init pos:line="121" pos:column="30">= <expr><call><name><name pos:line="121" pos:column="32">OpenAuth</name><op:operator pos:line="121" pos:column="40">.</op:operator><name pos:line="121" pos:column="41">CreateUser</name></name><argument_list pos:line="121" pos:column="51">(<argument><expr><name pos:line="121" pos:column="52">ProviderName</name></expr></argument>, <argument><expr><name pos:line="121" pos:column="66">ProviderUserId</name></expr></argument>, <argument><expr><name pos:line="121" pos:column="82">ProviderUserName</name></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="100">userName</name><op:operator pos:line="121" pos:column="108">.</op:operator><name pos:line="121" pos:column="109">Text</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="122" pos:column="13">if <condition pos:line="122" pos:column="16">(<expr><op:operator pos:line="122" pos:column="17">!</op:operator><name><name pos:line="122" pos:column="18">createResult</name><op:operator pos:line="122" pos:column="30">.</op:operator><name pos:line="122" pos:column="31">IsSuccessful</name></name></expr>)</condition><then pos:line="122" pos:column="44">
            <block pos:line="123" pos:column="13">{

                <expr_stmt><expr><call><name><name pos:line="125" pos:column="17">ModelState</name><op:operator pos:line="125" pos:column="27">.</op:operator><name pos:line="125" pos:column="28">AddModelError</name></name><argument_list pos:line="125" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="125" pos:column="42">"UserName"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="54">createResult</name><op:operator pos:line="125" pos:column="66">.</op:operator><name pos:line="125" pos:column="67">ErrorMessage</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            }</block></then>
            <else pos:line="128" pos:column="13">else
            <block pos:line="129" pos:column="13">{
                <comment type="line" pos:line="130" pos:column="17">// User created &amp; associated OK</comment>
                <if pos:line="131" pos:column="17">if <condition pos:line="131" pos:column="20">(<expr><call><name><name pos:line="131" pos:column="21">OpenAuth</name><op:operator pos:line="131" pos:column="29">.</op:operator><name pos:line="131" pos:column="30">Login</name></name><argument_list pos:line="131" pos:column="35">(<argument><expr><name pos:line="131" pos:column="36">ProviderName</name></expr></argument>, <argument><expr><name pos:line="131" pos:column="50">ProviderUserId</name></expr></argument>, <argument><expr><name pos:line="131" pos:column="66">createPersistentCookie</name><op:operator pos:line="131" pos:column="88">:</op:operator> <lit:literal type="boolean" pos:line="131" pos:column="90">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="131" pos:column="97">
                <block pos:line="132" pos:column="17">{
                    <expr_stmt><expr><call><name pos:line="133" pos:column="21">RedirectToReturnUrl</name><argument_list pos:line="133" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="138" pos:column="9">private</specifier> <name pos:line="138" pos:column="17">void</name></type> <name pos:line="138" pos:column="22">RedirectToReturnUrl</name><parameter_list pos:line="138" pos:column="41">()</parameter_list>
        <block pos:line="139" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="140" pos:column="13">var</name></type> <name pos:line="140" pos:column="17">returnUrl</name> <init pos:line="140" pos:column="27">= <expr><name><name pos:line="140" pos:column="29">Request</name><op:operator pos:line="140" pos:column="36">.</op:operator><name pos:line="140" pos:column="37">QueryString</name><index pos:line="140" pos:column="48">[<expr><lit:literal type="string" pos:line="140" pos:column="49">"ReturnUrl"</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if pos:line="141" pos:column="13">if <condition pos:line="141" pos:column="16">(<expr><op:operator pos:line="141" pos:column="17">!</op:operator><call><name><name pos:line="141" pos:column="18">String</name><op:operator pos:line="141" pos:column="24">.</op:operator><name pos:line="141" pos:column="25">IsNullOrEmpty</name></name><argument_list pos:line="141" pos:column="38">(<argument><expr><name pos:line="141" pos:column="39">returnUrl</name></expr></argument>)</argument_list></call> <op:operator pos:line="141" pos:column="50">&amp;&amp;</op:operator> <call><name><name pos:line="141" pos:column="53">OpenAuth</name><op:operator pos:line="141" pos:column="61">.</op:operator><name pos:line="141" pos:column="62">IsLocalUrl</name></name><argument_list pos:line="141" pos:column="72">(<argument><expr><name pos:line="141" pos:column="73">returnUrl</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="141" pos:column="84">
            <block pos:line="142" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="143" pos:column="17">Response</name><op:operator pos:line="143" pos:column="25">.</op:operator><name pos:line="143" pos:column="26">Redirect</name></name><argument_list pos:line="143" pos:column="34">(<argument><expr><name pos:line="143" pos:column="35">returnUrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="145" pos:column="13">else
            <block pos:line="146" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="147" pos:column="17">Response</name><op:operator pos:line="147" pos:column="25">.</op:operator><name pos:line="147" pos:column="26">Redirect</name></name><argument_list pos:line="147" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="147" pos:column="35">"~/"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
