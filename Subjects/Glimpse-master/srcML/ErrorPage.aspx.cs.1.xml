<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WebForms.WingTip.Sample\ErrorPage.aspx.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Web</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">UI</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Web</name><op:operator pos:line="6" pos:column="17">.</op:operator><name pos:line="6" pos:column="18">UI</name><op:operator pos:line="6" pos:column="20">.</op:operator><name pos:line="6" pos:column="21">WebControls</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">WingtipToys</name><op:operator pos:line="7" pos:column="18">.</op:operator><name pos:line="7" pos:column="19">Logic</name></name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name pos:line="9" pos:column="11">WingtipToys</name>
<block pos:line="10" pos:column="1">{
    <class><specifier pos:line="11" pos:column="5">public</specifier> <specifier pos:line="11" pos:column="12">partial</specifier> class <name pos:line="11" pos:column="26">ErrorPage</name> <super pos:line="11" pos:column="36">: <name><name pos:line="11" pos:column="38">System</name><op:operator pos:line="11" pos:column="44">.</op:operator><name pos:line="11" pos:column="45">Web</name><op:operator pos:line="11" pos:column="48">.</op:operator><name pos:line="11" pos:column="49">UI</name><op:operator pos:line="11" pos:column="51">.</op:operator><name pos:line="11" pos:column="52">Page</name></name></super>
    <block pos:line="12" pos:column="5">{
        <function><type><specifier pos:line="13" pos:column="9">protected</specifier> <name pos:line="13" pos:column="19">void</name></type> <name pos:line="13" pos:column="24">Page_Load</name><parameter_list pos:line="13" pos:column="33">(<param><decl><type><name pos:line="13" pos:column="34">object</name></type> <name pos:line="13" pos:column="41">sender</name></decl></param>, <param><decl><type><name pos:line="13" pos:column="49">EventArgs</name></type> <name pos:line="13" pos:column="59">e</name></decl></param>)</parameter_list>
        <block pos:line="14" pos:column="9">{
            <comment type="line" pos:line="15" pos:column="13">// Create safe error messages.</comment>
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">string</name></type> <name pos:line="16" pos:column="20">generalErrorMsg</name> <init pos:line="16" pos:column="36">= <expr><lit:literal type="string" pos:line="16" pos:column="38">"A problem has occurred on this web site. Please try again. "</lit:literal> <op:operator pos:line="16" pos:column="100">+</op:operator>
                <lit:literal type="string" pos:line="17" pos:column="17">"If this error continues, please contact support."</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">string</name></type> <name pos:line="18" pos:column="20">httpErrorMsg</name> <init pos:line="18" pos:column="33">= <expr><lit:literal type="string" pos:line="18" pos:column="35">"An HTTP error occurred. Page Not found. Please try again."</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="19" pos:column="13">string</name></type> <name pos:line="19" pos:column="20">unhandledErrorMsg</name> <init pos:line="19" pos:column="38">= <expr><lit:literal type="string" pos:line="19" pos:column="40">"The error was unhandled by application code."</lit:literal></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="21" pos:column="13">// Display safe error message.</comment>
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">FriendlyErrorMsg</name><op:operator pos:line="22" pos:column="29">.</op:operator><name pos:line="22" pos:column="30">Text</name></name> <op:operator pos:line="22" pos:column="35">=</op:operator> <name pos:line="22" pos:column="37">generalErrorMsg</name></expr>;</expr_stmt>

            <comment type="line" pos:line="24" pos:column="13">// Determine where error was handled.</comment>
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">string</name></type> <name pos:line="25" pos:column="20">errorHandler</name> <init pos:line="25" pos:column="33">= <expr><name><name pos:line="25" pos:column="35">Request</name><op:operator pos:line="25" pos:column="42">.</op:operator><name pos:line="25" pos:column="43">QueryString</name><index pos:line="25" pos:column="54">[<expr><lit:literal type="string" pos:line="25" pos:column="55">"handler"</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">errorHandler</name> <op:operator pos:line="26" pos:column="30">==</op:operator> <name pos:line="26" pos:column="33">null</name></expr>)</condition><then pos:line="26" pos:column="38">
            <block pos:line="27" pos:column="13">{
                <expr_stmt><expr><name pos:line="28" pos:column="17">errorHandler</name> <op:operator pos:line="28" pos:column="30">=</op:operator> <lit:literal type="string" pos:line="28" pos:column="32">"Error Page"</lit:literal></expr>;</expr_stmt>
            }</block></then></if>

            <comment type="line" pos:line="31" pos:column="13">// Get the last error from the server.</comment>
            <decl_stmt><decl><type><name pos:line="32" pos:column="13">Exception</name></type> <name pos:line="32" pos:column="23">ex</name> <init pos:line="32" pos:column="26">= <expr><call><name><name pos:line="32" pos:column="28">Server</name><op:operator pos:line="32" pos:column="34">.</op:operator><name pos:line="32" pos:column="35">GetLastError</name></name><argument_list pos:line="32" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="34" pos:column="13">// Get the error number passed as a querystring value.</comment>
            <decl_stmt><decl><type><name pos:line="35" pos:column="13">string</name></type> <name pos:line="35" pos:column="20">errorMsg</name> <init pos:line="35" pos:column="29">= <expr><name><name pos:line="35" pos:column="31">Request</name><op:operator pos:line="35" pos:column="38">.</op:operator><name pos:line="35" pos:column="39">QueryString</name><index pos:line="35" pos:column="50">[<expr><lit:literal type="string" pos:line="35" pos:column="51">"msg"</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">errorMsg</name> <op:operator pos:line="36" pos:column="26">==</op:operator> <lit:literal type="string" pos:line="36" pos:column="29">"404"</lit:literal></expr>)</condition><then pos:line="36" pos:column="35">
            <block pos:line="37" pos:column="13">{
                <expr_stmt><expr><name pos:line="38" pos:column="17">ex</name> <op:operator pos:line="38" pos:column="20">=</op:operator> <op:operator pos:line="38" pos:column="22">new</op:operator> <call><name pos:line="38" pos:column="26">HttpException</name><argument_list pos:line="38" pos:column="39">(<argument><expr><lit:literal type="number" pos:line="38" pos:column="40">404</lit:literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="45">httpErrorMsg</name></expr></argument>, <argument><expr><name pos:line="38" pos:column="59">ex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="39" pos:column="17">FriendlyErrorMsg</name><op:operator pos:line="39" pos:column="33">.</op:operator><name pos:line="39" pos:column="34">Text</name></name> <op:operator pos:line="39" pos:column="39">=</op:operator> <name><name pos:line="39" pos:column="41">ex</name><op:operator pos:line="39" pos:column="43">.</op:operator><name pos:line="39" pos:column="44">Message</name></name></expr>;</expr_stmt>
            }</block></then></if>

            <comment type="line" pos:line="42" pos:column="13">// If the exception no longer exists, create a generic exception.</comment>
            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><name pos:line="43" pos:column="17">ex</name> <op:operator pos:line="43" pos:column="20">==</op:operator> <name pos:line="43" pos:column="23">null</name></expr>)</condition><then pos:line="43" pos:column="28">
            <block pos:line="44" pos:column="13">{
                <expr_stmt><expr><name pos:line="45" pos:column="17">ex</name> <op:operator pos:line="45" pos:column="20">=</op:operator> <op:operator pos:line="45" pos:column="22">new</op:operator> <call><name pos:line="45" pos:column="26">Exception</name><argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">unhandledErrorMsg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <comment type="line" pos:line="48" pos:column="13">// Show error details to only you (developer). LOCAL ACCESS ONLY.</comment>
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><name><name pos:line="49" pos:column="17">Request</name><op:operator pos:line="49" pos:column="24">.</op:operator><name pos:line="49" pos:column="25">IsLocal</name></name></expr>)</condition><then pos:line="49" pos:column="33">
            <block pos:line="50" pos:column="13">{
                <comment type="line" pos:line="51" pos:column="17">// Detailed Error Message.</comment>
                <expr_stmt><expr><name><name pos:line="52" pos:column="17">ErrorDetailedMsg</name><op:operator pos:line="52" pos:column="33">.</op:operator><name pos:line="52" pos:column="34">Text</name></name> <op:operator pos:line="52" pos:column="39">=</op:operator> <name><name pos:line="52" pos:column="41">ex</name><op:operator pos:line="52" pos:column="43">.</op:operator><name pos:line="52" pos:column="44">Message</name></name></expr>;</expr_stmt>

                <comment type="line" pos:line="54" pos:column="17">// Show where the error was handled.</comment>
                <expr_stmt><expr><name><name pos:line="55" pos:column="17">ErrorHandler</name><op:operator pos:line="55" pos:column="29">.</op:operator><name pos:line="55" pos:column="30">Text</name></name> <op:operator pos:line="55" pos:column="35">=</op:operator> <name pos:line="55" pos:column="37">errorHandler</name></expr>;</expr_stmt>

                <comment type="line" pos:line="57" pos:column="17">// Show local access details.</comment>
                <expr_stmt><expr><name><name pos:line="58" pos:column="17">DetailedErrorPanel</name><op:operator pos:line="58" pos:column="35">.</op:operator><name pos:line="58" pos:column="36">Visible</name></name> <op:operator pos:line="58" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="58" pos:column="46">true</lit:literal></expr>;</expr_stmt>

                <if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name><name pos:line="60" pos:column="21">ex</name><op:operator pos:line="60" pos:column="23">.</op:operator><name pos:line="60" pos:column="24">InnerException</name></name> <op:operator pos:line="60" pos:column="39">!=</op:operator> <name pos:line="60" pos:column="42">null</name></expr>)</condition><then pos:line="60" pos:column="47">
                <block pos:line="61" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="62" pos:column="21">InnerMessage</name><op:operator pos:line="62" pos:column="33">.</op:operator><name pos:line="62" pos:column="34">Text</name></name> <op:operator pos:line="62" pos:column="39">=</op:operator> <call><name><name pos:line="62" pos:column="41">ex</name><op:operator pos:line="62" pos:column="43">.</op:operator><name pos:line="62" pos:column="44">GetType</name></name><argument_list pos:line="62" pos:column="51">()</argument_list></call><op:operator pos:line="62" pos:column="53">.</op:operator><call><name pos:line="62" pos:column="54">ToString</name><argument_list pos:line="62" pos:column="62">()</argument_list></call> <op:operator pos:line="62" pos:column="65">+</op:operator> <lit:literal type="string" pos:line="62" pos:column="67">"&lt;br/&gt;"</lit:literal> <op:operator pos:line="62" pos:column="75">+</op:operator>
                        <name><name pos:line="63" pos:column="25">ex</name><op:operator pos:line="63" pos:column="27">.</op:operator><name pos:line="63" pos:column="28">InnerException</name><op:operator pos:line="63" pos:column="42">.</op:operator><name pos:line="63" pos:column="43">Message</name></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name pos:line="64" pos:column="21">InnerTrace</name><op:operator pos:line="64" pos:column="31">.</op:operator><name pos:line="64" pos:column="32">Text</name></name> <op:operator pos:line="64" pos:column="37">=</op:operator> <name><name pos:line="64" pos:column="39">ex</name><op:operator pos:line="64" pos:column="41">.</op:operator><name pos:line="64" pos:column="42">InnerException</name><op:operator pos:line="64" pos:column="56">.</op:operator><name pos:line="64" pos:column="57">StackTrace</name></name></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="66" pos:column="17">else
                <block pos:line="67" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="68" pos:column="21">InnerMessage</name><op:operator pos:line="68" pos:column="33">.</op:operator><name pos:line="68" pos:column="34">Text</name></name> <op:operator pos:line="68" pos:column="39">=</op:operator> <call><name><name pos:line="68" pos:column="41">ex</name><op:operator pos:line="68" pos:column="43">.</op:operator><name pos:line="68" pos:column="44">GetType</name></name><argument_list pos:line="68" pos:column="51">()</argument_list></call><op:operator pos:line="68" pos:column="53">.</op:operator><call><name pos:line="68" pos:column="54">ToString</name><argument_list pos:line="68" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="69" pos:column="21">if <condition pos:line="69" pos:column="24">(<expr><name><name pos:line="69" pos:column="25">ex</name><op:operator pos:line="69" pos:column="27">.</op:operator><name pos:line="69" pos:column="28">StackTrace</name></name> <op:operator pos:line="69" pos:column="39">!=</op:operator> <name pos:line="69" pos:column="42">null</name></expr>)</condition><then pos:line="69" pos:column="47">
                    <block pos:line="70" pos:column="21">{
                        <expr_stmt><expr><name><name pos:line="71" pos:column="25">InnerTrace</name><op:operator pos:line="71" pos:column="35">.</op:operator><name pos:line="71" pos:column="36">Text</name></name> <op:operator pos:line="71" pos:column="41">=</op:operator> <call><name><name pos:line="71" pos:column="43">ex</name><op:operator pos:line="71" pos:column="45">.</op:operator><name pos:line="71" pos:column="46">StackTrace</name><op:operator pos:line="71" pos:column="56">.</op:operator><name pos:line="71" pos:column="57">ToString</name></name><argument_list pos:line="71" pos:column="65">()</argument_list></call><op:operator pos:line="71" pos:column="67">.</op:operator><call><name pos:line="71" pos:column="68">TrimStart</name><argument_list pos:line="71" pos:column="77">()</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></else></if>
            }</block></then></if>

            <comment type="line" pos:line="76" pos:column="13">// Log the exception.</comment>
            <expr_stmt><expr><call><name><name pos:line="77" pos:column="13">ExceptionUtility</name><op:operator pos:line="77" pos:column="29">.</op:operator><name pos:line="77" pos:column="30">LogException</name></name><argument_list pos:line="77" pos:column="42">(<argument><expr><name pos:line="77" pos:column="43">ex</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="47">errorHandler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="79" pos:column="13">// Clear the error from the server.</comment>
            <expr_stmt><expr><call><name><name pos:line="80" pos:column="13">Server</name><op:operator pos:line="80" pos:column="19">.</op:operator><name pos:line="80" pos:column="20">ClearError</name></name><argument_list pos:line="80" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>

</unit>
