<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.AspNet\Inspector\RoutesInspector.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Linq</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Reflection</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">AspNet</name><op:operator pos:line="4" pos:column="21">.</op:operator><name pos:line="4" pos:column="22">AlternateType</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Extensibility</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">Glimpse</name><op:operator pos:line="7" pos:column="18">.</op:operator><name pos:line="7" pos:column="19">AspNet</name><op:operator pos:line="7" pos:column="25">.</op:operator><name pos:line="7" pos:column="26">Inspector</name></name>
<block pos:line="8" pos:column="1">{
    <class><specifier pos:line="9" pos:column="5">public</specifier> class <name pos:line="9" pos:column="18">RoutesInspector</name> <super pos:line="9" pos:column="34">: <name pos:line="9" pos:column="36">IInspector</name></super>
    <block pos:line="10" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">private</specifier> <specifier pos:line="11" pos:column="17">static</specifier> <specifier pos:line="11" pos:column="24">readonly</specifier> <name pos:line="11" pos:column="33">FieldInfo</name></type> <name pos:line="11" pos:column="43">MappedRoutesField</name> <init pos:line="11" pos:column="61">= <expr><call><name pos:line="11" pos:column="63">typeof</name><argument_list pos:line="11" pos:column="69">(<argument><expr><name><name pos:line="11" pos:column="70">System</name><op:operator pos:line="11" pos:column="76">.</op:operator><name pos:line="11" pos:column="77">Web</name><op:operator pos:line="11" pos:column="80">.</op:operator><name pos:line="11" pos:column="81">Routing</name><op:operator pos:line="11" pos:column="88">.</op:operator><name pos:line="11" pos:column="89">RouteCollection</name></name></expr></argument>)</argument_list></call><op:operator pos:line="11" pos:column="105">.</op:operator><call><name pos:line="11" pos:column="106">GetField</name><argument_list pos:line="11" pos:column="114">(<argument><expr><lit:literal type="string" pos:line="11" pos:column="115">"_namedMap"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="128">BindingFlags</name><op:operator pos:line="11" pos:column="140">.</op:operator><name pos:line="11" pos:column="141">NonPublic</name></name> <op:operator pos:line="11" pos:column="151">|</op:operator> <name><name pos:line="11" pos:column="153">BindingFlags</name><op:operator pos:line="11" pos:column="165">.</op:operator><name pos:line="11" pos:column="166">Instance</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">private</specifier> <specifier pos:line="12" pos:column="17">static</specifier> <specifier pos:line="12" pos:column="24">readonly</specifier> <name><name pos:line="12" pos:column="33">List</name><argument_list pos:line="12" pos:column="37">&lt;<argument><name pos:line="12" pos:column="38">string</name></argument>&gt;</argument_list></name></type> <name pos:line="12" pos:column="46">IgnoredRouteTypes</name> <init pos:line="12" pos:column="64">= <expr><op:operator pos:line="12" pos:column="66">new</op:operator> <name><name pos:line="12" pos:column="70">List</name><argument_list pos:line="12" pos:column="74">&lt;<argument><name pos:line="12" pos:column="75">string</name></argument>&gt;</argument_list></name> <block pos:line="12" pos:column="83">{ <expr><lit:literal type="string" pos:line="12" pos:column="85">"System.Web.Http.WebHost.Routing.HttpWebRoute"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="12" pos:column="133">"System.Web.Mvc.Routing.LinkGenerationRoute"</lit:literal></expr> }</block></expr></init></decl>;</decl_stmt>
         
        <function><type><specifier pos:line="14" pos:column="9">public</specifier> <name pos:line="14" pos:column="16">void</name></type> <name pos:line="14" pos:column="21">Setup</name><parameter_list pos:line="14" pos:column="26">(<param><decl><type><name pos:line="14" pos:column="27">IInspectorContext</name></type> <name pos:line="14" pos:column="45">context</name></decl></param>)</parameter_list>
        <block pos:line="15" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">var</name></type> <name pos:line="16" pos:column="17">logger</name> <init pos:line="16" pos:column="24">= <expr><name><name pos:line="16" pos:column="26">context</name><op:operator pos:line="16" pos:column="33">.</op:operator><name pos:line="16" pos:column="34">Logger</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="17" pos:column="13">var</name></type> <name pos:line="17" pos:column="17">alternateBaseImplementation</name> <init pos:line="17" pos:column="45">= <expr><op:operator pos:line="17" pos:column="47">new</op:operator> <call><name><name pos:line="17" pos:column="51">AlternateType</name><op:operator pos:line="17" pos:column="64">.</op:operator><name pos:line="17" pos:column="65">RouteBase</name></name><argument_list pos:line="17" pos:column="74">(<argument><expr><name><name pos:line="17" pos:column="75">context</name><op:operator pos:line="17" pos:column="82">.</op:operator><name pos:line="17" pos:column="83">ProxyFactory</name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="97">context</name><op:operator pos:line="17" pos:column="104">.</op:operator><name pos:line="17" pos:column="105">Logger</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 

            <decl_stmt><decl><type><name pos:line="19" pos:column="13">var</name></type> <name pos:line="19" pos:column="17">currentRoutes</name> <init pos:line="19" pos:column="31">= <expr><name><name pos:line="19" pos:column="33">System</name><op:operator pos:line="19" pos:column="39">.</op:operator><name pos:line="19" pos:column="40">Web</name><op:operator pos:line="19" pos:column="43">.</op:operator><name pos:line="19" pos:column="44">Routing</name><op:operator pos:line="19" pos:column="51">.</op:operator><name pos:line="19" pos:column="52">RouteTable</name><op:operator pos:line="19" pos:column="62">.</op:operator><name pos:line="19" pos:column="63">Routes</name></name></expr></init></decl>;</decl_stmt>
            <using pos:line="20" pos:column="13">using (<expr><call><name><name pos:line="20" pos:column="20">currentRoutes</name><op:operator pos:line="20" pos:column="33">.</op:operator><name pos:line="20" pos:column="34">GetWriteLock</name></name><argument_list pos:line="20" pos:column="46">()</argument_list></call></expr>)
            <block pos:line="21" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="22" pos:column="17">var</name></type> <name pos:line="22" pos:column="21">mappedRoutes</name> <init pos:line="22" pos:column="34">= <expr><op:operator pos:line="22" pos:column="36">(</op:operator><name><name pos:line="22" pos:column="37">Dictionary</name><argument_list pos:line="22" pos:column="47">&lt;<argument><name pos:line="22" pos:column="48">string</name></argument>, <argument><name><name pos:line="22" pos:column="56">System</name><op:operator pos:line="22" pos:column="62">.</op:operator><name pos:line="22" pos:column="63">Web</name><op:operator pos:line="22" pos:column="66">.</op:operator><name pos:line="22" pos:column="67">Routing</name><op:operator pos:line="22" pos:column="74">.</op:operator><name pos:line="22" pos:column="75">RouteBase</name></name></argument>&gt;</argument_list></name><op:operator pos:line="22" pos:column="85">)</op:operator><call><name><name pos:line="22" pos:column="86">MappedRoutesField</name><op:operator pos:line="22" pos:column="103">.</op:operator><name pos:line="22" pos:column="104">GetValue</name></name><argument_list pos:line="22" pos:column="112">(<argument><expr><name pos:line="22" pos:column="113">currentRoutes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <for pos:line="24" pos:column="17">for (<init><decl><type><name pos:line="24" pos:column="22">var</name></type> <name pos:line="24" pos:column="26">i</name> <init pos:line="24" pos:column="28">= <expr><lit:literal type="number" pos:line="24" pos:column="30">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="24" pos:column="33">i</name> <op:operator pos:line="24" pos:column="35">&lt;</op:operator> <name><name pos:line="24" pos:column="37">currentRoutes</name><op:operator pos:line="24" pos:column="50">.</op:operator><name pos:line="24" pos:column="51">Count</name></name></expr>;</condition> <incr><expr><name pos:line="24" pos:column="58">i</name><op:operator pos:line="24" pos:column="59">++</op:operator></expr></incr>)
                <block pos:line="25" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="26" pos:column="21">var</name></type> <name pos:line="26" pos:column="25">originalObj</name> <init pos:line="26" pos:column="37">= <expr><name><name pos:line="26" pos:column="39">currentRoutes</name><index pos:line="26" pos:column="52">[<expr><name pos:line="26" pos:column="53">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                    <if pos:line="27" pos:column="21">if <condition pos:line="27" pos:column="24">(<expr><call><name><name pos:line="27" pos:column="25">IgnoredRouteTypes</name><op:operator pos:line="27" pos:column="42">.</op:operator><name pos:line="27" pos:column="43">Contains</name></name><argument_list pos:line="27" pos:column="51">(<argument><expr><call><name><name pos:line="27" pos:column="52">originalObj</name><op:operator pos:line="27" pos:column="63">.</op:operator><name pos:line="27" pos:column="64">GetType</name></name><argument_list pos:line="27" pos:column="71">()</argument_list></call><op:operator pos:line="27" pos:column="73">.</op:operator><call><name pos:line="27" pos:column="74">ToString</name><argument_list pos:line="27" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="27" pos:column="86">
                    <block pos:line="28" pos:column="21">{
                        <continue pos:line="29" pos:column="25">continue;</continue>
                    }</block></then></if>

                    <decl_stmt><decl><type><name pos:line="32" pos:column="21">var</name></type> <name pos:line="32" pos:column="25">newObj</name> <init pos:line="32" pos:column="32">= <expr><op:operator pos:line="32" pos:column="34">(</op:operator><name><name pos:line="32" pos:column="35">System</name><op:operator pos:line="32" pos:column="41">.</op:operator><name pos:line="32" pos:column="42">Web</name><op:operator pos:line="32" pos:column="45">.</op:operator><name pos:line="32" pos:column="46">Routing</name><op:operator pos:line="32" pos:column="53">.</op:operator><name pos:line="32" pos:column="54">RouteBase</name></name><op:operator pos:line="32" pos:column="63">)</op:operator><name pos:line="32" pos:column="64">null</name></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="33" pos:column="21">var</name></type> <name pos:line="33" pos:column="25">mixins</name> <init pos:line="33" pos:column="32">= <expr><op:operator pos:line="33" pos:column="34">new</op:operator><index pos:line="33" pos:column="37">[]</index> <block pos:line="33" pos:column="40">{ <expr><call><name><name pos:line="33" pos:column="42">RouteNameMixin</name><op:operator pos:line="33" pos:column="56">.</op:operator><name pos:line="33" pos:column="57">None</name></name><argument_list pos:line="33" pos:column="61">()</argument_list></call></expr> }</block></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="34" pos:column="21">var</name></type> <name pos:line="34" pos:column="25">routeName</name> <init pos:line="34" pos:column="35">= <expr><name><name pos:line="34" pos:column="37">string</name><op:operator pos:line="34" pos:column="43">.</op:operator><name pos:line="34" pos:column="44">Empty</name></name></expr></init></decl>;</decl_stmt> 
                    <if pos:line="35" pos:column="21">if <condition pos:line="35" pos:column="24">(<expr><call><name><name pos:line="35" pos:column="25">mappedRoutes</name><op:operator pos:line="35" pos:column="37">.</op:operator><name pos:line="35" pos:column="38">ContainsValue</name></name><argument_list pos:line="35" pos:column="51">(<argument><expr><name pos:line="35" pos:column="52">originalObj</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="35" pos:column="65">
                    <block pos:line="36" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="37" pos:column="25">var</name></type> <name pos:line="37" pos:column="29">pair</name> <init pos:line="37" pos:column="34">= <expr><call><name><name pos:line="37" pos:column="36">mappedRoutes</name><op:operator pos:line="37" pos:column="48">.</op:operator><name pos:line="37" pos:column="49">First</name></name><argument_list pos:line="37" pos:column="54">(<argument><expr><lambda><name pos:line="37" pos:column="55">r</name> <op:operator pos:line="37" pos:column="57">=&gt;</op:operator> <name><name pos:line="37" pos:column="60">r</name><op:operator pos:line="37" pos:column="61">.</op:operator><name pos:line="37" pos:column="62">Value</name></name> <op:operator pos:line="37" pos:column="68">==</op:operator> <name pos:line="37" pos:column="71">originalObj</name></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><name pos:line="38" pos:column="25">routeName</name> <op:operator pos:line="38" pos:column="35">=</op:operator> <name><name pos:line="38" pos:column="37">pair</name><op:operator pos:line="38" pos:column="41">.</op:operator><name pos:line="38" pos:column="42">Key</name></name></expr>;</expr_stmt>
                        <expr_stmt><expr><name pos:line="39" pos:column="25">mixins</name> <op:operator pos:line="39" pos:column="32">=</op:operator> <op:operator pos:line="39" pos:column="34">new</op:operator><index pos:line="39" pos:column="37">[]</index> <block pos:line="39" pos:column="40">{ <expr><op:operator pos:line="39" pos:column="42">new</op:operator> <call><name pos:line="39" pos:column="46">RouteNameMixin</name><argument_list pos:line="39" pos:column="60">(<argument><expr><name><name pos:line="39" pos:column="61">pair</name><op:operator pos:line="39" pos:column="65">.</op:operator><name pos:line="39" pos:column="66">Key</name></name></expr></argument>)</argument_list></call></expr> }</block></expr>;</expr_stmt>
                    }</block></then></if>


                    <if pos:line="43" pos:column="21">if <condition pos:line="43" pos:column="24">(<expr><call><name><name pos:line="43" pos:column="25">originalObj</name><op:operator pos:line="43" pos:column="36">.</op:operator><name pos:line="43" pos:column="37">GetType</name></name><argument_list pos:line="43" pos:column="44">()</argument_list></call><op:operator pos:line="43" pos:column="46">.</op:operator><call><name pos:line="43" pos:column="47">ToString</name><argument_list pos:line="43" pos:column="55">()</argument_list></call> <op:operator pos:line="43" pos:column="58">==</op:operator> <lit:literal type="string" pos:line="43" pos:column="61">"System.Web.Mvc.Routing.RouteCollectionRoute"</lit:literal></expr>)</condition><then pos:line="43" pos:column="107">
                    <block pos:line="44" pos:column="21">{
                        <comment type="line" pos:line="45" pos:column="25">// This catches any routing that has been defined using Attribute Based Routing</comment>
                        <comment type="line" pos:line="46" pos:column="25">// System.Web.Mvc.Routing.RouteCollectionRoute is a collection of Routes</comment>

                        <decl_stmt><decl><type><name pos:line="48" pos:column="25">var</name></type> <name pos:line="48" pos:column="29">subRoutes</name> <init pos:line="48" pos:column="39">= <expr><call><name><name pos:line="48" pos:column="41">originalObj</name><op:operator pos:line="48" pos:column="52">.</op:operator><name pos:line="48" pos:column="53">GetType</name></name><argument_list pos:line="48" pos:column="60">()</argument_list></call><op:operator pos:line="48" pos:column="62">.</op:operator><call><name pos:line="48" pos:column="63">GetField</name><argument_list pos:line="48" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="48" pos:column="72">"_subRoutes"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="86">BindingFlags</name><op:operator pos:line="48" pos:column="98">.</op:operator><name pos:line="48" pos:column="99">NonPublic</name></name> <op:operator pos:line="48" pos:column="109">|</op:operator> <name><name pos:line="48" pos:column="111">BindingFlags</name><op:operator pos:line="48" pos:column="123">.</op:operator><name pos:line="48" pos:column="124">Instance</name></name></expr></argument>)</argument_list></call><op:operator pos:line="48" pos:column="133">.</op:operator><call><name pos:line="48" pos:column="134">GetValue</name><argument_list pos:line="48" pos:column="142">(<argument><expr><name pos:line="48" pos:column="143">originalObj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="49" pos:column="25">var</name></type> <name pos:line="49" pos:column="29">routes</name> <init pos:line="49" pos:column="36">= <expr><op:operator pos:line="49" pos:column="38">(</op:operator><name><name pos:line="49" pos:column="39">IList</name><argument_list pos:line="49" pos:column="44">&lt;<argument><name><name pos:line="49" pos:column="45">System</name><op:operator pos:line="49" pos:column="51">.</op:operator><name pos:line="49" pos:column="52">Web</name><op:operator pos:line="49" pos:column="55">.</op:operator><name pos:line="49" pos:column="56">Routing</name><op:operator pos:line="49" pos:column="63">.</op:operator><name pos:line="49" pos:column="64">Route</name></name></argument>&gt;</argument_list></name><op:operator pos:line="49" pos:column="70">)</op:operator><call><name><name pos:line="49" pos:column="71">subRoutes</name><op:operator pos:line="49" pos:column="80">.</op:operator><name pos:line="49" pos:column="81">GetType</name></name><argument_list pos:line="49" pos:column="88">()</argument_list></call><op:operator pos:line="49" pos:column="90">.</op:operator><call><name pos:line="49" pos:column="91">GetField</name><argument_list pos:line="49" pos:column="99">(<argument><expr><lit:literal type="string" pos:line="49" pos:column="100">"_routes"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="111">BindingFlags</name><op:operator pos:line="49" pos:column="123">.</op:operator><name pos:line="49" pos:column="124">NonPublic</name></name> <op:operator pos:line="49" pos:column="134">|</op:operator> <name><name pos:line="49" pos:column="136">BindingFlags</name><op:operator pos:line="49" pos:column="148">.</op:operator><name pos:line="49" pos:column="149">Instance</name></name></expr></argument>)</argument_list></call><op:operator pos:line="49" pos:column="158">.</op:operator><call><name pos:line="49" pos:column="159">GetValue</name><argument_list pos:line="49" pos:column="167">(<argument><expr><name pos:line="49" pos:column="168">subRoutes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <decl_stmt><decl><type><name pos:line="51" pos:column="25">var</name></type> <name pos:line="51" pos:column="29">alternateImplementation</name> <init pos:line="51" pos:column="53">= <expr><op:operator pos:line="51" pos:column="55">new</op:operator> <call><name><name pos:line="51" pos:column="59">AlternateType</name><op:operator pos:line="51" pos:column="72">.</op:operator><name pos:line="51" pos:column="73">Route</name></name><argument_list pos:line="51" pos:column="78">(<argument><expr><name><name pos:line="51" pos:column="79">context</name><op:operator pos:line="51" pos:column="86">.</op:operator><name pos:line="51" pos:column="87">ProxyFactory</name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="101">context</name><op:operator pos:line="51" pos:column="108">.</op:operator><name pos:line="51" pos:column="109">Logger</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <for pos:line="53" pos:column="25">for (<init><decl><type><name pos:line="53" pos:column="30">var</name></type> <name pos:line="53" pos:column="34">j</name> <init pos:line="53" pos:column="36">= <expr><lit:literal type="number" pos:line="53" pos:column="38">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="53" pos:column="41">j</name> <op:operator pos:line="53" pos:column="43">&lt;</op:operator> <name><name pos:line="53" pos:column="45">routes</name><op:operator pos:line="53" pos:column="51">.</op:operator><name pos:line="53" pos:column="52">Count</name></name></expr>;</condition> <incr><expr><name pos:line="53" pos:column="59">j</name><op:operator pos:line="53" pos:column="60">++</op:operator></expr></incr>)
                        <block pos:line="54" pos:column="25">{
                            <decl_stmt><decl><type><name pos:line="55" pos:column="29">var</name></type> <name pos:line="55" pos:column="33">route</name> <init pos:line="55" pos:column="39">= <expr><name><name pos:line="55" pos:column="41">routes</name><index pos:line="55" pos:column="47">[<expr><name pos:line="55" pos:column="48">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                            <decl_stmt><decl><type><name pos:line="56" pos:column="29">var</name></type> <name pos:line="56" pos:column="33">newSubRouteObj</name> <init pos:line="56" pos:column="48">= <expr><op:operator pos:line="56" pos:column="50">(</op:operator><name><name pos:line="56" pos:column="51">System</name><op:operator pos:line="56" pos:column="57">.</op:operator><name pos:line="56" pos:column="58">Web</name><op:operator pos:line="56" pos:column="61">.</op:operator><name pos:line="56" pos:column="62">Routing</name><op:operator pos:line="56" pos:column="69">.</op:operator><name pos:line="56" pos:column="70">Route</name></name><op:operator pos:line="56" pos:column="75">)</op:operator><name pos:line="56" pos:column="76">null</name></expr></init></decl>;</decl_stmt>

                            <if pos:line="58" pos:column="29">if <condition pos:line="58" pos:column="32">(<expr><call><name><name pos:line="58" pos:column="33">alternateImplementation</name><op:operator pos:line="58" pos:column="56">.</op:operator><name pos:line="58" pos:column="57">TryCreate</name></name><argument_list pos:line="58" pos:column="66">(<argument><expr><name pos:line="58" pos:column="67">route</name></expr></argument>, <argument><expr pos:line="58" pos:column="74">out <name pos:line="58" pos:column="78">newSubRouteObj</name></expr></argument>, <argument><expr><name pos:line="58" pos:column="94">mixins</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="58" pos:column="102">
                            <block pos:line="59" pos:column="29">{
                                <expr_stmt><expr><name><name pos:line="60" pos:column="33">routes</name><index pos:line="60" pos:column="39">[<expr><name pos:line="60" pos:column="40">j</name></expr>]</index></name> <op:operator pos:line="60" pos:column="43">=</op:operator> <name pos:line="60" pos:column="45">newSubRouteObj</name></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="61" pos:column="33">logger</name><op:operator pos:line="61" pos:column="39">.</op:operator><name pos:line="61" pos:column="40">Info</name></name><argument_list pos:line="61" pos:column="44">(<argument><expr><name><name pos:line="61" pos:column="45">Resources</name><op:operator pos:line="61" pos:column="54">.</op:operator><name pos:line="61" pos:column="55">RouteSetupReplacedRoute</name></name></expr></argument>, <argument><expr><call><name><name pos:line="61" pos:column="80">originalObj</name><op:operator pos:line="61" pos:column="91">.</op:operator><name pos:line="61" pos:column="92">GetType</name></name><argument_list pos:line="61" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></then>
                            <else pos:line="63" pos:column="29">else
                            <block pos:line="64" pos:column="29">{
                                <expr_stmt><expr><call><name><name pos:line="65" pos:column="33">logger</name><op:operator pos:line="65" pos:column="39">.</op:operator><name pos:line="65" pos:column="40">Info</name></name><argument_list pos:line="65" pos:column="44">(<argument><expr><name><name pos:line="65" pos:column="45">Resources</name><op:operator pos:line="65" pos:column="54">.</op:operator><name pos:line="65" pos:column="55">RouteSetupNotReplacedRoute</name></name></expr></argument>, <argument><expr><call><name><name pos:line="65" pos:column="83">originalObj</name><op:operator pos:line="65" pos:column="94">.</op:operator><name pos:line="65" pos:column="95">GetType</name></name><argument_list pos:line="65" pos:column="102">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></else></if>

                        }</block></for>
                    }</block></then>

                    <else pos:line="71" pos:column="21">else
                    <block pos:line="72" pos:column="21">{
                        <if pos:line="73" pos:column="25">if <condition pos:line="73" pos:column="28">(<expr><call><name><name pos:line="73" pos:column="29">alternateBaseImplementation</name><op:operator pos:line="73" pos:column="56">.</op:operator><name pos:line="73" pos:column="57">TryCreate</name></name><argument_list pos:line="73" pos:column="66">(<argument><expr><name pos:line="73" pos:column="67">originalObj</name></expr></argument>, <argument><expr pos:line="73" pos:column="80">out <name pos:line="73" pos:column="84">newObj</name></expr></argument>, <argument><expr><name pos:line="73" pos:column="92">mixins</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="73" pos:column="100">
                        <block pos:line="74" pos:column="25">{
                            <expr_stmt><expr><name><name pos:line="75" pos:column="29">currentRoutes</name><index pos:line="75" pos:column="42">[<expr><name pos:line="75" pos:column="43">i</name></expr>]</index></name> <op:operator pos:line="75" pos:column="46">=</op:operator> <name pos:line="75" pos:column="48">newObj</name></expr>;</expr_stmt>

                            <if pos:line="77" pos:column="29">if <condition pos:line="77" pos:column="32">(<expr><op:operator pos:line="77" pos:column="33">!</op:operator><call><name><name pos:line="77" pos:column="34">string</name><op:operator pos:line="77" pos:column="40">.</op:operator><name pos:line="77" pos:column="41">IsNullOrEmpty</name></name><argument_list pos:line="77" pos:column="54">(<argument><expr><name pos:line="77" pos:column="55">routeName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="77" pos:column="66">
                            <block pos:line="78" pos:column="29">{
                                <expr_stmt><expr><name><name pos:line="79" pos:column="33">mappedRoutes</name><index pos:line="79" pos:column="45">[<expr><name pos:line="79" pos:column="46">routeName</name></expr>]</index></name> <op:operator pos:line="79" pos:column="57">=</op:operator> <name pos:line="79" pos:column="59">newObj</name></expr>;</expr_stmt>
                            }</block></then></if>

                            <expr_stmt><expr><call><name><name pos:line="82" pos:column="29">logger</name><op:operator pos:line="82" pos:column="35">.</op:operator><name pos:line="82" pos:column="36">Info</name></name><argument_list pos:line="82" pos:column="40">(<argument><expr><name><name pos:line="82" pos:column="41">Resources</name><op:operator pos:line="82" pos:column="50">.</op:operator><name pos:line="82" pos:column="51">RouteSetupReplacedRoute</name></name></expr></argument>, <argument><expr><call><name><name pos:line="82" pos:column="76">originalObj</name><op:operator pos:line="82" pos:column="87">.</op:operator><name pos:line="82" pos:column="88">GetType</name></name><argument_list pos:line="82" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></then>
                        <else pos:line="84" pos:column="25">else
                        <block pos:line="85" pos:column="25">{
                            <expr_stmt><expr><call><name><name pos:line="86" pos:column="29">logger</name><op:operator pos:line="86" pos:column="35">.</op:operator><name pos:line="86" pos:column="36">Info</name></name><argument_list pos:line="86" pos:column="40">(<argument><expr><name><name pos:line="86" pos:column="41">Resources</name><op:operator pos:line="86" pos:column="50">.</op:operator><name pos:line="86" pos:column="51">RouteSetupNotReplacedRoute</name></name></expr></argument>, <argument><expr><call><name><name pos:line="86" pos:column="79">originalObj</name><op:operator pos:line="86" pos:column="90">.</op:operator><name pos:line="86" pos:column="91">GetType</name></name><argument_list pos:line="86" pos:column="98">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></else></if>
                    }</block></else></if>
                }</block></for>
            }</block></using>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
