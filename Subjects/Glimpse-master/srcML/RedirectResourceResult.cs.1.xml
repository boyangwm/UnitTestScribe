<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\ResourceResult\RedirectResourceResult.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Tavis</name><op:operator pos:line="4" pos:column="12">.</op:operator><name pos:line="4" pos:column="13">UriTemplates</name></name>;</using>

<namespace pos:line="6" pos:column="1">namespace <name><name pos:line="6" pos:column="11">Glimpse</name><op:operator pos:line="6" pos:column="18">.</op:operator><name pos:line="6" pos:column="19">Core</name><op:operator pos:line="6" pos:column="23">.</op:operator><name pos:line="6" pos:column="24">ResourceResult</name></name>
<block pos:line="7" pos:column="1">{
    <comment type="line" pos:line="8" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="9" pos:column="5">/// The &lt;see cref="IResourceResult"/&gt; implementation responsible redirecting a client to a new Uri.</comment>
    <comment type="line" pos:line="10" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">RedirectResourceResult</name> <super pos:line="11" pos:column="41">: <name pos:line="11" pos:column="43">IResourceResult</name></super>
    <block pos:line="12" pos:column="5">{
        <comment type="line" pos:line="13" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="14" pos:column="9">/// Initializes a new instance of the &lt;see cref="RedirectResourceResult" /&gt; class without any parameter values in the Uri template.</comment>
        <comment type="line" pos:line="15" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="16" pos:column="9">/// &lt;param name="uriTemplate"&gt;The URI template.&lt;/param&gt;</comment>
        <constructor><specifier pos:line="17" pos:column="9">public</specifier> <name pos:line="17" pos:column="16">RedirectResourceResult</name><parameter_list pos:line="17" pos:column="38">(<param><decl><type><name pos:line="17" pos:column="39">string</name></type> <name pos:line="17" pos:column="46">uriTemplate</name></decl></param>)</parameter_list> <member_list pos:line="17" pos:column="59">: <call><name pos:line="17" pos:column="61">this</name><argument_list pos:line="17" pos:column="65">(<argument><expr><name pos:line="17" pos:column="66">uriTemplate</name></expr></argument>, <argument><expr><op:operator pos:line="17" pos:column="79">new</op:operator> <call><name><name pos:line="17" pos:column="83">Dictionary</name><argument_list pos:line="17" pos:column="93">&lt;<argument><name pos:line="17" pos:column="94">string</name></argument>, <argument><name pos:line="17" pos:column="102">object</name></argument>&gt;</argument_list></name><argument_list pos:line="17" pos:column="109">()</argument_list></call></expr></argument>)</argument_list></call>
        </member_list><block pos:line="18" pos:column="9">{
        }</block></constructor>

        <comment type="line" pos:line="21" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="22" pos:column="9">/// Initializes a new instance of the &lt;see cref="RedirectResourceResult" /&gt; class.</comment>
        <comment type="line" pos:line="23" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="24" pos:column="9">/// &lt;param name="uriTemplate"&gt;The Uri template. Uri templates should conform to &lt;see href="http://tools.ietf.org/html/rfc6570"/&gt;RFC 6570&lt;/param&gt;.</comment>
        <comment type="line" pos:line="25" pos:column="9">/// &lt;param name="data"&gt;The Uri template parameter data.&lt;/param&gt;</comment>
        <comment type="line" pos:line="26" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;Exception thrown if &lt;paramref name="uriTemplate"/&gt; is &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <comment type="line" pos:line="27" pos:column="9">/// &lt;seealso href="http://tools.ietf.org/html/rfc6570"&gt;URI Template&lt;/seealso&gt;</comment>
        <constructor><specifier pos:line="28" pos:column="9">public</specifier> <name pos:line="28" pos:column="16">RedirectResourceResult</name><parameter_list pos:line="28" pos:column="38">(<param><decl><type><name pos:line="28" pos:column="39">string</name></type> <name pos:line="28" pos:column="46">uriTemplate</name></decl></param>, <param><decl><type><name><name pos:line="28" pos:column="59">IDictionary</name><argument_list pos:line="28" pos:column="70">&lt;<argument><name pos:line="28" pos:column="71">string</name></argument>, <argument><name pos:line="28" pos:column="79">object</name></argument>&gt;</argument_list></name></type> <name pos:line="28" pos:column="87">data</name></decl></param>)</parameter_list>
        <block pos:line="29" pos:column="9">{
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><call><name><name pos:line="30" pos:column="17">string</name><op:operator pos:line="30" pos:column="23">.</op:operator><name pos:line="30" pos:column="24">IsNullOrEmpty</name></name><argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">uriTemplate</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="30" pos:column="51">
            <block pos:line="31" pos:column="13">{
                <throw pos:line="32" pos:column="17">throw <expr><op:operator pos:line="32" pos:column="23">new</op:operator> <call><name pos:line="32" pos:column="27">ArgumentNullException</name><argument_list pos:line="32" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="32" pos:column="49">"uriTemplate"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><name pos:line="35" pos:column="17">data</name> <op:operator pos:line="35" pos:column="22">==</op:operator> <name pos:line="35" pos:column="25">null</name></expr>)</condition><then pos:line="35" pos:column="30">
            <block pos:line="36" pos:column="13">{
                <throw pos:line="37" pos:column="17">throw <expr><op:operator pos:line="37" pos:column="23">new</op:operator> <call><name pos:line="37" pos:column="27">ArgumentNullException</name><argument_list pos:line="37" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="37" pos:column="49">"data"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <expr_stmt><expr><name pos:line="40" pos:column="13">UriTemplate</name> <op:operator pos:line="40" pos:column="25">=</op:operator> <op:operator pos:line="40" pos:column="27">new</op:operator> <call><name pos:line="40" pos:column="31">UriTemplate</name><argument_list pos:line="40" pos:column="42">(<argument><expr><name pos:line="40" pos:column="43">uriTemplate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="41" pos:column="13">Data</name> <op:operator pos:line="41" pos:column="18">=</op:operator> <name pos:line="41" pos:column="20">data</name></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="44" pos:column="9">private</specifier> <name><name pos:line="44" pos:column="17">IDictionary</name><argument_list pos:line="44" pos:column="28">&lt;<argument><name pos:line="44" pos:column="29">string</name></argument>, <argument><name pos:line="44" pos:column="37">object</name></argument>&gt;</argument_list></name></type> <name pos:line="44" pos:column="45">Data</name> <block pos:line="44" pos:column="50">{ <function_decl><name pos:line="44" pos:column="52">get</name>;</function_decl> <function_decl><name pos:line="44" pos:column="57">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="46" pos:column="9">private</specifier> <name pos:line="46" pos:column="17">UriTemplate</name></type> <name pos:line="46" pos:column="29">UriTemplate</name> <block pos:line="46" pos:column="41">{ <function_decl><name pos:line="46" pos:column="43">get</name>;</function_decl> <function_decl><name pos:line="46" pos:column="48">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="48" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="49" pos:column="9">/// Executes the resource result with the specified context.</comment>
        <comment type="line" pos:line="50" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="51" pos:column="9">/// &lt;param name="context"&gt;The context.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="52" pos:column="9">public</specifier> <name pos:line="52" pos:column="16">void</name></type> <name pos:line="52" pos:column="21">Execute</name><parameter_list pos:line="52" pos:column="28">(<param><decl><type><name pos:line="52" pos:column="29">IResourceResultContext</name></type> <name pos:line="52" pos:column="52">context</name></decl></param>)</parameter_list>
        <block pos:line="53" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="54" pos:column="13">var</name></type> <name pos:line="54" pos:column="17">data</name> <init pos:line="54" pos:column="22">= <expr><name pos:line="54" pos:column="24">Data</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="55" pos:column="13">var</name></type> <name pos:line="55" pos:column="17">uriTemplate</name> <init pos:line="55" pos:column="29">= <expr><name pos:line="55" pos:column="31">UriTemplate</name></expr></init></decl>;</decl_stmt>
            <foreach pos:line="56" pos:column="13">foreach (<init><decl><type><name pos:line="56" pos:column="22">var</name></type> <name pos:line="56" pos:column="26">parameter</name> <range pos:line="56" pos:column="36">in <expr><call><name><name pos:line="56" pos:column="39">uriTemplate</name><op:operator pos:line="56" pos:column="50">.</op:operator><name pos:line="56" pos:column="51">GetParameterNames</name></name><argument_list pos:line="56" pos:column="68">()</argument_list></call></expr></range></decl></init>)
            <block pos:line="57" pos:column="13">{
                <if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><call><name><name pos:line="58" pos:column="21">data</name><op:operator pos:line="58" pos:column="25">.</op:operator><name pos:line="58" pos:column="26">ContainsKey</name></name><argument_list pos:line="58" pos:column="37">(<argument><expr><name pos:line="58" pos:column="38">parameter</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="58" pos:column="49">
                <block pos:line="59" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="60" pos:column="21">uriTemplate</name><op:operator pos:line="60" pos:column="32">.</op:operator><name pos:line="60" pos:column="33">SetParameter</name></name><argument_list pos:line="60" pos:column="45">(<argument><expr><name pos:line="60" pos:column="46">parameter</name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="57">data</name><index pos:line="60" pos:column="61">[<expr><name pos:line="60" pos:column="62">parameter</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></foreach>

            <decl_stmt><decl><type><name pos:line="64" pos:column="13">var</name></type> <name pos:line="64" pos:column="17">frameworkProvider</name> <init pos:line="64" pos:column="35">= <expr><name><name pos:line="64" pos:column="37">context</name><op:operator pos:line="64" pos:column="44">.</op:operator><name pos:line="64" pos:column="45">FrameworkProvider</name></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="65" pos:column="13">frameworkProvider</name><op:operator pos:line="65" pos:column="30">.</op:operator><name pos:line="65" pos:column="31">SetHttpResponseStatusCode</name></name><argument_list pos:line="65" pos:column="56">(<argument><expr><lit:literal type="number" pos:line="65" pos:column="57">301</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="66" pos:column="13">frameworkProvider</name><op:operator pos:line="66" pos:column="30">.</op:operator><name pos:line="66" pos:column="31">SetHttpResponseHeader</name></name><argument_list pos:line="66" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="66" pos:column="53">"Location"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="66" pos:column="65">uriTemplate</name><op:operator pos:line="66" pos:column="76">.</op:operator><name pos:line="66" pos:column="77">Resolve</name></name><argument_list pos:line="66" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
