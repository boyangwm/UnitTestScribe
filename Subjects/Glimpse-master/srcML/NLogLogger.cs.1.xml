<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Extensibility\NLogLogger.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name pos:line="2" pos:column="7">NLog</name>;</using>

<namespace pos:line="4" pos:column="1">namespace <name><name pos:line="4" pos:column="11">Glimpse</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">Core</name><op:operator pos:line="4" pos:column="23">.</op:operator><name pos:line="4" pos:column="24">Extensibility</name></name>
<block pos:line="5" pos:column="1">{
    <comment type="line" pos:line="6" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="7" pos:column="5">/// An implementation of &lt;see cref="ILogger"/&gt; based on NLog.</comment>
    <comment type="line" pos:line="8" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="9" pos:column="5">public</specifier> class <name pos:line="9" pos:column="18">NLogLogger</name> <super pos:line="9" pos:column="29">: <name pos:line="9" pos:column="31">LoggerBase</name></super>
    <block pos:line="10" pos:column="5">{
        <comment type="line" pos:line="11" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="12" pos:column="9">/// Initializes a new instance of the &lt;see cref="NLogLogger" /&gt; class.</comment>
        <comment type="line" pos:line="13" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="14" pos:column="9">/// &lt;param name="logger"&gt;The logger.&lt;/param&gt;</comment>
        <constructor><specifier pos:line="15" pos:column="9">public</specifier> <name pos:line="15" pos:column="16">NLogLogger</name><parameter_list pos:line="15" pos:column="26">(<param><decl><type><name pos:line="15" pos:column="27">Logger</name></type> <name pos:line="15" pos:column="34">logger</name></decl></param>)</parameter_list>
        <block pos:line="16" pos:column="9">{
            <expr_stmt><expr><name pos:line="17" pos:column="13">Logger</name> <op:operator pos:line="17" pos:column="20">=</op:operator> <name pos:line="17" pos:column="22">logger</name></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">private</specifier> <name pos:line="20" pos:column="17">Logger</name></type> <name pos:line="20" pos:column="24">Logger</name> <block pos:line="20" pos:column="31">{ <function_decl><name pos:line="20" pos:column="33">get</name>;</function_decl> <function_decl><name pos:line="20" pos:column="38">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="22" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="23" pos:column="9">/// Log message at Trace level.</comment>
        <comment type="line" pos:line="24" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="25" pos:column="9">/// &lt;param name="message"&gt;The message.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="26" pos:column="9">public</specifier> <specifier pos:line="26" pos:column="16">override</specifier> <name pos:line="26" pos:column="25">void</name></type> <name pos:line="26" pos:column="30">Trace</name><parameter_list pos:line="26" pos:column="35">(<param><decl><type><name pos:line="26" pos:column="36">string</name></type> <name pos:line="26" pos:column="43">message</name></decl></param>)</parameter_list>
        <block pos:line="27" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">Logger</name><op:operator pos:line="28" pos:column="19">.</op:operator><name pos:line="28" pos:column="20">Trace</name></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="31" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="32" pos:column="9">/// Log message at Debug level.</comment>
        <comment type="line" pos:line="33" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="34" pos:column="9">/// &lt;param name="message"&gt;The message.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="35" pos:column="9">public</specifier> <specifier pos:line="35" pos:column="16">override</specifier> <name pos:line="35" pos:column="25">void</name></type> <name pos:line="35" pos:column="30">Debug</name><parameter_list pos:line="35" pos:column="35">(<param><decl><type><name pos:line="35" pos:column="36">string</name></type> <name pos:line="35" pos:column="43">message</name></decl></param>)</parameter_list>
        <block pos:line="36" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="37" pos:column="13">Logger</name><op:operator pos:line="37" pos:column="19">.</op:operator><name pos:line="37" pos:column="20">Debug</name></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="40" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="41" pos:column="9">/// Log message at Info level.</comment>
        <comment type="line" pos:line="42" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="43" pos:column="9">/// &lt;param name="message"&gt;The message.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="44" pos:column="9">public</specifier> <specifier pos:line="44" pos:column="16">override</specifier> <name pos:line="44" pos:column="25">void</name></type> <name pos:line="44" pos:column="30">Info</name><parameter_list pos:line="44" pos:column="34">(<param><decl><type><name pos:line="44" pos:column="35">string</name></type> <name pos:line="44" pos:column="42">message</name></decl></param>)</parameter_list>
        <block pos:line="45" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">Logger</name><op:operator pos:line="46" pos:column="19">.</op:operator><name pos:line="46" pos:column="20">Info</name></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="49" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="50" pos:column="9">/// Log message at Warn level.</comment>
        <comment type="line" pos:line="51" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="52" pos:column="9">/// &lt;param name="message"&gt;The message.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="53" pos:column="9">public</specifier> <specifier pos:line="53" pos:column="16">override</specifier> <name pos:line="53" pos:column="25">void</name></type> <name pos:line="53" pos:column="30">Warn</name><parameter_list pos:line="53" pos:column="34">(<param><decl><type><name pos:line="53" pos:column="35">string</name></type> <name pos:line="53" pos:column="42">message</name></decl></param>)</parameter_list>
        <block pos:line="54" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="55" pos:column="13">Logger</name><op:operator pos:line="55" pos:column="19">.</op:operator><name pos:line="55" pos:column="20">Warn</name></name><argument_list pos:line="55" pos:column="24">(<argument><expr><name pos:line="55" pos:column="25">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="58" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="59" pos:column="9">/// Log message at Error level.</comment>
        <comment type="line" pos:line="60" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="61" pos:column="9">/// &lt;param name="message"&gt;The message.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="62" pos:column="9">public</specifier> <specifier pos:line="62" pos:column="16">override</specifier> <name pos:line="62" pos:column="25">void</name></type> <name pos:line="62" pos:column="30">Error</name><parameter_list pos:line="62" pos:column="35">(<param><decl><type><name pos:line="62" pos:column="36">string</name></type> <name pos:line="62" pos:column="43">message</name></decl></param>)</parameter_list>
        <block pos:line="63" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="64" pos:column="13">Logger</name><op:operator pos:line="64" pos:column="19">.</op:operator><name pos:line="64" pos:column="20">Error</name></name><argument_list pos:line="64" pos:column="25">(<argument><expr><name pos:line="64" pos:column="26">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="67" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="68" pos:column="9">/// Log message at Fatal level.</comment>
        <comment type="line" pos:line="69" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="70" pos:column="9">/// &lt;param name="message"&gt;The message.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="71" pos:column="9">public</specifier> <specifier pos:line="71" pos:column="16">override</specifier> <name pos:line="71" pos:column="25">void</name></type> <name pos:line="71" pos:column="30">Fatal</name><parameter_list pos:line="71" pos:column="35">(<param><decl><type><name pos:line="71" pos:column="36">string</name></type> <name pos:line="71" pos:column="43">message</name></decl></param>)</parameter_list>
        <block pos:line="72" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="73" pos:column="13">Logger</name><op:operator pos:line="73" pos:column="19">.</op:operator><name pos:line="73" pos:column="20">Fatal</name></name><argument_list pos:line="73" pos:column="25">(<argument><expr><name pos:line="73" pos:column="26">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="76" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="77" pos:column="9">/// Log message at Trace level.</comment>
        <comment type="line" pos:line="78" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="79" pos:column="9">/// &lt;param name="message"&gt;The message.&lt;/param&gt;</comment>
        <comment type="line" pos:line="80" pos:column="9">/// &lt;param name="exception"&gt;The exception.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="81" pos:column="9">public</specifier> <specifier pos:line="81" pos:column="16">override</specifier> <name pos:line="81" pos:column="25">void</name></type> <name pos:line="81" pos:column="30">Trace</name><parameter_list pos:line="81" pos:column="35">(<param><decl><type><name pos:line="81" pos:column="36">string</name></type> <name pos:line="81" pos:column="43">message</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="52">Exception</name></type> <name pos:line="81" pos:column="62">exception</name></decl></param>)</parameter_list>
        <block pos:line="82" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="83" pos:column="13">Logger</name><op:operator pos:line="83" pos:column="19">.</op:operator><name pos:line="83" pos:column="20">TraceException</name></name><argument_list pos:line="83" pos:column="34">(<argument><expr><name pos:line="83" pos:column="35">message</name></expr></argument>, <argument><expr><name pos:line="83" pos:column="44">exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="86" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="87" pos:column="9">/// Log message at Debug level.</comment>
        <comment type="line" pos:line="88" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="89" pos:column="9">/// &lt;param name="message"&gt;The message.&lt;/param&gt;</comment>
        <comment type="line" pos:line="90" pos:column="9">/// &lt;param name="exception"&gt;The exception.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="91" pos:column="9">public</specifier> <specifier pos:line="91" pos:column="16">override</specifier> <name pos:line="91" pos:column="25">void</name></type> <name pos:line="91" pos:column="30">Debug</name><parameter_list pos:line="91" pos:column="35">(<param><decl><type><name pos:line="91" pos:column="36">string</name></type> <name pos:line="91" pos:column="43">message</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="52">Exception</name></type> <name pos:line="91" pos:column="62">exception</name></decl></param>)</parameter_list>
        <block pos:line="92" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="93" pos:column="13">Logger</name><op:operator pos:line="93" pos:column="19">.</op:operator><name pos:line="93" pos:column="20">DebugException</name></name><argument_list pos:line="93" pos:column="34">(<argument><expr><name pos:line="93" pos:column="35">message</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="44">exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="96" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="97" pos:column="9">/// Log message at Info level.</comment>
        <comment type="line" pos:line="98" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="99" pos:column="9">/// &lt;param name="message"&gt;The message.&lt;/param&gt;</comment>
        <comment type="line" pos:line="100" pos:column="9">/// &lt;param name="exception"&gt;The exception.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="101" pos:column="9">public</specifier> <specifier pos:line="101" pos:column="16">override</specifier> <name pos:line="101" pos:column="25">void</name></type> <name pos:line="101" pos:column="30">Info</name><parameter_list pos:line="101" pos:column="34">(<param><decl><type><name pos:line="101" pos:column="35">string</name></type> <name pos:line="101" pos:column="42">message</name></decl></param>, <param><decl><type><name pos:line="101" pos:column="51">Exception</name></type> <name pos:line="101" pos:column="61">exception</name></decl></param>)</parameter_list>
        <block pos:line="102" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="103" pos:column="13">Logger</name><op:operator pos:line="103" pos:column="19">.</op:operator><name pos:line="103" pos:column="20">InfoException</name></name><argument_list pos:line="103" pos:column="33">(<argument><expr><name pos:line="103" pos:column="34">message</name></expr></argument>, <argument><expr><name pos:line="103" pos:column="43">exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="106" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="107" pos:column="9">/// Log message at Warn level.</comment>
        <comment type="line" pos:line="108" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="109" pos:column="9">/// &lt;param name="message"&gt;The message.&lt;/param&gt;</comment>
        <comment type="line" pos:line="110" pos:column="9">/// &lt;param name="exception"&gt;The exception.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="111" pos:column="9">public</specifier> <specifier pos:line="111" pos:column="16">override</specifier> <name pos:line="111" pos:column="25">void</name></type> <name pos:line="111" pos:column="30">Warn</name><parameter_list pos:line="111" pos:column="34">(<param><decl><type><name pos:line="111" pos:column="35">string</name></type> <name pos:line="111" pos:column="42">message</name></decl></param>, <param><decl><type><name pos:line="111" pos:column="51">Exception</name></type> <name pos:line="111" pos:column="61">exception</name></decl></param>)</parameter_list>
        <block pos:line="112" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="113" pos:column="13">Logger</name><op:operator pos:line="113" pos:column="19">.</op:operator><name pos:line="113" pos:column="20">WarnException</name></name><argument_list pos:line="113" pos:column="33">(<argument><expr><name pos:line="113" pos:column="34">message</name></expr></argument>, <argument><expr><name pos:line="113" pos:column="43">exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="116" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="117" pos:column="9">/// Log message at Error level.</comment>
        <comment type="line" pos:line="118" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="119" pos:column="9">/// &lt;param name="message"&gt;The message.&lt;/param&gt;</comment>
        <comment type="line" pos:line="120" pos:column="9">/// &lt;param name="exception"&gt;The exception.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="121" pos:column="9">public</specifier> <specifier pos:line="121" pos:column="16">override</specifier> <name pos:line="121" pos:column="25">void</name></type> <name pos:line="121" pos:column="30">Error</name><parameter_list pos:line="121" pos:column="35">(<param><decl><type><name pos:line="121" pos:column="36">string</name></type> <name pos:line="121" pos:column="43">message</name></decl></param>, <param><decl><type><name pos:line="121" pos:column="52">Exception</name></type> <name pos:line="121" pos:column="62">exception</name></decl></param>)</parameter_list>
        <block pos:line="122" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="123" pos:column="13">Logger</name><op:operator pos:line="123" pos:column="19">.</op:operator><name pos:line="123" pos:column="20">ErrorException</name></name><argument_list pos:line="123" pos:column="34">(<argument><expr><name pos:line="123" pos:column="35">message</name></expr></argument>, <argument><expr><name pos:line="123" pos:column="44">exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="126" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="127" pos:column="9">/// Log message at Fatal level.</comment>
        <comment type="line" pos:line="128" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="129" pos:column="9">/// &lt;param name="message"&gt;The message.&lt;/param&gt;</comment>
        <comment type="line" pos:line="130" pos:column="9">/// &lt;param name="exception"&gt;The exception.&lt;/param&gt;</comment>
        <function><type><specifier pos:line="131" pos:column="9">public</specifier> <specifier pos:line="131" pos:column="16">override</specifier> <name pos:line="131" pos:column="25">void</name></type> <name pos:line="131" pos:column="30">Fatal</name><parameter_list pos:line="131" pos:column="35">(<param><decl><type><name pos:line="131" pos:column="36">string</name></type> <name pos:line="131" pos:column="43">message</name></decl></param>, <param><decl><type><name pos:line="131" pos:column="52">Exception</name></type> <name pos:line="131" pos:column="62">exception</name></decl></param>)</parameter_list>
        <block pos:line="132" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="133" pos:column="13">Logger</name><op:operator pos:line="133" pos:column="19">.</op:operator><name pos:line="133" pos:column="20">FatalException</name></name><argument_list pos:line="133" pos:column="34">(<argument><expr><name pos:line="133" pos:column="35">message</name></expr></argument>, <argument><expr><name pos:line="133" pos:column="44">exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
