<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.AspNet\SerializationConverter\RequestModelConverter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Linq</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">AspNet</name><op:operator pos:line="3" pos:column="21">.</op:operator><name pos:line="3" pos:column="22">Model</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Extensions</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Tab</name><op:operator pos:line="6" pos:column="23">.</op:operator><name pos:line="6" pos:column="24">Assist</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Glimpse</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">AspNet</name><op:operator pos:line="8" pos:column="25">.</op:operator><name pos:line="8" pos:column="26">SerializationConverter</name></name>
<block pos:line="9" pos:column="1">{
    <class><specifier pos:line="10" pos:column="5">public</specifier> class <name pos:line="10" pos:column="18">RequestModelConverter</name> <super pos:line="10" pos:column="40">: <name><name pos:line="10" pos:column="42">SerializationConverter</name><argument_list pos:line="10" pos:column="64">&lt;<argument><name pos:line="10" pos:column="65">RequestModel</name></argument>&gt;</argument_list></name></super>
    <block pos:line="11" pos:column="5">{
        <function><type><specifier pos:line="12" pos:column="9">public</specifier> <specifier pos:line="12" pos:column="16">override</specifier> <name pos:line="12" pos:column="25">object</name></type> <name pos:line="12" pos:column="32">Convert</name><parameter_list pos:line="12" pos:column="39">(<param><decl><type><name pos:line="12" pos:column="40">RequestModel</name></type> <name pos:line="12" pos:column="53">request</name></decl></param>)</parameter_list>
        <block pos:line="13" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">var</name></type> <name pos:line="14" pos:column="17">root</name> <init pos:line="14" pos:column="22">= <expr><op:operator pos:line="14" pos:column="24">new</op:operator> <call><name pos:line="14" pos:column="28">TabObject</name><argument_list pos:line="14" pos:column="37">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="16" pos:column="13">root</name><op:operator pos:line="16" pos:column="17">.</op:operator><name pos:line="16" pos:column="18">AddRow</name></name><argument_list pos:line="16" pos:column="24">()</argument_list></call><op:operator pos:line="16" pos:column="26">.</op:operator><call><name pos:line="16" pos:column="27">Key</name><argument_list pos:line="16" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="16" pos:column="31">"Cookies"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="16" pos:column="41">.</op:operator><call><name pos:line="16" pos:column="42">Value</name><argument_list pos:line="16" pos:column="47">(<argument><expr><call><name pos:line="16" pos:column="48">BuildCookies</name><argument_list pos:line="16" pos:column="60">(<argument><expr><name><name pos:line="16" pos:column="61">request</name><op:operator pos:line="16" pos:column="68">.</op:operator><name pos:line="16" pos:column="69">Cookies</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="17" pos:column="13">root</name><op:operator pos:line="17" pos:column="17">.</op:operator><name pos:line="17" pos:column="18">AddRow</name></name><argument_list pos:line="17" pos:column="24">()</argument_list></call><op:operator pos:line="17" pos:column="26">.</op:operator><call><name pos:line="17" pos:column="27">Key</name><argument_list pos:line="17" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="17" pos:column="31">"Current UI Culture"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="17" pos:column="52">.</op:operator><call><name pos:line="17" pos:column="53">Value</name><argument_list pos:line="17" pos:column="58">(<argument><expr><name><name pos:line="17" pos:column="59">request</name><op:operator pos:line="17" pos:column="66">.</op:operator><name pos:line="17" pos:column="67">CurrentUiCulture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="18" pos:column="13">root</name><op:operator pos:line="18" pos:column="17">.</op:operator><name pos:line="18" pos:column="18">AddRow</name></name><argument_list pos:line="18" pos:column="24">()</argument_list></call><op:operator pos:line="18" pos:column="26">.</op:operator><call><name pos:line="18" pos:column="27">Key</name><argument_list pos:line="18" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="18" pos:column="31">"Files"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="18" pos:column="39">.</op:operator><call><name pos:line="18" pos:column="40">Value</name><argument_list pos:line="18" pos:column="45">(<argument><expr><call><name pos:line="18" pos:column="46">BuildFiles</name><argument_list pos:line="18" pos:column="56">(<argument><expr><name><name pos:line="18" pos:column="57">request</name><op:operator pos:line="18" pos:column="64">.</op:operator><name pos:line="18" pos:column="65">Files</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">root</name><op:operator pos:line="19" pos:column="17">.</op:operator><name pos:line="19" pos:column="18">AddRow</name></name><argument_list pos:line="19" pos:column="24">()</argument_list></call><op:operator pos:line="19" pos:column="26">.</op:operator><call><name pos:line="19" pos:column="27">Key</name><argument_list pos:line="19" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="19" pos:column="31">"Form Variables"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="19" pos:column="48">.</op:operator><call><name pos:line="19" pos:column="49">Value</name><argument_list pos:line="19" pos:column="54">(<argument><expr><call><name pos:line="19" pos:column="55">BuildFormVariables</name><argument_list pos:line="19" pos:column="73">(<argument><expr><name><name pos:line="19" pos:column="74">request</name><op:operator pos:line="19" pos:column="81">.</op:operator><name pos:line="19" pos:column="82">FormVariables</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">root</name><op:operator pos:line="20" pos:column="17">.</op:operator><name pos:line="20" pos:column="18">AddRow</name></name><argument_list pos:line="20" pos:column="24">()</argument_list></call><op:operator pos:line="20" pos:column="26">.</op:operator><call><name pos:line="20" pos:column="27">Key</name><argument_list pos:line="20" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="20" pos:column="31">"Header Fields"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="20" pos:column="47">.</op:operator><call><name pos:line="20" pos:column="48">Value</name><argument_list pos:line="20" pos:column="53">(<argument><expr><call><name pos:line="20" pos:column="54">BuildHeaderFields</name><argument_list pos:line="20" pos:column="71">(<argument><expr><name><name pos:line="20" pos:column="72">request</name><op:operator pos:line="20" pos:column="79">.</op:operator><name pos:line="20" pos:column="80">HeaderFields</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="21" pos:column="13">root</name><op:operator pos:line="21" pos:column="17">.</op:operator><name pos:line="21" pos:column="18">AddRow</name></name><argument_list pos:line="21" pos:column="24">()</argument_list></call><op:operator pos:line="21" pos:column="26">.</op:operator><call><name pos:line="21" pos:column="27">Key</name><argument_list pos:line="21" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="21" pos:column="31">"Query String"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="21" pos:column="46">.</op:operator><call><name pos:line="21" pos:column="47">Value</name><argument_list pos:line="21" pos:column="52">(<argument><expr><call><name pos:line="21" pos:column="53">BuildQueryString</name><argument_list pos:line="21" pos:column="69">(<argument><expr><name><name pos:line="21" pos:column="70">request</name><op:operator pos:line="21" pos:column="77">.</op:operator><name pos:line="21" pos:column="78">QueryString</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">root</name><op:operator pos:line="22" pos:column="17">.</op:operator><name pos:line="22" pos:column="18">AddRow</name></name><argument_list pos:line="22" pos:column="24">()</argument_list></call><op:operator pos:line="22" pos:column="26">.</op:operator><call><name pos:line="22" pos:column="27">Key</name><argument_list pos:line="22" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="22" pos:column="31">"Url"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="22" pos:column="37">.</op:operator><call><name pos:line="22" pos:column="38">Value</name><argument_list pos:line="22" pos:column="43">(<argument><expr><call><name><name pos:line="22" pos:column="44">request</name><op:operator pos:line="22" pos:column="51">.</op:operator><name pos:line="22" pos:column="52">Url</name><op:operator pos:line="22" pos:column="55">.</op:operator><name pos:line="22" pos:column="56">ToString</name></name><argument_list pos:line="22" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="23" pos:column="13">root</name><op:operator pos:line="23" pos:column="17">.</op:operator><name pos:line="23" pos:column="18">AddRow</name></name><argument_list pos:line="23" pos:column="24">()</argument_list></call><op:operator pos:line="23" pos:column="26">.</op:operator><call><name pos:line="23" pos:column="27">Key</name><argument_list pos:line="23" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="23" pos:column="31">"Url Referrer"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="23" pos:column="46">.</op:operator><call><name pos:line="23" pos:column="47">Value</name><argument_list pos:line="23" pos:column="52">(<argument><expr><call><name><name pos:line="23" pos:column="53">request</name><op:operator pos:line="23" pos:column="60">.</op:operator><name pos:line="23" pos:column="61">UrlReferrer</name><op:operator pos:line="23" pos:column="72">.</op:operator><name pos:line="23" pos:column="73">ToStringOrDefault</name></name><argument_list pos:line="23" pos:column="90">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="24" pos:column="13">root</name><op:operator pos:line="24" pos:column="17">.</op:operator><name pos:line="24" pos:column="18">AddRow</name></name><argument_list pos:line="24" pos:column="24">()</argument_list></call><op:operator pos:line="24" pos:column="26">.</op:operator><call><name pos:line="24" pos:column="27">Key</name><argument_list pos:line="24" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="24" pos:column="31">"Raw Url"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="41">.</op:operator><call><name pos:line="24" pos:column="42">Value</name><argument_list pos:line="24" pos:column="47">(<argument><expr><name><name pos:line="24" pos:column="48">request</name><op:operator pos:line="24" pos:column="55">.</op:operator><name pos:line="24" pos:column="56">RawUrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">root</name><op:operator pos:line="25" pos:column="17">.</op:operator><name pos:line="25" pos:column="18">AddRow</name></name><argument_list pos:line="25" pos:column="24">()</argument_list></call><op:operator pos:line="25" pos:column="26">.</op:operator><call><name pos:line="25" pos:column="27">Key</name><argument_list pos:line="25" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="25" pos:column="31">"Request Type"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="25" pos:column="46">.</op:operator><call><name pos:line="25" pos:column="47">Value</name><argument_list pos:line="25" pos:column="52">(<argument><expr><name><name pos:line="25" pos:column="53">request</name><op:operator pos:line="25" pos:column="60">.</op:operator><name pos:line="25" pos:column="61">RequestType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">root</name><op:operator pos:line="26" pos:column="17">.</op:operator><name pos:line="26" pos:column="18">AddRow</name></name><argument_list pos:line="26" pos:column="24">()</argument_list></call><op:operator pos:line="26" pos:column="26">.</op:operator><call><name pos:line="26" pos:column="27">Key</name><argument_list pos:line="26" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="26" pos:column="31">"Url"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="26" pos:column="37">.</op:operator><call><name pos:line="26" pos:column="38">Value</name><argument_list pos:line="26" pos:column="43">(<argument><expr><name><name pos:line="26" pos:column="44">request</name><op:operator pos:line="26" pos:column="51">.</op:operator><name pos:line="26" pos:column="52">Url</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">root</name><op:operator pos:line="27" pos:column="17">.</op:operator><name pos:line="27" pos:column="18">AddRow</name></name><argument_list pos:line="27" pos:column="24">()</argument_list></call><op:operator pos:line="27" pos:column="26">.</op:operator><call><name pos:line="27" pos:column="27">Key</name><argument_list pos:line="27" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="27" pos:column="31">"Url Referrer"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="27" pos:column="46">.</op:operator><call><name pos:line="27" pos:column="47">Value</name><argument_list pos:line="27" pos:column="52">(<argument><expr><name><name pos:line="27" pos:column="53">request</name><op:operator pos:line="27" pos:column="60">.</op:operator><name pos:line="27" pos:column="61">UrlReferrer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">root</name><op:operator pos:line="28" pos:column="17">.</op:operator><name pos:line="28" pos:column="18">AddRow</name></name><argument_list pos:line="28" pos:column="24">()</argument_list></call><op:operator pos:line="28" pos:column="26">.</op:operator><call><name pos:line="28" pos:column="27">Key</name><argument_list pos:line="28" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="28" pos:column="31">"User Agent"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="28" pos:column="44">.</op:operator><call><name pos:line="28" pos:column="45">Value</name><argument_list pos:line="28" pos:column="50">(<argument><expr><name><name pos:line="28" pos:column="51">request</name><op:operator pos:line="28" pos:column="58">.</op:operator><name pos:line="28" pos:column="59">UserAgent</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="29" pos:column="13">root</name><op:operator pos:line="29" pos:column="17">.</op:operator><name pos:line="29" pos:column="18">AddRow</name></name><argument_list pos:line="29" pos:column="24">()</argument_list></call><op:operator pos:line="29" pos:column="26">.</op:operator><call><name pos:line="29" pos:column="27">Key</name><argument_list pos:line="29" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="29" pos:column="31">"User Host Address"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="29" pos:column="51">.</op:operator><call><name pos:line="29" pos:column="52">Value</name><argument_list pos:line="29" pos:column="57">(<argument><expr><name><name pos:line="29" pos:column="58">request</name><op:operator pos:line="29" pos:column="65">.</op:operator><name pos:line="29" pos:column="66">UserHostAddress</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">root</name><op:operator pos:line="30" pos:column="17">.</op:operator><name pos:line="30" pos:column="18">AddRow</name></name><argument_list pos:line="30" pos:column="24">()</argument_list></call><op:operator pos:line="30" pos:column="26">.</op:operator><call><name pos:line="30" pos:column="27">Key</name><argument_list pos:line="30" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="30" pos:column="31">"User Host Name"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="30" pos:column="48">.</op:operator><call><name pos:line="30" pos:column="49">Value</name><argument_list pos:line="30" pos:column="54">(<argument><expr><name><name pos:line="30" pos:column="55">request</name><op:operator pos:line="30" pos:column="62">.</op:operator><name pos:line="30" pos:column="63">UserHostName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">root</name><op:operator pos:line="32" pos:column="17">.</op:operator><name pos:line="32" pos:column="18">AddRow</name></name><argument_list pos:line="32" pos:column="24">()</argument_list></call><op:operator pos:line="32" pos:column="26">.</op:operator><call><name pos:line="32" pos:column="27">Key</name><argument_list pos:line="32" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="32" pos:column="31">"Path"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="32" pos:column="38">.</op:operator><call><name pos:line="32" pos:column="39">Value</name><argument_list pos:line="32" pos:column="44">(<argument><expr><call><name pos:line="32" pos:column="45">BuildPathFields</name><argument_list pos:line="32" pos:column="60">(<argument><expr><name pos:line="32" pos:column="61">request</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:line="34" pos:column="13">return <expr><call><name><name pos:line="34" pos:column="20">root</name><op:operator pos:line="34" pos:column="24">.</op:operator><name pos:line="34" pos:column="25">Build</name></name><argument_list pos:line="34" pos:column="30">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="37" pos:column="9">private</specifier> <name pos:line="37" pos:column="17">TabObject</name></type> <name pos:line="37" pos:column="27">BuildPathFields</name><parameter_list pos:line="37" pos:column="42">(<param><decl><type><name pos:line="37" pos:column="43">RequestModel</name></type> <name pos:line="37" pos:column="56">request</name></decl></param>)</parameter_list>
        <block pos:line="38" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">var</name></type> <name pos:line="39" pos:column="17">root</name> <init pos:line="39" pos:column="22">= <expr><op:operator pos:line="39" pos:column="24">new</op:operator> <call><name pos:line="39" pos:column="28">TabObject</name><argument_list pos:line="39" pos:column="37">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="41" pos:column="13">root</name><op:operator pos:line="41" pos:column="17">.</op:operator><name pos:line="41" pos:column="18">AddRow</name></name><argument_list pos:line="41" pos:column="24">()</argument_list></call><op:operator pos:line="41" pos:column="26">.</op:operator><call><name pos:line="41" pos:column="27">Key</name><argument_list pos:line="41" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="31">"App Relative Current Execution File Path"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="41" pos:column="74">.</op:operator><call><name pos:line="41" pos:column="75">Value</name><argument_list pos:line="41" pos:column="80">(<argument><expr><name><name pos:line="41" pos:column="81">request</name><op:operator pos:line="41" pos:column="88">.</op:operator><name pos:line="41" pos:column="89">AppRelativeCurrentExecutionFilePath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="42" pos:column="13">root</name><op:operator pos:line="42" pos:column="17">.</op:operator><name pos:line="42" pos:column="18">AddRow</name></name><argument_list pos:line="42" pos:column="24">()</argument_list></call><op:operator pos:line="42" pos:column="26">.</op:operator><call><name pos:line="42" pos:column="27">Key</name><argument_list pos:line="42" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="42" pos:column="31">"Application Path"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="42" pos:column="50">.</op:operator><call><name pos:line="42" pos:column="51">Value</name><argument_list pos:line="42" pos:column="56">(<argument><expr><name><name pos:line="42" pos:column="57">request</name><op:operator pos:line="42" pos:column="64">.</op:operator><name pos:line="42" pos:column="65">ApplicationPath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="43" pos:column="13">root</name><op:operator pos:line="43" pos:column="17">.</op:operator><name pos:line="43" pos:column="18">AddRow</name></name><argument_list pos:line="43" pos:column="24">()</argument_list></call><op:operator pos:line="43" pos:column="26">.</op:operator><call><name pos:line="43" pos:column="27">Key</name><argument_list pos:line="43" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="43" pos:column="31">"Current Execution File Path"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="43" pos:column="61">.</op:operator><call><name pos:line="43" pos:column="62">Value</name><argument_list pos:line="43" pos:column="67">(<argument><expr><name><name pos:line="43" pos:column="68">request</name><op:operator pos:line="43" pos:column="75">.</op:operator><name pos:line="43" pos:column="76">CurrentExecutionFilePath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="44" pos:column="13">root</name><op:operator pos:line="44" pos:column="17">.</op:operator><name pos:line="44" pos:column="18">AddRow</name></name><argument_list pos:line="44" pos:column="24">()</argument_list></call><op:operator pos:line="44" pos:column="26">.</op:operator><call><name pos:line="44" pos:column="27">Key</name><argument_list pos:line="44" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="44" pos:column="31">"File Path"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="44" pos:column="43">.</op:operator><call><name pos:line="44" pos:column="44">Value</name><argument_list pos:line="44" pos:column="49">(<argument><expr><name><name pos:line="44" pos:column="50">request</name><op:operator pos:line="44" pos:column="57">.</op:operator><name pos:line="44" pos:column="58">FilePath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="45" pos:column="13">root</name><op:operator pos:line="45" pos:column="17">.</op:operator><name pos:line="45" pos:column="18">AddRow</name></name><argument_list pos:line="45" pos:column="24">()</argument_list></call><op:operator pos:line="45" pos:column="26">.</op:operator><call><name pos:line="45" pos:column="27">Key</name><argument_list pos:line="45" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="45" pos:column="31">"Path"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="45" pos:column="38">.</op:operator><call><name pos:line="45" pos:column="39">Value</name><argument_list pos:line="45" pos:column="44">(<argument><expr><name><name pos:line="45" pos:column="45">request</name><op:operator pos:line="45" pos:column="52">.</op:operator><name pos:line="45" pos:column="53">Path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">root</name><op:operator pos:line="46" pos:column="17">.</op:operator><name pos:line="46" pos:column="18">AddRow</name></name><argument_list pos:line="46" pos:column="24">()</argument_list></call><op:operator pos:line="46" pos:column="26">.</op:operator><call><name pos:line="46" pos:column="27">Key</name><argument_list pos:line="46" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="31">"Path Info"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="46" pos:column="43">.</op:operator><call><name pos:line="46" pos:column="44">Value</name><argument_list pos:line="46" pos:column="49">(<argument><expr><name><name pos:line="46" pos:column="50">request</name><op:operator pos:line="46" pos:column="57">.</op:operator><name pos:line="46" pos:column="58">PathInfo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="47" pos:column="13">root</name><op:operator pos:line="47" pos:column="17">.</op:operator><name pos:line="47" pos:column="18">AddRow</name></name><argument_list pos:line="47" pos:column="24">()</argument_list></call><op:operator pos:line="47" pos:column="26">.</op:operator><call><name pos:line="47" pos:column="27">Key</name><argument_list pos:line="47" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="47" pos:column="31">"Physical Application Path"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="47" pos:column="59">.</op:operator><call><name pos:line="47" pos:column="60">Value</name><argument_list pos:line="47" pos:column="65">(<argument><expr><name><name pos:line="47" pos:column="66">request</name><op:operator pos:line="47" pos:column="73">.</op:operator><name pos:line="47" pos:column="74">PhysicalApplicationPath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">root</name><op:operator pos:line="48" pos:column="17">.</op:operator><name pos:line="48" pos:column="18">AddRow</name></name><argument_list pos:line="48" pos:column="24">()</argument_list></call><op:operator pos:line="48" pos:column="26">.</op:operator><call><name pos:line="48" pos:column="27">Key</name><argument_list pos:line="48" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="48" pos:column="31">"Physical Path"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="48" pos:column="47">.</op:operator><call><name pos:line="48" pos:column="48">Value</name><argument_list pos:line="48" pos:column="53">(<argument><expr><name><name pos:line="48" pos:column="54">request</name><op:operator pos:line="48" pos:column="61">.</op:operator><name pos:line="48" pos:column="62">PhysicalPath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:line="50" pos:column="13">return <expr><name pos:line="50" pos:column="20">root</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="53" pos:column="9">public</specifier> <name><name pos:line="53" pos:column="16">IEnumerable</name><argument_list pos:line="53" pos:column="27">&lt;<argument><name><name pos:line="53" pos:column="28">RequestModel</name><op:operator pos:line="53" pos:column="40">.</op:operator><name pos:line="53" pos:column="41">Cookie</name></name></argument>&gt;</argument_list></name></type> <name pos:line="53" pos:column="49">BuildCookies</name><parameter_list pos:line="53" pos:column="61">(<param><decl><type><name><name pos:line="53" pos:column="62">IEnumerable</name><argument_list pos:line="53" pos:column="73">&lt;<argument><name><name pos:line="53" pos:column="74">RequestModel</name><op:operator pos:line="53" pos:column="86">.</op:operator><name pos:line="53" pos:column="87">Cookie</name></name></argument>&gt;</argument_list></name></type> <name pos:line="53" pos:column="95">cookies</name></decl></param>)</parameter_list>
        <block pos:line="54" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="55" pos:column="13">var</name></type> <name pos:line="55" pos:column="17">cookiesList</name> <init pos:line="55" pos:column="29">= <expr><name pos:line="55" pos:column="31">cookies</name> <op:operator pos:line="55" pos:column="39">as</op:operator> <name><name pos:line="55" pos:column="42">IList</name><argument_list pos:line="55" pos:column="47">&lt;<argument><name><name pos:line="55" pos:column="48">RequestModel</name><op:operator pos:line="55" pos:column="60">.</op:operator><name pos:line="55" pos:column="61">Cookie</name></name></argument>&gt;</argument_list></name> <op:operator pos:line="55" pos:column="69">??</op:operator> <call><name><name pos:line="55" pos:column="72">cookies</name><op:operator pos:line="55" pos:column="79">.</op:operator><name pos:line="55" pos:column="80">ToList</name></name><argument_list pos:line="55" pos:column="86">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><name pos:line="57" pos:column="17">cookies</name> <op:operator pos:line="57" pos:column="25">==</op:operator> <name pos:line="57" pos:column="28">null</name> <op:operator pos:line="57" pos:column="33">||</op:operator> <op:operator pos:line="57" pos:column="36">!</op:operator><call><name><name pos:line="57" pos:column="37">cookiesList</name><op:operator pos:line="57" pos:column="48">.</op:operator><name pos:line="57" pos:column="49">Any</name></name><argument_list pos:line="57" pos:column="52">()</argument_list></call></expr>)</condition><then pos:line="57" pos:column="55">
            <block pos:line="58" pos:column="13">{
                <return pos:line="59" pos:column="17">return <expr><name pos:line="59" pos:column="24">null</name></expr>;</return>
            }</block></then></if>

             <return pos:line="62" pos:column="14">return <expr><name pos:line="62" pos:column="21">cookiesList</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="65" pos:column="9">private</specifier> <name><name pos:line="65" pos:column="17">IEnumerable</name><argument_list pos:line="65" pos:column="28">&lt;<argument><name><name pos:line="65" pos:column="29">RequestModel</name><op:operator pos:line="65" pos:column="41">.</op:operator><name pos:line="65" pos:column="42">PostedFile</name></name></argument>&gt;</argument_list></name></type> <name pos:line="65" pos:column="54">BuildFiles</name><parameter_list pos:line="65" pos:column="64">(<param><decl><type><name><name pos:line="65" pos:column="65">IEnumerable</name><argument_list pos:line="65" pos:column="76">&lt;<argument><name><name pos:line="65" pos:column="77">RequestModel</name><op:operator pos:line="65" pos:column="89">.</op:operator><name pos:line="65" pos:column="90">PostedFile</name></name></argument>&gt;</argument_list></name></type> <name pos:line="65" pos:column="102">files</name></decl></param>)</parameter_list>
        <block pos:line="66" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="67" pos:column="13">var</name></type> <name pos:line="67" pos:column="17">filesList</name> <init pos:line="67" pos:column="27">= <expr><name pos:line="67" pos:column="29">files</name> <op:operator pos:line="67" pos:column="35">as</op:operator> <name><name pos:line="67" pos:column="38">IList</name><argument_list pos:line="67" pos:column="43">&lt;<argument><name><name pos:line="67" pos:column="44">RequestModel</name><op:operator pos:line="67" pos:column="56">.</op:operator><name pos:line="67" pos:column="57">PostedFile</name></name></argument>&gt;</argument_list></name> <op:operator pos:line="67" pos:column="69">??</op:operator> <call><name><name pos:line="67" pos:column="72">files</name><op:operator pos:line="67" pos:column="77">.</op:operator><name pos:line="67" pos:column="78">ToList</name></name><argument_list pos:line="67" pos:column="84">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name pos:line="69" pos:column="17">files</name> <op:operator pos:line="69" pos:column="23">==</op:operator> <name pos:line="69" pos:column="26">null</name> <op:operator pos:line="69" pos:column="31">||</op:operator> <op:operator pos:line="69" pos:column="34">!</op:operator><call><name><name pos:line="69" pos:column="35">filesList</name><op:operator pos:line="69" pos:column="44">.</op:operator><name pos:line="69" pos:column="45">Any</name></name><argument_list pos:line="69" pos:column="48">()</argument_list></call></expr>)</condition><then pos:line="69" pos:column="51">
            <block pos:line="70" pos:column="13">{
                <return pos:line="71" pos:column="17">return <expr><name pos:line="71" pos:column="24">null</name></expr>;</return>
            }</block></then></if>

            <return pos:line="74" pos:column="13">return <expr><name pos:line="74" pos:column="20">filesList</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="77" pos:column="9">private</specifier> <name><name pos:line="77" pos:column="17">IEnumerable</name><argument_list pos:line="77" pos:column="28">&lt;<argument><name><name pos:line="77" pos:column="29">RequestModel</name><op:operator pos:line="77" pos:column="41">.</op:operator><name pos:line="77" pos:column="42">FormVariable</name></name></argument>&gt;</argument_list></name></type> <name pos:line="77" pos:column="56">BuildFormVariables</name><parameter_list pos:line="77" pos:column="74">(<param><decl><type><name><name pos:line="77" pos:column="75">IEnumerable</name><argument_list pos:line="77" pos:column="86">&lt;<argument><name><name pos:line="77" pos:column="87">RequestModel</name><op:operator pos:line="77" pos:column="99">.</op:operator><name pos:line="77" pos:column="100">FormVariable</name></name></argument>&gt;</argument_list></name></type> <name pos:line="77" pos:column="114">formVariables</name></decl></param>)</parameter_list>
        <block pos:line="78" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="79" pos:column="13">var</name></type> <name pos:line="79" pos:column="17">formVariablesList</name> <init pos:line="79" pos:column="35">= <expr><name pos:line="79" pos:column="37">formVariables</name> <op:operator pos:line="79" pos:column="51">as</op:operator> <name><name pos:line="79" pos:column="54">IList</name><argument_list pos:line="79" pos:column="59">&lt;<argument><name><name pos:line="79" pos:column="60">RequestModel</name><op:operator pos:line="79" pos:column="72">.</op:operator><name pos:line="79" pos:column="73">FormVariable</name></name></argument>&gt;</argument_list></name> <op:operator pos:line="79" pos:column="87">??</op:operator> <call><name><name pos:line="79" pos:column="90">formVariables</name><op:operator pos:line="79" pos:column="103">.</op:operator><name pos:line="79" pos:column="104">ToList</name></name><argument_list pos:line="79" pos:column="110">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="80" pos:column="13">if <condition pos:line="80" pos:column="16">(<expr><op:operator pos:line="80" pos:column="17">!</op:operator><call><name><name pos:line="80" pos:column="18">formVariablesList</name><op:operator pos:line="80" pos:column="35">.</op:operator><name pos:line="80" pos:column="36">Any</name></name><argument_list pos:line="80" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="80" pos:column="42">
            <block pos:line="81" pos:column="13">{
                <return pos:line="82" pos:column="17">return <expr><name pos:line="82" pos:column="24">null</name></expr>;</return>
            }</block></then></if>

            <return pos:line="85" pos:column="13">return <expr><name pos:line="85" pos:column="20">formVariablesList</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="88" pos:column="9">private</specifier> <name><name pos:line="88" pos:column="17">IEnumerable</name><argument_list pos:line="88" pos:column="28">&lt;<argument><name><name pos:line="88" pos:column="29">RequestModel</name><op:operator pos:line="88" pos:column="41">.</op:operator><name pos:line="88" pos:column="42">HeaderField</name></name></argument>&gt;</argument_list></name></type> <name pos:line="88" pos:column="55">BuildHeaderFields</name><parameter_list pos:line="88" pos:column="72">(<param><decl><type><name><name pos:line="88" pos:column="73">IEnumerable</name><argument_list pos:line="88" pos:column="84">&lt;<argument><name><name pos:line="88" pos:column="85">RequestModel</name><op:operator pos:line="88" pos:column="97">.</op:operator><name pos:line="88" pos:column="98">HeaderField</name></name></argument>&gt;</argument_list></name></type> <name pos:line="88" pos:column="111">headerFields</name></decl></param>)</parameter_list>
        <block pos:line="89" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="90" pos:column="13">var</name></type> <name pos:line="90" pos:column="17">headerFieldsList</name> <init pos:line="90" pos:column="34">= <expr><name pos:line="90" pos:column="36">headerFields</name> <op:operator pos:line="90" pos:column="49">as</op:operator> <name><name pos:line="90" pos:column="52">IList</name><argument_list pos:line="90" pos:column="57">&lt;<argument><name><name pos:line="90" pos:column="58">RequestModel</name><op:operator pos:line="90" pos:column="70">.</op:operator><name pos:line="90" pos:column="71">HeaderField</name></name></argument>&gt;</argument_list></name> <op:operator pos:line="90" pos:column="84">??</op:operator> <call><name><name pos:line="90" pos:column="87">headerFields</name><op:operator pos:line="90" pos:column="99">.</op:operator><name pos:line="90" pos:column="100">ToList</name></name><argument_list pos:line="90" pos:column="106">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="92" pos:column="13">if <condition pos:line="92" pos:column="16">(<expr><op:operator pos:line="92" pos:column="17">!</op:operator><call><name><name pos:line="92" pos:column="18">headerFieldsList</name><op:operator pos:line="92" pos:column="34">.</op:operator><name pos:line="92" pos:column="35">Any</name></name><argument_list pos:line="92" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="92" pos:column="41">
            <block pos:line="93" pos:column="13">{
                <return pos:line="94" pos:column="17">return <expr><name pos:line="94" pos:column="24">null</name></expr>;</return>
            }</block></then></if>

            <return pos:line="97" pos:column="13">return <expr><call><name><name pos:line="97" pos:column="20">headerFieldsList</name><op:operator pos:line="97" pos:column="36">.</op:operator><name pos:line="97" pos:column="37">Where</name></name><argument_list pos:line="97" pos:column="42">(<argument><expr><lambda><name pos:line="97" pos:column="43">h</name> <op:operator pos:line="97" pos:column="45">=&gt;</op:operator> <call><name><name pos:line="97" pos:column="48">h</name><op:operator pos:line="97" pos:column="49">.</op:operator><name pos:line="97" pos:column="50">Key</name><op:operator pos:line="97" pos:column="53">.</op:operator><name pos:line="97" pos:column="54">ToLower</name></name><argument_list pos:line="97" pos:column="61">()</argument_list></call> <op:operator pos:line="97" pos:column="64">!=</op:operator> <lit:literal type="string" pos:line="97" pos:column="67">"cookie"</lit:literal></lambda></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="100" pos:column="9">private</specifier> <name><name pos:line="100" pos:column="17">IEnumerable</name><argument_list pos:line="100" pos:column="28">&lt;<argument><name><name pos:line="100" pos:column="29">RequestModel</name><op:operator pos:line="100" pos:column="41">.</op:operator><name pos:line="100" pos:column="42">QueryStringParameter</name></name></argument>&gt;</argument_list></name></type> <name pos:line="100" pos:column="64">BuildQueryString</name><parameter_list pos:line="100" pos:column="80">(<param><decl><type><name><name pos:line="100" pos:column="81">IEnumerable</name><argument_list pos:line="100" pos:column="92">&lt;<argument><name><name pos:line="100" pos:column="93">RequestModel</name><op:operator pos:line="100" pos:column="105">.</op:operator><name pos:line="100" pos:column="106">QueryStringParameter</name></name></argument>&gt;</argument_list></name></type> <name pos:line="100" pos:column="128">queryStringParameters</name></decl></param>)</parameter_list>
        <block pos:line="101" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="102" pos:column="13">var</name></type> <name pos:line="102" pos:column="17">queryStringParametersList</name> <init pos:line="102" pos:column="43">= <expr><name pos:line="102" pos:column="45">queryStringParameters</name> <op:operator pos:line="102" pos:column="67">as</op:operator> <name><name pos:line="102" pos:column="70">IList</name><argument_list pos:line="102" pos:column="75">&lt;<argument><name><name pos:line="102" pos:column="76">RequestModel</name><op:operator pos:line="102" pos:column="88">.</op:operator><name pos:line="102" pos:column="89">QueryStringParameter</name></name></argument>&gt;</argument_list></name> <op:operator pos:line="102" pos:column="111">??</op:operator> <call><name><name pos:line="102" pos:column="114">queryStringParameters</name><op:operator pos:line="102" pos:column="135">.</op:operator><name pos:line="102" pos:column="136">Where</name></name><argument_list pos:line="102" pos:column="141">(<argument><expr><lambda><name pos:line="102" pos:column="142">p</name> <op:operator pos:line="102" pos:column="144">=&gt;</op:operator> <name><name pos:line="102" pos:column="147">p</name><op:operator pos:line="102" pos:column="148">.</op:operator><name pos:line="102" pos:column="149">Key</name></name> <op:operator pos:line="102" pos:column="153">!=</op:operator> <name pos:line="102" pos:column="156">null</name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="102" pos:column="161">.</op:operator><call><name pos:line="102" pos:column="162">ToList</name><argument_list pos:line="102" pos:column="168">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="104" pos:column="13">if <condition pos:line="104" pos:column="16">(<expr><op:operator pos:line="104" pos:column="17">!</op:operator><call><name><name pos:line="104" pos:column="18">queryStringParametersList</name><op:operator pos:line="104" pos:column="43">.</op:operator><name pos:line="104" pos:column="44">Any</name></name><argument_list pos:line="104" pos:column="47">()</argument_list></call></expr>)</condition><then pos:line="104" pos:column="50">
            <block pos:line="105" pos:column="13">{
                <return pos:line="106" pos:column="17">return <expr><name pos:line="106" pos:column="24">null</name></expr>;</return>
            }</block></then></if>

            <return pos:line="109" pos:column="13">return <expr><name pos:line="109" pos:column="20">queryStringParametersList</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
