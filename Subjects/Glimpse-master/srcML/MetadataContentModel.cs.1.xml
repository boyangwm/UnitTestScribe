<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc\Model\MetadataContentModel.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Diagnostics</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">CodeAnalysis</name></name>;</using>

<namespace pos:line="3" pos:column="1">namespace <name><name pos:line="3" pos:column="11">Glimpse</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">Mvc</name><op:operator pos:line="3" pos:column="22">.</op:operator><name pos:line="3" pos:column="23">Model</name></name>
<block pos:line="4" pos:column="1">{
    <class><specifier pos:line="5" pos:column="5">public</specifier> class <name pos:line="5" pos:column="18">MetadataContentModel</name>
    <block pos:line="6" pos:column="5">{
        <constructor><specifier pos:line="7" pos:column="9">public</specifier> <name pos:line="7" pos:column="16">MetadataContentModel</name><parameter_list pos:line="7" pos:column="36">()</parameter_list>
        <block pos:line="8" pos:column="9">{
            <expr_stmt><expr><name pos:line="9" pos:column="13">ConvertEmptyStringToNull</name> <op:operator pos:line="9" pos:column="38">=</op:operator> <op:operator pos:line="9" pos:column="40">new</op:operator> <name><name pos:line="9" pos:column="44">DefaultValueModel</name><argument_list pos:line="9" pos:column="61">&lt;<argument><name pos:line="9" pos:column="62">bool</name></argument>&gt;</argument_list></name> <block pos:line="9" pos:column="68">{ <expr><name pos:line="9" pos:column="70">Default</name> <op:operator pos:line="9" pos:column="78">=</op:operator> <lit:literal type="boolean" pos:line="9" pos:column="80">true</lit:literal></expr> }</block></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="10" pos:column="13">DataTypeName</name> <op:operator pos:line="10" pos:column="26">=</op:operator> <op:operator pos:line="10" pos:column="28">new</op:operator> <call><name><name pos:line="10" pos:column="32">DefaultValueModel</name><argument_list pos:line="10" pos:column="49">&lt;<argument><name pos:line="10" pos:column="50">string</name></argument>&gt;</argument_list></name><argument_list pos:line="10" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="11" pos:column="13">Description</name> <op:operator pos:line="11" pos:column="25">=</op:operator> <op:operator pos:line="11" pos:column="27">new</op:operator> <call><name><name pos:line="11" pos:column="31">DefaultValueModel</name><argument_list pos:line="11" pos:column="48">&lt;<argument><name pos:line="11" pos:column="49">string</name></argument>&gt;</argument_list></name><argument_list pos:line="11" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="12" pos:column="13">DisplayFormatString</name> <op:operator pos:line="12" pos:column="33">=</op:operator> <op:operator pos:line="12" pos:column="35">new</op:operator> <call><name><name pos:line="12" pos:column="39">DefaultValueModel</name><argument_list pos:line="12" pos:column="56">&lt;<argument><name pos:line="12" pos:column="57">string</name></argument>&gt;</argument_list></name><argument_list pos:line="12" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="13" pos:column="13">DisplayName</name> <op:operator pos:line="13" pos:column="25">=</op:operator> <op:operator pos:line="13" pos:column="27">new</op:operator> <call><name><name pos:line="13" pos:column="31">DefaultValueModel</name><argument_list pos:line="13" pos:column="48">&lt;<argument><name pos:line="13" pos:column="49">string</name></argument>&gt;</argument_list></name><argument_list pos:line="13" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="14" pos:column="13">EditFormatString</name> <op:operator pos:line="14" pos:column="30">=</op:operator> <op:operator pos:line="14" pos:column="32">new</op:operator> <call><name><name pos:line="14" pos:column="36">DefaultValueModel</name><argument_list pos:line="14" pos:column="53">&lt;<argument><name pos:line="14" pos:column="54">string</name></argument>&gt;</argument_list></name><argument_list pos:line="14" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="15" pos:column="13">HideSurroundingHtml</name> <op:operator pos:line="15" pos:column="33">=</op:operator> <op:operator pos:line="15" pos:column="35">new</op:operator> <call><name><name pos:line="15" pos:column="39">DefaultValueModel</name><argument_list pos:line="15" pos:column="56">&lt;<argument><name pos:line="15" pos:column="57">bool</name></argument>&gt;</argument_list></name><argument_list pos:line="15" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="16" pos:column="13">IsComplexType</name> <op:operator pos:line="16" pos:column="27">=</op:operator> <op:operator pos:line="16" pos:column="29">new</op:operator> <call><name><name pos:line="16" pos:column="33">DefaultValueModel</name><argument_list pos:line="16" pos:column="50">&lt;<argument><name pos:line="16" pos:column="51">bool</name></argument>&gt;</argument_list></name><argument_list pos:line="16" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="17" pos:column="13">IsNullableValueType</name> <op:operator pos:line="17" pos:column="33">=</op:operator> <op:operator pos:line="17" pos:column="35">new</op:operator> <call><name><name pos:line="17" pos:column="39">DefaultValueModel</name><argument_list pos:line="17" pos:column="56">&lt;<argument><name pos:line="17" pos:column="57">bool</name></argument>&gt;</argument_list></name><argument_list pos:line="17" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="18" pos:column="13">IsReadOnly</name> <op:operator pos:line="18" pos:column="24">=</op:operator> <op:operator pos:line="18" pos:column="26">new</op:operator> <call><name><name pos:line="18" pos:column="30">DefaultValueModel</name><argument_list pos:line="18" pos:column="47">&lt;<argument><name pos:line="18" pos:column="48">bool</name></argument>&gt;</argument_list></name><argument_list pos:line="18" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="19" pos:column="13">IsRequired</name> <op:operator pos:line="19" pos:column="24">=</op:operator> <op:operator pos:line="19" pos:column="26">new</op:operator> <call><name><name pos:line="19" pos:column="30">DefaultValueModel</name><argument_list pos:line="19" pos:column="47">&lt;<argument><name pos:line="19" pos:column="48">bool</name></argument>&gt;</argument_list></name><argument_list pos:line="19" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="20" pos:column="13">NullDisplayText</name> <op:operator pos:line="20" pos:column="29">=</op:operator> <op:operator pos:line="20" pos:column="31">new</op:operator> <call><name><name pos:line="20" pos:column="35">DefaultValueModel</name><argument_list pos:line="20" pos:column="52">&lt;<argument><name pos:line="20" pos:column="53">string</name></argument>&gt;</argument_list></name><argument_list pos:line="20" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="21" pos:column="13">ShortDisplayName</name> <op:operator pos:line="21" pos:column="30">=</op:operator> <op:operator pos:line="21" pos:column="32">new</op:operator> <call><name><name pos:line="21" pos:column="36">DefaultValueModel</name><argument_list pos:line="21" pos:column="53">&lt;<argument><name pos:line="21" pos:column="54">string</name></argument>&gt;</argument_list></name><argument_list pos:line="21" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="22" pos:column="13">ShowForDisplay</name> <op:operator pos:line="22" pos:column="28">=</op:operator> <op:operator pos:line="22" pos:column="30">new</op:operator> <name><name pos:line="22" pos:column="34">DefaultValueModel</name><argument_list pos:line="22" pos:column="51">&lt;<argument><name pos:line="22" pos:column="52">bool</name></argument>&gt;</argument_list></name> <block pos:line="22" pos:column="58">{ <expr><name pos:line="22" pos:column="60">Default</name> <op:operator pos:line="22" pos:column="68">=</op:operator> <lit:literal type="boolean" pos:line="22" pos:column="70">true</lit:literal></expr> }</block></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="23" pos:column="13">ShowForEdit</name> <op:operator pos:line="23" pos:column="25">=</op:operator> <op:operator pos:line="23" pos:column="27">new</op:operator> <name><name pos:line="23" pos:column="31">DefaultValueModel</name><argument_list pos:line="23" pos:column="48">&lt;<argument><name pos:line="23" pos:column="49">bool</name></argument>&gt;</argument_list></name> <block pos:line="23" pos:column="55">{ <expr><name pos:line="23" pos:column="57">Default</name> <op:operator pos:line="23" pos:column="65">=</op:operator> <lit:literal type="boolean" pos:line="23" pos:column="67">true</lit:literal></expr> }</block></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="24" pos:column="13">SimpleDisplayText</name> <op:operator pos:line="24" pos:column="31">=</op:operator> <op:operator pos:line="24" pos:column="33">new</op:operator> <call><name><name pos:line="24" pos:column="37">DefaultValueModel</name><argument_list pos:line="24" pos:column="54">&lt;<argument><name pos:line="24" pos:column="55">string</name></argument>&gt;</argument_list></name><argument_list pos:line="24" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="25" pos:column="13">TemplateHint</name> <op:operator pos:line="25" pos:column="26">=</op:operator> <op:operator pos:line="25" pos:column="28">new</op:operator> <call><name><name pos:line="25" pos:column="32">DefaultValueModel</name><argument_list pos:line="25" pos:column="49">&lt;<argument><name pos:line="25" pos:column="50">string</name></argument>&gt;</argument_list></name><argument_list pos:line="25" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="26" pos:column="13">Watermark</name> <op:operator pos:line="26" pos:column="23">=</op:operator> <op:operator pos:line="26" pos:column="25">new</op:operator> <call><name><name pos:line="26" pos:column="29">DefaultValueModel</name><argument_list pos:line="26" pos:column="46">&lt;<argument><name pos:line="26" pos:column="47">object</name></argument>&gt;</argument_list></name><argument_list pos:line="26" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="27" pos:column="13">Order</name> <op:operator pos:line="27" pos:column="19">=</op:operator> <op:operator pos:line="27" pos:column="21">new</op:operator> <call><name><name pos:line="27" pos:column="25">DefaultValueModel</name><argument_list pos:line="27" pos:column="42">&lt;<argument><name pos:line="27" pos:column="43">int</name></argument>&gt;</argument_list></name><argument_list pos:line="27" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="30" pos:column="9">public</specifier> <name><name pos:line="30" pos:column="16">DefaultValueModel</name><argument_list pos:line="30" pos:column="33">&lt;<argument><name pos:line="30" pos:column="34">int</name></argument>&gt;</argument_list></name></type> <name pos:line="30" pos:column="39">Order</name> <block pos:line="30" pos:column="45">{ <function_decl><name pos:line="30" pos:column="47">get</name>;</function_decl> <function_decl><name pos:line="30" pos:column="52">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="32" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="33" pos:column="9">/// Gets a flag which indicates whether empty strings that are posted back in forms should be converted into NULLs. Default: true</comment>
        <comment type="line" pos:line="34" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="35" pos:column="9">public</specifier> <name><name pos:line="35" pos:column="16">DefaultValueModel</name><argument_list pos:line="35" pos:column="33">&lt;<argument><name pos:line="35" pos:column="34">bool</name></argument>&gt;</argument_list></name></type> <name pos:line="35" pos:column="40">ConvertEmptyStringToNull</name> <block pos:line="35" pos:column="65">{ <function_decl><name pos:line="35" pos:column="67">get</name>;</function_decl> <function_decl><specifier pos:line="35" pos:column="72">private</specifier> <name pos:line="35" pos:column="80">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="37" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="38" pos:column="9">/// Gets a string which can used to give meta information about the data type (for example, to let you know that this string is actually an e-mail address). Some well-known data type names include “EmailAddress”, “Html”, “Password”, and “Url”. Default: null</comment>
        <comment type="line" pos:line="39" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="40" pos:column="9">public</specifier> <name><name pos:line="40" pos:column="16">DefaultValueModel</name><argument_list pos:line="40" pos:column="33">&lt;<argument><name pos:line="40" pos:column="34">string</name></argument>&gt;</argument_list></name></type> <name pos:line="40" pos:column="42">DataTypeName</name> <block pos:line="40" pos:column="55">{ <function_decl><name pos:line="40" pos:column="57">get</name>;</function_decl> <function_decl><specifier pos:line="40" pos:column="62">private</specifier> <name pos:line="40" pos:column="70">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="42" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="43" pos:column="9">/// Gets a long-form textual description of this model. Default: null</comment>
        <comment type="line" pos:line="44" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="45" pos:column="9">public</specifier> <name><name pos:line="45" pos:column="16">DefaultValueModel</name><argument_list pos:line="45" pos:column="33">&lt;<argument><name pos:line="45" pos:column="34">string</name></argument>&gt;</argument_list></name></type> <name pos:line="45" pos:column="42">Description</name> <block pos:line="45" pos:column="54">{ <function_decl><name pos:line="45" pos:column="56">get</name>;</function_decl> <function_decl><specifier pos:line="45" pos:column="61">private</specifier> <name pos:line="45" pos:column="69">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="47" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="48" pos:column="9">/// Gets a format string that will be used when displaying this model value in a template. Default: null</comment>
        <comment type="line" pos:line="49" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="50" pos:column="9">public</specifier> <name><name pos:line="50" pos:column="16">DefaultValueModel</name><argument_list pos:line="50" pos:column="33">&lt;<argument><name pos:line="50" pos:column="34">string</name></argument>&gt;</argument_list></name></type> <name pos:line="50" pos:column="42">DisplayFormatString</name> <block pos:line="50" pos:column="62">{ <function_decl><name pos:line="50" pos:column="64">get</name>;</function_decl> <function_decl><specifier pos:line="50" pos:column="69">private</specifier> <name pos:line="50" pos:column="77">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="52" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="53" pos:column="9">/// Gets the display name of this model value. Used in templates and Html.Label/LabelFor to generate the label text. Default: null</comment>
        <comment type="line" pos:line="54" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="55" pos:column="9">public</specifier> <name><name pos:line="55" pos:column="16">DefaultValueModel</name><argument_list pos:line="55" pos:column="33">&lt;<argument><name pos:line="55" pos:column="34">string</name></argument>&gt;</argument_list></name></type> <name pos:line="55" pos:column="42">DisplayName</name> <block pos:line="55" pos:column="54">{ <function_decl><name pos:line="55" pos:column="56">get</name>;</function_decl> <function_decl><specifier pos:line="55" pos:column="61">private</specifier> <name pos:line="55" pos:column="69">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="57" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="58" pos:column="9">/// Gets a format string that will be used when editing this model value in a template. Default: null</comment>
        <comment type="line" pos:line="59" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="60" pos:column="9">public</specifier> <name><name pos:line="60" pos:column="16">DefaultValueModel</name><argument_list pos:line="60" pos:column="33">&lt;<argument><name pos:line="60" pos:column="34">string</name></argument>&gt;</argument_list></name></type> <name pos:line="60" pos:column="42">EditFormatString</name> <block pos:line="60" pos:column="59">{ <function_decl><name pos:line="60" pos:column="61">get</name>;</function_decl> <function_decl><specifier pos:line="60" pos:column="66">private</specifier> <name pos:line="60" pos:column="74">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="62" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="63" pos:column="9">/// Gets a flag which indicates that this field should not have any of its surrounding HTML (for example, a label). Often used when a template will be generating a hidden input. Default: false</comment>
        <comment type="line" pos:line="64" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="65" pos:column="9">public</specifier> <name><name pos:line="65" pos:column="16">DefaultValueModel</name><argument_list pos:line="65" pos:column="33">&lt;<argument><name pos:line="65" pos:column="34">bool</name></argument>&gt;</argument_list></name></type> <name pos:line="65" pos:column="40">HideSurroundingHtml</name> <block pos:line="65" pos:column="60">{ <function_decl><name pos:line="65" pos:column="62">get</name>;</function_decl> <function_decl><specifier pos:line="65" pos:column="67">private</specifier> <name pos:line="65" pos:column="75">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="67" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="68" pos:column="9">/// Gets a flag which indicates whether the system considers this to be a complex type (and therefore will default to the complex object template rather than the string template). Not user-settable</comment>
        <comment type="line" pos:line="69" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="70" pos:column="9">public</specifier> <name><name pos:line="70" pos:column="16">DefaultValueModel</name><argument_list pos:line="70" pos:column="33">&lt;<argument><name pos:line="70" pos:column="34">bool</name></argument>&gt;</argument_list></name></type> <name pos:line="70" pos:column="40">IsComplexType</name> <block pos:line="70" pos:column="54">{ <function_decl><name pos:line="70" pos:column="56">get</name>;</function_decl> <function_decl><specifier pos:line="70" pos:column="61">private</specifier> <name pos:line="70" pos:column="69">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="72" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="73" pos:column="9">/// Gets a flag which indicates whether the model is a nullable value type (namely, Nullable). Not user-settable</comment>
        <comment type="line" pos:line="74" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="75" pos:column="9">public</specifier> <name><name pos:line="75" pos:column="16">DefaultValueModel</name><argument_list pos:line="75" pos:column="33">&lt;<argument><name pos:line="75" pos:column="34">bool</name></argument>&gt;</argument_list></name></type> <name pos:line="75" pos:column="40">IsNullableValueType</name> <block pos:line="75" pos:column="60">{ <function_decl><name pos:line="75" pos:column="62">get</name>;</function_decl> <function_decl><specifier pos:line="75" pos:column="67">private</specifier> <name pos:line="75" pos:column="75">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="77" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="78" pos:column="9">/// Gets a flag which indicates if this value is read-only (for example, because the property does not have a setter). Default: false</comment>
        <comment type="line" pos:line="79" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="80" pos:column="9">public</specifier> <name><name pos:line="80" pos:column="16">DefaultValueModel</name><argument_list pos:line="80" pos:column="33">&lt;<argument><name pos:line="80" pos:column="34">bool</name></argument>&gt;</argument_list></name></type> <name pos:line="80" pos:column="40">IsReadOnly</name> <block pos:line="80" pos:column="51">{ <function_decl><name pos:line="80" pos:column="53">get</name>;</function_decl> <function_decl><specifier pos:line="80" pos:column="58">private</specifier> <name pos:line="80" pos:column="66">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="82" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="83" pos:column="9">/// Gets a flag which indicates if this value is required. Default: true for non-nullable value types; false for all others.</comment>
        <comment type="line" pos:line="84" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="85" pos:column="9">public</specifier> <name><name pos:line="85" pos:column="16">DefaultValueModel</name><argument_list pos:line="85" pos:column="33">&lt;<argument><name pos:line="85" pos:column="34">bool</name></argument>&gt;</argument_list></name></type> <name pos:line="85" pos:column="40">IsRequired</name> <block pos:line="85" pos:column="51">{ <function_decl><name pos:line="85" pos:column="53">get</name>;</function_decl> <function_decl><specifier pos:line="85" pos:column="58">private</specifier> <name pos:line="85" pos:column="66">set</name>;</function_decl> }</block></decl></decl_stmt> 
        
        <comment type="line" pos:line="87" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="88" pos:column="9">/// Gets the text which should be used when attempting to display a null model. Default: null</comment>
        <comment type="line" pos:line="89" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="90" pos:column="9">public</specifier> <name><name pos:line="90" pos:column="16">DefaultValueModel</name><argument_list pos:line="90" pos:column="33">&lt;<argument><name pos:line="90" pos:column="34">string</name></argument>&gt;</argument_list></name></type> <name pos:line="90" pos:column="42">NullDisplayText</name> <block pos:line="90" pos:column="58">{ <function_decl><name pos:line="90" pos:column="60">get</name>;</function_decl> <function_decl><specifier pos:line="90" pos:column="65">private</specifier> <name pos:line="90" pos:column="73">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="92" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="93" pos:column="9">/// Gets the short display name of this mode value. Intended to be used in the title of tabular list views. If this field is null, then DisplayName should be used. Default: null</comment>
        <comment type="line" pos:line="94" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="95" pos:column="9">public</specifier> <name><name pos:line="95" pos:column="16">DefaultValueModel</name><argument_list pos:line="95" pos:column="33">&lt;<argument><name pos:line="95" pos:column="34">string</name></argument>&gt;</argument_list></name></type> <name pos:line="95" pos:column="42">ShortDisplayName</name> <block pos:line="95" pos:column="59">{ <function_decl><name pos:line="95" pos:column="61">get</name>;</function_decl> <function_decl><specifier pos:line="95" pos:column="66">private</specifier> <name pos:line="95" pos:column="74">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="97" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="98" pos:column="9">/// Gets a flag which indicates if this model should be shown in display mode. Default: true</comment>
        <comment type="line" pos:line="99" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="100" pos:column="9">public</specifier> <name><name pos:line="100" pos:column="16">DefaultValueModel</name><argument_list pos:line="100" pos:column="33">&lt;<argument><name pos:line="100" pos:column="34">bool</name></argument>&gt;</argument_list></name></type> <name pos:line="100" pos:column="40">ShowForDisplay</name> <block pos:line="100" pos:column="55">{ <function_decl><name pos:line="100" pos:column="57">get</name>;</function_decl> <function_decl><specifier pos:line="100" pos:column="62">private</specifier> <name pos:line="100" pos:column="70">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="102" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="103" pos:column="9">/// Gets a flag which indicates if this model should be shown in edit mode. Default: true</comment>
        <comment type="line" pos:line="104" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="105" pos:column="9">public</specifier> <name><name pos:line="105" pos:column="16">DefaultValueModel</name><argument_list pos:line="105" pos:column="33">&lt;<argument><name pos:line="105" pos:column="34">bool</name></argument>&gt;</argument_list></name></type> <name pos:line="105" pos:column="40">ShowForEdit</name> <block pos:line="105" pos:column="52">{ <function_decl><name pos:line="105" pos:column="54">get</name>;</function_decl> <function_decl><specifier pos:line="105" pos:column="59">private</specifier> <name pos:line="105" pos:column="67">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="107" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="108" pos:column="9">/// Gets text which should be shown for this model when summarizing what would otherwise be a complex object display. Default: see below</comment>
        <comment type="line" pos:line="109" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="110" pos:column="9">public</specifier> <name><name pos:line="110" pos:column="16">DefaultValueModel</name><argument_list pos:line="110" pos:column="33">&lt;<argument><name pos:line="110" pos:column="34">string</name></argument>&gt;</argument_list></name></type> <name pos:line="110" pos:column="42">SimpleDisplayText</name> <block pos:line="110" pos:column="60">{ <function_decl><name pos:line="110" pos:column="62">get</name>;</function_decl> <function_decl><specifier pos:line="110" pos:column="67">private</specifier> <name pos:line="110" pos:column="75">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="112" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="113" pos:column="9">/// Gets a string which indicates a hint as to what template should be used for this model. Default: null</comment>
        <comment type="line" pos:line="114" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="115" pos:column="9">public</specifier> <name><name pos:line="115" pos:column="16">DefaultValueModel</name><argument_list pos:line="115" pos:column="33">&lt;<argument><name pos:line="115" pos:column="34">string</name></argument>&gt;</argument_list></name></type> <name pos:line="115" pos:column="42">TemplateHint</name> <block pos:line="115" pos:column="55">{ <function_decl><name pos:line="115" pos:column="57">get</name>;</function_decl> <function_decl><specifier pos:line="115" pos:column="62">private</specifier> <name pos:line="115" pos:column="70">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <comment type="line" pos:line="117" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="118" pos:column="9">/// Gets text that might be displayed as a watermark when editing this model in a text box. Default: null</comment>
        <comment type="line" pos:line="119" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="120" pos:column="9">public</specifier> <name><name pos:line="120" pos:column="16">DefaultValueModel</name><argument_list pos:line="120" pos:column="33">&lt;<argument><name pos:line="120" pos:column="34">object</name></argument>&gt;</argument_list></name></type> <name pos:line="120" pos:column="42">Watermark</name> <block pos:line="120" pos:column="52">{ <function_decl><name pos:line="120" pos:column="54">get</name>;</function_decl> <function_decl><specifier pos:line="120" pos:column="59">private</specifier> <name pos:line="120" pos:column="67">set</name>;</function_decl> }</block></decl></decl_stmt>
    }</block></class>
}</block></namespace>
</unit>
