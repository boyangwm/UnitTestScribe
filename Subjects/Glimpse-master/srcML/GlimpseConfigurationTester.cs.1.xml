<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Core\Tester\GlimpseConfigurationTester.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Framework</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Test</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Core</name><op:operator pos:line="6" pos:column="24">.</op:operator><name pos:line="6" pos:column="25">Extensions</name></name>;</using>
<using pos:line="7" pos:column="1">using <name pos:line="7" pos:column="7">Moq</name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Glimpse</name><op:operator pos:line="9" pos:column="18">.</op:operator><name pos:line="9" pos:column="19">Test</name><op:operator pos:line="9" pos:column="23">.</op:operator><name pos:line="9" pos:column="24">Core</name><op:operator pos:line="9" pos:column="28">.</op:operator><name pos:line="9" pos:column="29">Tester</name></name>
<block pos:line="10" pos:column="1">{
    <class><specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">GlimpseConfigurationTester</name> <super pos:line="11" pos:column="45">: <name pos:line="11" pos:column="47">GlimpseConfiguration</name></super>
    <block pos:line="12" pos:column="5">{
        <constructor><specifier pos:line="13" pos:column="9">private</specifier> <name pos:line="13" pos:column="17">GlimpseConfigurationTester</name><parameter_list pos:line="13" pos:column="43">(<param><decl><type><name><name pos:line="13" pos:column="44">Mock</name><argument_list pos:line="13" pos:column="48">&lt;<argument><name pos:line="13" pos:column="49">IFrameworkProvider</name></argument>&gt;</argument_list></name></type> <name pos:line="13" pos:column="69">frameworkProviderMock</name></decl></param>,
                                           <param><decl><type><name><name pos:line="14" pos:column="44">Mock</name><argument_list pos:line="14" pos:column="48">&lt;<argument><name pos:line="14" pos:column="49">ResourceEndpointConfiguration</name></argument>&gt;</argument_list></name></type> <name pos:line="14" pos:column="80">endpointConfigurationMock</name></decl></param>,
                                           <param><decl><type><name><name pos:line="15" pos:column="44">IDiscoverableCollection</name><argument_list pos:line="15" pos:column="67">&lt;<argument><name pos:line="15" pos:column="68">IClientScript</name></argument>&gt;</argument_list></name></type> <name pos:line="15" pos:column="83">clientScriptsStub</name></decl></param>,
                                           <param><decl><type><name><name pos:line="16" pos:column="44">Mock</name><argument_list pos:line="16" pos:column="48">&lt;<argument><name pos:line="16" pos:column="49">ILogger</name></argument>&gt;</argument_list></name></type> <name pos:line="16" pos:column="58">loggerMock</name></decl></param>,
                                           <param><decl><type><name><name pos:line="17" pos:column="44">Mock</name><argument_list pos:line="17" pos:column="48">&lt;<argument><name pos:line="17" pos:column="49">IHtmlEncoder</name></argument>&gt;</argument_list></name></type> <name pos:line="17" pos:column="63">htmlEncoderMock</name></decl></param>,
                                           <param><decl><type><name><name pos:line="18" pos:column="44">Mock</name><argument_list pos:line="18" pos:column="48">&lt;<argument><name pos:line="18" pos:column="49">IPersistenceStore</name></argument>&gt;</argument_list></name></type> <name pos:line="18" pos:column="68">persistenceStoreMock</name></decl></param>,
                                           <param><decl><type><name><name pos:line="19" pos:column="44">IDiscoverableCollection</name><argument_list pos:line="19" pos:column="67">&lt;<argument><name pos:line="19" pos:column="68">IInspector</name></argument>&gt;</argument_list></name></type> <name pos:line="19" pos:column="80">inspectorsStub</name></decl></param>,
                                           <param><decl><type><name><name pos:line="20" pos:column="44">IDiscoverableCollection</name><argument_list pos:line="20" pos:column="67">&lt;<argument><name pos:line="20" pos:column="68">IResource</name></argument>&gt;</argument_list></name></type> <name pos:line="20" pos:column="79">resourcesStub</name></decl></param>,
                                           <param><decl><type><name><name pos:line="21" pos:column="44">Mock</name><argument_list pos:line="21" pos:column="48">&lt;<argument><name pos:line="21" pos:column="49">ISerializer</name></argument>&gt;</argument_list></name></type> <name pos:line="21" pos:column="62">serializerMock</name></decl></param>,
                                           <param><decl><type><name><name pos:line="22" pos:column="44">IDiscoverableCollection</name><argument_list pos:line="22" pos:column="67">&lt;<argument><name pos:line="22" pos:column="68">ITab</name></argument>&gt;</argument_list></name></type> <name pos:line="22" pos:column="74">tabsStub</name></decl></param>,
                                           <param><decl><type><name><name pos:line="23" pos:column="44">IDiscoverableCollection</name><argument_list pos:line="23" pos:column="67">&lt;<argument><name pos:line="23" pos:column="68">IDisplay</name></argument>&gt;</argument_list></name></type> <name pos:line="23" pos:column="78">displaysStub</name></decl></param>,
                                           <param><decl><type><name><name pos:line="24" pos:column="44">IDiscoverableCollection</name><argument_list pos:line="24" pos:column="67">&lt;<argument><name pos:line="24" pos:column="68">IRuntimePolicy</name></argument>&gt;</argument_list></name></type> <name pos:line="24" pos:column="84">policiesStub</name></decl></param>,
                                           <param><decl><type><name><name pos:line="25" pos:column="44">Mock</name><argument_list pos:line="25" pos:column="48">&lt;<argument><name pos:line="25" pos:column="49">IResource</name></argument>&gt;</argument_list></name></type> <name pos:line="25" pos:column="60">defaultResourceMock</name></decl></param>,
                                           <param><decl><type><name><name pos:line="26" pos:column="44">Mock</name><argument_list pos:line="26" pos:column="48">&lt;<argument><name pos:line="26" pos:column="49">IProxyFactory</name></argument>&gt;</argument_list></name></type> <name pos:line="26" pos:column="64">proxyFactoryMock</name></decl></param>,
                                           <param><decl><type><name><name pos:line="27" pos:column="44">Mock</name><argument_list pos:line="27" pos:column="48">&lt;<argument><name pos:line="27" pos:column="49">IMessageBroker</name></argument>&gt;</argument_list></name></type> <name pos:line="27" pos:column="65">messageBrokerMock</name></decl></param>,
                                           <param><decl><type><name pos:line="28" pos:column="44">string</name></type> <name pos:line="28" pos:column="51">endpointBaseUri</name></decl></param>,
                                           <param><decl><type><name><name pos:line="29" pos:column="44">Func</name><argument_list pos:line="29" pos:column="48">&lt;<argument><name pos:line="29" pos:column="49">IExecutionTimer</name></argument>&gt;</argument_list></name></type> <name pos:line="29" pos:column="66">timerStrategy</name></decl></param>,
                                           <param><decl><type><name><name pos:line="30" pos:column="44">Func</name><argument_list pos:line="30" pos:column="48">&lt;<argument><name pos:line="30" pos:column="49">RuntimePolicy</name></argument>&gt;</argument_list></name></type> <name pos:line="30" pos:column="64">runtimePolicyStrategy</name></decl></param>)</parameter_list>
            <member_list pos:line="31" pos:column="13">: <call><name pos:line="31" pos:column="15">base</name><argument_list pos:line="31" pos:column="19">(
                <argument><expr><name><name pos:line="32" pos:column="17">frameworkProviderMock</name><op:operator pos:line="32" pos:column="38">.</op:operator><name pos:line="32" pos:column="39">Object</name></name></expr></argument>,
                <argument><expr><name><name pos:line="33" pos:column="17">endpointConfigurationMock</name><op:operator pos:line="33" pos:column="42">.</op:operator><name pos:line="33" pos:column="43">Object</name></name></expr></argument>,
                <argument><expr><name pos:line="34" pos:column="17">clientScriptsStub</name></expr></argument>,
                <argument><expr><name><name pos:line="35" pos:column="17">loggerMock</name><op:operator pos:line="35" pos:column="27">.</op:operator><name pos:line="35" pos:column="28">Object</name></name></expr></argument>,
                <argument><expr><name><name pos:line="36" pos:column="17">RuntimePolicy</name><op:operator pos:line="36" pos:column="30">.</op:operator><name pos:line="36" pos:column="31">On</name></name></expr></argument>,
                <argument><expr><name><name pos:line="37" pos:column="17">htmlEncoderMock</name><op:operator pos:line="37" pos:column="32">.</op:operator><name pos:line="37" pos:column="33">Object</name></name></expr></argument>,
                <argument><expr><name><name pos:line="38" pos:column="17">persistenceStoreMock</name><op:operator pos:line="38" pos:column="37">.</op:operator><name pos:line="38" pos:column="38">Object</name></name></expr></argument>,
                <argument><expr><name pos:line="39" pos:column="17">inspectorsStub</name></expr></argument>,
                <argument><expr><name pos:line="40" pos:column="17">resourcesStub</name></expr></argument>,
                <argument><expr><name><name pos:line="41" pos:column="17">serializerMock</name><op:operator pos:line="41" pos:column="31">.</op:operator><name pos:line="41" pos:column="32">Object</name></name></expr></argument>,
                <argument><expr><name pos:line="42" pos:column="17">tabsStub</name></expr></argument>,
                <argument><expr><name pos:line="43" pos:column="17">displaysStub</name></expr></argument>,
                <argument><expr><name pos:line="44" pos:column="17">policiesStub</name></expr></argument>,
                <argument><expr><name><name pos:line="45" pos:column="17">defaultResourceMock</name><op:operator pos:line="45" pos:column="36">.</op:operator><name pos:line="45" pos:column="37">Object</name></name></expr></argument>,
                <argument><expr><name><name pos:line="46" pos:column="17">proxyFactoryMock</name><op:operator pos:line="46" pos:column="33">.</op:operator><name pos:line="46" pos:column="34">Object</name></name></expr></argument>,
                <argument><expr><name><name pos:line="47" pos:column="17">messageBrokerMock</name><op:operator pos:line="47" pos:column="34">.</op:operator><name pos:line="47" pos:column="35">Object</name></name></expr></argument>,
                <argument><expr><name pos:line="48" pos:column="17">endpointBaseUri</name></expr></argument>,
                <argument><expr><name pos:line="49" pos:column="17">timerStrategy</name></expr></argument>,
                <argument><expr><name pos:line="50" pos:column="17">runtimePolicyStrategy</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="51" pos:column="9">{
            <expr_stmt><expr><name pos:line="52" pos:column="13">FrameworkProviderMock</name> <op:operator pos:line="52" pos:column="35">=</op:operator> <name pos:line="52" pos:column="37">frameworkProviderMock</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="53" pos:column="13">EndpointConfigMock</name> <op:operator pos:line="53" pos:column="32">=</op:operator> <name pos:line="53" pos:column="34">endpointConfigurationMock</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="54" pos:column="13">ClientScriptsStub</name> <op:operator pos:line="54" pos:column="31">=</op:operator> <name pos:line="54" pos:column="33">clientScriptsStub</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="55" pos:column="13">LoggerMock</name> <op:operator pos:line="55" pos:column="24">=</op:operator> <name pos:line="55" pos:column="26">loggerMock</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="56" pos:column="13">HtmlEncoderMock</name> <op:operator pos:line="56" pos:column="29">=</op:operator> <name pos:line="56" pos:column="31">htmlEncoderMock</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="57" pos:column="13">PersistenceStoreMock</name> <op:operator pos:line="57" pos:column="34">=</op:operator> <name pos:line="57" pos:column="36">persistenceStoreMock</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="58" pos:column="13">SerializerMock</name> <op:operator pos:line="58" pos:column="28">=</op:operator> <name pos:line="58" pos:column="30">serializerMock</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="59" pos:column="13">ProxyFactoryMock</name> <op:operator pos:line="59" pos:column="30">=</op:operator> <name pos:line="59" pos:column="32">proxyFactoryMock</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="60" pos:column="13">MessageBrokerMock</name> <op:operator pos:line="60" pos:column="31">=</op:operator> <name pos:line="60" pos:column="33">messageBrokerMock</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="61" pos:column="13">DefaultResourceMock</name> <op:operator pos:line="61" pos:column="33">=</op:operator> <op:operator pos:line="61" pos:column="35">new</op:operator> <call><name><name pos:line="61" pos:column="39">Mock</name><argument_list pos:line="61" pos:column="43">&lt;<argument><name pos:line="61" pos:column="44">IResource</name></argument>&gt;</argument_list></name><argument_list pos:line="61" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="64" pos:column="9">public</specifier> <specifier pos:line="64" pos:column="16">static</specifier> <name pos:line="64" pos:column="23">GlimpseConfigurationTester</name></type> <name pos:line="64" pos:column="50">Create</name><parameter_list pos:line="64" pos:column="56">()</parameter_list>
        <block pos:line="65" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="66" pos:column="13">var</name></type> <name pos:line="66" pos:column="17">loggerMock</name> <init pos:line="66" pos:column="28">= <expr><op:operator pos:line="66" pos:column="30">new</op:operator> <call><name><name pos:line="66" pos:column="34">Mock</name><argument_list pos:line="66" pos:column="38">&lt;<argument><name pos:line="66" pos:column="39">ILogger</name></argument>&gt;</argument_list></name><argument_list pos:line="66" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <return pos:line="68" pos:column="13">return <expr><op:operator pos:line="68" pos:column="20">new</op:operator> <call><name pos:line="68" pos:column="24">GlimpseConfigurationTester</name><argument_list pos:line="68" pos:column="50">(<argument><expr><op:operator pos:line="68" pos:column="51">new</op:operator> <call><name><name pos:line="68" pos:column="55">Mock</name><argument_list pos:line="68" pos:column="59">&lt;<argument><name pos:line="68" pos:column="60">IFrameworkProvider</name></argument>&gt;</argument_list></name><argument_list pos:line="68" pos:column="79">()</argument_list></call><op:operator pos:line="68" pos:column="81">.</op:operator><call><name pos:line="68" pos:column="82">Setup</name><argument_list pos:line="68" pos:column="87">()</argument_list></call></expr></argument>,
                                                  <argument><expr><op:operator pos:line="69" pos:column="51">new</op:operator> <call><name><name pos:line="69" pos:column="55">Mock</name><argument_list pos:line="69" pos:column="59">&lt;<argument><name pos:line="69" pos:column="60">ResourceEndpointConfiguration</name></argument>&gt;</argument_list></name><argument_list pos:line="69" pos:column="90">()</argument_list></call></expr></argument>,
                                                  <argument><expr><op:operator pos:line="70" pos:column="51">new</op:operator> <call><name><name pos:line="70" pos:column="55">ReflectionDiscoverableCollection</name><argument_list pos:line="70" pos:column="87">&lt;<argument><name pos:line="70" pos:column="88">IClientScript</name></argument>&gt;</argument_list></name><argument_list pos:line="70" pos:column="102">(<argument><expr><name><name pos:line="70" pos:column="103">loggerMock</name><op:operator pos:line="70" pos:column="113">.</op:operator><name pos:line="70" pos:column="114">Object</name></name></expr></argument>)</argument_list></call></expr></argument>,
                                                  <argument><expr><name pos:line="71" pos:column="51">loggerMock</name></expr></argument>,
                                                  <argument><expr><op:operator pos:line="72" pos:column="51">new</op:operator> <call><name><name pos:line="72" pos:column="55">Mock</name><argument_list pos:line="72" pos:column="59">&lt;<argument><name pos:line="72" pos:column="60">IHtmlEncoder</name></argument>&gt;</argument_list></name><argument_list pos:line="72" pos:column="73">()</argument_list></call></expr></argument>,
                                                  <argument><expr><op:operator pos:line="73" pos:column="51">new</op:operator> <call><name><name pos:line="73" pos:column="55">Mock</name><argument_list pos:line="73" pos:column="59">&lt;<argument><name pos:line="73" pos:column="60">IPersistenceStore</name></argument>&gt;</argument_list></name><argument_list pos:line="73" pos:column="78">()</argument_list></call></expr></argument>,
                                                  <argument><expr><op:operator pos:line="74" pos:column="51">new</op:operator> <call><name><name pos:line="74" pos:column="55">ReflectionDiscoverableCollection</name><argument_list pos:line="74" pos:column="87">&lt;<argument><name pos:line="74" pos:column="88">IInspector</name></argument>&gt;</argument_list></name><argument_list pos:line="74" pos:column="99">(
                                                      <argument><expr><name><name pos:line="75" pos:column="55">loggerMock</name><op:operator pos:line="75" pos:column="65">.</op:operator><name pos:line="75" pos:column="66">Object</name></name></expr></argument>)</argument_list></call></expr></argument>,
                                                  <argument><expr><op:operator pos:line="76" pos:column="51">new</op:operator> <call><name><name pos:line="76" pos:column="55">ReflectionDiscoverableCollection</name><argument_list pos:line="76" pos:column="87">&lt;<argument><name pos:line="76" pos:column="88">IResource</name></argument>&gt;</argument_list></name><argument_list pos:line="76" pos:column="98">(<argument><expr><name><name pos:line="76" pos:column="99">loggerMock</name><op:operator pos:line="76" pos:column="109">.</op:operator><name pos:line="76" pos:column="110">Object</name></name></expr></argument>)</argument_list></call></expr></argument>,
                                                  <argument><expr><op:operator pos:line="77" pos:column="51">new</op:operator> <call><name><name pos:line="77" pos:column="55">Mock</name><argument_list pos:line="77" pos:column="59">&lt;<argument><name pos:line="77" pos:column="60">ISerializer</name></argument>&gt;</argument_list></name><argument_list pos:line="77" pos:column="72">()</argument_list></call></expr></argument>,
                                                  <argument><expr><op:operator pos:line="78" pos:column="51">new</op:operator> <call><name><name pos:line="78" pos:column="55">ReflectionDiscoverableCollection</name><argument_list pos:line="78" pos:column="87">&lt;<argument><name pos:line="78" pos:column="88">ITab</name></argument>&gt;</argument_list></name><argument_list pos:line="78" pos:column="93">(<argument><expr><name><name pos:line="78" pos:column="94">loggerMock</name><op:operator pos:line="78" pos:column="104">.</op:operator><name pos:line="78" pos:column="105">Object</name></name></expr></argument>)</argument_list></call></expr></argument>,
                                                  <argument><expr><op:operator pos:line="79" pos:column="51">new</op:operator> <call><name><name pos:line="79" pos:column="55">ReflectionDiscoverableCollection</name><argument_list pos:line="79" pos:column="87">&lt;<argument><name pos:line="79" pos:column="88">IDisplay</name></argument>&gt;</argument_list></name><argument_list pos:line="79" pos:column="97">(<argument><expr><name><name pos:line="79" pos:column="98">loggerMock</name><op:operator pos:line="79" pos:column="108">.</op:operator><name pos:line="79" pos:column="109">Object</name></name></expr></argument>)</argument_list></call></expr></argument>,
                                                  <argument><expr><op:operator pos:line="80" pos:column="51">new</op:operator> <call><name><name pos:line="80" pos:column="55">ReflectionDiscoverableCollection</name><argument_list pos:line="80" pos:column="87">&lt;<argument><name pos:line="80" pos:column="88">IRuntimePolicy</name></argument>&gt;</argument_list></name><argument_list pos:line="80" pos:column="103">(<argument><expr><name><name pos:line="80" pos:column="104">loggerMock</name><op:operator pos:line="80" pos:column="114">.</op:operator><name pos:line="80" pos:column="115">Object</name></name></expr></argument>)</argument_list></call></expr></argument>,
                                                  <argument><expr><op:operator pos:line="81" pos:column="51">new</op:operator> <call><name><name pos:line="81" pos:column="55">Mock</name><argument_list pos:line="81" pos:column="59">&lt;<argument><name pos:line="81" pos:column="60">IResource</name></argument>&gt;</argument_list></name><argument_list pos:line="81" pos:column="70">()</argument_list></call></expr></argument>,
                                                  <argument><expr><op:operator pos:line="82" pos:column="51">new</op:operator> <call><name><name pos:line="82" pos:column="55">Mock</name><argument_list pos:line="82" pos:column="59">&lt;<argument><name pos:line="82" pos:column="60">IProxyFactory</name></argument>&gt;</argument_list></name><argument_list pos:line="82" pos:column="74">()</argument_list></call></expr></argument>,
                                                  <argument><expr><op:operator pos:line="83" pos:column="51">new</op:operator> <call><name><name pos:line="83" pos:column="55">Mock</name><argument_list pos:line="83" pos:column="59">&lt;<argument><name pos:line="83" pos:column="60">IMessageBroker</name></argument>&gt;</argument_list></name><argument_list pos:line="83" pos:column="75">()</argument_list></call></expr></argument>,
                                                  <argument><expr><lit:literal type="string" pos:line="84" pos:column="51">"~/Glimpse.axd"</lit:literal></expr></argument>,
                                                  <argument><expr><lambda><parameter_list pos:line="85" pos:column="51">()</parameter_list> <op:operator pos:line="85" pos:column="54">=&gt;</op:operator> <op:operator pos:line="85" pos:column="57">new</op:operator> <call><name pos:line="85" pos:column="61">ExecutionTimer</name><argument_list pos:line="85" pos:column="75">(<argument><expr><call><name><name pos:line="85" pos:column="76">Stopwatch</name><op:operator pos:line="85" pos:column="85">.</op:operator><name pos:line="85" pos:column="86">StartNew</name></name><argument_list pos:line="85" pos:column="94">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>,
                                                  <argument><expr><lambda><parameter_list pos:line="86" pos:column="51">()</parameter_list> <op:operator pos:line="86" pos:column="54">=&gt;</op:operator> <name><name pos:line="86" pos:column="57">RuntimePolicy</name><op:operator pos:line="86" pos:column="70">.</op:operator><name pos:line="86" pos:column="71">On</name></name></lambda></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="89" pos:column="9">public</specifier> <name><name pos:line="89" pos:column="16">Mock</name><argument_list pos:line="89" pos:column="20">&lt;<argument><name pos:line="89" pos:column="21">ResourceEndpointConfiguration</name></argument>&gt;</argument_list></name></type> <name pos:line="89" pos:column="52">EndpointConfigMock</name> <block pos:line="89" pos:column="71">{ <function_decl><name pos:line="89" pos:column="73">get</name>;</function_decl> <function_decl><name pos:line="89" pos:column="78">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="90" pos:column="9">public</specifier> <name><name pos:line="90" pos:column="16">Mock</name><argument_list pos:line="90" pos:column="20">&lt;<argument><name pos:line="90" pos:column="21">IFrameworkProvider</name></argument>&gt;</argument_list></name></type> <name pos:line="90" pos:column="41">FrameworkProviderMock</name> <block pos:line="90" pos:column="63">{ <function_decl><name pos:line="90" pos:column="65">get</name>;</function_decl> <function_decl><name pos:line="90" pos:column="70">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="91" pos:column="9">public</specifier> <name><name pos:line="91" pos:column="16">IDiscoverableCollection</name><argument_list pos:line="91" pos:column="39">&lt;<argument><name pos:line="91" pos:column="40">IClientScript</name></argument>&gt;</argument_list></name></type> <name pos:line="91" pos:column="55">ClientScriptsStub</name> <block pos:line="91" pos:column="73">{ <function_decl><name pos:line="91" pos:column="75">get</name>;</function_decl> <function_decl><name pos:line="91" pos:column="80">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="92" pos:column="9">public</specifier> <name><name pos:line="92" pos:column="16">Mock</name><argument_list pos:line="92" pos:column="20">&lt;<argument><name pos:line="92" pos:column="21">ILogger</name></argument>&gt;</argument_list></name></type> <name pos:line="92" pos:column="30">LoggerMock</name> <block pos:line="92" pos:column="41">{ <function_decl><name pos:line="92" pos:column="43">get</name>;</function_decl> <function_decl><name pos:line="92" pos:column="48">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="93" pos:column="9">public</specifier> <name><name pos:line="93" pos:column="16">Mock</name><argument_list pos:line="93" pos:column="20">&lt;<argument><name pos:line="93" pos:column="21">IHtmlEncoder</name></argument>&gt;</argument_list></name></type> <name pos:line="93" pos:column="35">HtmlEncoderMock</name> <block pos:line="93" pos:column="51">{ <function_decl><name pos:line="93" pos:column="53">get</name>;</function_decl> <function_decl><name pos:line="93" pos:column="58">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="94" pos:column="9">public</specifier> <name><name pos:line="94" pos:column="16">Mock</name><argument_list pos:line="94" pos:column="20">&lt;<argument><name pos:line="94" pos:column="21">IPersistenceStore</name></argument>&gt;</argument_list></name></type> <name pos:line="94" pos:column="40">PersistenceStoreMock</name> <block pos:line="94" pos:column="61">{ <function_decl><name pos:line="94" pos:column="63">get</name>;</function_decl> <function_decl><name pos:line="94" pos:column="68">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="95" pos:column="9">public</specifier> <name><name pos:line="95" pos:column="16">Mock</name><argument_list pos:line="95" pos:column="20">&lt;<argument><name pos:line="95" pos:column="21">ISerializer</name></argument>&gt;</argument_list></name></type> <name pos:line="95" pos:column="34">SerializerMock</name> <block pos:line="95" pos:column="49">{ <function_decl><name pos:line="95" pos:column="51">get</name>;</function_decl> <function_decl><name pos:line="95" pos:column="56">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="96" pos:column="9">public</specifier> <name><name pos:line="96" pos:column="16">Mock</name><argument_list pos:line="96" pos:column="20">&lt;<argument><name pos:line="96" pos:column="21">IProxyFactory</name></argument>&gt;</argument_list></name></type> <name pos:line="96" pos:column="36">ProxyFactoryMock</name> <block pos:line="96" pos:column="53">{ <function_decl><name pos:line="96" pos:column="55">get</name>;</function_decl> <function_decl><name pos:line="96" pos:column="60">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="97" pos:column="9">public</specifier> <name><name pos:line="97" pos:column="16">Mock</name><argument_list pos:line="97" pos:column="20">&lt;<argument><name pos:line="97" pos:column="21">IMessageBroker</name></argument>&gt;</argument_list></name></type> <name pos:line="97" pos:column="37">MessageBrokerMock</name> <block pos:line="97" pos:column="55">{ <function_decl><name pos:line="97" pos:column="57">get</name>;</function_decl> <function_decl><name pos:line="97" pos:column="62">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="98" pos:column="9">public</specifier> <name><name pos:line="98" pos:column="16">Mock</name><argument_list pos:line="98" pos:column="20">&lt;<argument><name pos:line="98" pos:column="21">IResource</name></argument>&gt;</argument_list></name></type> <name pos:line="98" pos:column="32">DefaultResourceMock</name> <block pos:line="98" pos:column="52">{ <function_decl><name pos:line="98" pos:column="54">get</name>;</function_decl> <function_decl><name pos:line="98" pos:column="59">set</name>;</function_decl> }</block></decl></decl_stmt>
    }</block></class>
}</block></namespace></unit>
