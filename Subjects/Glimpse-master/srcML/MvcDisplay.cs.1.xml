<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc\Display\MvcDisplay.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">AspNet</name><op:operator pos:line="2" pos:column="21">.</op:operator><name pos:line="2" pos:column="22">AlternateType</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Extensions</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Mvc</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">AlternateType</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Mvc</name><op:operator pos:line="6" pos:column="18">.</op:operator><name pos:line="6" pos:column="19">Model</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Glimpse</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">Mvc</name><op:operator pos:line="8" pos:column="22">.</op:operator><name pos:line="8" pos:column="23">Display</name></name>
<block pos:line="9" pos:column="1">{
    <class><specifier pos:line="10" pos:column="5">public</specifier> class <name pos:line="10" pos:column="18">MvcDisplay</name> <super pos:line="10" pos:column="29">: <name pos:line="10" pos:column="31">IDisplay</name>, <name pos:line="10" pos:column="41">ITabSetup</name>, <name pos:line="10" pos:column="52">IKey</name></super>
    <block pos:line="11" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">private</specifier> <specifier pos:line="12" pos:column="17">const</specifier> <name pos:line="12" pos:column="23">string</name></type> <name pos:line="12" pos:column="30">InternalName</name> <init pos:line="12" pos:column="43">= <expr><lit:literal type="string" pos:line="12" pos:column="45">"mvc"</lit:literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">public</specifier> <name pos:line="14" pos:column="16">string</name></type> <name pos:line="14" pos:column="23">Name</name>
        <block pos:line="15" pos:column="9">{
            <function><name pos:line="16" pos:column="13">get</name> <block pos:line="16" pos:column="17">{ <return pos:line="16" pos:column="19">return <expr><name pos:line="16" pos:column="26">InternalName</name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">public</specifier> <name pos:line="19" pos:column="16">string</name></type> <name pos:line="19" pos:column="23">Key</name>
        <block pos:line="20" pos:column="9">{
            <function><name pos:line="21" pos:column="13">get</name> <block pos:line="21" pos:column="17">{ <return pos:line="21" pos:column="19">return <expr><name pos:line="21" pos:column="26">InternalName</name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="24" pos:column="9">public</specifier> <name pos:line="24" pos:column="16">object</name></type> <name pos:line="24" pos:column="23">GetData</name><parameter_list pos:line="24" pos:column="30">(<param><decl><type><name pos:line="24" pos:column="31">ITabContext</name></type> <name pos:line="24" pos:column="43">context</name></decl></param>)</parameter_list>
        <block pos:line="25" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">var</name></type> <name pos:line="26" pos:column="17">result</name> <init pos:line="26" pos:column="24">= <expr><call><name><name pos:line="26" pos:column="26">context</name><op:operator pos:line="26" pos:column="33">.</op:operator><name pos:line="26" pos:column="34">TabStore</name><op:operator pos:line="26" pos:column="42">.</op:operator><name><name pos:line="26" pos:column="43">Get</name><argument_list pos:line="26" pos:column="46">&lt;<argument><name pos:line="26" pos:column="47">MvcDisplayModel</name></argument>&gt;</argument_list></name></name><argument_list pos:line="26" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <return pos:line="28" pos:column="13">return <expr><name pos:line="28" pos:column="20">result</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">void</name></type> <name pos:line="31" pos:column="21">Setup</name><parameter_list pos:line="31" pos:column="26">(<param><decl><type><name pos:line="31" pos:column="27">ITabSetupContext</name></type> <name pos:line="31" pos:column="44">context</name></decl></param>)</parameter_list>
        <block pos:line="32" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="33" pos:column="13">var</name></type> <name pos:line="33" pos:column="17">mb</name> <init pos:line="33" pos:column="20">= <expr><name><name pos:line="33" pos:column="22">context</name><op:operator pos:line="33" pos:column="29">.</op:operator><name pos:line="33" pos:column="30">MessageBroker</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="35" pos:column="13">mb</name><op:operator pos:line="35" pos:column="15">.</op:operator><name><name pos:line="35" pos:column="16">Subscribe</name><argument_list pos:line="35" pos:column="25">&lt;<argument><name><name pos:line="35" pos:column="26">ActionInvoker</name><op:operator pos:line="35" pos:column="39">.</op:operator><name pos:line="35" pos:column="40">InvokeActionMethod</name><op:operator pos:line="35" pos:column="58">.</op:operator><name pos:line="35" pos:column="59">Message</name></name></argument>&gt;</argument_list></name></name><argument_list pos:line="35" pos:column="67">(<argument><expr><lambda><name pos:line="35" pos:column="68">m</name> <op:operator pos:line="35" pos:column="70">=&gt;</op:operator> <call><name pos:line="35" pos:column="73">UpdateAction</name><argument_list pos:line="35" pos:column="85">(<argument><expr><name pos:line="35" pos:column="86">m</name></expr></argument>, <argument><expr><name pos:line="35" pos:column="89">context</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">mb</name><op:operator pos:line="36" pos:column="15">.</op:operator><name><name pos:line="36" pos:column="16">Subscribe</name><argument_list pos:line="36" pos:column="25">&lt;<argument><name><name pos:line="36" pos:column="26">ViewEngine</name><op:operator pos:line="36" pos:column="36">.</op:operator><name pos:line="36" pos:column="37">FindViews</name><op:operator pos:line="36" pos:column="46">.</op:operator><name pos:line="36" pos:column="47">Message</name></name></argument>&gt;</argument_list></name></name><argument_list pos:line="36" pos:column="55">(<argument><expr><lambda><name pos:line="36" pos:column="56">m</name> <op:operator pos:line="36" pos:column="58">=&gt;</op:operator> <call><name pos:line="36" pos:column="61">UpdateView</name><argument_list pos:line="36" pos:column="71">(<argument><expr><name pos:line="36" pos:column="72">m</name></expr></argument>, <argument><expr><name pos:line="36" pos:column="75">context</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="37" pos:column="13">mb</name><op:operator pos:line="37" pos:column="15">.</op:operator><name><name pos:line="37" pos:column="16">Subscribe</name><argument_list pos:line="37" pos:column="25">&lt;<argument><name><name pos:line="37" pos:column="26">View</name><op:operator pos:line="37" pos:column="30">.</op:operator><name pos:line="37" pos:column="31">Render</name><op:operator pos:line="37" pos:column="37">.</op:operator><name pos:line="37" pos:column="38">Message</name></name></argument>&gt;</argument_list></name></name><argument_list pos:line="37" pos:column="46">(<argument><expr><lambda><name pos:line="37" pos:column="47">m</name> <op:operator pos:line="37" pos:column="49">=&gt;</op:operator> <call><name pos:line="37" pos:column="52">UpdateRender</name><argument_list pos:line="37" pos:column="64">(<argument><expr><name pos:line="37" pos:column="65">m</name></expr></argument>, <argument><expr><name pos:line="37" pos:column="68">context</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">mb</name><op:operator pos:line="38" pos:column="15">.</op:operator><name><name pos:line="38" pos:column="16">Subscribe</name><argument_list pos:line="38" pos:column="25">&lt;<argument><name><name pos:line="38" pos:column="26">RouteBase</name><op:operator pos:line="38" pos:column="35">.</op:operator><name pos:line="38" pos:column="36">GetRouteData</name><op:operator pos:line="38" pos:column="48">.</op:operator><name pos:line="38" pos:column="49">Message</name></name></argument>&gt;</argument_list></name></name><argument_list pos:line="38" pos:column="57">(<argument><expr><lambda><name pos:line="38" pos:column="58">m</name> <op:operator pos:line="38" pos:column="60">=&gt;</op:operator> <call><name pos:line="38" pos:column="63">UpdateRoute</name><argument_list pos:line="38" pos:column="74">(<argument><expr><name pos:line="38" pos:column="75">m</name></expr></argument>, <argument><expr><name pos:line="38" pos:column="78">context</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="41" pos:column="9">private</specifier> <name pos:line="41" pos:column="17">void</name></type> <name pos:line="41" pos:column="22">UpdateRoute</name><parameter_list pos:line="41" pos:column="33">(<param><decl><type><name><name pos:line="41" pos:column="34">RouteBase</name><op:operator pos:line="41" pos:column="43">.</op:operator><name pos:line="41" pos:column="44">GetRouteData</name><op:operator pos:line="41" pos:column="56">.</op:operator><name pos:line="41" pos:column="57">Message</name></name></type> <name pos:line="41" pos:column="65">message</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="74">ITabSetupContext</name></type> <name pos:line="41" pos:column="91">context</name></decl></param>)</parameter_list>
        <block pos:line="42" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="43" pos:column="13">var</name></type> <name pos:line="43" pos:column="17">model</name> <init pos:line="43" pos:column="23">= <expr><call><name pos:line="43" pos:column="25">GetModel</name><argument_list pos:line="43" pos:column="33">(<argument><expr><call><name><name pos:line="43" pos:column="34">context</name><op:operator pos:line="43" pos:column="41">.</op:operator><name pos:line="43" pos:column="42">GetTabStore</name></name><argument_list pos:line="43" pos:column="53">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="45" pos:column="13">// string.Empty is a valid routeName</comment>
            <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><name><name pos:line="46" pos:column="17">message</name><op:operator pos:line="46" pos:column="24">.</op:operator><name pos:line="46" pos:column="25">IsMatch</name> <type:modifier pos:line="46" pos:column="33">&amp;&amp;</type:modifier></name> <name><name pos:line="46" pos:column="36">model</name><op:operator pos:line="46" pos:column="41">.</op:operator><name pos:line="46" pos:column="42">MatchedRouteName</name></name> <op:operator pos:line="46" pos:column="59">==</op:operator> <name pos:line="46" pos:column="62">null</name></expr>)</condition><then pos:line="46" pos:column="67">
            <block pos:line="47" pos:column="13">{
                <comment type="line" pos:line="48" pos:column="17">// only update the first matched route</comment>
                <expr_stmt><expr><name><name pos:line="49" pos:column="17">model</name><op:operator pos:line="49" pos:column="22">.</op:operator><name pos:line="49" pos:column="23">MatchedRouteName</name></name> <op:operator pos:line="49" pos:column="40">=</op:operator> <name><name pos:line="49" pos:column="42">message</name><op:operator pos:line="49" pos:column="49">.</op:operator><name pos:line="49" pos:column="50">RouteName</name></name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="53" pos:column="9">private</specifier> <name pos:line="53" pos:column="17">void</name></type> <name pos:line="53" pos:column="22">UpdateRender</name><parameter_list pos:line="53" pos:column="34">(<param><decl><type><name><name pos:line="53" pos:column="35">View</name><op:operator pos:line="53" pos:column="39">.</op:operator><name pos:line="53" pos:column="40">Render</name><op:operator pos:line="53" pos:column="46">.</op:operator><name pos:line="53" pos:column="47">Message</name></name></type> <name pos:line="53" pos:column="55">message</name></decl></param>, <param><decl><type><name pos:line="53" pos:column="64">ITabSetupContext</name></type> <name pos:line="53" pos:column="81">context</name></decl></param>)</parameter_list>
        <block pos:line="54" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="55" pos:column="13">var</name></type> <name pos:line="55" pos:column="17">model</name> <init pos:line="55" pos:column="23">= <expr><call><name pos:line="55" pos:column="25">GetModel</name><argument_list pos:line="55" pos:column="33">(<argument><expr><call><name><name pos:line="55" pos:column="34">context</name><op:operator pos:line="55" pos:column="41">.</op:operator><name pos:line="55" pos:column="42">GetTabStore</name></name><argument_list pos:line="55" pos:column="53">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="57" pos:column="13">// Last message in is the first/primary view</comment>
            <expr_stmt><expr><name><name pos:line="58" pos:column="13">model</name><op:operator pos:line="58" pos:column="18">.</op:operator><name pos:line="58" pos:column="19">ViewRenderTime</name></name> <op:operator pos:line="58" pos:column="34">=</op:operator> <call><name><name pos:line="58" pos:column="36">Math</name><op:operator pos:line="58" pos:column="40">.</op:operator><name pos:line="58" pos:column="41">Round</name></name><argument_list pos:line="58" pos:column="46">(<argument><expr><name><name pos:line="58" pos:column="47">message</name><op:operator pos:line="58" pos:column="54">.</op:operator><name pos:line="58" pos:column="55">Duration</name><op:operator pos:line="58" pos:column="63">.</op:operator><name pos:line="58" pos:column="64">TotalMilliseconds</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="58" pos:column="83">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="61" pos:column="9">private</specifier> <name pos:line="61" pos:column="17">void</name></type> <name pos:line="61" pos:column="22">UpdateAction</name><parameter_list pos:line="61" pos:column="34">(<param><decl><type><name><name pos:line="61" pos:column="35">ActionInvoker</name><op:operator pos:line="61" pos:column="48">.</op:operator><name pos:line="61" pos:column="49">InvokeActionMethod</name><op:operator pos:line="61" pos:column="67">.</op:operator><name pos:line="61" pos:column="68">Message</name></name></type> <name pos:line="61" pos:column="76">message</name></decl></param>, <param><decl><type><name pos:line="61" pos:column="85">ITabSetupContext</name></type> <name pos:line="61" pos:column="102">context</name></decl></param>)</parameter_list>
        <block pos:line="62" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="63" pos:column="13">var</name></type> <name pos:line="63" pos:column="17">model</name> <init pos:line="63" pos:column="23">= <expr><call><name pos:line="63" pos:column="25">GetModel</name><argument_list pos:line="63" pos:column="33">(<argument><expr><call><name><name pos:line="63" pos:column="34">context</name><op:operator pos:line="63" pos:column="41">.</op:operator><name pos:line="63" pos:column="42">GetTabStore</name></name><argument_list pos:line="63" pos:column="53">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><name><name pos:line="65" pos:column="17">message</name><op:operator pos:line="65" pos:column="24">.</op:operator><name pos:line="65" pos:column="25">IsChildAction</name></name></expr>)</condition><then pos:line="65" pos:column="39">
            <block pos:line="66" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="67" pos:column="17">model</name><op:operator pos:line="67" pos:column="22">.</op:operator><name pos:line="67" pos:column="23">ChildActionCount</name></name><op:operator pos:line="67" pos:column="39">++</op:operator></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="69" pos:column="13">else
            <block pos:line="70" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="71" pos:column="17">model</name><op:operator pos:line="71" pos:column="22">.</op:operator><name pos:line="71" pos:column="23">ActionName</name></name> <op:operator pos:line="71" pos:column="34">=</op:operator> <name><name pos:line="71" pos:column="36">message</name><op:operator pos:line="71" pos:column="43">.</op:operator><name pos:line="71" pos:column="44">ActionName</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="72" pos:column="17">model</name><op:operator pos:line="72" pos:column="22">.</op:operator><name pos:line="72" pos:column="23">ActionExecutionTime</name></name> <op:operator pos:line="72" pos:column="43">=</op:operator> <call><name><name pos:line="72" pos:column="45">Math</name><op:operator pos:line="72" pos:column="49">.</op:operator><name pos:line="72" pos:column="50">Round</name></name><argument_list pos:line="72" pos:column="55">(<argument><expr><name><name pos:line="72" pos:column="56">message</name><op:operator pos:line="72" pos:column="63">.</op:operator><name pos:line="72" pos:column="64">Duration</name><op:operator pos:line="72" pos:column="72">.</op:operator><name pos:line="72" pos:column="73">TotalMilliseconds</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="72" pos:column="92">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="73" pos:column="17">model</name><op:operator pos:line="73" pos:column="22">.</op:operator><name pos:line="73" pos:column="23">ControllerName</name></name> <op:operator pos:line="73" pos:column="38">=</op:operator> <name><name pos:line="73" pos:column="40">message</name><op:operator pos:line="73" pos:column="47">.</op:operator><name pos:line="73" pos:column="48">ControllerName</name></name></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="77" pos:column="9">private</specifier> <name pos:line="77" pos:column="17">void</name></type> <name pos:line="77" pos:column="22">UpdateView</name><parameter_list pos:line="77" pos:column="32">(<param><decl><type><name><name pos:line="77" pos:column="33">ViewEngine</name><op:operator pos:line="77" pos:column="43">.</op:operator><name pos:line="77" pos:column="44">FindViews</name><op:operator pos:line="77" pos:column="53">.</op:operator><name pos:line="77" pos:column="54">Message</name></name></type> <name pos:line="77" pos:column="62">message</name></decl></param>, <param><decl><type><name pos:line="77" pos:column="71">ITabSetupContext</name></type> <name pos:line="77" pos:column="88">context</name></decl></param>)</parameter_list>
        <block pos:line="78" pos:column="9">{
            <if pos:line="79" pos:column="13">if <condition pos:line="79" pos:column="16">(<expr><name><name pos:line="79" pos:column="17">message</name><op:operator pos:line="79" pos:column="24">.</op:operator><name pos:line="79" pos:column="25">IsFound</name></name></expr>)</condition><then pos:line="79" pos:column="33">
            <block pos:line="80" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="81" pos:column="17">var</name></type> <name pos:line="81" pos:column="21">model</name> <init pos:line="81" pos:column="27">= <expr><call><name pos:line="81" pos:column="29">GetModel</name><argument_list pos:line="81" pos:column="37">(<argument><expr><call><name><name pos:line="81" pos:column="38">context</name><op:operator pos:line="81" pos:column="45">.</op:operator><name pos:line="81" pos:column="46">GetTabStore</name></name><argument_list pos:line="81" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><name><name pos:line="83" pos:column="17">model</name><op:operator pos:line="83" pos:column="22">.</op:operator><name pos:line="83" pos:column="23">ChildViewCount</name></name><op:operator pos:line="83" pos:column="37">++</op:operator></expr>;</expr_stmt>

                <if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><name><name pos:line="85" pos:column="21">model</name><op:operator pos:line="85" pos:column="26">.</op:operator><name pos:line="85" pos:column="27">ViewName</name></name> <op:operator pos:line="85" pos:column="36">==</op:operator> <name pos:line="85" pos:column="39">null</name></expr>)</condition><then pos:line="85" pos:column="44">
                <block pos:line="86" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="87" pos:column="21">model</name><op:operator pos:line="87" pos:column="26">.</op:operator><name pos:line="87" pos:column="27">ViewName</name></name> <op:operator pos:line="87" pos:column="36">=</op:operator> <name><name pos:line="87" pos:column="38">message</name><op:operator pos:line="87" pos:column="45">.</op:operator><name pos:line="87" pos:column="46">ViewName</name></name></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="92" pos:column="9">private</specifier> <name pos:line="92" pos:column="17">MvcDisplayModel</name></type> <name pos:line="92" pos:column="33">GetModel</name><parameter_list pos:line="92" pos:column="41">(<param><decl><type><name pos:line="92" pos:column="42">IDataStore</name></type> <name pos:line="92" pos:column="53">tabStore</name></decl></param>)</parameter_list>
        <block pos:line="93" pos:column="9">{
            <if pos:line="94" pos:column="13">if <condition pos:line="94" pos:column="16">(<expr><call><name><name pos:line="94" pos:column="17">tabStore</name><op:operator pos:line="94" pos:column="25">.</op:operator><name><name pos:line="94" pos:column="26">Contains</name><argument_list pos:line="94" pos:column="34">&lt;<argument><name pos:line="94" pos:column="35">MvcDisplayModel</name></argument>&gt;</argument_list></name></name><argument_list pos:line="94" pos:column="51">()</argument_list></call></expr>)</condition><then pos:line="94" pos:column="54">
            <block pos:line="95" pos:column="13">{
                <return pos:line="96" pos:column="17">return <expr><call><name><name pos:line="96" pos:column="24">tabStore</name><op:operator pos:line="96" pos:column="32">.</op:operator><name><name pos:line="96" pos:column="33">Get</name><argument_list pos:line="96" pos:column="36">&lt;<argument><name pos:line="96" pos:column="37">MvcDisplayModel</name></argument>&gt;</argument_list></name></name><argument_list pos:line="96" pos:column="53">()</argument_list></call></expr>;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="99" pos:column="13">var</name></type> <name pos:line="99" pos:column="17">model</name> <init pos:line="99" pos:column="23">= <expr><op:operator pos:line="99" pos:column="25">new</op:operator> <call><name pos:line="99" pos:column="29">MvcDisplayModel</name><argument_list pos:line="99" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="100" pos:column="13">tabStore</name><op:operator pos:line="100" pos:column="21">.</op:operator><name pos:line="100" pos:column="22">Set</name></name><argument_list pos:line="100" pos:column="25">(<argument><expr><name pos:line="100" pos:column="26">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="101" pos:column="13">return <expr><name pos:line="101" pos:column="20">model</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
