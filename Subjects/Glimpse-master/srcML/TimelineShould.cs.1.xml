<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Core\Tab\TimelineShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Reflection</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Text</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Web</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Core</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Glimpse</name><op:operator pos:line="8" pos:column="14">.</op:operator><name pos:line="8" pos:column="15">Core</name><op:operator pos:line="8" pos:column="19">.</op:operator><name pos:line="8" pos:column="20">Extensions</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Glimpse</name><op:operator pos:line="9" pos:column="14">.</op:operator><name pos:line="9" pos:column="15">Core</name><op:operator pos:line="9" pos:column="19">.</op:operator><name pos:line="9" pos:column="20">Model</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Glimpse</name><op:operator pos:line="10" pos:column="14">.</op:operator><name pos:line="10" pos:column="15">Core</name><op:operator pos:line="10" pos:column="19">.</op:operator><name pos:line="10" pos:column="20">Tab</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Glimpse</name><op:operator pos:line="11" pos:column="14">.</op:operator><name pos:line="11" pos:column="15">Test</name><op:operator pos:line="11" pos:column="19">.</op:operator><name pos:line="11" pos:column="20">Common</name></name>;</using>
<using pos:line="12" pos:column="1">using <name pos:line="12" pos:column="7">Xunit</name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Xunit</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">Extensions</name></name>;</using>

<namespace pos:line="15" pos:column="1">namespace <name><name pos:line="15" pos:column="11">Glimpse</name><op:operator pos:line="15" pos:column="18">.</op:operator><name pos:line="15" pos:column="19">Test</name><op:operator pos:line="15" pos:column="23">.</op:operator><name pos:line="15" pos:column="24">AspNet</name><op:operator pos:line="15" pos:column="30">.</op:operator><name pos:line="15" pos:column="31">Tab</name></name>
<block pos:line="16" pos:column="1">{
    <class><specifier pos:line="17" pos:column="5">public</specifier> class <name pos:line="17" pos:column="18">TimelineShould</name>
    <block pos:line="18" pos:column="5">{
        <function><type><attribute pos:line="19" pos:column="9">[<expr><name pos:line="19" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">void</name></type> <name pos:line="20" pos:column="21">HaveProperContextObjectType</name><parameter_list pos:line="20" pos:column="48">()</parameter_list>
        <block pos:line="21" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">var</name></type> <name pos:line="22" pos:column="17">timeline</name> <init pos:line="22" pos:column="26">= <expr><op:operator pos:line="22" pos:column="28">new</op:operator> <call><name pos:line="22" pos:column="32">Timeline</name><argument_list pos:line="22" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="24" pos:column="13">Assert</name><op:operator pos:line="24" pos:column="19">.</op:operator><name pos:line="24" pos:column="20">Null</name></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name><name pos:line="24" pos:column="25">timeline</name><op:operator pos:line="24" pos:column="33">.</op:operator><name pos:line="24" pos:column="34">RequestContextType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="27" pos:column="9">[<expr><name pos:line="27" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="28" pos:column="9">public</specifier> <name pos:line="28" pos:column="16">void</name></type> <name pos:line="28" pos:column="21">UseDefaultLifeCycleSupport</name><parameter_list pos:line="28" pos:column="47">()</parameter_list>
        <block pos:line="29" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="30" pos:column="13">var</name></type> <name pos:line="30" pos:column="17">timeline</name> <init pos:line="30" pos:column="26">= <expr><op:operator pos:line="30" pos:column="28">new</op:operator> <call><name pos:line="30" pos:column="32">Timeline</name><argument_list pos:line="30" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">Assert</name><op:operator pos:line="31" pos:column="19">.</op:operator><name pos:line="31" pos:column="20">Equal</name></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name><name pos:line="31" pos:column="26">RuntimeEvent</name><op:operator pos:line="31" pos:column="38">.</op:operator><name pos:line="31" pos:column="39">EndRequest</name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="51">timeline</name><op:operator pos:line="31" pos:column="59">.</op:operator><name pos:line="31" pos:column="60">ExecuteOn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="34" pos:column="9">[<expr><name pos:line="34" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="35" pos:column="9">public</specifier> <name pos:line="35" pos:column="16">void</name></type> <name pos:line="35" pos:column="21">BeNamedTrace</name><parameter_list pos:line="35" pos:column="33">()</parameter_list>
        <block pos:line="36" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="37" pos:column="13">var</name></type> <name pos:line="37" pos:column="17">timeline</name> <init pos:line="37" pos:column="26">= <expr><op:operator pos:line="37" pos:column="28">new</op:operator> <call><name pos:line="37" pos:column="32">Timeline</name><argument_list pos:line="37" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">Assert</name><op:operator pos:line="38" pos:column="19">.</op:operator><name pos:line="38" pos:column="20">Equal</name></name><argument_list pos:line="38" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="26">"Timeline"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="38">timeline</name><op:operator pos:line="38" pos:column="46">.</op:operator><name pos:line="38" pos:column="47">Name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="41" pos:column="9">[<expr><name pos:line="41" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="42" pos:column="9">public</specifier> <name pos:line="42" pos:column="16">void</name></type> <name pos:line="42" pos:column="21">HaveADocumentationUri</name><parameter_list pos:line="42" pos:column="42">()</parameter_list>
        <block pos:line="43" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="44" pos:column="13">var</name></type> <name pos:line="44" pos:column="17">timeline</name> <init pos:line="44" pos:column="26">= <expr><op:operator pos:line="44" pos:column="28">new</op:operator> <call><name pos:line="44" pos:column="32">Timeline</name><argument_list pos:line="44" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">Assert</name><op:operator pos:line="46" pos:column="19">.</op:operator><name pos:line="46" pos:column="20">False</name></name><argument_list pos:line="46" pos:column="25">(<argument><expr><call><name><name pos:line="46" pos:column="26">string</name><op:operator pos:line="46" pos:column="32">.</op:operator><name pos:line="46" pos:column="33">IsNullOrWhiteSpace</name></name><argument_list pos:line="46" pos:column="51">(<argument><expr><name><name pos:line="46" pos:column="52">timeline</name><op:operator pos:line="46" pos:column="60">.</op:operator><name pos:line="46" pos:column="61">DocumentationUri</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
         
        <function><type><attribute pos:line="49" pos:column="9">[<expr><name pos:line="49" pos:column="10">Theory</name></expr><op:operator pos:line="49" pos:column="16">,</op:operator> <expr><name pos:line="49" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="50" pos:column="9">public</specifier> <name pos:line="50" pos:column="16">void</name></type> <name pos:line="50" pos:column="21">ReturnData</name><parameter_list pos:line="50" pos:column="31">(<param><decl><type><name pos:line="50" pos:column="32">ITabContext</name></type> <name pos:line="50" pos:column="44">context</name></decl></param>)</parameter_list>
        <block pos:line="51" pos:column="9">{ 
            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">context</name><op:operator pos:line="52" pos:column="20">.</op:operator><name pos:line="52" pos:column="21">TabStore</name><op:operator pos:line="52" pos:column="29">.</op:operator><name pos:line="52" pos:column="30">Setup</name></name><argument_list pos:line="52" pos:column="35">(<argument><expr><lambda><name pos:line="52" pos:column="36">x</name> <op:operator pos:line="52" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="52" pos:column="41">x</name><op:operator pos:line="52" pos:column="42">.</op:operator><name pos:line="52" pos:column="43">Contains</name></name><argument_list pos:line="52" pos:column="51">(<argument><expr><call><name pos:line="52" pos:column="52">typeof</name><argument_list pos:line="52" pos:column="58">(<argument><expr><name><name pos:line="52" pos:column="59">IList</name><argument_list pos:line="52" pos:column="64">&lt;<argument><name><name pos:line="52" pos:column="65">Glimpse</name><op:operator pos:line="52" pos:column="72">.</op:operator><name pos:line="52" pos:column="73">Core</name><op:operator pos:line="52" pos:column="77">.</op:operator><name pos:line="52" pos:column="78">Message</name><op:operator pos:line="52" pos:column="85">.</op:operator><name pos:line="52" pos:column="86">ITimelineMessage</name></name></argument>&gt;</argument_list></name></expr></argument>)</argument_list></call><op:operator pos:line="52" pos:column="104">.</op:operator><name pos:line="52" pos:column="105">AssemblyQualifiedName</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="52" pos:column="128">.</op:operator><call><name pos:line="52" pos:column="129">Returns</name><argument_list pos:line="52" pos:column="136">(<argument><expr><lit:literal type="boolean" pos:line="52" pos:column="137">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="53" pos:column="13">context</name><op:operator pos:line="53" pos:column="20">.</op:operator><name pos:line="53" pos:column="21">TabStore</name><op:operator pos:line="53" pos:column="29">.</op:operator><name pos:line="53" pos:column="30">Setup</name></name><argument_list pos:line="53" pos:column="35">(<argument><expr><lambda><name pos:line="53" pos:column="36">x</name> <op:operator pos:line="53" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="53" pos:column="41">x</name><op:operator pos:line="53" pos:column="42">.</op:operator><name pos:line="53" pos:column="43">Get</name></name><argument_list pos:line="53" pos:column="46">(<argument><expr><call><name pos:line="53" pos:column="47">typeof</name><argument_list pos:line="53" pos:column="53">(<argument><expr><name><name pos:line="53" pos:column="54">IList</name><argument_list pos:line="53" pos:column="59">&lt;<argument><name><name pos:line="53" pos:column="60">Glimpse</name><op:operator pos:line="53" pos:column="67">.</op:operator><name pos:line="53" pos:column="68">Core</name><op:operator pos:line="53" pos:column="72">.</op:operator><name pos:line="53" pos:column="73">Message</name><op:operator pos:line="53" pos:column="80">.</op:operator><name pos:line="53" pos:column="81">ITimelineMessage</name></name></argument>&gt;</argument_list></name></expr></argument>)</argument_list></call><op:operator pos:line="53" pos:column="99">.</op:operator><name pos:line="53" pos:column="100">AssemblyQualifiedName</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="53" pos:column="123">.</op:operator><call><name pos:line="53" pos:column="124">Returns</name><argument_list pos:line="53" pos:column="131">(<argument><expr><call><name pos:line="53" pos:column="132">BuildMessages</name><argument_list pos:line="53" pos:column="145">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="55" pos:column="13">var</name></type> <name pos:line="55" pos:column="17">timeline</name> <init pos:line="55" pos:column="26">= <expr><op:operator pos:line="55" pos:column="28">new</op:operator> <call><name pos:line="55" pos:column="32">Timeline</name><argument_list pos:line="55" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="56" pos:column="13">var</name></type> <name pos:line="56" pos:column="17">result</name> <init pos:line="56" pos:column="24">= <expr><call><name><name pos:line="56" pos:column="26">timeline</name><op:operator pos:line="56" pos:column="34">.</op:operator><name pos:line="56" pos:column="35">GetData</name></name><argument_list pos:line="56" pos:column="42">(<argument><expr><name pos:line="56" pos:column="43">context</name></expr></argument>)</argument_list></call> <op:operator pos:line="56" pos:column="52">as</op:operator> <name pos:line="56" pos:column="55">TimelineModel</name></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="58" pos:column="13">Assert</name><op:operator pos:line="58" pos:column="19">.</op:operator><name pos:line="58" pos:column="20">NotNull</name></name><argument_list pos:line="58" pos:column="27">(<argument><expr><name pos:line="58" pos:column="28">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="59" pos:column="13">Assert</name><op:operator pos:line="59" pos:column="19">.</op:operator><name pos:line="59" pos:column="20">Equal</name></name><argument_list pos:line="59" pos:column="25">(<argument><expr><call><name><name pos:line="59" pos:column="26">TimeSpan</name><op:operator pos:line="59" pos:column="34">.</op:operator><name pos:line="59" pos:column="35">FromMilliseconds</name></name><argument_list pos:line="59" pos:column="51">(<argument><expr><lit:literal type="number" pos:line="59" pos:column="52">7</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="56">result</name><op:operator pos:line="59" pos:column="62">.</op:operator><name pos:line="59" pos:column="63">Duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="60" pos:column="13">Assert</name><op:operator pos:line="60" pos:column="19">.</op:operator><name pos:line="60" pos:column="20">Equal</name></name><argument_list pos:line="60" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="60" pos:column="26">3</lit:literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="29">result</name><op:operator pos:line="60" pos:column="35">.</op:operator><name pos:line="60" pos:column="36">Events</name><op:operator pos:line="60" pos:column="42">.</op:operator><name pos:line="60" pos:column="43">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="61" pos:column="13">Assert</name><op:operator pos:line="61" pos:column="19">.</op:operator><name pos:line="61" pos:column="20">Equal</name></name><argument_list pos:line="61" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="26">"TestName1"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="39">result</name><op:operator pos:line="61" pos:column="45">.</op:operator><name pos:line="61" pos:column="46">Events</name><index pos:line="61" pos:column="52">[<expr><lit:literal type="number" pos:line="61" pos:column="53">0</lit:literal></expr>]</index></name><op:operator pos:line="61" pos:column="55">.</op:operator><name pos:line="61" pos:column="56">Title</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="62" pos:column="13">Assert</name><op:operator pos:line="62" pos:column="19">.</op:operator><name pos:line="62" pos:column="20">Equal</name></name><argument_list pos:line="62" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="62" pos:column="26">"TestName3"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="39">result</name><op:operator pos:line="62" pos:column="45">.</op:operator><name pos:line="62" pos:column="46">Events</name><index pos:line="62" pos:column="52">[<expr><lit:literal type="number" pos:line="62" pos:column="53">1</lit:literal></expr>]</index></name><op:operator pos:line="62" pos:column="55">.</op:operator><name pos:line="62" pos:column="56">Title</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="63" pos:column="13">Assert</name><op:operator pos:line="63" pos:column="19">.</op:operator><name pos:line="63" pos:column="20">Equal</name></name><argument_list pos:line="63" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="26">"TestName2"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="39">result</name><op:operator pos:line="63" pos:column="45">.</op:operator><name pos:line="63" pos:column="46">Events</name><index pos:line="63" pos:column="52">[<expr><lit:literal type="number" pos:line="63" pos:column="53">2</lit:literal></expr>]</index></name><op:operator pos:line="63" pos:column="55">.</op:operator><name pos:line="63" pos:column="56">Title</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="66" pos:column="9">[<expr><name pos:line="66" pos:column="10">Theory</name></expr><op:operator pos:line="66" pos:column="16">,</op:operator> <expr><name pos:line="66" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="67" pos:column="9">public</specifier> <name pos:line="67" pos:column="16">void</name></type> <name pos:line="67" pos:column="21">ReturnEmptyWhenNoData</name><parameter_list pos:line="67" pos:column="42">(<param><decl><type><name pos:line="67" pos:column="43">ITabContext</name></type> <name pos:line="67" pos:column="55">context</name></decl></param>)</parameter_list>
        <block pos:line="68" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="69" pos:column="13">context</name><op:operator pos:line="69" pos:column="20">.</op:operator><name pos:line="69" pos:column="21">TabStore</name><op:operator pos:line="69" pos:column="29">.</op:operator><name pos:line="69" pos:column="30">Setup</name></name><argument_list pos:line="69" pos:column="35">(<argument><expr><lambda><name pos:line="69" pos:column="36">x</name> <op:operator pos:line="69" pos:column="38">=&gt;</op:operator> <call><name><name pos:line="69" pos:column="41">x</name><op:operator pos:line="69" pos:column="42">.</op:operator><name pos:line="69" pos:column="43">Get</name></name><argument_list pos:line="69" pos:column="46">(<argument><expr><call><name pos:line="69" pos:column="47">typeof</name><argument_list pos:line="69" pos:column="53">(<argument><expr><name><name pos:line="69" pos:column="54">Glimpse</name><op:operator pos:line="69" pos:column="61">.</op:operator><name pos:line="69" pos:column="62">Core</name><op:operator pos:line="69" pos:column="66">.</op:operator><name pos:line="69" pos:column="67">Message</name><op:operator pos:line="69" pos:column="74">.</op:operator><name pos:line="69" pos:column="75">ITimelineMessage</name></name></expr></argument>)</argument_list></call><op:operator pos:line="69" pos:column="92">.</op:operator><name pos:line="69" pos:column="93">FullName</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="69" pos:column="103">.</op:operator><call><name pos:line="69" pos:column="104">Returns</name><argument_list pos:line="69" pos:column="111">(<argument><expr><op:operator pos:line="69" pos:column="112">(</op:operator><name><name pos:line="69" pos:column="113">IEnumerable</name><argument_list pos:line="69" pos:column="124">&lt;<argument><name><name pos:line="69" pos:column="125">Glimpse</name><op:operator pos:line="69" pos:column="132">.</op:operator><name pos:line="69" pos:column="133">Core</name><op:operator pos:line="69" pos:column="137">.</op:operator><name pos:line="69" pos:column="138">Message</name><op:operator pos:line="69" pos:column="145">.</op:operator><name pos:line="69" pos:column="146">ITimelineMessage</name></name></argument>&gt;</argument_list></name><op:operator pos:line="69" pos:column="163">)</op:operator><name pos:line="69" pos:column="164">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="71" pos:column="13">var</name></type> <name pos:line="71" pos:column="17">timeline</name> <init pos:line="71" pos:column="26">= <expr><op:operator pos:line="71" pos:column="28">new</op:operator> <call><name pos:line="71" pos:column="32">Timeline</name><argument_list pos:line="71" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="72" pos:column="13">var</name></type> <name pos:line="72" pos:column="17">result</name> <init pos:line="72" pos:column="24">= <expr><call><name><name pos:line="72" pos:column="26">timeline</name><op:operator pos:line="72" pos:column="34">.</op:operator><name pos:line="72" pos:column="35">GetData</name></name><argument_list pos:line="72" pos:column="42">(<argument><expr><name pos:line="72" pos:column="43">context</name></expr></argument>)</argument_list></call> <op:operator pos:line="72" pos:column="52">as</op:operator> <name pos:line="72" pos:column="55">TimelineModel</name></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="74" pos:column="13">Assert</name><op:operator pos:line="74" pos:column="19">.</op:operator><name pos:line="74" pos:column="20">NotNull</name></name><argument_list pos:line="74" pos:column="27">(<argument><expr><name pos:line="74" pos:column="28">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="75" pos:column="13">Assert</name><op:operator pos:line="75" pos:column="19">.</op:operator><name pos:line="75" pos:column="20">Equal</name></name><argument_list pos:line="75" pos:column="25">(<argument><expr><call><name><name pos:line="75" pos:column="26">TimeSpan</name><op:operator pos:line="75" pos:column="34">.</op:operator><name pos:line="75" pos:column="35">FromMilliseconds</name></name><argument_list pos:line="75" pos:column="51">(<argument><expr><lit:literal type="number" pos:line="75" pos:column="52">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="56">result</name><op:operator pos:line="75" pos:column="62">.</op:operator><name pos:line="75" pos:column="63">Duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="76" pos:column="13">Assert</name><op:operator pos:line="76" pos:column="19">.</op:operator><name pos:line="76" pos:column="20">NotNull</name></name><argument_list pos:line="76" pos:column="27">(<argument><expr><name><name pos:line="76" pos:column="28">result</name><op:operator pos:line="76" pos:column="34">.</op:operator><name pos:line="76" pos:column="35">Events</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="79" pos:column="9">private</specifier> <name><name pos:line="79" pos:column="17">IEnumerable</name><argument_list pos:line="79" pos:column="28">&lt;<argument><name><name pos:line="79" pos:column="29">Glimpse</name><op:operator pos:line="79" pos:column="36">.</op:operator><name pos:line="79" pos:column="37">Core</name><op:operator pos:line="79" pos:column="41">.</op:operator><name pos:line="79" pos:column="42">Message</name><op:operator pos:line="79" pos:column="49">.</op:operator><name pos:line="79" pos:column="50">ITimelineMessage</name></name></argument>&gt;</argument_list></name></type> <name pos:line="79" pos:column="68">BuildMessages</name><parameter_list pos:line="79" pos:column="81">()</parameter_list>
        <block pos:line="80" pos:column="9">{
            <return pos:line="81" pos:column="13">return <expr><op:operator pos:line="81" pos:column="20">new</op:operator> <name><name pos:line="81" pos:column="24">List</name><argument_list pos:line="81" pos:column="28">&lt;<argument><name><name pos:line="81" pos:column="29">Glimpse</name><op:operator pos:line="81" pos:column="36">.</op:operator><name pos:line="81" pos:column="37">Core</name><op:operator pos:line="81" pos:column="41">.</op:operator><name pos:line="81" pos:column="42">Message</name><op:operator pos:line="81" pos:column="49">.</op:operator><name pos:line="81" pos:column="50">ITimelineMessage</name></name></argument>&gt;</argument_list></name>
                               <block pos:line="82" pos:column="32">{
                                   <expr><op:operator pos:line="83" pos:column="36">new</op:operator> <name pos:line="83" pos:column="40">TestTimelineMessage</name> <block pos:line="83" pos:column="60">{ <expr><name pos:line="83" pos:column="62">Duration</name> <op:operator pos:line="83" pos:column="71">=</op:operator> <call><name><name pos:line="83" pos:column="73">TimeSpan</name><op:operator pos:line="83" pos:column="81">.</op:operator><name pos:line="83" pos:column="82">FromMilliseconds</name></name><argument_list pos:line="83" pos:column="98">(<argument><expr><lit:literal type="number" pos:line="83" pos:column="99">1</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="83" pos:column="101">,</op:operator> <expr><name pos:line="83" pos:column="103">EventCategory</name> <op:operator pos:line="83" pos:column="117">=</op:operator> <name><name pos:line="83" pos:column="119">Glimpse</name><op:operator pos:line="83" pos:column="126">.</op:operator><name pos:line="83" pos:column="127">Core</name><op:operator pos:line="83" pos:column="131">.</op:operator><name pos:line="83" pos:column="132">Message</name><op:operator pos:line="83" pos:column="139">.</op:operator><name pos:line="83" pos:column="140">TimelineCategory</name><op:operator pos:line="83" pos:column="156">.</op:operator><name pos:line="83" pos:column="157">Request</name></name></expr><op:operator pos:line="83" pos:column="164">,</op:operator> <expr><name pos:line="83" pos:column="166">EventName</name> <op:operator pos:line="83" pos:column="176">=</op:operator> <lit:literal type="string" pos:line="83" pos:column="178">"TestName1"</lit:literal></expr><op:operator pos:line="83" pos:column="189">,</op:operator> <expr><name pos:line="83" pos:column="191">EventSubText</name> <op:operator pos:line="83" pos:column="204">=</op:operator> <lit:literal type="string" pos:line="83" pos:column="206">"TestSub1"</lit:literal></expr><op:operator pos:line="83" pos:column="216">,</op:operator> <expr><name pos:line="83" pos:column="218">Offset</name> <op:operator pos:line="83" pos:column="225">=</op:operator> <call><name><name pos:line="83" pos:column="227">TimeSpan</name><op:operator pos:line="83" pos:column="235">.</op:operator><name pos:line="83" pos:column="236">FromMilliseconds</name></name><argument_list pos:line="83" pos:column="252">(<argument><expr><lit:literal type="number" pos:line="83" pos:column="253">1</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="83" pos:column="255">,</op:operator> <expr><name pos:line="83" pos:column="257">StartTime</name> <op:operator pos:line="83" pos:column="267">=</op:operator> <name><name pos:line="83" pos:column="269">DateTime</name><op:operator pos:line="83" pos:column="277">.</op:operator><name pos:line="83" pos:column="278">Now</name></name></expr> }</block></expr><op:operator pos:line="83" pos:column="283">,</op:operator>
                                   <expr><op:operator pos:line="84" pos:column="36">new</op:operator> <name pos:line="84" pos:column="40">TestTimelineMessage</name> <block pos:line="84" pos:column="60">{ <expr><name pos:line="84" pos:column="62">Duration</name> <op:operator pos:line="84" pos:column="71">=</op:operator> <call><name><name pos:line="84" pos:column="73">TimeSpan</name><op:operator pos:line="84" pos:column="81">.</op:operator><name pos:line="84" pos:column="82">FromMilliseconds</name></name><argument_list pos:line="84" pos:column="98">(<argument><expr><lit:literal type="number" pos:line="84" pos:column="99">4</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="84" pos:column="101">,</op:operator> <expr><name pos:line="84" pos:column="103">EventCategory</name> <op:operator pos:line="84" pos:column="117">=</op:operator> <name><name pos:line="84" pos:column="119">Glimpse</name><op:operator pos:line="84" pos:column="126">.</op:operator><name pos:line="84" pos:column="127">Core</name><op:operator pos:line="84" pos:column="131">.</op:operator><name pos:line="84" pos:column="132">Message</name><op:operator pos:line="84" pos:column="139">.</op:operator><name pos:line="84" pos:column="140">TimelineCategory</name><op:operator pos:line="84" pos:column="156">.</op:operator><name pos:line="84" pos:column="157">Other</name></name></expr><op:operator pos:line="84" pos:column="162">,</op:operator> <expr><name pos:line="84" pos:column="164">EventName</name> <op:operator pos:line="84" pos:column="174">=</op:operator> <lit:literal type="string" pos:line="84" pos:column="176">"TestName2"</lit:literal></expr><op:operator pos:line="84" pos:column="187">,</op:operator> <expr><name pos:line="84" pos:column="189">EventSubText</name> <op:operator pos:line="84" pos:column="202">=</op:operator> <lit:literal type="string" pos:line="84" pos:column="204">"TestSub2"</lit:literal></expr><op:operator pos:line="84" pos:column="214">,</op:operator> <expr><name pos:line="84" pos:column="216">Offset</name> <op:operator pos:line="84" pos:column="223">=</op:operator> <call><name><name pos:line="84" pos:column="225">TimeSpan</name><op:operator pos:line="84" pos:column="233">.</op:operator><name pos:line="84" pos:column="234">FromMilliseconds</name></name><argument_list pos:line="84" pos:column="250">(<argument><expr><lit:literal type="number" pos:line="84" pos:column="251">3</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="84" pos:column="253">,</op:operator> <expr><name pos:line="84" pos:column="255">StartTime</name> <op:operator pos:line="84" pos:column="265">=</op:operator> <name><name pos:line="84" pos:column="267">DateTime</name><op:operator pos:line="84" pos:column="275">.</op:operator><name pos:line="84" pos:column="276">Now</name></name></expr> }</block></expr><op:operator pos:line="84" pos:column="281">,</op:operator>
                                   <expr><op:operator pos:line="85" pos:column="36">new</op:operator> <name pos:line="85" pos:column="40">TestTimelineMessage</name> <block pos:line="85" pos:column="60">{ <expr><name pos:line="85" pos:column="62">Duration</name> <op:operator pos:line="85" pos:column="71">=</op:operator> <call><name><name pos:line="85" pos:column="73">TimeSpan</name><op:operator pos:line="85" pos:column="81">.</op:operator><name pos:line="85" pos:column="82">FromMilliseconds</name></name><argument_list pos:line="85" pos:column="98">(<argument><expr><lit:literal type="number" pos:line="85" pos:column="99">1</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="85" pos:column="101">,</op:operator> <expr><name pos:line="85" pos:column="103">EventCategory</name> <op:operator pos:line="85" pos:column="117">=</op:operator> <name><name pos:line="85" pos:column="119">Glimpse</name><op:operator pos:line="85" pos:column="126">.</op:operator><name pos:line="85" pos:column="127">Core</name><op:operator pos:line="85" pos:column="131">.</op:operator><name pos:line="85" pos:column="132">Message</name><op:operator pos:line="85" pos:column="139">.</op:operator><name pos:line="85" pos:column="140">TimelineCategory</name><op:operator pos:line="85" pos:column="156">.</op:operator><name pos:line="85" pos:column="157">Request</name></name></expr><op:operator pos:line="85" pos:column="164">,</op:operator> <expr><name pos:line="85" pos:column="166">EventName</name> <op:operator pos:line="85" pos:column="176">=</op:operator> <lit:literal type="string" pos:line="85" pos:column="178">"TestName3"</lit:literal></expr><op:operator pos:line="85" pos:column="189">,</op:operator> <expr><name pos:line="85" pos:column="191">EventSubText</name> <op:operator pos:line="85" pos:column="204">=</op:operator> <lit:literal type="string" pos:line="85" pos:column="206">"TestSub3"</lit:literal></expr><op:operator pos:line="85" pos:column="216">,</op:operator> <expr><name pos:line="85" pos:column="218">Offset</name> <op:operator pos:line="85" pos:column="225">=</op:operator> <call><name><name pos:line="85" pos:column="227">TimeSpan</name><op:operator pos:line="85" pos:column="235">.</op:operator><name pos:line="85" pos:column="236">FromMilliseconds</name></name><argument_list pos:line="85" pos:column="252">(<argument><expr><lit:literal type="number" pos:line="85" pos:column="253">2</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="85" pos:column="255">,</op:operator> <expr><name pos:line="85" pos:column="257">StartTime</name> <op:operator pos:line="85" pos:column="267">=</op:operator> <name><name pos:line="85" pos:column="269">DateTime</name><op:operator pos:line="85" pos:column="277">.</op:operator><name pos:line="85" pos:column="278">Now</name></name></expr> }</block></expr>
                               }</block></expr>;</return>
        }</block></function>

        <class><specifier pos:line="89" pos:column="9">public</specifier> class <name pos:line="89" pos:column="22">TestTimelineMessage</name> <super pos:line="89" pos:column="42">: <name><name pos:line="89" pos:column="44">Glimpse</name><op:operator pos:line="89" pos:column="51">.</op:operator><name pos:line="89" pos:column="52">Core</name><op:operator pos:line="89" pos:column="56">.</op:operator><name pos:line="89" pos:column="57">Message</name><op:operator pos:line="89" pos:column="64">.</op:operator><name pos:line="89" pos:column="65">ITimelineMessage</name></name></super>
        <block pos:line="90" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="91" pos:column="13">public</specifier> <name pos:line="91" pos:column="20">Guid</name></type> <name pos:line="91" pos:column="25">Id</name> <block pos:line="91" pos:column="28">{ <function_decl><name pos:line="91" pos:column="30">get</name>;</function_decl> <function_decl><name pos:line="91" pos:column="35">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="93" pos:column="13">public</specifier> <name pos:line="93" pos:column="20">Type</name></type> <name pos:line="93" pos:column="25">ExecutedType</name> <block pos:line="93" pos:column="38">{ <function_decl><name pos:line="93" pos:column="40">get</name>;</function_decl> <function_decl><name pos:line="93" pos:column="45">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="95" pos:column="13">public</specifier> <name pos:line="95" pos:column="20">MethodInfo</name></type> <name pos:line="95" pos:column="31">ExecutedMethod</name> <block pos:line="95" pos:column="46">{ <function_decl><name pos:line="95" pos:column="48">get</name>;</function_decl> <function_decl><name pos:line="95" pos:column="53">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="97" pos:column="13">public</specifier> <name pos:line="97" pos:column="20">string</name></type> <name pos:line="97" pos:column="27">EventName</name> <block pos:line="97" pos:column="37">{ <function_decl><name pos:line="97" pos:column="39">get</name>;</function_decl> <function_decl><name pos:line="97" pos:column="44">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="99" pos:column="13">public</specifier> <name><name pos:line="99" pos:column="20">Glimpse</name><op:operator pos:line="99" pos:column="27">.</op:operator><name pos:line="99" pos:column="28">Core</name><op:operator pos:line="99" pos:column="32">.</op:operator><name pos:line="99" pos:column="33">Message</name><op:operator pos:line="99" pos:column="40">.</op:operator><name pos:line="99" pos:column="41">TimelineCategoryItem</name></name></type> <name pos:line="99" pos:column="62">EventCategory</name> <block pos:line="99" pos:column="76">{ <function_decl><name pos:line="99" pos:column="78">get</name>;</function_decl> <function_decl><name pos:line="99" pos:column="83">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="101" pos:column="13">public</specifier> <name pos:line="101" pos:column="20">string</name></type> <name pos:line="101" pos:column="27">EventSubText</name> <block pos:line="101" pos:column="40">{ <function_decl><name pos:line="101" pos:column="42">get</name>;</function_decl> <function_decl><name pos:line="101" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="103" pos:column="13">public</specifier> <name pos:line="103" pos:column="20">TimeSpan</name></type> <name pos:line="103" pos:column="29">Offset</name> <block pos:line="103" pos:column="36">{ <function_decl><name pos:line="103" pos:column="38">get</name>;</function_decl> <function_decl><name pos:line="103" pos:column="43">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="105" pos:column="13">public</specifier> <name pos:line="105" pos:column="20">TimeSpan</name></type> <name pos:line="105" pos:column="29">Duration</name> <block pos:line="105" pos:column="38">{ <function_decl><name pos:line="105" pos:column="40">get</name>;</function_decl> <function_decl><name pos:line="105" pos:column="45">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="107" pos:column="13">public</specifier> <name pos:line="107" pos:column="20">DateTime</name></type> <name pos:line="107" pos:column="29">StartTime</name> <block pos:line="107" pos:column="39">{ <function_decl><name pos:line="107" pos:column="41">get</name>;</function_decl> <function_decl><name pos:line="107" pos:column="46">set</name>;</function_decl> }</block></decl></decl_stmt>

            <function><type><specifier pos:line="109" pos:column="13">public</specifier> <name pos:line="109" pos:column="20">void</name></type> <name pos:line="109" pos:column="25">BuildDetails</name><parameter_list pos:line="109" pos:column="37">(<param><decl><type><name><name pos:line="109" pos:column="38">IDictionary</name><argument_list pos:line="109" pos:column="49">&lt;<argument><name pos:line="109" pos:column="50">string</name></argument>, <argument><name pos:line="109" pos:column="58">object</name></argument>&gt;</argument_list></name></type> <name pos:line="109" pos:column="66">details</name></decl></param>)</parameter_list>
            <block pos:line="110" pos:column="13">{
            }</block></function>
        }</block></class>
    }</block></class>
}</block></namespace>
</unit>
