<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc\Model\ModelBindingModel.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Globalization</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Linq</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Mvc</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">AlternateType</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">Glimpse</name><op:operator pos:line="7" pos:column="18">.</op:operator><name pos:line="7" pos:column="19">Mvc</name><op:operator pos:line="7" pos:column="22">.</op:operator><name pos:line="7" pos:column="23">Model</name></name>
<block pos:line="8" pos:column="1">{
    <class><specifier pos:line="9" pos:column="5">public</specifier> class <name pos:line="9" pos:column="18">ModelBindingModel</name>
    <block pos:line="10" pos:column="5">{
        <constructor><specifier pos:line="11" pos:column="9">public</specifier> <name pos:line="11" pos:column="16">ModelBindingModel</name><parameter_list pos:line="11" pos:column="33">(<param><decl><type><name pos:line="11" pos:column="34">string</name></type> <name pos:line="11" pos:column="41">parameter</name></decl></param>)</parameter_list>
        <block pos:line="12" pos:column="9">{
            <expr_stmt><expr><name pos:line="13" pos:column="13">ParameterName</name> <op:operator pos:line="13" pos:column="27">=</op:operator> <name pos:line="13" pos:column="29">parameter</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="14" pos:column="13">ValueProviderActivity</name> <op:operator pos:line="14" pos:column="35">=</op:operator> <op:operator pos:line="14" pos:column="37">new</op:operator> <call><name><name pos:line="14" pos:column="41">List</name><argument_list pos:line="14" pos:column="45">&lt;<argument><name pos:line="14" pos:column="46">ValueProviderModel</name></argument>&gt;</argument_list></name><argument_list pos:line="14" pos:column="65">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="15" pos:column="13">Properties</name> <op:operator pos:line="15" pos:column="24">=</op:operator> <op:operator pos:line="15" pos:column="26">new</op:operator> <call><name><name pos:line="15" pos:column="30">List</name><argument_list pos:line="15" pos:column="34">&lt;<argument><name pos:line="15" pos:column="35">ModelBindingModel</name></argument>&gt;</argument_list></name><argument_list pos:line="15" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="16" pos:column="13">IsBound</name> <op:operator pos:line="16" pos:column="21">=</op:operator> <lit:literal type="boolean" pos:line="16" pos:column="23">false</lit:literal></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">public</specifier> <name pos:line="19" pos:column="16">string</name></type> <name pos:line="19" pos:column="23">ParameterName</name> <block pos:line="19" pos:column="37">{ <function_decl><name pos:line="19" pos:column="39">get</name>;</function_decl> <function_decl><specifier pos:line="19" pos:column="44">private</specifier> <name pos:line="19" pos:column="52">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="21" pos:column="9">public</specifier> <name pos:line="21" pos:column="16">Type</name></type> <name pos:line="21" pos:column="21">ParameterType</name> <block pos:line="21" pos:column="35">{ <function_decl><name pos:line="21" pos:column="37">get</name>;</function_decl> <function_decl><name pos:line="21" pos:column="42">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="23" pos:column="9">public</specifier> <name pos:line="23" pos:column="16">Type</name></type> <name pos:line="23" pos:column="21">ModelBinderType</name> <block pos:line="23" pos:column="37">{ <function_decl><name pos:line="23" pos:column="39">get</name>;</function_decl> <function_decl><name pos:line="23" pos:column="44">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">public</specifier> <name pos:line="25" pos:column="16">CultureInfo</name></type> <name pos:line="25" pos:column="28">Culture</name> <block pos:line="25" pos:column="36">{ <function_decl><name pos:line="25" pos:column="38">get</name>;</function_decl> <function_decl><name pos:line="25" pos:column="43">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="27" pos:column="9">public</specifier> <name pos:line="27" pos:column="16">string</name></type> <name pos:line="27" pos:column="23">AttemptedValue</name> <block pos:line="27" pos:column="38">{ <function_decl><name pos:line="27" pos:column="40">get</name>;</function_decl> <function_decl><name pos:line="27" pos:column="45">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="29" pos:column="9">public</specifier> <name pos:line="29" pos:column="16">object</name></type> <name pos:line="29" pos:column="23">RawValue</name> <block pos:line="29" pos:column="32">{ <function_decl><name pos:line="29" pos:column="34">get</name>;</function_decl> <function_decl><name pos:line="29" pos:column="39">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="31" pos:column="9">public</specifier> <name><name pos:line="31" pos:column="16">IList</name><argument_list pos:line="31" pos:column="21">&lt;<argument><name pos:line="31" pos:column="22">ModelBindingModel</name></argument>&gt;</argument_list></name></type> <name pos:line="31" pos:column="41">Properties</name> <block pos:line="31" pos:column="52">{ <function_decl><name pos:line="31" pos:column="54">get</name>;</function_decl> <function_decl><name pos:line="31" pos:column="59">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="33" pos:column="9">public</specifier> <name><name pos:line="33" pos:column="16">IList</name><argument_list pos:line="33" pos:column="21">&lt;<argument><name pos:line="33" pos:column="22">ValueProviderModel</name></argument>&gt;</argument_list></name></type> <name pos:line="33" pos:column="42">ValueProviderActivity</name> <block pos:line="33" pos:column="64">{ <function_decl><name pos:line="33" pos:column="66">get</name>;</function_decl> <function_decl><name pos:line="33" pos:column="71">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="35" pos:column="9">internal</specifier> <name pos:line="35" pos:column="18">bool</name></type> <name pos:line="35" pos:column="23">IsBound</name> <block pos:line="35" pos:column="31">{ <function_decl><name pos:line="35" pos:column="33">get</name>;</function_decl> <function_decl><name pos:line="35" pos:column="38">set</name>;</function_decl> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="37" pos:column="9">public</specifier> <name pos:line="37" pos:column="16">void</name></type> <name><name pos:line="37" pos:column="21">Add</name><argument_list pos:line="37" pos:column="24">&lt;<argument><name pos:line="37" pos:column="25">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="37" pos:column="27">(<param><decl><type><name><name><name pos:line="37" pos:column="28">ValueProvider</name><argument_list pos:line="37" pos:column="41">&lt;<argument><name pos:line="37" pos:column="42">T</name></argument>&gt;</argument_list></name><op:operator pos:line="37" pos:column="44">.</op:operator><name pos:line="37" pos:column="45">ContainsPrefix</name><op:operator pos:line="37" pos:column="59">.</op:operator><name pos:line="37" pos:column="60">Message</name></name></type> <name pos:line="37" pos:column="68">message</name></decl></param>)</parameter_list> <where pos:line="37" pos:column="77">where <name pos:line="37" pos:column="83">T</name> : class</where>
        <block pos:line="38" pos:column="9">{
            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><op:operator pos:line="39" pos:column="17">!</op:operator><call><name><name pos:line="39" pos:column="18">ValueProviderActivity</name><op:operator pos:line="39" pos:column="39">.</op:operator><name pos:line="39" pos:column="40">Any</name></name><argument_list pos:line="39" pos:column="43">(<argument><expr><lambda><name pos:line="39" pos:column="44">vp</name> <op:operator pos:line="39" pos:column="47">=&gt;</op:operator> <name><name pos:line="39" pos:column="50">vp</name><op:operator pos:line="39" pos:column="52">.</op:operator><name pos:line="39" pos:column="53">IsMatch</name></name></lambda></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="39" pos:column="62">
            <block pos:line="40" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="41" pos:column="17">ValueProviderActivity</name><op:operator pos:line="41" pos:column="38">.</op:operator><name pos:line="41" pos:column="39">Add</name></name><argument_list pos:line="41" pos:column="42">(<argument><expr><op:operator pos:line="41" pos:column="43">new</op:operator> <call><name pos:line="41" pos:column="47">ValueProviderModel</name><argument_list pos:line="41" pos:column="65">(<argument><expr><name><name pos:line="41" pos:column="66">message</name><op:operator pos:line="41" pos:column="73">.</op:operator><name pos:line="41" pos:column="74">ValueProviderType</name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="93">message</name><op:operator pos:line="41" pos:column="100">.</op:operator><name pos:line="41" pos:column="101">IsMatch</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>    
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="45" pos:column="9">public</specifier> <name pos:line="45" pos:column="16">void</name></type> <name><name pos:line="45" pos:column="21">Add</name><argument_list pos:line="45" pos:column="24">&lt;<argument><name pos:line="45" pos:column="25">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="45" pos:column="27">(<param><decl><type><name><name><name pos:line="45" pos:column="28">ValueProvider</name><argument_list pos:line="45" pos:column="41">&lt;<argument><name pos:line="45" pos:column="42">T</name></argument>&gt;</argument_list></name><op:operator pos:line="45" pos:column="44">.</op:operator><name pos:line="45" pos:column="45">GetValue</name><op:operator pos:line="45" pos:column="53">.</op:operator><name pos:line="45" pos:column="54">Message</name></name></type> <name pos:line="45" pos:column="62">message</name></decl></param>)</parameter_list> <where pos:line="45" pos:column="71">where <name pos:line="45" pos:column="77">T</name> : class</where>
        <block pos:line="46" pos:column="9">{
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name><name pos:line="47" pos:column="17">message</name><op:operator pos:line="47" pos:column="24">.</op:operator><name pos:line="47" pos:column="25">IsFound</name></name></expr>)</condition><then pos:line="47" pos:column="33">
            <block pos:line="48" pos:column="13">{
                <expr_stmt><expr><name pos:line="49" pos:column="17">AttemptedValue</name> <op:operator pos:line="49" pos:column="32">=</op:operator> <name><name pos:line="49" pos:column="34">message</name><op:operator pos:line="49" pos:column="41">.</op:operator><name pos:line="49" pos:column="42">AttemptedValue</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="50" pos:column="17">Culture</name> <op:operator pos:line="50" pos:column="25">=</op:operator> <name><name pos:line="50" pos:column="27">message</name><op:operator pos:line="50" pos:column="34">.</op:operator><name pos:line="50" pos:column="35">Culture</name></name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="54" pos:column="9">public</specifier> <name pos:line="54" pos:column="16">void</name></type> <name pos:line="54" pos:column="21">Bound</name><parameter_list pos:line="54" pos:column="26">(<param><decl><type><name><name pos:line="54" pos:column="27">ModelBinder</name><op:operator pos:line="54" pos:column="38">.</op:operator><name pos:line="54" pos:column="39">BindModel</name><op:operator pos:line="54" pos:column="48">.</op:operator><name pos:line="54" pos:column="49">Message</name></name></type> <name pos:line="54" pos:column="57">message</name></decl></param>)</parameter_list>
        <block pos:line="55" pos:column="9">{
            <expr_stmt><expr><name pos:line="56" pos:column="13">ModelBinderType</name> <op:operator pos:line="56" pos:column="29">=</op:operator> <name><name pos:line="56" pos:column="31">message</name><op:operator pos:line="56" pos:column="38">.</op:operator><name pos:line="56" pos:column="39">ModelBinderType</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="57" pos:column="13">ParameterType</name> <op:operator pos:line="57" pos:column="27">=</op:operator> <name><name pos:line="57" pos:column="29">message</name><op:operator pos:line="57" pos:column="36">.</op:operator><name pos:line="57" pos:column="37">ModelType</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="58" pos:column="13">RawValue</name> <op:operator pos:line="58" pos:column="22">=</op:operator> <name><name pos:line="58" pos:column="24">message</name><op:operator pos:line="58" pos:column="31">.</op:operator><name pos:line="58" pos:column="32">RawValue</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="59" pos:column="13">IsBound</name> <op:operator pos:line="59" pos:column="21">=</op:operator> <lit:literal type="boolean" pos:line="59" pos:column="23">true</lit:literal></expr>;</expr_stmt>
        }</block></function>

        <class><specifier pos:line="62" pos:column="9">public</specifier> class <name pos:line="62" pos:column="22">ValueProviderModel</name>
        <block pos:line="63" pos:column="9">{
            <constructor><specifier pos:line="64" pos:column="13">public</specifier> <name pos:line="64" pos:column="20">ValueProviderModel</name><parameter_list pos:line="64" pos:column="38">(<param><decl><type><name pos:line="64" pos:column="39">Type</name></type> <name pos:line="64" pos:column="44">valueProvider</name></decl></param>, <param><decl><type><name pos:line="64" pos:column="59">bool</name></type> <name pos:line="64" pos:column="64">isMatch</name></decl></param>)</parameter_list>
            <block pos:line="65" pos:column="13">{
                <expr_stmt><expr><name pos:line="66" pos:column="17">ValueProvider</name> <op:operator pos:line="66" pos:column="31">=</op:operator> <name pos:line="66" pos:column="33">valueProvider</name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="67" pos:column="17">IsMatch</name> <op:operator pos:line="67" pos:column="25">=</op:operator> <name pos:line="67" pos:column="27">isMatch</name></expr>;</expr_stmt>
            }</block></constructor>

            <decl_stmt><decl><type><specifier pos:line="70" pos:column="13">public</specifier> <name pos:line="70" pos:column="20">Type</name></type> <name pos:line="70" pos:column="25">ValueProvider</name> <block pos:line="70" pos:column="39">{ <function_decl><name pos:line="70" pos:column="41">get</name>;</function_decl> <function_decl><name pos:line="70" pos:column="46">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="72" pos:column="13">public</specifier> <name pos:line="72" pos:column="20">bool</name></type> <name pos:line="72" pos:column="25">IsMatch</name> <block pos:line="72" pos:column="33">{ <function_decl><name pos:line="72" pos:column="35">get</name>;</function_decl> <function_decl><name pos:line="72" pos:column="40">set</name>;</function_decl> }</block></decl></decl_stmt>
        }</block></class>
    }</block></class>
}</block></namespace></unit>
