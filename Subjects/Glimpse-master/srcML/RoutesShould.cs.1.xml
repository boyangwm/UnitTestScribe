<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">AspNet</name><op:operator pos:line="5" pos:column="21">.</op:operator><name pos:line="5" pos:column="22">AlternateType</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">AspNet</name><op:operator pos:line="6" pos:column="21">.</op:operator><name pos:line="6" pos:column="22">Inspector</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">AspNet</name><op:operator pos:line="7" pos:column="21">.</op:operator><name pos:line="7" pos:column="22">Model</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Glimpse</name><op:operator pos:line="8" pos:column="14">.</op:operator><name pos:line="8" pos:column="15">AspNet</name><op:operator pos:line="8" pos:column="21">.</op:operator><name pos:line="8" pos:column="22">Tab</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Glimpse</name><op:operator pos:line="9" pos:column="14">.</op:operator><name pos:line="9" pos:column="15">Core</name><op:operator pos:line="9" pos:column="19">.</op:operator><name pos:line="9" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Glimpse</name><op:operator pos:line="10" pos:column="14">.</op:operator><name pos:line="10" pos:column="15">Core</name><op:operator pos:line="10" pos:column="19">.</op:operator><name pos:line="10" pos:column="20">Framework</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Glimpse</name><op:operator pos:line="11" pos:column="14">.</op:operator><name pos:line="11" pos:column="15">Core</name><op:operator pos:line="11" pos:column="19">.</op:operator><name pos:line="11" pos:column="20">Message</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">Glimpse</name><op:operator pos:line="12" pos:column="14">.</op:operator><name pos:line="12" pos:column="15">Test</name><op:operator pos:line="12" pos:column="19">.</op:operator><name pos:line="12" pos:column="20">Common</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Glimpse</name><op:operator pos:line="13" pos:column="14">.</op:operator><name pos:line="13" pos:column="15">Test</name><op:operator pos:line="13" pos:column="19">.</op:operator><name pos:line="13" pos:column="20">AspNet</name><op:operator pos:line="13" pos:column="26">.</op:operator><name pos:line="13" pos:column="27">Inspector</name></name>;</using>
<using pos:line="14" pos:column="1">using <name pos:line="14" pos:column="7">Moq</name>;</using>
<using pos:line="15" pos:column="1">using <name pos:line="15" pos:column="7">Xunit</name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">Xunit</name><op:operator pos:line="16" pos:column="12">.</op:operator><name pos:line="16" pos:column="13">Extensions</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">Glimpse</name><op:operator pos:line="17" pos:column="14">.</op:operator><name pos:line="17" pos:column="15">AspNet</name><op:operator pos:line="17" pos:column="21">.</op:operator><name pos:line="17" pos:column="22">Message</name></name>;</using> 

<namespace pos:line="19" pos:column="1">namespace <name><name pos:line="19" pos:column="11">Glimpse</name><op:operator pos:line="19" pos:column="18">.</op:operator><name pos:line="19" pos:column="19">Test</name><op:operator pos:line="19" pos:column="23">.</op:operator><name pos:line="19" pos:column="24">AspNet</name><op:operator pos:line="19" pos:column="30">.</op:operator><name pos:line="19" pos:column="31">Tab</name></name>
<block pos:line="20" pos:column="1">{ 
    <class><specifier pos:line="21" pos:column="5">public</specifier> class <name pos:line="21" pos:column="18">RoutesShould</name>
    <block pos:line="22" pos:column="5">{
        <function><type><attribute pos:line="23" pos:column="9">[<expr><name pos:line="23" pos:column="10">Theory</name></expr><op:operator pos:line="23" pos:column="16">,</op:operator> <expr><name pos:line="23" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="24" pos:column="9">public</specifier> <name pos:line="24" pos:column="16">void</name></type> <name pos:line="24" pos:column="21">ReturnName</name><parameter_list pos:line="24" pos:column="31">(<param><decl><type><name pos:line="24" pos:column="32">Routes</name></type> <name pos:line="24" pos:column="39">tab</name></decl></param>)</parameter_list>
        <block pos:line="25" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">Assert</name><op:operator pos:line="26" pos:column="19">.</op:operator><name pos:line="26" pos:column="20">Equal</name></name><argument_list pos:line="26" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="26" pos:column="26">"Routes"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="36">tab</name><op:operator pos:line="26" pos:column="39">.</op:operator><name pos:line="26" pos:column="40">Name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="29" pos:column="9">[<expr><name pos:line="29" pos:column="10">Theory</name></expr><op:operator pos:line="29" pos:column="16">,</op:operator> <expr><name pos:line="29" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="30" pos:column="9">public</specifier> <name pos:line="30" pos:column="16">void</name></type> <name pos:line="30" pos:column="21">ReturnDocumentationUri</name><parameter_list pos:line="30" pos:column="43">(<param><decl><type><name pos:line="30" pos:column="44">Routes</name></type> <name pos:line="30" pos:column="51">tab</name></decl></param>)</parameter_list>
        <block pos:line="31" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">Assert</name><op:operator pos:line="32" pos:column="19">.</op:operator><name pos:line="32" pos:column="20">True</name></name><argument_list pos:line="32" pos:column="24">(<argument><expr><call><name><name pos:line="32" pos:column="25">tab</name><op:operator pos:line="32" pos:column="28">.</op:operator><name pos:line="32" pos:column="29">DocumentationUri</name><op:operator pos:line="32" pos:column="45">.</op:operator><name pos:line="32" pos:column="46">Contains</name></name><argument_list pos:line="32" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="32" pos:column="55">"getGlimpse.com"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="35" pos:column="9">[<expr><name pos:line="35" pos:column="10">Theory</name></expr><op:operator pos:line="35" pos:column="16">,</op:operator> <expr><name pos:line="35" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="36" pos:column="9">public</specifier> <name pos:line="36" pos:column="16">void</name></type> <name pos:line="36" pos:column="21">ReturnRouteInstancesEvenWhenContextIsNull</name><parameter_list pos:line="36" pos:column="62">(<param><decl><type><name pos:line="36" pos:column="63">Routes</name></type> <name pos:line="36" pos:column="70">tab</name></decl></param>, <param><decl><type><name pos:line="36" pos:column="75">ITabContext</name></type> <name pos:line="36" pos:column="87">context</name></decl></param>, <param><decl><type><name pos:line="36" pos:column="96">RoutesInspector</name></type> <name pos:line="36" pos:column="112">routeInspector</name></decl></param>, <param><decl><type><name pos:line="36" pos:column="128">IInspectorContext</name></type> <name pos:line="36" pos:column="146">routeInspectorContext</name></decl></param>)</parameter_list>
        <block pos:line="37" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">context</name><op:operator pos:line="38" pos:column="20">.</op:operator><name pos:line="38" pos:column="21">Setup</name></name><argument_list pos:line="38" pos:column="26">(<argument><expr><lambda><name pos:line="38" pos:column="27">x</name> <op:operator pos:line="38" pos:column="29">=&gt;</op:operator> <call><name><name pos:line="38" pos:column="32">x</name><op:operator pos:line="38" pos:column="33">.</op:operator><name><name pos:line="38" pos:column="34">GetRequestContext</name><argument_list pos:line="38" pos:column="51">&lt;<argument><name pos:line="38" pos:column="52">HttpContextBase</name></argument>&gt;</argument_list></name></name><argument_list pos:line="38" pos:column="68">()</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="38" pos:column="71">.</op:operator><call><name pos:line="38" pos:column="72">Returns</name><argument_list pos:line="38" pos:column="79">(<argument><expr><op:operator pos:line="38" pos:column="80">(</op:operator><name pos:line="38" pos:column="81">HttpContextBase</name><op:operator pos:line="38" pos:column="96">)</op:operator><name pos:line="38" pos:column="97">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="40" pos:column="13">System</name><op:operator pos:line="40" pos:column="19">.</op:operator><name pos:line="40" pos:column="20">Web</name><op:operator pos:line="40" pos:column="23">.</op:operator><name pos:line="40" pos:column="24">Routing</name><op:operator pos:line="40" pos:column="31">.</op:operator><name pos:line="40" pos:column="32">RouteTable</name><op:operator pos:line="40" pos:column="42">.</op:operator><name pos:line="40" pos:column="43">Routes</name><op:operator pos:line="40" pos:column="49">.</op:operator><name pos:line="40" pos:column="50">Clear</name></name><argument_list pos:line="40" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="41" pos:column="13">System</name><op:operator pos:line="41" pos:column="19">.</op:operator><name pos:line="41" pos:column="20">Web</name><op:operator pos:line="41" pos:column="23">.</op:operator><name pos:line="41" pos:column="24">Routing</name><op:operator pos:line="41" pos:column="31">.</op:operator><name pos:line="41" pos:column="32">RouteTable</name><op:operator pos:line="41" pos:column="42">.</op:operator><name pos:line="41" pos:column="43">Routes</name><op:operator pos:line="41" pos:column="49">.</op:operator><name pos:line="41" pos:column="50">Ignore</name></name><argument_list pos:line="41" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="57">"Test"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             
            <expr_stmt><expr><call><name><name pos:line="43" pos:column="13">routeInspectorContext</name><op:operator pos:line="43" pos:column="34">.</op:operator><name pos:line="43" pos:column="35">Setup</name></name><argument_list pos:line="43" pos:column="40">(<argument><expr><lambda><name pos:line="43" pos:column="41">x</name> <op:operator pos:line="43" pos:column="43">=&gt;</op:operator> <name><name pos:line="43" pos:column="46">x</name><op:operator pos:line="43" pos:column="47">.</op:operator><name pos:line="43" pos:column="48">ProxyFactory</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="43" pos:column="61">.</op:operator><call><name pos:line="43" pos:column="62">Returns</name><argument_list pos:line="43" pos:column="69">(<argument><expr><op:operator pos:line="43" pos:column="70">new</op:operator> <call><name pos:line="43" pos:column="74">CastleDynamicProxyFactory</name><argument_list pos:line="43" pos:column="99">(<argument><expr><name><name pos:line="43" pos:column="100">routeInspectorContext</name><op:operator pos:line="43" pos:column="121">.</op:operator><name pos:line="43" pos:column="122">Logger</name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="130">routeInspectorContext</name><op:operator pos:line="43" pos:column="151">.</op:operator><name pos:line="43" pos:column="152">MessageBroker</name></name></expr></argument>, <argument><expr><lambda><parameter_list pos:line="43" pos:column="167">()</parameter_list> <op:operator pos:line="43" pos:column="170">=&gt;</op:operator> <op:operator pos:line="43" pos:column="173">new</op:operator> <call><name pos:line="43" pos:column="177">ExecutionTimer</name><argument_list pos:line="43" pos:column="191">(<argument><expr><op:operator pos:line="43" pos:column="192">new</op:operator> <call><name pos:line="43" pos:column="196">Stopwatch</name><argument_list pos:line="43" pos:column="205">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><lambda><parameter_list pos:line="43" pos:column="210">()</parameter_list> <op:operator pos:line="43" pos:column="213">=&gt;</op:operator> <op:operator pos:line="43" pos:column="216">new</op:operator> <call><name pos:line="43" pos:column="220">RuntimePolicy</name><argument_list pos:line="43" pos:column="233">()</argument_list></call></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="44" pos:column="13">routeInspector</name><op:operator pos:line="44" pos:column="27">.</op:operator><name pos:line="44" pos:column="28">Setup</name></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">routeInspectorContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="46" pos:column="13">var</name></type> <name pos:line="46" pos:column="17">data</name> <init pos:line="46" pos:column="22">= <expr><call><name><name pos:line="46" pos:column="24">tab</name><op:operator pos:line="46" pos:column="27">.</op:operator><name pos:line="46" pos:column="28">GetData</name></name><argument_list pos:line="46" pos:column="35">(<argument><expr><name pos:line="46" pos:column="36">context</name></expr></argument>)</argument_list></call> <op:operator pos:line="46" pos:column="45">as</op:operator> <name><name pos:line="46" pos:column="48">IList</name><argument_list pos:line="46" pos:column="53">&lt;<argument><name pos:line="46" pos:column="54">RouteModel</name></argument>&gt;</argument_list></name></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">Assert</name><op:operator pos:line="48" pos:column="19">.</op:operator><name pos:line="48" pos:column="20">NotNull</name></name><argument_list pos:line="48" pos:column="27">(<argument><expr><name pos:line="48" pos:column="28">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="49" pos:column="13">Assert</name><op:operator pos:line="49" pos:column="19">.</op:operator><name pos:line="49" pos:column="20">Equal</name></name><argument_list pos:line="49" pos:column="25">(<argument><expr><name><name pos:line="49" pos:column="26">System</name><op:operator pos:line="49" pos:column="32">.</op:operator><name pos:line="49" pos:column="33">Web</name><op:operator pos:line="49" pos:column="36">.</op:operator><name pos:line="49" pos:column="37">Routing</name><op:operator pos:line="49" pos:column="44">.</op:operator><name pos:line="49" pos:column="45">RouteTable</name><op:operator pos:line="49" pos:column="55">.</op:operator><name pos:line="49" pos:column="56">Routes</name><op:operator pos:line="49" pos:column="62">.</op:operator><name pos:line="49" pos:column="63">Count</name></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="70">data</name><op:operator pos:line="49" pos:column="74">.</op:operator><name pos:line="49" pos:column="75">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
        }</block></function>

        <function><type><attribute pos:line="52" pos:column="9">[<expr><name pos:line="52" pos:column="10">Theory</name></expr><op:operator pos:line="52" pos:column="16">,</op:operator> <expr><name pos:line="52" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="53" pos:column="9">public</specifier> <name pos:line="53" pos:column="16">void</name></type> <name pos:line="53" pos:column="21">ReturnRouteInstancesEvenWhenRoutesTableEmpty</name><parameter_list pos:line="53" pos:column="65">(<param><decl><type><name pos:line="53" pos:column="66">Routes</name></type> <name pos:line="53" pos:column="73">tab</name></decl></param>, <param><decl><type><name pos:line="53" pos:column="78">ITabContext</name></type> <name pos:line="53" pos:column="90">context</name></decl></param>, <param><decl><type><name pos:line="53" pos:column="99">RoutesInspector</name></type> <name pos:line="53" pos:column="115">routeInspector</name></decl></param>, <param><decl><type><name pos:line="53" pos:column="131">IInspectorContext</name></type> <name pos:line="53" pos:column="149">routeInspectorContext</name></decl></param>)</parameter_list>
        <block pos:line="54" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="55" pos:column="13">System</name><op:operator pos:line="55" pos:column="19">.</op:operator><name pos:line="55" pos:column="20">Web</name><op:operator pos:line="55" pos:column="23">.</op:operator><name pos:line="55" pos:column="24">Routing</name><op:operator pos:line="55" pos:column="31">.</op:operator><name pos:line="55" pos:column="32">RouteTable</name><op:operator pos:line="55" pos:column="42">.</op:operator><name pos:line="55" pos:column="43">Routes</name><op:operator pos:line="55" pos:column="49">.</op:operator><name pos:line="55" pos:column="50">Clear</name></name><argument_list pos:line="55" pos:column="55">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="57" pos:column="13">routeInspectorContext</name><op:operator pos:line="57" pos:column="34">.</op:operator><name pos:line="57" pos:column="35">Setup</name></name><argument_list pos:line="57" pos:column="40">(<argument><expr><lambda><name pos:line="57" pos:column="41">x</name> <op:operator pos:line="57" pos:column="43">=&gt;</op:operator> <name><name pos:line="57" pos:column="46">x</name><op:operator pos:line="57" pos:column="47">.</op:operator><name pos:line="57" pos:column="48">ProxyFactory</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="57" pos:column="61">.</op:operator><call><name pos:line="57" pos:column="62">Returns</name><argument_list pos:line="57" pos:column="69">(<argument><expr><op:operator pos:line="57" pos:column="70">new</op:operator> <call><name pos:line="57" pos:column="74">CastleDynamicProxyFactory</name><argument_list pos:line="57" pos:column="99">(<argument><expr><name><name pos:line="57" pos:column="100">routeInspectorContext</name><op:operator pos:line="57" pos:column="121">.</op:operator><name pos:line="57" pos:column="122">Logger</name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="130">routeInspectorContext</name><op:operator pos:line="57" pos:column="151">.</op:operator><name pos:line="57" pos:column="152">MessageBroker</name></name></expr></argument>, <argument><expr><lambda><parameter_list pos:line="57" pos:column="167">()</parameter_list> <op:operator pos:line="57" pos:column="170">=&gt;</op:operator> <op:operator pos:line="57" pos:column="173">new</op:operator> <call><name pos:line="57" pos:column="177">ExecutionTimer</name><argument_list pos:line="57" pos:column="191">(<argument><expr><op:operator pos:line="57" pos:column="192">new</op:operator> <call><name pos:line="57" pos:column="196">Stopwatch</name><argument_list pos:line="57" pos:column="205">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><lambda><parameter_list pos:line="57" pos:column="210">()</parameter_list> <op:operator pos:line="57" pos:column="213">=&gt;</op:operator> <op:operator pos:line="57" pos:column="216">new</op:operator> <call><name pos:line="57" pos:column="220">RuntimePolicy</name><argument_list pos:line="57" pos:column="233">()</argument_list></call></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="58" pos:column="13">routeInspector</name><op:operator pos:line="58" pos:column="27">.</op:operator><name pos:line="58" pos:column="28">Setup</name></name><argument_list pos:line="58" pos:column="33">(<argument><expr><name pos:line="58" pos:column="34">routeInspectorContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="60" pos:column="13">var</name></type> <name pos:line="60" pos:column="17">data</name> <init pos:line="60" pos:column="22">= <expr><call><name><name pos:line="60" pos:column="24">tab</name><op:operator pos:line="60" pos:column="27">.</op:operator><name pos:line="60" pos:column="28">GetData</name></name><argument_list pos:line="60" pos:column="35">(<argument><expr><name pos:line="60" pos:column="36">context</name></expr></argument>)</argument_list></call> <op:operator pos:line="60" pos:column="45">as</op:operator> <name><name pos:line="60" pos:column="48">IList</name><argument_list pos:line="60" pos:column="53">&lt;<argument><name pos:line="60" pos:column="54">RouteModel</name></argument>&gt;</argument_list></name></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="62" pos:column="13">Assert</name><op:operator pos:line="62" pos:column="19">.</op:operator><name pos:line="62" pos:column="20">NotNull</name></name><argument_list pos:line="62" pos:column="27">(<argument><expr><name pos:line="62" pos:column="28">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="63" pos:column="13">Assert</name><op:operator pos:line="63" pos:column="19">.</op:operator><name pos:line="63" pos:column="20">Empty</name></name><argument_list pos:line="63" pos:column="25">(<argument><expr><name pos:line="63" pos:column="26">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="66" pos:column="9">[<expr><name pos:line="66" pos:column="10">Theory</name></expr><op:operator pos:line="66" pos:column="16">,</op:operator> <expr><name pos:line="66" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="67" pos:column="9">public</specifier> <name pos:line="67" pos:column="16">void</name></type> <name pos:line="67" pos:column="21">ReturnProperNumberOfInstances</name><parameter_list pos:line="67" pos:column="50">(<param><decl><type><name pos:line="67" pos:column="51">Routes</name></type> <name pos:line="67" pos:column="58">tab</name></decl></param>, <param><decl><type><name pos:line="67" pos:column="63">ITabContext</name></type> <name pos:line="67" pos:column="75">context</name></decl></param>, <param><decl><type><name pos:line="67" pos:column="84">RoutesInspector</name></type> <name pos:line="67" pos:column="100">routeInspector</name></decl></param>, <param><decl><type><name pos:line="67" pos:column="116">IInspectorContext</name></type> <name pos:line="67" pos:column="134">routeInspectorContext</name></decl></param>)</parameter_list>
        <block pos:line="68" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="69" pos:column="13">System</name><op:operator pos:line="69" pos:column="19">.</op:operator><name pos:line="69" pos:column="20">Web</name><op:operator pos:line="69" pos:column="23">.</op:operator><name pos:line="69" pos:column="24">Routing</name><op:operator pos:line="69" pos:column="31">.</op:operator><name pos:line="69" pos:column="32">RouteTable</name><op:operator pos:line="69" pos:column="42">.</op:operator><name pos:line="69" pos:column="43">Routes</name><op:operator pos:line="69" pos:column="49">.</op:operator><name pos:line="69" pos:column="50">Clear</name></name><argument_list pos:line="69" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="70" pos:column="13">System</name><op:operator pos:line="70" pos:column="19">.</op:operator><name pos:line="70" pos:column="20">Web</name><op:operator pos:line="70" pos:column="23">.</op:operator><name pos:line="70" pos:column="24">Routing</name><op:operator pos:line="70" pos:column="31">.</op:operator><name pos:line="70" pos:column="32">RouteTable</name><op:operator pos:line="70" pos:column="42">.</op:operator><name pos:line="70" pos:column="43">Routes</name><op:operator pos:line="70" pos:column="49">.</op:operator><name pos:line="70" pos:column="50">Ignore</name></name><argument_list pos:line="70" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="70" pos:column="57">"Something"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="72" pos:column="13">routeInspectorContext</name><op:operator pos:line="72" pos:column="34">.</op:operator><name pos:line="72" pos:column="35">Setup</name></name><argument_list pos:line="72" pos:column="40">(<argument><expr><lambda><name pos:line="72" pos:column="41">x</name> <op:operator pos:line="72" pos:column="43">=&gt;</op:operator> <name><name pos:line="72" pos:column="46">x</name><op:operator pos:line="72" pos:column="47">.</op:operator><name pos:line="72" pos:column="48">ProxyFactory</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="72" pos:column="61">.</op:operator><call><name pos:line="72" pos:column="62">Returns</name><argument_list pos:line="72" pos:column="69">(<argument><expr><op:operator pos:line="72" pos:column="70">new</op:operator> <call><name pos:line="72" pos:column="74">CastleDynamicProxyFactory</name><argument_list pos:line="72" pos:column="99">(<argument><expr><name><name pos:line="72" pos:column="100">routeInspectorContext</name><op:operator pos:line="72" pos:column="121">.</op:operator><name pos:line="72" pos:column="122">Logger</name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="130">routeInspectorContext</name><op:operator pos:line="72" pos:column="151">.</op:operator><name pos:line="72" pos:column="152">MessageBroker</name></name></expr></argument>, <argument><expr><lambda><parameter_list pos:line="72" pos:column="167">()</parameter_list> <op:operator pos:line="72" pos:column="170">=&gt;</op:operator> <op:operator pos:line="72" pos:column="173">new</op:operator> <call><name pos:line="72" pos:column="177">ExecutionTimer</name><argument_list pos:line="72" pos:column="191">(<argument><expr><op:operator pos:line="72" pos:column="192">new</op:operator> <call><name pos:line="72" pos:column="196">Stopwatch</name><argument_list pos:line="72" pos:column="205">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><lambda><parameter_list pos:line="72" pos:column="210">()</parameter_list> <op:operator pos:line="72" pos:column="213">=&gt;</op:operator> <op:operator pos:line="72" pos:column="216">new</op:operator> <call><name pos:line="72" pos:column="220">RuntimePolicy</name><argument_list pos:line="72" pos:column="233">()</argument_list></call></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="73" pos:column="13">routeInspector</name><op:operator pos:line="73" pos:column="27">.</op:operator><name pos:line="73" pos:column="28">Setup</name></name><argument_list pos:line="73" pos:column="33">(<argument><expr><name pos:line="73" pos:column="34">routeInspectorContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            
            <decl_stmt><decl><type><name pos:line="75" pos:column="13">var</name></type> <name pos:line="75" pos:column="17">data</name> <init pos:line="75" pos:column="22">= <expr><call><name><name pos:line="75" pos:column="24">tab</name><op:operator pos:line="75" pos:column="27">.</op:operator><name pos:line="75" pos:column="28">GetData</name></name><argument_list pos:line="75" pos:column="35">(<argument><expr><name pos:line="75" pos:column="36">context</name></expr></argument>)</argument_list></call> <op:operator pos:line="75" pos:column="45">as</op:operator> <name><name pos:line="75" pos:column="48">IList</name><argument_list pos:line="75" pos:column="53">&lt;<argument><name pos:line="75" pos:column="54">RouteModel</name></argument>&gt;</argument_list></name></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="77" pos:column="13">Assert</name><op:operator pos:line="77" pos:column="19">.</op:operator><name pos:line="77" pos:column="20">NotNull</name></name><argument_list pos:line="77" pos:column="27">(<argument><expr><name pos:line="77" pos:column="28">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="78" pos:column="13">Assert</name><op:operator pos:line="78" pos:column="19">.</op:operator><name pos:line="78" pos:column="20">Equal</name></name><argument_list pos:line="78" pos:column="25">(<argument><expr><name><name pos:line="78" pos:column="26">System</name><op:operator pos:line="78" pos:column="32">.</op:operator><name pos:line="78" pos:column="33">Web</name><op:operator pos:line="78" pos:column="36">.</op:operator><name pos:line="78" pos:column="37">Routing</name><op:operator pos:line="78" pos:column="44">.</op:operator><name pos:line="78" pos:column="45">RouteTable</name><op:operator pos:line="78" pos:column="55">.</op:operator><name pos:line="78" pos:column="56">Routes</name><op:operator pos:line="78" pos:column="62">.</op:operator><name pos:line="78" pos:column="63">Count</name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="70">data</name><op:operator pos:line="78" pos:column="74">.</op:operator><name pos:line="78" pos:column="75">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="81" pos:column="9">[<expr><name pos:line="81" pos:column="10">Theory</name></expr><op:operator pos:line="81" pos:column="16">,</op:operator> <expr><name pos:line="81" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="82" pos:column="9">public</specifier> <name pos:line="82" pos:column="16">void</name></type> <name pos:line="82" pos:column="21">SubscribeToConstraintMessageTypes</name><parameter_list pos:line="82" pos:column="54">(<param><decl><type><name pos:line="82" pos:column="55">Routes</name></type> <name pos:line="82" pos:column="62">tab</name></decl></param>, <param><decl><type><name pos:line="82" pos:column="67">ITabSetupContext</name></type> <name pos:line="82" pos:column="84">setupContext</name></decl></param>)</parameter_list>
        <block pos:line="83" pos:column="9">{ 
            <expr_stmt><expr><call><name><name pos:line="84" pos:column="13">tab</name><op:operator pos:line="84" pos:column="16">.</op:operator><name pos:line="84" pos:column="17">Setup</name></name><argument_list pos:line="84" pos:column="22">(<argument><expr><name pos:line="84" pos:column="23">setupContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="86" pos:column="13">setupContext</name><op:operator pos:line="86" pos:column="25">.</op:operator><name pos:line="86" pos:column="26">MessageBroker</name><op:operator pos:line="86" pos:column="39">.</op:operator><name pos:line="86" pos:column="40">Verify</name></name><argument_list pos:line="86" pos:column="46">(<argument><expr><lambda><name pos:line="86" pos:column="47">mb</name> <op:operator pos:line="86" pos:column="50">=&gt;</op:operator> <call><name><name pos:line="86" pos:column="53">mb</name><op:operator pos:line="86" pos:column="55">.</op:operator><name pos:line="86" pos:column="56">Subscribe</name></name><argument_list pos:line="86" pos:column="65">(<argument><expr><call><name><name pos:line="86" pos:column="66">It</name><op:operator pos:line="86" pos:column="68">.</op:operator><name><name pos:line="86" pos:column="69">IsAny</name><argument_list pos:line="86" pos:column="74">&lt;<argument><name><name pos:line="86" pos:column="75">Action</name><argument_list pos:line="86" pos:column="81">&lt;<argument><name pos:line="86" pos:column="82">ProcessConstraintMessage</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="86" pos:column="108">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="87" pos:column="13">setupContext</name><op:operator pos:line="87" pos:column="25">.</op:operator><name pos:line="87" pos:column="26">MessageBroker</name><op:operator pos:line="87" pos:column="39">.</op:operator><name pos:line="87" pos:column="40">Verify</name></name><argument_list pos:line="87" pos:column="46">(<argument><expr><lambda><name pos:line="87" pos:column="47">mb</name> <op:operator pos:line="87" pos:column="50">=&gt;</op:operator> <call><name><name pos:line="87" pos:column="53">mb</name><op:operator pos:line="87" pos:column="55">.</op:operator><name pos:line="87" pos:column="56">Subscribe</name></name><argument_list pos:line="87" pos:column="65">(<argument><expr><call><name><name pos:line="87" pos:column="66">It</name><op:operator pos:line="87" pos:column="68">.</op:operator><name><name pos:line="87" pos:column="69">IsAny</name><argument_list pos:line="87" pos:column="74">&lt;<argument><name><name pos:line="87" pos:column="75">Action</name><argument_list pos:line="87" pos:column="81">&lt;<argument><name pos:line="87" pos:column="82">RouteDataMessage</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="87" pos:column="100">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
        }</block></function>

        <function><type><attribute pos:line="90" pos:column="9">[<expr><name pos:line="90" pos:column="10">Theory</name></expr><op:operator pos:line="90" pos:column="16">,</op:operator> <expr><name pos:line="90" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="91" pos:column="9">public</specifier> <name pos:line="91" pos:column="16">void</name></type> <name pos:line="91" pos:column="21">MatchConstraintMessageToRoute</name><parameter_list pos:line="91" pos:column="50">(<param><decl><type><name pos:line="91" pos:column="51">Routes</name></type> <name pos:line="91" pos:column="58">tab</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="63">ITabContext</name></type> <name pos:line="91" pos:column="75">context</name></decl></param>, <param><decl><type><name><name pos:line="91" pos:column="84">System</name><op:operator pos:line="91" pos:column="90">.</op:operator><name pos:line="91" pos:column="91">Web</name><op:operator pos:line="91" pos:column="94">.</op:operator><name pos:line="91" pos:column="95">Routing</name><op:operator pos:line="91" pos:column="102">.</op:operator><name pos:line="91" pos:column="103">IRouteConstraint</name></name></type> <name pos:line="91" pos:column="120">constraint</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="132">RoutesInspector</name></type> <name pos:line="91" pos:column="148">routeInspector</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="164">IInspectorContext</name></type> <name pos:line="91" pos:column="182">routeInspectorContext</name></decl></param>)</parameter_list>
        <block pos:line="92" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="93" pos:column="13">var</name></type> <name pos:line="93" pos:column="17">route</name> <init pos:line="93" pos:column="23">= <expr><op:operator pos:line="93" pos:column="25">new</op:operator> <call><name><name pos:line="93" pos:column="29">System</name><op:operator pos:line="93" pos:column="35">.</op:operator><name pos:line="93" pos:column="36">Web</name><op:operator pos:line="93" pos:column="39">.</op:operator><name pos:line="93" pos:column="40">Routing</name><op:operator pos:line="93" pos:column="47">.</op:operator><name pos:line="93" pos:column="48">Route</name></name><argument_list pos:line="93" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="54">"url"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="93" pos:column="61">new</op:operator> <name><name pos:line="93" pos:column="65">System</name><op:operator pos:line="93" pos:column="71">.</op:operator><name pos:line="93" pos:column="72">Web</name><op:operator pos:line="93" pos:column="75">.</op:operator><name pos:line="93" pos:column="76">Routing</name><op:operator pos:line="93" pos:column="83">.</op:operator><name pos:line="93" pos:column="84">RouteValueDictionary</name></name> <block pos:line="93" pos:column="105">{ <expr><block pos:line="93" pos:column="107">{ <expr><lit:literal type="string" pos:line="93" pos:column="109">"Test"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="93" pos:column="117">"Other"</lit:literal></expr> }</block></expr> }</block></expr></argument>, <argument><expr><op:operator pos:line="93" pos:column="130">new</op:operator> <name><name pos:line="93" pos:column="134">System</name><op:operator pos:line="93" pos:column="140">.</op:operator><name pos:line="93" pos:column="141">Web</name><op:operator pos:line="93" pos:column="144">.</op:operator><name pos:line="93" pos:column="145">Routing</name><op:operator pos:line="93" pos:column="152">.</op:operator><name pos:line="93" pos:column="153">RouteValueDictionary</name></name> <block pos:line="93" pos:column="174">{ <expr><block pos:line="93" pos:column="176">{ <expr><lit:literal type="string" pos:line="93" pos:column="178">"Test"</lit:literal></expr>, <expr><name pos:line="93" pos:column="186">constraint</name></expr> }</block></expr> }</block></expr></argument>, <argument><expr><op:operator pos:line="93" pos:column="202">new</op:operator> <name><name pos:line="93" pos:column="206">System</name><op:operator pos:line="93" pos:column="212">.</op:operator><name pos:line="93" pos:column="213">Web</name><op:operator pos:line="93" pos:column="216">.</op:operator><name pos:line="93" pos:column="217">Routing</name><op:operator pos:line="93" pos:column="224">.</op:operator><name pos:line="93" pos:column="225">RouteValueDictionary</name></name> <block pos:line="93" pos:column="246">{ <expr><block pos:line="93" pos:column="248">{ <expr><lit:literal type="string" pos:line="93" pos:column="250">"Data"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="93" pos:column="258">"Tokens"</lit:literal></expr> }</block></expr> }</block></expr></argument>, <argument><expr><op:operator pos:line="93" pos:column="272">new</op:operator> <call><name><name pos:line="93" pos:column="276">System</name><op:operator pos:line="93" pos:column="282">.</op:operator><name pos:line="93" pos:column="283">Web</name><op:operator pos:line="93" pos:column="286">.</op:operator><name pos:line="93" pos:column="287">Routing</name><op:operator pos:line="93" pos:column="294">.</op:operator><name pos:line="93" pos:column="295">PageRouteHandler</name></name><argument_list pos:line="93" pos:column="311">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="312">"~/Path"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="95" pos:column="13">System</name><op:operator pos:line="95" pos:column="19">.</op:operator><name pos:line="95" pos:column="20">Web</name><op:operator pos:line="95" pos:column="23">.</op:operator><name pos:line="95" pos:column="24">Routing</name><op:operator pos:line="95" pos:column="31">.</op:operator><name pos:line="95" pos:column="32">RouteTable</name><op:operator pos:line="95" pos:column="42">.</op:operator><name pos:line="95" pos:column="43">Routes</name><op:operator pos:line="95" pos:column="49">.</op:operator><name pos:line="95" pos:column="50">Clear</name></name><argument_list pos:line="95" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="96" pos:column="13">System</name><op:operator pos:line="96" pos:column="19">.</op:operator><name pos:line="96" pos:column="20">Web</name><op:operator pos:line="96" pos:column="23">.</op:operator><name pos:line="96" pos:column="24">Routing</name><op:operator pos:line="96" pos:column="31">.</op:operator><name pos:line="96" pos:column="32">RouteTable</name><op:operator pos:line="96" pos:column="42">.</op:operator><name pos:line="96" pos:column="43">Routes</name><op:operator pos:line="96" pos:column="49">.</op:operator><name pos:line="96" pos:column="50">Add</name></name><argument_list pos:line="96" pos:column="53">(<argument><expr><name pos:line="96" pos:column="54">route</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="98" pos:column="13">routeInspectorContext</name><op:operator pos:line="98" pos:column="34">.</op:operator><name pos:line="98" pos:column="35">Setup</name></name><argument_list pos:line="98" pos:column="40">(<argument><expr><lambda><name pos:line="98" pos:column="41">x</name> <op:operator pos:line="98" pos:column="43">=&gt;</op:operator> <name><name pos:line="98" pos:column="46">x</name><op:operator pos:line="98" pos:column="47">.</op:operator><name pos:line="98" pos:column="48">ProxyFactory</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="98" pos:column="61">.</op:operator><call><name pos:line="98" pos:column="62">Returns</name><argument_list pos:line="98" pos:column="69">(<argument><expr><op:operator pos:line="98" pos:column="70">new</op:operator> <call><name pos:line="98" pos:column="74">CastleDynamicProxyFactory</name><argument_list pos:line="98" pos:column="99">(<argument><expr><name><name pos:line="98" pos:column="100">routeInspectorContext</name><op:operator pos:line="98" pos:column="121">.</op:operator><name pos:line="98" pos:column="122">Logger</name></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="130">routeInspectorContext</name><op:operator pos:line="98" pos:column="151">.</op:operator><name pos:line="98" pos:column="152">MessageBroker</name></name></expr></argument>, <argument><expr><lambda><parameter_list pos:line="98" pos:column="167">()</parameter_list> <op:operator pos:line="98" pos:column="170">=&gt;</op:operator> <op:operator pos:line="98" pos:column="173">new</op:operator> <call><name pos:line="98" pos:column="177">ExecutionTimer</name><argument_list pos:line="98" pos:column="191">(<argument><expr><op:operator pos:line="98" pos:column="192">new</op:operator> <call><name pos:line="98" pos:column="196">Stopwatch</name><argument_list pos:line="98" pos:column="205">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><lambda><parameter_list pos:line="98" pos:column="210">()</parameter_list> <op:operator pos:line="98" pos:column="213">=&gt;</op:operator> <op:operator pos:line="98" pos:column="216">new</op:operator> <call><name pos:line="98" pos:column="220">RuntimePolicy</name><argument_list pos:line="98" pos:column="233">()</argument_list></call></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="99" pos:column="13">routeInspector</name><op:operator pos:line="99" pos:column="27">.</op:operator><name pos:line="99" pos:column="28">Setup</name></name><argument_list pos:line="99" pos:column="33">(<argument><expr><name pos:line="99" pos:column="34">routeInspectorContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="101" pos:column="13">route</name> <op:operator pos:line="101" pos:column="19">=</op:operator> <op:operator pos:line="101" pos:column="21">(</op:operator><name><name pos:line="101" pos:column="22">System</name><op:operator pos:line="101" pos:column="28">.</op:operator><name pos:line="101" pos:column="29">Web</name><op:operator pos:line="101" pos:column="32">.</op:operator><name pos:line="101" pos:column="33">Routing</name><op:operator pos:line="101" pos:column="40">.</op:operator><name pos:line="101" pos:column="41">Route</name></name><op:operator pos:line="101" pos:column="46">)</op:operator> <name><name pos:line="101" pos:column="48">System</name><op:operator pos:line="101" pos:column="54">.</op:operator><name pos:line="101" pos:column="55">Web</name><op:operator pos:line="101" pos:column="58">.</op:operator><name pos:line="101" pos:column="59">Routing</name><op:operator pos:line="101" pos:column="66">.</op:operator><name pos:line="101" pos:column="67">RouteTable</name><op:operator pos:line="101" pos:column="77">.</op:operator><name pos:line="101" pos:column="78">Routes</name><index pos:line="101" pos:column="84">[<expr><lit:literal type="number" pos:line="101" pos:column="85">0</lit:literal></expr>]</index></name></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="103" pos:column="13">var</name></type> <name pos:line="103" pos:column="17">routeMessage</name> <init pos:line="103" pos:column="30">= <expr><op:operator pos:line="103" pos:column="32">new</op:operator> <call><name pos:line="103" pos:column="36">RouteDataMessage</name><argument_list pos:line="103" pos:column="52">(<argument><expr><call><name><name pos:line="103" pos:column="53">route</name><op:operator pos:line="103" pos:column="58">.</op:operator><name pos:line="103" pos:column="59">GetHashCode</name></name><argument_list pos:line="103" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="103" pos:column="74">new</op:operator> <call><name><name pos:line="103" pos:column="78">System</name><op:operator pos:line="103" pos:column="84">.</op:operator><name pos:line="103" pos:column="85">Web</name><op:operator pos:line="103" pos:column="88">.</op:operator><name pos:line="103" pos:column="89">Routing</name><op:operator pos:line="103" pos:column="96">.</op:operator><name pos:line="103" pos:column="97">RouteData</name></name><argument_list pos:line="103" pos:column="106">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="103" pos:column="110">"routeName"</lit:literal></expr></argument>)</argument_list></call>
                <op:operator pos:line="104" pos:column="17">.</op:operator><call><name pos:line="104" pos:column="18">AsSourceMessage</name><argument_list pos:line="104" pos:column="33">(<argument><expr><call><name><name pos:line="104" pos:column="34">route</name><op:operator pos:line="104" pos:column="39">.</op:operator><name pos:line="104" pos:column="40">GetType</name></name><argument_list pos:line="104" pos:column="47">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="104" pos:column="51">null</name></expr></argument>)</argument_list></call>
                <op:operator pos:line="105" pos:column="17">.</op:operator><call><name pos:line="105" pos:column="18">AsTimedMessage</name><argument_list pos:line="105" pos:column="32">(<argument><expr><op:operator pos:line="105" pos:column="33">new</op:operator> <name pos:line="105" pos:column="37">TimerResult</name> <block pos:line="105" pos:column="49">{ <expr><name pos:line="105" pos:column="51">Duration</name> <op:operator pos:line="105" pos:column="60">=</op:operator> <call><name><name pos:line="105" pos:column="62">TimeSpan</name><op:operator pos:line="105" pos:column="70">.</op:operator><name pos:line="105" pos:column="71">FromMilliseconds</name></name><argument_list pos:line="105" pos:column="87">(<argument><expr><lit:literal type="number" pos:line="105" pos:column="88">19</lit:literal></expr></argument>)</argument_list></call></expr> }</block></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="106" pos:column="13">var</name></type> <name pos:line="106" pos:column="17">constraintMessage</name> <init pos:line="106" pos:column="35">= <expr><op:operator pos:line="106" pos:column="37">new</op:operator> <call><name pos:line="106" pos:column="41">ProcessConstraintMessage</name><argument_list pos:line="106" pos:column="65">(<argument><expr><call><name><name pos:line="106" pos:column="66">route</name><op:operator pos:line="106" pos:column="71">.</op:operator><name pos:line="106" pos:column="72">GetHashCode</name></name><argument_list pos:line="106" pos:column="83">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="106" pos:column="87">constraint</name><op:operator pos:line="106" pos:column="97">.</op:operator><name pos:line="106" pos:column="98">GetHashCode</name></name><argument_list pos:line="106" pos:column="109">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="106" pos:column="113">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="106" pos:column="119">"test"</lit:literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="127">constraint</name></expr></argument>, <argument><expr><op:operator pos:line="106" pos:column="139">(</op:operator><name><name pos:line="106" pos:column="140">System</name><op:operator pos:line="106" pos:column="146">.</op:operator><name pos:line="106" pos:column="147">Web</name><op:operator pos:line="106" pos:column="150">.</op:operator><name pos:line="106" pos:column="151">Routing</name><op:operator pos:line="106" pos:column="158">.</op:operator><name pos:line="106" pos:column="159">RouteValueDictionary</name></name><op:operator pos:line="106" pos:column="179">)</op:operator><name pos:line="106" pos:column="180">null</name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="186">System</name><op:operator pos:line="106" pos:column="192">.</op:operator><name pos:line="106" pos:column="193">Web</name><op:operator pos:line="106" pos:column="196">.</op:operator><name pos:line="106" pos:column="197">Routing</name><op:operator pos:line="106" pos:column="204">.</op:operator><name pos:line="106" pos:column="205">RouteDirection</name><op:operator pos:line="106" pos:column="219">.</op:operator><name pos:line="106" pos:column="220">IncomingRequest</name></name></expr></argument>)</argument_list></call>
                <op:operator pos:line="107" pos:column="17">.</op:operator><call><name pos:line="107" pos:column="18">AsTimedMessage</name><argument_list pos:line="107" pos:column="32">(<argument><expr><op:operator pos:line="107" pos:column="33">new</op:operator> <name pos:line="107" pos:column="37">TimerResult</name> <block pos:line="107" pos:column="49">{ <expr><name pos:line="107" pos:column="51">Duration</name> <op:operator pos:line="107" pos:column="60">=</op:operator> <call><name><name pos:line="107" pos:column="62">TimeSpan</name><op:operator pos:line="107" pos:column="70">.</op:operator><name pos:line="107" pos:column="71">FromMilliseconds</name></name><argument_list pos:line="107" pos:column="87">(<argument><expr><lit:literal type="number" pos:line="107" pos:column="88">25</lit:literal></expr></argument>)</argument_list></call></expr> }</block></expr></argument>)</argument_list></call>
                <op:operator pos:line="108" pos:column="17">.</op:operator><call><name pos:line="108" pos:column="18">AsSourceMessage</name><argument_list pos:line="108" pos:column="33">(<argument><expr><call><name><name pos:line="108" pos:column="34">route</name><op:operator pos:line="108" pos:column="39">.</op:operator><name pos:line="108" pos:column="40">GetType</name></name><argument_list pos:line="108" pos:column="47">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="108" pos:column="51">null</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="110" pos:column="13">context</name><op:operator pos:line="110" pos:column="20">.</op:operator><name pos:line="110" pos:column="21">TabStore</name><op:operator pos:line="110" pos:column="29">.</op:operator><name pos:line="110" pos:column="30">Setup</name></name><argument_list pos:line="110" pos:column="35">(<argument><expr><lambda><name pos:line="110" pos:column="36">mb</name> <op:operator pos:line="110" pos:column="39">=&gt;</op:operator> <call><name><name pos:line="110" pos:column="42">mb</name><op:operator pos:line="110" pos:column="44">.</op:operator><name pos:line="110" pos:column="45">Contains</name></name><argument_list pos:line="110" pos:column="53">(<argument><expr><call><name pos:line="110" pos:column="54">typeof</name><argument_list pos:line="110" pos:column="60">(<argument><expr><name><name pos:line="110" pos:column="61">IList</name><argument_list pos:line="110" pos:column="66">&lt;<argument><name pos:line="110" pos:column="67">ProcessConstraintMessage</name></argument>&gt;</argument_list></name></expr></argument>)</argument_list></call><op:operator pos:line="110" pos:column="93">.</op:operator><name pos:line="110" pos:column="94">AssemblyQualifiedName</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="110" pos:column="117">.</op:operator><call><name pos:line="110" pos:column="118">Returns</name><argument_list pos:line="110" pos:column="125">(<argument><expr><lit:literal type="boolean" pos:line="110" pos:column="126">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="110" pos:column="131">.</op:operator><call><name pos:line="110" pos:column="132">Verifiable</name><argument_list pos:line="110" pos:column="142">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="111" pos:column="13">context</name><op:operator pos:line="111" pos:column="20">.</op:operator><name pos:line="111" pos:column="21">TabStore</name><op:operator pos:line="111" pos:column="29">.</op:operator><name pos:line="111" pos:column="30">Setup</name></name><argument_list pos:line="111" pos:column="35">(<argument><expr><lambda><name pos:line="111" pos:column="36">mb</name> <op:operator pos:line="111" pos:column="39">=&gt;</op:operator> <call><name><name pos:line="111" pos:column="42">mb</name><op:operator pos:line="111" pos:column="44">.</op:operator><name pos:line="111" pos:column="45">Contains</name></name><argument_list pos:line="111" pos:column="53">(<argument><expr><call><name pos:line="111" pos:column="54">typeof</name><argument_list pos:line="111" pos:column="60">(<argument><expr><name><name pos:line="111" pos:column="61">IList</name><argument_list pos:line="111" pos:column="66">&lt;<argument><name pos:line="111" pos:column="67">RouteDataMessage</name></argument>&gt;</argument_list></name></expr></argument>)</argument_list></call><op:operator pos:line="111" pos:column="85">.</op:operator><name pos:line="111" pos:column="86">AssemblyQualifiedName</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="111" pos:column="109">.</op:operator><call><name pos:line="111" pos:column="110">Returns</name><argument_list pos:line="111" pos:column="117">(<argument><expr><lit:literal type="boolean" pos:line="111" pos:column="118">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="111" pos:column="123">.</op:operator><call><name pos:line="111" pos:column="124">Verifiable</name><argument_list pos:line="111" pos:column="134">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="113" pos:column="13">context</name><op:operator pos:line="113" pos:column="20">.</op:operator><name pos:line="113" pos:column="21">TabStore</name><op:operator pos:line="113" pos:column="29">.</op:operator><name pos:line="113" pos:column="30">Setup</name></name><argument_list pos:line="113" pos:column="35">(<argument><expr><lambda><name pos:line="113" pos:column="36">mb</name> <op:operator pos:line="113" pos:column="39">=&gt;</op:operator> <call><name><name pos:line="113" pos:column="42">mb</name><op:operator pos:line="113" pos:column="44">.</op:operator><name pos:line="113" pos:column="45">Get</name></name><argument_list pos:line="113" pos:column="48">(<argument><expr><call><name pos:line="113" pos:column="49">typeof</name><argument_list pos:line="113" pos:column="55">(<argument><expr><name><name pos:line="113" pos:column="56">IList</name><argument_list pos:line="113" pos:column="61">&lt;<argument><name pos:line="113" pos:column="62">ProcessConstraintMessage</name></argument>&gt;</argument_list></name></expr></argument>)</argument_list></call><op:operator pos:line="113" pos:column="88">.</op:operator><name pos:line="113" pos:column="89">AssemblyQualifiedName</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="113" pos:column="112">.</op:operator><call><name pos:line="113" pos:column="113">Returns</name><argument_list pos:line="113" pos:column="120">(<argument><expr><op:operator pos:line="113" pos:column="121">new</op:operator> <name><name pos:line="113" pos:column="125">List</name><argument_list pos:line="113" pos:column="129">&lt;<argument><name pos:line="113" pos:column="130">ProcessConstraintMessage</name></argument>&gt;</argument_list></name> <block pos:line="113" pos:column="156">{ <expr><name pos:line="113" pos:column="158">constraintMessage</name></expr> }</block></expr></argument>)</argument_list></call><op:operator pos:line="113" pos:column="178">.</op:operator><call><name pos:line="113" pos:column="179">Verifiable</name><argument_list pos:line="113" pos:column="189">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="114" pos:column="13">context</name><op:operator pos:line="114" pos:column="20">.</op:operator><name pos:line="114" pos:column="21">TabStore</name><op:operator pos:line="114" pos:column="29">.</op:operator><name pos:line="114" pos:column="30">Setup</name></name><argument_list pos:line="114" pos:column="35">(<argument><expr><lambda><name pos:line="114" pos:column="36">mb</name> <op:operator pos:line="114" pos:column="39">=&gt;</op:operator> <call><name><name pos:line="114" pos:column="42">mb</name><op:operator pos:line="114" pos:column="44">.</op:operator><name pos:line="114" pos:column="45">Get</name></name><argument_list pos:line="114" pos:column="48">(<argument><expr><call><name pos:line="114" pos:column="49">typeof</name><argument_list pos:line="114" pos:column="55">(<argument><expr><name><name pos:line="114" pos:column="56">IList</name><argument_list pos:line="114" pos:column="61">&lt;<argument><name pos:line="114" pos:column="62">RouteDataMessage</name></argument>&gt;</argument_list></name></expr></argument>)</argument_list></call><op:operator pos:line="114" pos:column="80">.</op:operator><name pos:line="114" pos:column="81">AssemblyQualifiedName</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="114" pos:column="104">.</op:operator><call><name pos:line="114" pos:column="105">Returns</name><argument_list pos:line="114" pos:column="112">(<argument><expr><op:operator pos:line="114" pos:column="113">new</op:operator> <name><name pos:line="114" pos:column="117">List</name><argument_list pos:line="114" pos:column="121">&lt;<argument><name pos:line="114" pos:column="122">RouteDataMessage</name></argument>&gt;</argument_list></name> <block pos:line="114" pos:column="140">{ <expr><name pos:line="114" pos:column="142">routeMessage</name></expr> }</block></expr></argument>)</argument_list></call><op:operator pos:line="114" pos:column="157">.</op:operator><call><name pos:line="114" pos:column="158">Verifiable</name><argument_list pos:line="114" pos:column="168">()</argument_list></call></expr>;</expr_stmt>
             
            <decl_stmt><decl><type><name pos:line="116" pos:column="13">var</name></type> <name pos:line="116" pos:column="17">model</name> <init pos:line="116" pos:column="23">= <expr><call><name><name pos:line="116" pos:column="25">tab</name><op:operator pos:line="116" pos:column="28">.</op:operator><name pos:line="116" pos:column="29">GetData</name></name><argument_list pos:line="116" pos:column="36">(<argument><expr><name pos:line="116" pos:column="37">context</name></expr></argument>)</argument_list></call> <op:operator pos:line="116" pos:column="46">as</op:operator> <name><name pos:line="116" pos:column="49">List</name><argument_list pos:line="116" pos:column="53">&lt;<argument><name pos:line="116" pos:column="54">RouteModel</name></argument>&gt;</argument_list></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="117" pos:column="13">var</name></type> <name pos:line="117" pos:column="17">itemModel</name> <init pos:line="117" pos:column="27">= <expr><name><name pos:line="117" pos:column="29">model</name><index pos:line="117" pos:column="34">[<expr><lit:literal type="number" pos:line="117" pos:column="35">0</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
             
            <expr_stmt><expr><call><name><name pos:line="119" pos:column="13">Assert</name><op:operator pos:line="119" pos:column="19">.</op:operator><name pos:line="119" pos:column="20">NotNull</name></name><argument_list pos:line="119" pos:column="27">(<argument><expr><name pos:line="119" pos:column="28">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="120" pos:column="13">Assert</name><op:operator pos:line="120" pos:column="19">.</op:operator><name pos:line="120" pos:column="20">Equal</name></name><argument_list pos:line="120" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="120" pos:column="26">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="29">model</name><op:operator pos:line="120" pos:column="34">.</op:operator><name pos:line="120" pos:column="35">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="121" pos:column="13">Assert</name><op:operator pos:line="121" pos:column="19">.</op:operator><name pos:line="121" pos:column="20">NotNull</name></name><argument_list pos:line="121" pos:column="27">(<argument><expr><name><name pos:line="121" pos:column="28">itemModel</name><op:operator pos:line="121" pos:column="37">.</op:operator><name pos:line="121" pos:column="38">Constraints</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="122" pos:column="13">Assert</name><op:operator pos:line="122" pos:column="19">.</op:operator><name pos:line="122" pos:column="20">True</name></name><argument_list pos:line="122" pos:column="24">(<argument><expr><name><name pos:line="122" pos:column="25">itemModel</name><op:operator pos:line="122" pos:column="34">.</op:operator><name pos:line="122" pos:column="35">IsMatch</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="123" pos:column="13">Assert</name><op:operator pos:line="123" pos:column="19">.</op:operator><name pos:line="123" pos:column="20">Equal</name></name><argument_list pos:line="123" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="123" pos:column="26">"Test"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="123" pos:column="34">(</op:operator><op:operator pos:line="123" pos:column="35">(</op:operator><name><name pos:line="123" pos:column="36">List</name><argument_list pos:line="123" pos:column="40">&lt;<argument><name pos:line="123" pos:column="41">RouteConstraintModel</name></argument>&gt;</argument_list></name><op:operator pos:line="123" pos:column="62">)</op:operator><name><name pos:line="123" pos:column="63">itemModel</name><op:operator pos:line="123" pos:column="72">.</op:operator><name pos:line="123" pos:column="73">Constraints</name></name><op:operator pos:line="123" pos:column="84">)</op:operator><index pos:line="123" pos:column="85">[<expr><lit:literal type="number" pos:line="123" pos:column="86">0</lit:literal></expr>]</index><op:operator pos:line="123" pos:column="88">.</op:operator><name pos:line="123" pos:column="89">ParameterName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="124" pos:column="13">Assert</name><op:operator pos:line="124" pos:column="19">.</op:operator><name pos:line="124" pos:column="20">Equal</name></name><argument_list pos:line="124" pos:column="25">(<argument><expr><lit:literal type="boolean" pos:line="124" pos:column="26">true</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="124" pos:column="32">(</op:operator><op:operator pos:line="124" pos:column="33">(</op:operator><name><name pos:line="124" pos:column="34">List</name><argument_list pos:line="124" pos:column="38">&lt;<argument><name pos:line="124" pos:column="39">RouteConstraintModel</name></argument>&gt;</argument_list></name><op:operator pos:line="124" pos:column="60">)</op:operator><name><name pos:line="124" pos:column="61">itemModel</name><op:operator pos:line="124" pos:column="70">.</op:operator><name pos:line="124" pos:column="71">Constraints</name></name><op:operator pos:line="124" pos:column="82">)</op:operator><index pos:line="124" pos:column="83">[<expr><lit:literal type="number" pos:line="124" pos:column="84">0</lit:literal></expr>]</index><op:operator pos:line="124" pos:column="86">.</op:operator><name pos:line="124" pos:column="87">IsMatch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="125" pos:column="13">Assert</name><op:operator pos:line="125" pos:column="19">.</op:operator><name pos:line="125" pos:column="20">NotNull</name></name><argument_list pos:line="125" pos:column="27">(<argument><expr><name><name pos:line="125" pos:column="28">itemModel</name><op:operator pos:line="125" pos:column="37">.</op:operator><name pos:line="125" pos:column="38">DataTokens</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="126" pos:column="13">Assert</name><op:operator pos:line="126" pos:column="19">.</op:operator><name pos:line="126" pos:column="20">Equal</name></name><argument_list pos:line="126" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="126" pos:column="26">"Tokens"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="36">itemModel</name><op:operator pos:line="126" pos:column="45">.</op:operator><name pos:line="126" pos:column="46">DataTokens</name><index pos:line="126" pos:column="56">[<expr><lit:literal type="string" pos:line="126" pos:column="57">"Data"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="127" pos:column="13">Assert</name><op:operator pos:line="127" pos:column="19">.</op:operator><name pos:line="127" pos:column="20">NotNull</name></name><argument_list pos:line="127" pos:column="27">(<argument><expr><name><name pos:line="127" pos:column="28">itemModel</name><op:operator pos:line="127" pos:column="37">.</op:operator><name pos:line="127" pos:column="38">RouteData</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="128" pos:column="13">Assert</name><op:operator pos:line="128" pos:column="19">.</op:operator><name pos:line="128" pos:column="20">Equal</name></name><argument_list pos:line="128" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="128" pos:column="26">"Other"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="128" pos:column="35">(</op:operator><op:operator pos:line="128" pos:column="36">(</op:operator><name><name pos:line="128" pos:column="37">List</name><argument_list pos:line="128" pos:column="41">&lt;<argument><name pos:line="128" pos:column="42">RouteDataItemModel</name></argument>&gt;</argument_list></name><op:operator pos:line="128" pos:column="61">)</op:operator><name><name pos:line="128" pos:column="62">itemModel</name><op:operator pos:line="128" pos:column="71">.</op:operator><name pos:line="128" pos:column="72">RouteData</name></name><op:operator pos:line="128" pos:column="81">)</op:operator><index pos:line="128" pos:column="82">[<expr><lit:literal type="number" pos:line="128" pos:column="83">0</lit:literal></expr>]</index><op:operator pos:line="128" pos:column="85">.</op:operator><name pos:line="128" pos:column="86">DefaultValue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
        
        <function><type><attribute pos:line="131" pos:column="9">[<expr><name pos:line="131" pos:column="10">Theory</name></expr><op:operator pos:line="131" pos:column="16">,</op:operator> <expr><name pos:line="131" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="132" pos:column="9">public</specifier> <name pos:line="132" pos:column="16">void</name></type> <name pos:line="132" pos:column="21">ReturnAspNetProxiedRouteInstances</name><parameter_list pos:line="132" pos:column="54">(<param><decl><type><name pos:line="132" pos:column="55">Routes</name></type> <name pos:line="132" pos:column="62">tab</name></decl></param>, <param><decl><type><name pos:line="132" pos:column="67">ITabContext</name></type> <name pos:line="132" pos:column="79">context</name></decl></param>, <param><decl><type><name pos:line="132" pos:column="88">RoutesInspector</name></type> <name pos:line="132" pos:column="104">routeInspector</name></decl></param>, <param><decl><type><name pos:line="132" pos:column="120">IInspectorContext</name></type> <name pos:line="132" pos:column="138">routeInspectorContext</name></decl></param>, <param><decl><type><name><name pos:line="132" pos:column="161">System</name><op:operator pos:line="132" pos:column="167">.</op:operator><name pos:line="132" pos:column="168">Web</name><op:operator pos:line="132" pos:column="171">.</op:operator><name pos:line="132" pos:column="172">Routing</name><op:operator pos:line="132" pos:column="179">.</op:operator><name pos:line="132" pos:column="180">IRouteHandler</name></name></type> <name pos:line="132" pos:column="194">routeHandler</name></decl></param>)</parameter_list>
        <block pos:line="133" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="134" pos:column="13">System</name><op:operator pos:line="134" pos:column="19">.</op:operator><name pos:line="134" pos:column="20">Web</name><op:operator pos:line="134" pos:column="23">.</op:operator><name pos:line="134" pos:column="24">Routing</name><op:operator pos:line="134" pos:column="31">.</op:operator><name pos:line="134" pos:column="32">RouteTable</name><op:operator pos:line="134" pos:column="42">.</op:operator><name pos:line="134" pos:column="43">Routes</name><op:operator pos:line="134" pos:column="49">.</op:operator><name pos:line="134" pos:column="50">Clear</name></name><argument_list pos:line="134" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="135" pos:column="13">System</name><op:operator pos:line="135" pos:column="19">.</op:operator><name pos:line="135" pos:column="20">Web</name><op:operator pos:line="135" pos:column="23">.</op:operator><name pos:line="135" pos:column="24">Routing</name><op:operator pos:line="135" pos:column="31">.</op:operator><name pos:line="135" pos:column="32">RouteTable</name><op:operator pos:line="135" pos:column="42">.</op:operator><name pos:line="135" pos:column="43">Routes</name><op:operator pos:line="135" pos:column="49">.</op:operator><name pos:line="135" pos:column="50">Add</name></name><argument_list pos:line="135" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="135" pos:column="54">"Test"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="135" pos:column="62">new</op:operator> <call><name><name pos:line="135" pos:column="66">System</name><op:operator pos:line="135" pos:column="72">.</op:operator><name pos:line="135" pos:column="73">Web</name><op:operator pos:line="135" pos:column="76">.</op:operator><name pos:line="135" pos:column="77">Routing</name><op:operator pos:line="135" pos:column="84">.</op:operator><name pos:line="135" pos:column="85">Route</name></name><argument_list pos:line="135" pos:column="90">(<argument><expr><lit:literal type="string" pos:line="135" pos:column="91">"Test"</lit:literal></expr></argument>, <argument><expr><name pos:line="135" pos:column="99">routeHandler</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="136" pos:column="13">System</name><op:operator pos:line="136" pos:column="19">.</op:operator><name pos:line="136" pos:column="20">Web</name><op:operator pos:line="136" pos:column="23">.</op:operator><name pos:line="136" pos:column="24">Routing</name><op:operator pos:line="136" pos:column="31">.</op:operator><name pos:line="136" pos:column="32">RouteTable</name><op:operator pos:line="136" pos:column="42">.</op:operator><name pos:line="136" pos:column="43">Routes</name><op:operator pos:line="136" pos:column="49">.</op:operator><name pos:line="136" pos:column="50">Add</name></name><argument_list pos:line="136" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="136" pos:column="54">"BaseTyped"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="136" pos:column="67">new</op:operator> <call><name><name pos:line="136" pos:column="71">RoutesInspectorShould</name><op:operator pos:line="136" pos:column="92">.</op:operator><name pos:line="136" pos:column="93">NewRouteBase</name></name><argument_list pos:line="136" pos:column="105">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="137" pos:column="13">System</name><op:operator pos:line="137" pos:column="19">.</op:operator><name pos:line="137" pos:column="20">Web</name><op:operator pos:line="137" pos:column="23">.</op:operator><name pos:line="137" pos:column="24">Routing</name><op:operator pos:line="137" pos:column="31">.</op:operator><name pos:line="137" pos:column="32">RouteTable</name><op:operator pos:line="137" pos:column="42">.</op:operator><name pos:line="137" pos:column="43">Routes</name><op:operator pos:line="137" pos:column="49">.</op:operator><name pos:line="137" pos:column="50">Add</name></name><argument_list pos:line="137" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="137" pos:column="54">"BaseTestTyped"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="137" pos:column="71">new</op:operator> <call><name><name pos:line="137" pos:column="75">RoutesInspectorShould</name><op:operator pos:line="137" pos:column="96">.</op:operator><name pos:line="137" pos:column="97">NewConstructorRouteBase</name></name><argument_list pos:line="137" pos:column="120">(<argument><expr><lit:literal type="string" pos:line="137" pos:column="121">"Name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="138" pos:column="13">System</name><op:operator pos:line="138" pos:column="19">.</op:operator><name pos:line="138" pos:column="20">Web</name><op:operator pos:line="138" pos:column="23">.</op:operator><name pos:line="138" pos:column="24">Routing</name><op:operator pos:line="138" pos:column="31">.</op:operator><name pos:line="138" pos:column="32">RouteTable</name><op:operator pos:line="138" pos:column="42">.</op:operator><name pos:line="138" pos:column="43">Routes</name><op:operator pos:line="138" pos:column="49">.</op:operator><name pos:line="138" pos:column="50">Add</name></name><argument_list pos:line="138" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="138" pos:column="54">"SubTyped"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="138" pos:column="66">new</op:operator> <call><name><name pos:line="138" pos:column="70">RoutesInspectorShould</name><op:operator pos:line="138" pos:column="91">.</op:operator><name pos:line="138" pos:column="92">NewRoute</name></name><argument_list pos:line="138" pos:column="100">(<argument><expr><lit:literal type="string" pos:line="138" pos:column="101">"test"</lit:literal></expr></argument>, <argument><expr><name pos:line="138" pos:column="109">routeHandler</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="139" pos:column="13">System</name><op:operator pos:line="139" pos:column="19">.</op:operator><name pos:line="139" pos:column="20">Web</name><op:operator pos:line="139" pos:column="23">.</op:operator><name pos:line="139" pos:column="24">Routing</name><op:operator pos:line="139" pos:column="31">.</op:operator><name pos:line="139" pos:column="32">RouteTable</name><op:operator pos:line="139" pos:column="42">.</op:operator><name pos:line="139" pos:column="43">Routes</name><op:operator pos:line="139" pos:column="49">.</op:operator><name pos:line="139" pos:column="50">Add</name></name><argument_list pos:line="139" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="139" pos:column="54">"SubTestTyped"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="139" pos:column="70">new</op:operator> <call><name><name pos:line="139" pos:column="74">RoutesInspectorShould</name><op:operator pos:line="139" pos:column="95">.</op:operator><name pos:line="139" pos:column="96">NewConstructorRoute</name></name><argument_list pos:line="139" pos:column="115">(<argument><expr><lit:literal type="string" pos:line="139" pos:column="116">"test"</lit:literal></expr></argument>, <argument><expr><name pos:line="139" pos:column="124">routeHandler</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="139" pos:column="138">"Name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="140" pos:column="13">System</name><op:operator pos:line="140" pos:column="19">.</op:operator><name pos:line="140" pos:column="20">Web</name><op:operator pos:line="140" pos:column="23">.</op:operator><name pos:line="140" pos:column="24">Routing</name><op:operator pos:line="140" pos:column="31">.</op:operator><name pos:line="140" pos:column="32">RouteTable</name><op:operator pos:line="140" pos:column="42">.</op:operator><name pos:line="140" pos:column="43">Routes</name><op:operator pos:line="140" pos:column="49">.</op:operator><name pos:line="140" pos:column="50">Ignore</name></name><argument_list pos:line="140" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="140" pos:column="57">"{resource}.axd/{*pathInfo}"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="140" pos:column="87">new</op:operator> <block pos:line="140" pos:column="91">{ <expr><name pos:line="140" pos:column="93">resource</name> <op:operator pos:line="140" pos:column="102">=</op:operator> <lit:literal type="string" pos:line="140" pos:column="104">"Test"</lit:literal></expr><op:operator pos:line="140" pos:column="110">,</op:operator> <expr><name pos:line="140" pos:column="112">pathInfo</name> <op:operator pos:line="140" pos:column="121">=</op:operator> <lit:literal type="string" pos:line="140" pos:column="123">"[0-9]"</lit:literal></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="142" pos:column="13">routeInspectorContext</name><op:operator pos:line="142" pos:column="34">.</op:operator><name pos:line="142" pos:column="35">Setup</name></name><argument_list pos:line="142" pos:column="40">(<argument><expr><lambda><name pos:line="142" pos:column="41">x</name> <op:operator pos:line="142" pos:column="43">=&gt;</op:operator> <name><name pos:line="142" pos:column="46">x</name><op:operator pos:line="142" pos:column="47">.</op:operator><name pos:line="142" pos:column="48">ProxyFactory</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="142" pos:column="61">.</op:operator><call><name pos:line="142" pos:column="62">Returns</name><argument_list pos:line="142" pos:column="69">(<argument><expr><op:operator pos:line="142" pos:column="70">new</op:operator> <call><name pos:line="142" pos:column="74">CastleDynamicProxyFactory</name><argument_list pos:line="142" pos:column="99">(<argument><expr><name><name pos:line="142" pos:column="100">routeInspectorContext</name><op:operator pos:line="142" pos:column="121">.</op:operator><name pos:line="142" pos:column="122">Logger</name></name></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="130">routeInspectorContext</name><op:operator pos:line="142" pos:column="151">.</op:operator><name pos:line="142" pos:column="152">MessageBroker</name></name></expr></argument>, <argument><expr><lambda><parameter_list pos:line="142" pos:column="167">()</parameter_list> <op:operator pos:line="142" pos:column="170">=&gt;</op:operator> <op:operator pos:line="142" pos:column="173">new</op:operator> <call><name pos:line="142" pos:column="177">ExecutionTimer</name><argument_list pos:line="142" pos:column="191">(<argument><expr><op:operator pos:line="142" pos:column="192">new</op:operator> <call><name pos:line="142" pos:column="196">Stopwatch</name><argument_list pos:line="142" pos:column="205">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><lambda><parameter_list pos:line="142" pos:column="210">()</parameter_list> <op:operator pos:line="142" pos:column="213">=&gt;</op:operator> <op:operator pos:line="142" pos:column="216">new</op:operator> <call><name pos:line="142" pos:column="220">RuntimePolicy</name><argument_list pos:line="142" pos:column="233">()</argument_list></call></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="143" pos:column="13">routeInspector</name><op:operator pos:line="143" pos:column="27">.</op:operator><name pos:line="143" pos:column="28">Setup</name></name><argument_list pos:line="143" pos:column="33">(<argument><expr><name pos:line="143" pos:column="34">routeInspectorContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="145" pos:column="13">var</name></type> <name pos:line="145" pos:column="17">model</name> <init pos:line="145" pos:column="23">= <expr><call><name><name pos:line="145" pos:column="25">tab</name><op:operator pos:line="145" pos:column="28">.</op:operator><name pos:line="145" pos:column="29">GetData</name></name><argument_list pos:line="145" pos:column="36">(<argument><expr><name pos:line="145" pos:column="37">context</name></expr></argument>)</argument_list></call> <op:operator pos:line="145" pos:column="46">as</op:operator> <name><name pos:line="145" pos:column="49">List</name><argument_list pos:line="145" pos:column="53">&lt;<argument><name pos:line="145" pos:column="54">RouteModel</name></argument>&gt;</argument_list></name></expr></init></decl>;</decl_stmt>
             
            <expr_stmt><expr><call><name><name pos:line="147" pos:column="13">Assert</name><op:operator pos:line="147" pos:column="19">.</op:operator><name pos:line="147" pos:column="20">NotNull</name></name><argument_list pos:line="147" pos:column="27">(<argument><expr><name pos:line="147" pos:column="28">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="148" pos:column="13">Assert</name><op:operator pos:line="148" pos:column="19">.</op:operator><name pos:line="148" pos:column="20">Equal</name></name><argument_list pos:line="148" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="148" pos:column="26">6</lit:literal></expr></argument>, <argument><expr><name><name pos:line="148" pos:column="29">model</name><op:operator pos:line="148" pos:column="34">.</op:operator><name pos:line="148" pos:column="35">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
