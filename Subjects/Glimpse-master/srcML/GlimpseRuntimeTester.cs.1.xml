<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Core\Tester\GlimpseRuntimeTester.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Framework</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Test</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Core</name><op:operator pos:line="5" pos:column="24">.</op:operator><name pos:line="5" pos:column="25">Extensions</name></name>;</using>
<using pos:line="6" pos:column="1">using <name pos:line="6" pos:column="7">Moq</name>;</using>
<using pos:line="7" pos:column="1">using <name pos:line="7" pos:column="7">System</name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Glimpse</name><op:operator pos:line="9" pos:column="18">.</op:operator><name pos:line="9" pos:column="19">Test</name><op:operator pos:line="9" pos:column="23">.</op:operator><name pos:line="9" pos:column="24">Core</name><op:operator pos:line="9" pos:column="28">.</op:operator><name pos:line="9" pos:column="29">Tester</name></name>
<block pos:line="10" pos:column="1">{
    <class><specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">GlimpseRuntimeTester</name> <super pos:line="11" pos:column="39">: <name pos:line="11" pos:column="41">GlimpseRuntime</name></super>
    <block pos:line="12" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">public</specifier> <name><name pos:line="13" pos:column="16">Mock</name><argument_list pos:line="13" pos:column="20">&lt;<argument><name pos:line="13" pos:column="21">IFrameworkProvider</name></argument>&gt;</argument_list></name></type> <name pos:line="13" pos:column="41">FrameworkProviderMock</name> <block pos:line="13" pos:column="63">{ <function_decl><name pos:line="13" pos:column="65">get</name>;</function_decl> <function_decl><name pos:line="13" pos:column="70">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">public</specifier> <name><name pos:line="14" pos:column="16">Mock</name><argument_list pos:line="14" pos:column="20">&lt;<argument><name pos:line="14" pos:column="21">ResourceEndpointConfiguration</name></argument>&gt;</argument_list></name></type> <name pos:line="14" pos:column="52">EndpointConfigMock</name> <block pos:line="14" pos:column="71">{ <function_decl><name pos:line="14" pos:column="73">get</name>;</function_decl> <function_decl><name pos:line="14" pos:column="78">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">public</specifier> <name><name pos:line="15" pos:column="16">Mock</name><argument_list pos:line="15" pos:column="20">&lt;<argument><name pos:line="15" pos:column="21">IDataStore</name></argument>&gt;</argument_list></name></type> <name pos:line="15" pos:column="33">HttpRequestStoreMock</name> <block pos:line="15" pos:column="54">{ <function_decl><name pos:line="15" pos:column="56">get</name>;</function_decl> <function_decl><name pos:line="15" pos:column="61">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">public</specifier> <name><name pos:line="16" pos:column="16">Mock</name><argument_list pos:line="16" pos:column="20">&lt;<argument><name pos:line="16" pos:column="21">ITab</name></argument>&gt;</argument_list></name></type> <name pos:line="16" pos:column="27">TabMock</name> <block pos:line="16" pos:column="35">{ <function_decl><name pos:line="16" pos:column="37">get</name>;</function_decl> <function_decl><name pos:line="16" pos:column="42">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">public</specifier> <name><name pos:line="17" pos:column="16">Mock</name><argument_list pos:line="17" pos:column="20">&lt;<argument><name pos:line="17" pos:column="21">IInspector</name></argument>&gt;</argument_list></name></type> <name pos:line="17" pos:column="33">InspectorMock</name> <block pos:line="17" pos:column="47">{ <function_decl><name pos:line="17" pos:column="49">get</name>;</function_decl> <function_decl><name pos:line="17" pos:column="54">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">public</specifier> <name><name pos:line="18" pos:column="16">Mock</name><argument_list pos:line="18" pos:column="20">&lt;<argument><name pos:line="18" pos:column="21">ISerializer</name></argument>&gt;</argument_list></name></type> <name pos:line="18" pos:column="34">SerializerMock</name> <block pos:line="18" pos:column="49">{ <function_decl><name pos:line="18" pos:column="51">get</name>;</function_decl> <function_decl><name pos:line="18" pos:column="56">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">public</specifier> <name><name pos:line="19" pos:column="16">Mock</name><argument_list pos:line="19" pos:column="20">&lt;<argument><name pos:line="19" pos:column="21">IPersistenceStore</name></argument>&gt;</argument_list></name></type> <name pos:line="19" pos:column="40">PersistenceStoreMock</name> <block pos:line="19" pos:column="61">{ <function_decl><name pos:line="19" pos:column="63">get</name>;</function_decl> <function_decl><name pos:line="19" pos:column="68">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">public</specifier> <name><name pos:line="20" pos:column="16">Mock</name><argument_list pos:line="20" pos:column="20">&lt;<argument><name pos:line="20" pos:column="21">ILogger</name></argument>&gt;</argument_list></name></type> <name pos:line="20" pos:column="30">LoggerMock</name> <block pos:line="20" pos:column="41">{ <function_decl><name pos:line="20" pos:column="43">get</name>;</function_decl> <function_decl><name pos:line="20" pos:column="48">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="21" pos:column="9">public</specifier> <name><name pos:line="21" pos:column="16">Mock</name><argument_list pos:line="21" pos:column="20">&lt;<argument><name pos:line="21" pos:column="21">IRequestMetadata</name></argument>&gt;</argument_list></name></type> <name pos:line="21" pos:column="39">RequestMetadataMock</name> <block pos:line="21" pos:column="59">{ <function_decl><name pos:line="21" pos:column="61">get</name>;</function_decl> <function_decl><name pos:line="21" pos:column="66">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="22" pos:column="9">public</specifier> <name><name pos:line="22" pos:column="16">Mock</name><argument_list pos:line="22" pos:column="20">&lt;<argument><name pos:line="22" pos:column="21">IResource</name></argument>&gt;</argument_list></name></type> <name pos:line="22" pos:column="32">ResourceMock</name> <block pos:line="22" pos:column="45">{ <function_decl><name pos:line="22" pos:column="47">get</name>;</function_decl> <function_decl><name pos:line="22" pos:column="52">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="23" pos:column="9">public</specifier> <name><name pos:line="23" pos:column="16">Mock</name><argument_list pos:line="23" pos:column="20">&lt;<argument><name pos:line="23" pos:column="21">IResourceResult</name></argument>&gt;</argument_list></name></type> <name pos:line="23" pos:column="38">ResourceResultMock</name> <block pos:line="23" pos:column="57">{ <function_decl><name pos:line="23" pos:column="59">get</name>;</function_decl> <function_decl><name pos:line="23" pos:column="64">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="24" pos:column="9">public</specifier> <name><name pos:line="24" pos:column="16">Mock</name><argument_list pos:line="24" pos:column="20">&lt;<argument><name pos:line="24" pos:column="21">IRuntimePolicy</name></argument>&gt;</argument_list></name></type> <name pos:line="24" pos:column="37">RuntimePolicyMock</name> <block pos:line="24" pos:column="55">{ <function_decl><name pos:line="24" pos:column="57">get</name>;</function_decl> <function_decl><name pos:line="24" pos:column="62">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">public</specifier> <specifier pos:line="25" pos:column="16">new</specifier> <name pos:line="25" pos:column="20">GlimpseConfiguration</name></type> <name pos:line="25" pos:column="41">Configuration</name> <block pos:line="25" pos:column="55">{ <function_decl><name pos:line="25" pos:column="57">get</name>;</function_decl> <function_decl><name pos:line="25" pos:column="62">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="26" pos:column="9">public</specifier> <name><name pos:line="26" pos:column="16">Mock</name><argument_list pos:line="26" pos:column="20">&lt;<argument><name pos:line="26" pos:column="21">IStaticClientScript</name></argument>&gt;</argument_list></name></type> <name pos:line="26" pos:column="42">StaticScriptMock</name> <block pos:line="26" pos:column="59">{ <function_decl><name pos:line="26" pos:column="61">get</name>;</function_decl> <function_decl><name pos:line="26" pos:column="66">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="27" pos:column="9">public</specifier> <name><name pos:line="27" pos:column="16">Mock</name><argument_list pos:line="27" pos:column="20">&lt;<argument><name pos:line="27" pos:column="21">IDynamicClientScript</name></argument>&gt;</argument_list></name></type> <name pos:line="27" pos:column="43">DynamicScriptMock</name> <block pos:line="27" pos:column="61">{ <function_decl><name pos:line="27" pos:column="63">get</name>;</function_decl> <function_decl><name pos:line="27" pos:column="68">set</name>;</function_decl> }</block></decl></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="28" pos:column="9">public</specifier> <name><name pos:line="28" pos:column="16">Mock</name><argument_list pos:line="28" pos:column="20">&lt;<argument><name pos:line="28" pos:column="21">IHtmlEncoder</name></argument>&gt;</argument_list></name></type> <name pos:line="28" pos:column="35">EncoderMock</name> <block pos:line="28" pos:column="47">{ <function_decl><name pos:line="28" pos:column="49">get</name>;</function_decl> <function_decl><name pos:line="28" pos:column="54">set</name>;</function_decl> }</block></decl></decl_stmt>

        <constructor><specifier pos:line="30" pos:column="9">private</specifier> <name pos:line="30" pos:column="17">GlimpseRuntimeTester</name><parameter_list pos:line="30" pos:column="37">(<param><decl><type><name pos:line="30" pos:column="38">GlimpseConfiguration</name></type> <name pos:line="30" pos:column="59">configuration</name></decl></param>, <param><decl><type><name><name pos:line="30" pos:column="74">Mock</name><argument_list pos:line="30" pos:column="78">&lt;<argument><name pos:line="30" pos:column="79">IFrameworkProvider</name></argument>&gt;</argument_list></name></type> <name pos:line="30" pos:column="99">frameworkProviderMock</name></decl></param>, <param><decl><type><name><name pos:line="30" pos:column="122">Mock</name><argument_list pos:line="30" pos:column="126">&lt;<argument><name pos:line="30" pos:column="127">ResourceEndpointConfiguration</name></argument>&gt;</argument_list></name></type> <name pos:line="30" pos:column="158">endpointConfigMock</name></decl></param>)</parameter_list> <member_list pos:line="30" pos:column="178">: <call><name pos:line="30" pos:column="180">base</name><argument_list pos:line="30" pos:column="184">(<argument><expr><name pos:line="30" pos:column="185">configuration</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="31" pos:column="9">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">FrameworkProviderMock</name> <op:operator pos:line="32" pos:column="35">=</op:operator> <name pos:line="32" pos:column="37">frameworkProviderMock</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="33" pos:column="13">EndpointConfigMock</name> <op:operator pos:line="33" pos:column="32">=</op:operator> <name pos:line="33" pos:column="34">endpointConfigMock</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="34" pos:column="13">HttpRequestStoreMock</name> <op:operator pos:line="34" pos:column="34">=</op:operator> <op:operator pos:line="34" pos:column="36">new</op:operator> <call><name><name pos:line="34" pos:column="40">Mock</name><argument_list pos:line="34" pos:column="44">&lt;<argument><name pos:line="34" pos:column="45">IDataStore</name></argument>&gt;</argument_list></name><argument_list pos:line="34" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">TabMock</name> <op:operator pos:line="35" pos:column="21">=</op:operator> <op:operator pos:line="35" pos:column="23">new</op:operator> <call><name><name pos:line="35" pos:column="27">Mock</name><argument_list pos:line="35" pos:column="31">&lt;<argument><name pos:line="35" pos:column="32">ITab</name></argument>&gt;</argument_list></name><argument_list pos:line="35" pos:column="37">()</argument_list></call><op:operator pos:line="35" pos:column="39">.</op:operator><call><name pos:line="35" pos:column="40">Setup</name><argument_list pos:line="35" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="36" pos:column="13">InspectorMock</name> <op:operator pos:line="36" pos:column="27">=</op:operator> <op:operator pos:line="36" pos:column="29">new</op:operator> <call><name><name pos:line="36" pos:column="33">Mock</name><argument_list pos:line="36" pos:column="37">&lt;<argument><name pos:line="36" pos:column="38">IInspector</name></argument>&gt;</argument_list></name><argument_list pos:line="36" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="37" pos:column="13">SerializerMock</name> <op:operator pos:line="37" pos:column="28">=</op:operator> <op:operator pos:line="37" pos:column="30">new</op:operator> <call><name><name pos:line="37" pos:column="34">Mock</name><argument_list pos:line="37" pos:column="38">&lt;<argument><name pos:line="37" pos:column="39">ISerializer</name></argument>&gt;</argument_list></name><argument_list pos:line="37" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="38" pos:column="13">PersistenceStoreMock</name> <op:operator pos:line="38" pos:column="34">=</op:operator> <op:operator pos:line="38" pos:column="36">new</op:operator> <call><name><name pos:line="38" pos:column="40">Mock</name><argument_list pos:line="38" pos:column="44">&lt;<argument><name pos:line="38" pos:column="45">IPersistenceStore</name></argument>&gt;</argument_list></name><argument_list pos:line="38" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="39" pos:column="13">LoggerMock</name> <op:operator pos:line="39" pos:column="24">=</op:operator> <op:operator pos:line="39" pos:column="26">new</op:operator> <call><name><name pos:line="39" pos:column="30">Mock</name><argument_list pos:line="39" pos:column="34">&lt;<argument><name pos:line="39" pos:column="35">ILogger</name></argument>&gt;</argument_list></name><argument_list pos:line="39" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="40" pos:column="13">ResourceMock</name> <op:operator pos:line="40" pos:column="26">=</op:operator> <op:operator pos:line="40" pos:column="28">new</op:operator> <call><name><name pos:line="40" pos:column="32">Mock</name><argument_list pos:line="40" pos:column="36">&lt;<argument><name pos:line="40" pos:column="37">IResource</name></argument>&gt;</argument_list></name><argument_list pos:line="40" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="41" pos:column="13">ResourceResultMock</name> <op:operator pos:line="41" pos:column="32">=</op:operator> <op:operator pos:line="41" pos:column="34">new</op:operator> <call><name><name pos:line="41" pos:column="38">Mock</name><argument_list pos:line="41" pos:column="42">&lt;<argument><name pos:line="41" pos:column="43">IResourceResult</name></argument>&gt;</argument_list></name><argument_list pos:line="41" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="42" pos:column="13">RuntimePolicyMock</name> <op:operator pos:line="42" pos:column="31">=</op:operator> <op:operator pos:line="42" pos:column="33">new</op:operator> <call><name><name pos:line="42" pos:column="37">Mock</name><argument_list pos:line="42" pos:column="41">&lt;<argument><name pos:line="42" pos:column="42">IRuntimePolicy</name></argument>&gt;</argument_list></name><argument_list pos:line="42" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="43" pos:column="13">RuntimePolicyMock</name><op:operator pos:line="43" pos:column="30">.</op:operator><name pos:line="43" pos:column="31">Setup</name></name><argument_list pos:line="43" pos:column="36">(<argument><expr><lambda><name pos:line="43" pos:column="37">v</name> <op:operator pos:line="43" pos:column="39">=&gt;</op:operator> <call><name><name pos:line="43" pos:column="42">v</name><op:operator pos:line="43" pos:column="43">.</op:operator><name pos:line="43" pos:column="44">Execute</name></name><argument_list pos:line="43" pos:column="51">(<argument><expr><call><name><name pos:line="43" pos:column="52">It</name><op:operator pos:line="43" pos:column="54">.</op:operator><name><name pos:line="43" pos:column="55">IsAny</name><argument_list pos:line="43" pos:column="60">&lt;<argument><name pos:line="43" pos:column="61">IRuntimePolicyContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="43" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="43" pos:column="87">.</op:operator><call><name pos:line="43" pos:column="88">Returns</name><argument_list pos:line="43" pos:column="95">(<argument><expr><name><name pos:line="43" pos:column="96">RuntimePolicy</name><op:operator pos:line="43" pos:column="109">.</op:operator><name pos:line="43" pos:column="110">On</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="44" pos:column="13">RuntimePolicyMock</name><op:operator pos:line="44" pos:column="30">.</op:operator><name pos:line="44" pos:column="31">Setup</name></name><argument_list pos:line="44" pos:column="36">(<argument><expr><lambda><name pos:line="44" pos:column="37">v</name> <op:operator pos:line="44" pos:column="39">=&gt;</op:operator> <name><name pos:line="44" pos:column="42">v</name><op:operator pos:line="44" pos:column="43">.</op:operator><name pos:line="44" pos:column="44">ExecuteOn</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="44" pos:column="54">.</op:operator><call><name pos:line="44" pos:column="55">Returns</name><argument_list pos:line="44" pos:column="62">(<argument><expr><name><name pos:line="44" pos:column="63">RuntimeEvent</name><op:operator pos:line="44" pos:column="75">.</op:operator><name pos:line="44" pos:column="76">Initialize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="45" pos:column="13">RequestMetadataMock</name> <op:operator pos:line="45" pos:column="33">=</op:operator> <op:operator pos:line="45" pos:column="35">new</op:operator> <call><name><name pos:line="45" pos:column="39">Mock</name><argument_list pos:line="45" pos:column="43">&lt;<argument><name pos:line="45" pos:column="44">IRequestMetadata</name></argument>&gt;</argument_list></name><argument_list pos:line="45" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">RequestMetadataMock</name><op:operator pos:line="46" pos:column="32">.</op:operator><name pos:line="46" pos:column="33">Setup</name></name><argument_list pos:line="46" pos:column="38">(<argument><expr><lambda><name pos:line="46" pos:column="39">r</name> <op:operator pos:line="46" pos:column="41">=&gt;</op:operator> <name><name pos:line="46" pos:column="44">r</name><op:operator pos:line="46" pos:column="45">.</op:operator><name pos:line="46" pos:column="46">RequestHttpMethod</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="46" pos:column="64">.</op:operator><call><name pos:line="46" pos:column="65">Returns</name><argument_list pos:line="46" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="73">"GET"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="47" pos:column="13">RequestMetadataMock</name><op:operator pos:line="47" pos:column="32">.</op:operator><name pos:line="47" pos:column="33">Setup</name></name><argument_list pos:line="47" pos:column="38">(<argument><expr><lambda><name pos:line="47" pos:column="39">r</name> <op:operator pos:line="47" pos:column="41">=&gt;</op:operator> <name><name pos:line="47" pos:column="44">r</name><op:operator pos:line="47" pos:column="45">.</op:operator><name pos:line="47" pos:column="46">RequestIsAjax</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="47" pos:column="60">.</op:operator><call><name pos:line="47" pos:column="61">Returns</name><argument_list pos:line="47" pos:column="68">(<argument><expr><lit:literal type="boolean" pos:line="47" pos:column="69">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">RequestMetadataMock</name><op:operator pos:line="48" pos:column="32">.</op:operator><name pos:line="48" pos:column="33">Setup</name></name><argument_list pos:line="48" pos:column="38">(<argument><expr><lambda><name pos:line="48" pos:column="39">r</name> <op:operator pos:line="48" pos:column="41">=&gt;</op:operator> <name><name pos:line="48" pos:column="44">r</name><op:operator pos:line="48" pos:column="45">.</op:operator><name pos:line="48" pos:column="46">RequestUri</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="48" pos:column="57">.</op:operator><call><name pos:line="48" pos:column="58">Returns</name><argument_list pos:line="48" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="48" pos:column="66">"http://localhost"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="49" pos:column="13">RequestMetadataMock</name><op:operator pos:line="49" pos:column="32">.</op:operator><name pos:line="49" pos:column="33">Setup</name></name><argument_list pos:line="49" pos:column="38">(<argument><expr><lambda><name pos:line="49" pos:column="39">r</name> <op:operator pos:line="49" pos:column="41">=&gt;</op:operator> <name><name pos:line="49" pos:column="44">r</name><op:operator pos:line="49" pos:column="45">.</op:operator><name pos:line="49" pos:column="46">ResponseStatusCode</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="49" pos:column="65">.</op:operator><call><name pos:line="49" pos:column="66">Returns</name><argument_list pos:line="49" pos:column="73">(<argument><expr><lit:literal type="number" pos:line="49" pos:column="74">200</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="50" pos:column="13">RequestMetadataMock</name><op:operator pos:line="50" pos:column="32">.</op:operator><name pos:line="50" pos:column="33">Setup</name></name><argument_list pos:line="50" pos:column="38">(<argument><expr><lambda><name pos:line="50" pos:column="39">r</name> <op:operator pos:line="50" pos:column="41">=&gt;</op:operator> <name><name pos:line="50" pos:column="44">r</name><op:operator pos:line="50" pos:column="45">.</op:operator><name pos:line="50" pos:column="46">ResponseContentType</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="50" pos:column="66">.</op:operator><call><name pos:line="50" pos:column="67">Returns</name><argument_list pos:line="50" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="50" pos:column="75">@"text\html"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="51" pos:column="13">RequestMetadataMock</name><op:operator pos:line="51" pos:column="32">.</op:operator><name pos:line="51" pos:column="33">Setup</name></name><argument_list pos:line="51" pos:column="38">(<argument><expr><lambda><name pos:line="51" pos:column="39">r</name> <op:operator pos:line="51" pos:column="41">=&gt;</op:operator> <call><name><name pos:line="51" pos:column="44">r</name><op:operator pos:line="51" pos:column="45">.</op:operator><name pos:line="51" pos:column="46">GetCookie</name></name><argument_list pos:line="51" pos:column="55">(<argument><expr><name><name pos:line="51" pos:column="56">Constants</name><op:operator pos:line="51" pos:column="65">.</op:operator><name pos:line="51" pos:column="66">ClientIdCookieName</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="51" pos:column="86">.</op:operator><call><name pos:line="51" pos:column="87">Returns</name><argument_list pos:line="51" pos:column="94">(<argument><expr><lit:literal type="string" pos:line="51" pos:column="95">@"Some Client"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">RequestMetadataMock</name><op:operator pos:line="52" pos:column="32">.</op:operator><name pos:line="52" pos:column="33">Setup</name></name><argument_list pos:line="52" pos:column="38">(<argument><expr><lambda><name pos:line="52" pos:column="39">r</name> <op:operator pos:line="52" pos:column="41">=&gt;</op:operator> <call><name><name pos:line="52" pos:column="44">r</name><op:operator pos:line="52" pos:column="45">.</op:operator><name pos:line="52" pos:column="46">GetCookie</name></name><argument_list pos:line="52" pos:column="55">(<argument><expr><name><name pos:line="52" pos:column="56">Constants</name><op:operator pos:line="52" pos:column="65">.</op:operator><name pos:line="52" pos:column="66">UserAgentHeaderName</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="52" pos:column="87">.</op:operator><call><name pos:line="52" pos:column="88">Returns</name><argument_list pos:line="52" pos:column="95">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="96">@"FireFox"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="53" pos:column="13">RequestMetadataMock</name><op:operator pos:line="53" pos:column="32">.</op:operator><name pos:line="53" pos:column="33">Setup</name></name><argument_list pos:line="53" pos:column="38">(<argument><expr><lambda><name pos:line="53" pos:column="39">r</name> <op:operator pos:line="53" pos:column="41">=&gt;</op:operator> <call><name><name pos:line="53" pos:column="44">r</name><op:operator pos:line="53" pos:column="45">.</op:operator><name pos:line="53" pos:column="46">GetHttpHeader</name></name><argument_list pos:line="53" pos:column="59">(<argument><expr><name><name pos:line="53" pos:column="60">Constants</name><op:operator pos:line="53" pos:column="69">.</op:operator><name pos:line="53" pos:column="70">HttpRequestHeader</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="53" pos:column="89">.</op:operator><call><name pos:line="53" pos:column="90">Returns</name><argument_list pos:line="53" pos:column="97">(<argument><expr><call><name><name pos:line="53" pos:column="98">Guid</name><op:operator pos:line="53" pos:column="102">.</op:operator><name pos:line="53" pos:column="103">NewGuid</name></name><argument_list pos:line="53" pos:column="110">()</argument_list></call><op:operator pos:line="53" pos:column="112">.</op:operator><call><name pos:line="53" pos:column="113">ToString</name><argument_list pos:line="53" pos:column="121">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="54" pos:column="13">StaticScriptMock</name> <op:operator pos:line="54" pos:column="30">=</op:operator> <op:operator pos:line="54" pos:column="32">new</op:operator> <call><name><name pos:line="54" pos:column="36">Mock</name><argument_list pos:line="54" pos:column="40">&lt;<argument><name pos:line="54" pos:column="41">IStaticClientScript</name></argument>&gt;</argument_list></name><argument_list pos:line="54" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="55" pos:column="13">StaticScriptMock</name><op:operator pos:line="55" pos:column="29">.</op:operator><name pos:line="55" pos:column="30">Setup</name></name><argument_list pos:line="55" pos:column="35">(<argument><expr><lambda><name pos:line="55" pos:column="36">ss</name> <op:operator pos:line="55" pos:column="39">=&gt;</op:operator> <name><name pos:line="55" pos:column="42">ss</name><op:operator pos:line="55" pos:column="44">.</op:operator><name pos:line="55" pos:column="45">Order</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="55" pos:column="51">.</op:operator><call><name pos:line="55" pos:column="52">Returns</name><argument_list pos:line="55" pos:column="59">(<argument><expr><name><name pos:line="55" pos:column="60">ScriptOrder</name><op:operator pos:line="55" pos:column="71">.</op:operator><name pos:line="55" pos:column="72">ClientInterfaceScript</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="56" pos:column="13">StaticScriptMock</name><op:operator pos:line="56" pos:column="29">.</op:operator><name pos:line="56" pos:column="30">Setup</name></name><argument_list pos:line="56" pos:column="35">(<argument><expr><lambda><name pos:line="56" pos:column="36">ss</name> <op:operator pos:line="56" pos:column="39">=&gt;</op:operator> <call><name><name pos:line="56" pos:column="42">ss</name><op:operator pos:line="56" pos:column="44">.</op:operator><name pos:line="56" pos:column="45">GetUri</name></name><argument_list pos:line="56" pos:column="51">(<argument><expr><name pos:line="56" pos:column="52">Version</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="56" pos:column="61">.</op:operator><call><name pos:line="56" pos:column="62">Returns</name><argument_list pos:line="56" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="56" pos:column="70">"http://localhost/static"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="57" pos:column="13">DynamicScriptMock</name> <op:operator pos:line="57" pos:column="31">=</op:operator> <op:operator pos:line="57" pos:column="33">new</op:operator> <call><name><name pos:line="57" pos:column="37">Mock</name><argument_list pos:line="57" pos:column="41">&lt;<argument><name pos:line="57" pos:column="42">IDynamicClientScript</name></argument>&gt;</argument_list></name><argument_list pos:line="57" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="58" pos:column="13">DynamicScriptMock</name><op:operator pos:line="58" pos:column="30">.</op:operator><name pos:line="58" pos:column="31">Setup</name></name><argument_list pos:line="58" pos:column="36">(<argument><expr><lambda><name pos:line="58" pos:column="37">ds</name> <op:operator pos:line="58" pos:column="40">=&gt;</op:operator> <name><name pos:line="58" pos:column="43">ds</name><op:operator pos:line="58" pos:column="45">.</op:operator><name pos:line="58" pos:column="46">Order</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="58" pos:column="52">.</op:operator><call><name pos:line="58" pos:column="53">Returns</name><argument_list pos:line="58" pos:column="60">(<argument><expr><name><name pos:line="58" pos:column="61">ScriptOrder</name><op:operator pos:line="58" pos:column="72">.</op:operator><name pos:line="58" pos:column="73">RequestDataScript</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="59" pos:column="13">DynamicScriptMock</name><op:operator pos:line="59" pos:column="30">.</op:operator><name pos:line="59" pos:column="31">Setup</name></name><argument_list pos:line="59" pos:column="36">(<argument><expr><lambda><name pos:line="59" pos:column="37">ds</name> <op:operator pos:line="59" pos:column="40">=&gt;</op:operator> <call><name><name pos:line="59" pos:column="43">ds</name><op:operator pos:line="59" pos:column="45">.</op:operator><name pos:line="59" pos:column="46">GetResourceName</name></name><argument_list pos:line="59" pos:column="61">()</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="59" pos:column="64">.</op:operator><call><name pos:line="59" pos:column="65">Returns</name><argument_list pos:line="59" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="59" pos:column="73">"aResource"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="60" pos:column="13">EncoderMock</name> <op:operator pos:line="60" pos:column="25">=</op:operator> <op:operator pos:line="60" pos:column="27">new</op:operator> <call><name><name pos:line="60" pos:column="31">Mock</name><argument_list pos:line="60" pos:column="35">&lt;<argument><name pos:line="60" pos:column="36">IHtmlEncoder</name></argument>&gt;</argument_list></name><argument_list pos:line="60" pos:column="49">()</argument_list></call></expr>;</expr_stmt>


            <expr_stmt><expr><call><name><name pos:line="63" pos:column="13">FrameworkProviderMock</name><op:operator pos:line="63" pos:column="34">.</op:operator><name pos:line="63" pos:column="35">Setup</name></name><argument_list pos:line="63" pos:column="40">(<argument><expr><lambda><name pos:line="63" pos:column="41">fp</name> <op:operator pos:line="63" pos:column="44">=&gt;</op:operator> <name><name pos:line="63" pos:column="47">fp</name><op:operator pos:line="63" pos:column="49">.</op:operator><name pos:line="63" pos:column="50">RequestMetadata</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="63" pos:column="66">.</op:operator><call><name pos:line="63" pos:column="67">Returns</name><argument_list pos:line="63" pos:column="74">(<argument><expr><name><name pos:line="63" pos:column="75">RequestMetadataMock</name><op:operator pos:line="63" pos:column="94">.</op:operator><name pos:line="63" pos:column="95">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name><name pos:line="65" pos:column="13">configuration</name><op:operator pos:line="65" pos:column="26">.</op:operator><name pos:line="65" pos:column="27">Serializer</name></name> <op:operator pos:line="65" pos:column="38">=</op:operator> <name><name pos:line="65" pos:column="40">SerializerMock</name><op:operator pos:line="65" pos:column="54">.</op:operator><name pos:line="65" pos:column="55">Object</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="66" pos:column="13">configuration</name><op:operator pos:line="66" pos:column="26">.</op:operator><name pos:line="66" pos:column="27">PersistenceStore</name></name> <op:operator pos:line="66" pos:column="44">=</op:operator> <name><name pos:line="66" pos:column="46">PersistenceStoreMock</name><op:operator pos:line="66" pos:column="66">.</op:operator><name pos:line="66" pos:column="67">Object</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="67" pos:column="13">configuration</name><op:operator pos:line="67" pos:column="26">.</op:operator><name pos:line="67" pos:column="27">Logger</name></name> <op:operator pos:line="67" pos:column="34">=</op:operator> <name><name pos:line="67" pos:column="36">LoggerMock</name><op:operator pos:line="67" pos:column="46">.</op:operator><name pos:line="67" pos:column="47">Object</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="68" pos:column="13">configuration</name><op:operator pos:line="68" pos:column="26">.</op:operator><name pos:line="68" pos:column="27">DefaultRuntimePolicy</name></name> <op:operator pos:line="68" pos:column="48">=</op:operator> <name><name pos:line="68" pos:column="50">RuntimePolicy</name><op:operator pos:line="68" pos:column="63">.</op:operator><name pos:line="68" pos:column="64">On</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="69" pos:column="13">configuration</name><op:operator pos:line="69" pos:column="26">.</op:operator><name pos:line="69" pos:column="27">HtmlEncoder</name></name> <op:operator pos:line="69" pos:column="39">=</op:operator> <name><name pos:line="69" pos:column="41">EncoderMock</name><op:operator pos:line="69" pos:column="52">.</op:operator><name pos:line="69" pos:column="53">Object</name></name></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="71" pos:column="13">Configuration</name> <op:operator pos:line="71" pos:column="27">=</op:operator> <name pos:line="71" pos:column="29">configuration</name></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="74" pos:column="9">public</specifier> <specifier pos:line="74" pos:column="16">static</specifier> <name pos:line="74" pos:column="23">GlimpseRuntimeTester</name></type> <name pos:line="74" pos:column="44">Create</name><parameter_list pos:line="74" pos:column="50">()</parameter_list>
        <block pos:line="75" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="76" pos:column="13">var</name></type> <name pos:line="76" pos:column="17">frameworkProviderMock</name> <init pos:line="76" pos:column="39">= <expr><op:operator pos:line="76" pos:column="41">new</op:operator> <call><name><name pos:line="76" pos:column="45">Mock</name><argument_list pos:line="76" pos:column="49">&lt;<argument><name pos:line="76" pos:column="50">IFrameworkProvider</name></argument>&gt;</argument_list></name><argument_list pos:line="76" pos:column="69">()</argument_list></call><op:operator pos:line="76" pos:column="71">.</op:operator><call><name pos:line="76" pos:column="72">Setup</name><argument_list pos:line="76" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="77" pos:column="13">var</name></type> <name pos:line="77" pos:column="17">endpointConfigMock</name> <init pos:line="77" pos:column="36">= <expr><op:operator pos:line="77" pos:column="38">new</op:operator> <call><name><name pos:line="77" pos:column="42">Mock</name><argument_list pos:line="77" pos:column="46">&lt;<argument><name pos:line="77" pos:column="47">ResourceEndpointConfiguration</name></argument>&gt;</argument_list></name><argument_list pos:line="77" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="78" pos:column="13">var</name></type> <name pos:line="78" pos:column="17">loggerMock</name> <init pos:line="78" pos:column="28">= <expr><op:operator pos:line="78" pos:column="30">new</op:operator> <call><name><name pos:line="78" pos:column="34">Mock</name><argument_list pos:line="78" pos:column="38">&lt;<argument><name pos:line="78" pos:column="39">ILogger</name></argument>&gt;</argument_list></name><argument_list pos:line="78" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="79" pos:column="13">var</name></type> <name pos:line="79" pos:column="17">clientScripts</name> <init pos:line="79" pos:column="31">= <expr><op:operator pos:line="79" pos:column="33">new</op:operator> <call><name><name pos:line="79" pos:column="37">ReflectionDiscoverableCollection</name><argument_list pos:line="79" pos:column="69">&lt;<argument><name pos:line="79" pos:column="70">IClientScript</name></argument>&gt;</argument_list></name><argument_list pos:line="79" pos:column="84">(<argument><expr><name><name pos:line="79" pos:column="85">loggerMock</name><op:operator pos:line="79" pos:column="95">.</op:operator><name pos:line="79" pos:column="96">Object</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="80" pos:column="13">var</name></type> <name pos:line="80" pos:column="17">htmlEncoderMock</name> <init pos:line="80" pos:column="33">= <expr><op:operator pos:line="80" pos:column="35">new</op:operator> <call><name><name pos:line="80" pos:column="39">Mock</name><argument_list pos:line="80" pos:column="43">&lt;<argument><name pos:line="80" pos:column="44">IHtmlEncoder</name></argument>&gt;</argument_list></name><argument_list pos:line="80" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="81" pos:column="13">var</name></type> <name pos:line="81" pos:column="17">persistenceStoreMock</name> <init pos:line="81" pos:column="38">= <expr><op:operator pos:line="81" pos:column="40">new</op:operator> <call><name><name pos:line="81" pos:column="44">Mock</name><argument_list pos:line="81" pos:column="48">&lt;<argument><name pos:line="81" pos:column="49">IPersistenceStore</name></argument>&gt;</argument_list></name><argument_list pos:line="81" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="82" pos:column="13">var</name></type> <name pos:line="82" pos:column="17">inspectors</name> <init pos:line="82" pos:column="28">= <expr><op:operator pos:line="82" pos:column="30">new</op:operator> <call><name><name pos:line="82" pos:column="34">ReflectionDiscoverableCollection</name><argument_list pos:line="82" pos:column="66">&lt;<argument><name pos:line="82" pos:column="67">IInspector</name></argument>&gt;</argument_list></name><argument_list pos:line="82" pos:column="78">(<argument><expr><name><name pos:line="82" pos:column="79">loggerMock</name><op:operator pos:line="82" pos:column="89">.</op:operator><name pos:line="82" pos:column="90">Object</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="83" pos:column="13">var</name></type> <name pos:line="83" pos:column="17">resources</name> <init pos:line="83" pos:column="27">= <expr><op:operator pos:line="83" pos:column="29">new</op:operator> <call><name><name pos:line="83" pos:column="33">ReflectionDiscoverableCollection</name><argument_list pos:line="83" pos:column="65">&lt;<argument><name pos:line="83" pos:column="66">IResource</name></argument>&gt;</argument_list></name><argument_list pos:line="83" pos:column="76">(<argument><expr><name><name pos:line="83" pos:column="77">loggerMock</name><op:operator pos:line="83" pos:column="87">.</op:operator><name pos:line="83" pos:column="88">Object</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="84" pos:column="13">var</name></type> <name pos:line="84" pos:column="17">serializerMock</name> <init pos:line="84" pos:column="32">= <expr><op:operator pos:line="84" pos:column="34">new</op:operator> <call><name><name pos:line="84" pos:column="38">Mock</name><argument_list pos:line="84" pos:column="42">&lt;<argument><name pos:line="84" pos:column="43">ISerializer</name></argument>&gt;</argument_list></name><argument_list pos:line="84" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="85" pos:column="13">var</name></type> <name pos:line="85" pos:column="17">tabs</name> <init pos:line="85" pos:column="22">= <expr><op:operator pos:line="85" pos:column="24">new</op:operator> <call><name><name pos:line="85" pos:column="28">ReflectionDiscoverableCollection</name><argument_list pos:line="85" pos:column="60">&lt;<argument><name pos:line="85" pos:column="61">ITab</name></argument>&gt;</argument_list></name><argument_list pos:line="85" pos:column="66">(<argument><expr><name><name pos:line="85" pos:column="67">loggerMock</name><op:operator pos:line="85" pos:column="77">.</op:operator><name pos:line="85" pos:column="78">Object</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="86" pos:column="13">var</name></type> <name pos:line="86" pos:column="17">displays</name> <init pos:line="86" pos:column="26">= <expr><op:operator pos:line="86" pos:column="28">new</op:operator> <call><name><name pos:line="86" pos:column="32">ReflectionDiscoverableCollection</name><argument_list pos:line="86" pos:column="64">&lt;<argument><name pos:line="86" pos:column="65">IDisplay</name></argument>&gt;</argument_list></name><argument_list pos:line="86" pos:column="74">(<argument><expr><name><name pos:line="86" pos:column="75">loggerMock</name><op:operator pos:line="86" pos:column="85">.</op:operator><name pos:line="86" pos:column="86">Object</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="87" pos:column="13">var</name></type> <name pos:line="87" pos:column="17">policies</name> <init pos:line="87" pos:column="26">= <expr><op:operator pos:line="87" pos:column="28">new</op:operator> <call><name><name pos:line="87" pos:column="32">ReflectionDiscoverableCollection</name><argument_list pos:line="87" pos:column="64">&lt;<argument><name pos:line="87" pos:column="65">IRuntimePolicy</name></argument>&gt;</argument_list></name><argument_list pos:line="87" pos:column="80">(<argument><expr><name><name pos:line="87" pos:column="81">loggerMock</name><op:operator pos:line="87" pos:column="91">.</op:operator><name pos:line="87" pos:column="92">Object</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="88" pos:column="13">var</name></type> <name pos:line="88" pos:column="17">resourceMock</name> <init pos:line="88" pos:column="30">= <expr><op:operator pos:line="88" pos:column="32">new</op:operator> <call><name><name pos:line="88" pos:column="36">Mock</name><argument_list pos:line="88" pos:column="40">&lt;<argument><name pos:line="88" pos:column="41">IResource</name></argument>&gt;</argument_list></name><argument_list pos:line="88" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="89" pos:column="13">var</name></type> <name pos:line="89" pos:column="17">proxyFactoryMock</name> <init pos:line="89" pos:column="34">= <expr><op:operator pos:line="89" pos:column="36">new</op:operator> <call><name><name pos:line="89" pos:column="40">Mock</name><argument_list pos:line="89" pos:column="44">&lt;<argument><name pos:line="89" pos:column="45">IProxyFactory</name></argument>&gt;</argument_list></name><argument_list pos:line="89" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="90" pos:column="13">var</name></type> <name pos:line="90" pos:column="17">messageBrokerMock</name> <init pos:line="90" pos:column="35">= <expr><op:operator pos:line="90" pos:column="37">new</op:operator> <call><name><name pos:line="90" pos:column="41">Mock</name><argument_list pos:line="90" pos:column="45">&lt;<argument><name pos:line="90" pos:column="46">IMessageBroker</name></argument>&gt;</argument_list></name><argument_list pos:line="90" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="92" pos:column="13">var</name></type> <name pos:line="92" pos:column="17">configuration</name> <init pos:line="92" pos:column="31">=
                <expr><op:operator pos:line="93" pos:column="17">new</op:operator> <call><name pos:line="93" pos:column="21">GlimpseConfiguration</name><argument_list pos:line="93" pos:column="41">(<argument><expr><name><name pos:line="93" pos:column="42">frameworkProviderMock</name><op:operator pos:line="93" pos:column="63">.</op:operator><name pos:line="93" pos:column="64">Object</name></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="72">endpointConfigMock</name><op:operator pos:line="93" pos:column="90">.</op:operator><name pos:line="93" pos:column="91">Object</name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="99">clientScripts</name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="114">loggerMock</name><op:operator pos:line="93" pos:column="124">.</op:operator><name pos:line="93" pos:column="125">Object</name></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="133">RuntimePolicy</name><op:operator pos:line="93" pos:column="146">.</op:operator><name pos:line="93" pos:column="147">On</name></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="151">htmlEncoderMock</name><op:operator pos:line="93" pos:column="166">.</op:operator><name pos:line="93" pos:column="167">Object</name></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="175">persistenceStoreMock</name><op:operator pos:line="93" pos:column="195">.</op:operator><name pos:line="93" pos:column="196">Object</name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="204">inspectors</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="216">resources</name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="227">serializerMock</name><op:operator pos:line="93" pos:column="241">.</op:operator><name pos:line="93" pos:column="242">Object</name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="250">tabs</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="256">displays</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="266">policies</name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="276">resourceMock</name><op:operator pos:line="93" pos:column="288">.</op:operator><name pos:line="93" pos:column="289">Object</name></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="297">proxyFactoryMock</name><op:operator pos:line="93" pos:column="313">.</op:operator><name pos:line="93" pos:column="314">Object</name></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="322">messageBrokerMock</name><op:operator pos:line="93" pos:column="339">.</op:operator><name pos:line="93" pos:column="340">Object</name></name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="93" pos:column="348">"~/Glimpse.axd"</lit:literal></expr></argument>, <argument><expr><lambda><parameter_list pos:line="93" pos:column="365">()</parameter_list> <op:operator pos:line="93" pos:column="368">=&gt;</op:operator> <op:operator pos:line="93" pos:column="371">new</op:operator> <call><name pos:line="93" pos:column="375">ExecutionTimer</name><argument_list pos:line="93" pos:column="389">(<argument><expr><call><name><name pos:line="93" pos:column="390">Stopwatch</name><op:operator pos:line="93" pos:column="399">.</op:operator><name pos:line="93" pos:column="400">StartNew</name></name><argument_list pos:line="93" pos:column="408">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><lambda><parameter_list pos:line="93" pos:column="413">()</parameter_list> <op:operator pos:line="93" pos:column="416">=&gt;</op:operator> <name><name pos:line="93" pos:column="419">RuntimePolicy</name><op:operator pos:line="93" pos:column="432">.</op:operator><name pos:line="93" pos:column="433">On</name></name></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


            <return pos:line="96" pos:column="13">return <expr><op:operator pos:line="96" pos:column="20">new</op:operator> <call><name pos:line="96" pos:column="24">GlimpseRuntimeTester</name><argument_list pos:line="96" pos:column="44">(<argument><expr><name pos:line="96" pos:column="45">configuration</name></expr></argument>, <argument><expr><name pos:line="96" pos:column="60">frameworkProviderMock</name></expr></argument>, <argument><expr><name pos:line="96" pos:column="83">endpointConfigMock</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
