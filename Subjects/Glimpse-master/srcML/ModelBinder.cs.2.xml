<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WebForms\AlternateType\ModelBinder.cs" pos:tabs="8"><cpp:if pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">if</cpp:directive> <expr><name pos:line="1" pos:column="5">NET45Plus</name></expr></cpp:if>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name><op:operator pos:line="2" pos:column="19">.</op:operator><name pos:line="2" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">WebForms</name><op:operator pos:line="3" pos:column="23">.</op:operator><name pos:line="3" pos:column="24">Model</name></name>;</using>
<using pos:line="4" pos:column="1">using <name pos:line="4" pos:column="7">System</name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Collections</name><op:operator pos:line="5" pos:column="25">.</op:operator><name pos:line="5" pos:column="26">Generic</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Web</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Web</name><op:operator pos:line="7" pos:column="17">.</op:operator><name pos:line="7" pos:column="18">ModelBinding</name></name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Glimpse</name><op:operator pos:line="9" pos:column="18">.</op:operator><name pos:line="9" pos:column="19">WebForms</name><op:operator pos:line="9" pos:column="27">.</op:operator><name pos:line="9" pos:column="28">AlternateType</name></name>
<block pos:line="10" pos:column="1">{
    <class><specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">ModelBinder</name> <super pos:line="11" pos:column="30">: <name><name pos:line="11" pos:column="32">AlternateType</name><argument_list pos:line="11" pos:column="45">&lt;<argument><name pos:line="11" pos:column="46">IModelBinder</name></argument>&gt;</argument_list></name></super>
    <block pos:line="12" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">private</specifier> <name><name pos:line="13" pos:column="17">IEnumerable</name><argument_list pos:line="13" pos:column="28">&lt;<argument><name pos:line="13" pos:column="29">IAlternateMethod</name></argument>&gt;</argument_list></name></type> <name pos:line="13" pos:column="47">allMethods</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="15" pos:column="9">public</specifier> <name pos:line="15" pos:column="16">ModelBinder</name><parameter_list pos:line="15" pos:column="27">(<param><decl><type><name pos:line="15" pos:column="28">IProxyFactory</name></type> <name pos:line="15" pos:column="42">proxyFactory</name></decl></param>)</parameter_list>
            <member_list pos:line="16" pos:column="13">: <call><name pos:line="16" pos:column="15">base</name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">proxyFactory</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="17" pos:column="9">{
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">public</specifier> <specifier pos:line="20" pos:column="16">override</specifier> <name><name pos:line="20" pos:column="25">IEnumerable</name><argument_list pos:line="20" pos:column="36">&lt;<argument><name pos:line="20" pos:column="37">IAlternateMethod</name></argument>&gt;</argument_list></name></type> <name pos:line="20" pos:column="55">AllMethods</name>
        <block pos:line="21" pos:column="9">{
            <function><name pos:line="22" pos:column="13">get</name>
            <block pos:line="23" pos:column="13">{
                <return pos:line="24" pos:column="17">return <expr><name pos:line="24" pos:column="24">allMethods</name> <op:operator pos:line="24" pos:column="35">??</op:operator> <op:operator pos:line="24" pos:column="38">(</op:operator><name pos:line="24" pos:column="39">allMethods</name> <op:operator pos:line="24" pos:column="50">=</op:operator> <op:operator pos:line="24" pos:column="52">new</op:operator> <name><name pos:line="24" pos:column="56">List</name><argument_list pos:line="24" pos:column="60">&lt;<argument><name pos:line="24" pos:column="61">IAlternateMethod</name></argument>&gt;</argument_list></name>
                <block pos:line="25" pos:column="17">{
                    <expr><op:operator pos:line="26" pos:column="21">new</op:operator> <call><name pos:line="26" pos:column="25">BindModel</name><argument_list pos:line="26" pos:column="34">()</argument_list></call></expr><op:operator pos:line="26" pos:column="36">,</op:operator>
                }</block>)</expr>;</return>
            }</block></function>
        }</block></decl></decl_stmt>

        <class><specifier pos:line="31" pos:column="9">public</specifier> class <name pos:line="31" pos:column="22">BindModel</name> <super pos:line="31" pos:column="32">: <name pos:line="31" pos:column="34">AlternateMethod</name></super>
        <block pos:line="32" pos:column="9">{
            <constructor><specifier pos:line="33" pos:column="13">public</specifier> <name pos:line="33" pos:column="20">BindModel</name><parameter_list pos:line="33" pos:column="29">()</parameter_list> <member_list pos:line="33" pos:column="32">: <call><name pos:line="33" pos:column="34">base</name><argument_list pos:line="33" pos:column="38">(<argument><expr><call><name pos:line="33" pos:column="39">typeof</name><argument_list pos:line="33" pos:column="45">(<argument><expr><name pos:line="33" pos:column="46">IModelBinder</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="33" pos:column="61">"BindModel"</lit:literal></expr></argument>)</argument_list></call>
            </member_list><block pos:line="34" pos:column="13">{
            }</block></constructor>

            <function><type><specifier pos:line="37" pos:column="13">public</specifier> <specifier pos:line="37" pos:column="20">override</specifier> <name pos:line="37" pos:column="29">void</name></type> <name pos:line="37" pos:column="34">PostImplementation</name><parameter_list pos:line="37" pos:column="52">(<param><decl><type><name pos:line="37" pos:column="53">IAlternateMethodContext</name></type> <name pos:line="37" pos:column="77">context</name></decl></param>, <param><decl><type><name pos:line="37" pos:column="86">TimerResult</name></type> <name pos:line="37" pos:column="98">timerResult</name></decl></param>)</parameter_list>
            <block pos:line="38" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="39" pos:column="17">var</name></type> <name pos:line="39" pos:column="21">dataBindParameterModel</name> <init pos:line="39" pos:column="44">= <expr><op:operator pos:line="39" pos:column="46">(</op:operator><name pos:line="39" pos:column="47">DataBindParameterModel</name><op:operator pos:line="39" pos:column="69">)</op:operator><name><name pos:line="39" pos:column="70">HttpContext</name><op:operator pos:line="39" pos:column="81">.</op:operator><name pos:line="39" pos:column="82">Current</name><op:operator pos:line="39" pos:column="89">.</op:operator><name pos:line="39" pos:column="90">Items</name><index pos:line="39" pos:column="95">[<expr><lit:literal type="string" pos:line="39" pos:column="96">"_GlimpseWebFormModelBinding"</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">dataBindParameterModel</name> <op:operator pos:line="40" pos:column="44">!=</op:operator> <name pos:line="40" pos:column="47">null</name></expr>)</condition><then pos:line="40" pos:column="52">
                <block pos:line="41" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="42" pos:column="21">var</name></type> <name pos:line="42" pos:column="25">bindingContext</name> <init pos:line="42" pos:column="40">= <expr><op:operator pos:line="42" pos:column="42">(</op:operator><name pos:line="42" pos:column="43">ModelBindingContext</name><op:operator pos:line="42" pos:column="62">)</op:operator><name><name pos:line="42" pos:column="63">context</name><op:operator pos:line="42" pos:column="70">.</op:operator><name pos:line="42" pos:column="71">Arguments</name><index pos:line="42" pos:column="80">[<expr><lit:literal type="number" pos:line="42" pos:column="81">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="43" pos:column="21">dataBindParameterModel</name><op:operator pos:line="43" pos:column="43">.</op:operator><name pos:line="43" pos:column="44">DataBindParameters</name><op:operator pos:line="43" pos:column="62">.</op:operator><name pos:line="43" pos:column="63">Add</name></name><argument_list pos:line="43" pos:column="66">(<argument><expr><op:operator pos:line="43" pos:column="67">new</op:operator> <call><name pos:line="43" pos:column="71">ModelBindParameter</name><argument_list pos:line="43" pos:column="89">(<argument><expr><name><name pos:line="43" pos:column="90">bindingContext</name><op:operator pos:line="43" pos:column="104">.</op:operator><name pos:line="43" pos:column="105">ModelName</name></name></expr></argument>, <argument><expr><call><name><name pos:line="43" pos:column="116">bindingContext</name><op:operator pos:line="43" pos:column="130">.</op:operator><name pos:line="43" pos:column="131">ValueProvider</name><op:operator pos:line="43" pos:column="144">.</op:operator><name pos:line="43" pos:column="145">GetType</name></name><argument_list pos:line="43" pos:column="152">()</argument_list></call><op:operator pos:line="43" pos:column="154">.</op:operator><call><name><name pos:line="43" pos:column="155">Name</name><op:operator pos:line="43" pos:column="159">.</op:operator><name pos:line="43" pos:column="160">Replace</name></name><argument_list pos:line="43" pos:column="167">(<argument><expr><lit:literal type="string" pos:line="43" pos:column="168">"ValueProvider"</lit:literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="185">null</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="192">bindingContext</name><op:operator pos:line="43" pos:column="206">.</op:operator><name pos:line="43" pos:column="207">Model</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></class>
    }</block></class>
}
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif</cpp:directive></cpp:endif></block></namespace></unit>
