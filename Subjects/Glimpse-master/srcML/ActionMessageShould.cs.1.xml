<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Mvc\Message\ActionMessageShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Web</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Mvc</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Mvc</name><op:operator pos:line="6" pos:column="18">.</op:operator><name pos:line="6" pos:column="19">Message</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Test</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Common</name></name>;</using>
<using pos:line="8" pos:column="1">using <name pos:line="8" pos:column="7">Xunit</name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Xunit</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">Extensions</name></name>;</using>

<namespace pos:line="11" pos:column="1">namespace <name><name pos:line="11" pos:column="11">Glimpse</name><op:operator pos:line="11" pos:column="18">.</op:operator><name pos:line="11" pos:column="19">Test</name><op:operator pos:line="11" pos:column="23">.</op:operator><name pos:line="11" pos:column="24">Mvc</name><op:operator pos:line="11" pos:column="27">.</op:operator><name pos:line="11" pos:column="28">Message</name></name>
<block pos:line="12" pos:column="1">{
    <class><specifier pos:line="13" pos:column="5">public</specifier> class <name pos:line="13" pos:column="18">ActionMessageShould</name>
    <block pos:line="14" pos:column="5">{
        <function><type><attribute pos:line="15" pos:column="9">[<expr><call><name pos:line="15" pos:column="10">Theory</name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">Skip</name> <op:operator pos:line="15" pos:column="22">=</op:operator> <lit:literal type="string" pos:line="15" pos:column="24">"Ned to get AutoFixture Working."</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="15" pos:column="58">,</op:operator> <expr><name pos:line="15" pos:column="60">AutoMock</name></expr>]</attribute>
        <specifier pos:line="16" pos:column="9">public</specifier> <name pos:line="16" pos:column="16">void</name></type> <name pos:line="16" pos:column="21">ShouldBeAbleToBuildWithFactoryUsingActionDescriptor</name><parameter_list pos:line="16" pos:column="72">(<param><decl><type><name pos:line="16" pos:column="73">ActionDescriptor</name></type> <name pos:line="16" pos:column="90">descriptor</name></decl></param>)</parameter_list>
        <block pos:line="17" pos:column="9">{ 
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">var</name></type> <name pos:line="18" pos:column="17">testMessage</name> <init pos:line="18" pos:column="29">= <expr><op:operator pos:line="18" pos:column="31">new</op:operator> <call><name pos:line="18" pos:column="35">TestMessage</name><argument_list pos:line="18" pos:column="46">()</argument_list></call><op:operator pos:line="18" pos:column="48">.</op:operator><call><name pos:line="18" pos:column="49">AsActionMessage</name><argument_list pos:line="18" pos:column="64">(<argument><expr><name pos:line="18" pos:column="65">descriptor</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">Assert</name><op:operator pos:line="20" pos:column="19">.</op:operator><name pos:line="20" pos:column="20">Equal</name></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name><name pos:line="20" pos:column="26">descriptor</name><op:operator pos:line="20" pos:column="36">.</op:operator><name pos:line="20" pos:column="37">ActionName</name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="49">testMessage</name><op:operator pos:line="20" pos:column="60">.</op:operator><name pos:line="20" pos:column="61">ActionName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="21" pos:column="13">Assert</name><op:operator pos:line="21" pos:column="19">.</op:operator><name pos:line="21" pos:column="20">Equal</name></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name><name pos:line="21" pos:column="26">descriptor</name><op:operator pos:line="21" pos:column="36">.</op:operator><name pos:line="21" pos:column="37">ControllerDescriptor</name><op:operator pos:line="21" pos:column="57">.</op:operator><name pos:line="21" pos:column="58">ControllerName</name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="74">testMessage</name><op:operator pos:line="21" pos:column="85">.</op:operator><name pos:line="21" pos:column="86">ControllerName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="24" pos:column="9">[<expr><call><name pos:line="24" pos:column="10">Theory</name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">Skip</name> <op:operator pos:line="24" pos:column="22">=</op:operator> <lit:literal type="string" pos:line="24" pos:column="24">"Ned to get AutoFixture Working."</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="24" pos:column="58">,</op:operator> <expr><name pos:line="24" pos:column="60">AutoMock</name></expr>]</attribute>
        <specifier pos:line="25" pos:column="9">public</specifier> <name pos:line="25" pos:column="16">void</name></type> <name pos:line="25" pos:column="21">ShouldBeAbleToBuildWithFactoryUsingControllerContext</name><parameter_list pos:line="25" pos:column="73">(<param><decl><type><name pos:line="25" pos:column="74">ControllerContext</name></type> <name pos:line="25" pos:column="92">controllerContext</name></decl></param>, <param><decl><type><name pos:line="25" pos:column="111">string</name></type> <name pos:line="25" pos:column="118">controllerName</name></decl></param>, <param><decl><type><name pos:line="25" pos:column="134">string</name></type> <name pos:line="25" pos:column="141">actionName</name></decl></param>)</parameter_list>
        <block pos:line="26" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">controllerContext</name><op:operator pos:line="27" pos:column="30">.</op:operator><name pos:line="27" pos:column="31">Controller</name><op:operator pos:line="27" pos:column="41">.</op:operator><name pos:line="27" pos:column="42">ValueProvider</name><op:operator pos:line="27" pos:column="55">.</op:operator><name pos:line="27" pos:column="56">Setup</name></name><argument_list pos:line="27" pos:column="61">(<argument><expr><lambda><name pos:line="27" pos:column="62">x</name> <op:operator pos:line="27" pos:column="64">=&gt;</op:operator> <call><name><name pos:line="27" pos:column="67">x</name><op:operator pos:line="27" pos:column="68">.</op:operator><name pos:line="27" pos:column="69">GetValue</name></name><argument_list pos:line="27" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="27" pos:column="78">"controller"</lit:literal></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="27" pos:column="92">.</op:operator><call><name pos:line="27" pos:column="93">Returns</name><argument_list pos:line="27" pos:column="100">(<argument><expr><op:operator pos:line="27" pos:column="101">new</op:operator> <call><name pos:line="27" pos:column="105">ValueProviderResult</name><argument_list pos:line="27" pos:column="124">(<argument><expr><name pos:line="27" pos:column="125">controllerName</name></expr></argument>, <argument><expr><name pos:line="27" pos:column="141">null</name></expr></argument>, <argument><expr><name pos:line="27" pos:column="147">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">controllerContext</name><op:operator pos:line="28" pos:column="30">.</op:operator><name pos:line="28" pos:column="31">Controller</name><op:operator pos:line="28" pos:column="41">.</op:operator><name pos:line="28" pos:column="42">ValueProvider</name><op:operator pos:line="28" pos:column="55">.</op:operator><name pos:line="28" pos:column="56">Setup</name></name><argument_list pos:line="28" pos:column="61">(<argument><expr><lambda><name pos:line="28" pos:column="62">x</name> <op:operator pos:line="28" pos:column="64">=&gt;</op:operator> <call><name><name pos:line="28" pos:column="67">x</name><op:operator pos:line="28" pos:column="68">.</op:operator><name pos:line="28" pos:column="69">GetValue</name></name><argument_list pos:line="28" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="28" pos:column="78">"name"</lit:literal></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="28" pos:column="86">.</op:operator><call><name pos:line="28" pos:column="87">Returns</name><argument_list pos:line="28" pos:column="94">(<argument><expr><op:operator pos:line="28" pos:column="95">new</op:operator> <call><name pos:line="28" pos:column="99">ValueProviderResult</name><argument_list pos:line="28" pos:column="118">(<argument><expr><name pos:line="28" pos:column="119">actionName</name></expr></argument>, <argument><expr><name pos:line="28" pos:column="131">null</name></expr></argument>, <argument><expr><name pos:line="28" pos:column="137">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="30" pos:column="13">var</name></type> <name pos:line="30" pos:column="17">testMessage</name> <init pos:line="30" pos:column="29">= <expr><op:operator pos:line="30" pos:column="31">new</op:operator> <call><name pos:line="30" pos:column="35">TestMessage</name><argument_list pos:line="30" pos:column="46">()</argument_list></call><op:operator pos:line="30" pos:column="48">.</op:operator><call><name pos:line="30" pos:column="49">AsActionMessage</name><argument_list pos:line="30" pos:column="64">(<argument><expr><name pos:line="30" pos:column="65">controllerContext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">Assert</name><op:operator pos:line="32" pos:column="19">.</op:operator><name pos:line="32" pos:column="20">Equal</name></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">controllerName</name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="42">testMessage</name><op:operator pos:line="32" pos:column="53">.</op:operator><name pos:line="32" pos:column="54">ControllerName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">Assert</name><op:operator pos:line="33" pos:column="19">.</op:operator><name pos:line="33" pos:column="20">Equal</name></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">actionName</name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="38">testMessage</name><op:operator pos:line="33" pos:column="49">.</op:operator><name pos:line="33" pos:column="50">ActionName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <class><specifier pos:line="36" pos:column="9">public</specifier> class <name pos:line="36" pos:column="22">TestMessage</name> <super pos:line="36" pos:column="34">: <name pos:line="36" pos:column="36">IActionMessage</name></super>
        <block pos:line="37" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="38" pos:column="13">public</specifier> <name pos:line="38" pos:column="20">Guid</name></type> <name pos:line="38" pos:column="25">Id</name> <block pos:line="38" pos:column="28">{ <function_decl><name pos:line="38" pos:column="30">get</name>;</function_decl> <function_decl><specifier pos:line="38" pos:column="35">private</specifier> <name pos:line="38" pos:column="43">set</name>;</function_decl> }</block></decl></decl_stmt>
            
            <decl_stmt><decl><type><specifier pos:line="40" pos:column="13">public</specifier> <name pos:line="40" pos:column="20">string</name></type> <name pos:line="40" pos:column="27">ControllerName</name> <block pos:line="40" pos:column="42">{ <function_decl><name pos:line="40" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="40" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>
            
            <decl_stmt><decl><type><specifier pos:line="42" pos:column="13">public</specifier> <name pos:line="42" pos:column="20">string</name></type> <name pos:line="42" pos:column="27">ActionName</name> <block pos:line="42" pos:column="38">{ <function_decl><name pos:line="42" pos:column="40">get</name>;</function_decl> <function_decl><name pos:line="42" pos:column="45">set</name>;</function_decl> }</block></decl></decl_stmt>
        }</block></class>
    }</block></class>
}</block></namespace>
</unit>
