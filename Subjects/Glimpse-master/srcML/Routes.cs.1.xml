<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.AspNet\Tab\Routes.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Linq</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">AspNet</name><op:operator pos:line="3" pos:column="21">.</op:operator><name pos:line="3" pos:column="22">AlternateType</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">AspNet</name><op:operator pos:line="4" pos:column="21">.</op:operator><name pos:line="4" pos:column="22">Extensibility</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">AspNet</name><op:operator pos:line="5" pos:column="21">.</op:operator><name pos:line="5" pos:column="22">Model</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Core</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Extensions</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Glimpse</name><op:operator pos:line="8" pos:column="14">.</op:operator><name pos:line="8" pos:column="15">Core</name><op:operator pos:line="8" pos:column="19">.</op:operator><name pos:line="8" pos:column="20">Tab</name><op:operator pos:line="8" pos:column="23">.</op:operator><name pos:line="8" pos:column="24">Assist</name></name>;</using>
<using pos:line="9" pos:column="1">using <name pos:line="9" pos:column="7">MvcRoute</name> <init pos:line="9" pos:column="16">= <expr><name><name pos:line="9" pos:column="18">System</name><op:operator pos:line="9" pos:column="24">.</op:operator><name pos:line="9" pos:column="25">Web</name><op:operator pos:line="9" pos:column="28">.</op:operator><name pos:line="9" pos:column="29">Routing</name><op:operator pos:line="9" pos:column="36">.</op:operator><name pos:line="9" pos:column="37">Route</name></name></expr></init>;</using>
<using pos:line="10" pos:column="1">using <name pos:line="10" pos:column="7">MvcRouteBase</name> <init pos:line="10" pos:column="20">= <expr><name><name pos:line="10" pos:column="22">System</name><op:operator pos:line="10" pos:column="28">.</op:operator><name pos:line="10" pos:column="29">Web</name><op:operator pos:line="10" pos:column="32">.</op:operator><name pos:line="10" pos:column="33">Routing</name><op:operator pos:line="10" pos:column="40">.</op:operator><name pos:line="10" pos:column="41">RouteBase</name></name></expr></init>;</using>
<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">MvcRouteValueDictionary</name> <init pos:line="11" pos:column="31">= <expr><name><name pos:line="11" pos:column="33">System</name><op:operator pos:line="11" pos:column="39">.</op:operator><name pos:line="11" pos:column="40">Web</name><op:operator pos:line="11" pos:column="43">.</op:operator><name pos:line="11" pos:column="44">Routing</name><op:operator pos:line="11" pos:column="51">.</op:operator><name pos:line="11" pos:column="52">RouteValueDictionary</name></name></expr></init>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">System</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">Reflection</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Glimpse</name><op:operator pos:line="13" pos:column="14">.</op:operator><name pos:line="13" pos:column="15">AspNet</name><op:operator pos:line="13" pos:column="21">.</op:operator><name pos:line="13" pos:column="22">Message</name></name>;</using>

<namespace pos:line="15" pos:column="1">namespace <name><name pos:line="15" pos:column="11">Glimpse</name><op:operator pos:line="15" pos:column="18">.</op:operator><name pos:line="15" pos:column="19">AspNet</name><op:operator pos:line="15" pos:column="25">.</op:operator><name pos:line="15" pos:column="26">Tab</name></name>
<block pos:line="16" pos:column="1">{
    <class><specifier pos:line="17" pos:column="5">public</specifier> class <name pos:line="17" pos:column="18">Routes</name> <super pos:line="17" pos:column="25">: <name pos:line="17" pos:column="27">AspNetTab</name>, <name pos:line="17" pos:column="38">IDocumentation</name>, <name pos:line="17" pos:column="54">ITabSetup</name>, <name pos:line="17" pos:column="65">ITabLayout</name>, <name pos:line="17" pos:column="77">IKey</name></super>
    <block pos:line="18" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">private</specifier> <specifier pos:line="19" pos:column="17">static</specifier> <specifier pos:line="19" pos:column="24">readonly</specifier> <name pos:line="19" pos:column="33">object</name></type> <name pos:line="19" pos:column="40">Layout</name> <init pos:line="19" pos:column="47">= <expr><call><name><name pos:line="19" pos:column="49">TabLayout</name><op:operator pos:line="19" pos:column="58">.</op:operator><name pos:line="19" pos:column="59">Create</name></name><argument_list pos:line="19" pos:column="65">()</argument_list></call>
                <op:operator pos:line="20" pos:column="17">.</op:operator><call><name pos:line="20" pos:column="18">Row</name><argument_list pos:line="20" pos:column="21">(<argument><expr><lambda><name pos:line="20" pos:column="22">r</name> <op:operator pos:line="20" pos:column="24">=&gt;</op:operator>
                <block pos:line="21" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="22" pos:column="21">r</name><op:operator pos:line="22" pos:column="22">.</op:operator><name pos:line="22" pos:column="23">Cell</name></name><argument_list pos:line="22" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="22" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="22" pos:column="30">.</op:operator><call><name pos:line="22" pos:column="31">WidthInPixels</name><argument_list pos:line="22" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="22" pos:column="45">100</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="23" pos:column="21">r</name><op:operator pos:line="23" pos:column="22">.</op:operator><name pos:line="23" pos:column="23">Cell</name></name><argument_list pos:line="23" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="23" pos:column="28">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="23" pos:column="30">.</op:operator><call><name pos:line="23" pos:column="31">AsKey</name><argument_list pos:line="23" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="24" pos:column="21">r</name><op:operator pos:line="24" pos:column="22">.</op:operator><name pos:line="24" pos:column="23">Cell</name></name><argument_list pos:line="24" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="24" pos:column="28">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="25" pos:column="21">r</name><op:operator pos:line="25" pos:column="22">.</op:operator><name pos:line="25" pos:column="23">Cell</name></name><argument_list pos:line="25" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="25" pos:column="28">3</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="25" pos:column="30">.</op:operator><call><name pos:line="25" pos:column="31">WidthInPercent</name><argument_list pos:line="25" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="25" pos:column="46">20</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="25" pos:column="49">.</op:operator><call><name pos:line="25" pos:column="50">SetLayout</name><argument_list pos:line="25" pos:column="59">(<argument><expr><call><name><name pos:line="25" pos:column="60">TabLayout</name><op:operator pos:line="25" pos:column="69">.</op:operator><name pos:line="25" pos:column="70">Create</name></name><argument_list pos:line="25" pos:column="76">()</argument_list></call><op:operator pos:line="25" pos:column="78">.</op:operator><call><name pos:line="25" pos:column="79">Row</name><argument_list pos:line="25" pos:column="82">(<argument><expr><lambda><name pos:line="25" pos:column="83">x</name> <op:operator pos:line="25" pos:column="85">=&gt;</op:operator> 
                        <block pos:line="26" pos:column="25">{
                            <expr_stmt><expr><call><name><name pos:line="27" pos:column="29">x</name><op:operator pos:line="27" pos:column="30">.</op:operator><name pos:line="27" pos:column="31">Cell</name></name><argument_list pos:line="27" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="27" pos:column="36">"{{0}} ({{1}})"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="27" pos:column="52">.</op:operator><call><name pos:line="27" pos:column="53">WidthInPercent</name><argument_list pos:line="27" pos:column="67">(<argument><expr><lit:literal type="number" pos:line="27" pos:column="68">45</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
                            <expr_stmt><expr><call><name><name pos:line="28" pos:column="29">x</name><op:operator pos:line="28" pos:column="30">.</op:operator><name pos:line="28" pos:column="31">Cell</name></name><argument_list pos:line="28" pos:column="35">(<argument><expr><lit:literal type="number" pos:line="28" pos:column="36">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="30" pos:column="21">r</name><op:operator pos:line="30" pos:column="22">.</op:operator><name pos:line="30" pos:column="23">Cell</name></name><argument_list pos:line="30" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="30" pos:column="28">4</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="30" pos:column="30">.</op:operator><call><name pos:line="30" pos:column="31">WidthInPercent</name><argument_list pos:line="30" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="30" pos:column="46">35</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="30" pos:column="49">.</op:operator><call><name pos:line="30" pos:column="50">SetLayout</name><argument_list pos:line="30" pos:column="59">(<argument><expr><call><name><name pos:line="30" pos:column="60">TabLayout</name><op:operator pos:line="30" pos:column="69">.</op:operator><name pos:line="30" pos:column="70">Create</name></name><argument_list pos:line="30" pos:column="76">()</argument_list></call><op:operator pos:line="30" pos:column="78">.</op:operator><call><name pos:line="30" pos:column="79">Row</name><argument_list pos:line="30" pos:column="82">(<argument><expr><lambda><name pos:line="30" pos:column="83">x</name> <op:operator pos:line="30" pos:column="85">=&gt;</op:operator>
                        <block pos:line="31" pos:column="25">{
                            <expr_stmt><expr><call><name><name pos:line="32" pos:column="29">x</name><op:operator pos:line="32" pos:column="30">.</op:operator><name pos:line="32" pos:column="31">Cell</name></name><argument_list pos:line="32" pos:column="35">(<argument><expr><lit:literal type="number" pos:line="32" pos:column="36">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="32" pos:column="38">.</op:operator><call><name pos:line="32" pos:column="39">WidthInPercent</name><argument_list pos:line="32" pos:column="53">(<argument><expr><lit:literal type="number" pos:line="32" pos:column="54">30</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="33" pos:column="29">x</name><op:operator pos:line="33" pos:column="30">.</op:operator><name pos:line="33" pos:column="31">Cell</name></name><argument_list pos:line="33" pos:column="35">(<argument><expr><lit:literal type="number" pos:line="33" pos:column="36">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="34" pos:column="29">x</name><op:operator pos:line="34" pos:column="30">.</op:operator><name pos:line="34" pos:column="31">Cell</name></name><argument_list pos:line="34" pos:column="35">(<argument><expr><lit:literal type="number" pos:line="34" pos:column="36">2</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="34" pos:column="38">.</op:operator><call><name pos:line="34" pos:column="39">WidthInPercent</name><argument_list pos:line="34" pos:column="53">(<argument><expr><lit:literal type="number" pos:line="34" pos:column="54">30</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="36" pos:column="21">r</name><op:operator pos:line="36" pos:column="22">.</op:operator><name pos:line="36" pos:column="23">Cell</name></name><argument_list pos:line="36" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="36" pos:column="28">5</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="36" pos:column="30">.</op:operator><call><name pos:line="36" pos:column="31">WidthInPercent</name><argument_list pos:line="36" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="36" pos:column="46">15</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="36" pos:column="49">.</op:operator><call><name pos:line="36" pos:column="50">SetLayout</name><argument_list pos:line="36" pos:column="59">(<argument><expr><call><name><name pos:line="36" pos:column="60">TabLayout</name><op:operator pos:line="36" pos:column="69">.</op:operator><name pos:line="36" pos:column="70">Create</name></name><argument_list pos:line="36" pos:column="76">()</argument_list></call><op:operator pos:line="36" pos:column="78">.</op:operator><call><name pos:line="36" pos:column="79">Row</name><argument_list pos:line="36" pos:column="82">(<argument><expr><lambda><name pos:line="36" pos:column="83">x</name> <op:operator pos:line="36" pos:column="85">=&gt;</op:operator>
                        <block pos:line="37" pos:column="25">{
                            <expr_stmt><expr><call><name><name pos:line="38" pos:column="29">x</name><op:operator pos:line="38" pos:column="30">.</op:operator><name pos:line="38" pos:column="31">Cell</name></name><argument_list pos:line="38" pos:column="35">(<argument><expr><lit:literal type="number" pos:line="38" pos:column="36">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="38" pos:column="38">.</op:operator><call><name pos:line="38" pos:column="39">WidthInPercent</name><argument_list pos:line="38" pos:column="53">(<argument><expr><lit:literal type="number" pos:line="38" pos:column="54">45</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="39" pos:column="29">x</name><op:operator pos:line="39" pos:column="30">.</op:operator><name pos:line="39" pos:column="31">Cell</name></name><argument_list pos:line="39" pos:column="35">(<argument><expr><lit:literal type="number" pos:line="39" pos:column="36">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="39" pos:column="38">.</op:operator><call><name pos:line="39" pos:column="39">WidthInPercent</name><argument_list pos:line="39" pos:column="53">(<argument><expr><lit:literal type="number" pos:line="39" pos:column="54">55</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
                        }</block></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="41" pos:column="21">r</name><op:operator pos:line="41" pos:column="22">.</op:operator><name pos:line="41" pos:column="23">Cell</name></name><argument_list pos:line="41" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="41" pos:column="28">6</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="41" pos:column="30">.</op:operator><call><name pos:line="41" pos:column="31">WidthInPixels</name><argument_list pos:line="41" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="41" pos:column="45">100</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="41" pos:column="49">.</op:operator><call><name pos:line="41" pos:column="50">Suffix</name><argument_list pos:line="41" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="57">" ms"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="41" pos:column="63">.</op:operator><call><name pos:line="41" pos:column="64">Class</name><argument_list pos:line="41" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="70">"mono"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="41" pos:column="77">.</op:operator><call><name pos:line="41" pos:column="78">AlignRight</name><argument_list pos:line="41" pos:column="88">()</argument_list></call></expr>;</expr_stmt>
                }</block></lambda></expr></argument>)</argument_list></call><op:operator pos:line="42" pos:column="19">.</op:operator><call><name pos:line="42" pos:column="20">Build</name><argument_list pos:line="42" pos:column="25">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="44" pos:column="9">public</specifier> <specifier pos:line="44" pos:column="16">override</specifier> <name pos:line="44" pos:column="25">string</name></type> <name pos:line="44" pos:column="32">Name</name>
        <block pos:line="45" pos:column="9">{
            <function><name pos:line="46" pos:column="13">get</name> <block pos:line="46" pos:column="17">{ <return pos:line="46" pos:column="19">return <expr><lit:literal type="string" pos:line="46" pos:column="26">"Routes"</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="49" pos:column="9">public</specifier> <name pos:line="49" pos:column="16">string</name></type> <name pos:line="49" pos:column="23">Key</name>
        <block pos:line="50" pos:column="9">{
            <function><name pos:line="51" pos:column="13">get</name> <block pos:line="51" pos:column="17">{ <return pos:line="51" pos:column="19">return <expr><lit:literal type="string" pos:line="51" pos:column="26">"glimpse_routes"</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="54" pos:column="9">public</specifier> <name pos:line="54" pos:column="16">string</name></type> <name pos:line="54" pos:column="23">DocumentationUri</name>
        <block pos:line="55" pos:column="9">{
            <function><name pos:line="56" pos:column="13">get</name> <block pos:line="56" pos:column="17">{ <return pos:line="56" pos:column="19">return <expr><lit:literal type="string" pos:line="56" pos:column="26">"http://getGlimpse.com/Help/Routes-Tab"</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="59" pos:column="9">public</specifier> <name pos:line="59" pos:column="16">object</name></type> <name pos:line="59" pos:column="23">GetLayout</name><parameter_list pos:line="59" pos:column="32">()</parameter_list>
        <block pos:line="60" pos:column="9">{
            <return pos:line="61" pos:column="13">return <expr><name pos:line="61" pos:column="20">Layout</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="64" pos:column="9">public</specifier> <name pos:line="64" pos:column="16">void</name></type> <name pos:line="64" pos:column="21">Setup</name><parameter_list pos:line="64" pos:column="26">(<param><decl><type><name pos:line="64" pos:column="27">ITabSetupContext</name></type> <name pos:line="64" pos:column="44">context</name></decl></param>)</parameter_list>
        <block pos:line="65" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="66" pos:column="13">context</name><op:operator pos:line="66" pos:column="20">.</op:operator><name><name pos:line="66" pos:column="21">PersistMessages</name><argument_list pos:line="66" pos:column="36">&lt;<argument><name pos:line="66" pos:column="37">ProcessConstraintMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="66" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="67" pos:column="13">context</name><op:operator pos:line="67" pos:column="20">.</op:operator><name><name pos:line="67" pos:column="21">PersistMessages</name><argument_list pos:line="67" pos:column="36">&lt;<argument><name pos:line="67" pos:column="37">RouteDataMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="67" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="70" pos:column="9">public</specifier> <specifier pos:line="70" pos:column="16">override</specifier> <name pos:line="70" pos:column="25">object</name></type> <name pos:line="70" pos:column="32">GetData</name><parameter_list pos:line="70" pos:column="39">(<param><decl><type><name pos:line="70" pos:column="40">ITabContext</name></type> <name pos:line="70" pos:column="52">context</name></decl></param>)</parameter_list>
        <block pos:line="71" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="72" pos:column="13">var</name></type> <name pos:line="72" pos:column="17">routeMessages</name> <init pos:line="72" pos:column="31">= <expr><call><name pos:line="72" pos:column="33">ProcessMessages</name><argument_list pos:line="72" pos:column="48">(<argument><expr><call><name><name pos:line="72" pos:column="49">context</name><op:operator pos:line="72" pos:column="56">.</op:operator><name><name pos:line="72" pos:column="57">GetMessages</name><argument_list pos:line="72" pos:column="68">&lt;<argument><name pos:line="72" pos:column="69">RouteDataMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="72" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="73" pos:column="13">var</name></type> <name pos:line="73" pos:column="17">constraintMessages</name> <init pos:line="73" pos:column="36">= <expr><call><name pos:line="73" pos:column="38">ProcessMessages</name><argument_list pos:line="73" pos:column="53">(<argument><expr><call><name><name pos:line="73" pos:column="54">context</name><op:operator pos:line="73" pos:column="61">.</op:operator><name><name pos:line="73" pos:column="62">GetMessages</name><argument_list pos:line="73" pos:column="73">&lt;<argument><name pos:line="73" pos:column="74">ProcessConstraintMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="73" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="75" pos:column="13">var</name></type> <name pos:line="75" pos:column="17">result</name> <init pos:line="75" pos:column="24">= <expr><op:operator pos:line="75" pos:column="26">new</op:operator> <call><name><name pos:line="75" pos:column="30">List</name><argument_list pos:line="75" pos:column="34">&lt;<argument><name pos:line="75" pos:column="35">RouteModel</name></argument>&gt;</argument_list></name><argument_list pos:line="75" pos:column="46">()</argument_list></call></expr></init></decl>;</decl_stmt>
            
            <using pos:line="77" pos:column="13">using (<expr><call><name><name pos:line="77" pos:column="20">System</name><op:operator pos:line="77" pos:column="26">.</op:operator><name pos:line="77" pos:column="27">Web</name><op:operator pos:line="77" pos:column="30">.</op:operator><name pos:line="77" pos:column="31">Routing</name><op:operator pos:line="77" pos:column="38">.</op:operator><name pos:line="77" pos:column="39">RouteTable</name><op:operator pos:line="77" pos:column="49">.</op:operator><name pos:line="77" pos:column="50">Routes</name><op:operator pos:line="77" pos:column="56">.</op:operator><name pos:line="77" pos:column="57">GetReadLock</name></name><argument_list pos:line="77" pos:column="68">()</argument_list></call></expr>)
            <block pos:line="78" pos:column="13">{
                <foreach pos:line="79" pos:column="17">foreach (<init><decl><type><name pos:line="79" pos:column="26">var</name></type> <name pos:line="79" pos:column="30">routeBase</name> <range pos:line="79" pos:column="40">in <expr><name><name pos:line="79" pos:column="43">System</name><op:operator pos:line="79" pos:column="49">.</op:operator><name pos:line="79" pos:column="50">Web</name><op:operator pos:line="79" pos:column="53">.</op:operator><name pos:line="79" pos:column="54">Routing</name><op:operator pos:line="79" pos:column="61">.</op:operator><name pos:line="79" pos:column="62">RouteTable</name><op:operator pos:line="79" pos:column="72">.</op:operator><name pos:line="79" pos:column="73">Routes</name></name></expr></range></decl></init>)
                <block pos:line="80" pos:column="17">{
                    <if pos:line="81" pos:column="21">if <condition pos:line="81" pos:column="24">(<expr><call><name><name pos:line="81" pos:column="25">routeBase</name><op:operator pos:line="81" pos:column="34">.</op:operator><name pos:line="81" pos:column="35">GetType</name></name><argument_list pos:line="81" pos:column="42">()</argument_list></call><op:operator pos:line="81" pos:column="44">.</op:operator><call><name pos:line="81" pos:column="45">ToString</name><argument_list pos:line="81" pos:column="53">()</argument_list></call> <op:operator pos:line="81" pos:column="56">==</op:operator> <lit:literal type="string" pos:line="81" pos:column="59">"System.Web.Mvc.Routing.LinkGenerationRoute"</lit:literal></expr>)</condition><then pos:line="81" pos:column="104">
                    <block pos:line="82" pos:column="21">{
                        <continue pos:line="83" pos:column="25">continue;</continue>
                    }</block></then></if>

                    <if pos:line="86" pos:column="21">if <condition pos:line="86" pos:column="24">(<expr><call><name><name pos:line="86" pos:column="25">routeBase</name><op:operator pos:line="86" pos:column="34">.</op:operator><name pos:line="86" pos:column="35">GetType</name></name><argument_list pos:line="86" pos:column="42">()</argument_list></call><op:operator pos:line="86" pos:column="44">.</op:operator><call><name pos:line="86" pos:column="45">ToString</name><argument_list pos:line="86" pos:column="53">()</argument_list></call> <op:operator pos:line="86" pos:column="56">==</op:operator> <lit:literal type="string" pos:line="86" pos:column="59">"System.Web.Mvc.Routing.RouteCollectionRoute"</lit:literal></expr>)</condition><then pos:line="86" pos:column="105">
                    <block pos:line="87" pos:column="21">{
                        <comment type="line" pos:line="88" pos:column="25">// This catches any routing that has been defined using Attribute Based Routing</comment>
                        <comment type="line" pos:line="89" pos:column="25">// System.Web.Http.Routing.RouteCollectionRoute is a collection of HttpRoutes</comment>

                        <decl_stmt><decl><type><name pos:line="91" pos:column="25">var</name></type> <name pos:line="91" pos:column="29">subRoutes</name> <init pos:line="91" pos:column="39">= <expr><call><name><name pos:line="91" pos:column="41">routeBase</name><op:operator pos:line="91" pos:column="50">.</op:operator><name pos:line="91" pos:column="51">GetType</name></name><argument_list pos:line="91" pos:column="58">()</argument_list></call><op:operator pos:line="91" pos:column="60">.</op:operator><call><name pos:line="91" pos:column="61">GetField</name><argument_list pos:line="91" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="91" pos:column="70">"_subRoutes"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="84">BindingFlags</name><op:operator pos:line="91" pos:column="96">.</op:operator><name pos:line="91" pos:column="97">NonPublic</name></name> <op:operator pos:line="91" pos:column="107">|</op:operator> <name><name pos:line="91" pos:column="109">BindingFlags</name><op:operator pos:line="91" pos:column="121">.</op:operator><name pos:line="91" pos:column="122">Instance</name></name></expr></argument>)</argument_list></call><op:operator pos:line="91" pos:column="131">.</op:operator><call><name pos:line="91" pos:column="132">GetValue</name><argument_list pos:line="91" pos:column="140">(<argument><expr><name pos:line="91" pos:column="141">routeBase</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="92" pos:column="25">var</name></type> <name pos:line="92" pos:column="29">_routes</name> <init pos:line="92" pos:column="37">= <expr><op:operator pos:line="92" pos:column="39">(</op:operator><name><name pos:line="92" pos:column="40">IList</name><argument_list pos:line="92" pos:column="45">&lt;<argument><name><name pos:line="92" pos:column="46">System</name><op:operator pos:line="92" pos:column="52">.</op:operator><name pos:line="92" pos:column="53">Web</name><op:operator pos:line="92" pos:column="56">.</op:operator><name pos:line="92" pos:column="57">Routing</name><op:operator pos:line="92" pos:column="64">.</op:operator><name pos:line="92" pos:column="65">Route</name></name></argument>&gt;</argument_list></name><op:operator pos:line="92" pos:column="71">)</op:operator><call><name><name pos:line="92" pos:column="72">subRoutes</name><op:operator pos:line="92" pos:column="81">.</op:operator><name pos:line="92" pos:column="82">GetType</name></name><argument_list pos:line="92" pos:column="89">()</argument_list></call><op:operator pos:line="92" pos:column="91">.</op:operator><call><name pos:line="92" pos:column="92">GetField</name><argument_list pos:line="92" pos:column="100">(<argument><expr><lit:literal type="string" pos:line="92" pos:column="101">"_routes"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="112">BindingFlags</name><op:operator pos:line="92" pos:column="124">.</op:operator><name pos:line="92" pos:column="125">NonPublic</name></name> <op:operator pos:line="92" pos:column="135">|</op:operator> <name><name pos:line="92" pos:column="137">BindingFlags</name><op:operator pos:line="92" pos:column="149">.</op:operator><name pos:line="92" pos:column="150">Instance</name></name></expr></argument>)</argument_list></call><op:operator pos:line="92" pos:column="159">.</op:operator><call><name pos:line="92" pos:column="160">GetValue</name><argument_list pos:line="92" pos:column="168">(<argument><expr><name pos:line="92" pos:column="169">subRoutes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <for pos:line="94" pos:column="25">for (<init><decl><type><name pos:line="94" pos:column="30">var</name></type> <name pos:line="94" pos:column="34">i</name> <init pos:line="94" pos:column="36">= <expr><lit:literal type="number" pos:line="94" pos:column="38">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="94" pos:column="41">i</name> <op:operator pos:line="94" pos:column="43">&lt;</op:operator> <name><name pos:line="94" pos:column="45">_routes</name><op:operator pos:line="94" pos:column="52">.</op:operator><name pos:line="94" pos:column="53">Count</name></name></expr>;</condition> <incr><expr><name pos:line="94" pos:column="60">i</name><op:operator pos:line="94" pos:column="61">++</op:operator></expr></incr>)
                        <block pos:line="95" pos:column="25">{
                            <decl_stmt><decl><type><name pos:line="96" pos:column="29">var</name></type> <name pos:line="96" pos:column="33">routeModel</name> <init pos:line="96" pos:column="44">= <expr><call><name pos:line="96" pos:column="46">GetRouteModelForRoute</name><argument_list pos:line="96" pos:column="67">(<argument><expr><name pos:line="96" pos:column="68">context</name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="77">_routes</name><index pos:line="96" pos:column="84">[<expr><name pos:line="96" pos:column="85">i</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="89">routeMessages</name></expr></argument>, <argument><expr><name pos:line="96" pos:column="104">constraintMessages</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                            <expr_stmt><expr><call><name><name pos:line="97" pos:column="29">result</name><op:operator pos:line="97" pos:column="35">.</op:operator><name pos:line="97" pos:column="36">Add</name></name><argument_list pos:line="97" pos:column="39">(<argument><expr><name pos:line="97" pos:column="40">routeModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></for>
                    }</block></then>
                    <else pos:line="100" pos:column="21">else
                    <block pos:line="101" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="102" pos:column="25">var</name></type> <name pos:line="102" pos:column="29">routeModel</name> <init pos:line="102" pos:column="40">= <expr><call><name pos:line="102" pos:column="42">GetRouteModelForRoute</name><argument_list pos:line="102" pos:column="63">(<argument><expr><name pos:line="102" pos:column="64">context</name></expr></argument>, <argument><expr><name pos:line="102" pos:column="73">routeBase</name></expr></argument>, <argument><expr><name pos:line="102" pos:column="84">routeMessages</name></expr></argument>, <argument><expr><name pos:line="102" pos:column="99">constraintMessages</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt><expr><call><name><name pos:line="104" pos:column="25">result</name><op:operator pos:line="104" pos:column="31">.</op:operator><name pos:line="104" pos:column="32">Add</name></name><argument_list pos:line="104" pos:column="35">(<argument><expr><name pos:line="104" pos:column="36">routeModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></else></if>
                }</block></foreach>
            }</block></using>

            <return pos:line="109" pos:column="13">return <expr><name pos:line="109" pos:column="20">result</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="112" pos:column="9">private</specifier> <specifier pos:line="112" pos:column="17">static</specifier> <name pos:line="112" pos:column="24">TSource</name></type> <name><name pos:line="112" pos:column="32">SafeFirstOrDefault</name><argument_list pos:line="112" pos:column="50">&lt;<argument><name pos:line="112" pos:column="51">TSource</name></argument>&gt;</argument_list></name><parameter_list pos:line="112" pos:column="59">(<param><decl><type><name><name pos:line="112" pos:column="60">IEnumerable</name><argument_list pos:line="112" pos:column="71">&lt;<argument><name pos:line="112" pos:column="72">TSource</name></argument>&gt;</argument_list></name></type> <name pos:line="112" pos:column="81">source</name></decl></param>)</parameter_list>
        <block pos:line="113" pos:column="9">{
            <if pos:line="114" pos:column="13">if <condition pos:line="114" pos:column="16">(<expr><name pos:line="114" pos:column="17">source</name> <op:operator pos:line="114" pos:column="24">==</op:operator> <name pos:line="114" pos:column="27">null</name></expr>)</condition><then pos:line="114" pos:column="32">
            <block pos:line="115" pos:column="13">{
                <return pos:line="116" pos:column="17">return <expr><call><name pos:line="116" pos:column="24">default</name><argument_list pos:line="116" pos:column="31">(<argument><expr><name pos:line="116" pos:column="32">TSource</name></expr></argument>)</argument_list></call></expr>;</return>
            }</block></then></if>

            <return pos:line="119" pos:column="13">return <expr><call><name><name pos:line="119" pos:column="20">source</name><op:operator pos:line="119" pos:column="26">.</op:operator><name pos:line="119" pos:column="27">FirstOrDefault</name></name><argument_list pos:line="119" pos:column="41">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="122" pos:column="9">private</specifier> <name><name pos:line="122" pos:column="17">Dictionary</name><argument_list pos:line="122" pos:column="27">&lt;<argument><name pos:line="122" pos:column="28">int</name></argument>, <argument><name><name pos:line="122" pos:column="33">List</name><argument_list pos:line="122" pos:column="37">&lt;<argument><name pos:line="122" pos:column="38">RouteDataMessage</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:line="122" pos:column="57">ProcessMessages</name><parameter_list pos:line="122" pos:column="72">(<param><decl><type><name><name pos:line="122" pos:column="73">IEnumerable</name><argument_list pos:line="122" pos:column="84">&lt;<argument><name pos:line="122" pos:column="85">RouteDataMessage</name></argument>&gt;</argument_list></name></type> <name pos:line="122" pos:column="103">messages</name></decl></param>)</parameter_list>
        <block pos:line="123" pos:column="9">{ 
            <if pos:line="124" pos:column="13">if <condition pos:line="124" pos:column="16">(<expr><name pos:line="124" pos:column="17">messages</name> <op:operator pos:line="124" pos:column="26">==</op:operator> <name pos:line="124" pos:column="29">null</name></expr>)</condition><then pos:line="124" pos:column="34">
            <block pos:line="125" pos:column="13">{
                <return pos:line="126" pos:column="17">return <expr><op:operator pos:line="126" pos:column="24">new</op:operator> <call><name><name pos:line="126" pos:column="28">Dictionary</name><argument_list pos:line="126" pos:column="38">&lt;<argument><name pos:line="126" pos:column="39">int</name></argument>, <argument><name><name pos:line="126" pos:column="44">List</name><argument_list pos:line="126" pos:column="48">&lt;<argument><name pos:line="126" pos:column="49">RouteDataMessage</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list pos:line="126" pos:column="67">()</argument_list></call></expr>;</return>
            }</block></then></if>

            <return pos:line="129" pos:column="13">return <expr><call><name><name pos:line="129" pos:column="20">messages</name><op:operator pos:line="129" pos:column="28">.</op:operator><name pos:line="129" pos:column="29">GroupBy</name></name><argument_list pos:line="129" pos:column="36">(<argument><expr><lambda><name pos:line="129" pos:column="37">x</name> <op:operator pos:line="129" pos:column="39">=&gt;</op:operator> <name><name pos:line="129" pos:column="42">x</name><op:operator pos:line="129" pos:column="43">.</op:operator><name pos:line="129" pos:column="44">RouteHashCode</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="129" pos:column="58">.</op:operator><call><name pos:line="129" pos:column="59">ToDictionary</name><argument_list pos:line="129" pos:column="71">(<argument><expr><lambda><name pos:line="129" pos:column="72">x</name> <op:operator pos:line="129" pos:column="74">=&gt;</op:operator> <name><name pos:line="129" pos:column="77">x</name><op:operator pos:line="129" pos:column="78">.</op:operator><name pos:line="129" pos:column="79">Key</name></name></lambda></expr></argument>, <argument><expr><lambda><name pos:line="129" pos:column="84">x</name> <op:operator pos:line="129" pos:column="86">=&gt;</op:operator> <call><name><name pos:line="129" pos:column="89">x</name><op:operator pos:line="129" pos:column="90">.</op:operator><name pos:line="129" pos:column="91">ToList</name></name><argument_list pos:line="129" pos:column="97">()</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="132" pos:column="9">private</specifier> <name><name pos:line="132" pos:column="17">Dictionary</name><argument_list pos:line="132" pos:column="27">&lt;<argument><name pos:line="132" pos:column="28">int</name></argument>, <argument><name><name pos:line="132" pos:column="33">Dictionary</name><argument_list pos:line="132" pos:column="43">&lt;<argument><name pos:line="132" pos:column="44">int</name></argument>, <argument><name><name pos:line="132" pos:column="49">List</name><argument_list pos:line="132" pos:column="53">&lt;<argument><name pos:line="132" pos:column="54">ProcessConstraintMessage</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:line="132" pos:column="82">ProcessMessages</name><parameter_list pos:line="132" pos:column="97">(<param><decl><type><name><name pos:line="132" pos:column="98">IEnumerable</name><argument_list pos:line="132" pos:column="109">&lt;<argument><name pos:line="132" pos:column="110">ProcessConstraintMessage</name></argument>&gt;</argument_list></name></type> <name pos:line="132" pos:column="136">messages</name></decl></param>)</parameter_list>
        <block pos:line="133" pos:column="9">{
            <if pos:line="134" pos:column="13">if <condition pos:line="134" pos:column="16">(<expr><name pos:line="134" pos:column="17">messages</name> <op:operator pos:line="134" pos:column="26">==</op:operator> <name pos:line="134" pos:column="29">null</name></expr>)</condition><then pos:line="134" pos:column="34">
            <block pos:line="135" pos:column="13">{
                <return pos:line="136" pos:column="17">return <expr><op:operator pos:line="136" pos:column="24">new</op:operator> <call><name><name pos:line="136" pos:column="28">Dictionary</name><argument_list pos:line="136" pos:column="38">&lt;<argument><name pos:line="136" pos:column="39">int</name></argument>, <argument><name><name pos:line="136" pos:column="44">Dictionary</name><argument_list pos:line="136" pos:column="54">&lt;<argument><name pos:line="136" pos:column="55">int</name></argument>, <argument><name><name pos:line="136" pos:column="60">List</name><argument_list pos:line="136" pos:column="64">&lt;<argument><name pos:line="136" pos:column="65">ProcessConstraintMessage</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list pos:line="136" pos:column="92">()</argument_list></call></expr>;</return>
            }</block></then></if>

            <return pos:line="139" pos:column="13">return <expr><call><name><name pos:line="139" pos:column="20">messages</name><op:operator pos:line="139" pos:column="28">.</op:operator><name pos:line="139" pos:column="29">GroupBy</name></name><argument_list pos:line="139" pos:column="36">(<argument><expr><lambda><name pos:line="139" pos:column="37">x</name> <op:operator pos:line="139" pos:column="39">=&gt;</op:operator> <name><name pos:line="139" pos:column="42">x</name><op:operator pos:line="139" pos:column="43">.</op:operator><name pos:line="139" pos:column="44">RouteHashCode</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="139" pos:column="58">.</op:operator><call><name pos:line="139" pos:column="59">ToDictionary</name><argument_list pos:line="139" pos:column="71">(<argument><expr><lambda><name pos:line="139" pos:column="72">x</name> <op:operator pos:line="139" pos:column="74">=&gt;</op:operator> <name><name pos:line="139" pos:column="77">x</name><op:operator pos:line="139" pos:column="78">.</op:operator><name pos:line="139" pos:column="79">Key</name></name></lambda></expr></argument>, <argument><expr><lambda><name pos:line="139" pos:column="84">x</name> <op:operator pos:line="139" pos:column="86">=&gt;</op:operator> <call><name><name pos:line="139" pos:column="89">x</name><op:operator pos:line="139" pos:column="90">.</op:operator><name pos:line="139" pos:column="91">ToList</name></name><argument_list pos:line="139" pos:column="97">()</argument_list></call><op:operator pos:line="139" pos:column="99">.</op:operator><call><name pos:line="139" pos:column="100">GroupBy</name><argument_list pos:line="139" pos:column="107">(<argument><expr><lambda><name pos:line="139" pos:column="108">y</name> <op:operator pos:line="139" pos:column="110">=&gt;</op:operator> <name><name pos:line="139" pos:column="113">y</name><op:operator pos:line="139" pos:column="114">.</op:operator><name pos:line="139" pos:column="115">ConstraintHashCode</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="139" pos:column="134">.</op:operator><call><name pos:line="139" pos:column="135">ToDictionary</name><argument_list pos:line="139" pos:column="147">(<argument><expr><lambda><name pos:line="139" pos:column="148">y</name> <op:operator pos:line="139" pos:column="150">=&gt;</op:operator> <name><name pos:line="139" pos:column="153">y</name><op:operator pos:line="139" pos:column="154">.</op:operator><name pos:line="139" pos:column="155">Key</name></name></lambda></expr></argument>, <argument><expr><lambda><name pos:line="139" pos:column="160">y</name> <op:operator pos:line="139" pos:column="162">=&gt;</op:operator> <call><name><name pos:line="139" pos:column="165">y</name><op:operator pos:line="139" pos:column="166">.</op:operator><name pos:line="139" pos:column="167">ToList</name></name><argument_list pos:line="139" pos:column="173">()</argument_list></call></lambda></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="142" pos:column="9">private</specifier> <name pos:line="142" pos:column="17">RouteModel</name></type> <name pos:line="142" pos:column="28">GetRouteModelForRoute</name><parameter_list pos:line="142" pos:column="49">(<param><decl><type><name pos:line="142" pos:column="50">ITabContext</name></type> <name pos:line="142" pos:column="62">context</name></decl></param>, <param><decl><type><name pos:line="142" pos:column="71">MvcRouteBase</name></type> <name pos:line="142" pos:column="84">routeBase</name></decl></param>, <param><decl><type><name><name pos:line="142" pos:column="95">Dictionary</name><argument_list pos:line="142" pos:column="105">&lt;<argument><name pos:line="142" pos:column="106">int</name></argument>, <argument><name><name pos:line="142" pos:column="111">List</name><argument_list pos:line="142" pos:column="115">&lt;<argument><name pos:line="142" pos:column="116">RouteDataMessage</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:line="142" pos:column="135">routeMessages</name></decl></param>, <param><decl><type><name><name pos:line="142" pos:column="150">Dictionary</name><argument_list pos:line="142" pos:column="160">&lt;<argument><name pos:line="142" pos:column="161">int</name></argument>, <argument><name><name pos:line="142" pos:column="166">Dictionary</name><argument_list pos:line="142" pos:column="176">&lt;<argument><name pos:line="142" pos:column="177">int</name></argument>, <argument><name><name pos:line="142" pos:column="182">List</name><argument_list pos:line="142" pos:column="186">&lt;<argument><name pos:line="142" pos:column="187">ProcessConstraintMessage</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:line="142" pos:column="215">constraintMessages</name></decl></param>)</parameter_list>
        <block pos:line="143" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="144" pos:column="13">var</name></type> <name pos:line="144" pos:column="17">routeModel</name> <init pos:line="144" pos:column="28">= <expr><op:operator pos:line="144" pos:column="30">new</op:operator> <call><name pos:line="144" pos:column="34">RouteModel</name><argument_list pos:line="144" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="146" pos:column="13">var</name></type> <name pos:line="146" pos:column="17">routeMessage</name> <init pos:line="146" pos:column="30">= <expr><call><name pos:line="146" pos:column="32">SafeFirstOrDefault</name><argument_list pos:line="146" pos:column="50">(<argument><expr><call><name><name pos:line="146" pos:column="51">routeMessages</name><op:operator pos:line="146" pos:column="64">.</op:operator><name pos:line="146" pos:column="65">GetValueOrDefault</name></name><argument_list pos:line="146" pos:column="82">(<argument><expr><call><name><name pos:line="146" pos:column="83">routeBase</name><op:operator pos:line="146" pos:column="92">.</op:operator><name pos:line="146" pos:column="93">GetHashCode</name></name><argument_list pos:line="146" pos:column="104">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="147" pos:column="13">if <condition pos:line="147" pos:column="16">(<expr><name pos:line="147" pos:column="17">routeMessage</name> <op:operator pos:line="147" pos:column="30">!=</op:operator> <name pos:line="147" pos:column="33">null</name></expr>)</condition><then pos:line="147" pos:column="38">
            <block pos:line="148" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="149" pos:column="17">routeModel</name><op:operator pos:line="149" pos:column="27">.</op:operator><name pos:line="149" pos:column="28">Duration</name></name> <op:operator pos:line="149" pos:column="37">=</op:operator> <name><name pos:line="149" pos:column="39">routeMessage</name><op:operator pos:line="149" pos:column="51">.</op:operator><name pos:line="149" pos:column="52">Duration</name></name></expr>;</expr_stmt> 
                <expr_stmt><expr><name><name pos:line="150" pos:column="17">routeModel</name><op:operator pos:line="150" pos:column="27">.</op:operator><name pos:line="150" pos:column="28">IsMatch</name></name> <op:operator pos:line="150" pos:column="36">=</op:operator> <name><name pos:line="150" pos:column="38">routeMessage</name><op:operator pos:line="150" pos:column="50">.</op:operator><name pos:line="150" pos:column="51">IsMatch</name></name></expr>;</expr_stmt>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="153" pos:column="13">var</name></type> <name pos:line="153" pos:column="17">route</name> <init pos:line="153" pos:column="23">= <expr><name pos:line="153" pos:column="25">routeBase</name> <op:operator pos:line="153" pos:column="35">as</op:operator> <name pos:line="153" pos:column="38">MvcRoute</name></expr></init></decl>;</decl_stmt>
            <if pos:line="154" pos:column="13">if <condition pos:line="154" pos:column="16">(<expr><name pos:line="154" pos:column="17">route</name> <op:operator pos:line="154" pos:column="23">!=</op:operator> <name pos:line="154" pos:column="26">null</name></expr>)</condition><then pos:line="154" pos:column="31">
            <block pos:line="155" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="156" pos:column="17">routeModel</name><op:operator pos:line="156" pos:column="27">.</op:operator><name pos:line="156" pos:column="28">Area</name></name> <op:operator pos:line="156" pos:column="33">=</op:operator> <op:operator pos:line="156" pos:column="35">(</op:operator><name><name pos:line="156" pos:column="36">route</name><op:operator pos:line="156" pos:column="41">.</op:operator><name pos:line="156" pos:column="42">DataTokens</name></name> <op:operator pos:line="156" pos:column="53">!=</op:operator> <name pos:line="156" pos:column="56">null</name> <op:operator pos:line="156" pos:column="61">&amp;&amp;</op:operator> <call><name><name pos:line="156" pos:column="64">route</name><op:operator pos:line="156" pos:column="69">.</op:operator><name pos:line="156" pos:column="70">DataTokens</name><op:operator pos:line="156" pos:column="80">.</op:operator><name pos:line="156" pos:column="81">ContainsKey</name></name><argument_list pos:line="156" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="156" pos:column="93">"area"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="156" pos:column="100">)</op:operator> <op:operator pos:line="156" pos:column="102">?</op:operator> <name><name pos:line="156" pos:column="104">route</name><op:operator pos:line="156" pos:column="109">.</op:operator><name pos:line="156" pos:column="110">DataTokens</name><index pos:line="156" pos:column="120">[<expr><lit:literal type="string" pos:line="156" pos:column="121">"area"</lit:literal></expr>]</index></name><op:operator pos:line="156" pos:column="128">.</op:operator><call><name pos:line="156" pos:column="129">ToString</name><argument_list pos:line="156" pos:column="137">()</argument_list></call> <op:operator pos:line="156" pos:column="140">:</op:operator> <name pos:line="156" pos:column="142">null</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="157" pos:column="17">routeModel</name><op:operator pos:line="157" pos:column="27">.</op:operator><name pos:line="157" pos:column="28">Url</name></name> <op:operator pos:line="157" pos:column="32">=</op:operator> <name><name pos:line="157" pos:column="34">route</name><op:operator pos:line="157" pos:column="39">.</op:operator><name pos:line="157" pos:column="40">Url</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="158" pos:column="17">routeModel</name><op:operator pos:line="158" pos:column="27">.</op:operator><name pos:line="158" pos:column="28">RouteData</name></name> <op:operator pos:line="158" pos:column="38">=</op:operator> <call><name pos:line="158" pos:column="40">ProcessRouteData</name><argument_list pos:line="158" pos:column="56">(<argument><expr><name><name pos:line="158" pos:column="57">route</name><op:operator pos:line="158" pos:column="62">.</op:operator><name pos:line="158" pos:column="63">Defaults</name></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="73">routeMessage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="159" pos:column="17">routeModel</name><op:operator pos:line="159" pos:column="27">.</op:operator><name pos:line="159" pos:column="28">Constraints</name></name> <op:operator pos:line="159" pos:column="40">=</op:operator> <call><name pos:line="159" pos:column="42">ProcessConstraints</name><argument_list pos:line="159" pos:column="60">(<argument><expr><name pos:line="159" pos:column="61">context</name></expr></argument>, <argument><expr><name pos:line="159" pos:column="70">route</name></expr></argument>, <argument><expr><name pos:line="159" pos:column="77">constraintMessages</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="160" pos:column="17">routeModel</name><op:operator pos:line="160" pos:column="27">.</op:operator><name pos:line="160" pos:column="28">DataTokens</name></name> <op:operator pos:line="160" pos:column="39">=</op:operator> <call><name pos:line="160" pos:column="41">ProcessDataTokens</name><argument_list pos:line="160" pos:column="58">(<argument><expr><name><name pos:line="160" pos:column="59">route</name><op:operator pos:line="160" pos:column="64">.</op:operator><name pos:line="160" pos:column="65">DataTokens</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="162" pos:column="13">else
            <block pos:line="163" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="164" pos:column="17">routeModel</name><op:operator pos:line="164" pos:column="27">.</op:operator><name pos:line="164" pos:column="28">Url</name></name> <op:operator pos:line="164" pos:column="32">=</op:operator> <call><name><name pos:line="164" pos:column="34">routeBase</name><op:operator pos:line="164" pos:column="43">.</op:operator><name pos:line="164" pos:column="44">ToString</name></name><argument_list pos:line="164" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>

            <decl_stmt><decl><type><name pos:line="167" pos:column="13">var</name></type> <name pos:line="167" pos:column="17">routeName</name> <init pos:line="167" pos:column="27">= <expr><name pos:line="167" pos:column="29">routeBase</name> <op:operator pos:line="167" pos:column="39">as</op:operator> <name pos:line="167" pos:column="42">IRouteNameMixin</name></expr></init></decl>;</decl_stmt>
            <if pos:line="168" pos:column="13">if <condition pos:line="168" pos:column="16">(<expr><name pos:line="168" pos:column="17">routeName</name> <op:operator pos:line="168" pos:column="27">!=</op:operator> <name pos:line="168" pos:column="30">null</name></expr>)</condition><then pos:line="168" pos:column="35">
            <block pos:line="169" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="170" pos:column="17">routeModel</name><op:operator pos:line="170" pos:column="27">.</op:operator><name pos:line="170" pos:column="28">Name</name></name> <op:operator pos:line="170" pos:column="33">=</op:operator> <name><name pos:line="170" pos:column="35">routeName</name><op:operator pos:line="170" pos:column="44">.</op:operator><name pos:line="170" pos:column="45">Name</name></name></expr>;</expr_stmt>
            }</block></then></if>

            <return pos:line="173" pos:column="13">return <expr><name pos:line="173" pos:column="20">routeModel</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="176" pos:column="9">private</specifier> <name><name pos:line="176" pos:column="17">IEnumerable</name><argument_list pos:line="176" pos:column="28">&lt;<argument><name pos:line="176" pos:column="29">RouteDataItemModel</name></argument>&gt;</argument_list></name></type> <name pos:line="176" pos:column="49">ProcessRouteData</name><parameter_list pos:line="176" pos:column="65">(<param><decl><type><name pos:line="176" pos:column="66">MvcRouteValueDictionary</name></type> <name pos:line="176" pos:column="90">dataDefaults</name></decl></param>, <param><decl><type><name pos:line="176" pos:column="104">RouteDataMessage</name></type> <name pos:line="176" pos:column="121">routeMessage</name></decl></param>)</parameter_list>
        <block pos:line="177" pos:column="9">{
            <if pos:line="178" pos:column="13">if <condition pos:line="178" pos:column="16">(<expr><name pos:line="178" pos:column="17">dataDefaults</name> <op:operator pos:line="178" pos:column="30">==</op:operator> <name pos:line="178" pos:column="33">null</name> <op:operator pos:line="178" pos:column="38">||</op:operator> <name><name pos:line="178" pos:column="41">dataDefaults</name><op:operator pos:line="178" pos:column="53">.</op:operator><name pos:line="178" pos:column="54">Count</name></name> <op:operator pos:line="178" pos:column="60">==</op:operator> <lit:literal type="number" pos:line="178" pos:column="63">0</lit:literal></expr>)</condition><then pos:line="178" pos:column="65">
            <block pos:line="179" pos:column="13">{
                <return pos:line="180" pos:column="17">return <expr><name pos:line="180" pos:column="24">null</name></expr>;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="183" pos:column="13">var</name></type> <name pos:line="183" pos:column="17">routeData</name> <init pos:line="183" pos:column="27">= <expr><op:operator pos:line="183" pos:column="29">new</op:operator> <call><name><name pos:line="183" pos:column="33">List</name><argument_list pos:line="183" pos:column="37">&lt;<argument><name pos:line="183" pos:column="38">RouteDataItemModel</name></argument>&gt;</argument_list></name><argument_list pos:line="183" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="184" pos:column="13">foreach (<init><decl><type><name pos:line="184" pos:column="22">var</name></type> <name pos:line="184" pos:column="26">dataDefault</name> <range pos:line="184" pos:column="38">in <expr><name pos:line="184" pos:column="41">dataDefaults</name></expr></range></decl></init>)
            <block pos:line="185" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="186" pos:column="17">var</name></type> <name pos:line="186" pos:column="21">routeDataItemModel</name> <init pos:line="186" pos:column="40">= <expr><op:operator pos:line="186" pos:column="42">new</op:operator> <call><name pos:line="186" pos:column="46">RouteDataItemModel</name><argument_list pos:line="186" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="187" pos:column="17">routeDataItemModel</name><op:operator pos:line="187" pos:column="35">.</op:operator><name pos:line="187" pos:column="36">PlaceHolder</name></name> <op:operator pos:line="187" pos:column="48">=</op:operator> <name><name pos:line="187" pos:column="50">dataDefault</name><op:operator pos:line="187" pos:column="61">.</op:operator><name pos:line="187" pos:column="62">Key</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="188" pos:column="17">routeDataItemModel</name><op:operator pos:line="188" pos:column="35">.</op:operator><name pos:line="188" pos:column="36">DefaultValue</name></name> <op:operator pos:line="188" pos:column="49">=</op:operator> <name><name pos:line="188" pos:column="51">dataDefault</name><op:operator pos:line="188" pos:column="62">.</op:operator><name pos:line="188" pos:column="63">Value</name></name></expr>;</expr_stmt>

                <if pos:line="190" pos:column="17">if <condition pos:line="190" pos:column="20">(<expr><name pos:line="190" pos:column="21">routeMessage</name> <op:operator pos:line="190" pos:column="34">!=</op:operator> <name pos:line="190" pos:column="37">null</name> <op:operator pos:line="190" pos:column="42">&amp;&amp;</op:operator> <name><name pos:line="190" pos:column="45">routeMessage</name><op:operator pos:line="190" pos:column="57">.</op:operator><name pos:line="190" pos:column="58">Values</name></name> <op:operator pos:line="190" pos:column="65">!=</op:operator> <name pos:line="190" pos:column="68">null</name></expr>)</condition><then pos:line="190" pos:column="73">
                <block pos:line="191" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="192" pos:column="21">routeDataItemModel</name><op:operator pos:line="192" pos:column="39">.</op:operator><name pos:line="192" pos:column="40">ActualValue</name></name> <op:operator pos:line="192" pos:column="52">=</op:operator> <name><name pos:line="192" pos:column="54">routeMessage</name><op:operator pos:line="192" pos:column="66">.</op:operator><name pos:line="192" pos:column="67">Values</name><index pos:line="192" pos:column="73">[<expr><name><name pos:line="192" pos:column="74">dataDefault</name><op:operator pos:line="192" pos:column="85">.</op:operator><name pos:line="192" pos:column="86">Key</name></name></expr>]</index></name></expr>;</expr_stmt>
                }</block></then></if>

                <expr_stmt><expr><call><name><name pos:line="195" pos:column="17">routeData</name><op:operator pos:line="195" pos:column="26">.</op:operator><name pos:line="195" pos:column="27">Add</name></name><argument_list pos:line="195" pos:column="30">(<argument><expr><name pos:line="195" pos:column="31">routeDataItemModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

            <return pos:line="198" pos:column="13">return <expr><name pos:line="198" pos:column="20">routeData</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="201" pos:column="9">private</specifier> <name><name pos:line="201" pos:column="17">IEnumerable</name><argument_list pos:line="201" pos:column="28">&lt;<argument><name pos:line="201" pos:column="29">RouteConstraintModel</name></argument>&gt;</argument_list></name></type> <name pos:line="201" pos:column="51">ProcessConstraints</name><parameter_list pos:line="201" pos:column="69">(<param><decl><type><name pos:line="201" pos:column="70">ITabContext</name></type> <name pos:line="201" pos:column="82">context</name></decl></param>, <param><decl><type><name pos:line="201" pos:column="91">MvcRoute</name></type> <name pos:line="201" pos:column="100">route</name></decl></param>, <param><decl><type><name><name pos:line="201" pos:column="107">Dictionary</name><argument_list pos:line="201" pos:column="117">&lt;<argument><name pos:line="201" pos:column="118">int</name></argument>, <argument><name><name pos:line="201" pos:column="123">Dictionary</name><argument_list pos:line="201" pos:column="133">&lt;<argument><name pos:line="201" pos:column="134">int</name></argument>, <argument><name><name pos:line="201" pos:column="139">List</name><argument_list pos:line="201" pos:column="143">&lt;<argument><name pos:line="201" pos:column="144">ProcessConstraintMessage</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:line="201" pos:column="172">constraintMessages</name></decl></param>)</parameter_list>
        <block pos:line="202" pos:column="9">{
            <if pos:line="203" pos:column="13">if <condition pos:line="203" pos:column="16">(<expr><name><name pos:line="203" pos:column="17">route</name><op:operator pos:line="203" pos:column="22">.</op:operator><name pos:line="203" pos:column="23">Constraints</name></name> <op:operator pos:line="203" pos:column="35">==</op:operator> <name pos:line="203" pos:column="38">null</name> <op:operator pos:line="203" pos:column="43">||</op:operator> <name><name pos:line="203" pos:column="46">route</name><op:operator pos:line="203" pos:column="51">.</op:operator><name pos:line="203" pos:column="52">Constraints</name><op:operator pos:line="203" pos:column="63">.</op:operator><name pos:line="203" pos:column="64">Count</name></name> <op:operator pos:line="203" pos:column="70">==</op:operator> <lit:literal type="number" pos:line="203" pos:column="73">0</lit:literal></expr>)</condition><then pos:line="203" pos:column="75">
            <block pos:line="204" pos:column="13">{
                <return pos:line="205" pos:column="17">return <expr><name pos:line="205" pos:column="24">null</name></expr>;</return>
            }</block></then></if>
             
            <decl_stmt><decl><type><name pos:line="208" pos:column="13">var</name></type> <name pos:line="208" pos:column="17">counstraintRouteMessages</name> <init pos:line="208" pos:column="42">= <expr><call><name><name pos:line="208" pos:column="44">constraintMessages</name><op:operator pos:line="208" pos:column="62">.</op:operator><name pos:line="208" pos:column="63">GetValueOrDefault</name></name><argument_list pos:line="208" pos:column="80">(<argument><expr><call><name><name pos:line="208" pos:column="81">route</name><op:operator pos:line="208" pos:column="86">.</op:operator><name pos:line="208" pos:column="87">GetHashCode</name></name><argument_list pos:line="208" pos:column="98">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 

            <decl_stmt><decl><type><name pos:line="210" pos:column="13">var</name></type> <name pos:line="210" pos:column="17">result</name> <init pos:line="210" pos:column="24">= <expr><op:operator pos:line="210" pos:column="26">new</op:operator> <call><name><name pos:line="210" pos:column="30">List</name><argument_list pos:line="210" pos:column="34">&lt;<argument><name pos:line="210" pos:column="35">RouteConstraintModel</name></argument>&gt;</argument_list></name><argument_list pos:line="210" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="211" pos:column="13">foreach (<init><decl><type><name pos:line="211" pos:column="22">var</name></type> <name pos:line="211" pos:column="26">constraint</name> <range pos:line="211" pos:column="37">in <expr><name><name pos:line="211" pos:column="40">route</name><op:operator pos:line="211" pos:column="45">.</op:operator><name pos:line="211" pos:column="46">Constraints</name></name></expr></range></decl></init>)
            <block pos:line="212" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="213" pos:column="17">var</name></type> <name pos:line="213" pos:column="21">model</name> <init pos:line="213" pos:column="27">= <expr><op:operator pos:line="213" pos:column="29">new</op:operator> <call><name pos:line="213" pos:column="33">RouteConstraintModel</name><argument_list pos:line="213" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="214" pos:column="17">model</name><op:operator pos:line="214" pos:column="22">.</op:operator><name pos:line="214" pos:column="23">ParameterName</name></name> <op:operator pos:line="214" pos:column="37">=</op:operator> <name><name pos:line="214" pos:column="39">constraint</name><op:operator pos:line="214" pos:column="49">.</op:operator><name pos:line="214" pos:column="50">Key</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="215" pos:column="17">model</name><op:operator pos:line="215" pos:column="22">.</op:operator><name pos:line="215" pos:column="23">Constraint</name></name> <op:operator pos:line="215" pos:column="34">=</op:operator> <call><name><name pos:line="215" pos:column="36">constraint</name><op:operator pos:line="215" pos:column="46">.</op:operator><name pos:line="215" pos:column="47">Value</name><op:operator pos:line="215" pos:column="52">.</op:operator><name pos:line="215" pos:column="53">ToString</name></name><argument_list pos:line="215" pos:column="61">()</argument_list></call></expr>;</expr_stmt>

                <if pos:line="217" pos:column="17">if <condition pos:line="217" pos:column="20">(<expr><name pos:line="217" pos:column="21">counstraintRouteMessages</name> <op:operator pos:line="217" pos:column="46">!=</op:operator> <name pos:line="217" pos:column="49">null</name></expr>)</condition><then pos:line="217" pos:column="54">
                <block pos:line="218" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="219" pos:column="21">var</name></type> <name pos:line="219" pos:column="25">counstraintMessage</name> <init pos:line="219" pos:column="44">= <expr><call><name pos:line="219" pos:column="46">SafeFirstOrDefault</name><argument_list pos:line="219" pos:column="64">(<argument><expr><call><name><name pos:line="219" pos:column="65">counstraintRouteMessages</name><op:operator pos:line="219" pos:column="89">.</op:operator><name pos:line="219" pos:column="90">GetValueOrDefault</name></name><argument_list pos:line="219" pos:column="107">(<argument><expr><call><name><name pos:line="219" pos:column="108">constraint</name><op:operator pos:line="219" pos:column="118">.</op:operator><name pos:line="219" pos:column="119">Value</name><op:operator pos:line="219" pos:column="124">.</op:operator><name pos:line="219" pos:column="125">GetHashCode</name></name><argument_list pos:line="219" pos:column="136">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><name><name pos:line="220" pos:column="21">model</name><op:operator pos:line="220" pos:column="26">.</op:operator><name pos:line="220" pos:column="27">IsMatch</name></name> <op:operator pos:line="220" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="220" pos:column="37">false</lit:literal></expr>;</expr_stmt>
                    
                    <if pos:line="222" pos:column="21">if <condition pos:line="222" pos:column="24">(<expr><name pos:line="222" pos:column="25">counstraintMessage</name> <op:operator pos:line="222" pos:column="44">!=</op:operator> <name pos:line="222" pos:column="47">null</name></expr>)</condition><then pos:line="222" pos:column="52">
                    <block pos:line="223" pos:column="21">{
                        <expr_stmt><expr><name><name pos:line="224" pos:column="25">model</name><op:operator pos:line="224" pos:column="30">.</op:operator><name pos:line="224" pos:column="31">IsMatch</name></name> <op:operator pos:line="224" pos:column="39">=</op:operator> <name><name pos:line="224" pos:column="41">counstraintMessage</name><op:operator pos:line="224" pos:column="59">.</op:operator><name pos:line="224" pos:column="60">IsMatch</name></name></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>

                <expr_stmt><expr><call><name><name pos:line="228" pos:column="17">result</name><op:operator pos:line="228" pos:column="23">.</op:operator><name pos:line="228" pos:column="24">Add</name></name><argument_list pos:line="228" pos:column="27">(<argument><expr><name pos:line="228" pos:column="28">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

            <return pos:line="231" pos:column="13">return <expr><name pos:line="231" pos:column="20">result</name></expr>;</return>
        }</block></function>


        <function><type><specifier pos:line="235" pos:column="9">private</specifier> <name><name pos:line="235" pos:column="17">IDictionary</name><argument_list pos:line="235" pos:column="28">&lt;<argument><name pos:line="235" pos:column="29">string</name></argument>, <argument><name pos:line="235" pos:column="37">object</name></argument>&gt;</argument_list></name></type> <name pos:line="235" pos:column="45">ProcessDataTokens</name><parameter_list pos:line="235" pos:column="62">(<param><decl><type><name><name pos:line="235" pos:column="63">IDictionary</name><argument_list pos:line="235" pos:column="74">&lt;<argument><name pos:line="235" pos:column="75">string</name></argument>, <argument><name pos:line="235" pos:column="83">object</name></argument>&gt;</argument_list></name></type> <name pos:line="235" pos:column="91">dataTokens</name></decl></param>)</parameter_list>
        <block pos:line="236" pos:column="9">{
            <return pos:line="237" pos:column="13">return <expr><name pos:line="237" pos:column="20">dataTokens</name> <op:operator pos:line="237" pos:column="31">!=</op:operator> <name pos:line="237" pos:column="34">null</name> <op:operator pos:line="237" pos:column="39">&amp;&amp;</op:operator> <name><name pos:line="237" pos:column="42">dataTokens</name><op:operator pos:line="237" pos:column="52">.</op:operator><name pos:line="237" pos:column="53">Count</name></name> <op:operator pos:line="237" pos:column="59">&gt;</op:operator> <lit:literal type="number" pos:line="237" pos:column="61">0</lit:literal> <op:operator pos:line="237" pos:column="63">?</op:operator> <name pos:line="237" pos:column="65">dataTokens</name> <op:operator pos:line="237" pos:column="76">:</op:operator> <name pos:line="237" pos:column="78">null</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
