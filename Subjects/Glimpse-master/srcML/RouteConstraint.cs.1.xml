<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.AspNet\AlternateType\RouteConstraint.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Reflection</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">AspNet</name><op:operator pos:line="5" pos:column="21">.</op:operator><name pos:line="5" pos:column="22">Message</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Core</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Message</name></name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Glimpse</name><op:operator pos:line="9" pos:column="18">.</op:operator><name pos:line="9" pos:column="19">AspNet</name><op:operator pos:line="9" pos:column="25">.</op:operator><name pos:line="9" pos:column="26">AlternateType</name></name>
<block pos:line="10" pos:column="1">{
    <class><specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">RouteConstraint</name> <super pos:line="11" pos:column="34">: <name><name pos:line="11" pos:column="36">AlternateType</name><argument_list pos:line="11" pos:column="49">&lt;<argument><name><name pos:line="11" pos:column="50">System</name><op:operator pos:line="11" pos:column="56">.</op:operator><name pos:line="11" pos:column="57">Web</name><op:operator pos:line="11" pos:column="60">.</op:operator><name pos:line="11" pos:column="61">Routing</name><op:operator pos:line="11" pos:column="68">.</op:operator><name pos:line="11" pos:column="69">IRouteConstraint</name></name></argument>&gt;</argument_list></name></super>
    <block pos:line="12" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">private</specifier> <name><name pos:line="13" pos:column="17">IEnumerable</name><argument_list pos:line="13" pos:column="28">&lt;<argument><name pos:line="13" pos:column="29">IAlternateMethod</name></argument>&gt;</argument_list></name></type> <name pos:line="13" pos:column="47">allMethods</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="15" pos:column="9">public</specifier> <name pos:line="15" pos:column="16">RouteConstraint</name><parameter_list pos:line="15" pos:column="31">(<param><decl><type><name pos:line="15" pos:column="32">IProxyFactory</name></type> <name pos:line="15" pos:column="46">proxyFactory</name></decl></param>)</parameter_list>
            <member_list pos:line="16" pos:column="13">: <call><name pos:line="16" pos:column="15">base</name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">proxyFactory</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="17" pos:column="9">{
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">public</specifier> <specifier pos:line="20" pos:column="16">override</specifier> <name><name pos:line="20" pos:column="25">IEnumerable</name><argument_list pos:line="20" pos:column="36">&lt;<argument><name pos:line="20" pos:column="37">IAlternateMethod</name></argument>&gt;</argument_list></name></type> <name pos:line="20" pos:column="55">AllMethods</name>
        <block pos:line="21" pos:column="9">{
            <function><name pos:line="22" pos:column="13">get</name>
            <block pos:line="23" pos:column="13">{
                <return pos:line="24" pos:column="17">return <expr><name pos:line="24" pos:column="24">allMethods</name> <op:operator pos:line="24" pos:column="35">??</op:operator> <op:operator pos:line="24" pos:column="38">(</op:operator><name pos:line="24" pos:column="39">allMethods</name> <op:operator pos:line="24" pos:column="50">=</op:operator> <op:operator pos:line="24" pos:column="52">new</op:operator> <name><name pos:line="24" pos:column="56">List</name><argument_list pos:line="24" pos:column="60">&lt;<argument><name pos:line="24" pos:column="61">IAlternateMethod</name></argument>&gt;</argument_list></name>
                    <block pos:line="25" pos:column="21">{
                        <expr><op:operator pos:line="26" pos:column="25">new</op:operator> <call><name pos:line="26" pos:column="29">Match</name><argument_list pos:line="26" pos:column="34">()</argument_list></call></expr>
                    }</block>)</expr>;</return> 
            }</block></function>
        }</block></decl></decl_stmt>

        <class><specifier pos:line="31" pos:column="9">public</specifier> class <name pos:line="31" pos:column="22">Match</name> <super pos:line="31" pos:column="28">: <name pos:line="31" pos:column="30">AlternateMethod</name></super>
        <block pos:line="32" pos:column="9">{
            <constructor><specifier pos:line="33" pos:column="13">public</specifier> <name pos:line="33" pos:column="20">Match</name><parameter_list pos:line="33" pos:column="25">()</parameter_list>
                <member_list pos:line="34" pos:column="17">: <call><name pos:line="34" pos:column="19">base</name><argument_list pos:line="34" pos:column="23">(<argument><expr><call><name pos:line="34" pos:column="24">typeof</name><argument_list pos:line="34" pos:column="30">(<argument><expr><name><name pos:line="34" pos:column="31">System</name><op:operator pos:line="34" pos:column="37">.</op:operator><name pos:line="34" pos:column="38">Web</name><op:operator pos:line="34" pos:column="41">.</op:operator><name pos:line="34" pos:column="42">Routing</name><op:operator pos:line="34" pos:column="49">.</op:operator><name pos:line="34" pos:column="50">IRouteConstraint</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="34" pos:column="69">"Match"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="78">BindingFlags</name><op:operator pos:line="34" pos:column="90">.</op:operator><name pos:line="34" pos:column="91">Public</name></name> <op:operator pos:line="34" pos:column="98">|</op:operator> <name><name pos:line="34" pos:column="100">BindingFlags</name><op:operator pos:line="34" pos:column="112">.</op:operator><name pos:line="34" pos:column="113">Instance</name></name></expr></argument>)</argument_list></call>
            </member_list><block pos:line="35" pos:column="13">{ 
            }</block></constructor>

            <function><type><specifier pos:line="38" pos:column="13">public</specifier> <specifier pos:line="38" pos:column="20">override</specifier> <name pos:line="38" pos:column="29">void</name></type> <name pos:line="38" pos:column="34">PostImplementation</name><parameter_list pos:line="38" pos:column="52">(<param><decl><type><name pos:line="38" pos:column="53">IAlternateMethodContext</name></type> <name pos:line="38" pos:column="77">context</name></decl></param>, <param><decl><type><name pos:line="38" pos:column="86">TimerResult</name></type> <name pos:line="38" pos:column="98">timerResult</name></decl></param>)</parameter_list>
            <block pos:line="39" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="40" pos:column="17">context</name><op:operator pos:line="40" pos:column="24">.</op:operator><name pos:line="40" pos:column="25">MessageBroker</name><op:operator pos:line="40" pos:column="38">.</op:operator><name pos:line="40" pos:column="39">Publish</name></name><argument_list pos:line="40" pos:column="46">(
                    <argument><expr><op:operator pos:line="41" pos:column="21">new</op:operator> <call><name pos:line="41" pos:column="25">Message</name><argument_list pos:line="41" pos:column="32">(<argument><expr><op:operator pos:line="41" pos:column="33">new</op:operator> <call><name pos:line="41" pos:column="37">Arguments</name><argument_list pos:line="41" pos:column="46">(<argument><expr><name><name pos:line="41" pos:column="47">context</name><op:operator pos:line="41" pos:column="54">.</op:operator><name pos:line="41" pos:column="55">Arguments</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="67">context</name><op:operator pos:line="41" pos:column="74">.</op:operator><name pos:line="41" pos:column="75">InvocationTarget</name></name></expr></argument>, <argument><expr><op:operator pos:line="41" pos:column="93">(</op:operator><name pos:line="41" pos:column="94">bool</name><op:operator pos:line="41" pos:column="98">)</op:operator><name><name pos:line="41" pos:column="99">context</name><op:operator pos:line="41" pos:column="106">.</op:operator><name pos:line="41" pos:column="107">ReturnValue</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="42" pos:column="21">.</op:operator><call><name pos:line="42" pos:column="22">AsTimedMessage</name><argument_list pos:line="42" pos:column="36">(<argument><expr><name pos:line="42" pos:column="37">timerResult</name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="43" pos:column="21">.</op:operator><call><name pos:line="43" pos:column="22">AsSourceMessage</name><argument_list pos:line="43" pos:column="37">(<argument><expr><call><name><name pos:line="43" pos:column="38">context</name><op:operator pos:line="43" pos:column="45">.</op:operator><name pos:line="43" pos:column="46">InvocationTarget</name><op:operator pos:line="43" pos:column="62">.</op:operator><name pos:line="43" pos:column="63">GetType</name></name><argument_list pos:line="43" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="74">context</name><op:operator pos:line="43" pos:column="81">.</op:operator><name pos:line="43" pos:column="82">MethodInvocationTarget</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
            }</block></function>

            <class><specifier pos:line="46" pos:column="13">public</specifier> class <name pos:line="46" pos:column="26">Arguments</name>
            <block pos:line="47" pos:column="13">{
                <constructor><specifier pos:line="48" pos:column="17">public</specifier> <name pos:line="48" pos:column="24">Arguments</name><parameter_list pos:line="48" pos:column="33">(<param><decl><type><name><name pos:line="48" pos:column="34">object</name><index pos:line="48" pos:column="40">[]</index></name></type> <name pos:line="48" pos:column="43">args</name></decl></param>)</parameter_list>
                <block pos:line="49" pos:column="17">{
                    <expr_stmt><expr><name pos:line="50" pos:column="21">HttpContext</name> <op:operator pos:line="50" pos:column="33">=</op:operator> <op:operator pos:line="50" pos:column="35">(</op:operator><name pos:line="50" pos:column="36">HttpContextBase</name><op:operator pos:line="50" pos:column="51">)</op:operator><name><name pos:line="50" pos:column="52">args</name><index pos:line="50" pos:column="56">[<expr><lit:literal type="number" pos:line="50" pos:column="57">0</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="51" pos:column="21">Route</name> <op:operator pos:line="51" pos:column="27">=</op:operator> <op:operator pos:line="51" pos:column="29">(</op:operator><name><name pos:line="51" pos:column="30">System</name><op:operator pos:line="51" pos:column="36">.</op:operator><name pos:line="51" pos:column="37">Web</name><op:operator pos:line="51" pos:column="40">.</op:operator><name pos:line="51" pos:column="41">Routing</name><op:operator pos:line="51" pos:column="48">.</op:operator><name pos:line="51" pos:column="49">Route</name></name><op:operator pos:line="51" pos:column="54">)</op:operator><name><name pos:line="51" pos:column="55">args</name><index pos:line="51" pos:column="59">[<expr><lit:literal type="number" pos:line="51" pos:column="60">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="52" pos:column="21">ParameterName</name> <op:operator pos:line="52" pos:column="35">=</op:operator> <op:operator pos:line="52" pos:column="37">(</op:operator><name pos:line="52" pos:column="38">string</name><op:operator pos:line="52" pos:column="44">)</op:operator><name><name pos:line="52" pos:column="45">args</name><index pos:line="52" pos:column="49">[<expr><lit:literal type="number" pos:line="52" pos:column="50">2</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="53" pos:column="21">Values</name> <op:operator pos:line="53" pos:column="28">=</op:operator> <op:operator pos:line="53" pos:column="30">(</op:operator><name><name pos:line="53" pos:column="31">System</name><op:operator pos:line="53" pos:column="37">.</op:operator><name pos:line="53" pos:column="38">Web</name><op:operator pos:line="53" pos:column="41">.</op:operator><name pos:line="53" pos:column="42">Routing</name><op:operator pos:line="53" pos:column="49">.</op:operator><name pos:line="53" pos:column="50">RouteValueDictionary</name></name><op:operator pos:line="53" pos:column="70">)</op:operator><name><name pos:line="53" pos:column="71">args</name><index pos:line="53" pos:column="75">[<expr><lit:literal type="number" pos:line="53" pos:column="76">3</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="54" pos:column="21">RouteDirection</name> <op:operator pos:line="54" pos:column="36">=</op:operator> <op:operator pos:line="54" pos:column="38">(</op:operator><name><name pos:line="54" pos:column="39">System</name><op:operator pos:line="54" pos:column="45">.</op:operator><name pos:line="54" pos:column="46">Web</name><op:operator pos:line="54" pos:column="49">.</op:operator><name pos:line="54" pos:column="50">Routing</name><op:operator pos:line="54" pos:column="57">.</op:operator><name pos:line="54" pos:column="58">RouteDirection</name></name><op:operator pos:line="54" pos:column="72">)</op:operator><name><name pos:line="54" pos:column="73">args</name><index pos:line="54" pos:column="77">[<expr><lit:literal type="number" pos:line="54" pos:column="78">4</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                }</block></constructor>

                <decl_stmt><decl><type><specifier pos:line="57" pos:column="17">public</specifier> <name pos:line="57" pos:column="24">HttpContextBase</name></type> <name pos:line="57" pos:column="40">HttpContext</name> <block pos:line="57" pos:column="52">{ <function_decl><name pos:line="57" pos:column="54">get</name>;</function_decl> <function_decl><specifier pos:line="57" pos:column="59">private</specifier> <name pos:line="57" pos:column="67">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="59" pos:column="17">public</specifier> <name><name pos:line="59" pos:column="24">System</name><op:operator pos:line="59" pos:column="30">.</op:operator><name pos:line="59" pos:column="31">Web</name><op:operator pos:line="59" pos:column="34">.</op:operator><name pos:line="59" pos:column="35">Routing</name><op:operator pos:line="59" pos:column="42">.</op:operator><name pos:line="59" pos:column="43">Route</name></name></type> <name pos:line="59" pos:column="49">Route</name> <block pos:line="59" pos:column="55">{ <function_decl><name pos:line="59" pos:column="57">get</name>;</function_decl> <function_decl><specifier pos:line="59" pos:column="62">private</specifier> <name pos:line="59" pos:column="70">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="61" pos:column="17">public</specifier> <name pos:line="61" pos:column="24">string</name></type> <name pos:line="61" pos:column="31">ParameterName</name> <block pos:line="61" pos:column="45">{ <function_decl><name pos:line="61" pos:column="47">get</name>;</function_decl> <function_decl><specifier pos:line="61" pos:column="52">private</specifier> <name pos:line="61" pos:column="60">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="63" pos:column="17">public</specifier> <name><name pos:line="63" pos:column="24">System</name><op:operator pos:line="63" pos:column="30">.</op:operator><name pos:line="63" pos:column="31">Web</name><op:operator pos:line="63" pos:column="34">.</op:operator><name pos:line="63" pos:column="35">Routing</name><op:operator pos:line="63" pos:column="42">.</op:operator><name pos:line="63" pos:column="43">RouteValueDictionary</name></name></type> <name pos:line="63" pos:column="64">Values</name> <block pos:line="63" pos:column="71">{ <function_decl><name pos:line="63" pos:column="73">get</name>;</function_decl> <function_decl><specifier pos:line="63" pos:column="78">private</specifier> <name pos:line="63" pos:column="86">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="65" pos:column="17">public</specifier> <name><name pos:line="65" pos:column="24">System</name><op:operator pos:line="65" pos:column="30">.</op:operator><name pos:line="65" pos:column="31">Web</name><op:operator pos:line="65" pos:column="34">.</op:operator><name pos:line="65" pos:column="35">Routing</name><op:operator pos:line="65" pos:column="42">.</op:operator><name pos:line="65" pos:column="43">RouteDirection</name></name></type> <name pos:line="65" pos:column="58">RouteDirection</name> <block pos:line="65" pos:column="73">{ <function_decl><name pos:line="65" pos:column="75">get</name>;</function_decl> <function_decl><specifier pos:line="65" pos:column="80">private</specifier> <name pos:line="65" pos:column="88">set</name>;</function_decl> }</block></decl></decl_stmt>
            }</block></class>

            <class><specifier pos:line="68" pos:column="13">public</specifier> class <name pos:line="68" pos:column="26">Message</name> <super pos:line="68" pos:column="34">: <name pos:line="68" pos:column="36">ProcessConstraintMessage</name></super>
            <block pos:line="69" pos:column="13">{
                <constructor><specifier pos:line="70" pos:column="17">public</specifier> <name pos:line="70" pos:column="24">Message</name><parameter_list pos:line="70" pos:column="31">(<param><decl><type><name pos:line="70" pos:column="32">Arguments</name></type> <name pos:line="70" pos:column="42">args</name></decl></param>, <param><decl><type><name pos:line="70" pos:column="48">object</name></type> <name pos:line="70" pos:column="55">invocationTarget</name></decl></param>, <param><decl><type><name pos:line="70" pos:column="73">bool</name></type> <name pos:line="70" pos:column="78">isMatch</name></decl></param>)</parameter_list> 
                    <member_list pos:line="71" pos:column="21">: <call><name pos:line="71" pos:column="23">base</name><argument_list pos:line="71" pos:column="27">(<argument><expr><call><name><name pos:line="71" pos:column="28">args</name><op:operator pos:line="71" pos:column="32">.</op:operator><name pos:line="71" pos:column="33">Route</name><op:operator pos:line="71" pos:column="38">.</op:operator><name pos:line="71" pos:column="39">GetHashCode</name></name><argument_list pos:line="71" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="71" pos:column="54">invocationTarget</name><op:operator pos:line="71" pos:column="70">.</op:operator><name pos:line="71" pos:column="71">GetHashCode</name></name><argument_list pos:line="71" pos:column="82">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="71" pos:column="86">isMatch</name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="95">args</name><op:operator pos:line="71" pos:column="99">.</op:operator><name pos:line="71" pos:column="100">ParameterName</name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="115">invocationTarget</name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="133">args</name><op:operator pos:line="71" pos:column="137">.</op:operator><name pos:line="71" pos:column="138">Values</name></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="146">args</name><op:operator pos:line="71" pos:column="150">.</op:operator><name pos:line="71" pos:column="151">RouteDirection</name></name></expr></argument>)</argument_list></call>
                </member_list><block pos:line="72" pos:column="17">{ 
                }</block></constructor> 
            }</block></class>
        }</block></class>
    }</block></class>
}</block></namespace>
</unit>
