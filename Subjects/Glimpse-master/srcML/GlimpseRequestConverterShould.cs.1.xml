<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Core\SerializationConverter\GlimpseRequestConverterShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Framework</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">SerializationConverter</name></name>;</using>
<using pos:line="6" pos:column="1">using <name pos:line="6" pos:column="7">Moq</name>;</using>
<using pos:line="7" pos:column="1">using <name pos:line="7" pos:column="7">Xunit</name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Glimpse</name><op:operator pos:line="9" pos:column="18">.</op:operator><name pos:line="9" pos:column="19">Test</name><op:operator pos:line="9" pos:column="23">.</op:operator><name pos:line="9" pos:column="24">Core</name><op:operator pos:line="9" pos:column="28">.</op:operator><name pos:line="9" pos:column="29">SerializationConverter</name></name>
<block pos:line="10" pos:column="1">{
    <class><specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">GlimpseRequestConverterShould</name>
    <block pos:line="12" pos:column="5">{
        <function><type><attribute pos:line="13" pos:column="9">[<expr><name pos:line="13" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="14" pos:column="9">public</specifier> <name pos:line="14" pos:column="16">void</name></type> <name pos:line="14" pos:column="21">ConvertAGlimpseMetadataObject</name><parameter_list pos:line="14" pos:column="50">()</parameter_list>
        <block pos:line="15" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">var</name></type> <name pos:line="16" pos:column="17">requestMock</name> <init pos:line="16" pos:column="29">= <expr><op:operator pos:line="16" pos:column="31">new</op:operator> <call><name><name pos:line="16" pos:column="35">Mock</name><argument_list pos:line="16" pos:column="39">&lt;<argument><name pos:line="16" pos:column="40">IRequestMetadata</name></argument>&gt;</argument_list></name><argument_list pos:line="16" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="17" pos:column="13">requestMock</name><op:operator pos:line="17" pos:column="24">.</op:operator><name pos:line="17" pos:column="25">Setup</name></name><argument_list pos:line="17" pos:column="30">(<argument><expr><lambda><name pos:line="17" pos:column="31">r</name> <op:operator pos:line="17" pos:column="33">=&gt;</op:operator> <call><name><name pos:line="17" pos:column="36">r</name><op:operator pos:line="17" pos:column="37">.</op:operator><name pos:line="17" pos:column="38">GetCookie</name></name><argument_list pos:line="17" pos:column="47">(<argument><expr><name><name pos:line="17" pos:column="48">Constants</name><op:operator pos:line="17" pos:column="57">.</op:operator><name pos:line="17" pos:column="58">ClientIdCookieName</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="17" pos:column="78">.</op:operator><call><name pos:line="17" pos:column="79">Returns</name><argument_list pos:line="17" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="17" pos:column="87">"Anything"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="18" pos:column="13">requestMock</name><op:operator pos:line="18" pos:column="24">.</op:operator><name pos:line="18" pos:column="25">Setup</name></name><argument_list pos:line="18" pos:column="30">(<argument><expr><lambda><name pos:line="18" pos:column="31">r</name> <op:operator pos:line="18" pos:column="33">=&gt;</op:operator> <name><name pos:line="18" pos:column="36">r</name><op:operator pos:line="18" pos:column="37">.</op:operator><name pos:line="18" pos:column="38">RequestHttpMethod</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="18" pos:column="56">.</op:operator><call><name pos:line="18" pos:column="57">Returns</name><argument_list pos:line="18" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="18" pos:column="65">"POST"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">requestMock</name><op:operator pos:line="19" pos:column="24">.</op:operator><name pos:line="19" pos:column="25">Setup</name></name><argument_list pos:line="19" pos:column="30">(<argument><expr><lambda><name pos:line="19" pos:column="31">r</name> <op:operator pos:line="19" pos:column="33">=&gt;</op:operator> <name><name pos:line="19" pos:column="36">r</name><op:operator pos:line="19" pos:column="37">.</op:operator><name pos:line="19" pos:column="38">RequestUri</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="19" pos:column="49">.</op:operator><call><name pos:line="19" pos:column="50">Returns</name><argument_list pos:line="19" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="19" pos:column="58">"http://localhost/"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">requestMock</name><op:operator pos:line="20" pos:column="24">.</op:operator><name pos:line="20" pos:column="25">Setup</name></name><argument_list pos:line="20" pos:column="30">(<argument><expr><lambda><name pos:line="20" pos:column="31">r</name> <op:operator pos:line="20" pos:column="33">=&gt;</op:operator> <name><name pos:line="20" pos:column="36">r</name><op:operator pos:line="20" pos:column="37">.</op:operator><name pos:line="20" pos:column="38">ResponseContentType</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="20" pos:column="58">.</op:operator><call><name pos:line="20" pos:column="59">Returns</name><argument_list pos:line="20" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="20" pos:column="67">@"text/html"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="21" pos:column="13">requestMock</name><op:operator pos:line="21" pos:column="24">.</op:operator><name pos:line="21" pos:column="25">Setup</name></name><argument_list pos:line="21" pos:column="30">(<argument><expr><lambda><name pos:line="21" pos:column="31">r</name> <op:operator pos:line="21" pos:column="33">=&gt;</op:operator> <call><name><name pos:line="21" pos:column="36">r</name><op:operator pos:line="21" pos:column="37">.</op:operator><name pos:line="21" pos:column="38">GetHttpHeader</name></name><argument_list pos:line="21" pos:column="51">(<argument><expr><name><name pos:line="21" pos:column="52">Constants</name><op:operator pos:line="21" pos:column="61">.</op:operator><name pos:line="21" pos:column="62">UserAgentHeaderName</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="21" pos:column="83">.</op:operator><call><name pos:line="21" pos:column="84">Returns</name><argument_list pos:line="21" pos:column="91">(<argument><expr><lit:literal type="string" pos:line="21" pos:column="92">@"FireFox"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="23" pos:column="13">var</name></type> <name pos:line="23" pos:column="17">metadata</name> <init pos:line="23" pos:column="26">= <expr><op:operator pos:line="23" pos:column="28">new</op:operator> <call><name pos:line="23" pos:column="32">GlimpseRequest</name><argument_list pos:line="23" pos:column="46">(<argument><expr><call><name><name pos:line="23" pos:column="47">Guid</name><op:operator pos:line="23" pos:column="51">.</op:operator><name pos:line="23" pos:column="52">NewGuid</name></name><argument_list pos:line="23" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="63">requestMock</name><op:operator pos:line="23" pos:column="74">.</op:operator><name pos:line="23" pos:column="75">Object</name></name></expr></argument>, <argument><expr><op:operator pos:line="23" pos:column="83">new</op:operator> <call><name><name pos:line="23" pos:column="87">Dictionary</name><argument_list pos:line="23" pos:column="97">&lt;<argument><name pos:line="23" pos:column="98">string</name></argument>, <argument><name pos:line="23" pos:column="106">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="23" pos:column="116">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="23" pos:column="120">new</op:operator> <call><name><name pos:line="23" pos:column="124">Dictionary</name><argument_list pos:line="23" pos:column="134">&lt;<argument><name pos:line="23" pos:column="135">string</name></argument>, <argument><name pos:line="23" pos:column="143">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="23" pos:column="153">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="23" pos:column="157">TimeSpan</name><op:operator pos:line="23" pos:column="165">.</op:operator><name pos:line="23" pos:column="166">FromMilliseconds</name></name><argument_list pos:line="23" pos:column="182">(<argument><expr><lit:literal type="number" pos:line="23" pos:column="183">55</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="24" pos:column="13">var</name></type> <name pos:line="24" pos:column="17">converter</name> <init pos:line="24" pos:column="27">= <expr><op:operator pos:line="24" pos:column="29">new</op:operator> <call><name pos:line="24" pos:column="33">GlimpseRequestConverter</name><argument_list pos:line="24" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="26" pos:column="13">var</name></type> <name pos:line="26" pos:column="17">obj</name> <init pos:line="26" pos:column="21">= <expr><call><name><name pos:line="26" pos:column="23">converter</name><op:operator pos:line="26" pos:column="32">.</op:operator><name pos:line="26" pos:column="33">Convert</name></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">metadata</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="28" pos:column="13">var</name></type> <name pos:line="28" pos:column="17">result</name> <init pos:line="28" pos:column="24">= <expr><name pos:line="28" pos:column="26">obj</name> <op:operator pos:line="28" pos:column="30">as</op:operator> <name><name pos:line="28" pos:column="33">IDictionary</name><argument_list pos:line="28" pos:column="44">&lt;<argument><name pos:line="28" pos:column="45">string</name></argument>, <argument><name pos:line="28" pos:column="53">object</name></argument>&gt;</argument_list></name></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">Assert</name><op:operator pos:line="30" pos:column="19">.</op:operator><name pos:line="30" pos:column="20">NotNull</name></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">Assert</name><op:operator pos:line="31" pos:column="19">.</op:operator><name pos:line="31" pos:column="20">True</name></name><argument_list pos:line="31" pos:column="24">(<argument><expr><call><name><name pos:line="31" pos:column="25">result</name><op:operator pos:line="31" pos:column="31">.</op:operator><name pos:line="31" pos:column="32">ContainsKey</name></name><argument_list pos:line="31" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="31" pos:column="44">"clientId"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">Assert</name><op:operator pos:line="32" pos:column="19">.</op:operator><name pos:line="32" pos:column="20">NotNull</name></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name><name pos:line="32" pos:column="28">result</name><index pos:line="32" pos:column="34">[<expr><lit:literal type="string" pos:line="32" pos:column="35">"clientId"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">Assert</name><op:operator pos:line="33" pos:column="19">.</op:operator><name pos:line="33" pos:column="20">True</name></name><argument_list pos:line="33" pos:column="24">(<argument><expr><call><name><name pos:line="33" pos:column="25">result</name><op:operator pos:line="33" pos:column="31">.</op:operator><name pos:line="33" pos:column="32">ContainsKey</name></name><argument_list pos:line="33" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="33" pos:column="44">"dateTime"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="34" pos:column="13">Assert</name><op:operator pos:line="34" pos:column="19">.</op:operator><name pos:line="34" pos:column="20">NotNull</name></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name><name pos:line="34" pos:column="28">result</name><index pos:line="34" pos:column="34">[<expr><lit:literal type="string" pos:line="34" pos:column="35">"dateTime"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="35" pos:column="13">Assert</name><op:operator pos:line="35" pos:column="19">.</op:operator><name pos:line="35" pos:column="20">True</name></name><argument_list pos:line="35" pos:column="24">(<argument><expr><call><name><name pos:line="35" pos:column="25">result</name><op:operator pos:line="35" pos:column="31">.</op:operator><name pos:line="35" pos:column="32">ContainsKey</name></name><argument_list pos:line="35" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="35" pos:column="44">"duration"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">Assert</name><op:operator pos:line="36" pos:column="19">.</op:operator><name pos:line="36" pos:column="20">NotNull</name></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name><name pos:line="36" pos:column="28">result</name><index pos:line="36" pos:column="34">[<expr><lit:literal type="string" pos:line="36" pos:column="35">"duration"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="37" pos:column="13">Assert</name><op:operator pos:line="37" pos:column="19">.</op:operator><name pos:line="37" pos:column="20">True</name></name><argument_list pos:line="37" pos:column="24">(<argument><expr><call><name><name pos:line="37" pos:column="25">result</name><op:operator pos:line="37" pos:column="31">.</op:operator><name pos:line="37" pos:column="32">ContainsKey</name></name><argument_list pos:line="37" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="37" pos:column="44">"parentRequestId"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">Assert</name><op:operator pos:line="38" pos:column="19">.</op:operator><name pos:line="38" pos:column="20">Null</name></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name><name pos:line="38" pos:column="25">result</name><index pos:line="38" pos:column="31">[<expr><lit:literal type="string" pos:line="38" pos:column="32">"parentRequestId"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="39" pos:column="13">Assert</name><op:operator pos:line="39" pos:column="19">.</op:operator><name pos:line="39" pos:column="20">True</name></name><argument_list pos:line="39" pos:column="24">(<argument><expr><call><name><name pos:line="39" pos:column="25">result</name><op:operator pos:line="39" pos:column="31">.</op:operator><name pos:line="39" pos:column="32">ContainsKey</name></name><argument_list pos:line="39" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="39" pos:column="44">"requestId"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="40" pos:column="13">Assert</name><op:operator pos:line="40" pos:column="19">.</op:operator><name pos:line="40" pos:column="20">NotNull</name></name><argument_list pos:line="40" pos:column="27">(<argument><expr><name><name pos:line="40" pos:column="28">result</name><index pos:line="40" pos:column="34">[<expr><lit:literal type="string" pos:line="40" pos:column="35">"requestId"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="41" pos:column="13">Assert</name><op:operator pos:line="41" pos:column="19">.</op:operator><name pos:line="41" pos:column="20">True</name></name><argument_list pos:line="41" pos:column="24">(<argument><expr><call><name><name pos:line="41" pos:column="25">result</name><op:operator pos:line="41" pos:column="31">.</op:operator><name pos:line="41" pos:column="32">ContainsKey</name></name><argument_list pos:line="41" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="44">"isAjax"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="42" pos:column="13">Assert</name><op:operator pos:line="42" pos:column="19">.</op:operator><name pos:line="42" pos:column="20">NotNull</name></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name><name pos:line="42" pos:column="28">result</name><index pos:line="42" pos:column="34">[<expr><lit:literal type="string" pos:line="42" pos:column="35">"isAjax"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="43" pos:column="13">Assert</name><op:operator pos:line="43" pos:column="19">.</op:operator><name pos:line="43" pos:column="20">True</name></name><argument_list pos:line="43" pos:column="24">(<argument><expr><call><name><name pos:line="43" pos:column="25">result</name><op:operator pos:line="43" pos:column="31">.</op:operator><name pos:line="43" pos:column="32">ContainsKey</name></name><argument_list pos:line="43" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="43" pos:column="44">"method"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="44" pos:column="13">Assert</name><op:operator pos:line="44" pos:column="19">.</op:operator><name pos:line="44" pos:column="20">NotNull</name></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name><name pos:line="44" pos:column="28">result</name><index pos:line="44" pos:column="34">[<expr><lit:literal type="string" pos:line="44" pos:column="35">"method"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="45" pos:column="13">Assert</name><op:operator pos:line="45" pos:column="19">.</op:operator><name pos:line="45" pos:column="20">True</name></name><argument_list pos:line="45" pos:column="24">(<argument><expr><call><name><name pos:line="45" pos:column="25">result</name><op:operator pos:line="45" pos:column="31">.</op:operator><name pos:line="45" pos:column="32">ContainsKey</name></name><argument_list pos:line="45" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="45" pos:column="44">"uri"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">Assert</name><op:operator pos:line="46" pos:column="19">.</op:operator><name pos:line="46" pos:column="20">NotNull</name></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name><name pos:line="46" pos:column="28">result</name><index pos:line="46" pos:column="34">[<expr><lit:literal type="string" pos:line="46" pos:column="35">"uri"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="47" pos:column="13">Assert</name><op:operator pos:line="47" pos:column="19">.</op:operator><name pos:line="47" pos:column="20">True</name></name><argument_list pos:line="47" pos:column="24">(<argument><expr><call><name><name pos:line="47" pos:column="25">result</name><op:operator pos:line="47" pos:column="31">.</op:operator><name pos:line="47" pos:column="32">ContainsKey</name></name><argument_list pos:line="47" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="47" pos:column="44">"contentType"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">Assert</name><op:operator pos:line="48" pos:column="19">.</op:operator><name pos:line="48" pos:column="20">NotNull</name></name><argument_list pos:line="48" pos:column="27">(<argument><expr><name><name pos:line="48" pos:column="28">result</name><index pos:line="48" pos:column="34">[<expr><lit:literal type="string" pos:line="48" pos:column="35">"contentType"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="49" pos:column="13">Assert</name><op:operator pos:line="49" pos:column="19">.</op:operator><name pos:line="49" pos:column="20">True</name></name><argument_list pos:line="49" pos:column="24">(<argument><expr><call><name><name pos:line="49" pos:column="25">result</name><op:operator pos:line="49" pos:column="31">.</op:operator><name pos:line="49" pos:column="32">ContainsKey</name></name><argument_list pos:line="49" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="49" pos:column="44">"statusCode"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="50" pos:column="13">Assert</name><op:operator pos:line="50" pos:column="19">.</op:operator><name pos:line="50" pos:column="20">NotNull</name></name><argument_list pos:line="50" pos:column="27">(<argument><expr><name><name pos:line="50" pos:column="28">result</name><index pos:line="50" pos:column="34">[<expr><lit:literal type="string" pos:line="50" pos:column="35">"statusCode"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="51" pos:column="13">Assert</name><op:operator pos:line="51" pos:column="19">.</op:operator><name pos:line="51" pos:column="20">True</name></name><argument_list pos:line="51" pos:column="24">(<argument><expr><call><name><name pos:line="51" pos:column="25">result</name><op:operator pos:line="51" pos:column="31">.</op:operator><name pos:line="51" pos:column="32">ContainsKey</name></name><argument_list pos:line="51" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="51" pos:column="44">"userAgent"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">Assert</name><op:operator pos:line="52" pos:column="19">.</op:operator><name pos:line="52" pos:column="20">NotNull</name></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name><name pos:line="52" pos:column="28">result</name><index pos:line="52" pos:column="34">[<expr><lit:literal type="string" pos:line="52" pos:column="35">"userAgent"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="55" pos:column="9">[<expr><name pos:line="55" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="56" pos:column="9">public</specifier> <name pos:line="56" pos:column="16">void</name></type> <name pos:line="56" pos:column="21">ThrowExceptionWithInvalidInput</name><parameter_list pos:line="56" pos:column="51">()</parameter_list>
        <block pos:line="57" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="58" pos:column="13">var</name></type> <name pos:line="58" pos:column="17">converter</name> <init pos:line="58" pos:column="27">= <expr><op:operator pos:line="58" pos:column="29">new</op:operator> <call><name pos:line="58" pos:column="33">GlimpseRequestConverter</name><argument_list pos:line="58" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="60" pos:column="13">Assert</name><op:operator pos:line="60" pos:column="19">.</op:operator><name><name pos:line="60" pos:column="20">Throws</name><argument_list pos:line="60" pos:column="26">&lt;<argument><name pos:line="60" pos:column="27">InvalidCastException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="60" pos:column="48">(<argument><expr><lambda><parameter_list pos:line="60" pos:column="49">()</parameter_list> <op:operator pos:line="60" pos:column="52">=&gt;</op:operator> <call><name><name pos:line="60" pos:column="55">converter</name><op:operator pos:line="60" pos:column="64">.</op:operator><name pos:line="60" pos:column="65">Convert</name></name><argument_list pos:line="60" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="73">"bad input"</lit:literal></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
