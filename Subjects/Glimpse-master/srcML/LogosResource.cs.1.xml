<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Resource\LogosResource.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name><op:operator pos:line="2" pos:column="19">.</op:operator><name pos:line="2" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Extensions</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Glimpse</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">Core</name><op:operator pos:line="5" pos:column="23">.</op:operator><name pos:line="5" pos:column="24">Resource</name></name>
<block pos:line="6" pos:column="1">{
    <comment type="line" pos:line="7" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="8" pos:column="5">/// The &lt;see cref="IResource"/&gt; implementation responsible for providing all logos used in Glimpse.</comment>
    <comment type="line" pos:line="9" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="10" pos:column="5">public</specifier> class <name pos:line="10" pos:column="18">LogosResource</name> <super pos:line="10" pos:column="32">: <name pos:line="10" pos:column="34">FileResource</name>, <name pos:line="10" pos:column="48">IKey</name></super>
    <block pos:line="11" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">internal</specifier> <specifier pos:line="12" pos:column="18">const</specifier> <name pos:line="12" pos:column="24">string</name></type> <name pos:line="12" pos:column="31">InternalName</name> <init pos:line="12" pos:column="44">= <expr><lit:literal type="string" pos:line="12" pos:column="46">"glimpse_logos"</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">private</specifier> <specifier pos:line="13" pos:column="17">const</specifier> <name pos:line="13" pos:column="23">string</name></type> <name pos:line="13" pos:column="30">GlimpseTextLogoResourceName</name> <init pos:line="13" pos:column="58">= <expr><lit:literal type="string" pos:line="13" pos:column="60">"Glimpse.Core.EmbeddedResources.glimpse_text_logo.png"</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">private</specifier> <specifier pos:line="14" pos:column="17">const</specifier> <name pos:line="14" pos:column="23">string</name></type> <name pos:line="14" pos:column="30">GlimpseImageLogoResourceName</name> <init pos:line="14" pos:column="59">= <expr><lit:literal type="string" pos:line="14" pos:column="61">"Glimpse.Core.EmbeddedResources.glimpse_image_logo.png"</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">private</specifier> <specifier pos:line="15" pos:column="17">const</specifier> <name pos:line="15" pos:column="23">string</name></type> <name pos:line="15" pos:column="30">GlimpseFaviconResourceName</name> <init pos:line="15" pos:column="57">= <expr><lit:literal type="string" pos:line="15" pos:column="59">"Glimpse.Core.EmbeddedResources.glimpse_favicon.png"</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">private</specifier> <specifier pos:line="16" pos:column="17">const</specifier> <name pos:line="16" pos:column="23">string</name></type> <name pos:line="16" pos:column="30">GithubLogoResourceName</name> <init pos:line="16" pos:column="53">= <expr><lit:literal type="string" pos:line="16" pos:column="55">"Glimpse.Core.EmbeddedResources.github_logo.gif"</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">private</specifier> <specifier pos:line="17" pos:column="17">const</specifier> <name pos:line="17" pos:column="23">string</name></type> <name pos:line="17" pos:column="30">TwitterLogoResourceName</name> <init pos:line="17" pos:column="54">= <expr><lit:literal type="string" pos:line="17" pos:column="56">"Glimpse.Core.EmbeddedResources.twitter_logo.png"</lit:literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">private</specifier> <specifier pos:line="19" pos:column="17">readonly</specifier> <name><name pos:line="19" pos:column="26">IDictionary</name><argument_list pos:line="19" pos:column="37">&lt;<argument><name pos:line="19" pos:column="38">string</name></argument>, <argument><name pos:line="19" pos:column="46">EmbeddedResourceInfo</name></argument>&gt;</argument_list></name></type> <name pos:line="19" pos:column="68">embeddedResourceInfos</name> <init pos:line="19" pos:column="90">= <expr><op:operator pos:line="19" pos:column="92">new</op:operator> <call><name><name pos:line="19" pos:column="96">Dictionary</name><argument_list pos:line="19" pos:column="106">&lt;<argument><name pos:line="19" pos:column="107">string</name></argument>, <argument><name pos:line="19" pos:column="115">EmbeddedResourceInfo</name></argument>&gt;</argument_list></name><argument_list pos:line="19" pos:column="136">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:line="21" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="22" pos:column="9">/// Initializes a new instance of the &lt;see cref="LogosResource" /&gt; class.</comment>
        <comment type="line" pos:line="23" pos:column="9">/// &lt;/summary&gt;</comment>
        <constructor><specifier pos:line="24" pos:column="9">public</specifier> <name pos:line="24" pos:column="16">LogosResource</name><parameter_list pos:line="24" pos:column="29">()</parameter_list>
        <block pos:line="25" pos:column="9">{
            <expr_stmt><expr><name pos:line="26" pos:column="13">Name</name> <op:operator pos:line="26" pos:column="18">=</op:operator> <name pos:line="26" pos:column="20">InternalName</name></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="28" pos:column="13">var</name></type> <name pos:line="28" pos:column="17">assembly</name> <init pos:line="28" pos:column="26">= <expr><call><name><name pos:line="28" pos:column="28">this</name><op:operator pos:line="28" pos:column="32">.</op:operator><name pos:line="28" pos:column="33">GetType</name></name><argument_list pos:line="28" pos:column="40">()</argument_list></call><op:operator pos:line="28" pos:column="42">.</op:operator><name pos:line="28" pos:column="43">Assembly</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="29" pos:column="13">embeddedResourceInfos</name><op:operator pos:line="29" pos:column="34">.</op:operator><name pos:line="29" pos:column="35">Add</name></name><argument_list pos:line="29" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="29" pos:column="39">"glimpse_text_logo"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="29" pos:column="60">new</op:operator> <call><name pos:line="29" pos:column="64">EmbeddedResourceInfo</name><argument_list pos:line="29" pos:column="84">(<argument><expr><name pos:line="29" pos:column="85">assembly</name></expr></argument>, <argument><expr><name pos:line="29" pos:column="95">GlimpseTextLogoResourceName</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="29" pos:column="124">"image/png"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">embeddedResourceInfos</name><op:operator pos:line="30" pos:column="34">.</op:operator><name pos:line="30" pos:column="35">Add</name></name><argument_list pos:line="30" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="30" pos:column="39">"glimpse_image_logo"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="30" pos:column="61">new</op:operator> <call><name pos:line="30" pos:column="65">EmbeddedResourceInfo</name><argument_list pos:line="30" pos:column="85">(<argument><expr><name pos:line="30" pos:column="86">assembly</name></expr></argument>, <argument><expr><name pos:line="30" pos:column="96">GlimpseImageLogoResourceName</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="30" pos:column="126">"image/png"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">embeddedResourceInfos</name><op:operator pos:line="31" pos:column="34">.</op:operator><name pos:line="31" pos:column="35">Add</name></name><argument_list pos:line="31" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="31" pos:column="39">"glimpse_favicon"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="31" pos:column="58">new</op:operator> <call><name pos:line="31" pos:column="62">EmbeddedResourceInfo</name><argument_list pos:line="31" pos:column="82">(<argument><expr><name pos:line="31" pos:column="83">assembly</name></expr></argument>, <argument><expr><name pos:line="31" pos:column="93">GlimpseFaviconResourceName</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="31" pos:column="121">"image/png"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">embeddedResourceInfos</name><op:operator pos:line="32" pos:column="34">.</op:operator><name pos:line="32" pos:column="35">Add</name></name><argument_list pos:line="32" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="32" pos:column="39">"github_logo"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="32" pos:column="54">new</op:operator> <call><name pos:line="32" pos:column="58">EmbeddedResourceInfo</name><argument_list pos:line="32" pos:column="78">(<argument><expr><name pos:line="32" pos:column="79">assembly</name></expr></argument>, <argument><expr><name pos:line="32" pos:column="89">GithubLogoResourceName</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="32" pos:column="113">"image/gif"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">embeddedResourceInfos</name><op:operator pos:line="33" pos:column="34">.</op:operator><name pos:line="33" pos:column="35">Add</name></name><argument_list pos:line="33" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="33" pos:column="39">"twitter_logo"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="33" pos:column="55">new</op:operator> <call><name pos:line="33" pos:column="59">EmbeddedResourceInfo</name><argument_list pos:line="33" pos:column="79">(<argument><expr><name pos:line="33" pos:column="80">assembly</name></expr></argument>, <argument><expr><name pos:line="33" pos:column="90">TwitterLogoResourceName</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="33" pos:column="115">"image/png"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="36" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="37" pos:column="9">/// Gets the key.</comment>
        <comment type="line" pos:line="38" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="39" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="40" pos:column="9">/// The key. Only valid JavaScript identifiers should be used for future compatibility.</comment>
        <comment type="line" pos:line="41" pos:column="9">/// &lt;/value&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="42" pos:column="9">public</specifier> <name pos:line="42" pos:column="16">string</name></type> <name pos:line="42" pos:column="23">Key</name>
        <block pos:line="43" pos:column="9">{
            <function><name pos:line="44" pos:column="13">get</name> <block pos:line="44" pos:column="17">{ <return pos:line="44" pos:column="19">return <expr><name pos:line="44" pos:column="26">Name</name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="47" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="48" pos:column="9">/// Gets the required or optional parameters that a resource needs as processing input.</comment>
        <comment type="line" pos:line="49" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="50" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="51" pos:column="9">/// The parameters.</comment>
        <comment type="line" pos:line="52" pos:column="9">/// &lt;/value&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="53" pos:column="9">public</specifier> <specifier pos:line="53" pos:column="16">override</specifier> <name><name pos:line="53" pos:column="25">IEnumerable</name><argument_list pos:line="53" pos:column="36">&lt;<argument><name pos:line="53" pos:column="37">ResourceParameterMetadata</name></argument>&gt;</argument_list></name></type> <name pos:line="53" pos:column="64">Parameters</name>
        <block pos:line="54" pos:column="9">{
            <function><name pos:line="55" pos:column="13">get</name> <block pos:line="55" pos:column="17">{ <return pos:line="55" pos:column="19">return <expr><op:operator pos:line="55" pos:column="26">new</op:operator><index pos:line="55" pos:column="29">[]</index> <block pos:line="55" pos:column="32">{ <expr><name><name pos:line="55" pos:column="34">ResourceParameter</name><op:operator pos:line="55" pos:column="51">.</op:operator><name pos:line="55" pos:column="52">LogoName</name></name></expr><op:operator pos:line="55" pos:column="60">,</op:operator> <expr><name><name pos:line="55" pos:column="62">ResourceParameter</name><op:operator pos:line="55" pos:column="79">.</op:operator><name pos:line="55" pos:column="80">Hash</name></name></expr> }</block></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="58" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="59" pos:column="9">/// Returns, based on the resource context, the embedded resource that represents a logo and will be returned during the execution of the &lt;see cref="FileResource"/&gt;</comment>
        <comment type="line" pos:line="60" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="61" pos:column="9">/// &lt;param name="context"&gt;The resource context&lt;/param&gt;</comment>
        <comment type="line" pos:line="62" pos:column="9">/// &lt;returns&gt;Information about the embedded resource that represents a logo&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="63" pos:column="9">protected</specifier> <specifier pos:line="63" pos:column="19">override</specifier> <name pos:line="63" pos:column="28">EmbeddedResourceInfo</name></type> <name pos:line="63" pos:column="49">GetEmbeddedResourceInfo</name><parameter_list pos:line="63" pos:column="72">(<param><decl><type><name pos:line="63" pos:column="73">IResourceContext</name></type> <name pos:line="63" pos:column="90">context</name></decl></param>)</parameter_list>
        <block pos:line="64" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="65" pos:column="13">var</name></type> <name pos:line="65" pos:column="17">logoname</name> <init pos:line="65" pos:column="26">= <expr><call><name><name pos:line="65" pos:column="28">context</name><op:operator pos:line="65" pos:column="35">.</op:operator><name pos:line="65" pos:column="36">Parameters</name><op:operator pos:line="65" pos:column="46">.</op:operator><name pos:line="65" pos:column="47">GetValueOrDefault</name></name><argument_list pos:line="65" pos:column="64">(<argument><expr><name><name pos:line="65" pos:column="65">ResourceParameter</name><op:operator pos:line="65" pos:column="82">.</op:operator><name pos:line="65" pos:column="83">LogoName</name><op:operator pos:line="65" pos:column="91">.</op:operator><name pos:line="65" pos:column="92">Name</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="67" pos:column="13">EmbeddedResourceInfo</name></type> <name pos:line="67" pos:column="34">embeddedResourceInfo</name></decl>;</decl_stmt>
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><op:operator pos:line="68" pos:column="17">!</op:operator><call><name><name pos:line="68" pos:column="18">string</name><op:operator pos:line="68" pos:column="24">.</op:operator><name pos:line="68" pos:column="25">IsNullOrEmpty</name></name><argument_list pos:line="68" pos:column="38">(<argument><expr><name pos:line="68" pos:column="39">logoname</name></expr></argument>)</argument_list></call> <op:operator pos:line="68" pos:column="49">&amp;&amp;</op:operator> <call><name><name pos:line="68" pos:column="52">embeddedResourceInfos</name><op:operator pos:line="68" pos:column="73">.</op:operator><name pos:line="68" pos:column="74">TryGetValue</name></name><argument_list pos:line="68" pos:column="85">(<argument><expr><name pos:line="68" pos:column="86">logoname</name></expr></argument>, <argument><expr pos:line="68" pos:column="96">out <name pos:line="68" pos:column="100">embeddedResourceInfo</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="68" pos:column="122">
            <block pos:line="69" pos:column="13">{
                <return pos:line="70" pos:column="17">return <expr><name pos:line="70" pos:column="24">embeddedResourceInfo</name></expr>;</return>
            }</block></then></if>

            <return pos:line="73" pos:column="13">return <expr><name pos:line="73" pos:column="20">null</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
