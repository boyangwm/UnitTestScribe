<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Configuration</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">AspNet</name><op:operator pos:line="2" pos:column="21">.</op:operator><name pos:line="2" pos:column="22">Tab</name></name>;</using>
<using pos:line="3" pos:column="1">using <name pos:line="3" pos:column="7">Xunit</name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Glimpse</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">Test</name><op:operator pos:line="5" pos:column="23">.</op:operator><name pos:line="5" pos:column="24">AspNet</name><op:operator pos:line="5" pos:column="30">.</op:operator><name pos:line="5" pos:column="31">Tab</name></name>
<block pos:line="6" pos:column="1">{
    <class><specifier pos:line="7" pos:column="5">public</specifier> class <name pos:line="7" pos:column="18">ConfigurationConnectionStringModelFactoryShould</name>
    <block pos:line="8" pos:column="5">{
        <function><type><attribute pos:line="9" pos:column="9">[<expr><name pos:line="9" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="10" pos:column="9">public</specifier> <name pos:line="10" pos:column="16">void</name></type> <name pos:line="10" pos:column="21">HaveParsedTypicalConnectionString</name><parameter_list pos:line="10" pos:column="54">()</parameter_list>
        <block pos:line="11" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">CheckHaveParsedTypicalConnectionString</name><argument_list pos:line="12" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="12" pos:column="52">"System.Data.SqlClient"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="15" pos:column="9">[<expr><name pos:line="15" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="16" pos:column="9">public</specifier> <name pos:line="16" pos:column="16">void</name></type> <name pos:line="16" pos:column="21">HaveParsedTypicalConnectionStringWithoutExplicitProviderName</name><parameter_list pos:line="16" pos:column="81">()</parameter_list>
        <block pos:line="17" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">CheckHaveParsedTypicalConnectionString</name><argument_list pos:line="18" pos:column="51">(<argument><expr><name pos:line="18" pos:column="52">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="21" pos:column="9">private</specifier> <specifier pos:line="21" pos:column="17">static</specifier> <name pos:line="21" pos:column="24">void</name></type> <name pos:line="21" pos:column="29">CheckHaveParsedTypicalConnectionString</name><parameter_list pos:line="21" pos:column="67">(<param><decl><type><name pos:line="21" pos:column="68">string</name></type> <name pos:line="21" pos:column="75">providerName</name></decl></param>)</parameter_list>
        <block pos:line="22" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="23" pos:column="13">const</specifier> <name pos:line="23" pos:column="19">string</name></type> <name pos:line="23" pos:column="26">connectionString</name> <init pos:line="23" pos:column="43">= <expr><lit:literal type="string" pos:line="23" pos:column="45">"Data Source=MyServer;Initial Catalog=MyDatabase;User Id=MyUsername;Password=MyPassword"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="24" pos:column="13">const</specifier> <name pos:line="24" pos:column="19">string</name></type> <name pos:line="24" pos:column="26">connectionStringName</name> <init pos:line="24" pos:column="47">= <expr><lit:literal type="string" pos:line="24" pos:column="49">"MyConnectionString"</lit:literal></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="26" pos:column="13">var</name></type> <name pos:line="26" pos:column="17">result</name> <init pos:line="26" pos:column="24">= <expr><call><name><name pos:line="26" pos:column="26">ConfigurationConnectionStringModelFactory</name><op:operator pos:line="26" pos:column="67">.</op:operator><name pos:line="26" pos:column="68">Create</name></name><argument_list pos:line="26" pos:column="74">(<argument><expr><op:operator pos:line="26" pos:column="75">new</op:operator> <call><name pos:line="26" pos:column="79">ConnectionStringSettings</name><argument_list pos:line="26" pos:column="103">(<argument><expr><name pos:line="26" pos:column="104">connectionStringName</name></expr></argument>, <argument><expr><name pos:line="26" pos:column="126">connectionString</name></expr></argument>, <argument><expr><name pos:line="26" pos:column="144">providerName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">Assert</name><op:operator pos:line="28" pos:column="19">.</op:operator><name pos:line="28" pos:column="20">Equal</name></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">providerName</name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="40">result</name><op:operator pos:line="28" pos:column="46">.</op:operator><name pos:line="28" pos:column="47">ProviderName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="29" pos:column="13">Assert</name><op:operator pos:line="29" pos:column="19">.</op:operator><name pos:line="29" pos:column="20">Equal</name></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">connectionStringName</name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="48">result</name><op:operator pos:line="29" pos:column="54">.</op:operator><name pos:line="29" pos:column="55">Key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">Assert</name><op:operator pos:line="30" pos:column="19">.</op:operator><name pos:line="30" pos:column="20">Equal</name></name><argument_list pos:line="30" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="30" pos:column="26">"Data Source=MyServer;Initial Catalog=MyDatabase;User Id=MyUsername;Password=########"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="114">result</name><op:operator pos:line="30" pos:column="120">.</op:operator><name pos:line="30" pos:column="121">Raw</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">Assert</name><op:operator pos:line="31" pos:column="19">.</op:operator><name pos:line="31" pos:column="20">True</name></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name><name pos:line="31" pos:column="25">result</name><op:operator pos:line="31" pos:column="31">.</op:operator><name pos:line="31" pos:column="32">Details</name><op:operator pos:line="31" pos:column="39">.</op:operator><name pos:line="31" pos:column="40">Count</name></name> <op:operator pos:line="31" pos:column="46">&gt;</op:operator> <lit:literal type="number" pos:line="31" pos:column="48">4</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">Assert</name><op:operator pos:line="32" pos:column="19">.</op:operator><name pos:line="32" pos:column="20">Equal</name></name><argument_list pos:line="32" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="32" pos:column="26">"MyServer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="38">result</name><op:operator pos:line="32" pos:column="44">.</op:operator><name pos:line="32" pos:column="45">Details</name><index pos:line="32" pos:column="52">[<expr><lit:literal type="string" pos:line="32" pos:column="53">"Data Source"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">Assert</name><op:operator pos:line="33" pos:column="19">.</op:operator><name pos:line="33" pos:column="20">Equal</name></name><argument_list pos:line="33" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="33" pos:column="26">"MyDatabase"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="40">result</name><op:operator pos:line="33" pos:column="46">.</op:operator><name pos:line="33" pos:column="47">Details</name><index pos:line="33" pos:column="54">[<expr><lit:literal type="string" pos:line="33" pos:column="55">"Initial Catalog"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="34" pos:column="13">Assert</name><op:operator pos:line="34" pos:column="19">.</op:operator><name pos:line="34" pos:column="20">Equal</name></name><argument_list pos:line="34" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="34" pos:column="26">"MyUsername"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="40">result</name><op:operator pos:line="34" pos:column="46">.</op:operator><name pos:line="34" pos:column="47">Details</name><index pos:line="34" pos:column="54">[<expr><lit:literal type="string" pos:line="34" pos:column="55">"User Id"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="35" pos:column="13">Assert</name><op:operator pos:line="35" pos:column="19">.</op:operator><name pos:line="35" pos:column="20">Equal</name></name><argument_list pos:line="35" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="35" pos:column="26">"########"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="38">result</name><op:operator pos:line="35" pos:column="44">.</op:operator><name pos:line="35" pos:column="45">Details</name><index pos:line="35" pos:column="52">[<expr><lit:literal type="string" pos:line="35" pos:column="53">"Password"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="38" pos:column="9">[<expr><name pos:line="38" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="39" pos:column="9">public</specifier> <name pos:line="39" pos:column="16">void</name></type> <name pos:line="39" pos:column="21">HaveHandledInvalidConnectionStringForKnownProvider</name><parameter_list pos:line="39" pos:column="71">()</parameter_list>
        <block pos:line="40" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="41" pos:column="13">const</specifier> <name pos:line="41" pos:column="19">string</name></type> <name pos:line="41" pos:column="26">connectionString</name> <init pos:line="41" pos:column="43">= <expr><lit:literal type="string" pos:line="41" pos:column="45">"Data Source=MyServer;Initial Catalog=MyDatabase;User Id=MyUsername;Password=MyPassword;SomeUnknownKey=BadValue"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="42" pos:column="13">const</specifier> <name pos:line="42" pos:column="19">string</name></type> <name pos:line="42" pos:column="26">connectionStringName</name> <init pos:line="42" pos:column="47">= <expr><lit:literal type="string" pos:line="42" pos:column="49">"MyConnectionString"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="43" pos:column="13">const</specifier> <name pos:line="43" pos:column="19">string</name></type> <name pos:line="43" pos:column="26">providerName</name> <init pos:line="43" pos:column="39">= <expr><lit:literal type="string" pos:line="43" pos:column="41">"System.Data.SqlClient"</lit:literal></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="45" pos:column="13">var</name></type> <name pos:line="45" pos:column="17">result</name> <init pos:line="45" pos:column="24">= <expr><call><name><name pos:line="45" pos:column="26">ConfigurationConnectionStringModelFactory</name><op:operator pos:line="45" pos:column="67">.</op:operator><name pos:line="45" pos:column="68">Create</name></name><argument_list pos:line="45" pos:column="74">(<argument><expr><op:operator pos:line="45" pos:column="75">new</op:operator> <call><name pos:line="45" pos:column="79">ConnectionStringSettings</name><argument_list pos:line="45" pos:column="103">(<argument><expr><name pos:line="45" pos:column="104">connectionStringName</name></expr></argument>, <argument><expr><name pos:line="45" pos:column="126">connectionString</name></expr></argument>, <argument><expr><name pos:line="45" pos:column="144">providerName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="47" pos:column="13">Assert</name><op:operator pos:line="47" pos:column="19">.</op:operator><name pos:line="47" pos:column="20">Equal</name></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">providerName</name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="40">result</name><op:operator pos:line="47" pos:column="46">.</op:operator><name pos:line="47" pos:column="47">ProviderName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">Assert</name><op:operator pos:line="48" pos:column="19">.</op:operator><name pos:line="48" pos:column="20">Equal</name></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">connectionStringName</name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="48">result</name><op:operator pos:line="48" pos:column="54">.</op:operator><name pos:line="48" pos:column="55">Key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="49" pos:column="13">Assert</name><op:operator pos:line="49" pos:column="19">.</op:operator><name pos:line="49" pos:column="20">Equal</name></name><argument_list pos:line="49" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="49" pos:column="26">"Data Source=MyServer;Initial Catalog=MyDatabase;User Id=MyUsername;Password=########;SomeUnknownKey=BadValue"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="138">result</name><op:operator pos:line="49" pos:column="144">.</op:operator><name pos:line="49" pos:column="145">Raw</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="50" pos:column="13">Assert</name><op:operator pos:line="50" pos:column="19">.</op:operator><name pos:line="50" pos:column="20">Equal</name></name><argument_list pos:line="50" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="50" pos:column="26">6</lit:literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="29">result</name><op:operator pos:line="50" pos:column="35">.</op:operator><name pos:line="50" pos:column="36">Details</name><op:operator pos:line="50" pos:column="43">.</op:operator><name pos:line="50" pos:column="44">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="51" pos:column="13">Assert</name><op:operator pos:line="51" pos:column="19">.</op:operator><name pos:line="51" pos:column="20">True</name></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name><name pos:line="51" pos:column="25">result</name><op:operator pos:line="51" pos:column="31">.</op:operator><name pos:line="51" pos:column="32">Details</name><index pos:line="51" pos:column="39">[<expr><lit:literal type="string" pos:line="51" pos:column="40">"ERROR"</lit:literal></expr>]</index></name><op:operator pos:line="51" pos:column="48">.</op:operator><call><name pos:line="51" pos:column="49">ToString</name><argument_list pos:line="51" pos:column="57">()</argument_list></call><op:operator pos:line="51" pos:column="59">.</op:operator><call><name pos:line="51" pos:column="60">StartsWith</name><argument_list pos:line="51" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="51" pos:column="71">"Connection string is invalid for ProviderName=System.Data.SqlClient : "</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">Assert</name><op:operator pos:line="52" pos:column="19">.</op:operator><name pos:line="52" pos:column="20">Equal</name></name><argument_list pos:line="52" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="26">"MyServer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="38">result</name><op:operator pos:line="52" pos:column="44">.</op:operator><name pos:line="52" pos:column="45">Details</name><index pos:line="52" pos:column="52">[<expr><lit:literal type="string" pos:line="52" pos:column="53">"Data Source"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="53" pos:column="13">Assert</name><op:operator pos:line="53" pos:column="19">.</op:operator><name pos:line="53" pos:column="20">Equal</name></name><argument_list pos:line="53" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="53" pos:column="26">"MyDatabase"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="40">result</name><op:operator pos:line="53" pos:column="46">.</op:operator><name pos:line="53" pos:column="47">Details</name><index pos:line="53" pos:column="54">[<expr><lit:literal type="string" pos:line="53" pos:column="55">"Initial Catalog"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="54" pos:column="13">Assert</name><op:operator pos:line="54" pos:column="19">.</op:operator><name pos:line="54" pos:column="20">Equal</name></name><argument_list pos:line="54" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="54" pos:column="26">"MyUsername"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="40">result</name><op:operator pos:line="54" pos:column="46">.</op:operator><name pos:line="54" pos:column="47">Details</name><index pos:line="54" pos:column="54">[<expr><lit:literal type="string" pos:line="54" pos:column="55">"User Id"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="55" pos:column="13">Assert</name><op:operator pos:line="55" pos:column="19">.</op:operator><name pos:line="55" pos:column="20">Equal</name></name><argument_list pos:line="55" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="26">"########"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="38">result</name><op:operator pos:line="55" pos:column="44">.</op:operator><name pos:line="55" pos:column="45">Details</name><index pos:line="55" pos:column="52">[<expr><lit:literal type="string" pos:line="55" pos:column="53">"Password"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="56" pos:column="13">Assert</name><op:operator pos:line="56" pos:column="19">.</op:operator><name pos:line="56" pos:column="20">Equal</name></name><argument_list pos:line="56" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="56" pos:column="26">"BadValue"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="38">result</name><op:operator pos:line="56" pos:column="44">.</op:operator><name pos:line="56" pos:column="45">Details</name><index pos:line="56" pos:column="52">[<expr><lit:literal type="string" pos:line="56" pos:column="53">"SomeUnknownKey"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="59" pos:column="9">[<expr><name pos:line="59" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="60" pos:column="9">public</specifier> <name pos:line="60" pos:column="16">void</name></type> <name pos:line="60" pos:column="21">HaveHandledUnknownProvider</name><parameter_list pos:line="60" pos:column="47">()</parameter_list>
        <block pos:line="61" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="62" pos:column="13">const</specifier> <name pos:line="62" pos:column="19">string</name></type> <name pos:line="62" pos:column="26">connectionString</name> <init pos:line="62" pos:column="43">= <expr><lit:literal type="string" pos:line="62" pos:column="45">"Data Source=MyServer;Initial Catalog=MyDatabase;User Id=MyUsername;Password=MyPassword"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="63" pos:column="13">const</specifier> <name pos:line="63" pos:column="19">string</name></type> <name pos:line="63" pos:column="26">connectionStringName</name> <init pos:line="63" pos:column="47">= <expr><lit:literal type="string" pos:line="63" pos:column="49">"MyConnectionString"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="64" pos:column="13">const</specifier> <name pos:line="64" pos:column="19">string</name></type> <name pos:line="64" pos:column="26">providerName</name> <init pos:line="64" pos:column="39">= <expr><lit:literal type="string" pos:line="64" pos:column="41">"This.Is.Unknown"</lit:literal></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="66" pos:column="13">var</name></type> <name pos:line="66" pos:column="17">result</name> <init pos:line="66" pos:column="24">= <expr><call><name><name pos:line="66" pos:column="26">ConfigurationConnectionStringModelFactory</name><op:operator pos:line="66" pos:column="67">.</op:operator><name pos:line="66" pos:column="68">Create</name></name><argument_list pos:line="66" pos:column="74">(<argument><expr><op:operator pos:line="66" pos:column="75">new</op:operator> <call><name pos:line="66" pos:column="79">ConnectionStringSettings</name><argument_list pos:line="66" pos:column="103">(<argument><expr><name pos:line="66" pos:column="104">connectionStringName</name></expr></argument>, <argument><expr><name pos:line="66" pos:column="126">connectionString</name></expr></argument>, <argument><expr><name pos:line="66" pos:column="144">providerName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="68" pos:column="13">Assert</name><op:operator pos:line="68" pos:column="19">.</op:operator><name pos:line="68" pos:column="20">Equal</name></name><argument_list pos:line="68" pos:column="25">(<argument><expr><name pos:line="68" pos:column="26">providerName</name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="40">result</name><op:operator pos:line="68" pos:column="46">.</op:operator><name pos:line="68" pos:column="47">ProviderName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="69" pos:column="13">Assert</name><op:operator pos:line="69" pos:column="19">.</op:operator><name pos:line="69" pos:column="20">Equal</name></name><argument_list pos:line="69" pos:column="25">(<argument><expr><name pos:line="69" pos:column="26">connectionStringName</name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="48">result</name><op:operator pos:line="69" pos:column="54">.</op:operator><name pos:line="69" pos:column="55">Key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="70" pos:column="13">Assert</name><op:operator pos:line="70" pos:column="19">.</op:operator><name pos:line="70" pos:column="20">Equal</name></name><argument_list pos:line="70" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="70" pos:column="26">"Data Source=MyServer;Initial Catalog=MyDatabase;User Id=MyUsername;Password=########"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="114">result</name><op:operator pos:line="70" pos:column="120">.</op:operator><name pos:line="70" pos:column="121">Raw</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="71" pos:column="13">Assert</name><op:operator pos:line="71" pos:column="19">.</op:operator><name pos:line="71" pos:column="20">Equal</name></name><argument_list pos:line="71" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="71" pos:column="26">5</lit:literal></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="29">result</name><op:operator pos:line="71" pos:column="35">.</op:operator><name pos:line="71" pos:column="36">Details</name><op:operator pos:line="71" pos:column="43">.</op:operator><name pos:line="71" pos:column="44">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="72" pos:column="13">Assert</name><op:operator pos:line="72" pos:column="19">.</op:operator><name pos:line="72" pos:column="20">True</name></name><argument_list pos:line="72" pos:column="24">(<argument><expr><op:operator pos:line="72" pos:column="25">!</op:operator><call><name><name pos:line="72" pos:column="26">string</name><op:operator pos:line="72" pos:column="32">.</op:operator><name pos:line="72" pos:column="33">IsNullOrEmpty</name></name><argument_list pos:line="72" pos:column="46">(<argument><expr><name><name pos:line="72" pos:column="47">result</name><op:operator pos:line="72" pos:column="53">.</op:operator><name pos:line="72" pos:column="54">Details</name><index pos:line="72" pos:column="61">[<expr><lit:literal type="string" pos:line="72" pos:column="62">"FATAL"</lit:literal></expr>]</index></name> <op:operator pos:line="72" pos:column="71">as</op:operator> <name pos:line="72" pos:column="74">string</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="73" pos:column="13">Assert</name><op:operator pos:line="73" pos:column="19">.</op:operator><name pos:line="73" pos:column="20">Equal</name></name><argument_list pos:line="73" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="73" pos:column="26">"MyServer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="38">result</name><op:operator pos:line="73" pos:column="44">.</op:operator><name pos:line="73" pos:column="45">Details</name><index pos:line="73" pos:column="52">[<expr><lit:literal type="string" pos:line="73" pos:column="53">"Data Source"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="74" pos:column="13">Assert</name><op:operator pos:line="74" pos:column="19">.</op:operator><name pos:line="74" pos:column="20">Equal</name></name><argument_list pos:line="74" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="74" pos:column="26">"MyDatabase"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="40">result</name><op:operator pos:line="74" pos:column="46">.</op:operator><name pos:line="74" pos:column="47">Details</name><index pos:line="74" pos:column="54">[<expr><lit:literal type="string" pos:line="74" pos:column="55">"Initial Catalog"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="75" pos:column="13">Assert</name><op:operator pos:line="75" pos:column="19">.</op:operator><name pos:line="75" pos:column="20">Equal</name></name><argument_list pos:line="75" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="75" pos:column="26">"MyUsername"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="40">result</name><op:operator pos:line="75" pos:column="46">.</op:operator><name pos:line="75" pos:column="47">Details</name><index pos:line="75" pos:column="54">[<expr><lit:literal type="string" pos:line="75" pos:column="55">"User Id"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="76" pos:column="13">Assert</name><op:operator pos:line="76" pos:column="19">.</op:operator><name pos:line="76" pos:column="20">Equal</name></name><argument_list pos:line="76" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="76" pos:column="26">"########"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="38">result</name><op:operator pos:line="76" pos:column="44">.</op:operator><name pos:line="76" pos:column="45">Details</name><index pos:line="76" pos:column="52">[<expr><lit:literal type="string" pos:line="76" pos:column="53">"Password"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="79" pos:column="9">[<expr><name pos:line="79" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="80" pos:column="9">public</specifier> <name pos:line="80" pos:column="16">void</name></type> <name pos:line="80" pos:column="21">HaveParsedNonTypicalConnectionString</name><parameter_list pos:line="80" pos:column="57">()</parameter_list>
        <block pos:line="81" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="82" pos:column="13">const</specifier> <name pos:line="82" pos:column="19">string</name></type> <name pos:line="82" pos:column="26">connectionString</name> <init pos:line="82" pos:column="43">= <expr><lit:literal type="string" pos:line="82" pos:column="45">"DefaultEndpointsProtocol=https;AccountName=SomeAccount;AccountKey=SomeAccountKey"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="83" pos:column="13">const</specifier> <name pos:line="83" pos:column="19">string</name></type> <name pos:line="83" pos:column="26">connectionStringName</name> <init pos:line="83" pos:column="47">= <expr><lit:literal type="string" pos:line="83" pos:column="49">"MyConnectionString"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="84" pos:column="13">const</specifier> <name pos:line="84" pos:column="19">string</name></type> <name pos:line="84" pos:column="26">providerName</name> <init pos:line="84" pos:column="39">= <expr><name pos:line="84" pos:column="41">null</name></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="86" pos:column="13">var</name></type> <name pos:line="86" pos:column="17">result</name> <init pos:line="86" pos:column="24">= <expr><call><name><name pos:line="86" pos:column="26">ConfigurationConnectionStringModelFactory</name><op:operator pos:line="86" pos:column="67">.</op:operator><name pos:line="86" pos:column="68">Create</name></name><argument_list pos:line="86" pos:column="74">(<argument><expr><op:operator pos:line="86" pos:column="75">new</op:operator> <call><name pos:line="86" pos:column="79">ConnectionStringSettings</name><argument_list pos:line="86" pos:column="103">(<argument><expr><name pos:line="86" pos:column="104">connectionStringName</name></expr></argument>, <argument><expr><name pos:line="86" pos:column="126">connectionString</name></expr></argument>, <argument><expr><name pos:line="86" pos:column="144">providerName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="88" pos:column="13">Assert</name><op:operator pos:line="88" pos:column="19">.</op:operator><name pos:line="88" pos:column="20">Equal</name></name><argument_list pos:line="88" pos:column="25">(<argument><expr><name pos:line="88" pos:column="26">providerName</name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="40">result</name><op:operator pos:line="88" pos:column="46">.</op:operator><name pos:line="88" pos:column="47">ProviderName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="89" pos:column="13">Assert</name><op:operator pos:line="89" pos:column="19">.</op:operator><name pos:line="89" pos:column="20">Equal</name></name><argument_list pos:line="89" pos:column="25">(<argument><expr><name pos:line="89" pos:column="26">connectionStringName</name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="48">result</name><op:operator pos:line="89" pos:column="54">.</op:operator><name pos:line="89" pos:column="55">Key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="90" pos:column="13">Assert</name><op:operator pos:line="90" pos:column="19">.</op:operator><name pos:line="90" pos:column="20">Equal</name></name><argument_list pos:line="90" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="90" pos:column="26">"DefaultEndpointsProtocol=https;AccountName=SomeAccount;AccountKey=########"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="104">result</name><op:operator pos:line="90" pos:column="110">.</op:operator><name pos:line="90" pos:column="111">Raw</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="91" pos:column="13">Assert</name><op:operator pos:line="91" pos:column="19">.</op:operator><name pos:line="91" pos:column="20">Equal</name></name><argument_list pos:line="91" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="91" pos:column="26">5</lit:literal></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="29">result</name><op:operator pos:line="91" pos:column="35">.</op:operator><name pos:line="91" pos:column="36">Details</name><op:operator pos:line="91" pos:column="43">.</op:operator><name pos:line="91" pos:column="44">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="92" pos:column="13">Assert</name><op:operator pos:line="92" pos:column="19">.</op:operator><name pos:line="92" pos:column="20">Equal</name></name><argument_list pos:line="92" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="92" pos:column="26">"ProviderName is empty, therefore assuming ProviderName=System.Data.SqlClient"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="106">result</name><op:operator pos:line="92" pos:column="112">.</op:operator><name pos:line="92" pos:column="113">Details</name><index pos:line="92" pos:column="120">[<expr><lit:literal type="string" pos:line="92" pos:column="121">"WARNING"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="93" pos:column="13">Assert</name><op:operator pos:line="93" pos:column="19">.</op:operator><name pos:line="93" pos:column="20">True</name></name><argument_list pos:line="93" pos:column="24">(<argument><expr><name><name pos:line="93" pos:column="25">result</name><op:operator pos:line="93" pos:column="31">.</op:operator><name pos:line="93" pos:column="32">Details</name><index pos:line="93" pos:column="39">[<expr><lit:literal type="string" pos:line="93" pos:column="40">"ERROR"</lit:literal></expr>]</index></name><op:operator pos:line="93" pos:column="48">.</op:operator><call><name pos:line="93" pos:column="49">ToString</name><argument_list pos:line="93" pos:column="57">()</argument_list></call><op:operator pos:line="93" pos:column="59">.</op:operator><call><name pos:line="93" pos:column="60">StartsWith</name><argument_list pos:line="93" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="71">"Connection string is invalid for ProviderName=System.Data.SqlClient : "</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="94" pos:column="13">Assert</name><op:operator pos:line="94" pos:column="19">.</op:operator><name pos:line="94" pos:column="20">Equal</name></name><argument_list pos:line="94" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="94" pos:column="26">"https"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="35">result</name><op:operator pos:line="94" pos:column="41">.</op:operator><name pos:line="94" pos:column="42">Details</name><index pos:line="94" pos:column="49">[<expr><lit:literal type="string" pos:line="94" pos:column="50">"DefaultEndpointsProtocol"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="95" pos:column="13">Assert</name><op:operator pos:line="95" pos:column="19">.</op:operator><name pos:line="95" pos:column="20">Equal</name></name><argument_list pos:line="95" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="95" pos:column="26">"SomeAccount"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="41">result</name><op:operator pos:line="95" pos:column="47">.</op:operator><name pos:line="95" pos:column="48">Details</name><index pos:line="95" pos:column="55">[<expr><lit:literal type="string" pos:line="95" pos:column="56">"AccountName"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="96" pos:column="13">Assert</name><op:operator pos:line="96" pos:column="19">.</op:operator><name pos:line="96" pos:column="20">Equal</name></name><argument_list pos:line="96" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="96" pos:column="26">"########"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="38">result</name><op:operator pos:line="96" pos:column="44">.</op:operator><name pos:line="96" pos:column="45">Details</name><index pos:line="96" pos:column="52">[<expr><lit:literal type="string" pos:line="96" pos:column="53">"AccountKey"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="99" pos:column="9">[<expr><name pos:line="99" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="100" pos:column="9">public</specifier> <name pos:line="100" pos:column="16">void</name></type> <name pos:line="100" pos:column="21">HaveObfuscatedMultipleKeys</name><parameter_list pos:line="100" pos:column="47">()</parameter_list>
        <block pos:line="101" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="102" pos:column="13">const</specifier> <name pos:line="102" pos:column="19">string</name></type> <name pos:line="102" pos:column="26">connectionString</name> <init pos:line="102" pos:column="43">= <expr><lit:literal type="string" pos:line="102" pos:column="45">"DefaultEndpointsProtocol=https;AccountName=SomeAccount;AccountKey=SomeAccountKey;Password=SomePassword"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="103" pos:column="13">const</specifier> <name pos:line="103" pos:column="19">string</name></type> <name pos:line="103" pos:column="26">connectionStringName</name> <init pos:line="103" pos:column="47">= <expr><lit:literal type="string" pos:line="103" pos:column="49">"MyConnectionString"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="104" pos:column="13">const</specifier> <name pos:line="104" pos:column="19">string</name></type> <name pos:line="104" pos:column="26">providerName</name> <init pos:line="104" pos:column="39">= <expr><name pos:line="104" pos:column="41">null</name></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="106" pos:column="13">var</name></type> <name pos:line="106" pos:column="17">result</name> <init pos:line="106" pos:column="24">= <expr><call><name><name pos:line="106" pos:column="26">ConfigurationConnectionStringModelFactory</name><op:operator pos:line="106" pos:column="67">.</op:operator><name pos:line="106" pos:column="68">Create</name></name><argument_list pos:line="106" pos:column="74">(<argument><expr><op:operator pos:line="106" pos:column="75">new</op:operator> <call><name pos:line="106" pos:column="79">ConnectionStringSettings</name><argument_list pos:line="106" pos:column="103">(<argument><expr><name pos:line="106" pos:column="104">connectionStringName</name></expr></argument>, <argument><expr><name pos:line="106" pos:column="126">connectionString</name></expr></argument>, <argument><expr><name pos:line="106" pos:column="144">providerName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="108" pos:column="13">Assert</name><op:operator pos:line="108" pos:column="19">.</op:operator><name pos:line="108" pos:column="20">Equal</name></name><argument_list pos:line="108" pos:column="25">(<argument><expr><name pos:line="108" pos:column="26">providerName</name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="40">result</name><op:operator pos:line="108" pos:column="46">.</op:operator><name pos:line="108" pos:column="47">ProviderName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="109" pos:column="13">Assert</name><op:operator pos:line="109" pos:column="19">.</op:operator><name pos:line="109" pos:column="20">Equal</name></name><argument_list pos:line="109" pos:column="25">(<argument><expr><name pos:line="109" pos:column="26">connectionStringName</name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="48">result</name><op:operator pos:line="109" pos:column="54">.</op:operator><name pos:line="109" pos:column="55">Key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="110" pos:column="13">Assert</name><op:operator pos:line="110" pos:column="19">.</op:operator><name pos:line="110" pos:column="20">Equal</name></name><argument_list pos:line="110" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="110" pos:column="26">"DefaultEndpointsProtocol=https;AccountName=SomeAccount;AccountKey=########;Password=########"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="122">result</name><op:operator pos:line="110" pos:column="128">.</op:operator><name pos:line="110" pos:column="129">Raw</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="111" pos:column="13">Assert</name><op:operator pos:line="111" pos:column="19">.</op:operator><name pos:line="111" pos:column="20">Equal</name></name><argument_list pos:line="111" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="111" pos:column="26">6</lit:literal></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="29">result</name><op:operator pos:line="111" pos:column="35">.</op:operator><name pos:line="111" pos:column="36">Details</name><op:operator pos:line="111" pos:column="43">.</op:operator><name pos:line="111" pos:column="44">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="112" pos:column="13">Assert</name><op:operator pos:line="112" pos:column="19">.</op:operator><name pos:line="112" pos:column="20">Equal</name></name><argument_list pos:line="112" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="112" pos:column="26">"ProviderName is empty, therefore assuming ProviderName=System.Data.SqlClient"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="106">result</name><op:operator pos:line="112" pos:column="112">.</op:operator><name pos:line="112" pos:column="113">Details</name><index pos:line="112" pos:column="120">[<expr><lit:literal type="string" pos:line="112" pos:column="121">"WARNING"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="113" pos:column="13">Assert</name><op:operator pos:line="113" pos:column="19">.</op:operator><name pos:line="113" pos:column="20">True</name></name><argument_list pos:line="113" pos:column="24">(<argument><expr><name><name pos:line="113" pos:column="25">result</name><op:operator pos:line="113" pos:column="31">.</op:operator><name pos:line="113" pos:column="32">Details</name><index pos:line="113" pos:column="39">[<expr><lit:literal type="string" pos:line="113" pos:column="40">"ERROR"</lit:literal></expr>]</index></name><op:operator pos:line="113" pos:column="48">.</op:operator><call><name pos:line="113" pos:column="49">ToString</name><argument_list pos:line="113" pos:column="57">()</argument_list></call><op:operator pos:line="113" pos:column="59">.</op:operator><call><name pos:line="113" pos:column="60">StartsWith</name><argument_list pos:line="113" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="71">"Connection string is invalid for ProviderName=System.Data.SqlClient : "</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="114" pos:column="13">Assert</name><op:operator pos:line="114" pos:column="19">.</op:operator><name pos:line="114" pos:column="20">Equal</name></name><argument_list pos:line="114" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="114" pos:column="26">"https"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="35">result</name><op:operator pos:line="114" pos:column="41">.</op:operator><name pos:line="114" pos:column="42">Details</name><index pos:line="114" pos:column="49">[<expr><lit:literal type="string" pos:line="114" pos:column="50">"DefaultEndpointsProtocol"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="115" pos:column="13">Assert</name><op:operator pos:line="115" pos:column="19">.</op:operator><name pos:line="115" pos:column="20">Equal</name></name><argument_list pos:line="115" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="115" pos:column="26">"SomeAccount"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="41">result</name><op:operator pos:line="115" pos:column="47">.</op:operator><name pos:line="115" pos:column="48">Details</name><index pos:line="115" pos:column="55">[<expr><lit:literal type="string" pos:line="115" pos:column="56">"AccountName"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="116" pos:column="13">Assert</name><op:operator pos:line="116" pos:column="19">.</op:operator><name pos:line="116" pos:column="20">Equal</name></name><argument_list pos:line="116" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="116" pos:column="26">"########"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="38">result</name><op:operator pos:line="116" pos:column="44">.</op:operator><name pos:line="116" pos:column="45">Details</name><index pos:line="116" pos:column="52">[<expr><lit:literal type="string" pos:line="116" pos:column="53">"AccountKey"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="117" pos:column="13">Assert</name><op:operator pos:line="117" pos:column="19">.</op:operator><name pos:line="117" pos:column="20">Equal</name></name><argument_list pos:line="117" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="117" pos:column="26">"########"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="38">result</name><op:operator pos:line="117" pos:column="44">.</op:operator><name pos:line="117" pos:column="45">Details</name><index pos:line="117" pos:column="52">[<expr><lit:literal type="string" pos:line="117" pos:column="53">"Password"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
