<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\System.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">Glimpse</name><op:operator pos:line="1" pos:column="14">.</op:operator><name pos:line="1" pos:column="15">Core</name><op:operator pos:line="1" pos:column="19">.</op:operator><name pos:line="1" pos:column="20">Setting</name></name>;</using>

<namespace pos:line="3" pos:column="1">namespace <name pos:line="3" pos:column="11">Glimpse</name>
<block pos:line="4" pos:column="1">{
    <comment type="line" pos:line="5" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="6" pos:column="5">/// Hook that is used to hang any system settings </comment>
    <comment type="line" pos:line="7" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="8" pos:column="5">public</specifier> <specifier pos:line="8" pos:column="12">static</specifier> class <name pos:line="8" pos:column="25">Settings</name>
    <block pos:line="9" pos:column="5">{
        <comment type="line" pos:line="10" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="11" pos:column="9">/// Hook that is used to hang initialization code from. No method </comment>
        <comment type="line" pos:line="12" pos:column="9">/// here is required to be called. You should only need to use this </comment>
        <comment type="line" pos:line="13" pos:column="9">/// code if Glimpse doesn't initialize soon enough in the application</comment>
        <comment type="line" pos:line="14" pos:column="9">/// life cycle for your purposes.</comment>
        <comment type="line" pos:line="15" pos:column="9">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">public</specifier> <specifier pos:line="16" pos:column="16">static</specifier> <specifier pos:line="16" pos:column="23">readonly</specifier> <name pos:line="16" pos:column="32">Initializer</name></type> <name pos:line="16" pos:column="44">Initialize</name> <init pos:line="16" pos:column="55">= <expr><op:operator pos:line="16" pos:column="57">new</op:operator> <call><name pos:line="16" pos:column="61">Initializer</name><argument_list pos:line="16" pos:column="72">()</argument_list></call></expr></init></decl>;</decl_stmt>
    }</block></class>
}</block></namespace>
</unit>
