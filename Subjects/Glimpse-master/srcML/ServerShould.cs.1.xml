<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.AspNet\Tab\ServerShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Collections</name><op:operator pos:line="3" pos:column="25">.</op:operator><name pos:line="3" pos:column="26">Specialized</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Linq</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Text</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Web</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">AspNet</name><op:operator pos:line="7" pos:column="21">.</op:operator><name pos:line="7" pos:column="22">Model</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Glimpse</name><op:operator pos:line="8" pos:column="14">.</op:operator><name pos:line="8" pos:column="15">AspNet</name><op:operator pos:line="8" pos:column="21">.</op:operator><name pos:line="8" pos:column="22">Tab</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Glimpse</name><op:operator pos:line="9" pos:column="14">.</op:operator><name pos:line="9" pos:column="15">Core</name><op:operator pos:line="9" pos:column="19">.</op:operator><name pos:line="9" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Glimpse</name><op:operator pos:line="10" pos:column="14">.</op:operator><name pos:line="10" pos:column="15">Test</name><op:operator pos:line="10" pos:column="19">.</op:operator><name pos:line="10" pos:column="20">Common</name></name>;</using>
<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">Moq</name>;</using>
<using pos:line="12" pos:column="1">using <name pos:line="12" pos:column="7">Xunit</name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Xunit</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">Extensions</name></name>;</using>

<namespace pos:line="15" pos:column="1">namespace <name><name pos:line="15" pos:column="11">Glimpse</name><op:operator pos:line="15" pos:column="18">.</op:operator><name pos:line="15" pos:column="19">Test</name><op:operator pos:line="15" pos:column="23">.</op:operator><name pos:line="15" pos:column="24">AspNet</name><op:operator pos:line="15" pos:column="30">.</op:operator><name pos:line="15" pos:column="31">Tab</name></name>
<block pos:line="16" pos:column="1">{
    <class><specifier pos:line="17" pos:column="5">public</specifier> class <name pos:line="17" pos:column="18">ServerShould</name>
    <block pos:line="18" pos:column="5">{
        <function><type><attribute pos:line="19" pos:column="9">[<expr><name pos:line="19" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">void</name></type> <name pos:line="20" pos:column="21">HaveProperContextObjectType</name><parameter_list pos:line="20" pos:column="48">()</parameter_list>
        <block pos:line="21" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">var</name></type> <name pos:line="22" pos:column="17">server</name> <init pos:line="22" pos:column="24">= <expr><op:operator pos:line="22" pos:column="26">new</op:operator> <call><name pos:line="22" pos:column="30">Server</name><argument_list pos:line="22" pos:column="36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="24" pos:column="13">Assert</name><op:operator pos:line="24" pos:column="19">.</op:operator><name pos:line="24" pos:column="20">Equal</name></name><argument_list pos:line="24" pos:column="25">(<argument><expr><call><name pos:line="24" pos:column="26">typeof</name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">HttpContextBase</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="51">server</name><op:operator pos:line="24" pos:column="57">.</op:operator><name pos:line="24" pos:column="58">RequestContextType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="27" pos:column="9">[<expr><name pos:line="27" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="28" pos:column="9">public</specifier> <name pos:line="28" pos:column="16">void</name></type> <name pos:line="28" pos:column="21">UseDefaultLifeCycleSupport</name><parameter_list pos:line="28" pos:column="47">()</parameter_list>
        <block pos:line="29" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="30" pos:column="13">var</name></type> <name pos:line="30" pos:column="17">server</name> <init pos:line="30" pos:column="24">= <expr><op:operator pos:line="30" pos:column="26">new</op:operator> <call><name pos:line="30" pos:column="30">Server</name><argument_list pos:line="30" pos:column="36">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">Assert</name><op:operator pos:line="31" pos:column="19">.</op:operator><name pos:line="31" pos:column="20">Equal</name></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name><name pos:line="31" pos:column="26">RuntimeEvent</name><op:operator pos:line="31" pos:column="38">.</op:operator><name pos:line="31" pos:column="39">EndRequest</name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="51">server</name><op:operator pos:line="31" pos:column="57">.</op:operator><name pos:line="31" pos:column="58">ExecuteOn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="34" pos:column="9">[<expr><name pos:line="34" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="35" pos:column="9">public</specifier> <name pos:line="35" pos:column="16">void</name></type> <name pos:line="35" pos:column="21">BeNamedRequest</name><parameter_list pos:line="35" pos:column="35">()</parameter_list>
        <block pos:line="36" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="37" pos:column="13">var</name></type> <name pos:line="37" pos:column="17">server</name> <init pos:line="37" pos:column="24">= <expr><op:operator pos:line="37" pos:column="26">new</op:operator> <call><name pos:line="37" pos:column="30">Server</name><argument_list pos:line="37" pos:column="36">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">Assert</name><op:operator pos:line="38" pos:column="19">.</op:operator><name pos:line="38" pos:column="20">Equal</name></name><argument_list pos:line="38" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="26">"Server"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="36">server</name><op:operator pos:line="38" pos:column="42">.</op:operator><name pos:line="38" pos:column="43">Name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="41" pos:column="9">[<expr><name pos:line="41" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="42" pos:column="9">public</specifier> <name pos:line="42" pos:column="16">void</name></type> <name pos:line="42" pos:column="21">HaveADocumentationUri</name><parameter_list pos:line="42" pos:column="42">()</parameter_list>
        <block pos:line="43" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="44" pos:column="13">var</name></type> <name pos:line="44" pos:column="17">server</name> <init pos:line="44" pos:column="24">= <expr><op:operator pos:line="44" pos:column="26">new</op:operator> <call><name pos:line="44" pos:column="30">Server</name><argument_list pos:line="44" pos:column="36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">Assert</name><op:operator pos:line="46" pos:column="19">.</op:operator><name pos:line="46" pos:column="20">False</name></name><argument_list pos:line="46" pos:column="25">(<argument><expr><call><name><name pos:line="46" pos:column="26">string</name><op:operator pos:line="46" pos:column="32">.</op:operator><name pos:line="46" pos:column="33">IsNullOrWhiteSpace</name></name><argument_list pos:line="46" pos:column="51">(<argument><expr><name><name pos:line="46" pos:column="52">server</name><op:operator pos:line="46" pos:column="58">.</op:operator><name pos:line="46" pos:column="59">DocumentationUri</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="49" pos:column="9">[<expr><name pos:line="49" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="50" pos:column="9">public</specifier> <name pos:line="50" pos:column="16">void</name></type> <name pos:line="50" pos:column="21">ReturnData</name><parameter_list pos:line="50" pos:column="31">()</parameter_list>
        <block pos:line="51" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="52" pos:column="13">var</name></type> <name pos:line="52" pos:column="17">serverVariables</name> <init pos:line="52" pos:column="33">= <expr><op:operator pos:line="52" pos:column="35">new</op:operator> <name pos:line="52" pos:column="39">NameValueCollection</name> <block pos:line="52" pos:column="59">{ <expr><block pos:line="52" pos:column="61">{ <expr><lit:literal type="string" pos:line="52" pos:column="63">"Name"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="52" pos:column="71">"Value"</lit:literal></expr> }</block></expr>, <expr><block pos:line="52" pos:column="82">{ <expr><lit:literal type="string" pos:line="52" pos:column="84">"Name1"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="52" pos:column="93">"Value1"</lit:literal></expr> }</block></expr>, <expr><block pos:line="52" pos:column="105">{ <expr><lit:literal type="string" pos:line="52" pos:column="107">"HTTP_TEST"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="52" pos:column="120">"http_test_value"</lit:literal></expr> }</block></expr>, <expr><block pos:line="52" pos:column="141">{<expr><lit:literal type="string" pos:line="52" pos:column="142">"CERT_TEST"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="52" pos:column="155">"cert_test_value"</lit:literal></expr>}</block></expr>, <expr><block pos:line="52" pos:column="175">{ <expr><lit:literal type="string" pos:line="52" pos:column="177">"HTTPS_TEST"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="52" pos:column="191">"https_test_value"</lit:literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="54" pos:column="13">var</name></type> <name pos:line="54" pos:column="17">requestMock</name> <init pos:line="54" pos:column="29">= <expr><op:operator pos:line="54" pos:column="31">new</op:operator> <call><name><name pos:line="54" pos:column="35">Mock</name><argument_list pos:line="54" pos:column="39">&lt;<argument><name pos:line="54" pos:column="40">HttpRequestBase</name></argument>&gt;</argument_list></name><argument_list pos:line="54" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="55" pos:column="13">requestMock</name><op:operator pos:line="55" pos:column="24">.</op:operator><name pos:line="55" pos:column="25">Setup</name></name><argument_list pos:line="55" pos:column="30">(<argument><expr><lambda><name pos:line="55" pos:column="31">r</name> <op:operator pos:line="55" pos:column="33">=&gt;</op:operator> <name><name pos:line="55" pos:column="36">r</name><op:operator pos:line="55" pos:column="37">.</op:operator><name pos:line="55" pos:column="38">ServerVariables</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="55" pos:column="54">.</op:operator><call><name pos:line="55" pos:column="55">Returns</name><argument_list pos:line="55" pos:column="62">(<argument><expr><name pos:line="55" pos:column="63">serverVariables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="56" pos:column="13">var</name></type> <name pos:line="56" pos:column="17">httpBaseMock</name> <init pos:line="56" pos:column="30">= <expr><op:operator pos:line="56" pos:column="32">new</op:operator> <call><name><name pos:line="56" pos:column="36">Mock</name><argument_list pos:line="56" pos:column="40">&lt;<argument><name pos:line="56" pos:column="41">HttpContextBase</name></argument>&gt;</argument_list></name><argument_list pos:line="56" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="57" pos:column="13">httpBaseMock</name><op:operator pos:line="57" pos:column="25">.</op:operator><name pos:line="57" pos:column="26">Setup</name></name><argument_list pos:line="57" pos:column="31">(<argument><expr><lambda><name pos:line="57" pos:column="32">c</name> <op:operator pos:line="57" pos:column="34">=&gt;</op:operator> <name><name pos:line="57" pos:column="37">c</name><op:operator pos:line="57" pos:column="38">.</op:operator><name pos:line="57" pos:column="39">Request</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="57" pos:column="47">.</op:operator><call><name pos:line="57" pos:column="48">Returns</name><argument_list pos:line="57" pos:column="55">(<argument><expr><name><name pos:line="57" pos:column="56">requestMock</name><op:operator pos:line="57" pos:column="67">.</op:operator><name pos:line="57" pos:column="68">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="58" pos:column="13">var</name></type> <name pos:line="58" pos:column="17">contextMock</name> <init pos:line="58" pos:column="29">= <expr><op:operator pos:line="58" pos:column="31">new</op:operator> <call><name><name pos:line="58" pos:column="35">Mock</name><argument_list pos:line="58" pos:column="39">&lt;<argument><name pos:line="58" pos:column="40">ITabContext</name></argument>&gt;</argument_list></name><argument_list pos:line="58" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="59" pos:column="13">contextMock</name><op:operator pos:line="59" pos:column="24">.</op:operator><name pos:line="59" pos:column="25">Setup</name></name><argument_list pos:line="59" pos:column="30">(<argument><expr><lambda><name pos:line="59" pos:column="31">c</name> <op:operator pos:line="59" pos:column="33">=&gt;</op:operator> <call><name><name pos:line="59" pos:column="36">c</name><op:operator pos:line="59" pos:column="37">.</op:operator><name><name pos:line="59" pos:column="38">GetRequestContext</name><argument_list pos:line="59" pos:column="55">&lt;<argument><name pos:line="59" pos:column="56">HttpContextBase</name></argument>&gt;</argument_list></name></name><argument_list pos:line="59" pos:column="72">()</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="59" pos:column="75">.</op:operator><call><name pos:line="59" pos:column="76">Returns</name><argument_list pos:line="59" pos:column="83">(<argument><expr><name><name pos:line="59" pos:column="84">httpBaseMock</name><op:operator pos:line="59" pos:column="96">.</op:operator><name pos:line="59" pos:column="97">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="61" pos:column="13">var</name></type> <name pos:line="61" pos:column="17">server</name> <init pos:line="61" pos:column="24">= <expr><op:operator pos:line="61" pos:column="26">new</op:operator> <call><name pos:line="61" pos:column="30">Server</name><argument_list pos:line="61" pos:column="36">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="62" pos:column="13">var</name></type> <name pos:line="62" pos:column="17">result</name> <init pos:line="62" pos:column="24">= <expr><call><name><name pos:line="62" pos:column="26">server</name><op:operator pos:line="62" pos:column="32">.</op:operator><name pos:line="62" pos:column="33">GetData</name></name><argument_list pos:line="62" pos:column="40">(<argument><expr><name><name pos:line="62" pos:column="41">contextMock</name><op:operator pos:line="62" pos:column="52">.</op:operator><name pos:line="62" pos:column="53">Object</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="62" pos:column="61">as</op:operator> <name pos:line="62" pos:column="64">ServerModel</name></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="64" pos:column="13">Assert</name><op:operator pos:line="64" pos:column="19">.</op:operator><name pos:line="64" pos:column="20">NotNull</name></name><argument_list pos:line="64" pos:column="27">(<argument><expr><name pos:line="64" pos:column="28">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="66" pos:column="13">var</name></type> <name pos:line="66" pos:column="17">generalVariables</name> <init pos:line="66" pos:column="34">= <expr><name><name pos:line="66" pos:column="36">result</name><op:operator pos:line="66" pos:column="42">.</op:operator><name pos:line="66" pos:column="43">GeneralVariables</name></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="67" pos:column="13">Assert</name><op:operator pos:line="67" pos:column="19">.</op:operator><name pos:line="67" pos:column="20">NotNull</name></name><argument_list pos:line="67" pos:column="27">(<argument><expr><name pos:line="67" pos:column="28">generalVariables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="68" pos:column="13">Assert</name><op:operator pos:line="68" pos:column="19">.</op:operator><name pos:line="68" pos:column="20">Equal</name></name><argument_list pos:line="68" pos:column="25">(<argument><expr><call><name><name pos:line="68" pos:column="26">generalVariables</name><op:operator pos:line="68" pos:column="42">.</op:operator><name pos:line="68" pos:column="43">Count</name></name><argument_list pos:line="68" pos:column="48">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="68" pos:column="52">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="69" pos:column="13">Assert</name><op:operator pos:line="69" pos:column="19">.</op:operator><name pos:line="69" pos:column="20">Equal</name></name><argument_list pos:line="69" pos:column="25">(<argument><expr><name><name pos:line="69" pos:column="26">generalVariables</name><index pos:line="69" pos:column="42">[<expr><lit:literal type="string" pos:line="69" pos:column="43">"Name"</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="69" pos:column="52">"Value"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="70" pos:column="13">Assert</name><op:operator pos:line="70" pos:column="19">.</op:operator><name pos:line="70" pos:column="20">Equal</name></name><argument_list pos:line="70" pos:column="25">(<argument><expr><name><name pos:line="70" pos:column="26">generalVariables</name><index pos:line="70" pos:column="42">[<expr><lit:literal type="string" pos:line="70" pos:column="43">"Name1"</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="70" pos:column="53">"Value1"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="72" pos:column="13">var</name></type> <name pos:line="72" pos:column="17">httpVariables</name> <init pos:line="72" pos:column="31">= <expr><name><name pos:line="72" pos:column="33">result</name><op:operator pos:line="72" pos:column="39">.</op:operator><name pos:line="72" pos:column="40">HttpVariables</name></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="73" pos:column="13">Assert</name><op:operator pos:line="73" pos:column="19">.</op:operator><name pos:line="73" pos:column="20">NotNull</name></name><argument_list pos:line="73" pos:column="27">(<argument><expr><name pos:line="73" pos:column="28">httpVariables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="74" pos:column="13">Assert</name><op:operator pos:line="74" pos:column="19">.</op:operator><name pos:line="74" pos:column="20">Equal</name></name><argument_list pos:line="74" pos:column="25">(<argument><expr><call><name><name pos:line="74" pos:column="26">httpVariables</name><op:operator pos:line="74" pos:column="39">.</op:operator><name pos:line="74" pos:column="40">Count</name></name><argument_list pos:line="74" pos:column="45">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="74" pos:column="49">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="75" pos:column="13">Assert</name><op:operator pos:line="75" pos:column="19">.</op:operator><name pos:line="75" pos:column="20">Equal</name></name><argument_list pos:line="75" pos:column="25">(<argument><expr><name><name pos:line="75" pos:column="26">httpVariables</name><index pos:line="75" pos:column="39">[<expr><lit:literal type="string" pos:line="75" pos:column="40">"HTTP_TEST"</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="75" pos:column="54">"http_test_value"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="77" pos:column="13">var</name></type> <name pos:line="77" pos:column="17">securityRelatedVariables</name> <init pos:line="77" pos:column="42">= <expr><name><name pos:line="77" pos:column="44">result</name><op:operator pos:line="77" pos:column="50">.</op:operator><name pos:line="77" pos:column="51">SecurityRelatedVariables</name></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="78" pos:column="13">Assert</name><op:operator pos:line="78" pos:column="19">.</op:operator><name pos:line="78" pos:column="20">NotNull</name></name><argument_list pos:line="78" pos:column="27">(<argument><expr><name pos:line="78" pos:column="28">securityRelatedVariables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="79" pos:column="13">Assert</name><op:operator pos:line="79" pos:column="19">.</op:operator><name pos:line="79" pos:column="20">Equal</name></name><argument_list pos:line="79" pos:column="25">(<argument><expr><call><name><name pos:line="79" pos:column="26">securityRelatedVariables</name><op:operator pos:line="79" pos:column="50">.</op:operator><name pos:line="79" pos:column="51">Count</name></name><argument_list pos:line="79" pos:column="56">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="79" pos:column="60">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="80" pos:column="13">Assert</name><op:operator pos:line="80" pos:column="19">.</op:operator><name pos:line="80" pos:column="20">Equal</name></name><argument_list pos:line="80" pos:column="25">(<argument><expr><name><name pos:line="80" pos:column="26">securityRelatedVariables</name><index pos:line="80" pos:column="50">[<expr><lit:literal type="string" pos:line="80" pos:column="51">"HTTPS_TEST"</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="80" pos:column="66">"https_test_value"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="81" pos:column="13">Assert</name><op:operator pos:line="81" pos:column="19">.</op:operator><name pos:line="81" pos:column="20">Equal</name></name><argument_list pos:line="81" pos:column="25">(<argument><expr><name><name pos:line="81" pos:column="26">securityRelatedVariables</name><index pos:line="81" pos:column="50">[<expr><lit:literal type="string" pos:line="81" pos:column="51">"CERT_TEST"</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="81" pos:column="65">"cert_test_value"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
