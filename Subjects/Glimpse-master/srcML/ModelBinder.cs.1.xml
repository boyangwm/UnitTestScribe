<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc\AlternateType\ModelBinder.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">ComponentModel</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Reflection</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Web</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Mvc</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Core</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Message</name></name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Glimpse</name><op:operator pos:line="9" pos:column="18">.</op:operator><name pos:line="9" pos:column="19">Mvc</name><op:operator pos:line="9" pos:column="22">.</op:operator><name pos:line="9" pos:column="23">AlternateType</name></name>
<block pos:line="10" pos:column="1">{
    <class><specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">ModelBinder</name> <super pos:line="11" pos:column="30">: <name><name pos:line="11" pos:column="32">AlternateType</name><argument_list pos:line="11" pos:column="45">&lt;<argument><name pos:line="11" pos:column="46">IModelBinder</name></argument>&gt;</argument_list></name></super>
    <block pos:line="12" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">private</specifier> <name><name pos:line="13" pos:column="17">IEnumerable</name><argument_list pos:line="13" pos:column="28">&lt;<argument><name pos:line="13" pos:column="29">IAlternateMethod</name></argument>&gt;</argument_list></name></type> <name pos:line="13" pos:column="47">allMethods</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="15" pos:column="9">public</specifier> <name pos:line="15" pos:column="16">ModelBinder</name><parameter_list pos:line="15" pos:column="27">(<param><decl><type><name pos:line="15" pos:column="28">IProxyFactory</name></type> <name pos:line="15" pos:column="42">proxyFactory</name></decl></param>)</parameter_list> <member_list pos:line="15" pos:column="56">: <call><name pos:line="15" pos:column="58">base</name><argument_list pos:line="15" pos:column="62">(<argument><expr><name pos:line="15" pos:column="63">proxyFactory</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="16" pos:column="9">{
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">public</specifier> <specifier pos:line="19" pos:column="16">override</specifier> <name><name pos:line="19" pos:column="25">IEnumerable</name><argument_list pos:line="19" pos:column="36">&lt;<argument><name pos:line="19" pos:column="37">IAlternateMethod</name></argument>&gt;</argument_list></name></type> <name pos:line="19" pos:column="55">AllMethods</name>
        <block pos:line="20" pos:column="9">{
            <function><name pos:line="21" pos:column="13">get</name> 
            <block pos:line="22" pos:column="13">{ 
                <return pos:line="23" pos:column="17">return <expr><name pos:line="23" pos:column="24">allMethods</name> <op:operator pos:line="23" pos:column="35">??</op:operator> <op:operator pos:line="23" pos:column="38">(</op:operator><name pos:line="23" pos:column="39">allMethods</name> <op:operator pos:line="23" pos:column="50">=</op:operator> <op:operator pos:line="23" pos:column="52">new</op:operator> <name><name pos:line="23" pos:column="56">List</name><argument_list pos:line="23" pos:column="60">&lt;<argument><name pos:line="23" pos:column="61">IAlternateMethod</name></argument>&gt;</argument_list></name>
                <block pos:line="24" pos:column="17">{
                    <expr><op:operator pos:line="25" pos:column="21">new</op:operator> <call><name pos:line="25" pos:column="25">BindModel</name><argument_list pos:line="25" pos:column="34">()</argument_list></call></expr><op:operator pos:line="25" pos:column="36">,</op:operator>
                    <expr><op:operator pos:line="26" pos:column="21">new</op:operator> <call><name pos:line="26" pos:column="25">BindProperty</name><argument_list pos:line="26" pos:column="37">()</argument_list></call></expr>
                }</block>)</expr>;</return> 
            }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="31" pos:column="9">public</specifier> <specifier pos:line="31" pos:column="16">override</specifier> <name pos:line="31" pos:column="25">bool</name></type> <name pos:line="31" pos:column="30">TryCreate</name><parameter_list pos:line="31" pos:column="39">(<param><decl><type><name pos:line="31" pos:column="40">IModelBinder</name></type> <name pos:line="31" pos:column="53">originalObj</name></decl></param>, <param><decl><type><specifier pos:line="31" pos:column="66">out</specifier> <name pos:line="31" pos:column="70">IModelBinder</name></type> <name pos:line="31" pos:column="83">newObj</name></decl></param>, <param><decl><type><name><name pos:line="31" pos:column="91">IEnumerable</name><argument_list pos:line="31" pos:column="102">&lt;<argument><name pos:line="31" pos:column="103">object</name></argument>&gt;</argument_list></name></type> <name pos:line="31" pos:column="111">mixins</name></decl></param>, <param><decl><type><name><name pos:line="31" pos:column="119">object</name><index pos:line="31" pos:column="125">[]</index></name></type> <name pos:line="31" pos:column="128">constructorArgs</name></decl></param>)</parameter_list>
        <block pos:line="32" pos:column="9">{
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><name pos:line="33" pos:column="17">originalObj</name> <op:operator pos:line="33" pos:column="29">==</op:operator> <name pos:line="33" pos:column="32">null</name></expr>)</condition><then pos:line="33" pos:column="37">
            <block pos:line="34" pos:column="13">{
                <expr_stmt><expr><name pos:line="35" pos:column="17">newObj</name> <op:operator pos:line="35" pos:column="24">=</op:operator> <name pos:line="35" pos:column="26">null</name></expr>;</expr_stmt>
                <return pos:line="36" pos:column="17">return <expr><lit:literal type="boolean" pos:line="36" pos:column="24">false</lit:literal></expr>;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="39" pos:column="13">var</name></type> <name pos:line="39" pos:column="17">originalType</name> <init pos:line="39" pos:column="30">= <expr><call><name><name pos:line="39" pos:column="32">originalObj</name><op:operator pos:line="39" pos:column="43">.</op:operator><name pos:line="39" pos:column="44">GetType</name></name><argument_list pos:line="39" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><name pos:line="41" pos:column="17">originalType</name> <op:operator pos:line="41" pos:column="30">==</op:operator> <call><name pos:line="41" pos:column="33">typeof</name><argument_list pos:line="41" pos:column="39">(<argument><expr><name pos:line="41" pos:column="40">DefaultModelBinder</name></expr></argument>)</argument_list></call> <op:operator pos:line="41" pos:column="60">&amp;&amp;</op:operator> <call><name><name pos:line="41" pos:column="63">ProxyFactory</name><op:operator pos:line="41" pos:column="75">.</op:operator><name pos:line="41" pos:column="76">IsExtendClassEligible</name></name><argument_list pos:line="41" pos:column="97">(<argument><expr><name pos:line="41" pos:column="98">originalType</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="41" pos:column="112">
            <block pos:line="42" pos:column="13">{
                <expr_stmt><expr><name pos:line="43" pos:column="17">newObj</name> <op:operator pos:line="43" pos:column="24">=</op:operator> <call><name><name pos:line="43" pos:column="26">ProxyFactory</name><op:operator pos:line="43" pos:column="38">.</op:operator><name><name pos:line="43" pos:column="39">ExtendClass</name><argument_list pos:line="43" pos:column="50">&lt;<argument><name pos:line="43" pos:column="51">DefaultModelBinder</name></argument>&gt;</argument_list></name></name><argument_list pos:line="43" pos:column="70">(<argument><expr><name pos:line="43" pos:column="71">AllMethods</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="44" pos:column="17">return <expr><lit:literal type="boolean" pos:line="44" pos:column="24">true</lit:literal></expr>;</return>
            }</block></then></if>

            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">originalObj</name> <op:operator pos:line="47" pos:column="29">is</op:operator> <name pos:line="47" pos:column="32">DefaultModelBinder</name> <op:operator pos:line="47" pos:column="51">&amp;&amp;</op:operator> <call><name><name pos:line="47" pos:column="54">ProxyFactory</name><op:operator pos:line="47" pos:column="66">.</op:operator><name pos:line="47" pos:column="67">IsWrapClassEligible</name></name><argument_list pos:line="47" pos:column="86">(<argument><expr><name pos:line="47" pos:column="87">originalType</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="47" pos:column="101">
            <block pos:line="48" pos:column="13">{
                <expr_stmt><expr><name pos:line="49" pos:column="17">newObj</name> <op:operator pos:line="49" pos:column="24">=</op:operator> <call><name><name pos:line="49" pos:column="26">ProxyFactory</name><op:operator pos:line="49" pos:column="38">.</op:operator><name pos:line="49" pos:column="39">WrapClass</name></name><argument_list pos:line="49" pos:column="48">(<argument><expr><op:operator pos:line="49" pos:column="49">(</op:operator><name pos:line="49" pos:column="50">DefaultModelBinder</name><op:operator pos:line="49" pos:column="68">)</op:operator><name pos:line="49" pos:column="69">originalObj</name></expr></argument>, <argument><expr><name pos:line="49" pos:column="82">AllMethods</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="50" pos:column="17">return <expr><lit:literal type="boolean" pos:line="50" pos:column="24">true</lit:literal></expr>;</return>
            }</block></then></if>

            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><call><name><name pos:line="53" pos:column="17">ProxyFactory</name><op:operator pos:line="53" pos:column="29">.</op:operator><name><name pos:line="53" pos:column="30">IsWrapInterfaceEligible</name><argument_list pos:line="53" pos:column="53">&lt;<argument><name pos:line="53" pos:column="54">IModelBinder</name></argument>&gt;</argument_list></name></name><argument_list pos:line="53" pos:column="67">(<argument><expr><name pos:line="53" pos:column="68">originalType</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="53" pos:column="82">
            <block pos:line="54" pos:column="13">{
                <expr_stmt><expr><name pos:line="55" pos:column="17">newObj</name> <op:operator pos:line="55" pos:column="24">=</op:operator> <call><name><name pos:line="55" pos:column="26">ProxyFactory</name><op:operator pos:line="55" pos:column="38">.</op:operator><name pos:line="55" pos:column="39">WrapInterface</name></name><argument_list pos:line="55" pos:column="52">(<argument><expr><name pos:line="55" pos:column="53">originalObj</name></expr></argument>, <argument><expr><op:operator pos:line="55" pos:column="66">new</op:operator><index pos:line="55" pos:column="69">[]</index> <block pos:line="55" pos:column="72">{ <expr><op:operator pos:line="55" pos:column="74">new</op:operator> <call><name pos:line="55" pos:column="78">BindModel</name><argument_list pos:line="55" pos:column="87">(<argument><expr><call><name pos:line="55" pos:column="88">typeof</name><argument_list pos:line="55" pos:column="94">(<argument><expr><name pos:line="55" pos:column="95">IModelBinder</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="56" pos:column="17">return <expr><lit:literal type="boolean" pos:line="56" pos:column="24">true</lit:literal></expr>;</return>
            }</block></then></if>

            <expr_stmt><expr><name pos:line="59" pos:column="13">newObj</name> <op:operator pos:line="59" pos:column="20">=</op:operator> <name pos:line="59" pos:column="22">null</name></expr>;</expr_stmt>
            <return pos:line="60" pos:column="13">return <expr><lit:literal type="boolean" pos:line="60" pos:column="20">false</lit:literal></expr>;</return>
        }</block></function>

        <class><specifier pos:line="63" pos:column="9">public</specifier> class <name pos:line="63" pos:column="22">BindProperty</name> <super pos:line="63" pos:column="35">: <name pos:line="63" pos:column="37">AlternateMethod</name></super>
        <block pos:line="64" pos:column="9">{
            <constructor><specifier pos:line="65" pos:column="13">public</specifier> <name pos:line="65" pos:column="20">BindProperty</name><parameter_list pos:line="65" pos:column="32">()</parameter_list> <member_list pos:line="65" pos:column="35">: <call><name pos:line="65" pos:column="37">base</name><argument_list pos:line="65" pos:column="41">(<argument><expr><call><name pos:line="65" pos:column="42">typeof</name><argument_list pos:line="65" pos:column="48">(<argument><expr><name pos:line="65" pos:column="49">DefaultModelBinder</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="65" pos:column="70">"BindProperty"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="86">BindingFlags</name><op:operator pos:line="65" pos:column="98">.</op:operator><name pos:line="65" pos:column="99">Instance</name></name> <op:operator pos:line="65" pos:column="108">|</op:operator> <name><name pos:line="65" pos:column="110">BindingFlags</name><op:operator pos:line="65" pos:column="122">.</op:operator><name pos:line="65" pos:column="123">NonPublic</name></name></expr></argument>)</argument_list></call>
            </member_list><block pos:line="66" pos:column="13">{
            }</block></constructor>

            <function><type><specifier pos:line="69" pos:column="13">public</specifier> <specifier pos:line="69" pos:column="20">override</specifier> <name pos:line="69" pos:column="29">void</name></type> <name pos:line="69" pos:column="34">PostImplementation</name><parameter_list pos:line="69" pos:column="52">(<param><decl><type><name pos:line="69" pos:column="53">IAlternateMethodContext</name></type> <name pos:line="69" pos:column="77">context</name></decl></param>, <param><decl><type><name pos:line="69" pos:column="86">TimerResult</name></type> <name pos:line="69" pos:column="98">timerResult</name></decl></param>)</parameter_list>
            <block pos:line="70" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="71" pos:column="17">var</name></type> <name pos:line="71" pos:column="21">args</name> <init pos:line="71" pos:column="26">= <expr><op:operator pos:line="71" pos:column="28">new</op:operator> <call><name pos:line="71" pos:column="32">Arguments</name><argument_list pos:line="71" pos:column="41">(<argument><expr><name><name pos:line="71" pos:column="42">context</name><op:operator pos:line="71" pos:column="49">.</op:operator><name pos:line="71" pos:column="50">Arguments</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="72" pos:column="17">var</name></type> <name pos:line="72" pos:column="21">messages</name> <init pos:line="72" pos:column="30">= <expr><op:operator pos:line="72" pos:column="32">new</op:operator> <call><name pos:line="72" pos:column="36">Message</name><argument_list pos:line="72" pos:column="43">(<argument><expr><name><name pos:line="72" pos:column="44">args</name><op:operator pos:line="72" pos:column="48">.</op:operator><name pos:line="72" pos:column="49">PropertyDescriptor</name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="69">context</name><op:operator pos:line="72" pos:column="76">.</op:operator><name pos:line="72" pos:column="77">TargetType</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="73" pos:column="21">.</op:operator><call><name pos:line="73" pos:column="22">AsSourceMessage</name><argument_list pos:line="73" pos:column="37">(<argument><expr><name><name pos:line="73" pos:column="38">context</name><op:operator pos:line="73" pos:column="45">.</op:operator><name pos:line="73" pos:column="46">TargetType</name></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="58">context</name><op:operator pos:line="73" pos:column="65">.</op:operator><name pos:line="73" pos:column="66">MethodInvocationTarget</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><call><name><name pos:line="75" pos:column="17">context</name><op:operator pos:line="75" pos:column="24">.</op:operator><name pos:line="75" pos:column="25">MessageBroker</name><op:operator pos:line="75" pos:column="38">.</op:operator><name pos:line="75" pos:column="39">Publish</name></name><argument_list pos:line="75" pos:column="46">(<argument><expr><name pos:line="75" pos:column="47">messages</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></function>

            <class><specifier pos:line="78" pos:column="13">public</specifier> class <name pos:line="78" pos:column="26">Arguments</name>
            <block pos:line="79" pos:column="13">{
                <constructor><specifier pos:line="80" pos:column="17">public</specifier> <name pos:line="80" pos:column="24">Arguments</name><parameter_list pos:line="80" pos:column="33">(<param><decl><type><specifier pos:line="80" pos:column="34">params</specifier> <name><name pos:line="80" pos:column="41">object</name><index pos:line="80" pos:column="47">[]</index></name></type> <name pos:line="80" pos:column="50">arguments</name></decl></param>)</parameter_list>
                <block pos:line="81" pos:column="17">{
                    <expr_stmt><expr><name pos:line="82" pos:column="21">ControllerContext</name> <op:operator pos:line="82" pos:column="39">=</op:operator> <op:operator pos:line="82" pos:column="41">(</op:operator><name pos:line="82" pos:column="42">ControllerContext</name><op:operator pos:line="82" pos:column="59">)</op:operator><name><name pos:line="82" pos:column="60">arguments</name><index pos:line="82" pos:column="69">[<expr><lit:literal type="number" pos:line="82" pos:column="70">0</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="83" pos:column="21">ModelBindingContext</name> <op:operator pos:line="83" pos:column="41">=</op:operator> <op:operator pos:line="83" pos:column="43">(</op:operator><name pos:line="83" pos:column="44">ModelBindingContext</name><op:operator pos:line="83" pos:column="63">)</op:operator><name><name pos:line="83" pos:column="64">arguments</name><index pos:line="83" pos:column="73">[<expr><lit:literal type="number" pos:line="83" pos:column="74">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="84" pos:column="21">PropertyDescriptor</name> <op:operator pos:line="84" pos:column="40">=</op:operator> <op:operator pos:line="84" pos:column="42">(</op:operator><name pos:line="84" pos:column="43">PropertyDescriptor</name><op:operator pos:line="84" pos:column="61">)</op:operator><name><name pos:line="84" pos:column="62">arguments</name><index pos:line="84" pos:column="71">[<expr><lit:literal type="number" pos:line="84" pos:column="72">2</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                }</block></constructor>

                <decl_stmt><decl><type><specifier pos:line="87" pos:column="17">public</specifier> <name pos:line="87" pos:column="24">ControllerContext</name></type> <name pos:line="87" pos:column="42">ControllerContext</name> <block pos:line="87" pos:column="60">{ <function_decl><name pos:line="87" pos:column="62">get</name>;</function_decl> <function_decl><name pos:line="87" pos:column="67">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="89" pos:column="17">public</specifier> <name pos:line="89" pos:column="24">ModelBindingContext</name></type> <name pos:line="89" pos:column="44">ModelBindingContext</name> <block pos:line="89" pos:column="64">{ <function_decl><name pos:line="89" pos:column="66">get</name>;</function_decl> <function_decl><name pos:line="89" pos:column="71">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="91" pos:column="17">public</specifier> <name pos:line="91" pos:column="24">PropertyDescriptor</name></type> <name pos:line="91" pos:column="43">PropertyDescriptor</name> <block pos:line="91" pos:column="62">{ <function_decl><name pos:line="91" pos:column="64">get</name>;</function_decl> <function_decl><name pos:line="91" pos:column="69">set</name>;</function_decl> }</block></decl></decl_stmt>
            }</block></class>

            <class><specifier pos:line="94" pos:column="13">public</specifier> class <name pos:line="94" pos:column="26">Message</name> <super pos:line="94" pos:column="34">: <name pos:line="94" pos:column="36">MessageBase</name>, <name pos:line="94" pos:column="49">ISourceMessage</name></super>
            <block pos:line="95" pos:column="13">{
                <constructor><specifier pos:line="96" pos:column="17">public</specifier> <name pos:line="96" pos:column="24">Message</name><parameter_list pos:line="96" pos:column="31">(<param><decl><type><name pos:line="96" pos:column="32">PropertyDescriptor</name></type> <name pos:line="96" pos:column="51">propertyDescriptor</name></decl></param>, <param><decl><type><name pos:line="96" pos:column="71">Type</name></type> <name pos:line="96" pos:column="76">modelBinderType</name></decl></param>)</parameter_list> 
                <block pos:line="97" pos:column="17">{
                    <expr_stmt><expr><name pos:line="98" pos:column="21">Name</name> <op:operator pos:line="98" pos:column="26">=</op:operator> <name><name pos:line="98" pos:column="28">propertyDescriptor</name><op:operator pos:line="98" pos:column="46">.</op:operator><name pos:line="98" pos:column="47">Name</name></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="99" pos:column="21">Type</name> <op:operator pos:line="99" pos:column="26">=</op:operator> <name><name pos:line="99" pos:column="28">propertyDescriptor</name><op:operator pos:line="99" pos:column="46">.</op:operator><name pos:line="99" pos:column="47">PropertyType</name></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="100" pos:column="21">ModelBinderType</name> <op:operator pos:line="100" pos:column="37">=</op:operator> <name pos:line="100" pos:column="39">modelBinderType</name></expr>;</expr_stmt>
                }</block></constructor>

                <decl_stmt><decl><type><specifier pos:line="103" pos:column="17">public</specifier> <name pos:line="103" pos:column="24">Type</name></type> <name pos:line="103" pos:column="29">ModelBinderType</name> <block pos:line="103" pos:column="45">{ <function_decl><name pos:line="103" pos:column="47">get</name>;</function_decl> <function_decl><specifier pos:line="103" pos:column="52">private</specifier> <name pos:line="103" pos:column="60">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="105" pos:column="17">public</specifier> <name pos:line="105" pos:column="24">Type</name></type> <name pos:line="105" pos:column="29">Type</name> <block pos:line="105" pos:column="34">{ <function_decl><name pos:line="105" pos:column="36">get</name>;</function_decl> <function_decl><specifier pos:line="105" pos:column="41">private</specifier> <name pos:line="105" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="107" pos:column="17">public</specifier> <name pos:line="107" pos:column="24">string</name></type> <name pos:line="107" pos:column="31">Name</name> <block pos:line="107" pos:column="36">{ <function_decl><name pos:line="107" pos:column="38">get</name>;</function_decl> <function_decl><specifier pos:line="107" pos:column="43">private</specifier> <name pos:line="107" pos:column="51">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="109" pos:column="17">public</specifier> <name pos:line="109" pos:column="24">Type</name></type> <name pos:line="109" pos:column="29">ExecutedType</name> <block pos:line="109" pos:column="42">{ <function_decl><name pos:line="109" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="109" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="111" pos:column="17">public</specifier> <name pos:line="111" pos:column="24">MethodInfo</name></type> <name pos:line="111" pos:column="35">ExecutedMethod</name> <block pos:line="111" pos:column="50">{ <function_decl><name pos:line="111" pos:column="52">get</name>;</function_decl> <function_decl><name pos:line="111" pos:column="57">set</name>;</function_decl> }</block></decl></decl_stmt>
            }</block></class>
        }</block></class>

        <class><specifier pos:line="115" pos:column="9">public</specifier> class <name pos:line="115" pos:column="22">BindModel</name> <super pos:line="115" pos:column="32">: <name pos:line="115" pos:column="34">AlternateMethod</name></super>
        <block pos:line="116" pos:column="9">{
            <constructor><specifier pos:line="117" pos:column="13">public</specifier> <name pos:line="117" pos:column="20">BindModel</name><parameter_list pos:line="117" pos:column="29">()</parameter_list> <member_list pos:line="117" pos:column="32">: <call><name pos:line="117" pos:column="34">base</name><argument_list pos:line="117" pos:column="38">(<argument><expr><call><name pos:line="117" pos:column="39">typeof</name><argument_list pos:line="117" pos:column="45">(<argument><expr><name pos:line="117" pos:column="46">DefaultModelBinder</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="117" pos:column="67">"BindModel"</lit:literal></expr></argument>)</argument_list></call>
            </member_list><block pos:line="118" pos:column="13">{
            }</block></constructor>

            <constructor><specifier pos:line="121" pos:column="13">public</specifier> <name pos:line="121" pos:column="20">BindModel</name><parameter_list pos:line="121" pos:column="29">(<param><decl><type><name pos:line="121" pos:column="30">Type</name></type> <name pos:line="121" pos:column="35">type</name></decl></param>)</parameter_list> <member_list pos:line="121" pos:column="41">: <call><name pos:line="121" pos:column="43">base</name><argument_list pos:line="121" pos:column="47">(<argument><expr><name pos:line="121" pos:column="48">type</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="121" pos:column="54">"BindModel"</lit:literal></expr></argument>)</argument_list></call>
            </member_list><block pos:line="122" pos:column="13">{
            }</block></constructor>

            <function><type><specifier pos:line="125" pos:column="13">public</specifier> <specifier pos:line="125" pos:column="20">override</specifier> <name pos:line="125" pos:column="29">void</name></type> <name pos:line="125" pos:column="34">PostImplementation</name><parameter_list pos:line="125" pos:column="52">(<param><decl><type><name pos:line="125" pos:column="53">IAlternateMethodContext</name></type> <name pos:line="125" pos:column="77">context</name></decl></param>, <param><decl><type><name pos:line="125" pos:column="86">TimerResult</name></type> <name pos:line="125" pos:column="98">timerResult</name></decl></param>)</parameter_list>
            <block pos:line="126" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="127" pos:column="17">var</name></type> <name pos:line="127" pos:column="21">args</name> <init pos:line="127" pos:column="26">= <expr><op:operator pos:line="127" pos:column="28">new</op:operator> <call><name pos:line="127" pos:column="32">Arguments</name><argument_list pos:line="127" pos:column="41">(<argument><expr><name><name pos:line="127" pos:column="42">context</name><op:operator pos:line="127" pos:column="49">.</op:operator><name pos:line="127" pos:column="50">Arguments</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="128" pos:column="17">var</name></type> <name pos:line="128" pos:column="21">message</name> <init pos:line="128" pos:column="29">= <expr><op:operator pos:line="128" pos:column="31">new</op:operator> <call><name pos:line="128" pos:column="35">Message</name><argument_list pos:line="128" pos:column="42">(<argument><expr><name><name pos:line="128" pos:column="43">args</name><op:operator pos:line="128" pos:column="47">.</op:operator><name pos:line="128" pos:column="48">ModelBindingContext</name></name></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="69">context</name><op:operator pos:line="128" pos:column="76">.</op:operator><name pos:line="128" pos:column="77">ReturnValue</name></name></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="90">context</name><op:operator pos:line="128" pos:column="97">.</op:operator><name pos:line="128" pos:column="98">TargetType</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="129" pos:column="21">.</op:operator><call><name pos:line="129" pos:column="22">AsSourceMessage</name><argument_list pos:line="129" pos:column="37">(<argument><expr><name><name pos:line="129" pos:column="38">context</name><op:operator pos:line="129" pos:column="45">.</op:operator><name pos:line="129" pos:column="46">TargetType</name></name></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="58">context</name><op:operator pos:line="129" pos:column="65">.</op:operator><name pos:line="129" pos:column="66">MethodInvocationTarget</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><call><name><name pos:line="131" pos:column="17">context</name><op:operator pos:line="131" pos:column="24">.</op:operator><name pos:line="131" pos:column="25">MessageBroker</name><op:operator pos:line="131" pos:column="38">.</op:operator><name pos:line="131" pos:column="39">Publish</name></name><argument_list pos:line="131" pos:column="46">(<argument><expr><name pos:line="131" pos:column="47">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></function>

            <class><specifier pos:line="134" pos:column="13">public</specifier> class <name pos:line="134" pos:column="26">Arguments</name>
            <block pos:line="135" pos:column="13">{
                <constructor><specifier pos:line="136" pos:column="17">public</specifier> <name pos:line="136" pos:column="24">Arguments</name><parameter_list pos:line="136" pos:column="33">(<param><decl><type><specifier pos:line="136" pos:column="34">params</specifier> <name><name pos:line="136" pos:column="41">object</name><index pos:line="136" pos:column="47">[]</index></name></type> <name pos:line="136" pos:column="50">arguments</name></decl></param>)</parameter_list>
                <block pos:line="137" pos:column="17">{
                    <expr_stmt><expr><name pos:line="138" pos:column="21">ControllerContext</name> <op:operator pos:line="138" pos:column="39">=</op:operator> <op:operator pos:line="138" pos:column="41">(</op:operator><name pos:line="138" pos:column="42">ControllerContext</name><op:operator pos:line="138" pos:column="59">)</op:operator><name><name pos:line="138" pos:column="60">arguments</name><index pos:line="138" pos:column="69">[<expr><lit:literal type="number" pos:line="138" pos:column="70">0</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="139" pos:column="21">ModelBindingContext</name> <op:operator pos:line="139" pos:column="41">=</op:operator> <op:operator pos:line="139" pos:column="43">(</op:operator><name pos:line="139" pos:column="44">ModelBindingContext</name><op:operator pos:line="139" pos:column="63">)</op:operator><name><name pos:line="139" pos:column="64">arguments</name><index pos:line="139" pos:column="73">[<expr><lit:literal type="number" pos:line="139" pos:column="74">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                }</block></constructor>

                <decl_stmt><decl><type><specifier pos:line="142" pos:column="17">public</specifier> <name pos:line="142" pos:column="24">ControllerContext</name></type> <name pos:line="142" pos:column="42">ControllerContext</name> <block pos:line="142" pos:column="60">{ <function_decl><name pos:line="142" pos:column="62">get</name>;</function_decl> <function_decl><name pos:line="142" pos:column="67">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="144" pos:column="17">public</specifier> <name pos:line="144" pos:column="24">ModelBindingContext</name></type> <name pos:line="144" pos:column="44">ModelBindingContext</name> <block pos:line="144" pos:column="64">{ <function_decl><name pos:line="144" pos:column="66">get</name>;</function_decl> <function_decl><name pos:line="144" pos:column="71">set</name>;</function_decl> }</block></decl></decl_stmt>
            }</block></class>

            <class><specifier pos:line="147" pos:column="13">public</specifier> class <name pos:line="147" pos:column="26">Message</name> <super pos:line="147" pos:column="34">: <name pos:line="147" pos:column="36">MessageBase</name>, <name pos:line="147" pos:column="49">ISourceMessage</name></super>
            <block pos:line="148" pos:column="13">{
                <constructor><specifier pos:line="149" pos:column="17">public</specifier> <name pos:line="149" pos:column="24">Message</name><parameter_list pos:line="149" pos:column="31">(<param><decl><type><name pos:line="149" pos:column="32">ModelBindingContext</name></type> <name pos:line="149" pos:column="52">bindingContext</name></decl></param>, <param><decl><type><name pos:line="149" pos:column="68">object</name></type> <name pos:line="149" pos:column="75">rawValue</name></decl></param>, <param><decl><type><name pos:line="149" pos:column="85">Type</name></type> <name pos:line="149" pos:column="90">modelBinderType</name></decl></param>)</parameter_list> 
                <block pos:line="150" pos:column="17">{
                    <expr_stmt><expr><name pos:line="151" pos:column="21">ModelName</name> <op:operator pos:line="151" pos:column="31">=</op:operator> <name><name pos:line="151" pos:column="33">bindingContext</name><op:operator pos:line="151" pos:column="47">.</op:operator><name pos:line="151" pos:column="48">ModelName</name></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="152" pos:column="21">ModelType</name> <op:operator pos:line="152" pos:column="31">=</op:operator> <name><name pos:line="152" pos:column="33">bindingContext</name><op:operator pos:line="152" pos:column="47">.</op:operator><name pos:line="152" pos:column="48">ModelType</name></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="153" pos:column="21">ModelBinderType</name> <op:operator pos:line="153" pos:column="37">=</op:operator> <name pos:line="153" pos:column="39">modelBinderType</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="154" pos:column="21">RawValue</name> <op:operator pos:line="154" pos:column="30">=</op:operator> <name pos:line="154" pos:column="32">rawValue</name></expr>;</expr_stmt>
                }</block></constructor>

                <decl_stmt><decl><type><specifier pos:line="157" pos:column="17">public</specifier> <name pos:line="157" pos:column="24">object</name></type> <name pos:line="157" pos:column="31">RawValue</name> <block pos:line="157" pos:column="40">{ <function_decl><name pos:line="157" pos:column="42">get</name>;</function_decl> <function_decl><specifier pos:line="157" pos:column="47">private</specifier> <name pos:line="157" pos:column="55">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="159" pos:column="17">public</specifier> <name pos:line="159" pos:column="24">Type</name></type> <name pos:line="159" pos:column="29">ModelBinderType</name> <block pos:line="159" pos:column="45">{ <function_decl><name pos:line="159" pos:column="47">get</name>;</function_decl> <function_decl><specifier pos:line="159" pos:column="52">private</specifier> <name pos:line="159" pos:column="60">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="161" pos:column="17">public</specifier> <name pos:line="161" pos:column="24">Type</name></type> <name pos:line="161" pos:column="29">ModelType</name> <block pos:line="161" pos:column="39">{ <function_decl><name pos:line="161" pos:column="41">get</name>;</function_decl> <function_decl><specifier pos:line="161" pos:column="46">private</specifier> <name pos:line="161" pos:column="54">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="163" pos:column="17">public</specifier> <name pos:line="163" pos:column="24">string</name></type> <name pos:line="163" pos:column="31">ModelName</name> <block pos:line="163" pos:column="41">{ <function_decl><name pos:line="163" pos:column="43">get</name>;</function_decl> <function_decl><specifier pos:line="163" pos:column="48">private</specifier> <name pos:line="163" pos:column="56">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="165" pos:column="17">public</specifier> <name pos:line="165" pos:column="24">Type</name></type> <name pos:line="165" pos:column="29">ExecutedType</name> <block pos:line="165" pos:column="42">{ <function_decl><name pos:line="165" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="165" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="167" pos:column="17">public</specifier> <name pos:line="167" pos:column="24">MethodInfo</name></type> <name pos:line="167" pos:column="35">ExecutedMethod</name> <block pos:line="167" pos:column="50">{ <function_decl><name pos:line="167" pos:column="52">get</name>;</function_decl> <function_decl><name pos:line="167" pos:column="57">set</name>;</function_decl> }</block></decl></decl_stmt>
            }</block></class>
        }</block></class>
    }</block></class>
}</block></namespace></unit>
