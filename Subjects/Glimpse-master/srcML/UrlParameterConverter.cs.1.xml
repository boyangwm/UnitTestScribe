<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc\SerializationConverter\UrlParameterConverter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Web</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">Mvc</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name><op:operator pos:line="2" pos:column="19">.</op:operator><name pos:line="2" pos:column="20">Extensibility</name></name>;</using>

<namespace pos:line="4" pos:column="1">namespace <name><name pos:line="4" pos:column="11">Glimpse</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">Mvc</name><op:operator pos:line="4" pos:column="22">.</op:operator><name pos:line="4" pos:column="23">SerializationConverter</name></name>
<block pos:line="5" pos:column="1">{
    <comment type="line" pos:line="6" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="7" pos:column="5">/// Intercepts the serialization of UrlParameters.</comment>
    <comment type="line" pos:line="8" pos:column="5">/// &lt;/summary&gt;</comment>
    <comment type="line" pos:line="9" pos:column="5">/// &lt;remarks&gt;</comment>
    <comment type="line" pos:line="10" pos:column="5">/// In particular, we want to intercept UrlParameters being serialized for display</comment>
    <comment type="line" pos:line="11" pos:column="5">/// in the Route data in the Routes tab, and display the special MVC "Optional"</comment>
    <comment type="line" pos:line="12" pos:column="5">/// parameter value differently.</comment>
    <comment type="line" pos:line="13" pos:column="5">/// &lt;/remarks&gt;</comment>
    <class><specifier pos:line="14" pos:column="5">public</specifier> class <name pos:line="14" pos:column="18">UrlParameterConverter</name> <super pos:line="14" pos:column="40">: <name><name pos:line="14" pos:column="42">SerializationConverter</name><argument_list pos:line="14" pos:column="64">&lt;<argument><name pos:line="14" pos:column="65">UrlParameter</name></argument>&gt;</argument_list></name></super>
    <block pos:line="15" pos:column="5">{
        <function><type><specifier pos:line="16" pos:column="9">public</specifier> <specifier pos:line="16" pos:column="16">override</specifier> <name pos:line="16" pos:column="25">object</name></type> <name pos:line="16" pos:column="32">Convert</name><parameter_list pos:line="16" pos:column="39">(<param><decl><type><name pos:line="16" pos:column="40">UrlParameter</name></type> <name pos:line="16" pos:column="53">obj</name></decl></param>)</parameter_list>
        <block pos:line="17" pos:column="9">{
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><name pos:line="18" pos:column="17">obj</name> <op:operator pos:line="18" pos:column="21">==</op:operator> <name><name pos:line="18" pos:column="24">UrlParameter</name><op:operator pos:line="18" pos:column="36">.</op:operator><name pos:line="18" pos:column="37">Optional</name></name></expr>)</condition><then pos:line="18" pos:column="46">
            <block pos:line="19" pos:column="13">{
                <return pos:line="20" pos:column="17">return <expr><lit:literal type="string" pos:line="20" pos:column="24">"OPTIONAL"</lit:literal></expr>;</return>
            }</block></then></if>
                
            <return pos:line="23" pos:column="13">return <expr><name pos:line="23" pos:column="20">obj</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
