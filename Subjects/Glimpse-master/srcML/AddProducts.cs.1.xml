<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WebForms.WingTip.Sample\Logic\AddProducts.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">WingtipToys</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">Models</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">WingtipToys</name><op:operator pos:line="7" pos:column="22">.</op:operator><name pos:line="7" pos:column="23">Logic</name></name>
<block pos:line="8" pos:column="1">{
    <class><specifier pos:line="9" pos:column="5">public</specifier> class <name pos:line="9" pos:column="18">AddProducts</name>
    <block pos:line="10" pos:column="5">{
        <function><type><specifier pos:line="11" pos:column="9">public</specifier> <name pos:line="11" pos:column="16">bool</name></type> <name pos:line="11" pos:column="21">AddProduct</name><parameter_list pos:line="11" pos:column="31">(<param><decl><type><name pos:line="11" pos:column="32">string</name></type> <name pos:line="11" pos:column="39">ProductName</name></decl></param>, <param><decl><type><name pos:line="11" pos:column="52">string</name></type> <name pos:line="11" pos:column="59">ProductDesc</name></decl></param>, <param><decl><type><name pos:line="11" pos:column="72">string</name></type> <name pos:line="11" pos:column="79">ProductPrice</name></decl></param>, <param><decl><type><name pos:line="11" pos:column="93">string</name></type> <name pos:line="11" pos:column="100">ProductCategory</name></decl></param>, <param><decl><type><name pos:line="11" pos:column="117">string</name></type> <name pos:line="11" pos:column="124">ProductImagePath</name></decl></param>)</parameter_list>
        <block pos:line="12" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="13" pos:column="13">var</name></type> <name pos:line="13" pos:column="17">myProduct</name> <init pos:line="13" pos:column="27">= <expr><op:operator pos:line="13" pos:column="29">new</op:operator> <call><name pos:line="13" pos:column="33">Product</name><argument_list pos:line="13" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="14" pos:column="13">myProduct</name><op:operator pos:line="14" pos:column="22">.</op:operator><name pos:line="14" pos:column="23">ProductName</name></name> <op:operator pos:line="14" pos:column="35">=</op:operator> <name pos:line="14" pos:column="37">ProductName</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="15" pos:column="13">myProduct</name><op:operator pos:line="15" pos:column="22">.</op:operator><name pos:line="15" pos:column="23">Description</name></name> <op:operator pos:line="15" pos:column="35">=</op:operator> <name pos:line="15" pos:column="37">ProductDesc</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="16" pos:column="13">myProduct</name><op:operator pos:line="16" pos:column="22">.</op:operator><name pos:line="16" pos:column="23">UnitPrice</name></name> <op:operator pos:line="16" pos:column="33">=</op:operator> <call><name><name pos:line="16" pos:column="35">Convert</name><op:operator pos:line="16" pos:column="42">.</op:operator><name pos:line="16" pos:column="43">ToDouble</name></name><argument_list pos:line="16" pos:column="51">(<argument><expr><name pos:line="16" pos:column="52">ProductPrice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="17" pos:column="13">myProduct</name><op:operator pos:line="17" pos:column="22">.</op:operator><name pos:line="17" pos:column="23">ImagePath</name></name> <op:operator pos:line="17" pos:column="33">=</op:operator> <name pos:line="17" pos:column="35">ProductImagePath</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="18" pos:column="13">myProduct</name><op:operator pos:line="18" pos:column="22">.</op:operator><name pos:line="18" pos:column="23">CategoryID</name></name> <op:operator pos:line="18" pos:column="34">=</op:operator> <call><name><name pos:line="18" pos:column="36">Convert</name><op:operator pos:line="18" pos:column="43">.</op:operator><name pos:line="18" pos:column="44">ToInt32</name></name><argument_list pos:line="18" pos:column="51">(<argument><expr><name pos:line="18" pos:column="52">ProductCategory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="20" pos:column="13">// Get DB context.</comment>
            <decl_stmt><decl><type><name pos:line="21" pos:column="13">ProductContext</name></type> <name pos:line="21" pos:column="28">_db</name> <init pos:line="21" pos:column="32">= <expr><op:operator pos:line="21" pos:column="34">new</op:operator> <call><name pos:line="21" pos:column="38">ProductContext</name><argument_list pos:line="21" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="23" pos:column="13">// Add product to DB.</comment>
            <expr_stmt><expr><call><name><name pos:line="24" pos:column="13">_db</name><op:operator pos:line="24" pos:column="16">.</op:operator><name pos:line="24" pos:column="17">Products</name><op:operator pos:line="24" pos:column="25">.</op:operator><name pos:line="24" pos:column="26">Add</name></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">myProduct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">_db</name><op:operator pos:line="25" pos:column="16">.</op:operator><name pos:line="25" pos:column="17">SaveChanges</name></name><argument_list pos:line="25" pos:column="28">()</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="27" pos:column="13">// Success.</comment>
            <return pos:line="28" pos:column="13">return <expr><lit:literal type="boolean" pos:line="28" pos:column="20">true</lit:literal></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
