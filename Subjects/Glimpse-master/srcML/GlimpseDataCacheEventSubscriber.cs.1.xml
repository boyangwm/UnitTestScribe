<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WindowsAzure.Caching\Infrastructure\GlimpseDataCacheEventSubscriber.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Reflection</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Message</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Microsoft</name><op:operator pos:line="5" pos:column="16">.</op:operator><name pos:line="5" pos:column="17">ApplicationServer</name><op:operator pos:line="5" pos:column="34">.</op:operator><name pos:line="5" pos:column="35">Caching</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">Glimpse</name><op:operator pos:line="7" pos:column="18">.</op:operator><name pos:line="7" pos:column="19">WindowsAzure</name><op:operator pos:line="7" pos:column="31">.</op:operator><name pos:line="7" pos:column="32">Caching</name><op:operator pos:line="7" pos:column="39">.</op:operator><name pos:line="7" pos:column="40">Infrastructure</name></name>
<block pos:line="8" pos:column="1">{
    <class><specifier pos:line="9" pos:column="5">public</specifier> class <name pos:line="9" pos:column="18">GlimpseDataCacheEventSubscriber</name>
        <super pos:line="10" pos:column="9">: <name pos:line="10" pos:column="11">IDataCacheEventSubscriber</name></super>
    <block pos:line="11" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">protected</specifier> <specifier pos:line="12" pos:column="19">const</specifier> <name pos:line="12" pos:column="25">string</name></type> <name pos:line="12" pos:column="32">Category</name> <init pos:line="12" pos:column="41">= <expr><lit:literal type="string" pos:line="12" pos:column="43">"ASP.NET"</lit:literal></expr></init></decl>;</decl_stmt>

        <constructor><specifier pos:line="14" pos:column="9">public</specifier> <name pos:line="14" pos:column="16">GlimpseDataCacheEventSubscriber</name><parameter_list pos:line="14" pos:column="47">(<param><decl><type><name pos:line="14" pos:column="48">IMessageBroker</name></type> <name pos:line="14" pos:column="63">messageBroker</name></decl></param>, <param><decl><type><name><name pos:line="14" pos:column="78">Func</name><argument_list pos:line="14" pos:column="82">&lt;<argument><name pos:line="14" pos:column="83">IExecutionTimer</name></argument>&gt;</argument_list></name></type> <name pos:line="14" pos:column="100">timerStrategy</name></decl></param>)</parameter_list>
        <block pos:line="15" pos:column="9">{
            <expr_stmt><expr><name pos:line="16" pos:column="13">MessageBroker</name> <op:operator pos:line="16" pos:column="27">=</op:operator> <name pos:line="16" pos:column="29">messageBroker</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="17" pos:column="13">TimerStrategy</name> <op:operator pos:line="17" pos:column="27">=</op:operator> <name pos:line="17" pos:column="29">timerStrategy</name></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">IMessageBroker</name></type> <name pos:line="20" pos:column="31">MessageBroker</name> <block pos:line="20" pos:column="45">{ <function_decl><name pos:line="20" pos:column="47">get</name>;</function_decl> <function_decl><name pos:line="20" pos:column="52">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="22" pos:column="9">public</specifier> <name><name pos:line="22" pos:column="16">Func</name><argument_list pos:line="22" pos:column="20">&lt;<argument><name pos:line="22" pos:column="21">IExecutionTimer</name></argument>&gt;</argument_list></name></type> <name pos:line="22" pos:column="38">TimerStrategy</name> <block pos:line="22" pos:column="52">{ <function_decl><name pos:line="22" pos:column="54">get</name>;</function_decl> <function_decl><name pos:line="22" pos:column="59">set</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="24" pos:column="9">// TODO: unsubscribe when Glimpse goes out of context</comment>
        <function><type><specifier pos:line="25" pos:column="9">public</specifier> <name pos:line="25" pos:column="16">void</name></type> <name pos:line="25" pos:column="21">Subscribe</name><parameter_list pos:line="25" pos:column="30">(<param><decl><type><name pos:line="25" pos:column="31">DataCache</name></type> <name pos:line="25" pos:column="41">cache</name></decl></param>)</parameter_list>
        <block pos:line="26" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="27" pos:column="13">cache</name><op:operator pos:line="27" pos:column="18">.</op:operator><name pos:line="27" pos:column="19">CacheOperationStarted</name></name> <op:operator pos:line="27" pos:column="41">+=</op:operator> <name pos:line="27" pos:column="44">CacheOnCacheOperationStarted</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">cache</name><op:operator pos:line="28" pos:column="18">.</op:operator><name pos:line="28" pos:column="19">CacheOperationCompleted</name></name> <op:operator pos:line="28" pos:column="43">+=</op:operator> <name pos:line="28" pos:column="46">CacheOnCacheOperationCompleted</name></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">void</name></type> <name pos:line="31" pos:column="21">Unsubscribe</name><parameter_list pos:line="31" pos:column="32">(<param><decl><type><name pos:line="31" pos:column="33">DataCache</name></type> <name pos:line="31" pos:column="43">cache</name></decl></param>)</parameter_list>
        <block pos:line="32" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">cache</name><op:operator pos:line="33" pos:column="18">.</op:operator><name pos:line="33" pos:column="19">CacheOperationStarted</name></name> <op:operator pos:line="33" pos:column="41">-=</op:operator> <name pos:line="33" pos:column="44">CacheOnCacheOperationStarted</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">cache</name><op:operator pos:line="34" pos:column="18">.</op:operator><name pos:line="34" pos:column="19">CacheOperationCompleted</name></name> <op:operator pos:line="34" pos:column="43">-=</op:operator> <name pos:line="34" pos:column="46">CacheOnCacheOperationCompleted</name></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="37" pos:column="9">// TODO: build useful data from this</comment>
        <function><type><specifier pos:line="38" pos:column="9">private</specifier> <name pos:line="38" pos:column="17">void</name></type> <name pos:line="38" pos:column="22">CacheOnCacheOperationStarted</name><parameter_list pos:line="38" pos:column="50">(<param><decl><type><name pos:line="38" pos:column="51">object</name></type> <name pos:line="38" pos:column="58">sender</name></decl></param>, <param><decl><type><name pos:line="38" pos:column="66">CacheOperationStartedEventArgs</name></type> <name pos:line="38" pos:column="97">args</name></decl></param>)</parameter_list>
        <block pos:line="39" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="40" pos:column="13">var</name></type> <name pos:line="40" pos:column="17">cacheName</name> <init pos:line="40" pos:column="27">= <expr><lit:literal type="string" pos:line="40" pos:column="29">"default"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="41" pos:column="13">var</name></type> <name pos:line="41" pos:column="17">cache</name> <init pos:line="41" pos:column="23">= <expr><name pos:line="41" pos:column="25">sender</name> <op:operator pos:line="41" pos:column="32">as</op:operator> <name pos:line="41" pos:column="35">DataCache</name></expr></init></decl>;</decl_stmt>
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><name pos:line="42" pos:column="17">cache</name> <op:operator pos:line="42" pos:column="23">!=</op:operator> <name pos:line="42" pos:column="26">null</name></expr>)</condition><then pos:line="42" pos:column="31">
            <block pos:line="43" pos:column="13">{
                <expr_stmt><expr><name pos:line="44" pos:column="17">cacheName</name> <op:operator pos:line="44" pos:column="27">=</op:operator> <name><name pos:line="44" pos:column="29">cache</name><op:operator pos:line="44" pos:column="34">.</op:operator><name pos:line="44" pos:column="35">Name</name></name></expr>;</expr_stmt>
            }</block></then></if>

            <expr_stmt><expr><call><name><name pos:line="47" pos:column="13">MessageBroker</name><op:operator pos:line="47" pos:column="26">.</op:operator><name pos:line="47" pos:column="27">Publish</name></name><argument_list pos:line="47" pos:column="34">(<argument><expr><op:operator pos:line="47" pos:column="35">new</op:operator> <call><name pos:line="47" pos:column="39">Message</name><argument_list pos:line="47" pos:column="46">(<argument><expr><name pos:line="47" pos:column="47">cacheName</name></expr></argument>, <argument><expr><call><name><name pos:line="47" pos:column="58">args</name><op:operator pos:line="47" pos:column="62">.</op:operator><name pos:line="47" pos:column="63">OperationType</name><op:operator pos:line="47" pos:column="76">.</op:operator><name pos:line="47" pos:column="77">ToString</name></name><argument_list pos:line="47" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <comment type="line" pos:line="50" pos:column="9">// TODO: build useful data from this</comment>
        <function><type><specifier pos:line="51" pos:column="9">private</specifier> <name pos:line="51" pos:column="17">void</name></type> <name pos:line="51" pos:column="22">CacheOnCacheOperationCompleted</name><parameter_list pos:line="51" pos:column="52">(<param><decl><type><name pos:line="51" pos:column="53">object</name></type> <name pos:line="51" pos:column="60">sender</name></decl></param>, <param><decl><type><name pos:line="51" pos:column="68">CacheOperationCompletedEventArgs</name></type> <name pos:line="51" pos:column="101">args</name></decl></param>)</parameter_list>
        <block pos:line="52" pos:column="9">{
            <comment type="line" pos:line="53" pos:column="13">// MessageBroker.Publish(new Message(serviceType, args.Request.Method, args.Request.RequestUri.ToString(), (int)args.Response.StatusCode, args.RequestInformation.StartTime.ToLocalTime(), point.StartTime, point.Offset, args));</comment>
        }</block></function>

        <class><specifier pos:line="56" pos:column="9">public</specifier> class <name pos:line="56" pos:column="22">Message</name> <super pos:line="56" pos:column="30">: <name pos:line="56" pos:column="32">ITimelineMessage</name></super>
        <block pos:line="57" pos:column="9">{
            <constructor><specifier pos:line="58" pos:column="13">public</specifier> <name pos:line="58" pos:column="20">Message</name><parameter_list pos:line="58" pos:column="27">(<param><decl><type><name pos:line="58" pos:column="28">string</name></type> <name pos:line="58" pos:column="35">cacheName</name></decl></param>, <param><decl><type><name pos:line="58" pos:column="46">string</name></type> <name pos:line="58" pos:column="53">operationType</name></decl></param>)</parameter_list> <comment type="line" pos:line="58" pos:column="68">// , DateTime startTime, DateTime endTime, TimeSpan offset)</comment>
            <block pos:line="59" pos:column="13">{
                <expr_stmt><expr><name pos:line="60" pos:column="17">Id</name> <op:operator pos:line="60" pos:column="20">=</op:operator> <call><name><name pos:line="60" pos:column="22">Guid</name><op:operator pos:line="60" pos:column="26">.</op:operator><name pos:line="60" pos:column="27">NewGuid</name></name><argument_list pos:line="60" pos:column="34">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><name pos:line="62" pos:column="17">EventName</name> <op:operator pos:line="62" pos:column="27">=</op:operator> <call><name><name pos:line="62" pos:column="29">string</name><op:operator pos:line="62" pos:column="35">.</op:operator><name pos:line="62" pos:column="36">Format</name></name><argument_list pos:line="62" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="62" pos:column="43">"WAZCache:{0}:{1}"</lit:literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="63">cacheName</name></expr></argument>, <argument><expr><name pos:line="62" pos:column="74">operationType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="63" pos:column="17">EventCategory</name> <op:operator pos:line="63" pos:column="31">=</op:operator> <op:operator pos:line="63" pos:column="33">new</op:operator> <call><name pos:line="63" pos:column="37">TimelineCategoryItem</name><argument_list pos:line="63" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="58">"Windows Azure Caching"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="63" pos:column="83">"#0094FF"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="63" pos:column="94">"#0094FF"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:line="65" pos:column="17">// StartTime = startTime;</comment>
                <comment type="line" pos:line="66" pos:column="17">// Duration = endTime - startTime;</comment>
                <comment type="line" pos:line="67" pos:column="17">// Offset = offset;</comment>

                <comment type="line" pos:line="69" pos:column="17">// RequestSize = requestEventArgs.Request.ContentLength;</comment>
                <comment type="line" pos:line="70" pos:column="17">// foreach (var header in requestEventArgs.Request.Headers.AllKeys)</comment>
                <comment type="line" pos:line="71" pos:column="17">// {</comment>
                <comment type="line" pos:line="72" pos:column="17">//     RequestSize += header.Length + 2 + string.Join(";", requestEventArgs.Request.Headers.GetValues(header)).Length;</comment>
                <comment type="line" pos:line="73" pos:column="17">// }</comment>
                <comment type="line" pos:line="74" pos:column="17">// ResponseSize = requestEventArgs.Response.ContentLength;</comment>
                <comment type="line" pos:line="75" pos:column="17">// foreach (var header in requestEventArgs.Response.Headers.AllKeys)</comment>
                <comment type="line" pos:line="76" pos:column="17">// {</comment>
                <comment type="line" pos:line="77" pos:column="17">//     ResponseSize += header.Length + 2 + string.Join(";", requestEventArgs.Response.Headers.GetValues(header)).Length;</comment>
                <comment type="line" pos:line="78" pos:column="17">// }</comment>

                <comment type="line" pos:line="80" pos:column="17">// EventSubText = string.Format("out: {0}/in: {1}", RequestSize.ToBytesHuman(), ResponseSize.ToBytesHuman());</comment>
            }</block></constructor>

            <decl_stmt><decl><type><specifier pos:line="83" pos:column="13">public</specifier> <name pos:line="83" pos:column="20">Guid</name></type> <name pos:line="83" pos:column="25">Id</name> <block pos:line="83" pos:column="28">{ <function_decl><name pos:line="83" pos:column="30">get</name>;</function_decl> <function_decl><specifier pos:line="83" pos:column="35">private</specifier> <name pos:line="83" pos:column="43">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="85" pos:column="13">public</specifier> <name pos:line="85" pos:column="20">Type</name></type> <name pos:line="85" pos:column="25">ExecutedType</name> <block pos:line="85" pos:column="38">{ <function_decl><name pos:line="85" pos:column="40">get</name>;</function_decl> <function_decl><name pos:line="85" pos:column="45">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="87" pos:column="13">public</specifier> <name pos:line="87" pos:column="20">MethodInfo</name></type> <name pos:line="87" pos:column="31">ExecutedMethod</name> <block pos:line="87" pos:column="46">{ <function_decl><name pos:line="87" pos:column="48">get</name>;</function_decl> <function_decl><name pos:line="87" pos:column="53">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="89" pos:column="13">public</specifier> <name pos:line="89" pos:column="20">TimeSpan</name></type> <name pos:line="89" pos:column="29">Offset</name> <block pos:line="89" pos:column="36">{ <function_decl><name pos:line="89" pos:column="38">get</name>;</function_decl> <function_decl><name pos:line="89" pos:column="43">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="91" pos:column="13">public</specifier> <name pos:line="91" pos:column="20">TimeSpan</name></type> <name pos:line="91" pos:column="29">Duration</name> <block pos:line="91" pos:column="38">{ <function_decl><name pos:line="91" pos:column="40">get</name>;</function_decl> <function_decl><name pos:line="91" pos:column="45">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="93" pos:column="13">public</specifier> <name pos:line="93" pos:column="20">DateTime</name></type> <name pos:line="93" pos:column="29">StartTime</name> <block pos:line="93" pos:column="39">{ <function_decl><name pos:line="93" pos:column="41">get</name>;</function_decl> <function_decl><name pos:line="93" pos:column="46">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="95" pos:column="13">public</specifier> <name pos:line="95" pos:column="20">string</name></type> <name pos:line="95" pos:column="27">EventName</name> <block pos:line="95" pos:column="37">{ <function_decl><name pos:line="95" pos:column="39">get</name>;</function_decl> <function_decl><name pos:line="95" pos:column="44">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="97" pos:column="13">public</specifier> <name pos:line="97" pos:column="20">TimelineCategoryItem</name></type> <name pos:line="97" pos:column="41">EventCategory</name> <block pos:line="97" pos:column="55">{ <function_decl><name pos:line="97" pos:column="57">get</name>;</function_decl> <function_decl><name pos:line="97" pos:column="62">set</name>;</function_decl> }</block></decl></decl_stmt>

            <decl_stmt><decl><type><specifier pos:line="99" pos:column="13">public</specifier> <name pos:line="99" pos:column="20">string</name></type> <name pos:line="99" pos:column="27">EventSubText</name> <block pos:line="99" pos:column="40">{ <function_decl><name pos:line="99" pos:column="42">get</name>;</function_decl> <function_decl><name pos:line="99" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>
        }</block></class>
    }</block></class>
}</block></namespace></unit>
