<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc\SerializationConverter\ListOfViewsModelConverter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name><op:operator pos:line="2" pos:column="19">.</op:operator><name pos:line="2" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Mvc</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">Model</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Glimpse</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">Mvc</name><op:operator pos:line="5" pos:column="22">.</op:operator><name pos:line="5" pos:column="23">SerializationConverter</name></name>
<block pos:line="6" pos:column="1">{
    <using pos:line="7" pos:column="5">using <name><name pos:line="7" pos:column="11">Core</name><op:operator pos:line="7" pos:column="15">.</op:operator><name pos:line="7" pos:column="16">Tab</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Assist</name></name>;</using>

    <class><specifier pos:line="9" pos:column="5">public</specifier> class <name pos:line="9" pos:column="18">ListOfViewsModelConverter</name> <super pos:line="9" pos:column="44">: <name><name pos:line="9" pos:column="46">SerializationConverter</name><argument_list pos:line="9" pos:column="68">&lt;<argument><name><name pos:line="9" pos:column="69">List</name><argument_list pos:line="9" pos:column="73">&lt;<argument><name pos:line="9" pos:column="74">ViewsModel</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></super>
    <block pos:line="10" pos:column="5">{
        <function><type><specifier pos:line="11" pos:column="9">public</specifier> <specifier pos:line="11" pos:column="16">override</specifier> <name pos:line="11" pos:column="25">object</name></type> <name pos:line="11" pos:column="32">Convert</name><parameter_list pos:line="11" pos:column="39">(<param><decl><type><name><name pos:line="11" pos:column="40">List</name><argument_list pos:line="11" pos:column="44">&lt;<argument><name pos:line="11" pos:column="45">ViewsModel</name></argument>&gt;</argument_list></name></type> <name pos:line="11" pos:column="57">models</name></decl></param>)</parameter_list>
        <block pos:line="12" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="13" pos:column="13">var</name></type> <name pos:line="13" pos:column="17">count</name> <init pos:line="13" pos:column="23">= <expr><lit:literal type="number" pos:line="13" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="15" pos:column="13">var</name></type> <name pos:line="15" pos:column="17">root</name> <init pos:line="15" pos:column="22">= <expr><op:operator pos:line="15" pos:column="24">new</op:operator> <call><name pos:line="15" pos:column="28">TabSection</name><argument_list pos:line="15" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="15" pos:column="39">"Ordinal"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="15" pos:column="50">"Source Controller"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="15" pos:column="71">"Requested View"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="15" pos:column="89">"Master Override"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="15" pos:column="108">"Partial"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="15" pos:column="119">"View Engine"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="15" pos:column="134">"Check Cache"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="15" pos:column="149">"Found"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="15" pos:column="158">"Details"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="16" pos:column="13">foreach (<init><decl><type><name pos:line="16" pos:column="22">var</name></type> <name pos:line="16" pos:column="26">item</name> <range pos:line="16" pos:column="31">in <expr><name pos:line="16" pos:column="34">models</name></expr></range></decl></init>)
            <block pos:line="17" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="18" pos:column="17">root</name><op:operator pos:line="18" pos:column="21">.</op:operator><name pos:line="18" pos:column="22">AddRow</name></name><argument_list pos:line="18" pos:column="28">()</argument_list></call><op:operator pos:line="18" pos:column="30">.</op:operator><call><name pos:line="18" pos:column="31">Column</name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">count</name><op:operator pos:line="18" pos:column="43">++</op:operator></expr></argument>)</argument_list></call><op:operator pos:line="18" pos:column="46">.</op:operator><call><name pos:line="18" pos:column="47">Column</name><argument_list pos:line="18" pos:column="53">(<argument><expr><name><name pos:line="18" pos:column="54">item</name><op:operator pos:line="18" pos:column="58">.</op:operator><name pos:line="18" pos:column="59">SourceController</name></name></expr></argument>)</argument_list></call><op:operator pos:line="18" pos:column="76">.</op:operator><call><name pos:line="18" pos:column="77">Column</name><argument_list pos:line="18" pos:column="83">(<argument><expr><name><name pos:line="18" pos:column="84">item</name><op:operator pos:line="18" pos:column="88">.</op:operator><name pos:line="18" pos:column="89">ViewName</name></name></expr></argument>)</argument_list></call><op:operator pos:line="18" pos:column="98">.</op:operator><call><name pos:line="18" pos:column="99">Column</name><argument_list pos:line="18" pos:column="105">(<argument><expr><name><name pos:line="18" pos:column="106">item</name><op:operator pos:line="18" pos:column="110">.</op:operator><name pos:line="18" pos:column="111">MasterName</name></name></expr></argument>)</argument_list></call><op:operator pos:line="18" pos:column="122">.</op:operator><call><name pos:line="18" pos:column="123">Column</name><argument_list pos:line="18" pos:column="129">(<argument><expr><name><name pos:line="18" pos:column="130">item</name><op:operator pos:line="18" pos:column="134">.</op:operator><name pos:line="18" pos:column="135">IsPartial</name></name></expr></argument>)</argument_list></call><op:operator pos:line="18" pos:column="145">.</op:operator><call><name pos:line="18" pos:column="146">Column</name><argument_list pos:line="18" pos:column="152">(<argument><expr><name><name pos:line="18" pos:column="153">item</name><op:operator pos:line="18" pos:column="157">.</op:operator><name pos:line="18" pos:column="158">ViewEngineType</name></name></expr></argument>)</argument_list></call><op:operator pos:line="18" pos:column="173">.</op:operator><call><name pos:line="18" pos:column="174">Column</name><argument_list pos:line="18" pos:column="180">(<argument><expr><name><name pos:line="18" pos:column="181">item</name><op:operator pos:line="18" pos:column="185">.</op:operator><name pos:line="18" pos:column="186">UseCache</name></name></expr></argument>)</argument_list></call><op:operator pos:line="18" pos:column="195">.</op:operator><call><name pos:line="18" pos:column="196">Column</name><argument_list pos:line="18" pos:column="202">(<argument><expr><name><name pos:line="18" pos:column="203">item</name><op:operator pos:line="18" pos:column="207">.</op:operator><name pos:line="18" pos:column="208">IsFound</name></name></expr></argument>)</argument_list></call><op:operator pos:line="18" pos:column="216">.</op:operator><call><name pos:line="18" pos:column="217">Column</name><argument_list pos:line="18" pos:column="223">(<argument><expr><call><name pos:line="18" pos:column="224">GetDetails</name><argument_list pos:line="18" pos:column="234">(<argument><expr><name pos:line="18" pos:column="235">item</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="18" pos:column="241">.</op:operator><call><name pos:line="18" pos:column="242">SelectedIf</name><argument_list pos:line="18" pos:column="252">(<argument><expr><name><name pos:line="18" pos:column="253">item</name><op:operator pos:line="18" pos:column="257">.</op:operator><name pos:line="18" pos:column="258">IsFound</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
             
            <return pos:line="21" pos:column="13">return <expr><call><name><name pos:line="21" pos:column="20">root</name><op:operator pos:line="21" pos:column="24">.</op:operator><name pos:line="21" pos:column="25">Build</name></name><argument_list pos:line="21" pos:column="30">()</argument_list></call></expr>;</return>
        }</block></function>
        
        <function><type><specifier pos:line="24" pos:column="9">private</specifier> <name pos:line="24" pos:column="17">object</name></type> <name pos:line="24" pos:column="24">GetDetails</name><parameter_list pos:line="24" pos:column="34">(<param><decl><type><name pos:line="24" pos:column="35">ViewsModel</name></type> <name pos:line="24" pos:column="46">model</name></decl></param>)</parameter_list>
        <block pos:line="25" pos:column="9">{
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><op:operator pos:line="26" pos:column="17">!</op:operator><name><name pos:line="26" pos:column="18">model</name><op:operator pos:line="26" pos:column="23">.</op:operator><name pos:line="26" pos:column="24">IsFound</name></name></expr>)</condition><then pos:line="26" pos:column="32">
            <block pos:line="27" pos:column="13">{ 
                <if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name><name pos:line="28" pos:column="21">model</name><op:operator pos:line="28" pos:column="26">.</op:operator><name pos:line="28" pos:column="27">UseCache</name></name></expr>)</condition><then pos:line="28" pos:column="36">
                <block pos:line="29" pos:column="17">{
                    <return pos:line="30" pos:column="21">return <expr><lit:literal type="string" pos:line="30" pos:column="28">"Not Found In Cache"</lit:literal></expr>;</return>
                }</block></then></if>

                <decl_stmt><decl><type><name pos:line="33" pos:column="17">var</name></type> <name pos:line="33" pos:column="21">searchedLocations</name> <init pos:line="33" pos:column="39">= <expr><op:operator pos:line="33" pos:column="41">new</op:operator> <call><name pos:line="33" pos:column="45">TabSection</name><argument_list pos:line="33" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="33" pos:column="56">"Not Found In"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <foreach pos:line="34" pos:column="17">foreach (<init><decl><type><name pos:line="34" pos:column="26">var</name></type> <name pos:line="34" pos:column="30">searchedLocation</name> <range pos:line="34" pos:column="47">in <expr><name><name pos:line="34" pos:column="50">model</name><op:operator pos:line="34" pos:column="55">.</op:operator><name pos:line="34" pos:column="56">SearchedLocations</name></name></expr></range></decl></init>)
                <block pos:line="35" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="36" pos:column="21">searchedLocations</name><op:operator pos:line="36" pos:column="38">.</op:operator><name pos:line="36" pos:column="39">AddRow</name></name><argument_list pos:line="36" pos:column="45">()</argument_list></call><op:operator pos:line="36" pos:column="47">.</op:operator><call><name pos:line="36" pos:column="48">Column</name><argument_list pos:line="36" pos:column="54">(<argument><expr><name pos:line="36" pos:column="55">searchedLocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></foreach>  

                <return pos:line="39" pos:column="17">return <expr><name pos:line="39" pos:column="24">searchedLocations</name></expr>;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="42" pos:column="13">var</name></type> <name pos:line="42" pos:column="17">section</name> <init pos:line="42" pos:column="25">= <expr><op:operator pos:line="42" pos:column="27">new</op:operator> <call><name pos:line="42" pos:column="31">TabObject</name><argument_list pos:line="42" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="43" pos:column="13">var</name></type> <name pos:line="43" pos:column="17">summary</name> <init pos:line="43" pos:column="25">= <expr><name><name pos:line="43" pos:column="27">model</name><op:operator pos:line="43" pos:column="32">.</op:operator><name pos:line="43" pos:column="33">ViewModelSummary</name></name></expr></init></decl>;</decl_stmt>

            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><name pos:line="45" pos:column="17">summary</name> <op:operator pos:line="45" pos:column="25">==</op:operator> <name pos:line="45" pos:column="28">null</name></expr>)</condition><then pos:line="45" pos:column="33">
            <block pos:line="46" pos:column="13">{
                <return pos:line="47" pos:column="17">return <expr><name pos:line="47" pos:column="24">section</name></expr>;</return>
            }</block></then></if>

            <if pos:line="50" pos:column="13">if <condition pos:line="50" pos:column="16">(<expr><name><name pos:line="50" pos:column="17">summary</name><op:operator pos:line="50" pos:column="24">.</op:operator><name pos:line="50" pos:column="25">HasDisplayMode</name></name></expr>)</condition><then pos:line="50" pos:column="40">
            <block pos:line="51" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="52" pos:column="17">section</name><op:operator pos:line="52" pos:column="24">.</op:operator><name pos:line="52" pos:column="25">AddRow</name></name><argument_list pos:line="52" pos:column="31">()</argument_list></call><op:operator pos:line="52" pos:column="33">.</op:operator><call><name pos:line="52" pos:column="34">Key</name><argument_list pos:line="52" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="38">"Display Mode"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="52" pos:column="53">.</op:operator><call><name pos:line="52" pos:column="54">Value</name><argument_list pos:line="52" pos:column="59">(<argument><expr><name><name pos:line="52" pos:column="60">summary</name><op:operator pos:line="52" pos:column="67">.</op:operator><name pos:line="52" pos:column="68">DisplayModeName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                
            }</block></then></if>

            <expr_stmt><expr><call><name><name pos:line="55" pos:column="13">section</name><op:operator pos:line="55" pos:column="20">.</op:operator><name pos:line="55" pos:column="21">AddRow</name></name><argument_list pos:line="55" pos:column="27">()</argument_list></call><op:operator pos:line="55" pos:column="29">.</op:operator><call><name pos:line="55" pos:column="30">Key</name><argument_list pos:line="55" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="34">"Model Type"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="55" pos:column="47">.</op:operator><call><name pos:line="55" pos:column="48">Value</name><argument_list pos:line="55" pos:column="53">(<argument><expr><name><name pos:line="55" pos:column="54">summary</name><op:operator pos:line="55" pos:column="61">.</op:operator><name pos:line="55" pos:column="62">ModelType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="56" pos:column="13">section</name><op:operator pos:line="56" pos:column="20">.</op:operator><name pos:line="56" pos:column="21">AddRow</name></name><argument_list pos:line="56" pos:column="27">()</argument_list></call><op:operator pos:line="56" pos:column="29">.</op:operator><call><name pos:line="56" pos:column="30">Key</name><argument_list pos:line="56" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="56" pos:column="34">"Model State Valid"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="56" pos:column="54">.</op:operator><call><name pos:line="56" pos:column="55">Value</name><argument_list pos:line="56" pos:column="60">(<argument><expr><name><name pos:line="56" pos:column="61">summary</name><op:operator pos:line="56" pos:column="68">.</op:operator><name pos:line="56" pos:column="69">IsValid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="57" pos:column="13">section</name><op:operator pos:line="57" pos:column="20">.</op:operator><name pos:line="57" pos:column="21">AddRow</name></name><argument_list pos:line="57" pos:column="27">()</argument_list></call><op:operator pos:line="57" pos:column="29">.</op:operator><call><name pos:line="57" pos:column="30">Key</name><argument_list pos:line="57" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="57" pos:column="34">"TempData Keys"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="57" pos:column="50">.</op:operator><call><name pos:line="57" pos:column="51">Value</name><argument_list pos:line="57" pos:column="56">(<argument><expr><name><name pos:line="57" pos:column="57">summary</name><op:operator pos:line="57" pos:column="64">.</op:operator><name pos:line="57" pos:column="65">TempDataKeys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="58" pos:column="13">section</name><op:operator pos:line="58" pos:column="20">.</op:operator><name pos:line="58" pos:column="21">AddRow</name></name><argument_list pos:line="58" pos:column="27">()</argument_list></call><op:operator pos:line="58" pos:column="29">.</op:operator><call><name pos:line="58" pos:column="30">Key</name><argument_list pos:line="58" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="58" pos:column="34">"ViewData Keys"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="58" pos:column="50">.</op:operator><call><name pos:line="58" pos:column="51">Value</name><argument_list pos:line="58" pos:column="56">(<argument><expr><name><name pos:line="58" pos:column="57">summary</name><op:operator pos:line="58" pos:column="64">.</op:operator><name pos:line="58" pos:column="65">ViewDataKeys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:line="60" pos:column="13">return <expr><name pos:line="60" pos:column="20">section</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
