<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Ado\AlternateType\Support.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Data</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Data</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">Common</name></name>;</using> 
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Reflection</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Ado</name><op:operator pos:line="6" pos:column="18">.</op:operator><name pos:line="6" pos:column="19">Message</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Core</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Message</name></name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Glimpse</name><op:operator pos:line="9" pos:column="18">.</op:operator><name pos:line="9" pos:column="19">Ado</name><op:operator pos:line="9" pos:column="22">.</op:operator><name pos:line="9" pos:column="23">AlternateType</name></name>
<block pos:line="10" pos:column="1">{
    <class><specifier pos:line="11" pos:column="5">public</specifier> <specifier pos:line="11" pos:column="12">static</specifier> class <name pos:line="11" pos:column="25">Support</name>
    <block pos:line="12" pos:column="5">{
        <function><type><specifier pos:line="13" pos:column="9">public</specifier> <specifier pos:line="13" pos:column="16">static</specifier> <name pos:line="13" pos:column="23">DbProviderFactory</name></type> <name pos:line="13" pos:column="41">TryGetProviderFactory</name><parameter_list pos:line="13" pos:column="62">(<param><decl><type><name pos:line="13" pos:column="63">this</name> <name pos:line="13" pos:column="68">DbConnection</name></type> <name pos:line="13" pos:column="81">connection</name></decl></param>)</parameter_list>
        <block pos:line="14" pos:column="9">{
            <comment type="line" pos:line="15" pos:column="13">// If we can pull it out quickly and easily</comment>
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">var</name></type> <name pos:line="16" pos:column="17">profiledConnection</name> <init pos:line="16" pos:column="36">= <expr><name pos:line="16" pos:column="38">connection</name> <op:operator pos:line="16" pos:column="49">as</op:operator> <name pos:line="16" pos:column="52">GlimpseDbConnection</name></expr></init></decl>;</decl_stmt>
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><name pos:line="17" pos:column="17">profiledConnection</name> <op:operator pos:line="17" pos:column="36">!=</op:operator> <name pos:line="17" pos:column="39">null</name></expr>)</condition><then pos:line="17" pos:column="44">
            <block pos:line="18" pos:column="13">{
                <return pos:line="19" pos:column="17">return <expr><name><name pos:line="19" pos:column="24">profiledConnection</name><op:operator pos:line="19" pos:column="42">.</op:operator><name pos:line="19" pos:column="43">InnerProviderFactory</name></name></expr>;</return>
            }</block></then></if>

<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if</cpp:directive> <expr><op:operator pos:line="22" pos:column="5">(</op:operator><name pos:line="22" pos:column="6">NET45</name><op:operator pos:line="22" pos:column="11">)</op:operator></expr></cpp:if>
            <return pos:line="23" pos:column="13">return <expr><call><name><name pos:line="23" pos:column="20">DbProviderFactories</name><op:operator pos:line="23" pos:column="39">.</op:operator><name pos:line="23" pos:column="40">GetFactory</name></name><argument_list pos:line="23" pos:column="50">(<argument><expr><name pos:line="23" pos:column="51">connection</name></expr></argument>)</argument_list></call></expr>;</return>
<cpp:else pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">else</cpp:directive></cpp:else>
            <return pos:line="25" pos:column="13">return <expr><call><name><name pos:line="25" pos:column="20">connection</name><op:operator pos:line="25" pos:column="30">.</op:operator><name pos:line="25" pos:column="31">GetType</name></name><argument_list pos:line="25" pos:column="38">()</argument_list></call><op:operator pos:line="25" pos:column="40">.</op:operator><call><name pos:line="25" pos:column="41">GetProperty</name><argument_list pos:line="25" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="25" pos:column="53">"ProviderFactory"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="72">BindingFlags</name><op:operator pos:line="25" pos:column="84">.</op:operator><name pos:line="25" pos:column="85">NonPublic</name></name> <op:operator pos:line="25" pos:column="95">|</op:operator> <name><name pos:line="25" pos:column="97">BindingFlags</name><op:operator pos:line="25" pos:column="109">.</op:operator><name pos:line="25" pos:column="110">Instance</name></name></expr></argument>)</argument_list></call><op:operator pos:line="25" pos:column="119">.</op:operator><call><name pos:line="25" pos:column="120">GetValue</name><argument_list pos:line="25" pos:column="128">(<argument><expr><name pos:line="25" pos:column="129">connection</name></expr></argument>, <argument><expr><name pos:line="25" pos:column="141">null</name></expr></argument>)</argument_list></call> <op:operator pos:line="25" pos:column="147">as</op:operator> <name pos:line="25" pos:column="150">DbProviderFactory</name></expr>;</return>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif</cpp:directive></cpp:endif>
        }</block></function>

        <function><type><specifier pos:line="29" pos:column="9">public</specifier> <specifier pos:line="29" pos:column="16">static</specifier> <name pos:line="29" pos:column="23">DbProviderFactory</name></type> <name pos:line="29" pos:column="41">TryGetProfiledProviderFactory</name><parameter_list pos:line="29" pos:column="70">(<param><decl><type><name pos:line="29" pos:column="71">this</name> <name pos:line="29" pos:column="76">DbConnection</name></type> <name pos:line="29" pos:column="89">connection</name></decl></param>)</parameter_list>
        <block pos:line="30" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="31" pos:column="13">var</name></type> <name pos:line="31" pos:column="17">factory</name> <init pos:line="31" pos:column="25">= <expr><call><name><name pos:line="31" pos:column="27">connection</name><op:operator pos:line="31" pos:column="37">.</op:operator><name pos:line="31" pos:column="38">TryGetProviderFactory</name></name><argument_list pos:line="31" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><name pos:line="32" pos:column="17">factory</name> <op:operator pos:line="32" pos:column="25">!=</op:operator> <name pos:line="32" pos:column="28">null</name></expr>)</condition><then pos:line="32" pos:column="33">
            <block pos:line="33" pos:column="13">{ 
                <if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><op:operator pos:line="34" pos:column="21">!</op:operator><op:operator pos:line="34" pos:column="22">(</op:operator><name pos:line="34" pos:column="23">factory</name> <op:operator pos:line="34" pos:column="31">is</op:operator> <name pos:line="34" pos:column="34">GlimpseDbProviderFactory</name><op:operator pos:line="34" pos:column="58">)</op:operator></expr>)</condition><then pos:line="34" pos:column="60">
                <block pos:line="35" pos:column="17">{
                    <expr_stmt><expr><name pos:line="36" pos:column="21">factory</name> <op:operator pos:line="36" pos:column="29">=</op:operator> <call><name><name pos:line="36" pos:column="31">factory</name><op:operator pos:line="36" pos:column="38">.</op:operator><name pos:line="36" pos:column="39">WrapProviderFactory</name></name><argument_list pos:line="36" pos:column="58">()</argument_list></call></expr>;</expr_stmt> 
                }</block></then></if>
            }</block></then>
            <else pos:line="39" pos:column="13">else
            <block pos:line="40" pos:column="13">{
                <throw pos:line="41" pos:column="17">throw <expr><op:operator pos:line="41" pos:column="23">new</op:operator> <call><name pos:line="41" pos:column="27">NotSupportedException</name><argument_list pos:line="41" pos:column="48">(<argument><expr><call><name><name pos:line="41" pos:column="49">string</name><op:operator pos:line="41" pos:column="55">.</op:operator><name pos:line="41" pos:column="56">Format</name></name><argument_list pos:line="41" pos:column="62">(<argument><expr><name><name pos:line="41" pos:column="63">Resources</name><op:operator pos:line="41" pos:column="72">.</op:operator><name pos:line="41" pos:column="73">DbFactoryNotFoundInDbConnection</name></name></expr></argument>, <argument><expr><call><name><name pos:line="41" pos:column="106">connection</name><op:operator pos:line="41" pos:column="116">.</op:operator><name pos:line="41" pos:column="117">GetType</name></name><argument_list pos:line="41" pos:column="124">()</argument_list></call><op:operator pos:line="41" pos:column="126">.</op:operator><name pos:line="41" pos:column="127">FullName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></else></if>

            <return pos:line="44" pos:column="13">return <expr><name pos:line="44" pos:column="20">factory</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="47" pos:column="9">public</specifier> <specifier pos:line="47" pos:column="16">static</specifier> <name pos:line="47" pos:column="23">DbProviderFactory</name></type> <name pos:line="47" pos:column="41">WrapProviderFactory</name><parameter_list pos:line="47" pos:column="60">(<param><decl><type><name pos:line="47" pos:column="61">this</name> <name pos:line="47" pos:column="66">DbProviderFactory</name></type> <name pos:line="47" pos:column="84">factory</name></decl></param>)</parameter_list>
        <block pos:line="48" pos:column="9">{
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><op:operator pos:line="49" pos:column="17">!</op:operator><op:operator pos:line="49" pos:column="18">(</op:operator><name pos:line="49" pos:column="19">factory</name> <op:operator pos:line="49" pos:column="27">is</op:operator> <name pos:line="49" pos:column="30">GlimpseDbProviderFactory</name><op:operator pos:line="49" pos:column="54">)</op:operator></expr>)</condition><then pos:line="49" pos:column="56">
            <block pos:line="50" pos:column="13">{ 
                <decl_stmt><decl><type><name pos:line="51" pos:column="17">var</name></type> <name pos:line="51" pos:column="21">factoryType</name> <init pos:line="51" pos:column="33">= <expr><call><name pos:line="51" pos:column="35">typeof</name><argument_list pos:line="51" pos:column="41">(<argument><expr><name><name pos:line="51" pos:column="42">GlimpseDbProviderFactory</name><argument_list pos:line="51" pos:column="66">&lt;&gt;</argument_list></name></expr></argument>)</argument_list></call><op:operator pos:line="51" pos:column="69">.</op:operator><call><name pos:line="51" pos:column="70">MakeGenericType</name><argument_list pos:line="51" pos:column="85">(<argument><expr><call><name><name pos:line="51" pos:column="86">factory</name><op:operator pos:line="51" pos:column="93">.</op:operator><name pos:line="51" pos:column="94">GetType</name></name><argument_list pos:line="51" pos:column="101">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <return pos:line="52" pos:column="17">return <expr><op:operator pos:line="52" pos:column="24">(</op:operator><name pos:line="52" pos:column="25">DbProviderFactory</name><op:operator pos:line="52" pos:column="42">)</op:operator><call><name><name pos:line="52" pos:column="43">factoryType</name><op:operator pos:line="52" pos:column="54">.</op:operator><name pos:line="52" pos:column="55">GetField</name></name><argument_list pos:line="52" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="64">"Instance"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="52" pos:column="75">.</op:operator><call><name pos:line="52" pos:column="76">GetValue</name><argument_list pos:line="52" pos:column="84">(<argument><expr><name pos:line="52" pos:column="85">null</name></expr></argument>)</argument_list></call></expr>;</return>    
            }</block></then></if>

            <return pos:line="55" pos:column="13">return <expr><name pos:line="55" pos:column="20">factory</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="58" pos:column="9">public</specifier> <specifier pos:line="58" pos:column="16">static</specifier> <name pos:line="58" pos:column="23">DataTable</name></type> <name pos:line="58" pos:column="33">FindDbProviderFactoryTable</name><parameter_list pos:line="58" pos:column="59">()</parameter_list>
        <block pos:line="59" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="60" pos:column="13">var</name></type> <name pos:line="60" pos:column="17">providerFactories</name> <init pos:line="60" pos:column="35">= <expr><call><name pos:line="60" pos:column="37">typeof</name><argument_list pos:line="60" pos:column="43">(<argument><expr><name pos:line="60" pos:column="44">DbProviderFactories</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="61" pos:column="13">var</name></type> <name pos:line="61" pos:column="17">providerField</name> <init pos:line="61" pos:column="31">= <expr><call><name><name pos:line="61" pos:column="33">providerFactories</name><op:operator pos:line="61" pos:column="50">.</op:operator><name pos:line="61" pos:column="51">GetField</name></name><argument_list pos:line="61" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="60">"_configTable"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="76">BindingFlags</name><op:operator pos:line="61" pos:column="88">.</op:operator><name pos:line="61" pos:column="89">NonPublic</name></name> <op:operator pos:line="61" pos:column="99">|</op:operator> <name><name pos:line="61" pos:column="101">BindingFlags</name><op:operator pos:line="61" pos:column="113">.</op:operator><name pos:line="61" pos:column="114">Static</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="61" pos:column="122">??</op:operator> <call><name><name pos:line="61" pos:column="125">providerFactories</name><op:operator pos:line="61" pos:column="142">.</op:operator><name pos:line="61" pos:column="143">GetField</name></name><argument_list pos:line="61" pos:column="151">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="152">"_providerTable"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="170">BindingFlags</name><op:operator pos:line="61" pos:column="182">.</op:operator><name pos:line="61" pos:column="183">NonPublic</name></name> <op:operator pos:line="61" pos:column="193">|</op:operator> <name><name pos:line="61" pos:column="195">BindingFlags</name><op:operator pos:line="61" pos:column="207">.</op:operator><name pos:line="61" pos:column="208">Static</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="62" pos:column="13">var</name></type> <name pos:line="62" pos:column="17">registrations</name> <init pos:line="62" pos:column="31">= <expr><call><name><name pos:line="62" pos:column="33">providerField</name><op:operator pos:line="62" pos:column="46">.</op:operator><name pos:line="62" pos:column="47">GetValue</name></name><argument_list pos:line="62" pos:column="55">(<argument><expr><name pos:line="62" pos:column="56">null</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="63" pos:column="13">return <expr><name pos:line="63" pos:column="20">registrations</name> <op:operator pos:line="63" pos:column="34">is</op:operator> <name pos:line="63" pos:column="37">DataSet</name> <op:operator pos:line="63" pos:column="45">?</op:operator> <op:operator pos:line="63" pos:column="47">(</op:operator><op:operator pos:line="63" pos:column="48">(</op:operator><name pos:line="63" pos:column="49">DataSet</name><op:operator pos:line="63" pos:column="56">)</op:operator><name pos:line="63" pos:column="57">registrations</name><op:operator pos:line="63" pos:column="70">)</op:operator><op:operator pos:line="63" pos:column="71">.</op:operator><name><name pos:line="63" pos:column="72">Tables</name><index pos:line="63" pos:column="78">[<expr><lit:literal type="string" pos:line="63" pos:column="79">"DbProviderFactories"</lit:literal></expr>]</index></name> <op:operator pos:line="63" pos:column="102">:</op:operator> <op:operator pos:line="63" pos:column="104">(</op:operator><name pos:line="63" pos:column="105">DataTable</name><op:operator pos:line="63" pos:column="114">)</op:operator><name pos:line="63" pos:column="115">registrations</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="66" pos:column="9">public</specifier> <specifier pos:line="66" pos:column="16">static</specifier> <name pos:line="66" pos:column="23">object</name></type> <name pos:line="66" pos:column="30">GetParameterValue</name><parameter_list pos:line="66" pos:column="47">(<param><decl><type><name pos:line="66" pos:column="48">IDataParameter</name></type> <name pos:line="66" pos:column="63">parameter</name></decl></param>)</parameter_list>
        <block pos:line="67" pos:column="9">{
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><name><name pos:line="68" pos:column="17">parameter</name><op:operator pos:line="68" pos:column="26">.</op:operator><name pos:line="68" pos:column="27">Value</name></name> <op:operator pos:line="68" pos:column="33">==</op:operator> <name><name pos:line="68" pos:column="36">DBNull</name><op:operator pos:line="68" pos:column="42">.</op:operator><name pos:line="68" pos:column="43">Value</name></name></expr>)</condition><then pos:line="68" pos:column="49">
            <block pos:line="69" pos:column="13">{
                <return pos:line="70" pos:column="17">return <expr><lit:literal type="string" pos:line="70" pos:column="24">"NULL"</lit:literal></expr>;</return>
            }</block></then></if>

            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><name><name pos:line="73" pos:column="17">parameter</name><op:operator pos:line="73" pos:column="26">.</op:operator><name pos:line="73" pos:column="27">Value</name></name> <op:operator pos:line="73" pos:column="33">is</op:operator> <name><name pos:line="73" pos:column="36">byte</name><index pos:line="73" pos:column="40">[]</index></name></expr>)</condition><then pos:line="73" pos:column="43">
            <block pos:line="74" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="75" pos:column="17">var</name></type> <name pos:line="75" pos:column="21">blob</name> <init pos:line="75" pos:column="26">= <expr><name><name pos:line="75" pos:column="28">parameter</name><op:operator pos:line="75" pos:column="37">.</op:operator><name pos:line="75" pos:column="38">Value</name></name> <op:operator pos:line="75" pos:column="44">as</op:operator> <name><name pos:line="75" pos:column="47">byte</name><index pos:line="75" pos:column="51">[]</index></name></expr></init></decl>;</decl_stmt>
                <return pos:line="76" pos:column="17">return <expr><lit:literal type="string" pos:line="76" pos:column="24">"BLOB"</lit:literal> <op:operator pos:line="76" pos:column="31">+</op:operator> <op:operator pos:line="76" pos:column="33">(</op:operator><name pos:line="76" pos:column="34">blob</name> <op:operator pos:line="76" pos:column="39">!=</op:operator> <name pos:line="76" pos:column="42">null</name> <op:operator pos:line="76" pos:column="47">?</op:operator> <call><name><name pos:line="76" pos:column="49">string</name><op:operator pos:line="76" pos:column="55">.</op:operator><name pos:line="76" pos:column="56">Format</name></name><argument_list pos:line="76" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="76" pos:column="63">" {0} bytes"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="77">blob</name><op:operator pos:line="76" pos:column="81">.</op:operator><name pos:line="76" pos:column="82">Length</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="76" pos:column="90">:</op:operator> <name><name pos:line="76" pos:column="92">string</name><op:operator pos:line="76" pos:column="98">.</op:operator><name pos:line="76" pos:column="99">Empty</name></name><op:operator pos:line="76" pos:column="104">)</op:operator></expr>;</return>
            }</block></then></if>

            <return pos:line="79" pos:column="13">return <expr><name><name pos:line="79" pos:column="20">parameter</name><op:operator pos:line="79" pos:column="29">.</op:operator><name pos:line="79" pos:column="30">Value</name></name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="82" pos:column="9">public</specifier> <specifier pos:line="82" pos:column="16">static</specifier> <name pos:line="82" pos:column="23">TimeSpan</name></type> <name pos:line="82" pos:column="32">LogCommandSeed</name><parameter_list pos:line="82" pos:column="46">(<param><decl><type><name pos:line="82" pos:column="47">this</name> <name pos:line="82" pos:column="52">GlimpseDbCommand</name></type> <name pos:line="82" pos:column="69">command</name></decl></param>)</parameter_list>
        <block pos:line="83" pos:column="9">{
            <return pos:line="84" pos:column="13">return <expr><name><name pos:line="84" pos:column="20">command</name><op:operator pos:line="84" pos:column="27">.</op:operator><name pos:line="84" pos:column="28">TimerStrategy</name></name> <op:operator pos:line="84" pos:column="42">!=</op:operator> <name pos:line="84" pos:column="45">null</name> <op:operator pos:line="84" pos:column="50">?</op:operator> <call><name><name pos:line="84" pos:column="52">command</name><op:operator pos:line="84" pos:column="59">.</op:operator><name pos:line="84" pos:column="60">TimerStrategy</name><op:operator pos:line="84" pos:column="73">.</op:operator><name pos:line="84" pos:column="74">Start</name></name><argument_list pos:line="84" pos:column="79">()</argument_list></call> <op:operator pos:line="84" pos:column="82">:</op:operator> <name><name pos:line="84" pos:column="84">TimeSpan</name><op:operator pos:line="84" pos:column="92">.</op:operator><name pos:line="84" pos:column="93">Zero</name></name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="87" pos:column="9">public</specifier> <specifier pos:line="87" pos:column="16">static</specifier> <name pos:line="87" pos:column="23">void</name></type> <name pos:line="87" pos:column="28">LogCommandStart</name><parameter_list pos:line="87" pos:column="43">(<param><decl><type><name pos:line="87" pos:column="44">this</name> <name pos:line="87" pos:column="49">GlimpseDbCommand</name></type> <name pos:line="87" pos:column="66">command</name></decl></param>, <param><decl><type><name pos:line="87" pos:column="75">Guid</name></type> <name pos:line="87" pos:column="80">commandId</name></decl></param>, <param><decl><type><name pos:line="87" pos:column="91">TimeSpan</name></type> <name pos:line="87" pos:column="100">timerTimeSpan</name></decl></param>)</parameter_list>
        <block pos:line="88" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="89" pos:column="13">command</name><op:operator pos:line="89" pos:column="20">.</op:operator><name pos:line="89" pos:column="21">LogCommandStart</name></name><argument_list pos:line="89" pos:column="36">(<argument><expr><name pos:line="89" pos:column="37">commandId</name></expr></argument>, <argument><expr><name pos:line="89" pos:column="48">timerTimeSpan</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="89" pos:column="63">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="92" pos:column="9">public</specifier> <specifier pos:line="92" pos:column="16">static</specifier> <name pos:line="92" pos:column="23">void</name></type> <name pos:line="92" pos:column="28">LogCommandStart</name><parameter_list pos:line="92" pos:column="43">(<param><decl><type><name pos:line="92" pos:column="44">this</name> <name pos:line="92" pos:column="49">GlimpseDbCommand</name></type> <name pos:line="92" pos:column="66">command</name></decl></param>, <param><decl><type><name pos:line="92" pos:column="75">Guid</name></type> <name pos:line="92" pos:column="80">commandId</name></decl></param>, <param><decl><type><name pos:line="92" pos:column="91">TimeSpan</name></type> <name pos:line="92" pos:column="100">timerTimeSpan</name></decl></param>, <param><decl><type><name pos:line="92" pos:column="115">bool</name></type> <name pos:line="92" pos:column="120">isAsync</name></decl></param>)</parameter_list>
        <block pos:line="93" pos:column="9">{
            <if pos:line="94" pos:column="13">if <condition pos:line="94" pos:column="16">(<expr><name><name pos:line="94" pos:column="17">command</name><op:operator pos:line="94" pos:column="24">.</op:operator><name pos:line="94" pos:column="25">MessageBroker</name></name> <op:operator pos:line="94" pos:column="39">!=</op:operator> <name pos:line="94" pos:column="42">null</name></expr>)</condition><then pos:line="94" pos:column="47">
            <block pos:line="95" pos:column="13">{
                <decl_stmt><decl><type><name><name pos:line="96" pos:column="17">IList</name><argument_list pos:line="96" pos:column="22">&lt;<argument><name pos:line="96" pos:column="23">CommandExecutedParamater</name></argument>&gt;</argument_list></name></type> <name pos:line="96" pos:column="49">parameters</name> <init pos:line="96" pos:column="60">= <expr><name pos:line="96" pos:column="62">null</name></expr></init></decl>;</decl_stmt>
                <if pos:line="97" pos:column="17">if <condition pos:line="97" pos:column="20">(<expr><name><name pos:line="97" pos:column="21">command</name><op:operator pos:line="97" pos:column="28">.</op:operator><name pos:line="97" pos:column="29">Parameters</name><op:operator pos:line="97" pos:column="39">.</op:operator><name pos:line="97" pos:column="40">Count</name></name> <op:operator pos:line="97" pos:column="46">&gt;</op:operator> <lit:literal type="number" pos:line="97" pos:column="48">0</lit:literal></expr>)</condition><then pos:line="97" pos:column="50">
                <block pos:line="98" pos:column="17">{
                    <expr_stmt><expr><name pos:line="99" pos:column="21">parameters</name> <op:operator pos:line="99" pos:column="32">=</op:operator> <op:operator pos:line="99" pos:column="34">new</op:operator> <call><name><name pos:line="99" pos:column="38">List</name><argument_list pos:line="99" pos:column="42">&lt;<argument><name pos:line="99" pos:column="43">CommandExecutedParamater</name></argument>&gt;</argument_list></name><argument_list pos:line="99" pos:column="68">()</argument_list></call></expr>;</expr_stmt>
                    <foreach pos:line="100" pos:column="21">foreach (<init><decl><type><name pos:line="100" pos:column="30">IDbDataParameter</name></type> <name pos:line="100" pos:column="47">parameter</name> <range pos:line="100" pos:column="57">in <expr><name><name pos:line="100" pos:column="60">command</name><op:operator pos:line="100" pos:column="67">.</op:operator><name pos:line="100" pos:column="68">Parameters</name></name></expr></range></decl></init>)
                    <block pos:line="101" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="102" pos:column="25">var</name></type> <name pos:line="102" pos:column="29">parameterName</name> <init pos:line="102" pos:column="43">= <expr><name><name pos:line="102" pos:column="45">parameter</name><op:operator pos:line="102" pos:column="54">.</op:operator><name pos:line="102" pos:column="55">ParameterName</name></name></expr></init></decl>;</decl_stmt>
                        <if pos:line="103" pos:column="25">if <condition pos:line="103" pos:column="28">(<expr><op:operator pos:line="103" pos:column="29">!</op:operator><call><name><name pos:line="103" pos:column="30">parameterName</name><op:operator pos:line="103" pos:column="43">.</op:operator><name pos:line="103" pos:column="44">StartsWith</name></name><argument_list pos:line="103" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="103" pos:column="55">"@"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="103" pos:column="60">
                        <block pos:line="104" pos:column="25">{
                            <expr_stmt><expr><name pos:line="105" pos:column="29">parameterName</name> <op:operator pos:line="105" pos:column="43">=</op:operator> <lit:literal type="string" pos:line="105" pos:column="45">"@"</lit:literal> <op:operator pos:line="105" pos:column="49">+</op:operator> <name pos:line="105" pos:column="51">parameterName</name></expr>;</expr_stmt>
                        }</block></then></if>

                        <expr_stmt><expr><call><name><name pos:line="108" pos:column="25">parameters</name><op:operator pos:line="108" pos:column="35">.</op:operator><name pos:line="108" pos:column="36">Add</name></name><argument_list pos:line="108" pos:column="39">(<argument><expr><op:operator pos:line="108" pos:column="40">new</op:operator> <name pos:line="108" pos:column="44">CommandExecutedParamater</name> <block pos:line="108" pos:column="69">{ <expr><name pos:line="108" pos:column="71">Name</name> <op:operator pos:line="108" pos:column="76">=</op:operator> <name pos:line="108" pos:column="78">parameterName</name></expr><op:operator pos:line="108" pos:column="91">,</op:operator> <expr><name pos:line="108" pos:column="93">Value</name> <op:operator pos:line="108" pos:column="99">=</op:operator> <call><name pos:line="108" pos:column="101">GetParameterValue</name><argument_list pos:line="108" pos:column="118">(<argument><expr><name pos:line="108" pos:column="119">parameter</name></expr></argument>)</argument_list></call></expr><op:operator pos:line="108" pos:column="129">,</op:operator> <expr><name pos:line="108" pos:column="131">Type</name> <op:operator pos:line="108" pos:column="136">=</op:operator> <call><name><name pos:line="108" pos:column="138">parameter</name><op:operator pos:line="108" pos:column="147">.</op:operator><name pos:line="108" pos:column="148">DbType</name><op:operator pos:line="108" pos:column="154">.</op:operator><name pos:line="108" pos:column="155">ToString</name></name><argument_list pos:line="108" pos:column="163">()</argument_list></call></expr><op:operator pos:line="108" pos:column="165">,</op:operator> <expr><name pos:line="108" pos:column="167">Size</name> <op:operator pos:line="108" pos:column="172">=</op:operator> <name><name pos:line="108" pos:column="174">parameter</name><op:operator pos:line="108" pos:column="183">.</op:operator><name pos:line="108" pos:column="184">Size</name></name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></foreach>
                }</block></then></if>

                <expr_stmt><expr><call><name><name pos:line="112" pos:column="17">command</name><op:operator pos:line="112" pos:column="24">.</op:operator><name pos:line="112" pos:column="25">MessageBroker</name><op:operator pos:line="112" pos:column="38">.</op:operator><name pos:line="112" pos:column="39">Publish</name></name><argument_list pos:line="112" pos:column="46">(
                    <argument><expr><op:operator pos:line="113" pos:column="21">new</op:operator> <call><name pos:line="113" pos:column="25">CommandExecutedMessage</name><argument_list pos:line="113" pos:column="47">(<argument><expr><name><name pos:line="113" pos:column="48">command</name><op:operator pos:line="113" pos:column="55">.</op:operator><name pos:line="113" pos:column="56">InnerConnection</name><op:operator pos:line="113" pos:column="71">.</op:operator><name pos:line="113" pos:column="72">ConnectionId</name></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="86">commandId</name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="97">command</name><op:operator pos:line="113" pos:column="104">.</op:operator><name pos:line="113" pos:column="105">InnerCommand</name><op:operator pos:line="113" pos:column="117">.</op:operator><name pos:line="113" pos:column="118">CommandText</name></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="131">parameters</name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="143">command</name><op:operator pos:line="113" pos:column="150">.</op:operator><name pos:line="113" pos:column="151">InnerCommand</name><op:operator pos:line="113" pos:column="163">.</op:operator><name pos:line="113" pos:column="164">Transaction</name></name> <op:operator pos:line="113" pos:column="176">!=</op:operator> <name pos:line="113" pos:column="179">null</name></expr></argument>, <argument><expr><name pos:line="113" pos:column="185">isAsync</name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="114" pos:column="21">.</op:operator><call><name pos:line="114" pos:column="22">AsTimedMessage</name><argument_list pos:line="114" pos:column="36">(<argument><expr><name pos:line="114" pos:column="37">timerTimeSpan</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="118" pos:column="9">public</specifier> <specifier pos:line="118" pos:column="16">static</specifier> <name pos:line="118" pos:column="23">void</name></type> <name pos:line="118" pos:column="28">LogCommandEnd</name><parameter_list pos:line="118" pos:column="41">(<param><decl><type><name pos:line="118" pos:column="42">this</name> <name pos:line="118" pos:column="47">GlimpseDbCommand</name></type> <name pos:line="118" pos:column="64">command</name></decl></param>, <param><decl><type><name pos:line="118" pos:column="73">Guid</name></type> <name pos:line="118" pos:column="78">commandId</name></decl></param>, <param><decl><type><name pos:line="118" pos:column="89">TimeSpan</name></type> <name pos:line="118" pos:column="98">timer</name></decl></param>, <param><decl><type><name pos:line="118" pos:column="105">int</name><type:modifier pos:line="118" pos:column="108">?</type:modifier></type> <name pos:line="118" pos:column="110">recordsAffected</name></decl></param>, <param><decl><type><name pos:line="118" pos:column="127">string</name></type> <name pos:line="118" pos:column="134">type</name></decl></param>)</parameter_list>
        <block pos:line="119" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="120" pos:column="13">command</name><op:operator pos:line="120" pos:column="20">.</op:operator><name pos:line="120" pos:column="21">LogCommandEnd</name></name><argument_list pos:line="120" pos:column="34">(<argument><expr><name pos:line="120" pos:column="35">commandId</name></expr></argument>, <argument><expr><name pos:line="120" pos:column="46">timer</name></expr></argument>, <argument><expr><name pos:line="120" pos:column="53">recordsAffected</name></expr></argument>, <argument><expr><name pos:line="120" pos:column="70">type</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="120" pos:column="76">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="123" pos:column="9">public</specifier> <specifier pos:line="123" pos:column="16">static</specifier> <name pos:line="123" pos:column="23">void</name></type> <name pos:line="123" pos:column="28">LogCommandEnd</name><parameter_list pos:line="123" pos:column="41">(<param><decl><type><name pos:line="123" pos:column="42">this</name> <name pos:line="123" pos:column="47">GlimpseDbCommand</name></type> <name pos:line="123" pos:column="64">command</name></decl></param>, <param><decl><type><name pos:line="123" pos:column="73">Guid</name></type> <name pos:line="123" pos:column="78">commandId</name></decl></param>, <param><decl><type><name pos:line="123" pos:column="89">TimeSpan</name></type> <name pos:line="123" pos:column="98">timer</name></decl></param>, <param><decl><type><name pos:line="123" pos:column="105">int</name><type:modifier pos:line="123" pos:column="108">?</type:modifier></type> <name pos:line="123" pos:column="110">recordsAffected</name></decl></param>, <param><decl><type><name pos:line="123" pos:column="127">string</name></type> <name pos:line="123" pos:column="134">type</name></decl></param>, <param><decl><type><name pos:line="123" pos:column="140">bool</name></type> <name pos:line="123" pos:column="145">isAsync</name></decl></param>)</parameter_list>
        <block pos:line="124" pos:column="9">{
            <if pos:line="125" pos:column="13">if <condition pos:line="125" pos:column="16">(<expr><name><name pos:line="125" pos:column="17">command</name><op:operator pos:line="125" pos:column="24">.</op:operator><name pos:line="125" pos:column="25">MessageBroker</name></name> <op:operator pos:line="125" pos:column="39">!=</op:operator> <name pos:line="125" pos:column="42">null</name> <op:operator pos:line="125" pos:column="47">&amp;&amp;</op:operator> <name><name pos:line="125" pos:column="50">command</name><op:operator pos:line="125" pos:column="57">.</op:operator><name pos:line="125" pos:column="58">TimerStrategy</name></name> <op:operator pos:line="125" pos:column="72">!=</op:operator> <name pos:line="125" pos:column="75">null</name></expr>)</condition><then pos:line="125" pos:column="80">
            <block pos:line="126" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="127" pos:column="17">command</name><op:operator pos:line="127" pos:column="24">.</op:operator><name pos:line="127" pos:column="25">MessageBroker</name><op:operator pos:line="127" pos:column="38">.</op:operator><name pos:line="127" pos:column="39">Publish</name></name><argument_list pos:line="127" pos:column="46">(
                    <argument><expr><op:operator pos:line="128" pos:column="21">new</op:operator> <call><name pos:line="128" pos:column="25">CommandDurationAndRowCountMessage</name><argument_list pos:line="128" pos:column="58">(<argument><expr><name><name pos:line="128" pos:column="59">command</name><op:operator pos:line="128" pos:column="66">.</op:operator><name pos:line="128" pos:column="67">InnerConnection</name><op:operator pos:line="128" pos:column="82">.</op:operator><name pos:line="128" pos:column="83">ConnectionId</name></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="97">commandId</name></expr></argument>, <argument><expr><name pos:line="128" pos:column="108">recordsAffected</name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="129" pos:column="21">.</op:operator><call><name pos:line="129" pos:column="22">AsTimedMessage</name><argument_list pos:line="129" pos:column="36">(<argument><expr><call><name><name pos:line="129" pos:column="37">command</name><op:operator pos:line="129" pos:column="44">.</op:operator><name pos:line="129" pos:column="45">TimerStrategy</name><op:operator pos:line="129" pos:column="58">.</op:operator><name pos:line="129" pos:column="59">Stop</name></name><argument_list pos:line="129" pos:column="63">(<argument><expr><name pos:line="129" pos:column="64">timer</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
                    <op:operator pos:line="130" pos:column="21">.</op:operator><call><name pos:line="130" pos:column="22">AsTimelineMessage</name><argument_list pos:line="130" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="130" pos:column="40">"Command: Executed"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="61">AdoTimelineCategory</name><op:operator pos:line="130" pos:column="80">.</op:operator><name pos:line="130" pos:column="81">Command</name></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="90">type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="134" pos:column="9">public</specifier> <specifier pos:line="134" pos:column="16">static</specifier> <name pos:line="134" pos:column="23">void</name></type> <name pos:line="134" pos:column="28">LogCommandError</name><parameter_list pos:line="134" pos:column="43">(<param><decl><type><name pos:line="134" pos:column="44">this</name> <name pos:line="134" pos:column="49">GlimpseDbCommand</name></type> <name pos:line="134" pos:column="66">command</name></decl></param>, <param><decl><type><name pos:line="134" pos:column="75">Guid</name></type> <name pos:line="134" pos:column="80">commandId</name></decl></param>, <param><decl><type><name pos:line="134" pos:column="91">TimeSpan</name></type> <name pos:line="134" pos:column="100">timer</name></decl></param>, <param><decl><type><name pos:line="134" pos:column="107">Exception</name></type> <name pos:line="134" pos:column="117">exception</name></decl></param>, <param><decl><type><name pos:line="134" pos:column="128">string</name></type> <name pos:line="134" pos:column="135">type</name></decl></param>)</parameter_list>
        <block pos:line="135" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="136" pos:column="13">command</name><op:operator pos:line="136" pos:column="20">.</op:operator><name pos:line="136" pos:column="21">LogCommandError</name></name><argument_list pos:line="136" pos:column="36">(<argument><expr><name pos:line="136" pos:column="37">commandId</name></expr></argument>, <argument><expr><name pos:line="136" pos:column="48">timer</name></expr></argument>, <argument><expr><name pos:line="136" pos:column="55">exception</name></expr></argument>, <argument><expr><name pos:line="136" pos:column="66">type</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="136" pos:column="72">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="139" pos:column="9">public</specifier> <specifier pos:line="139" pos:column="16">static</specifier> <name pos:line="139" pos:column="23">void</name></type> <name pos:line="139" pos:column="28">LogCommandError</name><parameter_list pos:line="139" pos:column="43">(<param><decl><type><name pos:line="139" pos:column="44">this</name> <name pos:line="139" pos:column="49">GlimpseDbCommand</name></type> <name pos:line="139" pos:column="66">command</name></decl></param>, <param><decl><type><name pos:line="139" pos:column="75">Guid</name></type> <name pos:line="139" pos:column="80">commandId</name></decl></param>, <param><decl><type><name pos:line="139" pos:column="91">TimeSpan</name></type> <name pos:line="139" pos:column="100">timer</name></decl></param>, <param><decl><type><name pos:line="139" pos:column="107">Exception</name></type> <name pos:line="139" pos:column="117">exception</name></decl></param>, <param><decl><type><name pos:line="139" pos:column="128">string</name></type> <name pos:line="139" pos:column="135">type</name></decl></param>, <param><decl><type><name pos:line="139" pos:column="141">bool</name></type> <name pos:line="139" pos:column="146">isAsync</name></decl></param>)</parameter_list>
        <block pos:line="140" pos:column="9">{
            <if pos:line="141" pos:column="13">if <condition pos:line="141" pos:column="16">(<expr><name><name pos:line="141" pos:column="17">command</name><op:operator pos:line="141" pos:column="24">.</op:operator><name pos:line="141" pos:column="25">MessageBroker</name></name> <op:operator pos:line="141" pos:column="39">!=</op:operator> <name pos:line="141" pos:column="42">null</name> <op:operator pos:line="141" pos:column="47">&amp;&amp;</op:operator> <name><name pos:line="141" pos:column="50">command</name><op:operator pos:line="141" pos:column="57">.</op:operator><name pos:line="141" pos:column="58">TimerStrategy</name></name> <op:operator pos:line="141" pos:column="72">!=</op:operator> <name pos:line="141" pos:column="75">null</name></expr>)</condition><then pos:line="141" pos:column="80">
            <block pos:line="142" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="143" pos:column="17">command</name><op:operator pos:line="143" pos:column="24">.</op:operator><name pos:line="143" pos:column="25">MessageBroker</name><op:operator pos:line="143" pos:column="38">.</op:operator><name pos:line="143" pos:column="39">Publish</name></name><argument_list pos:line="143" pos:column="46">(
                    <argument><expr><op:operator pos:line="144" pos:column="21">new</op:operator> <call><name pos:line="144" pos:column="25">CommandErrorMessage</name><argument_list pos:line="144" pos:column="44">(<argument><expr><name><name pos:line="144" pos:column="45">command</name><op:operator pos:line="144" pos:column="52">.</op:operator><name pos:line="144" pos:column="53">InnerConnection</name><op:operator pos:line="144" pos:column="68">.</op:operator><name pos:line="144" pos:column="69">ConnectionId</name></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="83">commandId</name></expr></argument>, <argument><expr><name pos:line="144" pos:column="94">exception</name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="145" pos:column="21">.</op:operator><call><name pos:line="145" pos:column="22">AsTimedMessage</name><argument_list pos:line="145" pos:column="36">(<argument><expr><call><name><name pos:line="145" pos:column="37">command</name><op:operator pos:line="145" pos:column="44">.</op:operator><name pos:line="145" pos:column="45">TimerStrategy</name><op:operator pos:line="145" pos:column="58">.</op:operator><name pos:line="145" pos:column="59">Stop</name></name><argument_list pos:line="145" pos:column="63">(<argument><expr><name pos:line="145" pos:column="64">timer</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
                    <op:operator pos:line="146" pos:column="21">.</op:operator><call><name pos:line="146" pos:column="22">AsTimelineMessage</name><argument_list pos:line="146" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="146" pos:column="40">"Command: Error"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="146" pos:column="58">AdoTimelineCategory</name><op:operator pos:line="146" pos:column="77">.</op:operator><name pos:line="146" pos:column="78">Command</name></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="87">type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
