<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Ado\Tab\Sql.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Linq</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Ado</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">Message</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Ado</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">Model</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Ado</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">Tab</name><op:operator pos:line="5" pos:column="22">.</op:operator><name pos:line="5" pos:column="23">Support</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Core</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Extensions</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Glimpse</name><op:operator pos:line="8" pos:column="14">.</op:operator><name pos:line="8" pos:column="15">Core</name><op:operator pos:line="8" pos:column="19">.</op:operator><name pos:line="8" pos:column="20">Tab</name><op:operator pos:line="8" pos:column="23">.</op:operator><name pos:line="8" pos:column="24">Assist</name></name>;</using>

<namespace pos:line="10" pos:column="1">namespace <name><name pos:line="10" pos:column="11">Glimpse</name><op:operator pos:line="10" pos:column="18">.</op:operator><name pos:line="10" pos:column="19">Ado</name><op:operator pos:line="10" pos:column="22">.</op:operator><name pos:line="10" pos:column="23">Tab</name></name>
<block pos:line="11" pos:column="1">{
    <class><specifier pos:line="12" pos:column="5">public</specifier> class <name pos:line="12" pos:column="18">SQL</name> <super pos:line="12" pos:column="22">: <name pos:line="12" pos:column="24">TabBase</name>, <name pos:line="12" pos:column="33">ITabSetup</name>, <name pos:line="12" pos:column="44">IKey</name>, <name pos:line="12" pos:column="50">ITabLayout</name>, <name pos:line="12" pos:column="62">IDocumentation</name>, <name pos:line="12" pos:column="78">ILayoutControl</name></super>
    <block pos:line="13" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">private</specifier> <specifier pos:line="14" pos:column="17">static</specifier> <specifier pos:line="14" pos:column="24">readonly</specifier> <name pos:line="14" pos:column="33">object</name></type> <name pos:line="14" pos:column="40">Layout</name> <init pos:line="14" pos:column="47">=
            <expr><call><name><name pos:line="15" pos:column="13">TabLayout</name><op:operator pos:line="15" pos:column="22">.</op:operator><name pos:line="15" pos:column="23">Create</name></name><argument_list pos:line="15" pos:column="29">()</argument_list></call>
                <op:operator pos:line="16" pos:column="17">.</op:operator><call><name pos:line="16" pos:column="18">Cell</name><argument_list pos:line="16" pos:column="22">(
                    <argument><expr><lit:literal type="string" pos:line="17" pos:column="21">"SQL Statistics"</lit:literal></expr></argument>, 
                    <argument><expr><call><name><name pos:line="18" pos:column="21">TabLayout</name><op:operator pos:line="18" pos:column="30">.</op:operator><name pos:line="18" pos:column="31">Create</name></name><argument_list pos:line="18" pos:column="37">()</argument_list></call><op:operator pos:line="18" pos:column="39">.</op:operator><call><name pos:line="18" pos:column="40">Row</name><argument_list pos:line="18" pos:column="43">(<argument><expr><lambda><name pos:line="18" pos:column="44">r</name> <op:operator pos:line="18" pos:column="46">=&gt;</op:operator> 
                    <block pos:line="19" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="20" pos:column="25">r</name><op:operator pos:line="20" pos:column="26">.</op:operator><name pos:line="20" pos:column="27">Cell</name></name><argument_list pos:line="20" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="20" pos:column="32">"connectionCount"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="20" pos:column="50">.</op:operator><call><name pos:line="20" pos:column="51">WidthInPixels</name><argument_list pos:line="20" pos:column="64">(<argument><expr><lit:literal type="number" pos:line="20" pos:column="65">150</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="20" pos:column="69">.</op:operator><call><name pos:line="20" pos:column="70">WithTitle</name><argument_list pos:line="20" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="20" pos:column="80">"# Connections"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="21" pos:column="25">r</name><op:operator pos:line="21" pos:column="26">.</op:operator><name pos:line="21" pos:column="27">Cell</name></name><argument_list pos:line="21" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="21" pos:column="32">"queryCount"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="21" pos:column="45">.</op:operator><call><name pos:line="21" pos:column="46">WidthInPixels</name><argument_list pos:line="21" pos:column="59">(<argument><expr><lit:literal type="number" pos:line="21" pos:column="60">150</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="21" pos:column="64">.</op:operator><call><name pos:line="21" pos:column="65">WithTitle</name><argument_list pos:line="21" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="21" pos:column="75">"# Queries"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="22" pos:column="25">r</name><op:operator pos:line="22" pos:column="26">.</op:operator><name pos:line="22" pos:column="27">Cell</name></name><argument_list pos:line="22" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="22" pos:column="32">"transactionCount"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="22" pos:column="51">.</op:operator><call><name pos:line="22" pos:column="52">WidthInPixels</name><argument_list pos:line="22" pos:column="65">(<argument><expr><lit:literal type="number" pos:line="22" pos:column="66">150</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="22" pos:column="70">.</op:operator><call><name pos:line="22" pos:column="71">WithTitle</name><argument_list pos:line="22" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="22" pos:column="81">"# Transactions"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="23" pos:column="25">r</name><op:operator pos:line="23" pos:column="26">.</op:operator><name pos:line="23" pos:column="27">Cell</name></name><argument_list pos:line="23" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="23" pos:column="32">"queryExecutionTime"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="23" pos:column="53">.</op:operator><call><name pos:line="23" pos:column="54">WidthInPixels</name><argument_list pos:line="23" pos:column="67">(<argument><expr><lit:literal type="number" pos:line="23" pos:column="68">250</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="23" pos:column="72">.</op:operator><call><name pos:line="23" pos:column="73">Suffix</name><argument_list pos:line="23" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="23" pos:column="80">" ms"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="23" pos:column="86">.</op:operator><call><name pos:line="23" pos:column="87">Class</name><argument_list pos:line="23" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="23" pos:column="93">"mono"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="23" pos:column="100">.</op:operator><call><name pos:line="23" pos:column="101">WithTitle</name><argument_list pos:line="23" pos:column="110">(<argument><expr><lit:literal type="string" pos:line="23" pos:column="111">"Total query execution time"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="24" pos:column="25">r</name><op:operator pos:line="24" pos:column="26">.</op:operator><name pos:line="24" pos:column="27">Cell</name></name><argument_list pos:line="24" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="24" pos:column="32">"connectionOpenTime"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="53">.</op:operator><call><name pos:line="24" pos:column="54">Suffix</name><argument_list pos:line="24" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="24" pos:column="61">" ms"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="67">.</op:operator><call><name pos:line="24" pos:column="68">Class</name><argument_list pos:line="24" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="24" pos:column="74">"mono"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="81">.</op:operator><call><name pos:line="24" pos:column="82">WithTitle</name><argument_list pos:line="24" pos:column="91">(<argument><expr><lit:literal type="string" pos:line="24" pos:column="92">"Total connection open time"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
                <op:operator pos:line="26" pos:column="17">.</op:operator><call><name pos:line="26" pos:column="18">Cell</name><argument_list pos:line="26" pos:column="22">(
                    <argument><expr><lit:literal type="string" pos:line="27" pos:column="21">"Queries"</lit:literal></expr></argument>, 
                    <argument><expr><call><name><name pos:line="28" pos:column="21">TabLayout</name><op:operator pos:line="28" pos:column="30">.</op:operator><name pos:line="28" pos:column="31">Create</name></name><argument_list pos:line="28" pos:column="37">()</argument_list></call><op:operator pos:line="28" pos:column="39">.</op:operator><call><name pos:line="28" pos:column="40">Row</name><argument_list pos:line="28" pos:column="43">(<argument><expr><lambda><name pos:line="28" pos:column="44">r</name> <op:operator pos:line="28" pos:column="46">=&gt;</op:operator> 
                    <block pos:line="29" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="30" pos:column="25">r</name><op:operator pos:line="30" pos:column="26">.</op:operator><name pos:line="30" pos:column="27">Cell</name></name><argument_list pos:line="30" pos:column="31">(<argument><expr><lit:literal type="number" pos:line="30" pos:column="32">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="30" pos:column="34">.</op:operator><call><name pos:line="30" pos:column="35">DisablePreview</name><argument_list pos:line="30" pos:column="49">()</argument_list></call><op:operator pos:line="30" pos:column="51">.</op:operator><call><name pos:line="30" pos:column="52">SetLayout</name><argument_list pos:line="30" pos:column="61">(<argument><expr><call><name><name pos:line="30" pos:column="62">TabLayout</name><op:operator pos:line="30" pos:column="71">.</op:operator><name pos:line="30" pos:column="72">Create</name></name><argument_list pos:line="30" pos:column="78">()</argument_list></call><op:operator pos:line="30" pos:column="80">.</op:operator><call><name pos:line="30" pos:column="81">Row</name><argument_list pos:line="30" pos:column="84">(<argument><expr><lambda><name pos:line="30" pos:column="85">x</name> <op:operator pos:line="30" pos:column="87">=&gt;</op:operator>
                                <call><name><name pos:line="31" pos:column="33">x</name><op:operator pos:line="31" pos:column="34">.</op:operator><name pos:line="31" pos:column="35">Cell</name></name><argument_list pos:line="31" pos:column="39">(<argument><expr><lit:literal type="number" pos:line="31" pos:column="40">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="31" pos:column="42">.</op:operator><call><name pos:line="31" pos:column="43">SpanColumns</name><argument_list pos:line="31" pos:column="54">(<argument><expr><lit:literal type="number" pos:line="31" pos:column="55">7</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="31" pos:column="57">.</op:operator><call><name pos:line="31" pos:column="58">DisablePreview</name><argument_list pos:line="31" pos:column="72">()</argument_list></call><op:operator pos:line="31" pos:column="74">.</op:operator><call><name pos:line="31" pos:column="75">AsMinimalDisplay</name><argument_list pos:line="31" pos:column="91">()</argument_list></call><op:operator pos:line="31" pos:column="93">.</op:operator><call><name pos:line="31" pos:column="94">SetLayout</name><argument_list pos:line="31" pos:column="103">(<argument><expr><call><name><name pos:line="31" pos:column="104">TabLayout</name><op:operator pos:line="31" pos:column="113">.</op:operator><name pos:line="31" pos:column="114">Create</name></name><argument_list pos:line="31" pos:column="120">()</argument_list></call><op:operator pos:line="31" pos:column="122">.</op:operator><call><name pos:line="31" pos:column="123">Row</name><argument_list pos:line="31" pos:column="126">(<argument><expr><lambda><name pos:line="31" pos:column="127">y</name> <op:operator pos:line="31" pos:column="129">=&gt;</op:operator>
                                <block pos:line="32" pos:column="33">{
                                    <expr_stmt><expr><call><name><name pos:line="33" pos:column="37">y</name><op:operator pos:line="33" pos:column="38">.</op:operator><name pos:line="33" pos:column="39">Cell</name></name><argument_list pos:line="33" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="33" pos:column="44">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="33" pos:column="46">.</op:operator><call><name pos:line="33" pos:column="47">WidthInPixels</name><argument_list pos:line="33" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="33" pos:column="61">165</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="34" pos:column="37">y</name><op:operator pos:line="34" pos:column="38">.</op:operator><name pos:line="34" pos:column="39">Cell</name></name><argument_list pos:line="34" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="34" pos:column="44">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                }</block></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="35" pos:column="37">.</op:operator><call><name pos:line="35" pos:column="38">Row</name><argument_list pos:line="35" pos:column="41">(<argument><expr><lambda><name pos:line="35" pos:column="42">x</name> <op:operator pos:line="35" pos:column="44">=&gt;</op:operator>
                                <block pos:line="36" pos:column="33">{
                                    <expr_stmt><expr><call><name><name pos:line="37" pos:column="37">x</name><op:operator pos:line="37" pos:column="38">.</op:operator><name pos:line="37" pos:column="39">Cell</name></name><argument_list pos:line="37" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="37" pos:column="44">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="37" pos:column="46">.</op:operator><call><name pos:line="37" pos:column="47">WidthInPixels</name><argument_list pos:line="37" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="37" pos:column="61">55</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="38" pos:column="37">x</name><op:operator pos:line="38" pos:column="38">.</op:operator><name pos:line="38" pos:column="39">Cell</name></name><argument_list pos:line="38" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="38" pos:column="44">2</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="38" pos:column="46">.</op:operator><call><name pos:line="38" pos:column="47">AsCode</name><argument_list pos:line="38" pos:column="53">(<argument><expr><name><name pos:line="38" pos:column="54">CodeType</name><op:operator pos:line="38" pos:column="62">.</op:operator><name pos:line="38" pos:column="63">Sql</name></name></expr></argument>)</argument_list></call><op:operator pos:line="38" pos:column="67">.</op:operator><call><name pos:line="38" pos:column="68">DisablePreview</name><argument_list pos:line="38" pos:column="82">()</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="39" pos:column="37">x</name><op:operator pos:line="39" pos:column="38">.</op:operator><name pos:line="39" pos:column="39">Cell</name></name><argument_list pos:line="39" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="39" pos:column="44">3</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="39" pos:column="46">.</op:operator><call><name pos:line="39" pos:column="47">WidthInPercent</name><argument_list pos:line="39" pos:column="61">(<argument><expr><lit:literal type="number" pos:line="39" pos:column="62">25</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="39" pos:column="65">.</op:operator><call><name pos:line="39" pos:column="66">DisablePreview</name><argument_list pos:line="39" pos:column="80">()</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="40" pos:column="37">x</name><op:operator pos:line="40" pos:column="38">.</op:operator><name pos:line="40" pos:column="39">Cell</name></name><argument_list pos:line="40" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="40" pos:column="44">4</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="40" pos:column="46">.</op:operator><call><name pos:line="40" pos:column="47">WidthInPixels</name><argument_list pos:line="40" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="40" pos:column="61">60</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="41" pos:column="37">x</name><op:operator pos:line="41" pos:column="38">.</op:operator><name pos:line="41" pos:column="39">Cell</name></name><argument_list pos:line="41" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="41" pos:column="44">5</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="41" pos:column="46">.</op:operator><call><name pos:line="41" pos:column="47">WidthInPixels</name><argument_list pos:line="41" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="41" pos:column="61">85</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="41" pos:column="64">.</op:operator><call><name pos:line="41" pos:column="65">Suffix</name><argument_list pos:line="41" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="72">" ms"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="41" pos:column="78">.</op:operator><call><name pos:line="41" pos:column="79">Class</name><argument_list pos:line="41" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="85">"mono"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="42" pos:column="37">x</name><op:operator pos:line="42" pos:column="38">.</op:operator><name pos:line="42" pos:column="39">Cell</name></name><argument_list pos:line="42" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="42" pos:column="44">6</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="42" pos:column="46">.</op:operator><call><name pos:line="42" pos:column="47">WidthInPixels</name><argument_list pos:line="42" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="42" pos:column="61">95</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="42" pos:column="64">.</op:operator><call><name pos:line="42" pos:column="65">Prefix</name><argument_list pos:line="42" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="42" pos:column="72">"T+ "</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="42" pos:column="78">.</op:operator><call><name pos:line="42" pos:column="79">Suffix</name><argument_list pos:line="42" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="42" pos:column="86">" ms"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="42" pos:column="92">.</op:operator><call><name pos:line="42" pos:column="93">Class</name><argument_list pos:line="42" pos:column="98">(<argument><expr><lit:literal type="string" pos:line="42" pos:column="99">"mono"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="43" pos:column="37">x</name><op:operator pos:line="43" pos:column="38">.</op:operator><name pos:line="43" pos:column="39">Cell</name></name><argument_list pos:line="43" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="43" pos:column="44">7</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="43" pos:column="46">.</op:operator><call><name pos:line="43" pos:column="47">WidthInPixels</name><argument_list pos:line="43" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="43" pos:column="61">45</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                }</block></lambda></expr></argument>)</argument_list></call><op:operator pos:line="44" pos:column="35">.</op:operator><call><name pos:line="44" pos:column="36">Row</name><argument_list pos:line="44" pos:column="39">(<argument><expr><lambda><name pos:line="44" pos:column="40">x</name> <op:operator pos:line="44" pos:column="42">=&gt;</op:operator>
                                <call><name><name pos:line="45" pos:column="33">x</name><op:operator pos:line="45" pos:column="34">.</op:operator><name pos:line="45" pos:column="35">Cell</name></name><argument_list pos:line="45" pos:column="39">(<argument><expr><lit:literal type="number" pos:line="45" pos:column="40">9</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="45" pos:column="42">.</op:operator><call><name pos:line="45" pos:column="43">SpanColumns</name><argument_list pos:line="45" pos:column="54">(<argument><expr><lit:literal type="number" pos:line="45" pos:column="55">7</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="45" pos:column="57">.</op:operator><call><name pos:line="45" pos:column="58">DisablePreview</name><argument_list pos:line="45" pos:column="72">()</argument_list></call><op:operator pos:line="45" pos:column="74">.</op:operator><call><name pos:line="45" pos:column="75">AsMinimalDisplay</name><argument_list pos:line="45" pos:column="91">()</argument_list></call><op:operator pos:line="45" pos:column="93">.</op:operator><call><name pos:line="45" pos:column="94">SetLayout</name><argument_list pos:line="45" pos:column="103">(<argument><expr><call><name><name pos:line="45" pos:column="104">TabLayout</name><op:operator pos:line="45" pos:column="113">.</op:operator><name pos:line="45" pos:column="114">Create</name></name><argument_list pos:line="45" pos:column="120">()</argument_list></call><op:operator pos:line="45" pos:column="122">.</op:operator><call><name pos:line="45" pos:column="123">Row</name><argument_list pos:line="45" pos:column="126">(<argument><expr><lambda><name pos:line="45" pos:column="127">y</name> <op:operator pos:line="45" pos:column="129">=&gt;</op:operator>
                                <block pos:line="46" pos:column="33">{
                                    <expr_stmt><expr><call><name><name pos:line="47" pos:column="37">y</name><op:operator pos:line="47" pos:column="38">.</op:operator><name pos:line="47" pos:column="39">Cell</name></name><argument_list pos:line="47" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="47" pos:column="44">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="47" pos:column="46">.</op:operator><call><name pos:line="47" pos:column="47">WidthInPercent</name><argument_list pos:line="47" pos:column="61">(<argument><expr><lit:literal type="number" pos:line="47" pos:column="62">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="48" pos:column="37">y</name><op:operator pos:line="48" pos:column="38">.</op:operator><name pos:line="48" pos:column="39">Cell</name></name><argument_list pos:line="48" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="48" pos:column="44">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="48" pos:column="46">.</op:operator><call><name pos:line="48" pos:column="47">Class</name><argument_list pos:line="48" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="48" pos:column="53">"mono"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="48" pos:column="60">.</op:operator><call><name pos:line="48" pos:column="61">DisablePreview</name><argument_list pos:line="48" pos:column="75">()</argument_list></call></expr>;</expr_stmt>
                                }</block></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="49" pos:column="37">.</op:operator><call><name pos:line="49" pos:column="38">Row</name><argument_list pos:line="49" pos:column="41">(<argument><expr><lambda><name pos:line="49" pos:column="42">x</name> <op:operator pos:line="49" pos:column="44">=&gt;</op:operator>
                                <call><name><name pos:line="50" pos:column="33">x</name><op:operator pos:line="50" pos:column="34">.</op:operator><name pos:line="50" pos:column="35">Cell</name></name><argument_list pos:line="50" pos:column="39">(<argument><expr><lit:literal type="number" pos:line="50" pos:column="40">8</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="50" pos:column="42">.</op:operator><call><name pos:line="50" pos:column="43">SpanColumns</name><argument_list pos:line="50" pos:column="54">(<argument><expr><lit:literal type="number" pos:line="50" pos:column="55">7</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="50" pos:column="57">.</op:operator><call><name pos:line="50" pos:column="58">DisablePreview</name><argument_list pos:line="50" pos:column="72">()</argument_list></call><op:operator pos:line="50" pos:column="74">.</op:operator><call><name pos:line="50" pos:column="75">AsMinimalDisplay</name><argument_list pos:line="50" pos:column="91">()</argument_list></call><op:operator pos:line="50" pos:column="93">.</op:operator><call><name pos:line="50" pos:column="94">SetLayout</name><argument_list pos:line="50" pos:column="103">(<argument><expr><call><name><name pos:line="50" pos:column="104">TabLayout</name><op:operator pos:line="50" pos:column="113">.</op:operator><name pos:line="50" pos:column="114">Create</name></name><argument_list pos:line="50" pos:column="120">()</argument_list></call><op:operator pos:line="50" pos:column="122">.</op:operator><call><name pos:line="50" pos:column="123">Row</name><argument_list pos:line="50" pos:column="126">(<argument><expr><lambda><name pos:line="50" pos:column="127">y</name> <op:operator pos:line="50" pos:column="129">=&gt;</op:operator>
                                <block pos:line="51" pos:column="33">{
                                    <expr_stmt><expr><call><name><name pos:line="52" pos:column="37">y</name><op:operator pos:line="52" pos:column="38">.</op:operator><name pos:line="52" pos:column="39">Cell</name></name><argument_list pos:line="52" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="52" pos:column="44">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="52" pos:column="46">.</op:operator><call><name pos:line="52" pos:column="47">WidthInPixels</name><argument_list pos:line="52" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="52" pos:column="61">165</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="53" pos:column="37">y</name><op:operator pos:line="53" pos:column="38">.</op:operator><name pos:line="53" pos:column="39">Cell</name></name><argument_list pos:line="53" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="53" pos:column="44">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                }</block></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="55" pos:column="25">r</name><op:operator pos:line="55" pos:column="26">.</op:operator><name pos:line="55" pos:column="27">Cell</name></name><argument_list pos:line="55" pos:column="31">(<argument><expr><lit:literal type="number" pos:line="55" pos:column="32">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="55" pos:column="34">.</op:operator><call><name pos:line="55" pos:column="35">WidthInPixels</name><argument_list pos:line="55" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="55" pos:column="49">75</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="55" pos:column="52">.</op:operator><call><name pos:line="55" pos:column="53">Suffix</name><argument_list pos:line="55" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="60">" ms"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="55" pos:column="66">.</op:operator><call><name pos:line="55" pos:column="67">Class</name><argument_list pos:line="55" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="73">"mono"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
                <op:operator pos:line="57" pos:column="17">.</op:operator><call><name pos:line="57" pos:column="18">Build</name><argument_list pos:line="57" pos:column="23">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="59" pos:column="9">public</specifier> <specifier pos:line="59" pos:column="16">override</specifier> <name pos:line="59" pos:column="25">string</name></type> <name pos:line="59" pos:column="32">Name</name>
        <block pos:line="60" pos:column="9">{
            <function><name pos:line="61" pos:column="13">get</name> <block pos:line="61" pos:column="17">{ <return pos:line="61" pos:column="19">return <expr><lit:literal type="string" pos:line="61" pos:column="26">"SQL"</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="64" pos:column="9">public</specifier> <name pos:line="64" pos:column="16">string</name></type> <name pos:line="64" pos:column="23">Key</name>
        <block pos:line="65" pos:column="9">{
            <function><name pos:line="66" pos:column="13">get</name> <block pos:line="66" pos:column="17">{ <return pos:line="66" pos:column="19">return <expr><lit:literal type="string" pos:line="66" pos:column="26">"glimpse_sql"</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="69" pos:column="9">public</specifier> <name pos:line="69" pos:column="16">string</name></type> <name pos:line="69" pos:column="23">DocumentationUri</name>
        <block pos:line="70" pos:column="9">{
            <function><name pos:line="71" pos:column="13">get</name> <block pos:line="71" pos:column="17">{ <return pos:line="71" pos:column="19">return <expr><lit:literal type="string" pos:line="71" pos:column="26">"http://getglimpse.com/Help/SQL-Tab"</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="74" pos:column="9">public</specifier> <name pos:line="74" pos:column="16">bool</name></type> <name pos:line="74" pos:column="21">KeysHeadings</name>
        <block pos:line="75" pos:column="9">{
            <function><name pos:line="76" pos:column="13">get</name> <block pos:line="76" pos:column="17">{ <return pos:line="76" pos:column="19">return <expr><lit:literal type="boolean" pos:line="76" pos:column="26">true</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="79" pos:column="9">public</specifier> <name pos:line="79" pos:column="16">void</name></type> <name pos:line="79" pos:column="21">Setup</name><parameter_list pos:line="79" pos:column="26">(<param><decl><type><name pos:line="79" pos:column="27">ITabSetupContext</name></type> <name pos:line="79" pos:column="44">context</name></decl></param>)</parameter_list>
        <block pos:line="80" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="81" pos:column="13">context</name><op:operator pos:line="81" pos:column="20">.</op:operator><name><name pos:line="81" pos:column="21">PersistMessages</name><argument_list pos:line="81" pos:column="36">&lt;<argument><name pos:line="81" pos:column="37">AdoMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="81" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="84" pos:column="9">public</specifier> <name pos:line="84" pos:column="16">object</name></type> <name pos:line="84" pos:column="23">GetLayout</name><parameter_list pos:line="84" pos:column="32">()</parameter_list>
        <block pos:line="85" pos:column="9">{
            <return pos:line="86" pos:column="13">return <expr><name pos:line="86" pos:column="20">Layout</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="89" pos:column="9">public</specifier> <specifier pos:line="89" pos:column="16">override</specifier> <name pos:line="89" pos:column="25">object</name></type> <name pos:line="89" pos:column="32">GetData</name><parameter_list pos:line="89" pos:column="39">(<param><decl><type><name pos:line="89" pos:column="40">ITabContext</name></type> <name pos:line="89" pos:column="52">context</name></decl></param>)</parameter_list>
        <block pos:line="90" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="91" pos:column="13">var</name></type> <name pos:line="91" pos:column="17">sanitizer</name> <init pos:line="91" pos:column="27">= <expr><op:operator pos:line="91" pos:column="29">new</op:operator> <call><name pos:line="91" pos:column="33">CommandSanitizer</name><argument_list pos:line="91" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="92" pos:column="13">var</name></type> <name pos:line="92" pos:column="17">messages</name> <init pos:line="92" pos:column="26">= <expr><call><name><name pos:line="92" pos:column="28">context</name><op:operator pos:line="92" pos:column="35">.</op:operator><name><name pos:line="92" pos:column="36">GetMessages</name><argument_list pos:line="92" pos:column="47">&lt;<argument><name pos:line="92" pos:column="48">AdoMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="92" pos:column="59">()</argument_list></call><op:operator pos:line="92" pos:column="61">.</op:operator><call><name pos:line="92" pos:column="62">ToList</name><argument_list pos:line="92" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="93" pos:column="13">var</name></type> <name pos:line="93" pos:column="17">aggregator</name> <init pos:line="93" pos:column="28">= <expr><op:operator pos:line="93" pos:column="30">new</op:operator> <call><name pos:line="93" pos:column="34">MessageAggregator</name><argument_list pos:line="93" pos:column="51">(<argument><expr><name pos:line="93" pos:column="52">messages</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="94" pos:column="13">var</name></type> <name pos:line="94" pos:column="17">queryMetadata</name> <init pos:line="94" pos:column="31">= <expr><call><name><name pos:line="94" pos:column="33">aggregator</name><op:operator pos:line="94" pos:column="43">.</op:operator><name pos:line="94" pos:column="44">Aggregate</name></name><argument_list pos:line="94" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><name pos:line="96" pos:column="17">queryMetadata</name> <op:operator pos:line="96" pos:column="31">==</op:operator> <name pos:line="96" pos:column="34">null</name></expr>)</condition><then pos:line="96" pos:column="39">
            <block pos:line="97" pos:column="13">{
                <return pos:line="98" pos:column="17">return <expr><name pos:line="98" pos:column="24">null</name></expr>;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="101" pos:column="13">var</name></type> <name pos:line="101" pos:column="17">connections</name> <init pos:line="101" pos:column="29">= <expr><op:operator pos:line="101" pos:column="31">new</op:operator> <name><name pos:line="101" pos:column="35">List</name><argument_list pos:line="101" pos:column="39">&lt;<argument><name><name pos:line="101" pos:column="40">object</name><index pos:line="101" pos:column="46">[]</index></name></argument>&gt;</argument_list></name> <block pos:line="101" pos:column="50">{ <expr><op:operator pos:line="101" pos:column="52">new</op:operator> <name><name pos:line="101" pos:column="56">object</name><index pos:line="101" pos:column="62">[]</index></name> <block pos:line="101" pos:column="65">{ <expr><lit:literal type="string" pos:line="101" pos:column="67">"Commands per Connection"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="101" pos:column="94">"Duration"</lit:literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>

            <foreach pos:line="103" pos:column="13">foreach (<init><decl><type><name pos:line="103" pos:column="22">var</name></type> <name pos:line="103" pos:column="26">connection</name> <range pos:line="103" pos:column="37">in <expr><name><name pos:line="103" pos:column="40">queryMetadata</name><op:operator pos:line="103" pos:column="53">.</op:operator><name pos:line="103" pos:column="54">Connections</name><op:operator pos:line="103" pos:column="65">.</op:operator><name pos:line="103" pos:column="66">Values</name></name></expr></range></decl></init>)
            <block pos:line="104" pos:column="13">{
                <if pos:line="105" pos:column="17">if <condition pos:line="105" pos:column="20">(<expr><name><name pos:line="105" pos:column="21">connection</name><op:operator pos:line="105" pos:column="31">.</op:operator><name pos:line="105" pos:column="32">Commands</name><op:operator pos:line="105" pos:column="40">.</op:operator><name pos:line="105" pos:column="41">Count</name></name> <op:operator pos:line="105" pos:column="47">==</op:operator> <lit:literal type="number" pos:line="105" pos:column="50">0</lit:literal> <op:operator pos:line="105" pos:column="52">&amp;&amp;</op:operator> <name><name pos:line="105" pos:column="55">connection</name><op:operator pos:line="105" pos:column="65">.</op:operator><name pos:line="105" pos:column="66">Transactions</name><op:operator pos:line="105" pos:column="78">.</op:operator><name pos:line="105" pos:column="79">Count</name></name> <op:operator pos:line="105" pos:column="85">==</op:operator> <lit:literal type="number" pos:line="105" pos:column="88">0</lit:literal></expr>)</condition><then pos:line="105" pos:column="90">
                <block pos:line="106" pos:column="17">{
                    <continue pos:line="107" pos:column="21">continue;</continue>
                }</block></then></if>

                <decl_stmt><decl><type><name pos:line="110" pos:column="17">var</name></type> <name pos:line="110" pos:column="21">commands</name> <init pos:line="110" pos:column="30">= <expr><op:operator pos:line="110" pos:column="32">new</op:operator> <name><name pos:line="110" pos:column="36">List</name><argument_list pos:line="110" pos:column="40">&lt;<argument><name><name pos:line="110" pos:column="41">object</name><index pos:line="110" pos:column="47">[]</index></name></argument>&gt;</argument_list></name> <block pos:line="110" pos:column="51">{ <expr><op:operator pos:line="110" pos:column="53">new</op:operator> <name><name pos:line="110" pos:column="57">object</name><index pos:line="110" pos:column="63">[]</index></name> <block pos:line="110" pos:column="66">{ <expr><lit:literal type="string" pos:line="110" pos:column="68">"Transaction Start"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="110" pos:column="89">"Ordinal"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="110" pos:column="100">"Command"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="110" pos:column="111">"Parameters"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="110" pos:column="125">"Records"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="110" pos:column="136">"Duration"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="110" pos:column="148">"Offset"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="110" pos:column="158">"Async"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="110" pos:column="167">"Transaction End"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="110" pos:column="186">"Errors"</lit:literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="111" pos:column="17">var</name></type> <name pos:line="111" pos:column="21">commandCount</name> <init pos:line="111" pos:column="34">= <expr><lit:literal type="number" pos:line="111" pos:column="36">1</lit:literal></expr></init></decl>;</decl_stmt>
                <foreach pos:line="112" pos:column="17">foreach (<init><decl><type><name pos:line="112" pos:column="26">var</name></type> <name pos:line="112" pos:column="30">command</name> <range pos:line="112" pos:column="38">in <expr><name><name pos:line="112" pos:column="41">connection</name><op:operator pos:line="112" pos:column="51">.</op:operator><name pos:line="112" pos:column="52">Commands</name><op:operator pos:line="112" pos:column="60">.</op:operator><name pos:line="112" pos:column="61">Values</name></name></expr></range></decl></init>)
                <block pos:line="113" pos:column="17">{
                    <comment type="line" pos:line="114" pos:column="21">// Transaction Start</comment>
                    <decl_stmt><decl><type><name><name pos:line="115" pos:column="21">List</name><argument_list pos:line="115" pos:column="25">&lt;<argument><name pos:line="115" pos:column="26">object</name><index pos:line="115" pos:column="32">[]</index></argument>&gt;</argument_list></name></type> <name pos:line="115" pos:column="36">headTransaction</name> <init pos:line="115" pos:column="52">= <expr><name pos:line="115" pos:column="54">null</name></expr></init></decl>;</decl_stmt>
                    <if pos:line="116" pos:column="21">if <condition pos:line="116" pos:column="24">(<expr><name><name pos:line="116" pos:column="25">command</name><op:operator pos:line="116" pos:column="32">.</op:operator><name pos:line="116" pos:column="33">HeadTransaction</name></name> <op:operator pos:line="116" pos:column="49">!=</op:operator> <name pos:line="116" pos:column="52">null</name></expr>)</condition><then pos:line="116" pos:column="57">
                    <block pos:line="117" pos:column="21">{
                        <expr_stmt><expr><name pos:line="118" pos:column="25">headTransaction</name> <op:operator pos:line="118" pos:column="41">=</op:operator> <op:operator pos:line="118" pos:column="43">new</op:operator> <name><name pos:line="118" pos:column="47">List</name><argument_list pos:line="118" pos:column="51">&lt;<argument><name><name pos:line="118" pos:column="52">object</name><index pos:line="118" pos:column="58">[]</index></name></argument>&gt;</argument_list></name> <block pos:line="118" pos:column="62">{ <expr><op:operator pos:line="118" pos:column="64">new</op:operator> <name><name pos:line="118" pos:column="68">object</name><index pos:line="118" pos:column="74">[]</index></name> <block pos:line="118" pos:column="77">{ <expr><lit:literal type="string" pos:line="118" pos:column="79">"\t▼ Transaction - Started"</lit:literal></expr><op:operator pos:line="118" pos:column="108">,</op:operator> <expr><lit:literal type="string" pos:line="118" pos:column="110">"Isolation Level - "</lit:literal> <op:operator pos:line="118" pos:column="131">+</op:operator> <name><name pos:line="118" pos:column="133">command</name><op:operator pos:line="118" pos:column="140">.</op:operator><name pos:line="118" pos:column="141">HeadTransaction</name><op:operator pos:line="118" pos:column="156">.</op:operator><name pos:line="118" pos:column="157">IsolationLevel</name></name></expr> }</block></expr> }</block></expr>;</expr_stmt>
                        <if pos:line="119" pos:column="25">if <condition pos:line="119" pos:column="28">(<expr><op:operator pos:line="119" pos:column="29">!</op:operator><name><name pos:line="119" pos:column="30">command</name><op:operator pos:line="119" pos:column="37">.</op:operator><name pos:line="119" pos:column="38">HeadTransaction</name><op:operator pos:line="119" pos:column="53">.</op:operator><name pos:line="119" pos:column="54">Committed</name><op:operator pos:line="119" pos:column="63">.</op:operator><name pos:line="119" pos:column="64">HasValue</name></name></expr>)</condition><then pos:line="119" pos:column="73">
                        <block pos:line="120" pos:column="25">{
                            <expr_stmt><expr><call><name><name pos:line="121" pos:column="29">headTransaction</name><op:operator pos:line="121" pos:column="44">.</op:operator><name pos:line="121" pos:column="45">Add</name></name><argument_list pos:line="121" pos:column="48">(<argument><expr><op:operator pos:line="121" pos:column="49">new</op:operator> <name><name pos:line="121" pos:column="53">object</name><index pos:line="121" pos:column="59">[]</index></name> <block pos:line="121" pos:column="62">{ <expr><name><name pos:line="121" pos:column="64">string</name><op:operator pos:line="121" pos:column="70">.</op:operator><name pos:line="121" pos:column="71">Empty</name></name></expr><op:operator pos:line="121" pos:column="76">,</op:operator> <expr><lit:literal type="string" pos:line="121" pos:column="78">"Transaction was never completed"</lit:literal></expr><op:operator pos:line="121" pos:column="111">,</op:operator> <expr><lit:literal type="string" pos:line="121" pos:column="113">"error"</lit:literal></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></then></if>
                    }</block></then></if>

                    <comment type="line" pos:line="125" pos:column="21">// Transaction Finish</comment>
                    <decl_stmt><decl><type><name><name pos:line="126" pos:column="21">List</name><argument_list pos:line="126" pos:column="25">&lt;<argument><name pos:line="126" pos:column="26">object</name><index pos:line="126" pos:column="32">[]</index></argument>&gt;</argument_list></name></type> <name pos:line="126" pos:column="36">tailTransaction</name> <init pos:line="126" pos:column="52">= <expr><name pos:line="126" pos:column="54">null</name></expr></init></decl>;</decl_stmt>
                    <if pos:line="127" pos:column="21">if <condition pos:line="127" pos:column="24">(<expr><name><name pos:line="127" pos:column="25">command</name><op:operator pos:line="127" pos:column="32">.</op:operator><name pos:line="127" pos:column="33">TailTransaction</name></name> <op:operator pos:line="127" pos:column="49">!=</op:operator> <name pos:line="127" pos:column="52">null</name></expr>)</condition><then pos:line="127" pos:column="57">
                    <block pos:line="128" pos:column="21">{
                        <expr_stmt><expr><name pos:line="129" pos:column="25">tailTransaction</name> <op:operator pos:line="129" pos:column="41">=</op:operator> <op:operator pos:line="129" pos:column="43">new</op:operator> <name><name pos:line="129" pos:column="47">List</name><argument_list pos:line="129" pos:column="51">&lt;<argument><name><name pos:line="129" pos:column="52">object</name><index pos:line="129" pos:column="58">[]</index></name></argument>&gt;</argument_list></name> <block pos:line="129" pos:column="62">{ <expr><op:operator pos:line="129" pos:column="64">new</op:operator> <name><name pos:line="129" pos:column="68">object</name><index pos:line="129" pos:column="74">[]</index></name> <block pos:line="129" pos:column="77">{ <expr><lit:literal type="string" pos:line="129" pos:column="79">"\t▲ Transaction - Finished"</lit:literal></expr><op:operator pos:line="129" pos:column="109">,</op:operator> <expr><lit:literal type="string" pos:line="129" pos:column="111">"Status - "</lit:literal> <op:operator pos:line="129" pos:column="123">+</op:operator> <op:operator pos:line="129" pos:column="125">(</op:operator><call><name><name pos:line="129" pos:column="126">command</name><op:operator pos:line="129" pos:column="133">.</op:operator><name pos:line="129" pos:column="134">TailTransaction</name><op:operator pos:line="129" pos:column="149">.</op:operator><name pos:line="129" pos:column="150">Committed</name><op:operator pos:line="129" pos:column="159">.</op:operator><name pos:line="129" pos:column="160">GetValueOrDefault</name></name><argument_list pos:line="129" pos:column="177">()</argument_list></call> <op:operator pos:line="129" pos:column="180">?</op:operator> <lit:literal type="string" pos:line="129" pos:column="182">"Committed"</lit:literal> <op:operator pos:line="129" pos:column="194">:</op:operator> <lit:literal type="string" pos:line="129" pos:column="196">"Rollbacked"</lit:literal><op:operator pos:line="129" pos:column="208">)</op:operator></expr> }</block></expr> }</block></expr>;</expr_stmt>
                    }</block></then></if>

                    <comment type="line" pos:line="132" pos:column="21">// Parameters</comment>
                    <decl_stmt><decl><type><name><name pos:line="133" pos:column="21">List</name><argument_list pos:line="133" pos:column="25">&lt;<argument><name pos:line="133" pos:column="26">object</name><index pos:line="133" pos:column="32">[]</index></argument>&gt;</argument_list></name></type> <name pos:line="133" pos:column="36">parameters</name> <init pos:line="133" pos:column="47">= <expr><name pos:line="133" pos:column="49">null</name></expr></init></decl>;</decl_stmt>
                    <if pos:line="134" pos:column="21">if <condition pos:line="134" pos:column="24">(<expr><name><name pos:line="134" pos:column="25">command</name><op:operator pos:line="134" pos:column="32">.</op:operator><name pos:line="134" pos:column="33">Parameters</name><op:operator pos:line="134" pos:column="43">.</op:operator><name pos:line="134" pos:column="44">Count</name></name> <op:operator pos:line="134" pos:column="50">&gt;</op:operator> <lit:literal type="number" pos:line="134" pos:column="52">0</lit:literal></expr>)</condition><then pos:line="134" pos:column="54">
                    <block pos:line="135" pos:column="21">{
                        <expr_stmt><expr><name pos:line="136" pos:column="25">parameters</name> <op:operator pos:line="136" pos:column="36">=</op:operator> <op:operator pos:line="136" pos:column="38">new</op:operator> <name><name pos:line="136" pos:column="42">List</name><argument_list pos:line="136" pos:column="46">&lt;<argument><name><name pos:line="136" pos:column="47">object</name><index pos:line="136" pos:column="53">[]</index></name></argument>&gt;</argument_list></name> <block pos:line="136" pos:column="57">{ <expr><op:operator pos:line="136" pos:column="59">new</op:operator> <name><name pos:line="136" pos:column="63">object</name><index pos:line="136" pos:column="69">[]</index></name> <block pos:line="136" pos:column="72">{ <expr><lit:literal type="string" pos:line="136" pos:column="74">"Name"</lit:literal></expr><op:operator pos:line="136" pos:column="80">,</op:operator> <expr><lit:literal type="string" pos:line="136" pos:column="82">"Value"</lit:literal></expr><op:operator pos:line="136" pos:column="89">,</op:operator> <expr><lit:literal type="string" pos:line="136" pos:column="91">"Type"</lit:literal></expr><op:operator pos:line="136" pos:column="97">,</op:operator> <expr><lit:literal type="string" pos:line="136" pos:column="99">"Size"</lit:literal></expr> }</block></expr> }</block></expr>;</expr_stmt>
                        <foreach pos:line="137" pos:column="25">foreach (<init><decl><type><name pos:line="137" pos:column="34">var</name></type> <name pos:line="137" pos:column="38">parameter</name> <range pos:line="137" pos:column="48">in <expr><name><name pos:line="137" pos:column="51">command</name><op:operator pos:line="137" pos:column="58">.</op:operator><name pos:line="137" pos:column="59">Parameters</name></name></expr></range></decl></init>)
                        <block pos:line="138" pos:column="25">{
                            <expr_stmt><expr><call><name><name pos:line="139" pos:column="29">parameters</name><op:operator pos:line="139" pos:column="39">.</op:operator><name pos:line="139" pos:column="40">Add</name></name><argument_list pos:line="139" pos:column="43">(<argument><expr><op:operator pos:line="139" pos:column="44">new</op:operator><index pos:line="139" pos:column="47">[]</index> <block pos:line="139" pos:column="50">{ <expr><name><name pos:line="139" pos:column="52">parameter</name><op:operator pos:line="139" pos:column="61">.</op:operator><name pos:line="139" pos:column="62">Name</name></name></expr><op:operator pos:line="139" pos:column="66">,</op:operator> <expr><name><name pos:line="139" pos:column="68">parameter</name><op:operator pos:line="139" pos:column="77">.</op:operator><name pos:line="139" pos:column="78">Value</name></name></expr><op:operator pos:line="139" pos:column="83">,</op:operator> <expr><name><name pos:line="139" pos:column="85">parameter</name><op:operator pos:line="139" pos:column="94">.</op:operator><name pos:line="139" pos:column="95">Type</name></name></expr><op:operator pos:line="139" pos:column="99">,</op:operator> <expr><name><name pos:line="139" pos:column="101">parameter</name><op:operator pos:line="139" pos:column="110">.</op:operator><name pos:line="139" pos:column="111">Size</name></name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></foreach>
                    }</block></then></if>

                    <comment type="line" pos:line="143" pos:column="21">// Exception</comment>
                    <decl_stmt><decl><type><name><name pos:line="144" pos:column="21">List</name><argument_list pos:line="144" pos:column="25">&lt;<argument><name pos:line="144" pos:column="26">object</name><index pos:line="144" pos:column="32">[]</index></argument>&gt;</argument_list></name></type> <name pos:line="144" pos:column="36">errors</name> <init pos:line="144" pos:column="43">= <expr><name pos:line="144" pos:column="45">null</name></expr></init></decl>;</decl_stmt>
                    <if pos:line="145" pos:column="21">if <condition pos:line="145" pos:column="24">(<expr><name><name pos:line="145" pos:column="25">command</name><op:operator pos:line="145" pos:column="32">.</op:operator><name pos:line="145" pos:column="33">Exception</name></name> <op:operator pos:line="145" pos:column="43">!=</op:operator> <name pos:line="145" pos:column="46">null</name></expr>)</condition><then pos:line="145" pos:column="51">
                    <block pos:line="146" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="147" pos:column="25">var</name></type> <name pos:line="147" pos:column="29">exception</name> <init pos:line="147" pos:column="39">= <expr><call><name><name pos:line="147" pos:column="41">command</name><op:operator pos:line="147" pos:column="48">.</op:operator><name pos:line="147" pos:column="49">Exception</name><op:operator pos:line="147" pos:column="58">.</op:operator><name pos:line="147" pos:column="59">GetBaseException</name></name><argument_list pos:line="147" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="148" pos:column="25">var</name></type> <name pos:line="148" pos:column="29">exceptionName</name> <init pos:line="148" pos:column="43">= <expr><name><name pos:line="148" pos:column="45">command</name><op:operator pos:line="148" pos:column="52">.</op:operator><name pos:line="148" pos:column="53">Exception</name></name> <op:operator pos:line="148" pos:column="63">!=</op:operator> <name pos:line="148" pos:column="66">exception</name> <op:operator pos:line="148" pos:column="76">?</op:operator> <name><name pos:line="148" pos:column="78">command</name><op:operator pos:line="148" pos:column="85">.</op:operator><name pos:line="148" pos:column="86">Exception</name><op:operator pos:line="148" pos:column="95">.</op:operator><name pos:line="148" pos:column="96">Message</name></name> <op:operator pos:line="148" pos:column="104">+</op:operator> <lit:literal type="string" pos:line="148" pos:column="106">": "</lit:literal> <op:operator pos:line="148" pos:column="111">+</op:operator> <name><name pos:line="148" pos:column="113">exception</name><op:operator pos:line="148" pos:column="122">.</op:operator><name pos:line="148" pos:column="123">Message</name></name> <op:operator pos:line="148" pos:column="131">:</op:operator> <name><name pos:line="148" pos:column="133">exception</name><op:operator pos:line="148" pos:column="142">.</op:operator><name pos:line="148" pos:column="143">Message</name></name></expr></init></decl>;</decl_stmt>

                        <expr_stmt><expr><name pos:line="150" pos:column="25">errors</name> <op:operator pos:line="150" pos:column="32">=</op:operator> <op:operator pos:line="150" pos:column="34">new</op:operator> <name><name pos:line="150" pos:column="38">List</name><argument_list pos:line="150" pos:column="42">&lt;<argument><name><name pos:line="150" pos:column="43">object</name><index pos:line="150" pos:column="49">[]</index></name></argument>&gt;</argument_list></name> <block pos:line="150" pos:column="53">{ <expr><op:operator pos:line="150" pos:column="55">new</op:operator> <name><name pos:line="150" pos:column="59">object</name><index pos:line="150" pos:column="65">[]</index></name> <block pos:line="150" pos:column="68">{ <expr><lit:literal type="string" pos:line="150" pos:column="70">"Error"</lit:literal></expr><op:operator pos:line="150" pos:column="77">,</op:operator> <expr><lit:literal type="string" pos:line="150" pos:column="79">"Stack"</lit:literal></expr> }</block></expr><op:operator pos:line="150" pos:column="88">,</op:operator> <expr><op:operator pos:line="150" pos:column="90">new</op:operator> <name><name pos:line="150" pos:column="94">object</name><index pos:line="150" pos:column="100">[]</index></name> <block pos:line="150" pos:column="103">{ <expr><name pos:line="150" pos:column="105">exceptionName</name></expr><op:operator pos:line="150" pos:column="118">,</op:operator> <expr><name><name pos:line="150" pos:column="120">exception</name><op:operator pos:line="150" pos:column="129">.</op:operator><name pos:line="150" pos:column="130">StackTrace</name></name></expr> }</block></expr> }</block></expr>;</expr_stmt>
                    }</block></then></if>

                    <comment type="line" pos:line="153" pos:column="21">// Commands</comment>
                    <decl_stmt><decl><type><name pos:line="154" pos:column="21">var</name></type> <name pos:line="154" pos:column="25">records</name> <init pos:line="154" pos:column="33">= <expr><name><name pos:line="154" pos:column="35">command</name><op:operator pos:line="154" pos:column="42">.</op:operator><name pos:line="154" pos:column="43">RecordsAffected</name></name> <op:operator pos:line="154" pos:column="59">==</op:operator> <name pos:line="154" pos:column="62">null</name> <op:operator pos:line="154" pos:column="67">||</op:operator> <name><name pos:line="154" pos:column="70">command</name><op:operator pos:line="154" pos:column="77">.</op:operator><name pos:line="154" pos:column="78">RecordsAffected</name></name> <op:operator pos:line="154" pos:column="94">&lt;</op:operator> <lit:literal type="number" pos:line="154" pos:column="96">0</lit:literal> <op:operator pos:line="154" pos:column="98">?</op:operator> <name><name pos:line="154" pos:column="100">command</name><op:operator pos:line="154" pos:column="107">.</op:operator><name pos:line="154" pos:column="108">TotalRecords</name></name> <op:operator pos:line="154" pos:column="121">:</op:operator> <name><name pos:line="154" pos:column="123">command</name><op:operator pos:line="154" pos:column="130">.</op:operator><name pos:line="154" pos:column="131">RecordsAffected</name></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt><decl><type><name pos:line="156" pos:column="21">var</name></type> <name pos:line="156" pos:column="25">status</name> <init pos:line="156" pos:column="32">= <expr><name pos:line="156" pos:column="34">errors</name> <op:operator pos:line="156" pos:column="41">!=</op:operator> <name pos:line="156" pos:column="44">null</name> <op:operator pos:line="156" pos:column="49">?</op:operator> <lit:literal type="string" pos:line="156" pos:column="51">"error"</lit:literal> <op:operator pos:line="156" pos:column="59">:</op:operator> <op:operator pos:line="156" pos:column="61">(</op:operator><name><name pos:line="156" pos:column="62">command</name><op:operator pos:line="156" pos:column="69">.</op:operator><name pos:line="156" pos:column="70">IsDuplicate</name> <type:modifier pos:line="156" pos:column="82">?</type:modifier></name> <lit:literal type="string" pos:line="156" pos:column="84">"warn"</lit:literal> <op:operator pos:line="156" pos:column="91">:</op:operator> <name><name pos:line="156" pos:column="93">string</name><op:operator pos:line="156" pos:column="99">.</op:operator><name pos:line="156" pos:column="100">Empty</name></name><op:operator pos:line="156" pos:column="105">)</op:operator></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="157" pos:column="21">commands</name><op:operator pos:line="157" pos:column="29">.</op:operator><name pos:line="157" pos:column="30">Add</name></name><argument_list pos:line="157" pos:column="33">(<argument><expr><op:operator pos:line="157" pos:column="34">new</op:operator> <name><name pos:line="157" pos:column="38">object</name><index pos:line="157" pos:column="44">[]</index></name> <block pos:line="157" pos:column="47">{ <expr><name pos:line="157" pos:column="49">headTransaction</name></expr><op:operator pos:line="157" pos:column="64">,</op:operator> <expr><call><name><name pos:line="157" pos:column="66">string</name><op:operator pos:line="157" pos:column="72">.</op:operator><name pos:line="157" pos:column="73">Format</name></name><argument_list pos:line="157" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="157" pos:column="80">"{0}{1}"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="157" pos:column="90">command</name><op:operator pos:line="157" pos:column="97">.</op:operator><name pos:line="157" pos:column="98">HasTransaction</name> <type:modifier pos:line="157" pos:column="113">?</type:modifier></name> <lit:literal type="string" pos:line="157" pos:column="115">"\t\t\t"</lit:literal> <op:operator pos:line="157" pos:column="124">:</op:operator> <name><name pos:line="157" pos:column="126">string</name><op:operator pos:line="157" pos:column="132">.</op:operator><name pos:line="157" pos:column="133">Empty</name></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="140">commandCount</name><op:operator pos:line="157" pos:column="152">++</op:operator></expr></argument>)</argument_list></call></expr><op:operator pos:line="157" pos:column="155">,</op:operator> <expr><call><name><name pos:line="157" pos:column="157">sanitizer</name><op:operator pos:line="157" pos:column="166">.</op:operator><name pos:line="157" pos:column="167">Process</name></name><argument_list pos:line="157" pos:column="174">(<argument><expr><name><name pos:line="157" pos:column="175">command</name><op:operator pos:line="157" pos:column="182">.</op:operator><name pos:line="157" pos:column="183">Command</name></name></expr></argument>, <argument><expr><name><name pos:line="157" pos:column="192">command</name><op:operator pos:line="157" pos:column="199">.</op:operator><name pos:line="157" pos:column="200">Parameters</name></name></expr></argument>)</argument_list></call></expr><op:operator pos:line="157" pos:column="211">,</op:operator> <expr><name pos:line="157" pos:column="213">parameters</name></expr><op:operator pos:line="157" pos:column="223">,</op:operator> <expr><name pos:line="157" pos:column="225">records</name></expr><op:operator pos:line="157" pos:column="232">,</op:operator> <expr><name><name pos:line="157" pos:column="234">command</name><op:operator pos:line="157" pos:column="241">.</op:operator><name pos:line="157" pos:column="242">Duration</name></name></expr><op:operator pos:line="157" pos:column="250">,</op:operator> <expr><name><name pos:line="157" pos:column="252">command</name><op:operator pos:line="157" pos:column="259">.</op:operator><name pos:line="157" pos:column="260">Offset</name></name></expr><op:operator pos:line="157" pos:column="266">,</op:operator> <expr><name><name pos:line="157" pos:column="268">command</name><op:operator pos:line="157" pos:column="275">.</op:operator><name pos:line="157" pos:column="276">IsAsync</name></name></expr><op:operator pos:line="157" pos:column="283">,</op:operator> <expr><name pos:line="157" pos:column="285">tailTransaction</name></expr><op:operator pos:line="157" pos:column="300">,</op:operator> <expr><name pos:line="157" pos:column="302">errors</name></expr><op:operator pos:line="157" pos:column="308">,</op:operator> <expr><name pos:line="157" pos:column="310">status</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></foreach>

                <expr_stmt><expr><call><name><name pos:line="160" pos:column="17">connections</name><op:operator pos:line="160" pos:column="28">.</op:operator><name pos:line="160" pos:column="29">Add</name></name><argument_list pos:line="160" pos:column="32">(<argument><expr><op:operator pos:line="160" pos:column="33">new</op:operator><index pos:line="160" pos:column="36">[]</index> <block pos:line="160" pos:column="39">{ <expr><name pos:line="160" pos:column="41">commands</name></expr><op:operator pos:line="160" pos:column="49">,</op:operator> <macro><name pos:line="160" pos:column="51">connection</name></macro><expr><op:operator pos:line="160" pos:column="61">.</op:operator><macro><name pos:line="160" pos:column="62">Duration</name></macro><op:operator pos:line="160" pos:column="70">.</op:operator><name pos:line="160" pos:column="71">HasValue</name> <op:operator pos:line="160" pos:column="80">?</op:operator> <op:operator pos:line="160" pos:column="82">(</op:operator><name pos:line="160" pos:column="83">object</name><op:operator pos:line="160" pos:column="89">)</op:operator><name><name pos:line="160" pos:column="90">connection</name><op:operator pos:line="160" pos:column="100">.</op:operator><name pos:line="160" pos:column="101">Duration</name><op:operator pos:line="160" pos:column="109">.</op:operator><name pos:line="160" pos:column="110">Value</name></name> <op:operator pos:line="160" pos:column="116">:</op:operator> <name pos:line="160" pos:column="118">null</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

            <if pos:line="163" pos:column="13">if <condition pos:line="163" pos:column="16">(<expr><name><name pos:line="163" pos:column="17">connections</name><op:operator pos:line="163" pos:column="28">.</op:operator><name pos:line="163" pos:column="29">Count</name></name> <op:operator pos:line="163" pos:column="35">&gt;</op:operator> <lit:literal type="number" pos:line="163" pos:column="37">1</lit:literal></expr>)</condition><then pos:line="163" pos:column="39">
            <block pos:line="164" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="165" pos:column="17">SqlStatistics</name></type> <name pos:line="165" pos:column="31">sqlStatistics</name> <init pos:line="165" pos:column="45">= <expr><call><name><name pos:line="165" pos:column="47">SqlStatisticsCalculator</name><op:operator pos:line="165" pos:column="70">.</op:operator><name pos:line="165" pos:column="71">Caluculate</name></name><argument_list pos:line="165" pos:column="81">(<argument><expr><name pos:line="165" pos:column="82">queryMetadata</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <return pos:line="167" pos:column="17">return <expr><op:operator pos:line="167" pos:column="24">new</op:operator> <name><name pos:line="167" pos:column="28">Dictionary</name><argument_list pos:line="167" pos:column="38">&lt;<argument><name pos:line="167" pos:column="39">string</name></argument>, <argument><name pos:line="167" pos:column="47">object</name></argument>&gt;</argument_list></name>
                <block pos:line="168" pos:column="17">{
                    <expr><block pos:line="169" pos:column="21">{ <expr><lit:literal type="string" pos:line="169" pos:column="23">"SQL Statistics"</lit:literal></expr><op:operator pos:line="169" pos:column="39">,</op:operator> <expr><op:operator pos:line="169" pos:column="41">new</op:operator> <name><name pos:line="169" pos:column="45">object</name><index pos:line="169" pos:column="51">[]</index></name> <block pos:line="169" pos:column="54">{ <expr><op:operator pos:line="169" pos:column="56">new</op:operator> <block pos:line="169" pos:column="60">{ <expr><name><name pos:line="169" pos:column="62">sqlStatistics</name><op:operator pos:line="169" pos:column="75">.</op:operator><name pos:line="169" pos:column="76">ConnectionCount</name></name></expr><op:operator pos:line="169" pos:column="91">,</op:operator> <expr><name><name pos:line="169" pos:column="93">sqlStatistics</name><op:operator pos:line="169" pos:column="106">.</op:operator><name pos:line="169" pos:column="107">QueryCount</name></name></expr><op:operator pos:line="169" pos:column="117">,</op:operator> <expr><name><name pos:line="169" pos:column="119">sqlStatistics</name><op:operator pos:line="169" pos:column="132">.</op:operator><name pos:line="169" pos:column="133">TransactionCount</name></name></expr><op:operator pos:line="169" pos:column="149">,</op:operator> <expr><name><name pos:line="169" pos:column="151">sqlStatistics</name><op:operator pos:line="169" pos:column="164">.</op:operator><name pos:line="169" pos:column="165">QueryExecutionTime</name></name></expr><op:operator pos:line="169" pos:column="183">,</op:operator> <expr><name><name pos:line="169" pos:column="185">sqlStatistics</name><op:operator pos:line="169" pos:column="198">.</op:operator><name pos:line="169" pos:column="199">ConnectionOpenTime</name></name></expr> }</block></expr> }</block></expr> }</block></expr><op:operator pos:line="169" pos:column="223">,</op:operator> 
                    <expr><block pos:line="170" pos:column="21">{ <expr><lit:literal type="string" pos:line="170" pos:column="23">"Queries"</lit:literal></expr><op:operator pos:line="170" pos:column="32">,</op:operator> <expr><name pos:line="170" pos:column="34">connections</name></expr> }</block></expr>
                }</block></expr>;</return>
            }</block></then></if>

            <return pos:line="174" pos:column="13">return <expr><name pos:line="174" pos:column="20">null</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
