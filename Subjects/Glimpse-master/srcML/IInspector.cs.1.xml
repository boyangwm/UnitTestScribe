<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Extensibility\IInspector.cs" pos:tabs="8"><namespace pos:line="1" pos:column="1">namespace <name><name pos:line="1" pos:column="11">Glimpse</name><op:operator pos:line="1" pos:column="18">.</op:operator><name pos:line="1" pos:column="19">Core</name><op:operator pos:line="1" pos:column="23">.</op:operator><name pos:line="1" pos:column="24">Extensibility</name></name>
<block pos:line="2" pos:column="1">{
    <comment type="line" pos:line="3" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="4" pos:column="5">/// Definition of an inspector that runs during startup. This provides the means </comment>
    <comment type="line" pos:line="5" pos:column="5">/// by which a Tab can setup any listeners, proxies, etc that are needed to gather the </comment>
    <comment type="line" pos:line="6" pos:column="5">/// data needed the corresponding &lt;see cref="ITab"/&gt;. </comment>
    <comment type="line" pos:line="7" pos:column="5">/// &lt;/summary&gt;</comment>
    <comment type="line" pos:line="8" pos:column="5">/// &lt;remarks&gt;</comment>
    <comment type="line" pos:line="9" pos:column="5">/// This interface can be implemented on the same class as the &lt;see cref="ITab"/&gt;, but </comment>
    <comment type="line" pos:line="10" pos:column="5">/// typically it would be implemented on a different class for separation of concerns.</comment>
    <comment type="line" pos:line="11" pos:column="5">/// &lt;/remarks&gt;</comment>
    <class type="interface"><specifier pos:line="12" pos:column="5">public</specifier> interface <name pos:line="12" pos:column="22">IInspector</name>
    <block pos:line="13" pos:column="5">{
        <comment type="line" pos:line="14" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="15" pos:column="9">/// Setups the specified context.</comment>
        <comment type="line" pos:line="16" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="17" pos:column="9">/// &lt;param name="context"&gt;The context.&lt;/param&gt;</comment>
        <comment type="line" pos:line="18" pos:column="9">/// &lt;remarks&gt;</comment>
        <comment type="line" pos:line="19" pos:column="9">/// Executed during the &lt;see cref="Glimpse.Core.Framework.IGlimpseRuntime.Initialize"/&gt; phase of </comment>
        <comment type="line" pos:line="20" pos:column="9">/// system startup. Specifically, with the ASP.NET provider, this is wired to/implemented by the </comment>
        <comment type="line" pos:line="21" pos:column="9">/// &lt;c&gt;System.Web.IHttpModule.Init&lt;/c&gt; method.</comment>
        <comment type="line" pos:line="22" pos:column="9">/// &lt;/remarks&gt;</comment>
        <function_decl><type><name pos:line="23" pos:column="9">void</name></type> <name pos:line="23" pos:column="14">Setup</name><parameter_list pos:line="23" pos:column="19">(<param><decl><type><name pos:line="23" pos:column="20">IInspectorContext</name></type> <name pos:line="23" pos:column="38">context</name></decl></param>)</parameter_list>;</function_decl>
    }</block></class>
}</block></namespace>
</unit>
