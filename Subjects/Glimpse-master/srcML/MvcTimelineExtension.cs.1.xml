<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc\Message\MvcTimelineExtension.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name><op:operator pos:line="2" pos:column="19">.</op:operator><name pos:line="2" pos:column="20">Message</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Mvc</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">AlternateType</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Glimpse</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">Mvc</name><op:operator pos:line="5" pos:column="22">.</op:operator><name pos:line="5" pos:column="23">Message</name></name>
<block pos:line="6" pos:column="1">{
    <class><specifier pos:line="7" pos:column="5">public</specifier> <specifier pos:line="7" pos:column="12">static</specifier> class <name pos:line="7" pos:column="25">MvcTimelineExtension</name>
    <block pos:line="8" pos:column="5">{ 
        <function><type><specifier pos:line="9" pos:column="9">public</specifier> <specifier pos:line="9" pos:column="16">static</specifier> <name pos:line="9" pos:column="23">T</name></type> <name><name pos:line="9" pos:column="25">AsMvcTimelineMessage</name><argument_list pos:line="9" pos:column="45">&lt;<argument><name pos:line="9" pos:column="46">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="9" pos:column="48">(<param><decl><type><name pos:line="9" pos:column="49">this</name> <name pos:line="9" pos:column="54">T</name></type> <name pos:line="9" pos:column="56">message</name></decl></param>, <param><decl><type><name pos:line="9" pos:column="65">TimelineCategoryItem</name></type> <name pos:line="9" pos:column="86">eventCategory</name></decl></param>)</parameter_list>
            <where pos:line="10" pos:column="13">where <name pos:line="10" pos:column="19">T</name> : <name pos:line="10" pos:column="23">ITimelineMessage</name></where>
        <block pos:line="11" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="12" pos:column="13">message</name><op:operator pos:line="12" pos:column="20">.</op:operator><name pos:line="12" pos:column="21">EventCategory</name></name> <op:operator pos:line="12" pos:column="35">=</op:operator> <name pos:line="12" pos:column="37">eventCategory</name></expr>;</expr_stmt> 

            <decl_stmt><decl><type><name pos:line="14" pos:column="13">var</name></type> <name pos:line="14" pos:column="17">controllerName</name> <init pos:line="14" pos:column="32">= <expr><name><name pos:line="14" pos:column="34">string</name><op:operator pos:line="14" pos:column="40">.</op:operator><name pos:line="14" pos:column="41">Empty</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="15" pos:column="13">var</name></type> <name pos:line="15" pos:column="17">actionName</name> <init pos:line="15" pos:column="28">= <expr><name><name pos:line="15" pos:column="30">string</name><op:operator pos:line="15" pos:column="36">.</op:operator><name pos:line="15" pos:column="37">Empty</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">var</name></type> <name pos:line="16" pos:column="17">actionMessage</name> <init pos:line="16" pos:column="31">= <expr><name pos:line="16" pos:column="33">message</name> <op:operator pos:line="16" pos:column="41">as</op:operator> <name pos:line="16" pos:column="44">IActionMessage</name></expr></init></decl>;</decl_stmt>
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><name pos:line="17" pos:column="17">actionMessage</name> <op:operator pos:line="17" pos:column="31">!=</op:operator> <name pos:line="17" pos:column="34">null</name></expr>)</condition><then pos:line="17" pos:column="39">
            <block pos:line="18" pos:column="13">{
                <expr_stmt><expr><name pos:line="19" pos:column="17">controllerName</name> <op:operator pos:line="19" pos:column="32">=</op:operator> <name><name pos:line="19" pos:column="34">actionMessage</name><op:operator pos:line="19" pos:column="47">.</op:operator><name pos:line="19" pos:column="48">ControllerName</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="20" pos:column="17">actionName</name> <op:operator pos:line="20" pos:column="28">=</op:operator> <name><name pos:line="20" pos:column="30">actionMessage</name><op:operator pos:line="20" pos:column="43">.</op:operator><name pos:line="20" pos:column="44">ActionName</name></name></expr>;</expr_stmt>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="23" pos:column="13">var</name></type> <name pos:line="23" pos:column="17">sourceMessage</name> <init pos:line="23" pos:column="31">= <expr><name pos:line="23" pos:column="33">message</name> <op:operator pos:line="23" pos:column="41">as</op:operator> <name pos:line="23" pos:column="44">ISourceMessage</name></expr></init></decl>;</decl_stmt>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name pos:line="24" pos:column="17">sourceMessage</name> <op:operator pos:line="24" pos:column="31">!=</op:operator> <name pos:line="24" pos:column="34">null</name></expr>)</condition><then pos:line="24" pos:column="39">
            <block pos:line="25" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="26" pos:column="17">message</name><op:operator pos:line="26" pos:column="24">.</op:operator><name pos:line="26" pos:column="25">EventSubText</name></name> <op:operator pos:line="26" pos:column="38">=</op:operator> <call><name><name pos:line="26" pos:column="40">sourceMessage</name><op:operator pos:line="26" pos:column="53">.</op:operator><name pos:line="26" pos:column="54">ExecutedType</name><op:operator pos:line="26" pos:column="66">.</op:operator><name pos:line="26" pos:column="67">ToString</name></name><argument_list pos:line="26" pos:column="75">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="29" pos:column="13">var</name></type> <name pos:line="29" pos:column="17">viewRenderMessage</name> <init pos:line="29" pos:column="35">= <expr><name pos:line="29" pos:column="37">message</name> <op:operator pos:line="29" pos:column="45">as</op:operator> <name><name pos:line="29" pos:column="48">View</name><op:operator pos:line="29" pos:column="52">.</op:operator><name pos:line="29" pos:column="53">Render</name><op:operator pos:line="29" pos:column="59">.</op:operator><name pos:line="29" pos:column="60">Message</name></name></expr></init></decl>;</decl_stmt>
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><name pos:line="30" pos:column="17">viewRenderMessage</name> <op:operator pos:line="30" pos:column="35">!=</op:operator> <name pos:line="30" pos:column="38">null</name></expr>)</condition><then pos:line="30" pos:column="43">
            <block pos:line="31" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="32" pos:column="17">message</name><op:operator pos:line="32" pos:column="24">.</op:operator><name pos:line="32" pos:column="25">EventName</name></name> <op:operator pos:line="32" pos:column="35">=</op:operator> <call><name><name pos:line="32" pos:column="37">string</name><op:operator pos:line="32" pos:column="43">.</op:operator><name pos:line="32" pos:column="44">Format</name></name><argument_list pos:line="32" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="32" pos:column="51">"Render: {0}.{1}"</lit:literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="70">controllerName</name></expr></argument>, <argument><expr><name pos:line="32" pos:column="86">actionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="33" pos:column="17">return <expr><name pos:line="33" pos:column="24">message</name></expr>;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="36" pos:column="13">var</name></type> <name pos:line="36" pos:column="17">activeInvokerInvokeActionResultMessage</name> <init pos:line="36" pos:column="56">= <expr><name pos:line="36" pos:column="58">message</name> <op:operator pos:line="36" pos:column="66">as</op:operator> <name pos:line="36" pos:column="69">IInvokeActionResultMessage</name></expr></init></decl>;</decl_stmt>
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><name pos:line="37" pos:column="17">activeInvokerInvokeActionResultMessage</name> <op:operator pos:line="37" pos:column="56">!=</op:operator> <name pos:line="37" pos:column="59">null</name></expr>)</condition><then pos:line="37" pos:column="64">
            <block pos:line="38" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="39" pos:column="17">message</name><op:operator pos:line="39" pos:column="24">.</op:operator><name pos:line="39" pos:column="25">EventName</name></name> <op:operator pos:line="39" pos:column="35">=</op:operator> <call><name><name pos:line="39" pos:column="37">string</name><op:operator pos:line="39" pos:column="43">.</op:operator><name pos:line="39" pos:column="44">Format</name></name><argument_list pos:line="39" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="39" pos:column="51">"Action Result: {0}.{1}"</lit:literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="77">controllerName</name></expr></argument>, <argument><expr><name pos:line="39" pos:column="93">actionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="40" pos:column="17">return <expr><name pos:line="40" pos:column="24">message</name></expr>;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="43" pos:column="13">var</name></type> <name pos:line="43" pos:column="17">activeInvokerInvokeActionMethodMessage</name> <init pos:line="43" pos:column="56">= <expr><name pos:line="43" pos:column="58">message</name> <op:operator pos:line="43" pos:column="66">as</op:operator> <name><name pos:line="43" pos:column="69">ActionInvoker</name><op:operator pos:line="43" pos:column="82">.</op:operator><name pos:line="43" pos:column="83">InvokeActionMethod</name><op:operator pos:line="43" pos:column="101">.</op:operator><name pos:line="43" pos:column="102">Message</name></name></expr></init></decl>;</decl_stmt>
            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><name pos:line="44" pos:column="17">activeInvokerInvokeActionMethodMessage</name> <op:operator pos:line="44" pos:column="56">!=</op:operator> <name pos:line="44" pos:column="59">null</name></expr>)</condition><then pos:line="44" pos:column="64">
            <block pos:line="45" pos:column="13">{ 
                <expr_stmt><expr><name><name pos:line="46" pos:column="17">message</name><op:operator pos:line="46" pos:column="24">.</op:operator><name pos:line="46" pos:column="25">EventName</name></name> <op:operator pos:line="46" pos:column="35">=</op:operator> <call><name><name pos:line="46" pos:column="37">string</name><op:operator pos:line="46" pos:column="43">.</op:operator><name pos:line="46" pos:column="44">Format</name></name><argument_list pos:line="46" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="51">"Controller: {0}.{1}"</lit:literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="74">controllerName</name></expr></argument>, <argument><expr><name pos:line="46" pos:column="90">actionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="47" pos:column="17">return <expr><name pos:line="47" pos:column="24">message</name></expr>;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="50" pos:column="13">var</name></type> <name pos:line="50" pos:column="17">boundedFilterMessage</name> <init pos:line="50" pos:column="38">= <expr><name pos:line="50" pos:column="40">message</name> <op:operator pos:line="50" pos:column="48">as</op:operator> <name pos:line="50" pos:column="51">IBoundedFilterMessage</name></expr></init></decl>;</decl_stmt>
            <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><name pos:line="51" pos:column="17">boundedFilterMessage</name> <op:operator pos:line="51" pos:column="38">!=</op:operator> <name pos:line="51" pos:column="41">null</name></expr>)</condition><then pos:line="51" pos:column="46">
            <block pos:line="52" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="53" pos:column="17">message</name><op:operator pos:line="53" pos:column="24">.</op:operator><name pos:line="53" pos:column="25">EventName</name></name> <op:operator pos:line="53" pos:column="35">=</op:operator> <call><name><name pos:line="53" pos:column="37">string</name><op:operator pos:line="53" pos:column="43">.</op:operator><name pos:line="53" pos:column="44">Format</name></name><argument_list pos:line="53" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="53" pos:column="51">"{0} {1}: {2}.{3}"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="53" pos:column="71">boundedFilterMessage</name><op:operator pos:line="53" pos:column="91">.</op:operator><name pos:line="53" pos:column="92">Category</name><op:operator pos:line="53" pos:column="100">.</op:operator><name pos:line="53" pos:column="101">ToString</name></name><argument_list pos:line="53" pos:column="109">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="53" pos:column="113">boundedFilterMessage</name><op:operator pos:line="53" pos:column="133">.</op:operator><name pos:line="53" pos:column="134">Bounds</name><op:operator pos:line="53" pos:column="140">.</op:operator><name pos:line="53" pos:column="141">ToString</name></name><argument_list pos:line="53" pos:column="149">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="53" pos:column="153">controllerName</name></expr></argument>, <argument><expr><name pos:line="53" pos:column="169">actionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="54" pos:column="17">return <expr><name pos:line="54" pos:column="24">message</name></expr>;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="57" pos:column="13">var</name></type> <name pos:line="57" pos:column="17">filterMessage</name> <init pos:line="57" pos:column="31">= <expr><name pos:line="57" pos:column="33">message</name> <op:operator pos:line="57" pos:column="41">as</op:operator> <name pos:line="57" pos:column="44">IFilterMessage</name></expr></init></decl>;</decl_stmt>
            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><name pos:line="58" pos:column="17">filterMessage</name> <op:operator pos:line="58" pos:column="31">!=</op:operator> <name pos:line="58" pos:column="34">null</name></expr>)</condition><then pos:line="58" pos:column="39">
            <block pos:line="59" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="60" pos:column="17">message</name><op:operator pos:line="60" pos:column="24">.</op:operator><name pos:line="60" pos:column="25">EventName</name></name> <op:operator pos:line="60" pos:column="35">=</op:operator> <call><name><name pos:line="60" pos:column="37">string</name><op:operator pos:line="60" pos:column="43">.</op:operator><name pos:line="60" pos:column="44">Format</name></name><argument_list pos:line="60" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="51">"{0}: {1}.{2}"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="60" pos:column="67">filterMessage</name><op:operator pos:line="60" pos:column="80">.</op:operator><name pos:line="60" pos:column="81">Category</name><op:operator pos:line="60" pos:column="89">.</op:operator><name pos:line="60" pos:column="90">ToString</name></name><argument_list pos:line="60" pos:column="98">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="60" pos:column="102">controllerName</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="118">actionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="61" pos:column="17">return <expr><name pos:line="61" pos:column="24">message</name></expr>;</return>
            }</block></then></if>

            <if pos:line="64" pos:column="13">if <condition pos:line="64" pos:column="16">(<expr><name pos:line="64" pos:column="17">actionMessage</name> <op:operator pos:line="64" pos:column="31">!=</op:operator> <name pos:line="64" pos:column="34">null</name></expr>)</condition><then pos:line="64" pos:column="39">
            <block pos:line="65" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="66" pos:column="17">message</name><op:operator pos:line="66" pos:column="24">.</op:operator><name pos:line="66" pos:column="25">EventName</name></name> <op:operator pos:line="66" pos:column="35">=</op:operator> <call><name><name pos:line="66" pos:column="37">string</name><op:operator pos:line="66" pos:column="43">.</op:operator><name pos:line="66" pos:column="44">Format</name></name><argument_list pos:line="66" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="66" pos:column="51">"{0}.{1}"</lit:literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="62">controllerName</name></expr></argument>, <argument><expr><name pos:line="66" pos:column="78">actionName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="67" pos:column="17">return <expr><name pos:line="67" pos:column="24">message</name></expr>;</return>
            }</block></then></if>

            <return pos:line="70" pos:column="13">return <expr><name pos:line="70" pos:column="20">message</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="73" pos:column="9">public</specifier> <specifier pos:line="73" pos:column="16">static</specifier> <name pos:line="73" pos:column="23">void</name></type> <name><name pos:line="73" pos:column="28">BuildDetails</name><argument_list pos:line="73" pos:column="40">&lt;<argument><name pos:line="73" pos:column="41">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="73" pos:column="43">(<param><decl><type><name pos:line="73" pos:column="44">this</name> <name pos:line="73" pos:column="49">T</name></type> <name pos:line="73" pos:column="51">message</name></decl></param>, <param><decl><type><name><name pos:line="73" pos:column="60">IDictionary</name><argument_list pos:line="73" pos:column="71">&lt;<argument><name pos:line="73" pos:column="72">string</name></argument>, <argument><name pos:line="73" pos:column="80">object</name></argument>&gt;</argument_list></name></type> <name pos:line="73" pos:column="88">details</name></decl></param>)</parameter_list>
            <where pos:line="74" pos:column="13">where <name pos:line="74" pos:column="19">T</name> : <name pos:line="74" pos:column="23">ITimelineMessage</name></where>
        <block pos:line="75" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="76" pos:column="13">var</name></type> <name pos:line="76" pos:column="17">filterMessage</name> <init pos:line="76" pos:column="31">= <expr><name pos:line="76" pos:column="33">message</name> <op:operator pos:line="76" pos:column="41">as</op:operator> <name pos:line="76" pos:column="44">IFilterMessage</name></expr></init></decl>;</decl_stmt>
            <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><name pos:line="77" pos:column="17">filterMessage</name> <op:operator pos:line="77" pos:column="31">!=</op:operator> <name pos:line="77" pos:column="34">null</name></expr>)</condition><then pos:line="77" pos:column="39">
            <block pos:line="78" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="79" pos:column="17">details</name><op:operator pos:line="79" pos:column="24">.</op:operator><name pos:line="79" pos:column="25">Add</name></name><argument_list pos:line="79" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="79" pos:column="29">"ResultType"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="43">filterMessage</name><op:operator pos:line="79" pos:column="56">.</op:operator><name pos:line="79" pos:column="57">ResultType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="82" pos:column="13">var</name></type> <name pos:line="82" pos:column="17">childActionMessage</name> <init pos:line="82" pos:column="36">= <expr><name pos:line="82" pos:column="38">message</name> <op:operator pos:line="82" pos:column="46">as</op:operator> <name pos:line="82" pos:column="49">IChildActionMessage</name></expr></init></decl>;</decl_stmt>
            <if pos:line="83" pos:column="13">if <condition pos:line="83" pos:column="16">(<expr><name pos:line="83" pos:column="17">childActionMessage</name> <op:operator pos:line="83" pos:column="36">!=</op:operator> <name pos:line="83" pos:column="39">null</name></expr>)</condition><then pos:line="83" pos:column="44">
            <block pos:line="84" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="85" pos:column="17">details</name><op:operator pos:line="85" pos:column="24">.</op:operator><name pos:line="85" pos:column="25">Add</name></name><argument_list pos:line="85" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="85" pos:column="29">"IsChildAction"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="46">childActionMessage</name><op:operator pos:line="85" pos:column="64">.</op:operator><name pos:line="85" pos:column="65">IsChildAction</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="88" pos:column="13">var</name></type> <name pos:line="88" pos:column="17">sourceMessage</name> <init pos:line="88" pos:column="31">= <expr><name pos:line="88" pos:column="33">message</name> <op:operator pos:line="88" pos:column="41">as</op:operator> <name pos:line="88" pos:column="44">ISourceMessage</name></expr></init></decl>;</decl_stmt>
            <if pos:line="89" pos:column="13">if <condition pos:line="89" pos:column="16">(<expr><name pos:line="89" pos:column="17">sourceMessage</name> <op:operator pos:line="89" pos:column="31">!=</op:operator> <name pos:line="89" pos:column="34">null</name></expr>)</condition><then pos:line="89" pos:column="39">
            <block pos:line="90" pos:column="13">{
                <if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><name><name pos:line="91" pos:column="21">sourceMessage</name><op:operator pos:line="91" pos:column="34">.</op:operator><name pos:line="91" pos:column="35">ExecutedMethod</name></name> <op:operator pos:line="91" pos:column="50">!=</op:operator> <name pos:line="91" pos:column="53">null</name></expr>)</condition><then pos:line="91" pos:column="58">
                <block pos:line="92" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="93" pos:column="21">details</name><op:operator pos:line="93" pos:column="28">.</op:operator><name pos:line="93" pos:column="29">Add</name></name><argument_list pos:line="93" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="33">"ExecutedMethod"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="51">sourceMessage</name><op:operator pos:line="93" pos:column="64">.</op:operator><name pos:line="93" pos:column="65">ExecutedMethod</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>

                <if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><name><name pos:line="96" pos:column="21">sourceMessage</name><op:operator pos:line="96" pos:column="34">.</op:operator><name pos:line="96" pos:column="35">ExecutedType</name></name> <op:operator pos:line="96" pos:column="48">!=</op:operator> <name pos:line="96" pos:column="51">null</name></expr>)</condition><then pos:line="96" pos:column="56">
                <block pos:line="97" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="98" pos:column="21">details</name><op:operator pos:line="98" pos:column="28">.</op:operator><name pos:line="98" pos:column="29">Add</name></name><argument_list pos:line="98" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="98" pos:column="33">"ExecutedType"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="49">sourceMessage</name><op:operator pos:line="98" pos:column="62">.</op:operator><name pos:line="98" pos:column="63">ExecutedType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="102" pos:column="13">var</name></type> <name pos:line="102" pos:column="17">cancelledFilterMessage</name> <init pos:line="102" pos:column="40">= <expr><name pos:line="102" pos:column="42">message</name> <op:operator pos:line="102" pos:column="50">as</op:operator> <name pos:line="102" pos:column="53">ICanceledBasedFilterMessage</name></expr></init></decl>;</decl_stmt>
            <if pos:line="103" pos:column="13">if <condition pos:line="103" pos:column="16">(<expr><name pos:line="103" pos:column="17">cancelledFilterMessage</name> <op:operator pos:line="103" pos:column="40">!=</op:operator> <name pos:line="103" pos:column="43">null</name></expr>)</condition><then pos:line="103" pos:column="48">
            <block pos:line="104" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="105" pos:column="17">details</name><op:operator pos:line="105" pos:column="24">.</op:operator><name pos:line="105" pos:column="25">Add</name></name><argument_list pos:line="105" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="105" pos:column="29">"Canceled"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="41">cancelledFilterMessage</name><op:operator pos:line="105" pos:column="63">.</op:operator><name pos:line="105" pos:column="64">Canceled</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="108" pos:column="13">var</name></type> <name pos:line="108" pos:column="17">exceptionFilterMessage</name> <init pos:line="108" pos:column="40">= <expr><name pos:line="108" pos:column="42">message</name> <op:operator pos:line="108" pos:column="50">as</op:operator> <name pos:line="108" pos:column="53">IExceptionFilterMessage</name></expr></init></decl>;</decl_stmt>
            <if pos:line="109" pos:column="13">if <condition pos:line="109" pos:column="16">(<expr><name pos:line="109" pos:column="17">exceptionFilterMessage</name> <op:operator pos:line="109" pos:column="40">!=</op:operator> <name pos:line="109" pos:column="43">null</name></expr>)</condition><then pos:line="109" pos:column="48">
            <block pos:line="110" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="111" pos:column="17">details</name><op:operator pos:line="111" pos:column="24">.</op:operator><name pos:line="111" pos:column="25">Add</name></name><argument_list pos:line="111" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="111" pos:column="29">"ExceptionHandled"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="49">exceptionFilterMessage</name><op:operator pos:line="111" pos:column="71">.</op:operator><name pos:line="111" pos:column="72">ExceptionHandled</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="112" pos:column="17">details</name><op:operator pos:line="112" pos:column="24">.</op:operator><name pos:line="112" pos:column="25">Add</name></name><argument_list pos:line="112" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="112" pos:column="29">"ExceptionType"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="46">exceptionFilterMessage</name><op:operator pos:line="112" pos:column="68">.</op:operator><name pos:line="112" pos:column="69">ExceptionType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
