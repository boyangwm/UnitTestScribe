<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Support\NuGetPackageDiscoverer.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Reflection</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Framework</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Glimpse</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">Core</name><op:operator pos:line="8" pos:column="23">.</op:operator><name pos:line="8" pos:column="24">Support</name></name>
<block pos:line="9" pos:column="1">{
    <comment type="line" pos:line="10" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="11" pos:column="5">/// Discoverer for assemblies defined as NuGet packages by means of the &lt;see cref="NuGetPackageAttribute"/&gt;</comment>
    <comment type="line" pos:line="12" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="13" pos:column="5">public</specifier> class <name pos:line="13" pos:column="18">NuGetPackageDiscoverer</name>
    <block pos:line="14" pos:column="5">{
        <comment type="line" pos:line="15" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="16" pos:column="9">/// Discovers NuGet packages by checking all loaded assemblies for the presence of the &lt;see cref="NuGetPackageAttribute"/&gt; attribute,</comment>
        <comment type="line" pos:line="17" pos:column="9">/// while keeping track of assemblies that could not be processed during discovery, if any.</comment>
        <comment type="line" pos:line="18" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="19" pos:column="9">/// &lt;returns&gt;The result of the discovery.&lt;/returns&gt;</comment>
        <function><type><specifier pos:line="20" pos:column="9">public</specifier> <specifier pos:line="20" pos:column="16">static</specifier> <name pos:line="20" pos:column="23">NuGetPackageDiscoveryResult</name></type> <name pos:line="20" pos:column="51">Discover</name><parameter_list pos:line="20" pos:column="59">()</parameter_list>
        <block pos:line="21" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">var</name></type> <name pos:line="22" pos:column="17">foundNuGetPackages</name> <init pos:line="22" pos:column="36">= <expr><op:operator pos:line="22" pos:column="38">new</op:operator> <call><name><name pos:line="22" pos:column="42">List</name><argument_list pos:line="22" pos:column="46">&lt;<argument><name pos:line="22" pos:column="47">NuGetPackageAttribute</name></argument>&gt;</argument_list></name><argument_list pos:line="22" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">var</name></type> <name pos:line="23" pos:column="17">nonProcessableAssemblies</name> <init pos:line="23" pos:column="42">= <expr><op:operator pos:line="23" pos:column="44">new</op:operator> <call><name><name pos:line="23" pos:column="48">List</name><argument_list pos:line="23" pos:column="52">&lt;<argument><name pos:line="23" pos:column="53">Assembly</name></argument>&gt;</argument_list></name><argument_list pos:line="23" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <foreach pos:line="25" pos:column="13">foreach (<init><decl><type><name pos:line="25" pos:column="22">var</name></type> <name pos:line="25" pos:column="26">assembly</name> <range pos:line="25" pos:column="35">in <expr><call><name><name pos:line="25" pos:column="38">AppDomain</name><op:operator pos:line="25" pos:column="47">.</op:operator><name pos:line="25" pos:column="48">CurrentDomain</name><op:operator pos:line="25" pos:column="61">.</op:operator><name pos:line="25" pos:column="62">GetAssemblies</name></name><argument_list pos:line="25" pos:column="75">()</argument_list></call></expr></range></decl></init>)
            <block pos:line="26" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="27" pos:column="17">NuGetPackageAttribute</name></type> <name pos:line="27" pos:column="39">nuGetPackageAttribute</name> <init pos:line="27" pos:column="61">= <expr><name pos:line="27" pos:column="63">null</name></expr></init></decl>;</decl_stmt>

                <try pos:line="29" pos:column="17">try
                <block pos:line="30" pos:column="17">{
                    <expr_stmt><expr><name pos:line="31" pos:column="21">nuGetPackageAttribute</name> <op:operator pos:line="31" pos:column="43">=</op:operator> <call><name><name pos:line="31" pos:column="45">assembly</name><op:operator pos:line="31" pos:column="53">.</op:operator><name pos:line="31" pos:column="54">GetCustomAttributes</name></name><argument_list pos:line="31" pos:column="73">(<argument><expr><call><name pos:line="31" pos:column="74">typeof</name><argument_list pos:line="31" pos:column="80">(<argument><expr><name pos:line="31" pos:column="81">NuGetPackageAttribute</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="31" pos:column="105">false</lit:literal></expr></argument>)</argument_list></call>
                                                    <op:operator pos:line="32" pos:column="53">.</op:operator><call><name><name pos:line="32" pos:column="54">Cast</name><argument_list pos:line="32" pos:column="58">&lt;<argument><name pos:line="32" pos:column="59">NuGetPackageAttribute</name></argument>&gt;</argument_list></name><argument_list pos:line="32" pos:column="81">()</argument_list></call>
                                                    <op:operator pos:line="33" pos:column="53">.</op:operator><call><name pos:line="33" pos:column="54">SingleOrDefault</name><argument_list pos:line="33" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
                }</block>
                <catch pos:line="35" pos:column="17">catch <parameter_list pos:line="35" pos:column="23">(<param><decl><type><name pos:line="35" pos:column="24">Exception</name></type> <name pos:line="35" pos:column="34">exception</name></decl></param>)</parameter_list>
                <block pos:line="36" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="37" pos:column="21">GlimpseConfiguration</name><op:operator pos:line="37" pos:column="41">.</op:operator><name pos:line="37" pos:column="42">GetLogger</name></name><argument_list pos:line="37" pos:column="51">()</argument_list></call><op:operator pos:line="37" pos:column="53">.</op:operator><call><name pos:line="37" pos:column="54">Error</name><argument_list pos:line="37" pos:column="59">(<argument><expr><call><name><name pos:line="37" pos:column="60">string</name><op:operator pos:line="37" pos:column="66">.</op:operator><name pos:line="37" pos:column="67">Format</name></name><argument_list pos:line="37" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="37" pos:column="74">"Failed requesting custom attributes of assembly '{0}'"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="131">assembly</name><op:operator pos:line="37" pos:column="139">.</op:operator><name pos:line="37" pos:column="140">FullName</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="37" pos:column="151">exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="38" pos:column="21">nonProcessableAssemblies</name><op:operator pos:line="38" pos:column="45">.</op:operator><name pos:line="38" pos:column="46">Add</name></name><argument_list pos:line="38" pos:column="49">(<argument><expr><name pos:line="38" pos:column="50">assembly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></catch></try>

                <if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">nuGetPackageAttribute</name> <op:operator pos:line="41" pos:column="43">!=</op:operator> <name pos:line="41" pos:column="46">null</name></expr>)</condition><then pos:line="41" pos:column="51">
                <block pos:line="42" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="43" pos:column="21">nuGetPackageAttribute</name><op:operator pos:line="43" pos:column="42">.</op:operator><name pos:line="43" pos:column="43">Initialize</name></name><argument_list pos:line="43" pos:column="53">(<argument><expr><name pos:line="43" pos:column="54">assembly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="44" pos:column="21">foundNuGetPackages</name><op:operator pos:line="44" pos:column="39">.</op:operator><name pos:line="44" pos:column="40">Add</name></name><argument_list pos:line="44" pos:column="43">(<argument><expr><name pos:line="44" pos:column="44">nuGetPackageAttribute</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></foreach>

            <return pos:line="48" pos:column="13">return <expr><op:operator pos:line="48" pos:column="20">new</op:operator> <call><name pos:line="48" pos:column="24">NuGetPackageDiscoveryResult</name><argument_list pos:line="48" pos:column="51">(<argument><expr><call><name><name pos:line="48" pos:column="52">foundNuGetPackages</name><op:operator pos:line="48" pos:column="70">.</op:operator><name pos:line="48" pos:column="71">ToArray</name></name><argument_list pos:line="48" pos:column="78">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="48" pos:column="82">nonProcessableAssemblies</name><op:operator pos:line="48" pos:column="106">.</op:operator><name pos:line="48" pos:column="107">ToArray</name></name><argument_list pos:line="48" pos:column="114">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
