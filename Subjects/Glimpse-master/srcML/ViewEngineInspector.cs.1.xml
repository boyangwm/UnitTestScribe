<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc\Inspector\ViewEngineInspector.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Web</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">Mvc</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name><op:operator pos:line="2" pos:column="19">.</op:operator><name pos:line="2" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Mvc</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">AlternateType</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Glimpse</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">Mvc</name><op:operator pos:line="5" pos:column="22">.</op:operator><name pos:line="5" pos:column="23">Inspector</name></name>
<block pos:line="6" pos:column="1">{
    <class><specifier pos:line="7" pos:column="5">public</specifier> class <name pos:line="7" pos:column="18">ViewEngineInspector</name> <super pos:line="7" pos:column="38">: <name pos:line="7" pos:column="40">IInspector</name></super>
    <block pos:line="8" pos:column="5">{
        <function><type><specifier pos:line="9" pos:column="9">public</specifier> <name pos:line="9" pos:column="16">void</name></type> <name pos:line="9" pos:column="21">Setup</name><parameter_list pos:line="9" pos:column="26">(<param><decl><type><name pos:line="9" pos:column="27">IInspectorContext</name></type> <name pos:line="9" pos:column="45">context</name></decl></param>)</parameter_list>
        <block pos:line="10" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="11" pos:column="13">var</name></type> <name pos:line="11" pos:column="17">logger</name> <init pos:line="11" pos:column="24">= <expr><name><name pos:line="11" pos:column="26">context</name><op:operator pos:line="11" pos:column="33">.</op:operator><name pos:line="11" pos:column="34">Logger</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="13" pos:column="13">var</name></type> <name pos:line="13" pos:column="17">alternateImplementation</name> <init pos:line="13" pos:column="41">= <expr><op:operator pos:line="13" pos:column="43">new</op:operator> <call><name pos:line="13" pos:column="47">ViewEngine</name><argument_list pos:line="13" pos:column="57">(<argument><expr><name><name pos:line="13" pos:column="58">context</name><op:operator pos:line="13" pos:column="65">.</op:operator><name pos:line="13" pos:column="66">ProxyFactory</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="15" pos:column="13">var</name></type> <name pos:line="15" pos:column="17">currentEngines</name> <init pos:line="15" pos:column="32">= <expr><name><name pos:line="15" pos:column="34">ViewEngines</name><op:operator pos:line="15" pos:column="45">.</op:operator><name pos:line="15" pos:column="46">Engines</name></name></expr></init></decl>;</decl_stmt>
            <for pos:line="16" pos:column="13">for (<init><decl><type><name pos:line="16" pos:column="18">var</name></type> <name pos:line="16" pos:column="22">i</name> <init pos:line="16" pos:column="24">= <expr><lit:literal type="number" pos:line="16" pos:column="26">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="16" pos:column="29">i</name> <op:operator pos:line="16" pos:column="31">&lt;</op:operator> <name><name pos:line="16" pos:column="33">currentEngines</name><op:operator pos:line="16" pos:column="47">.</op:operator><name pos:line="16" pos:column="48">Count</name></name></expr>;</condition> <incr><expr><name pos:line="16" pos:column="55">i</name><op:operator pos:line="16" pos:column="56">++</op:operator></expr></incr>)
            <block pos:line="17" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="18" pos:column="17">var</name></type> <name pos:line="18" pos:column="21">originalEngine</name> <init pos:line="18" pos:column="36">= <expr><name><name pos:line="18" pos:column="38">currentEngines</name><index pos:line="18" pos:column="52">[<expr><name pos:line="18" pos:column="53">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt><decl><type><name pos:line="20" pos:column="17">IViewEngine</name></type> <name pos:line="20" pos:column="29">newEngine</name></decl>;</decl_stmt>
                <if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><call><name><name pos:line="21" pos:column="21">alternateImplementation</name><op:operator pos:line="21" pos:column="44">.</op:operator><name pos:line="21" pos:column="45">TryCreate</name></name><argument_list pos:line="21" pos:column="54">(<argument><expr><name pos:line="21" pos:column="55">originalEngine</name></expr></argument>, <argument><expr pos:line="21" pos:column="71">out <name pos:line="21" pos:column="75">newEngine</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="21" pos:column="86">
                <block pos:line="22" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="23" pos:column="21">currentEngines</name><index pos:line="23" pos:column="35">[<expr><name pos:line="23" pos:column="36">i</name></expr>]</index></name> <op:operator pos:line="23" pos:column="39">=</op:operator> <name pos:line="23" pos:column="41">newEngine</name></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="24" pos:column="21">logger</name><op:operator pos:line="24" pos:column="27">.</op:operator><name pos:line="24" pos:column="28">Info</name></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name><name pos:line="24" pos:column="33">Resources</name><op:operator pos:line="24" pos:column="42">.</op:operator><name pos:line="24" pos:column="43">ViewEngineSetupReplacedViewEngine</name></name></expr></argument>, <argument><expr><call><name><name pos:line="24" pos:column="78">originalEngine</name><op:operator pos:line="24" pos:column="92">.</op:operator><name pos:line="24" pos:column="93">GetType</name></name><argument_list pos:line="24" pos:column="100">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="26" pos:column="17">else
                <block pos:line="27" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="28" pos:column="21">logger</name><op:operator pos:line="28" pos:column="27">.</op:operator><name pos:line="28" pos:column="28">Warn</name></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name><name pos:line="28" pos:column="33">Resources</name><op:operator pos:line="28" pos:column="42">.</op:operator><name pos:line="28" pos:column="43">ViewEngineSetupNotReplacedViewEngine</name></name></expr></argument>, <argument><expr><call><name><name pos:line="28" pos:column="81">originalEngine</name><op:operator pos:line="28" pos:column="95">.</op:operator><name pos:line="28" pos:column="96">GetType</name></name><argument_list pos:line="28" pos:column="103">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
                }</block></else></if>
            }</block></for>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
