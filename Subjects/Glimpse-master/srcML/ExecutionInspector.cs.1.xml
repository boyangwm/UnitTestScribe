<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc\Inspector\ExecutionInspector.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Web</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">Mvc</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name><op:operator pos:line="2" pos:column="19">.</op:operator><name pos:line="2" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Mvc</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">AlternateType</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Glimpse</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">Mvc</name><op:operator pos:line="5" pos:column="22">.</op:operator><name pos:line="5" pos:column="23">Inspector</name></name>
<block pos:line="6" pos:column="1">{
    <class><specifier pos:line="7" pos:column="5">public</specifier> class <name pos:line="7" pos:column="18">ExecutionInspector</name> <super pos:line="7" pos:column="37">: <name pos:line="7" pos:column="39">IInspector</name></super>
    <block pos:line="8" pos:column="5">{
        <function><type><specifier pos:line="9" pos:column="9">public</specifier> <name pos:line="9" pos:column="16">void</name></type> <name pos:line="9" pos:column="21">Setup</name><parameter_list pos:line="9" pos:column="26">(<param><decl><type><name pos:line="9" pos:column="27">IInspectorContext</name></type> <name pos:line="9" pos:column="45">context</name></decl></param>)</parameter_list>
        <block pos:line="10" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="11" pos:column="13">var</name></type> <name pos:line="11" pos:column="17">logger</name> <init pos:line="11" pos:column="24">= <expr><name><name pos:line="11" pos:column="26">context</name><op:operator pos:line="11" pos:column="33">.</op:operator><name pos:line="11" pos:column="34">Logger</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="13" pos:column="13">var</name></type> <name pos:line="13" pos:column="17">originalControllerFactory</name> <init pos:line="13" pos:column="43">= <expr><call><name><name pos:line="13" pos:column="45">ControllerBuilder</name><op:operator pos:line="13" pos:column="62">.</op:operator><name pos:line="13" pos:column="63">Current</name><op:operator pos:line="13" pos:column="70">.</op:operator><name pos:line="13" pos:column="71">GetControllerFactory</name></name><argument_list pos:line="13" pos:column="91">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">var</name></type> <name pos:line="14" pos:column="17">alternateImplementation</name> <init pos:line="14" pos:column="41">= <expr><op:operator pos:line="14" pos:column="43">new</op:operator> <call><name pos:line="14" pos:column="47">ControllerFactory</name><argument_list pos:line="14" pos:column="64">(<argument><expr><name><name pos:line="14" pos:column="65">context</name><op:operator pos:line="14" pos:column="72">.</op:operator><name pos:line="14" pos:column="73">ProxyFactory</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="15" pos:column="13">IControllerFactory</name></type> <name pos:line="15" pos:column="32">newControllerFactory</name></decl>;</decl_stmt>

            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><call><name><name pos:line="17" pos:column="17">alternateImplementation</name><op:operator pos:line="17" pos:column="40">.</op:operator><name pos:line="17" pos:column="41">TryCreate</name></name><argument_list pos:line="17" pos:column="50">(<argument><expr><name pos:line="17" pos:column="51">originalControllerFactory</name></expr></argument>, <argument><expr pos:line="17" pos:column="78">out <name pos:line="17" pos:column="82">newControllerFactory</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="17" pos:column="104">
            <block pos:line="18" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="19" pos:column="17">ControllerBuilder</name><op:operator pos:line="19" pos:column="34">.</op:operator><name pos:line="19" pos:column="35">Current</name><op:operator pos:line="19" pos:column="42">.</op:operator><name pos:line="19" pos:column="43">SetControllerFactory</name></name><argument_list pos:line="19" pos:column="63">(<argument><expr><name pos:line="19" pos:column="64">newControllerFactory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name><name pos:line="21" pos:column="17">logger</name><op:operator pos:line="21" pos:column="23">.</op:operator><name pos:line="21" pos:column="24">Debug</name></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name><name pos:line="21" pos:column="30">Resources</name><op:operator pos:line="21" pos:column="39">.</op:operator><name pos:line="21" pos:column="40">ControllerFactorySetup</name></name></expr></argument>, <argument><expr><call><name><name pos:line="21" pos:column="64">originalControllerFactory</name><op:operator pos:line="21" pos:column="89">.</op:operator><name pos:line="21" pos:column="90">GetType</name></name><argument_list pos:line="21" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
