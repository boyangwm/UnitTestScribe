<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.AspNet\Tab\Session.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">AspNet</name><op:operator pos:line="2" pos:column="21">.</op:operator><name pos:line="2" pos:column="22">Extensibility</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">AspNet</name><op:operator pos:line="3" pos:column="21">.</op:operator><name pos:line="3" pos:column="22">Extensions</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">AspNet</name><op:operator pos:line="4" pos:column="21">.</op:operator><name pos:line="4" pos:column="22">Model</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Tab</name><op:operator pos:line="6" pos:column="23">.</op:operator><name pos:line="6" pos:column="24">Assist</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Glimpse</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">AspNet</name><op:operator pos:line="8" pos:column="25">.</op:operator><name pos:line="8" pos:column="26">Tab</name></name>
<block pos:line="9" pos:column="1">{
    <class><specifier pos:line="10" pos:column="5">public</specifier> class <name pos:line="10" pos:column="18">Session</name> <super pos:line="10" pos:column="26">: <name pos:line="10" pos:column="28">AspNetTab</name>, <name pos:line="10" pos:column="39">IDocumentation</name>, <name pos:line="10" pos:column="55">ITabLayout</name>, <name pos:line="10" pos:column="67">IKey</name></super>
    <block pos:line="11" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">private</specifier> <specifier pos:line="12" pos:column="17">static</specifier> <specifier pos:line="12" pos:column="24">readonly</specifier> <name pos:line="12" pos:column="33">object</name></type> <name pos:line="12" pos:column="40">Layout</name> <init pos:line="12" pos:column="47">= <expr><call><name><name pos:line="12" pos:column="49">TabLayout</name><op:operator pos:line="12" pos:column="58">.</op:operator><name pos:line="12" pos:column="59">Create</name></name><argument_list pos:line="12" pos:column="65">()</argument_list></call>
                <op:operator pos:line="13" pos:column="17">.</op:operator><call><name pos:line="13" pos:column="18">Row</name><argument_list pos:line="13" pos:column="21">(<argument><expr><lambda><name pos:line="13" pos:column="22">r</name> <op:operator pos:line="13" pos:column="24">=&gt;</op:operator>
                <block pos:line="14" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="15" pos:column="21">r</name><op:operator pos:line="15" pos:column="22">.</op:operator><name pos:line="15" pos:column="23">Cell</name></name><argument_list pos:line="15" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="15" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="15" pos:column="30">.</op:operator><call><name pos:line="15" pos:column="31">AsKey</name><argument_list pos:line="15" pos:column="36">()</argument_list></call><op:operator pos:line="15" pos:column="38">.</op:operator><call><name pos:line="15" pos:column="39">WidthInPixels</name><argument_list pos:line="15" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="15" pos:column="53">250</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="16" pos:column="21">r</name><op:operator pos:line="16" pos:column="22">.</op:operator><name pos:line="16" pos:column="23">Cell</name></name><argument_list pos:line="16" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="16" pos:column="28">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="17" pos:column="21">r</name><op:operator pos:line="17" pos:column="22">.</op:operator><name pos:line="17" pos:column="23">Cell</name></name><argument_list pos:line="17" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="17" pos:column="28">2</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="17" pos:column="30">.</op:operator><call><name pos:line="17" pos:column="31">WidthInPercent</name><argument_list pos:line="17" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="17" pos:column="46">15</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></lambda></expr></argument>)</argument_list></call><op:operator pos:line="18" pos:column="19">.</op:operator><call><name pos:line="18" pos:column="20">Build</name><argument_list pos:line="18" pos:column="25">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">string</name></type> <name pos:line="20" pos:column="23">DocumentationUri</name>
        <block pos:line="21" pos:column="9">{
            <function><name pos:line="22" pos:column="13">get</name> <block pos:line="22" pos:column="17">{ <return pos:line="22" pos:column="19">return <expr><lit:literal type="string" pos:line="22" pos:column="26">"http://getglimpse.com/Help/Session-Tab"</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">public</specifier> <specifier pos:line="25" pos:column="16">override</specifier> <name pos:line="25" pos:column="25">string</name></type> <name pos:line="25" pos:column="32">Name</name>
        <block pos:line="26" pos:column="9">{
            <function><name pos:line="27" pos:column="13">get</name> <block pos:line="27" pos:column="17">{ <return pos:line="27" pos:column="19">return <expr><lit:literal type="string" pos:line="27" pos:column="26">"Session"</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="30" pos:column="9">public</specifier> <name pos:line="30" pos:column="16">string</name></type> <name pos:line="30" pos:column="23">Key</name>
        <block pos:line="31" pos:column="9">{
            <function><name pos:line="32" pos:column="13">get</name> <block pos:line="32" pos:column="17">{ <return pos:line="32" pos:column="19">return <expr><lit:literal type="string" pos:line="32" pos:column="26">"glimpse_session"</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="35" pos:column="9">public</specifier> <specifier pos:line="35" pos:column="16">override</specifier> <name pos:line="35" pos:column="25">RuntimeEvent</name></type> <name pos:line="35" pos:column="38">ExecuteOn</name>
        <block pos:line="36" pos:column="9">{
            <function><name pos:line="37" pos:column="13">get</name> <block pos:line="37" pos:column="17">{ <return pos:line="37" pos:column="19">return <expr><name><name pos:line="37" pos:column="26">RuntimeEvent</name><op:operator pos:line="37" pos:column="38">.</op:operator><name pos:line="37" pos:column="39">EndSessionAccess</name></name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="40" pos:column="9">public</specifier> <name pos:line="40" pos:column="16">object</name></type> <name pos:line="40" pos:column="23">GetLayout</name><parameter_list pos:line="40" pos:column="32">()</parameter_list>
        <block pos:line="41" pos:column="9">{
            <return pos:line="42" pos:column="13">return <expr><name pos:line="42" pos:column="20">Layout</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="45" pos:column="9">public</specifier> <specifier pos:line="45" pos:column="16">override</specifier> <name pos:line="45" pos:column="25">object</name></type> <name pos:line="45" pos:column="32">GetData</name><parameter_list pos:line="45" pos:column="39">(<param><decl><type><name pos:line="45" pos:column="40">ITabContext</name></type> <name pos:line="45" pos:column="52">context</name></decl></param>)</parameter_list>
        <block pos:line="46" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="47" pos:column="13">var</name></type> <name pos:line="47" pos:column="17">requestContext</name> <init pos:line="47" pos:column="32">= <expr><call><name><name pos:line="47" pos:column="34">context</name><op:operator pos:line="47" pos:column="41">.</op:operator><name pos:line="47" pos:column="42">GetHttpContext</name></name><argument_list pos:line="47" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="49" pos:column="13">var</name></type> <name pos:line="49" pos:column="17">session</name> <init pos:line="49" pos:column="25">= <expr><name><name pos:line="49" pos:column="27">requestContext</name><op:operator pos:line="49" pos:column="41">.</op:operator><name pos:line="49" pos:column="42">Session</name></name></expr></init></decl>;</decl_stmt>
            <if pos:line="50" pos:column="13">if <condition pos:line="50" pos:column="16">(<expr><name pos:line="50" pos:column="17">session</name> <op:operator pos:line="50" pos:column="25">==</op:operator> <name pos:line="50" pos:column="28">null</name> <op:operator pos:line="50" pos:column="33">||</op:operator> <name><name pos:line="50" pos:column="36">session</name><op:operator pos:line="50" pos:column="43">.</op:operator><name pos:line="50" pos:column="44">Count</name></name> <op:operator pos:line="50" pos:column="50">==</op:operator> <lit:literal type="number" pos:line="50" pos:column="53">0</lit:literal></expr>)</condition><then pos:line="50" pos:column="55">
            <block pos:line="51" pos:column="13">{
                <return pos:line="52" pos:column="17">return <expr><name pos:line="52" pos:column="24">null</name></expr>;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="55" pos:column="13">var</name></type> <name pos:line="55" pos:column="17">result</name> <init pos:line="55" pos:column="24">= <expr><op:operator pos:line="55" pos:column="26">new</op:operator> <call><name><name pos:line="55" pos:column="30">List</name><argument_list pos:line="55" pos:column="34">&lt;<argument><name pos:line="55" pos:column="35">SessionModel</name></argument>&gt;</argument_list></name><argument_list pos:line="55" pos:column="48">(<argument><expr><name><name pos:line="55" pos:column="49">session</name><op:operator pos:line="55" pos:column="56">.</op:operator><name pos:line="55" pos:column="57">Count</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="56" pos:column="13">foreach (<init><decl><type><name pos:line="56" pos:column="22">var</name></type> <name pos:line="56" pos:column="26">sessionKey</name> <range pos:line="56" pos:column="37">in <expr><name><name pos:line="56" pos:column="40">session</name><op:operator pos:line="56" pos:column="47">.</op:operator><name pos:line="56" pos:column="48">Keys</name></name></expr></range></decl></init>)
            <block pos:line="57" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="58" pos:column="17">var</name></type> <name pos:line="58" pos:column="21">key</name> <init pos:line="58" pos:column="25">= <expr><call><name><name pos:line="58" pos:column="27">sessionKey</name><op:operator pos:line="58" pos:column="37">.</op:operator><name pos:line="58" pos:column="38">ToString</name></name><argument_list pos:line="58" pos:column="46">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="59" pos:column="17">var</name></type> <name pos:line="59" pos:column="21">value</name> <init pos:line="59" pos:column="27">= <expr><name><name pos:line="59" pos:column="29">session</name><index pos:line="59" pos:column="36">[<expr><name pos:line="59" pos:column="37">key</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="60" pos:column="17">var</name></type> <name pos:line="60" pos:column="21">type</name> <init pos:line="60" pos:column="26">= <expr><name pos:line="60" pos:column="28">value</name> <op:operator pos:line="60" pos:column="34">!=</op:operator> <name pos:line="60" pos:column="37">null</name> <op:operator pos:line="60" pos:column="42">?</op:operator> <call><name><name pos:line="60" pos:column="44">value</name><op:operator pos:line="60" pos:column="49">.</op:operator><name pos:line="60" pos:column="50">GetType</name></name><argument_list pos:line="60" pos:column="57">()</argument_list></call> <op:operator pos:line="60" pos:column="60">:</op:operator> <name pos:line="60" pos:column="62">null</name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="61" pos:column="17">result</name><op:operator pos:line="61" pos:column="23">.</op:operator><name pos:line="61" pos:column="24">Add</name></name><argument_list pos:line="61" pos:column="27">(<argument><expr><op:operator pos:line="61" pos:column="28">new</op:operator> <name pos:line="61" pos:column="32">SessionModel</name> <block pos:line="61" pos:column="45">{ <expr><name pos:line="61" pos:column="47">Key</name> <op:operator pos:line="61" pos:column="51">=</op:operator> <name pos:line="61" pos:column="53">key</name></expr><op:operator pos:line="61" pos:column="56">,</op:operator> <expr><name pos:line="61" pos:column="58">Type</name> <op:operator pos:line="61" pos:column="63">=</op:operator> <name pos:line="61" pos:column="65">type</name></expr><op:operator pos:line="61" pos:column="69">,</op:operator> <expr><name pos:line="61" pos:column="71">Value</name> <op:operator pos:line="61" pos:column="77">=</op:operator> <name pos:line="61" pos:column="79">value</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

            <return pos:line="64" pos:column="13">return <expr><name pos:line="64" pos:column="20">result</name></expr>;</return>
        }</block></function>
    }</block></class> 
}</block></namespace>
</unit>
