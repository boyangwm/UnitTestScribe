<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Mvc\AlternateType\ControllerFactoryCreateControllerShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Web</name><op:operator pos:line="3" pos:column="17">.</op:operator><name pos:line="3" pos:column="18">Mvc</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name><op:operator pos:line="4" pos:column="17">.</op:operator><name pos:line="4" pos:column="18">Mvc</name><op:operator pos:line="4" pos:column="21">.</op:operator><name pos:line="4" pos:column="22">Async</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Web</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Routing</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Mvc</name><op:operator pos:line="7" pos:column="18">.</op:operator><name pos:line="7" pos:column="19">AlternateType</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Glimpse</name><op:operator pos:line="8" pos:column="14">.</op:operator><name pos:line="8" pos:column="15">Test</name><op:operator pos:line="8" pos:column="19">.</op:operator><name pos:line="8" pos:column="20">Common</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Glimpse</name><op:operator pos:line="9" pos:column="14">.</op:operator><name pos:line="9" pos:column="15">Test</name><op:operator pos:line="9" pos:column="19">.</op:operator><name pos:line="9" pos:column="20">Mvc</name><op:operator pos:line="9" pos:column="23">.</op:operator><name pos:line="9" pos:column="24">TestDoubles</name></name>;</using>
<using pos:line="10" pos:column="1">using <name pos:line="10" pos:column="7">Moq</name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Ploeh</name><op:operator pos:line="11" pos:column="12">.</op:operator><name pos:line="11" pos:column="13">AutoFixture</name><op:operator pos:line="11" pos:column="24">.</op:operator><name pos:line="11" pos:column="25">Xunit</name></name>;</using>
<using pos:line="12" pos:column="1">using <name pos:line="12" pos:column="7">Xunit</name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">Xunit</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">Extensions</name></name>;</using>

<namespace pos:line="15" pos:column="1">namespace <name><name pos:line="15" pos:column="11">Glimpse</name><op:operator pos:line="15" pos:column="18">.</op:operator><name pos:line="15" pos:column="19">Test</name><op:operator pos:line="15" pos:column="23">.</op:operator><name pos:line="15" pos:column="24">Mvc</name><op:operator pos:line="15" pos:column="27">.</op:operator><name pos:line="15" pos:column="28">AlternateType</name></name>
<block pos:line="16" pos:column="1">{
    <class><specifier pos:line="17" pos:column="5">public</specifier> class <name pos:line="17" pos:column="18">ControllerFactoryCreateControllerShould</name>
    <block pos:line="18" pos:column="5">{
        <function><type><attribute pos:line="19" pos:column="9">[<expr><name pos:line="19" pos:column="10">Theory</name></expr><op:operator pos:line="19" pos:column="16">,</op:operator> <expr><name pos:line="19" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">void</name></type> <name pos:line="20" pos:column="21">SetMethodToImplement</name><parameter_list pos:line="20" pos:column="41">(<param><decl><type><name><name pos:line="20" pos:column="42">ControllerFactory</name><op:operator pos:line="20" pos:column="59">.</op:operator><name pos:line="20" pos:column="60">CreateController</name></name></type> <name pos:line="20" pos:column="77">sut</name></decl></param>)</parameter_list>
        <block pos:line="21" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">var</name></type> <name pos:line="22" pos:column="17">result</name> <init pos:line="22" pos:column="24">= <expr><name><name pos:line="22" pos:column="26">sut</name><op:operator pos:line="22" pos:column="29">.</op:operator><name pos:line="22" pos:column="30">MethodToImplement</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="24" pos:column="13">Assert</name><op:operator pos:line="24" pos:column="19">.</op:operator><name pos:line="24" pos:column="20">Equal</name></name><argument_list pos:line="24" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="24" pos:column="26">"CreateController"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="46">result</name><op:operator pos:line="24" pos:column="52">.</op:operator><name pos:line="24" pos:column="53">Name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="27" pos:column="9">[<expr><name pos:line="27" pos:column="10">Theory</name></expr><op:operator pos:line="27" pos:column="16">,</op:operator> <expr><name pos:line="27" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="28" pos:column="9">public</specifier> <name pos:line="28" pos:column="16">void</name></type> <name pos:line="28" pos:column="21">ProceedImmediatlyIfRuntimePolicyOff</name><parameter_list pos:line="28" pos:column="56">(<param><decl><type><name><name pos:line="28" pos:column="57">ControllerFactory</name><op:operator pos:line="28" pos:column="74">.</op:operator><name pos:line="28" pos:column="75">CreateController</name></name></type> <name pos:line="28" pos:column="92">sut</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="97">IAlternateMethodContext</name></type> <name pos:line="28" pos:column="121">context</name></decl></param>)</parameter_list>
        <block pos:line="29" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">context</name><op:operator pos:line="30" pos:column="20">.</op:operator><name pos:line="30" pos:column="21">Setup</name></name><argument_list pos:line="30" pos:column="26">(<argument><expr><lambda><name pos:line="30" pos:column="27">c</name> <op:operator pos:line="30" pos:column="29">=&gt;</op:operator> <name><name pos:line="30" pos:column="32">c</name><op:operator pos:line="30" pos:column="33">.</op:operator><name pos:line="30" pos:column="34">RuntimePolicyStrategy</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="30" pos:column="56">.</op:operator><call><name pos:line="30" pos:column="57">Returns</name><argument_list pos:line="30" pos:column="64">(<argument><expr><lambda><parameter_list pos:line="30" pos:column="65">()</parameter_list> <op:operator pos:line="30" pos:column="68">=&gt;</op:operator> <name><name pos:line="30" pos:column="71">RuntimePolicy</name><op:operator pos:line="30" pos:column="84">.</op:operator><name pos:line="30" pos:column="85">Off</name></name></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">sut</name><op:operator pos:line="32" pos:column="16">.</op:operator><name pos:line="32" pos:column="17">NewImplementation</name></name><argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="34" pos:column="13">context</name><op:operator pos:line="34" pos:column="20">.</op:operator><name pos:line="34" pos:column="21">Verify</name></name><argument_list pos:line="34" pos:column="27">(<argument><expr><lambda><name pos:line="34" pos:column="28">c</name> <op:operator pos:line="34" pos:column="30">=&gt;</op:operator> <call><name><name pos:line="34" pos:column="33">c</name><op:operator pos:line="34" pos:column="34">.</op:operator><name pos:line="34" pos:column="35">Proceed</name></name><argument_list pos:line="34" pos:column="42">()</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="35" pos:column="13">context</name><op:operator pos:line="35" pos:column="20">.</op:operator><name pos:line="35" pos:column="21">MessageBroker</name><op:operator pos:line="35" pos:column="34">.</op:operator><name pos:line="35" pos:column="35">Verify</name></name><argument_list pos:line="35" pos:column="41">(<argument><expr><lambda><name pos:line="35" pos:column="42">mb</name> <op:operator pos:line="35" pos:column="45">=&gt;</op:operator> <call><name><name pos:line="35" pos:column="48">mb</name><op:operator pos:line="35" pos:column="50">.</op:operator><name pos:line="35" pos:column="51">Publish</name></name><argument_list pos:line="35" pos:column="58">(<argument><expr><call><name><name pos:line="35" pos:column="59">It</name><op:operator pos:line="35" pos:column="61">.</op:operator><name><name pos:line="35" pos:column="62">IsAny</name><argument_list pos:line="35" pos:column="67">&lt;<argument><name><name pos:line="35" pos:column="68">ControllerFactory</name><op:operator pos:line="35" pos:column="85">.</op:operator><name pos:line="35" pos:column="86">CreateController</name><op:operator pos:line="35" pos:column="102">.</op:operator><name pos:line="35" pos:column="103">Message</name></name></argument>&gt;</argument_list></name></name><argument_list pos:line="35" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="35" pos:column="116">Times</name><op:operator pos:line="35" pos:column="121">.</op:operator><name pos:line="35" pos:column="122">Never</name></name><argument_list pos:line="35" pos:column="127">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="38" pos:column="9">[<expr><name pos:line="38" pos:column="10">Theory</name></expr><op:operator pos:line="38" pos:column="16">,</op:operator> <expr><name pos:line="38" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="39" pos:column="9">public</specifier> <name pos:line="39" pos:column="16">void</name></type> <name pos:line="39" pos:column="21">PublishMessageIfRuntimePolicyOn</name><parameter_list pos:line="39" pos:column="52">(<param><decl><type><name><name pos:line="39" pos:column="53">ControllerFactory</name><op:operator pos:line="39" pos:column="70">.</op:operator><name pos:line="39" pos:column="71">CreateController</name></name></type> <name pos:line="39" pos:column="88">sut</name></decl></param>, <param><decl><type><name pos:line="39" pos:column="93">IAlternateMethodContext</name></type> <name pos:line="39" pos:column="117">context</name></decl></param>, <param><decl><type><name pos:line="39" pos:column="126">RequestContext</name></type> <name pos:line="39" pos:column="141">requestContext</name></decl></param>, <param><decl><type><name pos:line="39" pos:column="157">string</name></type> <name pos:line="39" pos:column="164">controllerName</name></decl></param>)</parameter_list>
        <block pos:line="40" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="41" pos:column="13">context</name><op:operator pos:line="41" pos:column="20">.</op:operator><name pos:line="41" pos:column="21">Setup</name></name><argument_list pos:line="41" pos:column="26">(<argument><expr><lambda><name pos:line="41" pos:column="27">c</name> <op:operator pos:line="41" pos:column="29">=&gt;</op:operator> <name><name pos:line="41" pos:column="32">c</name><op:operator pos:line="41" pos:column="33">.</op:operator><name pos:line="41" pos:column="34">Arguments</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="41" pos:column="44">.</op:operator><call><name pos:line="41" pos:column="45">Returns</name><argument_list pos:line="41" pos:column="52">(<argument><expr><op:operator pos:line="41" pos:column="53">new</op:operator> <name><name pos:line="41" pos:column="57">object</name><index pos:line="41" pos:column="63">[]</index></name> <block pos:line="41" pos:column="66">{ <expr><name pos:line="41" pos:column="68">requestContext</name></expr><op:operator pos:line="41" pos:column="82">,</op:operator> <expr><name pos:line="41" pos:column="84">controllerName</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="43" pos:column="13">sut</name><op:operator pos:line="43" pos:column="16">.</op:operator><name pos:line="43" pos:column="17">NewImplementation</name></name><argument_list pos:line="43" pos:column="34">(<argument><expr><name pos:line="43" pos:column="35">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="45" pos:column="13">context</name><op:operator pos:line="45" pos:column="20">.</op:operator><name pos:line="45" pos:column="21">MessageBroker</name><op:operator pos:line="45" pos:column="34">.</op:operator><name pos:line="45" pos:column="35">Verify</name></name><argument_list pos:line="45" pos:column="41">(<argument><expr><lambda><name pos:line="45" pos:column="42">mb</name> <op:operator pos:line="45" pos:column="45">=&gt;</op:operator> <call><name><name pos:line="45" pos:column="48">mb</name><op:operator pos:line="45" pos:column="50">.</op:operator><name pos:line="45" pos:column="51">Publish</name></name><argument_list pos:line="45" pos:column="58">(<argument><expr><call><name><name pos:line="45" pos:column="59">It</name><op:operator pos:line="45" pos:column="61">.</op:operator><name><name pos:line="45" pos:column="62">IsAny</name><argument_list pos:line="45" pos:column="67">&lt;<argument><name><name pos:line="45" pos:column="68">ControllerFactory</name><op:operator pos:line="45" pos:column="85">.</op:operator><name pos:line="45" pos:column="86">CreateController</name><op:operator pos:line="45" pos:column="102">.</op:operator><name pos:line="45" pos:column="103">Message</name></name></argument>&gt;</argument_list></name></name><argument_list pos:line="45" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="48" pos:column="9">[<expr><name pos:line="48" pos:column="10">Theory</name></expr><op:operator pos:line="48" pos:column="16">,</op:operator> <expr><name pos:line="48" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="49" pos:column="9">public</specifier> <name pos:line="49" pos:column="16">void</name></type> <name pos:line="49" pos:column="21">ProxyActionInvokerIfAsyncControllerFound</name><parameter_list pos:line="49" pos:column="61">(<param><decl><type><attribute pos:line="49" pos:column="62">[<expr><name pos:line="49" pos:column="63">Frozen</name></expr>]</attribute> <name pos:line="49" pos:column="71">IProxyFactory</name></type> <name pos:line="49" pos:column="85">proxyFactory</name></decl></param>, <param><decl><type><name><name pos:line="49" pos:column="99">ControllerFactory</name><op:operator pos:line="49" pos:column="116">.</op:operator><name pos:line="49" pos:column="117">CreateController</name></name></type> <name pos:line="49" pos:column="134">sut</name></decl></param>, <param><decl><type><name pos:line="49" pos:column="139">IAlternateMethodContext</name></type> <name pos:line="49" pos:column="163">context</name></decl></param>, <param><decl><type><name pos:line="49" pos:column="172">RequestContext</name></type> <name pos:line="49" pos:column="187">requestContext</name></decl></param>, <param><decl><type><name pos:line="49" pos:column="203">string</name></type> <name pos:line="49" pos:column="210">controllerName</name></decl></param>)</parameter_list>
        <block pos:line="50" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="51" pos:column="13">context</name><op:operator pos:line="51" pos:column="20">.</op:operator><name pos:line="51" pos:column="21">Setup</name></name><argument_list pos:line="51" pos:column="26">(<argument><expr><lambda><name pos:line="51" pos:column="27">c</name> <op:operator pos:line="51" pos:column="29">=&gt;</op:operator> <name><name pos:line="51" pos:column="32">c</name><op:operator pos:line="51" pos:column="33">.</op:operator><name pos:line="51" pos:column="34">ReturnValue</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="51" pos:column="46">.</op:operator><call><name pos:line="51" pos:column="47">Returns</name><argument_list pos:line="51" pos:column="54">(<argument><expr><op:operator pos:line="51" pos:column="55">new</op:operator> <call><name pos:line="51" pos:column="59">DummyAsyncController</name><argument_list pos:line="51" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">context</name><op:operator pos:line="52" pos:column="20">.</op:operator><name pos:line="52" pos:column="21">Setup</name></name><argument_list pos:line="52" pos:column="26">(<argument><expr><lambda><name pos:line="52" pos:column="27">c</name> <op:operator pos:line="52" pos:column="29">=&gt;</op:operator> <name><name pos:line="52" pos:column="32">c</name><op:operator pos:line="52" pos:column="33">.</op:operator><name pos:line="52" pos:column="34">Arguments</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="52" pos:column="44">.</op:operator><call><name pos:line="52" pos:column="45">Returns</name><argument_list pos:line="52" pos:column="52">(<argument><expr><op:operator pos:line="52" pos:column="53">new</op:operator> <name><name pos:line="52" pos:column="57">object</name><index pos:line="52" pos:column="63">[]</index></name> <block pos:line="52" pos:column="66">{ <expr><name pos:line="52" pos:column="68">requestContext</name></expr><op:operator pos:line="52" pos:column="82">,</op:operator> <expr><name pos:line="52" pos:column="84">controllerName</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="53" pos:column="13">proxyFactory</name><op:operator pos:line="53" pos:column="25">.</op:operator><name pos:line="53" pos:column="26">Setup</name></name><argument_list pos:line="53" pos:column="31">(<argument><expr><lambda><name pos:line="53" pos:column="32">p</name> <op:operator pos:line="53" pos:column="34">=&gt;</op:operator> <call><name><name pos:line="53" pos:column="37">p</name><op:operator pos:line="53" pos:column="38">.</op:operator><name pos:line="53" pos:column="39">IsWrapClassEligible</name></name><argument_list pos:line="53" pos:column="58">(<argument><expr><call><name><name pos:line="53" pos:column="59">It</name><op:operator pos:line="53" pos:column="61">.</op:operator><name><name pos:line="53" pos:column="62">IsAny</name><argument_list pos:line="53" pos:column="67">&lt;<argument><name pos:line="53" pos:column="68">Type</name></argument>&gt;</argument_list></name></name><argument_list pos:line="53" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="53" pos:column="77">.</op:operator><call><name pos:line="53" pos:column="78">Returns</name><argument_list pos:line="53" pos:column="85">(<argument><expr><lit:literal type="boolean" pos:line="53" pos:column="86">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="55" pos:column="13">sut</name><op:operator pos:line="55" pos:column="16">.</op:operator><name pos:line="55" pos:column="17">NewImplementation</name></name><argument_list pos:line="55" pos:column="34">(<argument><expr><name pos:line="55" pos:column="35">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="57" pos:column="13">proxyFactory</name><op:operator pos:line="57" pos:column="25">.</op:operator><name pos:line="57" pos:column="26">Verify</name></name><argument_list pos:line="57" pos:column="32">(<argument><expr><lambda><name pos:line="57" pos:column="33">p</name> <op:operator pos:line="57" pos:column="35">=&gt;</op:operator> <call><name><name pos:line="57" pos:column="38">p</name><op:operator pos:line="57" pos:column="39">.</op:operator><name><name pos:line="57" pos:column="40">WrapClass</name><argument_list pos:line="57" pos:column="49">&lt;<argument><name pos:line="57" pos:column="50">AsyncControllerActionInvoker</name></argument>&gt;</argument_list></name></name><argument_list pos:line="57" pos:column="79">(<argument><expr><call><name><name pos:line="57" pos:column="80">It</name><op:operator pos:line="57" pos:column="82">.</op:operator><name><name pos:line="57" pos:column="83">IsAny</name><argument_list pos:line="57" pos:column="88">&lt;<argument><name pos:line="57" pos:column="89">AsyncControllerActionInvoker</name></argument>&gt;</argument_list></name></name><argument_list pos:line="57" pos:column="118">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="57" pos:column="122">It</name><op:operator pos:line="57" pos:column="124">.</op:operator><name><name pos:line="57" pos:column="125">IsAny</name><argument_list pos:line="57" pos:column="130">&lt;<argument><name><name pos:line="57" pos:column="131">IEnumerable</name><argument_list pos:line="57" pos:column="142">&lt;<argument><name pos:line="57" pos:column="143">IAlternateMethod</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="57" pos:column="161">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="57" pos:column="165">It</name><op:operator pos:line="57" pos:column="167">.</op:operator><name><name pos:line="57" pos:column="168">IsAny</name><argument_list pos:line="57" pos:column="173">&lt;<argument><name><name pos:line="57" pos:column="174">IEnumerable</name><argument_list pos:line="57" pos:column="185">&lt;<argument><name pos:line="57" pos:column="186">object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="57" pos:column="194">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="60" pos:column="9">[<expr><call><name pos:line="60" pos:column="10">Theory</name><argument_list pos:line="60" pos:column="16">(<argument><expr><name pos:line="60" pos:column="17">Skip</name> <op:operator pos:line="60" pos:column="22">=</op:operator> <lit:literal type="string" pos:line="60" pos:column="24">"Fix this along with IActionInvoker strategy"</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="60" pos:column="70">,</op:operator> <expr><name pos:line="60" pos:column="72">AutoMock</name></expr>]</attribute>
        <specifier pos:line="61" pos:column="9">public</specifier> <name pos:line="61" pos:column="16">void</name></type> <name pos:line="61" pos:column="21">ProxyActionInvokerIfControllerFound</name><parameter_list pos:line="61" pos:column="56">(<param><decl><type><attribute pos:line="61" pos:column="57">[<expr><name pos:line="61" pos:column="58">Frozen</name></expr>]</attribute> <name pos:line="61" pos:column="66">IProxyFactory</name></type> <name pos:line="61" pos:column="80">proxyFactory</name></decl></param>, <param><decl><type><name><name pos:line="61" pos:column="94">ControllerFactory</name><op:operator pos:line="61" pos:column="111">.</op:operator><name pos:line="61" pos:column="112">CreateController</name></name></type> <name pos:line="61" pos:column="129">sut</name></decl></param>, <param><decl><type><name pos:line="61" pos:column="134">IAlternateMethodContext</name></type> <name pos:line="61" pos:column="158">context</name></decl></param>, <param><decl><type><name pos:line="61" pos:column="167">RequestContext</name></type> <name pos:line="61" pos:column="182">requestContext</name></decl></param>, <param><decl><type><name pos:line="61" pos:column="198">string</name></type> <name pos:line="61" pos:column="205">controllerName</name></decl></param>)</parameter_list>
        <block pos:line="62" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="63" pos:column="13">context</name><op:operator pos:line="63" pos:column="20">.</op:operator><name pos:line="63" pos:column="21">Setup</name></name><argument_list pos:line="63" pos:column="26">(<argument><expr><lambda><name pos:line="63" pos:column="27">c</name> <op:operator pos:line="63" pos:column="29">=&gt;</op:operator> <name><name pos:line="63" pos:column="32">c</name><op:operator pos:line="63" pos:column="33">.</op:operator><name pos:line="63" pos:column="34">ReturnValue</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="63" pos:column="46">.</op:operator><call><name pos:line="63" pos:column="47">Returns</name><argument_list pos:line="63" pos:column="54">(<argument><expr><op:operator pos:line="63" pos:column="55">new</op:operator> <call><name pos:line="63" pos:column="59">DummyController</name><argument_list pos:line="63" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="64" pos:column="13">context</name><op:operator pos:line="64" pos:column="20">.</op:operator><name pos:line="64" pos:column="21">Setup</name></name><argument_list pos:line="64" pos:column="26">(<argument><expr><lambda><name pos:line="64" pos:column="27">c</name> <op:operator pos:line="64" pos:column="29">=&gt;</op:operator> <name><name pos:line="64" pos:column="32">c</name><op:operator pos:line="64" pos:column="33">.</op:operator><name pos:line="64" pos:column="34">Arguments</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="64" pos:column="44">.</op:operator><call><name pos:line="64" pos:column="45">Returns</name><argument_list pos:line="64" pos:column="52">(<argument><expr><op:operator pos:line="64" pos:column="53">new</op:operator> <name><name pos:line="64" pos:column="57">object</name><index pos:line="64" pos:column="63">[]</index></name> <block pos:line="64" pos:column="66">{ <expr><name pos:line="64" pos:column="68">requestContext</name></expr><op:operator pos:line="64" pos:column="82">,</op:operator> <expr><name pos:line="64" pos:column="84">controllerName</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="65" pos:column="13">proxyFactory</name><op:operator pos:line="65" pos:column="25">.</op:operator><name pos:line="65" pos:column="26">Setup</name></name><argument_list pos:line="65" pos:column="31">(<argument><expr><lambda><name pos:line="65" pos:column="32">p</name> <op:operator pos:line="65" pos:column="34">=&gt;</op:operator> <call><name><name pos:line="65" pos:column="37">p</name><op:operator pos:line="65" pos:column="38">.</op:operator><name><name pos:line="65" pos:column="39">IsWrapInterfaceEligible</name><argument_list pos:line="65" pos:column="62">&lt;<argument><name pos:line="65" pos:column="63">IActionInvoker</name></argument>&gt;</argument_list></name></name><argument_list pos:line="65" pos:column="78">(<argument><expr><call><name><name pos:line="65" pos:column="79">It</name><op:operator pos:line="65" pos:column="81">.</op:operator><name><name pos:line="65" pos:column="82">IsAny</name><argument_list pos:line="65" pos:column="87">&lt;<argument><name pos:line="65" pos:column="88">Type</name></argument>&gt;</argument_list></name></name><argument_list pos:line="65" pos:column="93">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="65" pos:column="97">.</op:operator><call><name pos:line="65" pos:column="98">Returns</name><argument_list pos:line="65" pos:column="105">(<argument><expr><lit:literal type="boolean" pos:line="65" pos:column="106">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="67" pos:column="13">sut</name><op:operator pos:line="67" pos:column="16">.</op:operator><name pos:line="67" pos:column="17">NewImplementation</name></name><argument_list pos:line="67" pos:column="34">(<argument><expr><name pos:line="67" pos:column="35">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="69" pos:column="13">proxyFactory</name><op:operator pos:line="69" pos:column="25">.</op:operator><name pos:line="69" pos:column="26">Verify</name></name><argument_list pos:line="69" pos:column="32">(<argument><expr><lambda><name pos:line="69" pos:column="33">p</name> <op:operator pos:line="69" pos:column="35">=&gt;</op:operator> <call><name><name pos:line="69" pos:column="38">p</name><op:operator pos:line="69" pos:column="39">.</op:operator><name pos:line="69" pos:column="40">WrapInterface</name></name><argument_list pos:line="69" pos:column="53">(<argument><expr><call><name><name pos:line="69" pos:column="54">It</name><op:operator pos:line="69" pos:column="56">.</op:operator><name><name pos:line="69" pos:column="57">IsAny</name><argument_list pos:line="69" pos:column="62">&lt;<argument><name pos:line="69" pos:column="63">ControllerActionInvoker</name></argument>&gt;</argument_list></name></name><argument_list pos:line="69" pos:column="87">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="69" pos:column="91">It</name><op:operator pos:line="69" pos:column="93">.</op:operator><name><name pos:line="69" pos:column="94">IsAny</name><argument_list pos:line="69" pos:column="99">&lt;<argument><name><name pos:line="69" pos:column="100">IEnumerable</name><argument_list pos:line="69" pos:column="111">&lt;<argument><name pos:line="69" pos:column="112">IAlternateMethod</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="69" pos:column="130">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="69" pos:column="134">It</name><op:operator pos:line="69" pos:column="136">.</op:operator><name><name pos:line="69" pos:column="137">IsAny</name><argument_list pos:line="69" pos:column="142">&lt;<argument><name><name pos:line="69" pos:column="143">IEnumerable</name><argument_list pos:line="69" pos:column="154">&lt;<argument><name pos:line="69" pos:column="155">object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="69" pos:column="163">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
