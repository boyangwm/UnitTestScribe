<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.AspNet\Policy\LocalPolicyShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Web</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">AspNet</name><op:operator pos:line="3" pos:column="21">.</op:operator><name pos:line="3" pos:column="22">Policy</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name></name>;</using>
<using pos:line="6" pos:column="1">using <name pos:line="6" pos:column="7">Moq</name>;</using>
<using pos:line="7" pos:column="1">using <name pos:line="7" pos:column="7">Xunit</name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Xunit</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">Extensions</name></name>;</using>

<namespace pos:line="10" pos:column="1">namespace <name><name pos:line="10" pos:column="11">Glimpse</name><op:operator pos:line="10" pos:column="18">.</op:operator><name pos:line="10" pos:column="19">Test</name><op:operator pos:line="10" pos:column="23">.</op:operator><name pos:line="10" pos:column="24">AspNet</name><op:operator pos:line="10" pos:column="30">.</op:operator><name pos:line="10" pos:column="31">Policy</name></name>
<block pos:line="11" pos:column="1">{
    <class><specifier pos:line="12" pos:column="5">public</specifier> class <name pos:line="12" pos:column="18">LocalPolicyShould</name>
    <block pos:line="13" pos:column="5">{
        <function><type><attribute pos:line="14" pos:column="9">[<expr><name pos:line="14" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="15" pos:column="9">public</specifier> <name pos:line="15" pos:column="16">void</name></type> <name pos:line="15" pos:column="21">ExecuteAsEarlyAsPossible</name><parameter_list pos:line="15" pos:column="45">()</parameter_list>
        <block pos:line="16" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="17" pos:column="13">var</name></type> <name pos:line="17" pos:column="17">policy</name> <init pos:line="17" pos:column="24">= <expr><op:operator pos:line="17" pos:column="26">new</op:operator> <call><name pos:line="17" pos:column="30">LocalPolicy</name><argument_list pos:line="17" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="18" pos:column="13">Assert</name><op:operator pos:line="18" pos:column="19">.</op:operator><name pos:line="18" pos:column="20">Equal</name></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name><name pos:line="18" pos:column="26">RuntimeEvent</name><op:operator pos:line="18" pos:column="38">.</op:operator><name pos:line="18" pos:column="39">BeginRequest</name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="53">policy</name><op:operator pos:line="18" pos:column="59">.</op:operator><name pos:line="18" pos:column="60">ExecuteOn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="21" pos:column="9">[<expr><name pos:line="21" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="22" pos:column="9">public</specifier> <name pos:line="22" pos:column="16">void</name></type> <name pos:line="22" pos:column="21">ThrowExceptionWithNullPolicyContext</name><parameter_list pos:line="22" pos:column="56">()</parameter_list>
        <block pos:line="23" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="24" pos:column="13">var</name></type> <name pos:line="24" pos:column="17">policy</name> <init pos:line="24" pos:column="24">= <expr><op:operator pos:line="24" pos:column="26">new</op:operator> <call><name pos:line="24" pos:column="30">LocalPolicy</name><argument_list pos:line="24" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">Assert</name><op:operator pos:line="26" pos:column="19">.</op:operator><name><name pos:line="26" pos:column="20">Throws</name><argument_list pos:line="26" pos:column="26">&lt;<argument><name pos:line="26" pos:column="27">ArgumentNullException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="26" pos:column="49">(<argument><expr><lambda><parameter_list pos:line="26" pos:column="50">()</parameter_list> <op:operator pos:line="26" pos:column="53">=&gt;</op:operator> <call><name><name pos:line="26" pos:column="56">policy</name><op:operator pos:line="26" pos:column="62">.</op:operator><name pos:line="26" pos:column="63">Execute</name></name><argument_list pos:line="26" pos:column="70">(<argument><expr><name pos:line="26" pos:column="71">null</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="29" pos:column="9">[<expr><name pos:line="29" pos:column="10">Theory</name></expr>]</attribute>
        <attribute pos:line="30" pos:column="9">[<expr><call><name pos:line="30" pos:column="10">InlineData</name><argument_list pos:line="30" pos:column="20">(<argument><expr><lit:literal type="boolean" pos:line="30" pos:column="21">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="27">RuntimePolicy</name><op:operator pos:line="30" pos:column="40">.</op:operator><name pos:line="30" pos:column="41">On</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
        <attribute pos:line="31" pos:column="9">[<expr><call><name pos:line="31" pos:column="10">InlineData</name><argument_list pos:line="31" pos:column="20">(<argument><expr><lit:literal type="boolean" pos:line="31" pos:column="21">false</lit:literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="28">RuntimePolicy</name><op:operator pos:line="31" pos:column="41">.</op:operator><name pos:line="31" pos:column="42">Off</name></name></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="32" pos:column="9">public</specifier> <name pos:line="32" pos:column="16">void</name></type> <name pos:line="32" pos:column="21">LeaveGlimpseOnWithLocalRequest</name><parameter_list pos:line="32" pos:column="51">(<param><decl><type><name pos:line="32" pos:column="52">bool</name></type> <name pos:line="32" pos:column="57">isLocal</name></decl></param>, <param><decl><type><name pos:line="32" pos:column="66">RuntimePolicy</name></type> <name pos:line="32" pos:column="80">expectedPolicy</name></decl></param>)</parameter_list>
        <block pos:line="33" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="34" pos:column="13">var</name></type> <name pos:line="34" pos:column="17">httpContextMock</name> <init pos:line="34" pos:column="33">= <expr><op:operator pos:line="34" pos:column="35">new</op:operator> <call><name><name pos:line="34" pos:column="39">Mock</name><argument_list pos:line="34" pos:column="43">&lt;<argument><name pos:line="34" pos:column="44">HttpContextBase</name></argument>&gt;</argument_list></name><argument_list pos:line="34" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="35" pos:column="13">httpContextMock</name><op:operator pos:line="35" pos:column="28">.</op:operator><name pos:line="35" pos:column="29">Setup</name></name><argument_list pos:line="35" pos:column="34">(<argument><expr><lambda><name pos:line="35" pos:column="35">m</name> <op:operator pos:line="35" pos:column="37">=&gt;</op:operator> <name><name pos:line="35" pos:column="40">m</name><op:operator pos:line="35" pos:column="41">.</op:operator><name pos:line="35" pos:column="42">Request</name><op:operator pos:line="35" pos:column="49">.</op:operator><name pos:line="35" pos:column="50">IsLocal</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="35" pos:column="58">.</op:operator><call><name pos:line="35" pos:column="59">Returns</name><argument_list pos:line="35" pos:column="66">(<argument><expr><name pos:line="35" pos:column="67">isLocal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="37" pos:column="13">var</name></type> <name pos:line="37" pos:column="17">policyContextMock</name> <init pos:line="37" pos:column="35">= <expr><op:operator pos:line="37" pos:column="37">new</op:operator> <call><name><name pos:line="37" pos:column="41">Mock</name><argument_list pos:line="37" pos:column="45">&lt;<argument><name pos:line="37" pos:column="46">IRuntimePolicyContext</name></argument>&gt;</argument_list></name><argument_list pos:line="37" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">policyContextMock</name><op:operator pos:line="38" pos:column="30">.</op:operator><name pos:line="38" pos:column="31">Setup</name></name><argument_list pos:line="38" pos:column="36">(<argument><expr><lambda><name pos:line="38" pos:column="37">m</name> <op:operator pos:line="38" pos:column="39">=&gt;</op:operator> <call><name><name pos:line="38" pos:column="42">m</name><op:operator pos:line="38" pos:column="43">.</op:operator><name><name pos:line="38" pos:column="44">GetRequestContext</name><argument_list pos:line="38" pos:column="61">&lt;<argument><name pos:line="38" pos:column="62">HttpContextBase</name></argument>&gt;</argument_list></name></name><argument_list pos:line="38" pos:column="78">()</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="38" pos:column="81">.</op:operator><call><name pos:line="38" pos:column="82">Returns</name><argument_list pos:line="38" pos:column="89">(<argument><expr><name><name pos:line="38" pos:column="90">httpContextMock</name><op:operator pos:line="38" pos:column="105">.</op:operator><name pos:line="38" pos:column="106">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="40" pos:column="13">var</name></type> <name pos:line="40" pos:column="17">policy</name> <init pos:line="40" pos:column="24">= <expr><op:operator pos:line="40" pos:column="26">new</op:operator> <call><name pos:line="40" pos:column="30">LocalPolicy</name><argument_list pos:line="40" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="41" pos:column="13">var</name></type> <name pos:line="41" pos:column="17">result</name> <init pos:line="41" pos:column="24">= <expr><call><name><name pos:line="41" pos:column="26">policy</name><op:operator pos:line="41" pos:column="32">.</op:operator><name pos:line="41" pos:column="33">Execute</name></name><argument_list pos:line="41" pos:column="40">(<argument><expr><name><name pos:line="41" pos:column="41">policyContextMock</name><op:operator pos:line="41" pos:column="58">.</op:operator><name pos:line="41" pos:column="59">Object</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="43" pos:column="13">Assert</name><op:operator pos:line="43" pos:column="19">.</op:operator><name pos:line="43" pos:column="20">Equal</name></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">expectedPolicy</name></expr></argument>, <argument><expr><name pos:line="43" pos:column="42">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
