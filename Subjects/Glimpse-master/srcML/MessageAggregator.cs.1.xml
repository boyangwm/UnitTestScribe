<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Ado\Model\MessageAggregator.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Linq</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Ado</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">Message</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Glimpse</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">Ado</name><op:operator pos:line="5" pos:column="22">.</op:operator><name pos:line="5" pos:column="23">Model</name></name>
<block pos:line="6" pos:column="1">{
    <class><specifier pos:line="7" pos:column="5">public</specifier> class <name pos:line="7" pos:column="18">MessageAggregator</name>
    <block pos:line="8" pos:column="5">{
        <constructor><specifier pos:line="9" pos:column="9">public</specifier> <name pos:line="9" pos:column="16">MessageAggregator</name><parameter_list pos:line="9" pos:column="33">(<param><decl><type><name><name pos:line="9" pos:column="34">IList</name><argument_list pos:line="9" pos:column="39">&lt;<argument><name pos:line="9" pos:column="40">AdoMessage</name></argument>&gt;</argument_list></name></type> <name pos:line="9" pos:column="52">messages</name></decl></param>)</parameter_list>
        <block pos:line="10" pos:column="9">{
            <expr_stmt><expr><name pos:line="11" pos:column="13">Messages</name> <op:operator pos:line="11" pos:column="22">=</op:operator> <name pos:line="11" pos:column="24">messages</name></expr>;</expr_stmt>           
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">private</specifier> <name><name pos:line="14" pos:column="17">IList</name><argument_list pos:line="14" pos:column="22">&lt;<argument><name pos:line="14" pos:column="23">AdoMessage</name></argument>&gt;</argument_list></name></type> <name pos:line="14" pos:column="35">Messages</name> <block pos:line="14" pos:column="44">{ <function_decl><name pos:line="14" pos:column="46">get</name>;</function_decl> <function_decl><name pos:line="14" pos:column="51">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">private</specifier> <name pos:line="16" pos:column="17">QueryMetadata</name></type> <name pos:line="16" pos:column="31">Metadata</name> <block pos:line="16" pos:column="40">{ <function_decl><name pos:line="16" pos:column="42">get</name>;</function_decl> <function_decl><name pos:line="16" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="18" pos:column="9">public</specifier> <name pos:line="18" pos:column="16">QueryMetadata</name></type> <name pos:line="18" pos:column="30">Aggregate</name><parameter_list pos:line="18" pos:column="39">()</parameter_list>
        <block pos:line="19" pos:column="9">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">Metadata</name> <op:operator pos:line="20" pos:column="22">=</op:operator> <op:operator pos:line="20" pos:column="24">new</op:operator> <call><name pos:line="20" pos:column="28">QueryMetadata</name><argument_list pos:line="20" pos:column="41">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name pos:line="22" pos:column="13">AggregateConnectionStart</name><argument_list pos:line="22" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">AggregateConnectionClosed</name><argument_list pos:line="23" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">AggregateCommandErrors</name><argument_list pos:line="24" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">AggregateCommandDurations</name><argument_list pos:line="25" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">AggregateCommandExecuted</name><argument_list pos:line="26" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">AggregateCommandRowCounts</name><argument_list pos:line="27" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">AggregateTransactionBegan</name><argument_list pos:line="28" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">AggregateTransactionEnd</name><argument_list pos:line="29" pos:column="36">()</argument_list></call></expr>;</expr_stmt>

            <return pos:line="31" pos:column="13">return <expr><name pos:line="31" pos:column="20">Metadata</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="34" pos:column="9">private</specifier> <name pos:line="34" pos:column="17">void</name></type> <name pos:line="34" pos:column="22">AggregateCommandRowCounts</name><parameter_list pos:line="34" pos:column="47">()</parameter_list>
        <block pos:line="35" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="36" pos:column="13">var</name></type> <name pos:line="36" pos:column="17">messages</name> <init pos:line="36" pos:column="26">= <expr><call><name><name pos:line="36" pos:column="28">Messages</name><op:operator pos:line="36" pos:column="36">.</op:operator><name><name pos:line="36" pos:column="37">OfType</name><argument_list pos:line="36" pos:column="43">&lt;<argument><name pos:line="36" pos:column="44">CommandRowCountMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="36" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="37" pos:column="13">foreach (<init><decl><type><name pos:line="37" pos:column="22">var</name></type> <name pos:line="37" pos:column="26">message</name> <range pos:line="37" pos:column="34">in <expr><name pos:line="37" pos:column="37">messages</name></expr></range></decl></init>)
            <block pos:line="38" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="39" pos:column="17">var</name></type> <name pos:line="39" pos:column="21">command</name> <init pos:line="39" pos:column="29">= <expr><call><name pos:line="39" pos:column="31">GetOrCreateCommandFor</name><argument_list pos:line="39" pos:column="52">(<argument><expr><name pos:line="39" pos:column="53">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="40" pos:column="17">command</name><op:operator pos:line="40" pos:column="24">.</op:operator><name pos:line="40" pos:column="25">TotalRecords</name></name> <op:operator pos:line="40" pos:column="38">=</op:operator> <name><name pos:line="40" pos:column="40">message</name><op:operator pos:line="40" pos:column="47">.</op:operator><name pos:line="40" pos:column="48">RowCount</name></name></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="44" pos:column="9">private</specifier> <name pos:line="44" pos:column="17">void</name></type> <name pos:line="44" pos:column="22">AggregateCommandExecuted</name><parameter_list pos:line="44" pos:column="46">()</parameter_list>
        <block pos:line="45" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="46" pos:column="13">var</name></type> <name pos:line="46" pos:column="17">dupTracker</name> <init pos:line="46" pos:column="28">= <expr><op:operator pos:line="46" pos:column="30">new</op:operator> <call><name><name pos:line="46" pos:column="34">Dictionary</name><argument_list pos:line="46" pos:column="44">&lt;<argument><name pos:line="46" pos:column="45">string</name></argument>, <argument><name pos:line="46" pos:column="53">int</name></argument>&gt;</argument_list></name><argument_list pos:line="46" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="48" pos:column="13">var</name></type> <name pos:line="48" pos:column="17">messages</name> <init pos:line="48" pos:column="26">= <expr><call><name><name pos:line="48" pos:column="28">Messages</name><op:operator pos:line="48" pos:column="36">.</op:operator><name><name pos:line="48" pos:column="37">OfType</name><argument_list pos:line="48" pos:column="43">&lt;<argument><name pos:line="48" pos:column="44">CommandExecutedMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="48" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="49" pos:column="13">foreach (<init><decl><type><name pos:line="49" pos:column="22">var</name></type> <name pos:line="49" pos:column="26">message</name> <range pos:line="49" pos:column="34">in <expr><name pos:line="49" pos:column="37">messages</name></expr></range></decl></init>)
            <block pos:line="50" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="51" pos:column="17">var</name></type> <name pos:line="51" pos:column="21">command</name> <init pos:line="51" pos:column="29">= <expr><call><name pos:line="51" pos:column="31">GetOrCreateCommandFor</name><argument_list pos:line="51" pos:column="52">(<argument><expr><name pos:line="51" pos:column="53">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="52" pos:column="17">command</name><op:operator pos:line="52" pos:column="24">.</op:operator><name pos:line="52" pos:column="25">Command</name></name> <op:operator pos:line="52" pos:column="33">=</op:operator> <name><name pos:line="52" pos:column="35">message</name><op:operator pos:line="52" pos:column="42">.</op:operator><name pos:line="52" pos:column="43">CommandText</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="53" pos:column="17">command</name><op:operator pos:line="53" pos:column="24">.</op:operator><name pos:line="53" pos:column="25">StartDateTime</name></name> <op:operator pos:line="53" pos:column="39">=</op:operator> <name><name pos:line="53" pos:column="41">message</name><op:operator pos:line="53" pos:column="48">.</op:operator><name pos:line="53" pos:column="49">StartTime</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="54" pos:column="17">command</name><op:operator pos:line="54" pos:column="24">.</op:operator><name pos:line="54" pos:column="25">Offset</name></name> <op:operator pos:line="54" pos:column="32">=</op:operator> <name><name pos:line="54" pos:column="34">message</name><op:operator pos:line="54" pos:column="41">.</op:operator><name pos:line="54" pos:column="42">Offset</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="55" pos:column="17">command</name><op:operator pos:line="55" pos:column="24">.</op:operator><name pos:line="55" pos:column="25">HasTransaction</name></name> <op:operator pos:line="55" pos:column="40">=</op:operator> <name><name pos:line="55" pos:column="42">message</name><op:operator pos:line="55" pos:column="49">.</op:operator><name pos:line="55" pos:column="50">HasTransaction</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="56" pos:column="17">command</name><op:operator pos:line="56" pos:column="24">.</op:operator><name pos:line="56" pos:column="25">IsAsync</name></name> <op:operator pos:line="56" pos:column="33">=</op:operator> <name><name pos:line="56" pos:column="35">message</name><op:operator pos:line="56" pos:column="42">.</op:operator><name pos:line="56" pos:column="43">IsAsync</name></name></expr>;</expr_stmt>

                <if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><name><name pos:line="58" pos:column="21">message</name><op:operator pos:line="58" pos:column="28">.</op:operator><name pos:line="58" pos:column="29">Parameters</name></name> <op:operator pos:line="58" pos:column="40">!=</op:operator> <name pos:line="58" pos:column="43">null</name></expr>)</condition><then pos:line="58" pos:column="48">
                <block pos:line="59" pos:column="17">{
                    <foreach pos:line="60" pos:column="21">foreach (<init><decl><type><name pos:line="60" pos:column="30">var</name></type> <name pos:line="60" pos:column="34">parameter</name> <range pos:line="60" pos:column="44">in <expr><name><name pos:line="60" pos:column="47">message</name><op:operator pos:line="60" pos:column="54">.</op:operator><name pos:line="60" pos:column="55">Parameters</name></name></expr></range></decl></init>)
                    <block pos:line="61" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="62" pos:column="25">var</name></type> <name pos:line="62" pos:column="29">parameterMetadata</name> <init pos:line="62" pos:column="47">= <expr><op:operator pos:line="62" pos:column="49">new</op:operator> <name pos:line="62" pos:column="53">CommandParameterMetadata</name>
                        <block pos:line="63" pos:column="25">{
                            <expr><name pos:line="64" pos:column="29">Name</name> <op:operator pos:line="64" pos:column="34">=</op:operator> <name><name pos:line="64" pos:column="36">parameter</name><op:operator pos:line="64" pos:column="45">.</op:operator><name pos:line="64" pos:column="46">Name</name></name></expr>,
                            <expr><name pos:line="65" pos:column="29">Value</name> <op:operator pos:line="65" pos:column="35">=</op:operator> <name><name pos:line="65" pos:column="37">parameter</name><op:operator pos:line="65" pos:column="46">.</op:operator><name pos:line="65" pos:column="47">Value</name></name></expr>,
                            <expr><name pos:line="66" pos:column="29">Type</name> <op:operator pos:line="66" pos:column="34">=</op:operator> <name><name pos:line="66" pos:column="36">parameter</name><op:operator pos:line="66" pos:column="45">.</op:operator><name pos:line="66" pos:column="46">Type</name></name></expr>,
                            <expr><name pos:line="67" pos:column="29">Size</name> <op:operator pos:line="67" pos:column="34">=</op:operator> <name><name pos:line="67" pos:column="36">parameter</name><op:operator pos:line="67" pos:column="45">.</op:operator><name pos:line="67" pos:column="46">Size</name></name></expr>
                        }</block></expr></init></decl>;</decl_stmt>

                        <expr_stmt><expr><call><name><name pos:line="70" pos:column="25">command</name><op:operator pos:line="70" pos:column="32">.</op:operator><name pos:line="70" pos:column="33">Parameters</name><op:operator pos:line="70" pos:column="43">.</op:operator><name pos:line="70" pos:column="44">Add</name></name><argument_list pos:line="70" pos:column="47">(<argument><expr><name pos:line="70" pos:column="48">parameterMetadata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></foreach>
                }</block></then></if>

                <comment type="line" pos:line="74" pos:column="17">// Duplicate tracking</comment>
                <decl_stmt><decl><type><name pos:line="75" pos:column="17">var</name></type> <name pos:line="75" pos:column="21">dupCount</name> <init pos:line="75" pos:column="30">= <expr><lit:literal type="number" pos:line="75" pos:column="32">0</lit:literal></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="76" pos:column="17">command</name><op:operator pos:line="76" pos:column="24">.</op:operator><name pos:line="76" pos:column="25">IsDuplicate</name></name> <op:operator pos:line="76" pos:column="37">=</op:operator> <call><name><name pos:line="76" pos:column="39">dupTracker</name><op:operator pos:line="76" pos:column="49">.</op:operator><name pos:line="76" pos:column="50">TryGetValue</name></name><argument_list pos:line="76" pos:column="61">(<argument><expr><name><name pos:line="76" pos:column="62">message</name><op:operator pos:line="76" pos:column="69">.</op:operator><name pos:line="76" pos:column="70">CommandText</name></name></expr></argument>, <argument><expr pos:line="76" pos:column="83">out <name pos:line="76" pos:column="87">dupCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="77" pos:column="17">dupTracker</name><index pos:line="77" pos:column="27">[<expr><name><name pos:line="77" pos:column="28">message</name><op:operator pos:line="77" pos:column="35">.</op:operator><name pos:line="77" pos:column="36">CommandText</name></name></expr>]</index></name> <op:operator pos:line="77" pos:column="49">=</op:operator> <name pos:line="77" pos:column="51">dupCount</name> <op:operator pos:line="77" pos:column="60">+</op:operator> <lit:literal type="number" pos:line="77" pos:column="62">1</lit:literal></expr>;</expr_stmt> 
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="81" pos:column="9">private</specifier> <name pos:line="81" pos:column="17">void</name></type> <name pos:line="81" pos:column="22">AggregateCommandDurations</name><parameter_list pos:line="81" pos:column="47">()</parameter_list>
        <block pos:line="82" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="83" pos:column="13">var</name></type> <name pos:line="83" pos:column="17">messages</name> <init pos:line="83" pos:column="26">= <expr><call><name><name pos:line="83" pos:column="28">Messages</name><op:operator pos:line="83" pos:column="36">.</op:operator><name><name pos:line="83" pos:column="37">OfType</name><argument_list pos:line="83" pos:column="43">&lt;<argument><name pos:line="83" pos:column="44">CommandDurationAndRowCountMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="83" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="84" pos:column="13">foreach (<init><decl><type><name pos:line="84" pos:column="22">var</name></type> <name pos:line="84" pos:column="26">message</name> <range pos:line="84" pos:column="34">in <expr><name pos:line="84" pos:column="37">messages</name></expr></range></decl></init>)
            <block pos:line="85" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="86" pos:column="17">var</name></type> <name pos:line="86" pos:column="21">command</name> <init pos:line="86" pos:column="29">= <expr><call><name pos:line="86" pos:column="31">GetOrCreateCommandFor</name><argument_list pos:line="86" pos:column="52">(<argument><expr><name pos:line="86" pos:column="53">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="87" pos:column="17">command</name><op:operator pos:line="87" pos:column="24">.</op:operator><name pos:line="87" pos:column="25">Duration</name></name> <op:operator pos:line="87" pos:column="34">=</op:operator> <name><name pos:line="87" pos:column="36">message</name><op:operator pos:line="87" pos:column="43">.</op:operator><name pos:line="87" pos:column="44">Duration</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="88" pos:column="17">command</name><op:operator pos:line="88" pos:column="24">.</op:operator><name pos:line="88" pos:column="25">RecordsAffected</name></name> <op:operator pos:line="88" pos:column="41">=</op:operator> <name><name pos:line="88" pos:column="43">message</name><op:operator pos:line="88" pos:column="50">.</op:operator><name pos:line="88" pos:column="51">RecordsAffected</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="89" pos:column="17">command</name><op:operator pos:line="89" pos:column="24">.</op:operator><name pos:line="89" pos:column="25">StartDateTime</name></name> <op:operator pos:line="89" pos:column="39">=</op:operator> <name><name pos:line="89" pos:column="41">message</name><op:operator pos:line="89" pos:column="48">.</op:operator><name pos:line="89" pos:column="49">StartTime</name></name></expr>;</expr_stmt> <comment type="line" pos:line="89" pos:column="60">// Reason we set it again is we now have a better time than the start</comment>
                <expr_stmt><expr><name><name pos:line="90" pos:column="17">command</name><op:operator pos:line="90" pos:column="24">.</op:operator><name pos:line="90" pos:column="25">EndDateTime</name></name> <op:operator pos:line="90" pos:column="37">=</op:operator> <name><name pos:line="90" pos:column="39">message</name><op:operator pos:line="90" pos:column="46">.</op:operator><name pos:line="90" pos:column="47">StartTime</name></name> <op:operator pos:line="90" pos:column="57">+</op:operator> <name><name pos:line="90" pos:column="59">message</name><op:operator pos:line="90" pos:column="66">.</op:operator><name pos:line="90" pos:column="67">Offset</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="91" pos:column="17">command</name><op:operator pos:line="91" pos:column="24">.</op:operator><name pos:line="91" pos:column="25">Offset</name></name> <op:operator pos:line="91" pos:column="32">=</op:operator> <name><name pos:line="91" pos:column="34">message</name><op:operator pos:line="91" pos:column="41">.</op:operator><name pos:line="91" pos:column="42">Offset</name></name></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="95" pos:column="9">private</specifier> <name pos:line="95" pos:column="17">void</name></type> <name pos:line="95" pos:column="22">AggregateCommandErrors</name><parameter_list pos:line="95" pos:column="44">()</parameter_list>
        <block pos:line="96" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="97" pos:column="13">var</name></type> <name pos:line="97" pos:column="17">messages</name> <init pos:line="97" pos:column="26">= <expr><call><name><name pos:line="97" pos:column="28">Messages</name><op:operator pos:line="97" pos:column="36">.</op:operator><name><name pos:line="97" pos:column="37">OfType</name><argument_list pos:line="97" pos:column="43">&lt;<argument><name pos:line="97" pos:column="44">CommandErrorMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="97" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="98" pos:column="13">foreach (<init><decl><type><name pos:line="98" pos:column="22">var</name></type> <name pos:line="98" pos:column="26">message</name> <range pos:line="98" pos:column="34">in <expr><name pos:line="98" pos:column="37">messages</name></expr></range></decl></init>)
            <block pos:line="99" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="100" pos:column="17">var</name></type> <name pos:line="100" pos:column="21">command</name> <init pos:line="100" pos:column="29">= <expr><call><name pos:line="100" pos:column="31">GetOrCreateCommandFor</name><argument_list pos:line="100" pos:column="52">(<argument><expr><name pos:line="100" pos:column="53">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="101" pos:column="17">command</name><op:operator pos:line="101" pos:column="24">.</op:operator><name pos:line="101" pos:column="25">Duration</name></name> <op:operator pos:line="101" pos:column="34">=</op:operator> <name><name pos:line="101" pos:column="36">message</name><op:operator pos:line="101" pos:column="43">.</op:operator><name pos:line="101" pos:column="44">Duration</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="102" pos:column="17">command</name><op:operator pos:line="102" pos:column="24">.</op:operator><name pos:line="102" pos:column="25">Exception</name></name> <op:operator pos:line="102" pos:column="35">=</op:operator> <name><name pos:line="102" pos:column="37">message</name><op:operator pos:line="102" pos:column="44">.</op:operator><name pos:line="102" pos:column="45">Exception</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="103" pos:column="17">command</name><op:operator pos:line="103" pos:column="24">.</op:operator><name pos:line="103" pos:column="25">StartDateTime</name></name> <op:operator pos:line="103" pos:column="39">=</op:operator> <name><name pos:line="103" pos:column="41">message</name><op:operator pos:line="103" pos:column="48">.</op:operator><name pos:line="103" pos:column="49">StartTime</name></name></expr>;</expr_stmt> <comment type="line" pos:line="103" pos:column="60">// Reason we set it again is we now have a better time than the start</comment>
                <expr_stmt><expr><name><name pos:line="104" pos:column="17">command</name><op:operator pos:line="104" pos:column="24">.</op:operator><name pos:line="104" pos:column="25">EndDateTime</name></name> <op:operator pos:line="104" pos:column="37">=</op:operator> <name><name pos:line="104" pos:column="39">message</name><op:operator pos:line="104" pos:column="46">.</op:operator><name pos:line="104" pos:column="47">StartTime</name></name> <op:operator pos:line="104" pos:column="57">+</op:operator> <name><name pos:line="104" pos:column="59">message</name><op:operator pos:line="104" pos:column="66">.</op:operator><name pos:line="104" pos:column="67">Offset</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="105" pos:column="17">command</name><op:operator pos:line="105" pos:column="24">.</op:operator><name pos:line="105" pos:column="25">Offset</name></name> <op:operator pos:line="105" pos:column="32">=</op:operator> <name><name pos:line="105" pos:column="34">message</name><op:operator pos:line="105" pos:column="41">.</op:operator><name pos:line="105" pos:column="42">Offset</name></name></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="109" pos:column="9">private</specifier> <name pos:line="109" pos:column="17">void</name></type> <name pos:line="109" pos:column="22">AggregateTransactionEnd</name><parameter_list pos:line="109" pos:column="45">()</parameter_list>
        <block pos:line="110" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="111" pos:column="13">var</name></type> <name pos:line="111" pos:column="17">commitMessages</name> <init pos:line="111" pos:column="32">= <expr><call><name><name pos:line="111" pos:column="34">Messages</name><op:operator pos:line="111" pos:column="42">.</op:operator><name><name pos:line="111" pos:column="43">OfType</name><argument_list pos:line="111" pos:column="49">&lt;<argument><name pos:line="111" pos:column="50">TransactionCommitMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="111" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="112" pos:column="13">foreach (<init><decl><type><name pos:line="112" pos:column="22">var</name></type> <name pos:line="112" pos:column="26">message</name> <range pos:line="112" pos:column="34">in <expr><name pos:line="112" pos:column="37">commitMessages</name></expr></range></decl></init>)
            <block pos:line="113" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="114" pos:column="17">var</name></type> <name pos:line="114" pos:column="21">transaction</name> <init pos:line="114" pos:column="33">= <expr><call><name pos:line="114" pos:column="35">GetOrCreateTransactionFor</name><argument_list pos:line="114" pos:column="60">(<argument><expr><name pos:line="114" pos:column="61">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="115" pos:column="17">transaction</name><op:operator pos:line="115" pos:column="28">.</op:operator><name pos:line="115" pos:column="29">Committed</name></name> <op:operator pos:line="115" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="115" pos:column="41">true</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="116" pos:column="17">transaction</name><op:operator pos:line="116" pos:column="28">.</op:operator><name pos:line="116" pos:column="29">StartDateTime</name></name> <op:operator pos:line="116" pos:column="43">=</op:operator> <name><name pos:line="116" pos:column="45">message</name><op:operator pos:line="116" pos:column="52">.</op:operator><name pos:line="116" pos:column="53">StartTime</name></name></expr>;</expr_stmt> <comment type="line" pos:line="116" pos:column="64">// Reason we set it again is we now have a better time than the start</comment>
                <expr_stmt><expr><name><name pos:line="117" pos:column="17">transaction</name><op:operator pos:line="117" pos:column="28">.</op:operator><name pos:line="117" pos:column="29">EndDateTime</name></name> <op:operator pos:line="117" pos:column="41">=</op:operator> <name><name pos:line="117" pos:column="43">message</name><op:operator pos:line="117" pos:column="50">.</op:operator><name pos:line="117" pos:column="51">StartTime</name></name> <op:operator pos:line="117" pos:column="61">+</op:operator> <name><name pos:line="117" pos:column="63">message</name><op:operator pos:line="117" pos:column="70">.</op:operator><name pos:line="117" pos:column="71">Offset</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="118" pos:column="17">transaction</name><op:operator pos:line="118" pos:column="28">.</op:operator><name pos:line="118" pos:column="29">Duration</name></name> <op:operator pos:line="118" pos:column="38">=</op:operator> <name><name pos:line="118" pos:column="40">message</name><op:operator pos:line="118" pos:column="47">.</op:operator><name pos:line="118" pos:column="48">Duration</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="119" pos:column="17">transaction</name><op:operator pos:line="119" pos:column="28">.</op:operator><name pos:line="119" pos:column="29">Offset</name></name> <op:operator pos:line="119" pos:column="36">=</op:operator> <name><name pos:line="119" pos:column="38">message</name><op:operator pos:line="119" pos:column="45">.</op:operator><name pos:line="119" pos:column="46">Offset</name></name></expr>;</expr_stmt>

                <decl_stmt><decl><type><name pos:line="121" pos:column="17">var</name></type> <name pos:line="121" pos:column="21">connection</name> <init pos:line="121" pos:column="32">= <expr><call><name pos:line="121" pos:column="34">GetOrCreateConnectionFor</name><argument_list pos:line="121" pos:column="58">(<argument><expr><name pos:line="121" pos:column="59">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="122" pos:column="17">connection</name><op:operator pos:line="122" pos:column="27">.</op:operator><name pos:line="122" pos:column="28">RegiserTransactionEnd</name></name><argument_list pos:line="122" pos:column="49">(<argument><expr><name pos:line="122" pos:column="50">transaction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

            <decl_stmt><decl><type><name pos:line="125" pos:column="13">var</name></type> <name pos:line="125" pos:column="17">rollbackMessages</name> <init pos:line="125" pos:column="34">= <expr><call><name><name pos:line="125" pos:column="36">Messages</name><op:operator pos:line="125" pos:column="44">.</op:operator><name><name pos:line="125" pos:column="45">OfType</name><argument_list pos:line="125" pos:column="51">&lt;<argument><name pos:line="125" pos:column="52">TransactionRollbackMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="125" pos:column="79">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="126" pos:column="13">foreach (<init><decl><type><name pos:line="126" pos:column="22">var</name></type> <name pos:line="126" pos:column="26">message</name> <range pos:line="126" pos:column="34">in <expr><name pos:line="126" pos:column="37">rollbackMessages</name></expr></range></decl></init>)
            <block pos:line="127" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="128" pos:column="17">var</name></type> <name pos:line="128" pos:column="21">transaction</name> <init pos:line="128" pos:column="33">= <expr><call><name pos:line="128" pos:column="35">GetOrCreateTransactionFor</name><argument_list pos:line="128" pos:column="60">(<argument><expr><name pos:line="128" pos:column="61">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="129" pos:column="17">transaction</name><op:operator pos:line="129" pos:column="28">.</op:operator><name pos:line="129" pos:column="29">Committed</name></name> <op:operator pos:line="129" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="129" pos:column="41">false</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="130" pos:column="17">transaction</name><op:operator pos:line="130" pos:column="28">.</op:operator><name pos:line="130" pos:column="29">StartDateTime</name></name> <op:operator pos:line="130" pos:column="43">=</op:operator> <name><name pos:line="130" pos:column="45">message</name><op:operator pos:line="130" pos:column="52">.</op:operator><name pos:line="130" pos:column="53">StartTime</name></name></expr>;</expr_stmt> <comment type="line" pos:line="130" pos:column="64">// Reason we set it again is we now have a better time than the start</comment>
                <expr_stmt><expr><name><name pos:line="131" pos:column="17">transaction</name><op:operator pos:line="131" pos:column="28">.</op:operator><name pos:line="131" pos:column="29">EndDateTime</name></name> <op:operator pos:line="131" pos:column="41">=</op:operator> <name><name pos:line="131" pos:column="43">message</name><op:operator pos:line="131" pos:column="50">.</op:operator><name pos:line="131" pos:column="51">StartTime</name></name> <op:operator pos:line="131" pos:column="61">+</op:operator> <name><name pos:line="131" pos:column="63">message</name><op:operator pos:line="131" pos:column="70">.</op:operator><name pos:line="131" pos:column="71">Offset</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="132" pos:column="17">transaction</name><op:operator pos:line="132" pos:column="28">.</op:operator><name pos:line="132" pos:column="29">Duration</name></name> <op:operator pos:line="132" pos:column="38">=</op:operator> <name><name pos:line="132" pos:column="40">message</name><op:operator pos:line="132" pos:column="47">.</op:operator><name pos:line="132" pos:column="48">Duration</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="133" pos:column="17">transaction</name><op:operator pos:line="133" pos:column="28">.</op:operator><name pos:line="133" pos:column="29">Offset</name></name> <op:operator pos:line="133" pos:column="36">=</op:operator> <name><name pos:line="133" pos:column="38">message</name><op:operator pos:line="133" pos:column="45">.</op:operator><name pos:line="133" pos:column="46">Offset</name></name></expr>;</expr_stmt>

                <decl_stmt><decl><type><name pos:line="135" pos:column="17">var</name></type> <name pos:line="135" pos:column="21">connection</name> <init pos:line="135" pos:column="32">= <expr><call><name pos:line="135" pos:column="34">GetOrCreateConnectionFor</name><argument_list pos:line="135" pos:column="58">(<argument><expr><name pos:line="135" pos:column="59">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="136" pos:column="17">connection</name><op:operator pos:line="136" pos:column="27">.</op:operator><name pos:line="136" pos:column="28">RegiserTransactionEnd</name></name><argument_list pos:line="136" pos:column="49">(<argument><expr><name pos:line="136" pos:column="50">transaction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="140" pos:column="9">private</specifier> <name pos:line="140" pos:column="17">void</name></type> <name pos:line="140" pos:column="22">AggregateTransactionBegan</name><parameter_list pos:line="140" pos:column="47">()</parameter_list>
        <block pos:line="141" pos:column="9">{
            <foreach pos:line="142" pos:column="13">foreach (<init><decl><type><name pos:line="142" pos:column="22">var</name></type> <name pos:line="142" pos:column="26">message</name> <range pos:line="142" pos:column="34">in <expr><call><name><name pos:line="142" pos:column="37">Messages</name><op:operator pos:line="142" pos:column="45">.</op:operator><name><name pos:line="142" pos:column="46">OfType</name><argument_list pos:line="142" pos:column="52">&lt;<argument><name pos:line="142" pos:column="53">TransactionBeganMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="142" pos:column="77">()</argument_list></call></expr></range></decl></init>)
            <block pos:line="143" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="144" pos:column="17">var</name></type> <name pos:line="144" pos:column="21">transaction</name> <init pos:line="144" pos:column="33">= <expr><call><name pos:line="144" pos:column="35">GetOrCreateTransactionFor</name><argument_list pos:line="144" pos:column="60">(<argument><expr><name pos:line="144" pos:column="61">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="145" pos:column="17">transaction</name><op:operator pos:line="145" pos:column="28">.</op:operator><name pos:line="145" pos:column="29">IsolationLevel</name></name> <op:operator pos:line="145" pos:column="44">=</op:operator> <call><name><name pos:line="145" pos:column="46">message</name><op:operator pos:line="145" pos:column="53">.</op:operator><name pos:line="145" pos:column="54">IsolationLevel</name><op:operator pos:line="145" pos:column="68">.</op:operator><name pos:line="145" pos:column="69">ToString</name></name><argument_list pos:line="145" pos:column="77">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="146" pos:column="17">transaction</name><op:operator pos:line="146" pos:column="28">.</op:operator><name pos:line="146" pos:column="29">StartDateTime</name></name> <op:operator pos:line="146" pos:column="43">=</op:operator> <name><name pos:line="146" pos:column="45">message</name><op:operator pos:line="146" pos:column="52">.</op:operator><name pos:line="146" pos:column="53">StartTime</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="147" pos:column="17">transaction</name><op:operator pos:line="147" pos:column="28">.</op:operator><name pos:line="147" pos:column="29">Offset</name></name> <op:operator pos:line="147" pos:column="36">=</op:operator> <name><name pos:line="147" pos:column="38">message</name><op:operator pos:line="147" pos:column="45">.</op:operator><name pos:line="147" pos:column="46">Offset</name></name></expr>;</expr_stmt>

                <decl_stmt><decl><type><name pos:line="149" pos:column="17">var</name></type> <name pos:line="149" pos:column="21">connection</name> <init pos:line="149" pos:column="32">= <expr><call><name pos:line="149" pos:column="34">GetOrCreateConnectionFor</name><argument_list pos:line="149" pos:column="58">(<argument><expr><name pos:line="149" pos:column="59">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="150" pos:column="17">connection</name><op:operator pos:line="150" pos:column="27">.</op:operator><name pos:line="150" pos:column="28">RegiserTransactionStart</name></name><argument_list pos:line="150" pos:column="51">(<argument><expr><name pos:line="150" pos:column="52">transaction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="154" pos:column="9">private</specifier> <name pos:line="154" pos:column="17">void</name></type> <name pos:line="154" pos:column="22">AggregateConnectionClosed</name><parameter_list pos:line="154" pos:column="47">()</parameter_list>
        <block pos:line="155" pos:column="9">{
            <foreach pos:line="156" pos:column="13">foreach (<init><decl><type><name pos:line="156" pos:column="22">var</name></type> <name pos:line="156" pos:column="26">message</name> <range pos:line="156" pos:column="34">in <expr><call><name><name pos:line="156" pos:column="37">Messages</name><op:operator pos:line="156" pos:column="45">.</op:operator><name><name pos:line="156" pos:column="46">OfType</name><argument_list pos:line="156" pos:column="52">&lt;<argument><name pos:line="156" pos:column="53">ConnectionClosedMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="156" pos:column="77">()</argument_list></call></expr></range></decl></init>)
            <block pos:line="157" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="158" pos:column="17">var</name></type> <name pos:line="158" pos:column="21">connection</name> <init pos:line="158" pos:column="32">= <expr><call><name pos:line="158" pos:column="34">GetOrCreateConnectionFor</name><argument_list pos:line="158" pos:column="58">(<argument><expr><name pos:line="158" pos:column="59">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="159" pos:column="17">connection</name><op:operator pos:line="159" pos:column="27">.</op:operator><name pos:line="159" pos:column="28">StartDateTime</name></name> <op:operator pos:line="159" pos:column="42">=</op:operator> <name><name pos:line="159" pos:column="44">message</name><op:operator pos:line="159" pos:column="51">.</op:operator><name pos:line="159" pos:column="52">StartTime</name></name></expr>;</expr_stmt> <comment type="line" pos:line="159" pos:column="63">// Reason we set it again is we now have a better time than the start</comment>
                <expr_stmt><expr><name><name pos:line="160" pos:column="17">connection</name><op:operator pos:line="160" pos:column="27">.</op:operator><name pos:line="160" pos:column="28">EndDateTime</name></name> <op:operator pos:line="160" pos:column="40">=</op:operator> <name><name pos:line="160" pos:column="42">message</name><op:operator pos:line="160" pos:column="49">.</op:operator><name pos:line="160" pos:column="50">StartTime</name></name> <op:operator pos:line="160" pos:column="60">+</op:operator> <name><name pos:line="160" pos:column="62">message</name><op:operator pos:line="160" pos:column="69">.</op:operator><name pos:line="160" pos:column="70">Offset</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="161" pos:column="17">connection</name><op:operator pos:line="161" pos:column="27">.</op:operator><name pos:line="161" pos:column="28">Duration</name></name> <op:operator pos:line="161" pos:column="37">=</op:operator> <name><name pos:line="161" pos:column="39">message</name><op:operator pos:line="161" pos:column="46">.</op:operator><name pos:line="161" pos:column="47">Duration</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="162" pos:column="17">connection</name><op:operator pos:line="162" pos:column="27">.</op:operator><name pos:line="162" pos:column="28">Offset</name></name> <op:operator pos:line="162" pos:column="35">=</op:operator> <name><name pos:line="162" pos:column="37">message</name><op:operator pos:line="162" pos:column="44">.</op:operator><name pos:line="162" pos:column="45">Offset</name></name></expr>;</expr_stmt>

                <expr_stmt><expr><call><name><name pos:line="164" pos:column="17">connection</name><op:operator pos:line="164" pos:column="27">.</op:operator><name pos:line="164" pos:column="28">RegisterEnd</name></name><argument_list pos:line="164" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="168" pos:column="9">private</specifier> <name pos:line="168" pos:column="17">void</name></type> <name pos:line="168" pos:column="22">AggregateConnectionStart</name><parameter_list pos:line="168" pos:column="46">()</parameter_list>
        <block pos:line="169" pos:column="9">{
            <foreach pos:line="170" pos:column="13">foreach (<init><decl><type><name pos:line="170" pos:column="22">var</name></type> <name pos:line="170" pos:column="26">message</name> <range pos:line="170" pos:column="34">in <expr><call><name><name pos:line="170" pos:column="37">Messages</name><op:operator pos:line="170" pos:column="45">.</op:operator><name><name pos:line="170" pos:column="46">OfType</name><argument_list pos:line="170" pos:column="52">&lt;<argument><name pos:line="170" pos:column="53">ConnectionStartedMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="170" pos:column="78">()</argument_list></call></expr></range></decl></init>)
            <block pos:line="171" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="172" pos:column="17">var</name></type> <name pos:line="172" pos:column="21">connection</name> <init pos:line="172" pos:column="32">= <expr><call><name pos:line="172" pos:column="34">GetOrCreateConnectionFor</name><argument_list pos:line="172" pos:column="58">(<argument><expr><name pos:line="172" pos:column="59">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="173" pos:column="17">connection</name><op:operator pos:line="173" pos:column="27">.</op:operator><name pos:line="173" pos:column="28">StartDateTime</name></name> <op:operator pos:line="173" pos:column="42">=</op:operator> <name><name pos:line="173" pos:column="44">message</name><op:operator pos:line="173" pos:column="51">.</op:operator><name pos:line="173" pos:column="52">StartTime</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="174" pos:column="17">connection</name><op:operator pos:line="174" pos:column="27">.</op:operator><name pos:line="174" pos:column="28">Offset</name></name> <op:operator pos:line="174" pos:column="35">=</op:operator> <name><name pos:line="174" pos:column="37">message</name><op:operator pos:line="174" pos:column="44">.</op:operator><name pos:line="174" pos:column="45">Offset</name></name></expr>;</expr_stmt>

                <expr_stmt><expr><call><name><name pos:line="176" pos:column="17">connection</name><op:operator pos:line="176" pos:column="27">.</op:operator><name pos:line="176" pos:column="28">RegisterStart</name></name><argument_list pos:line="176" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><specifier pos:line="180" pos:column="9">private</specifier> <name pos:line="180" pos:column="17">ConnectionMetadata</name></type> <name pos:line="180" pos:column="36">GetOrCreateConnectionFor</name><parameter_list pos:line="180" pos:column="60">(<param><decl><type><name pos:line="180" pos:column="61">AdoMessage</name></type> <name pos:line="180" pos:column="72">message</name></decl></param>)</parameter_list>
        <block pos:line="181" pos:column="9">{            
            <decl_stmt><decl><type><name pos:line="182" pos:column="13">ConnectionMetadata</name></type> <name pos:line="182" pos:column="32">connection</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="183" pos:column="13">var</name></type> <name pos:line="183" pos:column="17">connectionId</name> <init pos:line="183" pos:column="30">= <expr><call><name><name pos:line="183" pos:column="32">message</name><op:operator pos:line="183" pos:column="39">.</op:operator><name pos:line="183" pos:column="40">ConnectionId</name><op:operator pos:line="183" pos:column="52">.</op:operator><name pos:line="183" pos:column="53">ToString</name></name><argument_list pos:line="183" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="185" pos:column="13">if <condition pos:line="185" pos:column="16">(<expr><op:operator pos:line="185" pos:column="17">!</op:operator><call><name><name pos:line="185" pos:column="18">Metadata</name><op:operator pos:line="185" pos:column="26">.</op:operator><name pos:line="185" pos:column="27">Connections</name><op:operator pos:line="185" pos:column="38">.</op:operator><name pos:line="185" pos:column="39">TryGetValue</name></name><argument_list pos:line="185" pos:column="50">(<argument><expr><name pos:line="185" pos:column="51">connectionId</name></expr></argument>, <argument><expr pos:line="185" pos:column="65">out <name pos:line="185" pos:column="69">connection</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="185" pos:column="81">
            <block pos:line="186" pos:column="13">{
                <expr_stmt><expr><name pos:line="187" pos:column="17">connection</name> <op:operator pos:line="187" pos:column="28">=</op:operator> <op:operator pos:line="187" pos:column="30">new</op:operator> <call><name pos:line="187" pos:column="34">ConnectionMetadata</name><argument_list pos:line="187" pos:column="52">(<argument><expr><name pos:line="187" pos:column="53">connectionId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="188" pos:column="17">Metadata</name><op:operator pos:line="188" pos:column="25">.</op:operator><name pos:line="188" pos:column="26">Connections</name><op:operator pos:line="188" pos:column="37">.</op:operator><name pos:line="188" pos:column="38">Add</name></name><argument_list pos:line="188" pos:column="41">(<argument><expr><name pos:line="188" pos:column="42">connectionId</name></expr></argument>, <argument><expr><name pos:line="188" pos:column="56">connection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <return pos:line="191" pos:column="13">return <expr><name pos:line="191" pos:column="20">connection</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="194" pos:column="9">private</specifier> <name pos:line="194" pos:column="17">CommandMetadata</name></type> <name pos:line="194" pos:column="33">GetOrCreateCommandFor</name><parameter_list pos:line="194" pos:column="54">(<param><decl><type><name pos:line="194" pos:column="55">AdoCommandMessage</name></type> <name pos:line="194" pos:column="73">message</name></decl></param>)</parameter_list>
        <block pos:line="195" pos:column="9">{            
            <decl_stmt><decl><type><name pos:line="196" pos:column="13">CommandMetadata</name></type> <name pos:line="196" pos:column="29">command</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="197" pos:column="13">var</name></type> <name pos:line="197" pos:column="17">connectionId</name> <init pos:line="197" pos:column="30">= <expr><call><name><name pos:line="197" pos:column="32">message</name><op:operator pos:line="197" pos:column="39">.</op:operator><name pos:line="197" pos:column="40">ConnectionId</name><op:operator pos:line="197" pos:column="52">.</op:operator><name pos:line="197" pos:column="53">ToString</name></name><argument_list pos:line="197" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="198" pos:column="13">var</name></type> <name pos:line="198" pos:column="17">commandId</name> <init pos:line="198" pos:column="27">= <expr><call><name><name pos:line="198" pos:column="29">message</name><op:operator pos:line="198" pos:column="36">.</op:operator><name pos:line="198" pos:column="37">CommandId</name><op:operator pos:line="198" pos:column="46">.</op:operator><name pos:line="198" pos:column="47">ToString</name></name><argument_list pos:line="198" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="200" pos:column="13">if <condition pos:line="200" pos:column="16">(<expr><op:operator pos:line="200" pos:column="17">!</op:operator><call><name><name pos:line="200" pos:column="18">Metadata</name><op:operator pos:line="200" pos:column="26">.</op:operator><name pos:line="200" pos:column="27">Commands</name><op:operator pos:line="200" pos:column="35">.</op:operator><name pos:line="200" pos:column="36">TryGetValue</name></name><argument_list pos:line="200" pos:column="47">(<argument><expr><name pos:line="200" pos:column="48">commandId</name></expr></argument>, <argument><expr pos:line="200" pos:column="59">out <name pos:line="200" pos:column="63">command</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="200" pos:column="72">
            <block pos:line="201" pos:column="13">{
                <expr_stmt><expr><name pos:line="202" pos:column="17">command</name> <op:operator pos:line="202" pos:column="25">=</op:operator> <op:operator pos:line="202" pos:column="27">new</op:operator> <call><name pos:line="202" pos:column="31">CommandMetadata</name><argument_list pos:line="202" pos:column="46">(<argument><expr><name pos:line="202" pos:column="47">commandId</name></expr></argument>, <argument><expr><name pos:line="202" pos:column="58">connectionId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="203" pos:column="17">Metadata</name><op:operator pos:line="203" pos:column="25">.</op:operator><name pos:line="203" pos:column="26">Commands</name><op:operator pos:line="203" pos:column="34">.</op:operator><name pos:line="203" pos:column="35">Add</name></name><argument_list pos:line="203" pos:column="38">(<argument><expr><name pos:line="203" pos:column="39">commandId</name></expr></argument>, <argument><expr><name pos:line="203" pos:column="50">command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name pos:line="205" pos:column="17">var</name></type> <name pos:line="205" pos:column="21">connection</name> <init pos:line="205" pos:column="32">= <expr><call><name pos:line="205" pos:column="34">GetOrCreateConnectionFor</name><argument_list pos:line="205" pos:column="58">(<argument><expr><name pos:line="205" pos:column="59">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="206" pos:column="17">connection</name><op:operator pos:line="206" pos:column="27">.</op:operator><name pos:line="206" pos:column="28">RegiserCommand</name></name><argument_list pos:line="206" pos:column="42">(<argument><expr><name pos:line="206" pos:column="43">command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <return pos:line="209" pos:column="13">return <expr><name pos:line="209" pos:column="20">command</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="212" pos:column="9">private</specifier> <name pos:line="212" pos:column="17">TransactionMetadata</name></type> <name pos:line="212" pos:column="37">GetOrCreateTransactionFor</name><parameter_list pos:line="212" pos:column="62">(<param><decl><type><name pos:line="212" pos:column="63">AdoTransactionMessage</name></type> <name pos:line="212" pos:column="85">message</name></decl></param>)</parameter_list>
        <block pos:line="213" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="214" pos:column="13">TransactionMetadata</name></type> <name pos:line="214" pos:column="33">transaction</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="215" pos:column="13">var</name></type> <name pos:line="215" pos:column="17">connectionId</name> <init pos:line="215" pos:column="30">= <expr><call><name><name pos:line="215" pos:column="32">message</name><op:operator pos:line="215" pos:column="39">.</op:operator><name pos:line="215" pos:column="40">ConnectionId</name><op:operator pos:line="215" pos:column="52">.</op:operator><name pos:line="215" pos:column="53">ToString</name></name><argument_list pos:line="215" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="216" pos:column="13">var</name></type> <name pos:line="216" pos:column="17">transactionId</name> <init pos:line="216" pos:column="31">= <expr><call><name><name pos:line="216" pos:column="33">message</name><op:operator pos:line="216" pos:column="40">.</op:operator><name pos:line="216" pos:column="41">TransactionId</name><op:operator pos:line="216" pos:column="54">.</op:operator><name pos:line="216" pos:column="55">ToString</name></name><argument_list pos:line="216" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="218" pos:column="13">if <condition pos:line="218" pos:column="16">(<expr><op:operator pos:line="218" pos:column="17">!</op:operator><call><name><name pos:line="218" pos:column="18">Metadata</name><op:operator pos:line="218" pos:column="26">.</op:operator><name pos:line="218" pos:column="27">Transactions</name><op:operator pos:line="218" pos:column="39">.</op:operator><name pos:line="218" pos:column="40">TryGetValue</name></name><argument_list pos:line="218" pos:column="51">(<argument><expr><name pos:line="218" pos:column="52">transactionId</name></expr></argument>, <argument><expr pos:line="218" pos:column="67">out <name pos:line="218" pos:column="71">transaction</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="218" pos:column="84">
            <block pos:line="219" pos:column="13">{
                <expr_stmt><expr><name pos:line="220" pos:column="17">transaction</name> <op:operator pos:line="220" pos:column="29">=</op:operator> <op:operator pos:line="220" pos:column="31">new</op:operator> <call><name pos:line="220" pos:column="35">TransactionMetadata</name><argument_list pos:line="220" pos:column="54">(<argument><expr><name pos:line="220" pos:column="55">transactionId</name></expr></argument>, <argument><expr><name pos:line="220" pos:column="70">connectionId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="221" pos:column="17">Metadata</name><op:operator pos:line="221" pos:column="25">.</op:operator><name pos:line="221" pos:column="26">Transactions</name><op:operator pos:line="221" pos:column="38">.</op:operator><name pos:line="221" pos:column="39">Add</name></name><argument_list pos:line="221" pos:column="42">(<argument><expr><name pos:line="221" pos:column="43">transactionId</name></expr></argument>, <argument><expr><name pos:line="221" pos:column="58">transaction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <return pos:line="224" pos:column="13">return <expr><name pos:line="224" pos:column="20">transaction</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
