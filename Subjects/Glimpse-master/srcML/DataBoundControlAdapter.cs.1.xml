<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WebForms\Inspector\DataBoundControlAdapter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">ComponentModel</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Globalization</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Linq</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Reflection</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Web</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">System</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">Web</name><op:operator pos:line="8" pos:column="17">.</op:operator><name pos:line="8" pos:column="18">UI</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">System</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">Web</name><op:operator pos:line="9" pos:column="17">.</op:operator><name pos:line="9" pos:column="18">UI</name><op:operator pos:line="9" pos:column="20">.</op:operator><name pos:line="9" pos:column="21">Adapters</name></name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">System</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">Web</name><op:operator pos:line="10" pos:column="17">.</op:operator><name pos:line="10" pos:column="18">UI</name><op:operator pos:line="10" pos:column="20">.</op:operator><name pos:line="10" pos:column="21">WebControls</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Glimpse</name><op:operator pos:line="11" pos:column="14">.</op:operator><name pos:line="11" pos:column="15">Core</name><op:operator pos:line="11" pos:column="19">.</op:operator><name pos:line="11" pos:column="20">Framework</name></name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">Glimpse</name><op:operator pos:line="12" pos:column="14">.</op:operator><name pos:line="12" pos:column="15">WebForms</name><op:operator pos:line="12" pos:column="23">.</op:operator><name pos:line="12" pos:column="24">Model</name></name>;</using>

<namespace pos:line="14" pos:column="1">namespace <name><name pos:line="14" pos:column="11">Glimpse</name><op:operator pos:line="14" pos:column="18">.</op:operator><name pos:line="14" pos:column="19">WebForms</name><op:operator pos:line="14" pos:column="27">.</op:operator><name pos:line="14" pos:column="28">Inspector</name></name>
<block pos:line="15" pos:column="1">{
    <class><specifier pos:line="16" pos:column="5">public</specifier> class <name pos:line="16" pos:column="18">DataBoundControlAdapter</name> <super pos:line="16" pos:column="42">: <name pos:line="16" pos:column="44">ControlAdapter</name></super>
    <block pos:line="17" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">protected</specifier> <name pos:line="18" pos:column="19">DataBoundControl</name></type> <name pos:line="18" pos:column="36">DataBoundControl</name>
        <block pos:line="19" pos:column="9">{
            <function><name pos:line="20" pos:column="13">get</name>
            <block pos:line="21" pos:column="13">{
                <return pos:line="22" pos:column="17">return <expr><op:operator pos:line="22" pos:column="24">(</op:operator><name pos:line="22" pos:column="25">DataBoundControl</name><op:operator pos:line="22" pos:column="41">)</op:operator><name pos:line="22" pos:column="42">Control</name></expr>;</return>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="26" pos:column="9">private</specifier> <specifier pos:line="26" pos:column="17">static</specifier> <name><name pos:line="26" pos:column="24">Dictionary</name><argument_list pos:line="26" pos:column="34">&lt;<argument><name pos:line="26" pos:column="35">string</name></argument>, <argument><name><name pos:line="26" pos:column="43">List</name><argument_list pos:line="26" pos:column="47">&lt;<argument><name pos:line="26" pos:column="48">DataBindParameterModel</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:line="26" pos:column="73">DataBindInfo</name>
        <block pos:line="27" pos:column="9">{
            <function><name pos:line="28" pos:column="13">get</name>
            <block pos:line="29" pos:column="13">{
                <return pos:line="30" pos:column="17">return <expr><op:operator pos:line="30" pos:column="24">(</op:operator><name><name pos:line="30" pos:column="25">Dictionary</name><argument_list pos:line="30" pos:column="35">&lt;<argument><name pos:line="30" pos:column="36">string</name></argument>, <argument><name><name pos:line="30" pos:column="44">List</name><argument_list pos:line="30" pos:column="48">&lt;<argument><name pos:line="30" pos:column="49">DataBindParameterModel</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><op:operator pos:line="30" pos:column="73">)</op:operator><name><name pos:line="30" pos:column="74">HttpContext</name><op:operator pos:line="30" pos:column="85">.</op:operator><name pos:line="30" pos:column="86">Current</name><op:operator pos:line="30" pos:column="93">.</op:operator><name pos:line="30" pos:column="94">Items</name><index pos:line="30" pos:column="99">[<expr><lit:literal type="string" pos:line="30" pos:column="100">"_GlimpseWebFormDataBinding"</lit:literal></expr>]</index></name></expr>;</return>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="34" pos:column="9">private</specifier> <name pos:line="34" pos:column="17">TimeSpan</name></type> <name pos:line="34" pos:column="26">Offset</name>
        <block pos:line="35" pos:column="9">{
            <function><name pos:line="36" pos:column="13">get</name>
            <block pos:line="37" pos:column="13">{
                <return pos:line="38" pos:column="17">return <expr><call><call><name><name pos:line="38" pos:column="24">GlimpseConfiguration</name><op:operator pos:line="38" pos:column="44">.</op:operator><name pos:line="38" pos:column="45">GetConfiguredTimerStrategy</name></name><argument_list pos:line="38" pos:column="71">()</argument_list></call><argument_list pos:line="38" pos:column="73">()</argument_list></call><op:operator pos:line="38" pos:column="75">.</op:operator><call><name pos:line="38" pos:column="76">Point</name><argument_list pos:line="38" pos:column="81">()</argument_list></call><op:operator pos:line="38" pos:column="83">.</op:operator><name pos:line="38" pos:column="84">Offset</name></expr>;</return>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="42" pos:column="9">private</specifier> <name><name pos:line="42" pos:column="17">List</name><argument_list pos:line="42" pos:column="21">&lt;<argument><name><name pos:line="42" pos:column="22">KeyValuePair</name><argument_list pos:line="42" pos:column="34">&lt;<argument><name pos:line="42" pos:column="35">string</name></argument>, <argument><name pos:line="42" pos:column="43">ParameterCollection</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:line="42" pos:column="65">Parameters</name>
        <block pos:line="43" pos:column="9">{
            <function><name pos:line="44" pos:column="13">get</name>
            <block pos:line="45" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="46" pos:column="17">var</name></type> <name pos:line="46" pos:column="21">parameters</name> <init pos:line="46" pos:column="32">= <expr><op:operator pos:line="46" pos:column="34">new</op:operator> <call><name><name pos:line="46" pos:column="38">List</name><argument_list pos:line="46" pos:column="42">&lt;<argument><name><name pos:line="46" pos:column="43">KeyValuePair</name><argument_list pos:line="46" pos:column="55">&lt;<argument><name pos:line="46" pos:column="56">string</name></argument>, <argument><name pos:line="46" pos:column="64">ParameterCollection</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list pos:line="46" pos:column="85">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="47" pos:column="17">var</name></type> <name pos:line="47" pos:column="21">objectDataSource</name> <init pos:line="47" pos:column="38">= <expr><name><name pos:line="47" pos:column="40">DataBoundControl</name><op:operator pos:line="47" pos:column="56">.</op:operator><name pos:line="47" pos:column="57">DataSourceObject</name></name> <op:operator pos:line="47" pos:column="74">as</op:operator> <name pos:line="47" pos:column="77">ObjectDataSource</name></expr></init></decl>;</decl_stmt>
                <if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">objectDataSource</name> <op:operator pos:line="48" pos:column="38">!=</op:operator> <name pos:line="48" pos:column="41">null</name></expr>)</condition><then pos:line="48" pos:column="46">
                <block pos:line="49" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="50" pos:column="21">parameters</name><op:operator pos:line="50" pos:column="31">.</op:operator><name pos:line="50" pos:column="32">Add</name></name><argument_list pos:line="50" pos:column="35">(<argument><expr><op:operator pos:line="50" pos:column="36">new</op:operator> <call><name><name pos:line="50" pos:column="40">KeyValuePair</name><argument_list pos:line="50" pos:column="52">&lt;<argument><name pos:line="50" pos:column="53">string</name></argument>, <argument><name pos:line="50" pos:column="61">ParameterCollection</name></argument>&gt;</argument_list></name><argument_list pos:line="50" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="50" pos:column="82">"Select"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="92">objectDataSource</name><op:operator pos:line="50" pos:column="108">.</op:operator><name pos:line="50" pos:column="109">SelectParameters</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>

                <decl_stmt><decl><type><name pos:line="53" pos:column="17">var</name></type> <name pos:line="53" pos:column="21">sqlDataSource</name> <init pos:line="53" pos:column="35">= <expr><name><name pos:line="53" pos:column="37">DataBoundControl</name><op:operator pos:line="53" pos:column="53">.</op:operator><name pos:line="53" pos:column="54">DataSourceObject</name></name> <op:operator pos:line="53" pos:column="71">as</op:operator> <name pos:line="53" pos:column="74">SqlDataSource</name></expr></init></decl>;</decl_stmt>
                <if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name pos:line="54" pos:column="21">sqlDataSource</name> <op:operator pos:line="54" pos:column="35">!=</op:operator> <name pos:line="54" pos:column="38">null</name></expr>)</condition><then pos:line="54" pos:column="43">
                <block pos:line="55" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="56" pos:column="21">parameters</name><op:operator pos:line="56" pos:column="31">.</op:operator><name pos:line="56" pos:column="32">Add</name></name><argument_list pos:line="56" pos:column="35">(<argument><expr><op:operator pos:line="56" pos:column="36">new</op:operator> <call><name><name pos:line="56" pos:column="40">KeyValuePair</name><argument_list pos:line="56" pos:column="52">&lt;<argument><name pos:line="56" pos:column="53">string</name></argument>, <argument><name pos:line="56" pos:column="61">ParameterCollection</name></argument>&gt;</argument_list></name><argument_list pos:line="56" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="56" pos:column="82">"Select"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="92">sqlDataSource</name><op:operator pos:line="56" pos:column="105">.</op:operator><name pos:line="56" pos:column="106">SelectParameters</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="57" pos:column="21">parameters</name><op:operator pos:line="57" pos:column="31">.</op:operator><name pos:line="57" pos:column="32">Add</name></name><argument_list pos:line="57" pos:column="35">(<argument><expr><op:operator pos:line="57" pos:column="36">new</op:operator> <call><name><name pos:line="57" pos:column="40">KeyValuePair</name><argument_list pos:line="57" pos:column="52">&lt;<argument><name pos:line="57" pos:column="53">string</name></argument>, <argument><name pos:line="57" pos:column="61">ParameterCollection</name></argument>&gt;</argument_list></name><argument_list pos:line="57" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="57" pos:column="82">"Filter"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="92">sqlDataSource</name><op:operator pos:line="57" pos:column="105">.</op:operator><name pos:line="57" pos:column="106">FilterParameters</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>

                <decl_stmt><decl><type><name pos:line="60" pos:column="17">var</name></type> <name pos:line="60" pos:column="21">linqDataSource</name> <init pos:line="60" pos:column="36">= <expr><name><name pos:line="60" pos:column="38">DataBoundControl</name><op:operator pos:line="60" pos:column="54">.</op:operator><name pos:line="60" pos:column="55">DataSourceObject</name></name> <op:operator pos:line="60" pos:column="72">as</op:operator> <name pos:line="60" pos:column="75">LinqDataSource</name></expr></init></decl>;</decl_stmt>
                <if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">linqDataSource</name> <op:operator pos:line="61" pos:column="36">!=</op:operator> <name pos:line="61" pos:column="39">null</name></expr>)</condition><then pos:line="61" pos:column="44">
                <block pos:line="62" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="63" pos:column="21">parameters</name><op:operator pos:line="63" pos:column="31">.</op:operator><name pos:line="63" pos:column="32">Add</name></name><argument_list pos:line="63" pos:column="35">(<argument><expr><op:operator pos:line="63" pos:column="36">new</op:operator> <call><name><name pos:line="63" pos:column="40">KeyValuePair</name><argument_list pos:line="63" pos:column="52">&lt;<argument><name pos:line="63" pos:column="53">string</name></argument>, <argument><name pos:line="63" pos:column="61">ParameterCollection</name></argument>&gt;</argument_list></name><argument_list pos:line="63" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="82">"Select"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="92">linqDataSource</name><op:operator pos:line="63" pos:column="106">.</op:operator><name pos:line="63" pos:column="107">SelectParameters</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="64" pos:column="21">parameters</name><op:operator pos:line="64" pos:column="31">.</op:operator><name pos:line="64" pos:column="32">Add</name></name><argument_list pos:line="64" pos:column="35">(<argument><expr><op:operator pos:line="64" pos:column="36">new</op:operator> <call><name><name pos:line="64" pos:column="40">KeyValuePair</name><argument_list pos:line="64" pos:column="52">&lt;<argument><name pos:line="64" pos:column="53">string</name></argument>, <argument><name pos:line="64" pos:column="61">ParameterCollection</name></argument>&gt;</argument_list></name><argument_list pos:line="64" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="64" pos:column="82">"Where"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="91">linqDataSource</name><op:operator pos:line="64" pos:column="105">.</op:operator><name pos:line="64" pos:column="106">WhereParameters</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="65" pos:column="21">parameters</name><op:operator pos:line="65" pos:column="31">.</op:operator><name pos:line="65" pos:column="32">Add</name></name><argument_list pos:line="65" pos:column="35">(<argument><expr><op:operator pos:line="65" pos:column="36">new</op:operator> <call><name><name pos:line="65" pos:column="40">KeyValuePair</name><argument_list pos:line="65" pos:column="52">&lt;<argument><name pos:line="65" pos:column="53">string</name></argument>, <argument><name pos:line="65" pos:column="61">ParameterCollection</name></argument>&gt;</argument_list></name><argument_list pos:line="65" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="65" pos:column="82">"OrderBy"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="93">linqDataSource</name><op:operator pos:line="65" pos:column="107">.</op:operator><name pos:line="65" pos:column="108">OrderByParameters</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="66" pos:column="21">parameters</name><op:operator pos:line="66" pos:column="31">.</op:operator><name pos:line="66" pos:column="32">Add</name></name><argument_list pos:line="66" pos:column="35">(<argument><expr><op:operator pos:line="66" pos:column="36">new</op:operator> <call><name><name pos:line="66" pos:column="40">KeyValuePair</name><argument_list pos:line="66" pos:column="52">&lt;<argument><name pos:line="66" pos:column="53">string</name></argument>, <argument><name pos:line="66" pos:column="61">ParameterCollection</name></argument>&gt;</argument_list></name><argument_list pos:line="66" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="66" pos:column="82">"GroupBy"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="93">linqDataSource</name><op:operator pos:line="66" pos:column="107">.</op:operator><name pos:line="66" pos:column="108">GroupByParameters</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="67" pos:column="21">parameters</name><op:operator pos:line="67" pos:column="31">.</op:operator><name pos:line="67" pos:column="32">Add</name></name><argument_list pos:line="67" pos:column="35">(<argument><expr><op:operator pos:line="67" pos:column="36">new</op:operator> <call><name><name pos:line="67" pos:column="40">KeyValuePair</name><argument_list pos:line="67" pos:column="52">&lt;<argument><name pos:line="67" pos:column="53">string</name></argument>, <argument><name pos:line="67" pos:column="61">ParameterCollection</name></argument>&gt;</argument_list></name><argument_list pos:line="67" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="67" pos:column="82">"OrderGroupsBy"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="99">linqDataSource</name><op:operator pos:line="67" pos:column="113">.</op:operator><name pos:line="67" pos:column="114">OrderGroupsByParameters</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>

                <return pos:line="70" pos:column="17">return <expr><name pos:line="70" pos:column="24">parameters</name></expr>;</return>
            }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="74" pos:column="9">protected</specifier> <specifier pos:line="74" pos:column="19">override</specifier> <name pos:line="74" pos:column="28">void</name></type> <name pos:line="74" pos:column="33">OnInit</name><parameter_list pos:line="74" pos:column="39">(<param><decl><type><name pos:line="74" pos:column="40">EventArgs</name></type> <name pos:line="74" pos:column="50">e</name></decl></param>)</parameter_list>
        <block pos:line="75" pos:column="9">{
            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><call><call><name><name pos:line="76" pos:column="17">GlimpseConfiguration</name><op:operator pos:line="76" pos:column="37">.</op:operator><name pos:line="76" pos:column="38">GetConfiguredTimerStrategy</name></name><argument_list pos:line="76" pos:column="64">()</argument_list></call><argument_list pos:line="76" pos:column="66">()</argument_list></call> <op:operator pos:line="76" pos:column="69">!=</op:operator> <name pos:line="76" pos:column="72">null</name></expr>)</condition><then pos:line="76" pos:column="77">
            <block pos:line="77" pos:column="13">{
<cpp:if pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">if</cpp:directive> <expr><name pos:line="78" pos:column="5">NET45Plus</name></expr></cpp:if>
                <expr_stmt><expr><name><name pos:line="79" pos:column="17">DataBoundControl</name><op:operator pos:line="79" pos:column="33">.</op:operator><name pos:line="79" pos:column="34">CallingDataMethods</name></name> <op:operator pos:line="79" pos:column="53">+=</op:operator> <name pos:line="79" pos:column="56">DataBoundControl_CallingDataMethods</name></expr>;</expr_stmt>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif</cpp:directive></cpp:endif>
                <expr_stmt><expr><name><name pos:line="81" pos:column="17">DataBoundControl</name><op:operator pos:line="81" pos:column="33">.</op:operator><name pos:line="81" pos:column="34">DataBinding</name></name> <op:operator pos:line="81" pos:column="46">+=</op:operator> <name pos:line="81" pos:column="49">DataBoundControl_DataBinding</name></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="83" pos:column="13">base</name><op:operator pos:line="83" pos:column="17">.</op:operator><name pos:line="83" pos:column="18">OnInit</name></name><argument_list pos:line="83" pos:column="24">(<argument><expr><name pos:line="83" pos:column="25">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

<cpp:if pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">if</cpp:directive> <expr><name pos:line="86" pos:column="5">NET45Plus</name></expr></cpp:if>
        <function><type><specifier pos:line="87" pos:column="9">protected</specifier> <name pos:line="87" pos:column="19">void</name></type> <name pos:line="87" pos:column="24">DataBoundControl_CallingDataMethods</name><parameter_list pos:line="87" pos:column="59">(<param><decl><type><name pos:line="87" pos:column="60">object</name></type> <name pos:line="87" pos:column="67">sender</name></decl></param>, <param><decl><type><name pos:line="87" pos:column="75">CallingDataMethodsEventArgs</name></type> <name pos:line="87" pos:column="103">e</name></decl></param>)</parameter_list>
        <block pos:line="88" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="89" pos:column="13">HttpContext</name><op:operator pos:line="89" pos:column="24">.</op:operator><name pos:line="89" pos:column="25">Current</name><op:operator pos:line="89" pos:column="32">.</op:operator><name pos:line="89" pos:column="33">Items</name><index pos:line="89" pos:column="38">[<expr><lit:literal type="string" pos:line="89" pos:column="39">"_GlimpseWebFormModelBinding"</lit:literal></expr>]</index></name> <op:operator pos:line="89" pos:column="70">=</op:operator> <op:operator pos:line="89" pos:column="72">new</op:operator> <call><name pos:line="89" pos:column="76">DataBindParameterModel</name><argument_list pos:line="89" pos:column="98">(<argument><expr><name pos:line="89" pos:column="99">Offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
<cpp:endif pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">endif</cpp:directive></cpp:endif>

        <function><type><specifier pos:line="93" pos:column="9">protected</specifier> <name pos:line="93" pos:column="19">void</name></type> <name pos:line="93" pos:column="24">DataBoundControl_DataBinding</name><parameter_list pos:line="93" pos:column="52">(<param><decl><type><name pos:line="93" pos:column="53">object</name></type> <name pos:line="93" pos:column="60">sender</name></decl></param>, <param><decl><type><name pos:line="93" pos:column="68">EventArgs</name></type> <name pos:line="93" pos:column="78">e</name></decl></param>)</parameter_list>
        <block pos:line="94" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="95" pos:column="13">var</name></type> <name pos:line="95" pos:column="17">parameterModel</name> <init pos:line="95" pos:column="32">= <expr><op:operator pos:line="95" pos:column="34">new</op:operator> <call><name pos:line="95" pos:column="38">DataBindParameterModel</name><argument_list pos:line="95" pos:column="60">(<argument><expr><name pos:line="95" pos:column="61">Offset</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="96" pos:column="13">foreach (<init><decl><type><name pos:line="96" pos:column="22">var</name></type> <name pos:line="96" pos:column="26">parameters</name> <range pos:line="96" pos:column="37">in <expr><name pos:line="96" pos:column="40">Parameters</name></expr></range></decl></init>)
            <block pos:line="97" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="98" pos:column="17">var</name></type> <name pos:line="98" pos:column="21">values</name> <init pos:line="98" pos:column="28">= <expr><call><name><name pos:line="98" pos:column="30">parameters</name><op:operator pos:line="98" pos:column="40">.</op:operator><name pos:line="98" pos:column="41">Value</name><op:operator pos:line="98" pos:column="46">.</op:operator><name pos:line="98" pos:column="47">GetValues</name></name><argument_list pos:line="98" pos:column="56">(<argument><expr><name><name pos:line="98" pos:column="57">HttpContext</name><op:operator pos:line="98" pos:column="68">.</op:operator><name pos:line="98" pos:column="69">Current</name></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="78">DataBoundControl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <foreach pos:line="99" pos:column="17">foreach (<init><decl><type><name pos:line="99" pos:column="26">Parameter</name></type> <name pos:line="99" pos:column="36">parameter</name> <range pos:line="99" pos:column="46">in <expr><name><name pos:line="99" pos:column="49">parameters</name><op:operator pos:line="99" pos:column="59">.</op:operator><name pos:line="99" pos:column="60">Value</name></name></expr></range></decl></init>)
                <block pos:line="100" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="101" pos:column="21">var</name></type> <name pos:line="101" pos:column="25">field</name> <init pos:line="101" pos:column="31">= <expr><call><name pos:line="101" pos:column="33">GetField</name><argument_list pos:line="101" pos:column="41">(<argument><expr><name pos:line="101" pos:column="42">parameter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="102" pos:column="21">var</name></type> <name pos:line="102" pos:column="25">defaultValue</name> <init pos:line="102" pos:column="38">= <expr><call><name pos:line="102" pos:column="40">GetDefaultValue</name><argument_list pos:line="102" pos:column="55">(<argument><expr><name pos:line="102" pos:column="56">parameter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="103" pos:column="21">parameterModel</name><op:operator pos:line="103" pos:column="35">.</op:operator><name pos:line="103" pos:column="36">DataBindParameters</name><op:operator pos:line="103" pos:column="54">.</op:operator><name pos:line="103" pos:column="55">Add</name></name><argument_list pos:line="103" pos:column="58">(<argument><expr><op:operator pos:line="103" pos:column="59">new</op:operator> <call><name pos:line="103" pos:column="63">DataBindParameter</name><argument_list pos:line="103" pos:column="80">(<argument><expr><name pos:line="103" pos:column="81">field</name></expr></argument>, <argument><expr><call><name><name pos:line="103" pos:column="88">parameter</name><op:operator pos:line="103" pos:column="97">.</op:operator><name pos:line="103" pos:column="98">GetType</name></name><argument_list pos:line="103" pos:column="105">()</argument_list></call><op:operator pos:line="103" pos:column="107">.</op:operator><call><name><name pos:line="103" pos:column="108">Name</name><op:operator pos:line="103" pos:column="112">.</op:operator><name pos:line="103" pos:column="113">Replace</name></name><argument_list pos:line="103" pos:column="120">(<argument><expr><lit:literal type="string" pos:line="103" pos:column="121">"Parameter"</lit:literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="134">null</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="141">values</name><index pos:line="103" pos:column="147">[<expr><name><name pos:line="103" pos:column="148">parameter</name><op:operator pos:line="103" pos:column="157">.</op:operator><name pos:line="103" pos:column="158">Name</name></name></expr>]</index></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="165">parameters</name><op:operator pos:line="103" pos:column="175">.</op:operator><name pos:line="103" pos:column="176">Key</name></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="181">defaultValue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></foreach>
            }</block></foreach>
<cpp:if pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">if</cpp:directive> <expr><name pos:line="106" pos:column="5">NET45Plus</name></expr></cpp:if>
            <if pos:line="107" pos:column="13">if <condition pos:line="107" pos:column="16">(<expr><call><name><name pos:line="107" pos:column="17">HttpContext</name><op:operator pos:line="107" pos:column="28">.</op:operator><name pos:line="107" pos:column="29">Current</name><op:operator pos:line="107" pos:column="36">.</op:operator><name pos:line="107" pos:column="37">Items</name><op:operator pos:line="107" pos:column="42">.</op:operator><name pos:line="107" pos:column="43">Contains</name></name><argument_list pos:line="107" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="107" pos:column="52">"_GlimpseWebFormModelBinding"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="107" pos:column="83">
            <block pos:line="108" pos:column="13">{
                <expr_stmt><expr><name pos:line="109" pos:column="17">parameterModel</name> <op:operator pos:line="109" pos:column="32">=</op:operator> <op:operator pos:line="109" pos:column="34">(</op:operator><name pos:line="109" pos:column="35">DataBindParameterModel</name><op:operator pos:line="109" pos:column="57">)</op:operator><name><name pos:line="109" pos:column="58">HttpContext</name><op:operator pos:line="109" pos:column="69">.</op:operator><name pos:line="109" pos:column="70">Current</name><op:operator pos:line="109" pos:column="77">.</op:operator><name pos:line="109" pos:column="78">Items</name><index pos:line="109" pos:column="83">[<expr><lit:literal type="string" pos:line="109" pos:column="84">"_GlimpseWebFormModelBinding"</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="110" pos:column="17">HttpContext</name><op:operator pos:line="110" pos:column="28">.</op:operator><name pos:line="110" pos:column="29">Current</name><op:operator pos:line="110" pos:column="36">.</op:operator><name pos:line="110" pos:column="37">Items</name><op:operator pos:line="110" pos:column="42">.</op:operator><name pos:line="110" pos:column="43">Remove</name></name><argument_list pos:line="110" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="110" pos:column="50">"_GlimpseWebFormModelBinding"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
<cpp:endif pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">endif</cpp:directive></cpp:endif>
            <if pos:line="113" pos:column="13">if <condition pos:line="113" pos:column="16">(<expr><op:operator pos:line="113" pos:column="17">!</op:operator><call><name><name pos:line="113" pos:column="18">DataBindInfo</name><op:operator pos:line="113" pos:column="30">.</op:operator><name pos:line="113" pos:column="31">ContainsKey</name></name><argument_list pos:line="113" pos:column="42">(<argument><expr><name><name pos:line="113" pos:column="43">DataBoundControl</name><op:operator pos:line="113" pos:column="59">.</op:operator><name pos:line="113" pos:column="60">UniqueID</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="113" pos:column="70">
            <block pos:line="114" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="115" pos:column="17">DataBindInfo</name><index pos:line="115" pos:column="29">[<expr><name><name pos:line="115" pos:column="30">DataBoundControl</name><op:operator pos:line="115" pos:column="46">.</op:operator><name pos:line="115" pos:column="47">UniqueID</name></name></expr>]</index></name> <op:operator pos:line="115" pos:column="57">=</op:operator> <op:operator pos:line="115" pos:column="59">new</op:operator> <call><name><name pos:line="115" pos:column="63">List</name><argument_list pos:line="115" pos:column="67">&lt;<argument><name pos:line="115" pos:column="68">DataBindParameterModel</name></argument>&gt;</argument_list></name><argument_list pos:line="115" pos:column="91">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <expr_stmt><expr><name><name pos:line="118" pos:column="13">DataBindInfo</name><index pos:line="118" pos:column="25">[<expr><name><name pos:line="118" pos:column="26">DataBoundControl</name><op:operator pos:line="118" pos:column="42">.</op:operator><name pos:line="118" pos:column="43">UniqueID</name></name></expr>]</index></name><op:operator pos:line="118" pos:column="52">.</op:operator><call><name pos:line="118" pos:column="53">Add</name><argument_list pos:line="118" pos:column="56">(<argument><expr><name pos:line="118" pos:column="57">parameterModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="121" pos:column="9">private</specifier> <name pos:line="121" pos:column="17">string</name></type> <name pos:line="121" pos:column="24">GetField</name><parameter_list pos:line="121" pos:column="32">(<param><decl><type><name pos:line="121" pos:column="33">Parameter</name></type> <name pos:line="121" pos:column="43">parameter</name></decl></param>)</parameter_list>
        <block pos:line="122" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="123" pos:column="13">var</name></type> <name pos:line="123" pos:column="17">defaultPropertyAttribute</name> <init pos:line="123" pos:column="42">= <expr><call><name><name pos:line="123" pos:column="44">Attribute</name><op:operator pos:line="123" pos:column="53">.</op:operator><name pos:line="123" pos:column="54">GetCustomAttributes</name></name><argument_list pos:line="123" pos:column="73">(<argument><expr><call><name><name pos:line="123" pos:column="74">parameter</name><op:operator pos:line="123" pos:column="83">.</op:operator><name pos:line="123" pos:column="84">GetType</name></name><argument_list pos:line="123" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="123" pos:column="94">.</op:operator><call><name pos:line="123" pos:column="95">First</name><argument_list pos:line="123" pos:column="100">(<argument><expr><lambda><name pos:line="123" pos:column="101">a</name> <op:operator pos:line="123" pos:column="103">=&gt;</op:operator> <name pos:line="123" pos:column="106">a</name> <op:operator pos:line="123" pos:column="108">is</op:operator> <name pos:line="123" pos:column="111">DefaultPropertyAttribute</name></lambda></expr></argument>)</argument_list></call> <op:operator pos:line="123" pos:column="137">as</op:operator> <name pos:line="123" pos:column="140">DefaultPropertyAttribute</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="124" pos:column="13">string</name></type> <name pos:line="124" pos:column="20">field</name> <init pos:line="124" pos:column="26">= <expr><name pos:line="124" pos:column="28">null</name></expr></init></decl>;</decl_stmt>
            <if pos:line="125" pos:column="13">if <condition pos:line="125" pos:column="16">(<expr><name pos:line="125" pos:column="17">defaultPropertyAttribute</name> <op:operator pos:line="125" pos:column="42">!=</op:operator> <name pos:line="125" pos:column="45">null</name> <op:operator pos:line="125" pos:column="50">&amp;&amp;</op:operator> <name><name pos:line="125" pos:column="53">defaultPropertyAttribute</name><op:operator pos:line="125" pos:column="77">.</op:operator><name pos:line="125" pos:column="78">Name</name></name> <op:operator pos:line="125" pos:column="83">!=</op:operator> <lit:literal type="string" pos:line="125" pos:column="86">"DefaultValue"</lit:literal></expr>)</condition><then pos:line="125" pos:column="101">
            <block pos:line="126" pos:column="13">{
                <expr_stmt><expr><name pos:line="127" pos:column="17">field</name> <op:operator pos:line="127" pos:column="23">=</op:operator> <call><name><name pos:line="127" pos:column="25">parameter</name><op:operator pos:line="127" pos:column="34">.</op:operator><name pos:line="127" pos:column="35">GetType</name></name><argument_list pos:line="127" pos:column="42">()</argument_list></call><op:operator pos:line="127" pos:column="44">.</op:operator><call><name pos:line="127" pos:column="45">GetProperty</name><argument_list pos:line="127" pos:column="56">(<argument><expr><name><name pos:line="127" pos:column="57">defaultPropertyAttribute</name><op:operator pos:line="127" pos:column="81">.</op:operator><name pos:line="127" pos:column="82">Name</name></name></expr></argument>)</argument_list></call><op:operator pos:line="127" pos:column="87">.</op:operator><call><name pos:line="127" pos:column="88">GetValue</name><argument_list pos:line="127" pos:column="96">(<argument><expr><name pos:line="127" pos:column="97">parameter</name></expr></argument>, <argument><expr><name pos:line="127" pos:column="108">null</name></expr></argument>)</argument_list></call> <op:operator pos:line="127" pos:column="114">as</op:operator> <name pos:line="127" pos:column="117">string</name></expr>;</expr_stmt>
            }</block></then></if>

            <return pos:line="130" pos:column="13">return <expr><name pos:line="130" pos:column="20">field</name> <op:operator pos:line="130" pos:column="26">??</op:operator> <name><name pos:line="130" pos:column="29">parameter</name><op:operator pos:line="130" pos:column="38">.</op:operator><name pos:line="130" pos:column="39">Name</name></name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="133" pos:column="9">private</specifier> <name pos:line="133" pos:column="17">object</name></type> <name pos:line="133" pos:column="24">GetDefaultValue</name><parameter_list pos:line="133" pos:column="39">(<param><decl><type><name pos:line="133" pos:column="40">Parameter</name></type> <name pos:line="133" pos:column="50">parameter</name></decl></param>)</parameter_list>
        <block pos:line="134" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="135" pos:column="13">object</name></type> <name pos:line="135" pos:column="20">defaultValue</name> <init pos:line="135" pos:column="33">= <expr><name><name pos:line="135" pos:column="35">parameter</name><op:operator pos:line="135" pos:column="44">.</op:operator><name pos:line="135" pos:column="45">DefaultValue</name></name></expr></init></decl>;</decl_stmt>
            <if pos:line="136" pos:column="13">if <condition pos:line="136" pos:column="16">(<expr><op:operator pos:line="136" pos:column="17">!</op:operator><call><name><name pos:line="136" pos:column="18">string</name><op:operator pos:line="136" pos:column="24">.</op:operator><name pos:line="136" pos:column="25">IsNullOrEmpty</name></name><argument_list pos:line="136" pos:column="38">(<argument><expr><name><name pos:line="136" pos:column="39">parameter</name><op:operator pos:line="136" pos:column="48">.</op:operator><name pos:line="136" pos:column="49">DefaultValue</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="136" pos:column="63">
            <block pos:line="137" pos:column="13">{
                <if pos:line="138" pos:column="17">if <condition pos:line="138" pos:column="20">(<expr><name><name pos:line="138" pos:column="21">parameter</name><op:operator pos:line="138" pos:column="30">.</op:operator><name pos:line="138" pos:column="31">Type</name></name> <op:operator pos:line="138" pos:column="36">!=</op:operator> <name><name pos:line="138" pos:column="39">TypeCode</name><op:operator pos:line="138" pos:column="47">.</op:operator><name pos:line="138" pos:column="48">Empty</name> <type:modifier pos:line="138" pos:column="54">&amp;&amp;</type:modifier></name> <name><name pos:line="138" pos:column="57">parameter</name><op:operator pos:line="138" pos:column="66">.</op:operator><name pos:line="138" pos:column="67">Type</name></name> <op:operator pos:line="138" pos:column="72">!=</op:operator> <name><name pos:line="138" pos:column="75">TypeCode</name><op:operator pos:line="138" pos:column="83">.</op:operator><name pos:line="138" pos:column="84">Object</name> <type:modifier pos:line="138" pos:column="91">&amp;&amp;</type:modifier></name> <name><name pos:line="138" pos:column="94">parameter</name><op:operator pos:line="138" pos:column="103">.</op:operator><name pos:line="138" pos:column="104">Type</name></name> <op:operator pos:line="138" pos:column="109">!=</op:operator> <name><name pos:line="138" pos:column="112">TypeCode</name><op:operator pos:line="138" pos:column="120">.</op:operator><name pos:line="138" pos:column="121">DBNull</name></name></expr>)</condition><then pos:line="138" pos:column="128">
                <block pos:line="139" pos:column="17">{
                    <expr_stmt><expr><name pos:line="140" pos:column="21">defaultValue</name> <op:operator pos:line="140" pos:column="34">=</op:operator> <call><name><name pos:line="140" pos:column="36">Convert</name><op:operator pos:line="140" pos:column="43">.</op:operator><name pos:line="140" pos:column="44">ChangeType</name></name><argument_list pos:line="140" pos:column="54">(<argument><expr><name><name pos:line="140" pos:column="55">parameter</name><op:operator pos:line="140" pos:column="64">.</op:operator><name pos:line="140" pos:column="65">DefaultValue</name></name></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="79">parameter</name><op:operator pos:line="140" pos:column="88">.</op:operator><name pos:line="140" pos:column="89">Type</name></name></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="95">CultureInfo</name><op:operator pos:line="140" pos:column="106">.</op:operator><name pos:line="140" pos:column="107">CurrentCulture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>

            <return pos:line="144" pos:column="13">return <expr><name pos:line="144" pos:column="20">defaultValue</name></expr>;</return>
        }</block></function>
    }</block></class>

    <class><specifier pos:line="148" pos:column="5">public</specifier> class <name><name pos:line="148" pos:column="18">DataBoundControlAdapter</name><argument_list pos:line="148" pos:column="41">&lt;<argument><name pos:line="148" pos:column="42">TControlAdapter</name></argument>&gt;</argument_list></name> <super pos:line="148" pos:column="59">: <name pos:line="148" pos:column="61">DataBoundControlAdapter</name></super>
        <where pos:line="149" pos:column="9">where <name pos:line="149" pos:column="15">TControlAdapter</name> : <name pos:line="149" pos:column="33">ControlAdapter</name></where>
    <block pos:line="150" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="151" pos:column="9">private</specifier> <specifier pos:line="151" pos:column="17">static</specifier> <specifier pos:line="151" pos:column="24">readonly</specifier> <name pos:line="151" pos:column="33">FieldInfo</name></type> <name pos:line="151" pos:column="43">browserField</name> <init pos:line="151" pos:column="56">= <expr><call><name pos:line="151" pos:column="58">typeof</name><argument_list pos:line="151" pos:column="64">(<argument><expr><name pos:line="151" pos:column="65">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="151" pos:column="80">.</op:operator><call><name pos:line="151" pos:column="81">GetField</name><argument_list pos:line="151" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="151" pos:column="90">"_browser"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="102">BindingFlags</name><op:operator pos:line="151" pos:column="114">.</op:operator><name pos:line="151" pos:column="115">Instance</name></name> <op:operator pos:line="151" pos:column="124">|</op:operator> <name><name pos:line="151" pos:column="126">BindingFlags</name><op:operator pos:line="151" pos:column="138">.</op:operator><name pos:line="151" pos:column="139">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="152" pos:column="9">private</specifier> <specifier pos:line="152" pos:column="17">static</specifier> <specifier pos:line="152" pos:column="24">readonly</specifier> <name pos:line="152" pos:column="33">FieldInfo</name></type> <name pos:line="152" pos:column="43">controlField</name> <init pos:line="152" pos:column="56">= <expr><call><name pos:line="152" pos:column="58">typeof</name><argument_list pos:line="152" pos:column="64">(<argument><expr><name pos:line="152" pos:column="65">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="152" pos:column="80">.</op:operator><call><name pos:line="152" pos:column="81">GetField</name><argument_list pos:line="152" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="152" pos:column="90">"_control"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="152" pos:column="102">BindingFlags</name><op:operator pos:line="152" pos:column="114">.</op:operator><name pos:line="152" pos:column="115">Instance</name></name> <op:operator pos:line="152" pos:column="124">|</op:operator> <name><name pos:line="152" pos:column="126">BindingFlags</name><op:operator pos:line="152" pos:column="138">.</op:operator><name pos:line="152" pos:column="139">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <constructor><specifier pos:line="154" pos:column="9">public</specifier> <name pos:line="154" pos:column="16">DataBoundControlAdapter</name><parameter_list pos:line="154" pos:column="39">()</parameter_list>
        <block pos:line="155" pos:column="9">{
            <expr_stmt><expr><name pos:line="156" pos:column="13">InnerAdapter</name> <op:operator pos:line="156" pos:column="26">=</op:operator> <call><name><name pos:line="156" pos:column="28">Activator</name><op:operator pos:line="156" pos:column="37">.</op:operator><name><name pos:line="156" pos:column="38">CreateInstance</name><argument_list pos:line="156" pos:column="52">&lt;<argument><name pos:line="156" pos:column="53">TControlAdapter</name></argument>&gt;</argument_list></name></name><argument_list pos:line="156" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="159" pos:column="9">private</specifier> <name pos:line="159" pos:column="17">ControlAdapter</name></type> <name pos:line="159" pos:column="32">InnerAdapter</name> <block pos:line="159" pos:column="45">{ <function_decl><name pos:line="159" pos:column="47">get</name>;</function_decl> <function_decl><name pos:line="159" pos:column="52">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="161" pos:column="9">private</specifier> <name pos:line="161" pos:column="17">bool</name></type> <name pos:line="161" pos:column="22">AdapterStateCopied</name> <block pos:line="161" pos:column="41">{ <function_decl><name pos:line="161" pos:column="43">get</name>;</function_decl> <function_decl><name pos:line="161" pos:column="48">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="163" pos:column="9">private</specifier> <specifier pos:line="163" pos:column="17">static</specifier> <specifier pos:line="163" pos:column="24">readonly</specifier> <name pos:line="163" pos:column="33">MethodInfo</name></type> <name pos:line="163" pos:column="44">BeginRenderInfo</name> <init pos:line="163" pos:column="60">= <expr><call><name pos:line="163" pos:column="62">typeof</name><argument_list pos:line="163" pos:column="68">(<argument><expr><name pos:line="163" pos:column="69">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="163" pos:column="84">.</op:operator><call><name pos:line="163" pos:column="85">GetMethod</name><argument_list pos:line="163" pos:column="94">(<argument><expr><lit:literal type="string" pos:line="163" pos:column="95">"BeginRender"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="163" pos:column="110">BindingFlags</name><op:operator pos:line="163" pos:column="122">.</op:operator><name pos:line="163" pos:column="123">Instance</name></name> <op:operator pos:line="163" pos:column="132">|</op:operator> <name><name pos:line="163" pos:column="134">BindingFlags</name><op:operator pos:line="163" pos:column="146">.</op:operator><name pos:line="163" pos:column="147">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="165" pos:column="9">protected</specifier> <specifier pos:line="165" pos:column="19">override</specifier> <name pos:line="165" pos:column="28">void</name></type> <name pos:line="165" pos:column="33">BeginRender</name><parameter_list pos:line="165" pos:column="44">(<param><decl><type><name pos:line="165" pos:column="45">HtmlTextWriter</name></type> <name pos:line="165" pos:column="60">writer</name></decl></param>)</parameter_list>
        <block pos:line="166" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="167" pos:column="13">CopyAccessState</name><argument_list pos:line="167" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="168" pos:column="13">BeginRenderInfo</name><op:operator pos:line="168" pos:column="28">.</op:operator><name pos:line="168" pos:column="29">Invoke</name></name><argument_list pos:line="168" pos:column="35">(<argument><expr><name pos:line="168" pos:column="36">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="168" pos:column="50">new</op:operator> <name><name pos:line="168" pos:column="54">object</name><index pos:line="168" pos:column="60">[]</index></name> <block pos:line="168" pos:column="63">{ <expr><name pos:line="168" pos:column="65">writer</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="171" pos:column="9">private</specifier> <specifier pos:line="171" pos:column="17">static</specifier> <specifier pos:line="171" pos:column="24">readonly</specifier> <name pos:line="171" pos:column="33">MethodInfo</name></type> <name pos:line="171" pos:column="44">CreateChildControlsInfo</name> <init pos:line="171" pos:column="68">= <expr><call><name pos:line="171" pos:column="70">typeof</name><argument_list pos:line="171" pos:column="76">(<argument><expr><name pos:line="171" pos:column="77">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="171" pos:column="92">.</op:operator><call><name pos:line="171" pos:column="93">GetMethod</name><argument_list pos:line="171" pos:column="102">(<argument><expr><lit:literal type="string" pos:line="171" pos:column="103">"CreateChildControls"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="171" pos:column="126">BindingFlags</name><op:operator pos:line="171" pos:column="138">.</op:operator><name pos:line="171" pos:column="139">Instance</name></name> <op:operator pos:line="171" pos:column="148">|</op:operator> <name><name pos:line="171" pos:column="150">BindingFlags</name><op:operator pos:line="171" pos:column="162">.</op:operator><name pos:line="171" pos:column="163">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="173" pos:column="9">protected</specifier> <specifier pos:line="173" pos:column="19">override</specifier> <name pos:line="173" pos:column="28">void</name></type> <name pos:line="173" pos:column="33">CreateChildControls</name><parameter_list pos:line="173" pos:column="52">()</parameter_list>
        <block pos:line="174" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="175" pos:column="13">CopyAccessState</name><argument_list pos:line="175" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="176" pos:column="13">CreateChildControlsInfo</name><op:operator pos:line="176" pos:column="36">.</op:operator><name pos:line="176" pos:column="37">Invoke</name></name><argument_list pos:line="176" pos:column="43">(<argument><expr><name pos:line="176" pos:column="44">InnerAdapter</name></expr></argument>, <argument><expr><name pos:line="176" pos:column="58">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="179" pos:column="9">private</specifier> <specifier pos:line="179" pos:column="17">static</specifier> <specifier pos:line="179" pos:column="24">readonly</specifier> <name pos:line="179" pos:column="33">MethodInfo</name></type> <name pos:line="179" pos:column="44">EndRenderInfo</name> <init pos:line="179" pos:column="58">= <expr><call><name pos:line="179" pos:column="60">typeof</name><argument_list pos:line="179" pos:column="66">(<argument><expr><name pos:line="179" pos:column="67">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="179" pos:column="82">.</op:operator><call><name pos:line="179" pos:column="83">GetMethod</name><argument_list pos:line="179" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="179" pos:column="93">"EndRender"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="179" pos:column="106">BindingFlags</name><op:operator pos:line="179" pos:column="118">.</op:operator><name pos:line="179" pos:column="119">Instance</name></name> <op:operator pos:line="179" pos:column="128">|</op:operator> <name><name pos:line="179" pos:column="130">BindingFlags</name><op:operator pos:line="179" pos:column="142">.</op:operator><name pos:line="179" pos:column="143">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="181" pos:column="9">protected</specifier> <specifier pos:line="181" pos:column="19">override</specifier> <name pos:line="181" pos:column="28">void</name></type> <name pos:line="181" pos:column="33">EndRender</name><parameter_list pos:line="181" pos:column="42">(<param><decl><type><name pos:line="181" pos:column="43">HtmlTextWriter</name></type> <name pos:line="181" pos:column="58">writer</name></decl></param>)</parameter_list>
        <block pos:line="182" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="183" pos:column="13">CopyAccessState</name><argument_list pos:line="183" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="184" pos:column="13">EndRenderInfo</name><op:operator pos:line="184" pos:column="26">.</op:operator><name pos:line="184" pos:column="27">Invoke</name></name><argument_list pos:line="184" pos:column="33">(<argument><expr><name pos:line="184" pos:column="34">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="184" pos:column="48">new</op:operator> <name><name pos:line="184" pos:column="52">object</name><index pos:line="184" pos:column="58">[]</index></name> <block pos:line="184" pos:column="61">{ <expr><name pos:line="184" pos:column="63">writer</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="187" pos:column="9">private</specifier> <specifier pos:line="187" pos:column="17">static</specifier> <specifier pos:line="187" pos:column="24">readonly</specifier> <name pos:line="187" pos:column="33">MethodInfo</name></type> <name pos:line="187" pos:column="44">LoadAdapterControlStateInfo</name> <init pos:line="187" pos:column="72">= <expr><call><name pos:line="187" pos:column="74">typeof</name><argument_list pos:line="187" pos:column="80">(<argument><expr><name pos:line="187" pos:column="81">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="187" pos:column="96">.</op:operator><call><name pos:line="187" pos:column="97">GetMethod</name><argument_list pos:line="187" pos:column="106">(<argument><expr><lit:literal type="string" pos:line="187" pos:column="107">"LoadAdapterControlState"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="187" pos:column="134">BindingFlags</name><op:operator pos:line="187" pos:column="146">.</op:operator><name pos:line="187" pos:column="147">Instance</name></name> <op:operator pos:line="187" pos:column="156">|</op:operator> <name><name pos:line="187" pos:column="158">BindingFlags</name><op:operator pos:line="187" pos:column="170">.</op:operator><name pos:line="187" pos:column="171">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="189" pos:column="9">protected</specifier> <specifier pos:line="189" pos:column="19">override</specifier> <name pos:line="189" pos:column="28">void</name></type> <name pos:line="189" pos:column="33">LoadAdapterControlState</name><parameter_list pos:line="189" pos:column="56">(<param><decl><type><name pos:line="189" pos:column="57">object</name></type> <name pos:line="189" pos:column="64">state</name></decl></param>)</parameter_list>
        <block pos:line="190" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="191" pos:column="13">CopyAccessState</name><argument_list pos:line="191" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="192" pos:column="13">LoadAdapterControlStateInfo</name><op:operator pos:line="192" pos:column="40">.</op:operator><name pos:line="192" pos:column="41">Invoke</name></name><argument_list pos:line="192" pos:column="47">(<argument><expr><name pos:line="192" pos:column="48">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="192" pos:column="62">new</op:operator> <name><name pos:line="192" pos:column="66">object</name><index pos:line="192" pos:column="72">[]</index></name> <block pos:line="192" pos:column="75">{ <expr><name pos:line="192" pos:column="77">state</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="195" pos:column="9">private</specifier> <specifier pos:line="195" pos:column="17">static</specifier> <specifier pos:line="195" pos:column="24">readonly</specifier> <name pos:line="195" pos:column="33">MethodInfo</name></type> <name pos:line="195" pos:column="44">LoadAdapterViewStateInfo</name> <init pos:line="195" pos:column="69">= <expr><call><name pos:line="195" pos:column="71">typeof</name><argument_list pos:line="195" pos:column="77">(<argument><expr><name pos:line="195" pos:column="78">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="195" pos:column="93">.</op:operator><call><name pos:line="195" pos:column="94">GetMethod</name><argument_list pos:line="195" pos:column="103">(<argument><expr><lit:literal type="string" pos:line="195" pos:column="104">"LoadAdapterViewState"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="195" pos:column="128">BindingFlags</name><op:operator pos:line="195" pos:column="140">.</op:operator><name pos:line="195" pos:column="141">Instance</name></name> <op:operator pos:line="195" pos:column="150">|</op:operator> <name><name pos:line="195" pos:column="152">BindingFlags</name><op:operator pos:line="195" pos:column="164">.</op:operator><name pos:line="195" pos:column="165">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="197" pos:column="9">protected</specifier> <specifier pos:line="197" pos:column="19">override</specifier> <name pos:line="197" pos:column="28">void</name></type> <name pos:line="197" pos:column="33">LoadAdapterViewState</name><parameter_list pos:line="197" pos:column="53">(<param><decl><type><name pos:line="197" pos:column="54">object</name></type> <name pos:line="197" pos:column="61">state</name></decl></param>)</parameter_list>
        <block pos:line="198" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="199" pos:column="13">LoadAdapterViewStateInfo</name><op:operator pos:line="199" pos:column="37">.</op:operator><name pos:line="199" pos:column="38">Invoke</name></name><argument_list pos:line="199" pos:column="44">(<argument><expr><name pos:line="199" pos:column="45">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="199" pos:column="59">new</op:operator> <name><name pos:line="199" pos:column="63">object</name><index pos:line="199" pos:column="69">[]</index></name> <block pos:line="199" pos:column="72">{ <expr><name pos:line="199" pos:column="74">state</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="202" pos:column="9">private</specifier> <specifier pos:line="202" pos:column="17">static</specifier> <specifier pos:line="202" pos:column="24">readonly</specifier> <name pos:line="202" pos:column="33">MethodInfo</name></type> <name pos:line="202" pos:column="44">OnInitInfo</name> <init pos:line="202" pos:column="55">= <expr><call><name pos:line="202" pos:column="57">typeof</name><argument_list pos:line="202" pos:column="63">(<argument><expr><name pos:line="202" pos:column="64">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="202" pos:column="79">.</op:operator><call><name pos:line="202" pos:column="80">GetMethod</name><argument_list pos:line="202" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="202" pos:column="90">"OnInit"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="202" pos:column="100">BindingFlags</name><op:operator pos:line="202" pos:column="112">.</op:operator><name pos:line="202" pos:column="113">Instance</name></name> <op:operator pos:line="202" pos:column="122">|</op:operator> <name><name pos:line="202" pos:column="124">BindingFlags</name><op:operator pos:line="202" pos:column="136">.</op:operator><name pos:line="202" pos:column="137">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="204" pos:column="9">protected</specifier> <specifier pos:line="204" pos:column="19">override</specifier> <name pos:line="204" pos:column="28">void</name></type> <name pos:line="204" pos:column="33">OnInit</name><parameter_list pos:line="204" pos:column="39">(<param><decl><type><name pos:line="204" pos:column="40">EventArgs</name></type> <name pos:line="204" pos:column="50">e</name></decl></param>)</parameter_list>
        <block pos:line="205" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="206" pos:column="13">CopyAccessState</name><argument_list pos:line="206" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <if pos:line="207" pos:column="13">if <condition pos:line="207" pos:column="16">(<expr><call><call><name><name pos:line="207" pos:column="17">GlimpseConfiguration</name><op:operator pos:line="207" pos:column="37">.</op:operator><name pos:line="207" pos:column="38">GetConfiguredTimerStrategy</name></name><argument_list pos:line="207" pos:column="64">()</argument_list></call><argument_list pos:line="207" pos:column="66">()</argument_list></call> <op:operator pos:line="207" pos:column="69">!=</op:operator> <name pos:line="207" pos:column="72">null</name></expr>)</condition><then pos:line="207" pos:column="77">
            <block pos:line="208" pos:column="13">{
<cpp:if pos:line="209" pos:column="1">#<cpp:directive pos:line="209" pos:column="2">if</cpp:directive> <expr><name pos:line="209" pos:column="5">NET45Plus</name></expr></cpp:if>
                <expr_stmt><expr><name><name pos:line="210" pos:column="17">DataBoundControl</name><op:operator pos:line="210" pos:column="33">.</op:operator><name pos:line="210" pos:column="34">CallingDataMethods</name></name> <op:operator pos:line="210" pos:column="53">+=</op:operator> <name pos:line="210" pos:column="56">DataBoundControl_CallingDataMethods</name></expr>;</expr_stmt>
<cpp:endif pos:line="211" pos:column="1">#<cpp:directive pos:line="211" pos:column="2">endif</cpp:directive></cpp:endif>
                <expr_stmt><expr><name><name pos:line="212" pos:column="17">DataBoundControl</name><op:operator pos:line="212" pos:column="33">.</op:operator><name pos:line="212" pos:column="34">DataBinding</name></name> <op:operator pos:line="212" pos:column="46">+=</op:operator> <name pos:line="212" pos:column="49">DataBoundControl_DataBinding</name></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="214" pos:column="13">OnInitInfo</name><op:operator pos:line="214" pos:column="23">.</op:operator><name pos:line="214" pos:column="24">Invoke</name></name><argument_list pos:line="214" pos:column="30">(<argument><expr><name pos:line="214" pos:column="31">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="214" pos:column="45">new</op:operator> <name><name pos:line="214" pos:column="49">object</name><index pos:line="214" pos:column="55">[]</index></name> <block pos:line="214" pos:column="58">{ <expr><name pos:line="214" pos:column="60">e</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="217" pos:column="9">private</specifier> <specifier pos:line="217" pos:column="17">static</specifier> <specifier pos:line="217" pos:column="24">readonly</specifier> <name pos:line="217" pos:column="33">MethodInfo</name></type> <name pos:line="217" pos:column="44">OnLoadInfo</name> <init pos:line="217" pos:column="55">= <expr><call><name pos:line="217" pos:column="57">typeof</name><argument_list pos:line="217" pos:column="63">(<argument><expr><name pos:line="217" pos:column="64">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="217" pos:column="79">.</op:operator><call><name pos:line="217" pos:column="80">GetMethod</name><argument_list pos:line="217" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="217" pos:column="90">"OnLoad"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="217" pos:column="100">BindingFlags</name><op:operator pos:line="217" pos:column="112">.</op:operator><name pos:line="217" pos:column="113">Instance</name></name> <op:operator pos:line="217" pos:column="122">|</op:operator> <name><name pos:line="217" pos:column="124">BindingFlags</name><op:operator pos:line="217" pos:column="136">.</op:operator><name pos:line="217" pos:column="137">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="219" pos:column="9">protected</specifier> <specifier pos:line="219" pos:column="19">override</specifier> <name pos:line="219" pos:column="28">void</name></type> <name pos:line="219" pos:column="33">OnLoad</name><parameter_list pos:line="219" pos:column="39">(<param><decl><type><name pos:line="219" pos:column="40">EventArgs</name></type> <name pos:line="219" pos:column="50">e</name></decl></param>)</parameter_list>
        <block pos:line="220" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="221" pos:column="13">CopyAccessState</name><argument_list pos:line="221" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="222" pos:column="13">OnLoadInfo</name><op:operator pos:line="222" pos:column="23">.</op:operator><name pos:line="222" pos:column="24">Invoke</name></name><argument_list pos:line="222" pos:column="30">(<argument><expr><name pos:line="222" pos:column="31">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="222" pos:column="45">new</op:operator> <name><name pos:line="222" pos:column="49">object</name><index pos:line="222" pos:column="55">[]</index></name> <block pos:line="222" pos:column="58">{ <expr><name pos:line="222" pos:column="60">e</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="225" pos:column="9">private</specifier> <specifier pos:line="225" pos:column="17">static</specifier> <specifier pos:line="225" pos:column="24">readonly</specifier> <name pos:line="225" pos:column="33">MethodInfo</name></type> <name pos:line="225" pos:column="44">OnPreRenderInfo</name> <init pos:line="225" pos:column="60">= <expr><call><name pos:line="225" pos:column="62">typeof</name><argument_list pos:line="225" pos:column="68">(<argument><expr><name pos:line="225" pos:column="69">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="225" pos:column="84">.</op:operator><call><name pos:line="225" pos:column="85">GetMethod</name><argument_list pos:line="225" pos:column="94">(<argument><expr><lit:literal type="string" pos:line="225" pos:column="95">"OnPreRender"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="225" pos:column="110">BindingFlags</name><op:operator pos:line="225" pos:column="122">.</op:operator><name pos:line="225" pos:column="123">Instance</name></name> <op:operator pos:line="225" pos:column="132">|</op:operator> <name><name pos:line="225" pos:column="134">BindingFlags</name><op:operator pos:line="225" pos:column="146">.</op:operator><name pos:line="225" pos:column="147">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="227" pos:column="9">protected</specifier> <specifier pos:line="227" pos:column="19">override</specifier> <name pos:line="227" pos:column="28">void</name></type> <name pos:line="227" pos:column="33">OnPreRender</name><parameter_list pos:line="227" pos:column="44">(<param><decl><type><name pos:line="227" pos:column="45">EventArgs</name></type> <name pos:line="227" pos:column="55">e</name></decl></param>)</parameter_list>
        <block pos:line="228" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="229" pos:column="13">CopyAccessState</name><argument_list pos:line="229" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="230" pos:column="13">OnPreRenderInfo</name><op:operator pos:line="230" pos:column="28">.</op:operator><name pos:line="230" pos:column="29">Invoke</name></name><argument_list pos:line="230" pos:column="35">(<argument><expr><name pos:line="230" pos:column="36">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="230" pos:column="50">new</op:operator> <name><name pos:line="230" pos:column="54">object</name><index pos:line="230" pos:column="60">[]</index></name> <block pos:line="230" pos:column="63">{ <expr><name pos:line="230" pos:column="65">e</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="233" pos:column="9">private</specifier> <specifier pos:line="233" pos:column="17">static</specifier> <specifier pos:line="233" pos:column="24">readonly</specifier> <name pos:line="233" pos:column="33">MethodInfo</name></type> <name pos:line="233" pos:column="44">OnUnloadInfo</name> <init pos:line="233" pos:column="57">= <expr><call><name pos:line="233" pos:column="59">typeof</name><argument_list pos:line="233" pos:column="65">(<argument><expr><name pos:line="233" pos:column="66">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="233" pos:column="81">.</op:operator><call><name pos:line="233" pos:column="82">GetMethod</name><argument_list pos:line="233" pos:column="91">(<argument><expr><lit:literal type="string" pos:line="233" pos:column="92">"OnUnload"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="233" pos:column="104">BindingFlags</name><op:operator pos:line="233" pos:column="116">.</op:operator><name pos:line="233" pos:column="117">Instance</name></name> <op:operator pos:line="233" pos:column="126">|</op:operator> <name><name pos:line="233" pos:column="128">BindingFlags</name><op:operator pos:line="233" pos:column="140">.</op:operator><name pos:line="233" pos:column="141">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="235" pos:column="9">protected</specifier> <specifier pos:line="235" pos:column="19">override</specifier> <name pos:line="235" pos:column="28">void</name></type> <name pos:line="235" pos:column="33">OnUnload</name><parameter_list pos:line="235" pos:column="41">(<param><decl><type><name pos:line="235" pos:column="42">EventArgs</name></type> <name pos:line="235" pos:column="52">e</name></decl></param>)</parameter_list>
        <block pos:line="236" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="237" pos:column="13">CopyAccessState</name><argument_list pos:line="237" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="238" pos:column="13">OnUnloadInfo</name><op:operator pos:line="238" pos:column="25">.</op:operator><name pos:line="238" pos:column="26">Invoke</name></name><argument_list pos:line="238" pos:column="32">(<argument><expr><name pos:line="238" pos:column="33">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="238" pos:column="47">new</op:operator> <name><name pos:line="238" pos:column="51">object</name><index pos:line="238" pos:column="57">[]</index></name> <block pos:line="238" pos:column="60">{ <expr><name pos:line="238" pos:column="62">e</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="241" pos:column="9">private</specifier> <specifier pos:line="241" pos:column="17">static</specifier> <specifier pos:line="241" pos:column="24">readonly</specifier> <name pos:line="241" pos:column="33">MethodInfo</name></type> <name pos:line="241" pos:column="44">RenderInfo</name> <init pos:line="241" pos:column="55">= <expr><call><name pos:line="241" pos:column="57">typeof</name><argument_list pos:line="241" pos:column="63">(<argument><expr><name pos:line="241" pos:column="64">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="241" pos:column="79">.</op:operator><call><name pos:line="241" pos:column="80">GetMethod</name><argument_list pos:line="241" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="241" pos:column="90">"Render"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="241" pos:column="100">BindingFlags</name><op:operator pos:line="241" pos:column="112">.</op:operator><name pos:line="241" pos:column="113">Instance</name></name> <op:operator pos:line="241" pos:column="122">|</op:operator> <name><name pos:line="241" pos:column="124">BindingFlags</name><op:operator pos:line="241" pos:column="136">.</op:operator><name pos:line="241" pos:column="137">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="243" pos:column="9">protected</specifier> <specifier pos:line="243" pos:column="19">override</specifier> <name pos:line="243" pos:column="28">void</name></type> <name pos:line="243" pos:column="33">Render</name><parameter_list pos:line="243" pos:column="39">(<param><decl><type><name pos:line="243" pos:column="40">HtmlTextWriter</name></type> <name pos:line="243" pos:column="55">writer</name></decl></param>)</parameter_list>
        <block pos:line="244" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="245" pos:column="13">CopyAccessState</name><argument_list pos:line="245" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="246" pos:column="13">RenderInfo</name><op:operator pos:line="246" pos:column="23">.</op:operator><name pos:line="246" pos:column="24">Invoke</name></name><argument_list pos:line="246" pos:column="30">(<argument><expr><name pos:line="246" pos:column="31">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="246" pos:column="45">new</op:operator> <name><name pos:line="246" pos:column="49">object</name><index pos:line="246" pos:column="55">[]</index></name> <block pos:line="246" pos:column="58">{ <expr><name pos:line="246" pos:column="60">writer</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="249" pos:column="9">private</specifier> <specifier pos:line="249" pos:column="17">static</specifier> <specifier pos:line="249" pos:column="24">readonly</specifier> <name pos:line="249" pos:column="33">MethodInfo</name></type> <name pos:line="249" pos:column="44">RenderChildrenInfo</name> <init pos:line="249" pos:column="63">= <expr><call><name pos:line="249" pos:column="65">typeof</name><argument_list pos:line="249" pos:column="71">(<argument><expr><name pos:line="249" pos:column="72">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="249" pos:column="87">.</op:operator><call><name pos:line="249" pos:column="88">GetMethod</name><argument_list pos:line="249" pos:column="97">(<argument><expr><lit:literal type="string" pos:line="249" pos:column="98">"RenderChildren"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="249" pos:column="116">BindingFlags</name><op:operator pos:line="249" pos:column="128">.</op:operator><name pos:line="249" pos:column="129">Instance</name></name> <op:operator pos:line="249" pos:column="138">|</op:operator> <name><name pos:line="249" pos:column="140">BindingFlags</name><op:operator pos:line="249" pos:column="152">.</op:operator><name pos:line="249" pos:column="153">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="251" pos:column="9">protected</specifier> <specifier pos:line="251" pos:column="19">override</specifier> <name pos:line="251" pos:column="28">void</name></type> <name pos:line="251" pos:column="33">RenderChildren</name><parameter_list pos:line="251" pos:column="47">(<param><decl><type><name pos:line="251" pos:column="48">HtmlTextWriter</name></type> <name pos:line="251" pos:column="63">writer</name></decl></param>)</parameter_list>
        <block pos:line="252" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="253" pos:column="13">CopyAccessState</name><argument_list pos:line="253" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="254" pos:column="13">RenderChildrenInfo</name><op:operator pos:line="254" pos:column="31">.</op:operator><name pos:line="254" pos:column="32">Invoke</name></name><argument_list pos:line="254" pos:column="38">(<argument><expr><name pos:line="254" pos:column="39">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="254" pos:column="53">new</op:operator> <name><name pos:line="254" pos:column="57">object</name><index pos:line="254" pos:column="63">[]</index></name> <block pos:line="254" pos:column="66">{ <expr><name pos:line="254" pos:column="68">writer</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="257" pos:column="9">private</specifier> <specifier pos:line="257" pos:column="17">static</specifier> <specifier pos:line="257" pos:column="24">readonly</specifier> <name pos:line="257" pos:column="33">MethodInfo</name></type> <name pos:line="257" pos:column="44">SaveAdapterControlStateInfo</name> <init pos:line="257" pos:column="72">= <expr><call><name pos:line="257" pos:column="74">typeof</name><argument_list pos:line="257" pos:column="80">(<argument><expr><name pos:line="257" pos:column="81">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="257" pos:column="96">.</op:operator><call><name pos:line="257" pos:column="97">GetMethod</name><argument_list pos:line="257" pos:column="106">(<argument><expr><lit:literal type="string" pos:line="257" pos:column="107">"SaveAdapterControlState"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="257" pos:column="134">BindingFlags</name><op:operator pos:line="257" pos:column="146">.</op:operator><name pos:line="257" pos:column="147">Instance</name></name> <op:operator pos:line="257" pos:column="156">|</op:operator> <name><name pos:line="257" pos:column="158">BindingFlags</name><op:operator pos:line="257" pos:column="170">.</op:operator><name pos:line="257" pos:column="171">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="259" pos:column="9">protected</specifier> <specifier pos:line="259" pos:column="19">override</specifier> <name pos:line="259" pos:column="28">object</name></type> <name pos:line="259" pos:column="35">SaveAdapterControlState</name><parameter_list pos:line="259" pos:column="58">()</parameter_list>
        <block pos:line="260" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="261" pos:column="13">CopyAccessState</name><argument_list pos:line="261" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="262" pos:column="13">return <expr><call><name><name pos:line="262" pos:column="20">SaveAdapterControlStateInfo</name><op:operator pos:line="262" pos:column="47">.</op:operator><name pos:line="262" pos:column="48">Invoke</name></name><argument_list pos:line="262" pos:column="54">(<argument><expr><name pos:line="262" pos:column="55">InnerAdapter</name></expr></argument>, <argument><expr><name pos:line="262" pos:column="69">null</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="265" pos:column="9">private</specifier> <specifier pos:line="265" pos:column="17">static</specifier> <specifier pos:line="265" pos:column="24">readonly</specifier> <name pos:line="265" pos:column="33">MethodInfo</name></type> <name pos:line="265" pos:column="44">SaveAdapterViewStateInfo</name> <init pos:line="265" pos:column="69">= <expr><call><name pos:line="265" pos:column="71">typeof</name><argument_list pos:line="265" pos:column="77">(<argument><expr><name pos:line="265" pos:column="78">ControlAdapter</name></expr></argument>)</argument_list></call><op:operator pos:line="265" pos:column="93">.</op:operator><call><name pos:line="265" pos:column="94">GetMethod</name><argument_list pos:line="265" pos:column="103">(<argument><expr><lit:literal type="string" pos:line="265" pos:column="104">"SaveAdapterViewState"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="265" pos:column="128">BindingFlags</name><op:operator pos:line="265" pos:column="140">.</op:operator><name pos:line="265" pos:column="141">Instance</name></name> <op:operator pos:line="265" pos:column="150">|</op:operator> <name><name pos:line="265" pos:column="152">BindingFlags</name><op:operator pos:line="265" pos:column="164">.</op:operator><name pos:line="265" pos:column="165">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="267" pos:column="9">protected</specifier> <specifier pos:line="267" pos:column="19">override</specifier> <name pos:line="267" pos:column="28">object</name></type> <name pos:line="267" pos:column="35">SaveAdapterViewState</name><parameter_list pos:line="267" pos:column="55">()</parameter_list>
        <block pos:line="268" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="269" pos:column="13">CopyAccessState</name><argument_list pos:line="269" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="270" pos:column="13">return <expr><call><name><name pos:line="270" pos:column="20">SaveAdapterViewStateInfo</name><op:operator pos:line="270" pos:column="44">.</op:operator><name pos:line="270" pos:column="45">Invoke</name></name><argument_list pos:line="270" pos:column="51">(<argument><expr><name pos:line="270" pos:column="52">InnerAdapter</name></expr></argument>, <argument><expr><name pos:line="270" pos:column="66">null</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="273" pos:column="9">private</specifier> <name pos:line="273" pos:column="17">void</name></type> <name pos:line="273" pos:column="22">CopyAccessState</name><parameter_list pos:line="273" pos:column="37">()</parameter_list>
        <block pos:line="274" pos:column="9">{
            <if pos:line="275" pos:column="13">if <condition pos:line="275" pos:column="16">(<expr><op:operator pos:line="275" pos:column="17">!</op:operator><name pos:line="275" pos:column="18">AdapterStateCopied</name></expr>)</condition><then pos:line="275" pos:column="37">
            <block pos:line="276" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="277" pos:column="17">browserField</name><op:operator pos:line="277" pos:column="29">.</op:operator><name pos:line="277" pos:column="30">SetValue</name></name><argument_list pos:line="277" pos:column="38">(<argument><expr><name pos:line="277" pos:column="39">InnerAdapter</name></expr></argument>, <argument><expr><name pos:line="277" pos:column="53">Browser</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="278" pos:column="17">controlField</name><op:operator pos:line="278" pos:column="29">.</op:operator><name pos:line="278" pos:column="30">SetValue</name></name><argument_list pos:line="278" pos:column="38">(<argument><expr><name pos:line="278" pos:column="39">InnerAdapter</name></expr></argument>, <argument><expr><name pos:line="278" pos:column="53">Control</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><name pos:line="280" pos:column="17">AdapterStateCopied</name> <op:operator pos:line="280" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="280" pos:column="38">true</lit:literal></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
