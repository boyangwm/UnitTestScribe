<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Inspector\TraceInspector.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Linq</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name><op:operator pos:line="2" pos:column="19">.</op:operator><name pos:line="2" pos:column="20">Extensibility</name></name>;</using>

<namespace pos:line="4" pos:column="1">namespace <name><name pos:line="4" pos:column="11">Glimpse</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">Core</name><op:operator pos:line="4" pos:column="23">.</op:operator><name pos:line="4" pos:column="24">Inspector</name></name>
<block pos:line="5" pos:column="1">{
    <comment type="line" pos:line="6" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="7" pos:column="5">/// The implementation of &lt;see cref="IInspector"/&gt; for capturing &lt;c&gt;System.Diagnostics.Trace&lt;/c&gt; messages.</comment>
    <comment type="line" pos:line="8" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="9" pos:column="5">public</specifier> class <name pos:line="9" pos:column="18">TraceInspector</name> <super pos:line="9" pos:column="33">: <name pos:line="9" pos:column="35">IInspector</name></super>
    <block pos:line="10" pos:column="5">{
        <comment type="line" pos:line="11" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="12" pos:column="9">/// Setups the specified context.</comment>
        <comment type="line" pos:line="13" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="14" pos:column="9">/// &lt;param name="context"&gt;The context.&lt;/param&gt;</comment>
        <comment type="line" pos:line="15" pos:column="9">/// &lt;remarks&gt;</comment>
        <comment type="line" pos:line="16" pos:column="9">/// Executed during the &lt;see cref="Glimpse.Core.Framework.IGlimpseRuntime.Initialize" /&gt; phase of</comment>
        <comment type="line" pos:line="17" pos:column="9">/// system startup. Specifically, with the ASP.NET provider, this is wired to/implemented by the</comment>
        <comment type="line" pos:line="18" pos:column="9">/// &lt;c&gt;System.Web.IHttpModule.Init&lt;/c&gt; method.</comment>
        <comment type="line" pos:line="19" pos:column="9">/// &lt;/remarks&gt;</comment>
        <function><type><specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">void</name></type> <name pos:line="20" pos:column="21">Setup</name><parameter_list pos:line="20" pos:column="26">(<param><decl><type><name pos:line="20" pos:column="27">IInspectorContext</name></type> <name pos:line="20" pos:column="45">context</name></decl></param>)</parameter_list>
        <block pos:line="21" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">var</name></type> <name pos:line="22" pos:column="17">traceListeners</name> <init pos:line="22" pos:column="32">= <expr><name><name pos:line="22" pos:column="34">System</name><op:operator pos:line="22" pos:column="40">.</op:operator><name pos:line="22" pos:column="41">Diagnostics</name><op:operator pos:line="22" pos:column="52">.</op:operator><name pos:line="22" pos:column="53">Trace</name><op:operator pos:line="22" pos:column="58">.</op:operator><name pos:line="22" pos:column="59">Listeners</name></name></expr></init></decl>;</decl_stmt>
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><op:operator pos:line="23" pos:column="17">!</op:operator><call><name><name pos:line="23" pos:column="18">traceListeners</name><op:operator pos:line="23" pos:column="32">.</op:operator><name><name pos:line="23" pos:column="33">OfType</name><argument_list pos:line="23" pos:column="39">&lt;<argument><name pos:line="23" pos:column="40">TraceListener</name></argument>&gt;</argument_list></name></name><argument_list pos:line="23" pos:column="54">()</argument_list></call><op:operator pos:line="23" pos:column="56">.</op:operator><call><name pos:line="23" pos:column="57">Any</name><argument_list pos:line="23" pos:column="60">()</argument_list></call></expr>)</condition><then pos:line="23" pos:column="63">
            <block pos:line="24" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="25" pos:column="17">traceListeners</name><op:operator pos:line="25" pos:column="31">.</op:operator><name pos:line="25" pos:column="32">Add</name></name><argument_list pos:line="25" pos:column="35">(<argument><expr><op:operator pos:line="25" pos:column="36">new</op:operator> <call><name pos:line="25" pos:column="40">TraceListener</name><argument_list pos:line="25" pos:column="53">(<argument><expr><name><name pos:line="25" pos:column="54">context</name><op:operator pos:line="25" pos:column="61">.</op:operator><name pos:line="25" pos:column="62">MessageBroker</name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="77">context</name><op:operator pos:line="25" pos:column="84">.</op:operator><name pos:line="25" pos:column="85">TimerStrategy</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
