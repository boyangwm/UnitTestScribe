<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Tab\Assist\Plugin.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>

<namespace pos:line="3" pos:column="1">namespace <name><name pos:line="3" pos:column="11">Glimpse</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">Core</name><op:operator pos:line="3" pos:column="23">.</op:operator><name pos:line="3" pos:column="24">Tab</name><op:operator pos:line="3" pos:column="27">.</op:operator><name pos:line="3" pos:column="28">Assist</name></name>
<block pos:line="4" pos:column="1">{
    <class><specifier pos:line="5" pos:column="5">public</specifier> <specifier pos:line="5" pos:column="12">static</specifier> class <name pos:line="5" pos:column="25">Plugin</name>
    <block pos:line="6" pos:column="5">{
        <function><type><specifier pos:line="7" pos:column="9">public</specifier> <specifier pos:line="7" pos:column="16">static</specifier> <name pos:line="7" pos:column="23">TabSection</name></type> <name pos:line="7" pos:column="34">Create</name><parameter_list pos:line="7" pos:column="40">(<param><decl><type><specifier pos:line="7" pos:column="41">params</specifier> <name><name pos:line="7" pos:column="48">string</name><index pos:line="7" pos:column="54">[]</index></name></type> <name pos:line="7" pos:column="57">headers</name></decl></param>)</parameter_list>
        <block pos:line="8" pos:column="9">{
            <return pos:line="9" pos:column="13">return <expr><op:operator pos:line="9" pos:column="20">new</op:operator> <call><name pos:line="9" pos:column="24">TabSection</name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">headers</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="12" pos:column="9">public</specifier> <specifier pos:line="12" pos:column="16">static</specifier> <name pos:line="12" pos:column="23">TabSection</name></type> <name pos:line="12" pos:column="34">Section</name><parameter_list pos:line="12" pos:column="41">(<param><decl><type><name pos:line="12" pos:column="42">this</name> <name pos:line="12" pos:column="47">TabSection</name></type> <name pos:line="12" pos:column="58">current</name></decl></param>, <param><decl><type><name pos:line="12" pos:column="67">string</name></type> <name pos:line="12" pos:column="74">sectionName</name></decl></param>, <param><decl><type><name><name pos:line="12" pos:column="87">Action</name><argument_list pos:line="12" pos:column="93">&lt;<argument><name pos:line="12" pos:column="94">TabSection</name></argument>&gt;</argument_list></name></type> <name pos:line="12" pos:column="106">section</name></decl></param>)</parameter_list>
        <block pos:line="13" pos:column="9">{
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><name pos:line="14" pos:column="17">section</name> <op:operator pos:line="14" pos:column="25">==</op:operator> <name pos:line="14" pos:column="28">null</name></expr>)</condition><then pos:line="14" pos:column="33">
            <block pos:line="15" pos:column="13">{
                <throw pos:line="16" pos:column="17">throw <expr><op:operator pos:line="16" pos:column="23">new</op:operator> <call><name pos:line="16" pos:column="27">ArgumentNullException</name><argument_list pos:line="16" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="16" pos:column="49">"section"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="16" pos:column="60">"Section must not be null!"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="19" pos:column="13">var</name></type> <name pos:line="19" pos:column="17">tabSection</name> <init pos:line="19" pos:column="28">= <expr><op:operator pos:line="19" pos:column="30">new</op:operator> <call><name pos:line="19" pos:column="34">TabSection</name><argument_list pos:line="19" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">section</name><op:operator pos:line="20" pos:column="20">.</op:operator><name pos:line="20" pos:column="21">Invoke</name></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">tabSection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="21" pos:column="13">return <expr><call><name><name pos:line="21" pos:column="20">current</name><op:operator pos:line="21" pos:column="27">.</op:operator><name pos:line="21" pos:column="28">Section</name></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">sectionName</name></expr></argument>, <argument><expr><name pos:line="21" pos:column="49">tabSection</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="24" pos:column="9">public</specifier> <specifier pos:line="24" pos:column="16">static</specifier> <name pos:line="24" pos:column="23">TabSection</name></type> <name pos:line="24" pos:column="34">Section</name><parameter_list pos:line="24" pos:column="41">(<param><decl><type><name pos:line="24" pos:column="42">this</name> <name pos:line="24" pos:column="47">TabSection</name></type> <name pos:line="24" pos:column="58">current</name></decl></param>, <param><decl><type><name pos:line="24" pos:column="67">string</name></type> <name pos:line="24" pos:column="74">sectionName</name></decl></param>, <param><decl><type><name pos:line="24" pos:column="87">TabSection</name></type> <name pos:line="24" pos:column="98">section</name></decl></param>)</parameter_list>
        <block pos:line="25" pos:column="9">{
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><call><name><name pos:line="26" pos:column="17">string</name><op:operator pos:line="26" pos:column="23">.</op:operator><name pos:line="26" pos:column="24">IsNullOrEmpty</name></name><argument_list pos:line="26" pos:column="37">(<argument><expr><name pos:line="26" pos:column="38">sectionName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="26" pos:column="51">
            <block pos:line="27" pos:column="13">{
                <throw pos:line="28" pos:column="17">throw <expr><op:operator pos:line="28" pos:column="23">new</op:operator> <call><name pos:line="28" pos:column="27">ArgumentException</name><argument_list pos:line="28" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="28" pos:column="45">"Section name must not be null or empty!"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="28" pos:column="88">"sectionName"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><name pos:line="31" pos:column="17">section</name> <op:operator pos:line="31" pos:column="25">==</op:operator> <name pos:line="31" pos:column="28">null</name></expr>)</condition><then pos:line="31" pos:column="33">
            <block pos:line="32" pos:column="13">{
                <throw pos:line="33" pos:column="17">throw <expr><op:operator pos:line="33" pos:column="23">new</op:operator> <call><name pos:line="33" pos:column="27">ArgumentNullException</name><argument_list pos:line="33" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="33" pos:column="49">"section"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="33" pos:column="60">"Section must not be null!"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">current</name><op:operator pos:line="36" pos:column="20">.</op:operator><name pos:line="36" pos:column="21">AddRow</name></name><argument_list pos:line="36" pos:column="27">()</argument_list></call>
                <op:operator pos:line="37" pos:column="17">.</op:operator><call><name pos:line="37" pos:column="18">Column</name><argument_list pos:line="37" pos:column="24">(<argument><expr><name pos:line="37" pos:column="25">sectionName</name></expr></argument>)</argument_list></call><op:operator pos:line="37" pos:column="37">.</op:operator><call><name pos:line="37" pos:column="38">Strong</name><argument_list pos:line="37" pos:column="44">()</argument_list></call>
                <op:operator pos:line="38" pos:column="17">.</op:operator><call><name pos:line="38" pos:column="18">Column</name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">section</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:line="40" pos:column="13">return <expr><name pos:line="40" pos:column="20">current</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
