<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.AspNet\HttpApplicationStateBaseDataStoreAdapter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Web</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name><op:operator pos:line="2" pos:column="19">.</op:operator><name pos:line="2" pos:column="20">Extensibility</name></name>;</using>

<namespace pos:line="4" pos:column="1">namespace <name><name pos:line="4" pos:column="11">Glimpse</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">AspNet</name></name>
<block pos:line="5" pos:column="1">{
    <class><specifier pos:line="6" pos:column="5">public</specifier> class <name pos:line="6" pos:column="18">HttpApplicationStateBaseDataStoreAdapter</name> <super pos:line="6" pos:column="59">: <name pos:line="6" pos:column="61">IDataStore</name></super>
    <block pos:line="7" pos:column="5">{
        <constructor><specifier pos:line="8" pos:column="9">public</specifier> <name pos:line="8" pos:column="16">HttpApplicationStateBaseDataStoreAdapter</name><parameter_list pos:line="8" pos:column="56">(<param><decl><type><name pos:line="8" pos:column="57">HttpApplicationStateBase</name></type> <name pos:line="8" pos:column="82">applicationState</name></decl></param>)</parameter_list>
        <block pos:line="9" pos:column="9">{
            <expr_stmt><expr><name pos:line="10" pos:column="13">ApplicationState</name> <op:operator pos:line="10" pos:column="30">=</op:operator> <name pos:line="10" pos:column="32">applicationState</name></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">internal</specifier> <name pos:line="13" pos:column="18">HttpApplicationStateBase</name></type> <name pos:line="13" pos:column="43">ApplicationState</name> <block pos:line="13" pos:column="60">{ <function_decl><name pos:line="13" pos:column="62">get</name>;</function_decl> <function_decl><name pos:line="13" pos:column="67">set</name>;</function_decl> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="15" pos:column="9">public</specifier> <name pos:line="15" pos:column="16">object</name></type> <name pos:line="15" pos:column="23">Get</name><parameter_list pos:line="15" pos:column="26">(<param><decl><type><name pos:line="15" pos:column="27">string</name></type> <name pos:line="15" pos:column="34">key</name></decl></param>)</parameter_list>
        <block pos:line="16" pos:column="9">{
            <return pos:line="17" pos:column="13">return <expr><call><name><name pos:line="17" pos:column="20">ApplicationState</name><op:operator pos:line="17" pos:column="36">.</op:operator><name pos:line="17" pos:column="37">Get</name></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name pos:line="17" pos:column="41">key</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">void</name></type> <name pos:line="20" pos:column="21">Set</name><parameter_list pos:line="20" pos:column="24">(<param><decl><type><name pos:line="20" pos:column="25">string</name></type> <name pos:line="20" pos:column="32">key</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="37">object</name></type> <name pos:line="20" pos:column="44">value</name></decl></param>)</parameter_list>
        <block pos:line="21" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">ApplicationState</name><op:operator pos:line="22" pos:column="29">.</op:operator><name pos:line="22" pos:column="30">Set</name></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">key</name></expr></argument>, <argument><expr><name pos:line="22" pos:column="39">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="25" pos:column="9">public</specifier> <name pos:line="25" pos:column="16">bool</name></type> <name pos:line="25" pos:column="21">Contains</name><parameter_list pos:line="25" pos:column="29">(<param><decl><type><name pos:line="25" pos:column="30">string</name></type> <name pos:line="25" pos:column="37">key</name></decl></param>)</parameter_list>
        <block pos:line="26" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="27" pos:column="13">var</name></type> <name pos:line="27" pos:column="17">result</name> <init pos:line="27" pos:column="24">= <expr><call><name><name pos:line="27" pos:column="26">ApplicationState</name><op:operator pos:line="27" pos:column="42">.</op:operator><name pos:line="27" pos:column="43">Get</name></name><argument_list pos:line="27" pos:column="46">(<argument><expr><name pos:line="27" pos:column="47">key</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <return pos:line="29" pos:column="13">return <expr><name pos:line="29" pos:column="20">result</name> <op:operator pos:line="29" pos:column="27">!=</op:operator> <name pos:line="29" pos:column="30">null</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
