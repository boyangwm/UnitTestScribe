<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WebForms.WingTip.Sample\Site.Master.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Web</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Security</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Web</name><op:operator pos:line="6" pos:column="17">.</op:operator><name pos:line="6" pos:column="18">UI</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Web</name><op:operator pos:line="7" pos:column="17">.</op:operator><name pos:line="7" pos:column="18">UI</name><op:operator pos:line="7" pos:column="20">.</op:operator><name pos:line="7" pos:column="21">WebControls</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">WingtipToys</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">Models</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">WingtipToys</name><op:operator pos:line="9" pos:column="18">.</op:operator><name pos:line="9" pos:column="19">Logic</name></name>;</using>

<namespace pos:line="11" pos:column="1">namespace <name pos:line="11" pos:column="11">WingtipToys</name>
<block pos:line="12" pos:column="1">{
    <class><specifier pos:line="13" pos:column="5">public</specifier> <specifier pos:line="13" pos:column="12">partial</specifier> class <name pos:line="13" pos:column="26">SiteMaster</name> <super pos:line="13" pos:column="37">: <name pos:line="13" pos:column="39">MasterPage</name></super>
    <block pos:line="14" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">private</specifier> <specifier pos:line="15" pos:column="17">const</specifier> <name pos:line="15" pos:column="23">string</name></type> <name pos:line="15" pos:column="30">AntiXsrfTokenKey</name> <init pos:line="15" pos:column="47">= <expr><lit:literal type="string" pos:line="15" pos:column="49">"__AntiXsrfToken"</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">private</specifier> <specifier pos:line="16" pos:column="17">const</specifier> <name pos:line="16" pos:column="23">string</name></type> <name pos:line="16" pos:column="30">AntiXsrfUserNameKey</name> <init pos:line="16" pos:column="50">= <expr><lit:literal type="string" pos:line="16" pos:column="52">"__AntiXsrfUserName"</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">private</specifier> <name pos:line="17" pos:column="17">string</name></type> <name pos:line="17" pos:column="24">_antiXsrfTokenValue</name></decl>;</decl_stmt>

        <function><type><specifier pos:line="19" pos:column="9">protected</specifier> <name pos:line="19" pos:column="19">void</name></type> <name pos:line="19" pos:column="24">Page_Init</name><parameter_list pos:line="19" pos:column="33">(<param><decl><type><name pos:line="19" pos:column="34">object</name></type> <name pos:line="19" pos:column="41">sender</name></decl></param>, <param><decl><type><name pos:line="19" pos:column="49">EventArgs</name></type> <name pos:line="19" pos:column="59">e</name></decl></param>)</parameter_list>
        <block pos:line="20" pos:column="9">{
            <comment type="line" pos:line="21" pos:column="13">// The code below helps to protect against XSRF attacks</comment>
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">var</name></type> <name pos:line="22" pos:column="17">requestCookie</name> <init pos:line="22" pos:column="31">= <expr><name><name pos:line="22" pos:column="33">Request</name><op:operator pos:line="22" pos:column="40">.</op:operator><name pos:line="22" pos:column="41">Cookies</name><index pos:line="22" pos:column="48">[<expr><name pos:line="22" pos:column="49">AntiXsrfTokenKey</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">Guid</name></type> <name pos:line="23" pos:column="18">requestCookieGuidValue</name></decl>;</decl_stmt>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name pos:line="24" pos:column="17">requestCookie</name> <op:operator pos:line="24" pos:column="31">!=</op:operator> <name pos:line="24" pos:column="34">null</name> <op:operator pos:line="24" pos:column="39">&amp;&amp;</op:operator> <call><name><name pos:line="24" pos:column="42">Guid</name><op:operator pos:line="24" pos:column="46">.</op:operator><name pos:line="24" pos:column="47">TryParse</name></name><argument_list pos:line="24" pos:column="55">(<argument><expr><name><name pos:line="24" pos:column="56">requestCookie</name><op:operator pos:line="24" pos:column="69">.</op:operator><name pos:line="24" pos:column="70">Value</name></name></expr></argument>, <argument><expr pos:line="24" pos:column="77">out <name pos:line="24" pos:column="81">requestCookieGuidValue</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="24" pos:column="105">
            <block pos:line="25" pos:column="13">{
                <comment type="line" pos:line="26" pos:column="17">// Use the Anti-XSRF token from the cookie</comment>
                <expr_stmt><expr><name pos:line="27" pos:column="17">_antiXsrfTokenValue</name> <op:operator pos:line="27" pos:column="37">=</op:operator> <name><name pos:line="27" pos:column="39">requestCookie</name><op:operator pos:line="27" pos:column="52">.</op:operator><name pos:line="27" pos:column="53">Value</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="28" pos:column="17">Page</name><op:operator pos:line="28" pos:column="21">.</op:operator><name pos:line="28" pos:column="22">ViewStateUserKey</name></name> <op:operator pos:line="28" pos:column="39">=</op:operator> <name pos:line="28" pos:column="41">_antiXsrfTokenValue</name></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="30" pos:column="13">else
            <block pos:line="31" pos:column="13">{
                <comment type="line" pos:line="32" pos:column="17">// Generate a new Anti-XSRF token and save to the cookie</comment>
                <expr_stmt><expr><name pos:line="33" pos:column="17">_antiXsrfTokenValue</name> <op:operator pos:line="33" pos:column="37">=</op:operator> <call><name><name pos:line="33" pos:column="39">Guid</name><op:operator pos:line="33" pos:column="43">.</op:operator><name pos:line="33" pos:column="44">NewGuid</name></name><argument_list pos:line="33" pos:column="51">()</argument_list></call><op:operator pos:line="33" pos:column="53">.</op:operator><call><name pos:line="33" pos:column="54">ToString</name><argument_list pos:line="33" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="33" pos:column="63">"N"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="34" pos:column="17">Page</name><op:operator pos:line="34" pos:column="21">.</op:operator><name pos:line="34" pos:column="22">ViewStateUserKey</name></name> <op:operator pos:line="34" pos:column="39">=</op:operator> <name pos:line="34" pos:column="41">_antiXsrfTokenValue</name></expr>;</expr_stmt>

                <decl_stmt><decl><type><name pos:line="36" pos:column="17">var</name></type> <name pos:line="36" pos:column="21">responseCookie</name> <init pos:line="36" pos:column="36">= <expr><op:operator pos:line="36" pos:column="38">new</op:operator> <call><name pos:line="36" pos:column="42">HttpCookie</name><argument_list pos:line="36" pos:column="52">(<argument><expr><name pos:line="36" pos:column="53">AntiXsrfTokenKey</name></expr></argument>)</argument_list></call>
                <block pos:line="37" pos:column="17">{
                    <expr><name pos:line="38" pos:column="21">HttpOnly</name> <op:operator pos:line="38" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="38" pos:column="32">true</lit:literal></expr>,
                    <expr><name pos:line="39" pos:column="21">Value</name> <op:operator pos:line="39" pos:column="27">=</op:operator> <name pos:line="39" pos:column="29">_antiXsrfTokenValue</name></expr>
                }</block></expr></init></decl>;</decl_stmt>
                <if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name><name pos:line="41" pos:column="21">FormsAuthentication</name><op:operator pos:line="41" pos:column="40">.</op:operator><name pos:line="41" pos:column="41">RequireSSL</name> <type:modifier pos:line="41" pos:column="52">&amp;&amp;</type:modifier></name> <name><name pos:line="41" pos:column="55">Request</name><op:operator pos:line="41" pos:column="62">.</op:operator><name pos:line="41" pos:column="63">IsSecureConnection</name></name></expr>)</condition><then pos:line="41" pos:column="82">
                <block pos:line="42" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="43" pos:column="21">responseCookie</name><op:operator pos:line="43" pos:column="35">.</op:operator><name pos:line="43" pos:column="36">Secure</name></name> <op:operator pos:line="43" pos:column="43">=</op:operator> <lit:literal type="boolean" pos:line="43" pos:column="45">true</lit:literal></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><call><name><name pos:line="45" pos:column="17">Response</name><op:operator pos:line="45" pos:column="25">.</op:operator><name pos:line="45" pos:column="26">Cookies</name><op:operator pos:line="45" pos:column="33">.</op:operator><name pos:line="45" pos:column="34">Set</name></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name pos:line="45" pos:column="38">responseCookie</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>

            <expr_stmt><expr><name><name pos:line="48" pos:column="13">Page</name><op:operator pos:line="48" pos:column="17">.</op:operator><name pos:line="48" pos:column="18">PreLoad</name></name> <op:operator pos:line="48" pos:column="26">+=</op:operator> <name pos:line="48" pos:column="29">master_Page_PreLoad</name></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="51" pos:column="9">protected</specifier> <name pos:line="51" pos:column="19">void</name></type> <name pos:line="51" pos:column="24">master_Page_PreLoad</name><parameter_list pos:line="51" pos:column="43">(<param><decl><type><name pos:line="51" pos:column="44">object</name></type> <name pos:line="51" pos:column="51">sender</name></decl></param>, <param><decl><type><name pos:line="51" pos:column="59">EventArgs</name></type> <name pos:line="51" pos:column="69">e</name></decl></param>)</parameter_list>
        <block pos:line="52" pos:column="9">{
            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><op:operator pos:line="53" pos:column="17">!</op:operator><name pos:line="53" pos:column="18">IsPostBack</name></expr>)</condition><then pos:line="53" pos:column="29">
            <block pos:line="54" pos:column="13">{
                <comment type="line" pos:line="55" pos:column="17">// Set Anti-XSRF token</comment>
                <expr_stmt><expr><name><name pos:line="56" pos:column="17">ViewState</name><index pos:line="56" pos:column="26">[<expr><name pos:line="56" pos:column="27">AntiXsrfTokenKey</name></expr>]</index></name> <op:operator pos:line="56" pos:column="45">=</op:operator> <name><name pos:line="56" pos:column="47">Page</name><op:operator pos:line="56" pos:column="51">.</op:operator><name pos:line="56" pos:column="52">ViewStateUserKey</name></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="57" pos:column="17">ViewState</name><index pos:line="57" pos:column="26">[<expr><name pos:line="57" pos:column="27">AntiXsrfUserNameKey</name></expr>]</index></name> <op:operator pos:line="57" pos:column="48">=</op:operator> <name><name pos:line="57" pos:column="50">Context</name><op:operator pos:line="57" pos:column="57">.</op:operator><name pos:line="57" pos:column="58">User</name><op:operator pos:line="57" pos:column="62">.</op:operator><name pos:line="57" pos:column="63">Identity</name><op:operator pos:line="57" pos:column="71">.</op:operator><name pos:line="57" pos:column="72">Name</name></name> <op:operator pos:line="57" pos:column="77">??</op:operator> <name><name pos:line="57" pos:column="80">String</name><op:operator pos:line="57" pos:column="86">.</op:operator><name pos:line="57" pos:column="87">Empty</name></name></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="59" pos:column="13">else
            <block pos:line="60" pos:column="13">{
                <comment type="line" pos:line="61" pos:column="17">// Validate the Anti-XSRF token</comment>
                <if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><op:operator pos:line="62" pos:column="21">(</op:operator><name pos:line="62" pos:column="22">string</name><op:operator pos:line="62" pos:column="28">)</op:operator><name><name pos:line="62" pos:column="29">ViewState</name><index pos:line="62" pos:column="38">[<expr><name pos:line="62" pos:column="39">AntiXsrfTokenKey</name></expr>]</index></name> <op:operator pos:line="62" pos:column="57">!=</op:operator> <name pos:line="62" pos:column="60">_antiXsrfTokenValue</name>
                    <op:operator pos:line="63" pos:column="21">||</op:operator> <op:operator pos:line="63" pos:column="24">(</op:operator><name pos:line="63" pos:column="25">string</name><op:operator pos:line="63" pos:column="31">)</op:operator><name><name pos:line="63" pos:column="32">ViewState</name><index pos:line="63" pos:column="41">[<expr><name pos:line="63" pos:column="42">AntiXsrfUserNameKey</name></expr>]</index></name> <op:operator pos:line="63" pos:column="63">!=</op:operator> <op:operator pos:line="63" pos:column="66">(</op:operator><name><name pos:line="63" pos:column="67">Context</name><op:operator pos:line="63" pos:column="74">.</op:operator><name pos:line="63" pos:column="75">User</name><op:operator pos:line="63" pos:column="79">.</op:operator><name pos:line="63" pos:column="80">Identity</name><op:operator pos:line="63" pos:column="88">.</op:operator><name pos:line="63" pos:column="89">Name</name></name> <op:operator pos:line="63" pos:column="94">??</op:operator> <name><name pos:line="63" pos:column="97">String</name><op:operator pos:line="63" pos:column="103">.</op:operator><name pos:line="63" pos:column="104">Empty</name></name><op:operator pos:line="63" pos:column="109">)</op:operator></expr>)</condition><then pos:line="63" pos:column="111">
                <block pos:line="64" pos:column="17">{
                    <throw pos:line="65" pos:column="21">throw <expr><op:operator pos:line="65" pos:column="27">new</op:operator> <call><name pos:line="65" pos:column="31">InvalidOperationException</name><argument_list pos:line="65" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="65" pos:column="57">"Validation of Anti-XSRF token failed."</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="70" pos:column="9">protected</specifier> <name pos:line="70" pos:column="19">void</name></type> <name pos:line="70" pos:column="24">Page_Load</name><parameter_list pos:line="70" pos:column="33">(<param><decl><type><name pos:line="70" pos:column="34">object</name></type> <name pos:line="70" pos:column="41">sender</name></decl></param>, <param><decl><type><name pos:line="70" pos:column="49">EventArgs</name></type> <name pos:line="70" pos:column="59">e</name></decl></param>)</parameter_list>
        <block pos:line="71" pos:column="9">{
            <if pos:line="72" pos:column="13">if <condition pos:line="72" pos:column="16">(<expr><call><name><name pos:line="72" pos:column="17">HttpContext</name><op:operator pos:line="72" pos:column="28">.</op:operator><name pos:line="72" pos:column="29">Current</name><op:operator pos:line="72" pos:column="36">.</op:operator><name pos:line="72" pos:column="37">User</name><op:operator pos:line="72" pos:column="41">.</op:operator><name pos:line="72" pos:column="42">IsInRole</name></name><argument_list pos:line="72" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="72" pos:column="51">"Administrator"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="72" pos:column="68">
            <block pos:line="73" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="74" pos:column="17">adminLink</name><op:operator pos:line="74" pos:column="26">.</op:operator><name pos:line="74" pos:column="27">Visible</name></name> <op:operator pos:line="74" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="74" pos:column="37">true</lit:literal></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="78" pos:column="9">protected</specifier> <name pos:line="78" pos:column="19">void</name></type> <name pos:line="78" pos:column="24">Page_PreRender</name><parameter_list pos:line="78" pos:column="38">(<param><decl><type><name pos:line="78" pos:column="39">object</name></type> <name pos:line="78" pos:column="46">sender</name></decl></param>, <param><decl><type><name pos:line="78" pos:column="54">EventArgs</name></type> <name pos:line="78" pos:column="64">e</name></decl></param>)</parameter_list>
        <block pos:line="79" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="80" pos:column="13">ShoppingCartActions</name></type> <name pos:line="80" pos:column="33">usersShoppingCart</name> <init pos:line="80" pos:column="51">= <expr><op:operator pos:line="80" pos:column="53">new</op:operator> <call><name pos:line="80" pos:column="57">ShoppingCartActions</name><argument_list pos:line="80" pos:column="76">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="81" pos:column="13">string</name></type> <name pos:line="81" pos:column="20">cartStr</name> <init pos:line="81" pos:column="28">= <expr><call><name><name pos:line="81" pos:column="30">string</name><op:operator pos:line="81" pos:column="36">.</op:operator><name pos:line="81" pos:column="37">Format</name></name><argument_list pos:line="81" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="81" pos:column="44">"Cart ({0})"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="81" pos:column="58">usersShoppingCart</name><op:operator pos:line="81" pos:column="75">.</op:operator><name pos:line="81" pos:column="76">GetCount</name></name><argument_list pos:line="81" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="82" pos:column="13">cartCount</name><op:operator pos:line="82" pos:column="22">.</op:operator><name pos:line="82" pos:column="23">InnerText</name></name> <op:operator pos:line="82" pos:column="33">=</op:operator> <name pos:line="82" pos:column="35">cartStr</name></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="85" pos:column="9">public</specifier> <name><name pos:line="85" pos:column="16">IQueryable</name><argument_list pos:line="85" pos:column="26">&lt;<argument><name pos:line="85" pos:column="27">Category</name></argument>&gt;</argument_list></name></type> <name pos:line="85" pos:column="37">GetCategories</name><parameter_list pos:line="85" pos:column="50">()</parameter_list>
        <block pos:line="86" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="87" pos:column="13">var</name></type> <name pos:line="87" pos:column="17">db</name> <init pos:line="87" pos:column="20">= <expr><op:operator pos:line="87" pos:column="22">new</op:operator> <call><name><name pos:line="87" pos:column="26">WingtipToys</name><op:operator pos:line="87" pos:column="37">.</op:operator><name pos:line="87" pos:column="38">Models</name><op:operator pos:line="87" pos:column="44">.</op:operator><name pos:line="87" pos:column="45">ProductContext</name></name><argument_list pos:line="87" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="88" pos:column="13">IQueryable</name><argument_list pos:line="88" pos:column="23">&lt;<argument><name pos:line="88" pos:column="24">Category</name></argument>&gt;</argument_list></name></type> <name pos:line="88" pos:column="34">query</name> <init pos:line="88" pos:column="40">= <expr><name><name pos:line="88" pos:column="42">db</name><op:operator pos:line="88" pos:column="44">.</op:operator><name pos:line="88" pos:column="45">Categories</name></name></expr></init></decl>;</decl_stmt>
            <return pos:line="89" pos:column="13">return <expr><name pos:line="89" pos:column="20">query</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
