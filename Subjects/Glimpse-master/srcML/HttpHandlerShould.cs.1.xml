<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.AspNet\HttpHandlerShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">AspNet</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Framework</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Test</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">AspNet</name><op:operator pos:line="7" pos:column="26">.</op:operator><name pos:line="7" pos:column="27">Tester</name></name>;</using>
<using pos:line="8" pos:column="1">using <name pos:line="8" pos:column="7">Moq</name>;</using>
<using pos:line="9" pos:column="1">using <name pos:line="9" pos:column="7">Xunit</name>;</using>

<namespace pos:line="11" pos:column="1">namespace <name><name pos:line="11" pos:column="11">Glimpse</name><op:operator pos:line="11" pos:column="18">.</op:operator><name pos:line="11" pos:column="19">Test</name><op:operator pos:line="11" pos:column="23">.</op:operator><name pos:line="11" pos:column="24">AspNet</name></name>
<block pos:line="12" pos:column="1">{
    <class><specifier pos:line="13" pos:column="5">public</specifier> class <name pos:line="13" pos:column="18">HttpHandlerShould</name><super pos:line="13" pos:column="35">:<name pos:line="13" pos:column="36">IDisposable</name></super>
    <block pos:line="14" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">private</specifier> <name pos:line="15" pos:column="17">HttpHandlerTester</name></type> <name pos:line="15" pos:column="35">tester</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">public</specifier> <name pos:line="16" pos:column="16">HttpHandlerTester</name></type> <name pos:line="16" pos:column="34">Handler</name>
        <block pos:line="17" pos:column="9">{
            <function><name pos:line="18" pos:column="13">get</name> <block pos:line="18" pos:column="17">{ <return pos:line="18" pos:column="19">return <expr><name pos:line="18" pos:column="26">tester</name> <op:operator pos:line="18" pos:column="33">??</op:operator> <op:operator pos:line="18" pos:column="36">(</op:operator><name pos:line="18" pos:column="37">tester</name> <op:operator pos:line="18" pos:column="44">=</op:operator> <call><name><name pos:line="18" pos:column="46">HttpHandlerTester</name><op:operator pos:line="18" pos:column="63">.</op:operator><name pos:line="18" pos:column="64">Create</name></name><argument_list pos:line="18" pos:column="70">()</argument_list></call><op:operator pos:line="18" pos:column="72">)</op:operator></expr>;</return> }</block></function>
            <function><name pos:line="19" pos:column="13">set</name> <block pos:line="19" pos:column="17">{ <expr_stmt><expr><name pos:line="19" pos:column="19">tester</name> <op:operator pos:line="19" pos:column="26">=</op:operator> <name pos:line="19" pos:column="28">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="22" pos:column="9">public</specifier> <name pos:line="22" pos:column="16">void</name></type> <name pos:line="22" pos:column="21">Dispose</name><parameter_list pos:line="22" pos:column="28">()</parameter_list>
        <block pos:line="23" pos:column="9">{
            <expr_stmt><expr><name pos:line="24" pos:column="13">Handler</name> <op:operator pos:line="24" pos:column="21">=</op:operator> <name pos:line="24" pos:column="23">null</name></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="27" pos:column="9">[<expr><name pos:line="27" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="28" pos:column="9">public</specifier> <name pos:line="28" pos:column="16">void</name></type> <name pos:line="28" pos:column="21">BeReusable</name><parameter_list pos:line="28" pos:column="31">()</parameter_list>
        <block pos:line="29" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">Assert</name><op:operator pos:line="30" pos:column="19">.</op:operator><name pos:line="30" pos:column="20">True</name></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name><name pos:line="30" pos:column="25">Handler</name><op:operator pos:line="30" pos:column="32">.</op:operator><name pos:line="30" pos:column="33">IsReusable</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="33" pos:column="9">[<expr><name pos:line="33" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="34" pos:column="9">public</specifier> <name pos:line="34" pos:column="16">void</name></type> <name pos:line="34" pos:column="21">Return404WithoutGlimpseRuntime</name><parameter_list pos:line="34" pos:column="51">()</parameter_list>
        <block pos:line="35" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">Handler</name><op:operator pos:line="36" pos:column="20">.</op:operator><name pos:line="36" pos:column="21">ApplicationStateMock</name><op:operator pos:line="36" pos:column="41">.</op:operator><name pos:line="36" pos:column="42">Setup</name></name><argument_list pos:line="36" pos:column="47">(<argument><expr><lambda><name pos:line="36" pos:column="48">a</name> <op:operator pos:line="36" pos:column="50">=&gt;</op:operator> <call><name><name pos:line="36" pos:column="53">a</name><op:operator pos:line="36" pos:column="54">.</op:operator><name pos:line="36" pos:column="55">Get</name></name><argument_list pos:line="36" pos:column="58">(<argument><expr><name><name pos:line="36" pos:column="59">Constants</name><op:operator pos:line="36" pos:column="68">.</op:operator><name pos:line="36" pos:column="69">RuntimeKey</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="36" pos:column="81">.</op:operator><call><name><name pos:line="36" pos:column="82">Returns</name><argument_list pos:line="36" pos:column="89">&lt;<argument><name pos:line="36" pos:column="90">IGlimpseRuntime</name></argument>&gt;</argument_list></name><argument_list pos:line="36" pos:column="106">(<argument><expr><name pos:line="36" pos:column="107">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">Assert</name><op:operator pos:line="38" pos:column="19">.</op:operator><name><name pos:line="38" pos:column="20">Throws</name><argument_list pos:line="38" pos:column="26">&lt;<argument><name pos:line="38" pos:column="27">HttpException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="38" pos:column="41">(<argument><expr><lambda><parameter_list pos:line="38" pos:column="42">()</parameter_list><op:operator pos:line="38" pos:column="44">=&gt;</op:operator><call><name><name pos:line="38" pos:column="46">Handler</name><op:operator pos:line="38" pos:column="53">.</op:operator><name pos:line="38" pos:column="54">ProcessRequest</name></name><argument_list pos:line="38" pos:column="68">(<argument><expr><name><name pos:line="38" pos:column="69">Handler</name><op:operator pos:line="38" pos:column="76">.</op:operator><name pos:line="38" pos:column="77">ContextMock</name><op:operator pos:line="38" pos:column="88">.</op:operator><name pos:line="38" pos:column="89">Object</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="41" pos:column="9">[<expr><name pos:line="41" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="42" pos:column="9">public</specifier> <name pos:line="42" pos:column="16">void</name></type> <name pos:line="42" pos:column="21">RunResourceWithNameMatch</name><parameter_list pos:line="42" pos:column="45">()</parameter_list>
        <block pos:line="43" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="44" pos:column="13">Handler</name><op:operator pos:line="44" pos:column="20">.</op:operator><name pos:line="44" pos:column="21">ProcessRequest</name></name><argument_list pos:line="44" pos:column="35">(<argument><expr><name><name pos:line="44" pos:column="36">Handler</name><op:operator pos:line="44" pos:column="43">.</op:operator><name pos:line="44" pos:column="44">ContextMock</name><op:operator pos:line="44" pos:column="55">.</op:operator><name pos:line="44" pos:column="56">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">Handler</name><op:operator pos:line="46" pos:column="20">.</op:operator><name pos:line="46" pos:column="21">RuntimeMock</name><op:operator pos:line="46" pos:column="32">.</op:operator><name pos:line="46" pos:column="33">Verify</name></name><argument_list pos:line="46" pos:column="39">(<argument><expr><lambda><name pos:line="46" pos:column="40">r</name><op:operator pos:line="46" pos:column="41">=&gt;</op:operator><call><name><name pos:line="46" pos:column="43">r</name><op:operator pos:line="46" pos:column="44">.</op:operator><name pos:line="46" pos:column="45">ExecuteResource</name></name><argument_list pos:line="46" pos:column="60">(<argument><expr><name><name pos:line="46" pos:column="61">Handler</name><op:operator pos:line="46" pos:column="68">.</op:operator><name pos:line="46" pos:column="69">ResourceName</name></name></expr></argument>, <argument><expr><call><name><name pos:line="46" pos:column="83">It</name><op:operator pos:line="46" pos:column="85">.</op:operator><name><name pos:line="46" pos:column="86">IsAny</name><argument_list pos:line="46" pos:column="91">&lt;<argument><name pos:line="46" pos:column="92">ResourceParameters</name></argument>&gt;</argument_list></name></name><argument_list pos:line="46" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>,<argument><expr><call><name><name pos:line="46" pos:column="115">Times</name><op:operator pos:line="46" pos:column="120">.</op:operator><name pos:line="46" pos:column="121">Once</name></name><argument_list pos:line="46" pos:column="125">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="49" pos:column="9">[<expr><name pos:line="49" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="50" pos:column="9">public</specifier> <name pos:line="50" pos:column="16">void</name></type> <name pos:line="50" pos:column="21">RunDefaultResourceWithoutNameMatch</name><parameter_list pos:line="50" pos:column="55">()</parameter_list>
        <block pos:line="51" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">Handler</name><op:operator pos:line="52" pos:column="20">.</op:operator><name pos:line="52" pos:column="21">QueryString</name><op:operator pos:line="52" pos:column="32">.</op:operator><name pos:line="52" pos:column="33">Clear</name></name><argument_list pos:line="52" pos:column="38">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="54" pos:column="13">Handler</name><op:operator pos:line="54" pos:column="20">.</op:operator><name pos:line="54" pos:column="21">ProcessRequest</name></name><argument_list pos:line="54" pos:column="35">(<argument><expr><name><name pos:line="54" pos:column="36">Handler</name><op:operator pos:line="54" pos:column="43">.</op:operator><name pos:line="54" pos:column="44">ContextMock</name><op:operator pos:line="54" pos:column="55">.</op:operator><name pos:line="54" pos:column="56">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="56" pos:column="13">Handler</name><op:operator pos:line="56" pos:column="20">.</op:operator><name pos:line="56" pos:column="21">RuntimeMock</name><op:operator pos:line="56" pos:column="32">.</op:operator><name pos:line="56" pos:column="33">Verify</name></name><argument_list pos:line="56" pos:column="39">(<argument><expr><lambda><name pos:line="56" pos:column="40">r</name> <op:operator pos:line="56" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="56" pos:column="45">r</name><op:operator pos:line="56" pos:column="46">.</op:operator><name pos:line="56" pos:column="47">ExecuteDefaultResource</name></name><argument_list pos:line="56" pos:column="69">()</argument_list></call></lambda></expr></argument>, <argument><expr><call><name><name pos:line="56" pos:column="73">Times</name><op:operator pos:line="56" pos:column="78">.</op:operator><name pos:line="56" pos:column="79">Once</name></name><argument_list pos:line="56" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
