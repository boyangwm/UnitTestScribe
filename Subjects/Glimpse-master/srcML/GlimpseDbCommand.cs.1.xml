<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Ado\AlternateType\GlimpseDbCommand.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">ComponentModel</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Data</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Data</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">Common</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Diagnostics</name></name>;</using>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if</cpp:directive> <expr><name pos:line="6" pos:column="5">NET45</name></expr></cpp:if>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Threading</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">System</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">Threading</name><op:operator pos:line="8" pos:column="23">.</op:operator><name pos:line="8" pos:column="24">Tasks</name></name>;</using>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif</cpp:directive></cpp:endif>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Glimpse</name><op:operator pos:line="10" pos:column="14">.</op:operator><name pos:line="10" pos:column="15">Core</name><op:operator pos:line="10" pos:column="19">.</op:operator><name pos:line="10" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="11" pos:column="1">using <name><name pos:line="11" pos:column="7">Glimpse</name><op:operator pos:line="11" pos:column="14">.</op:operator><name pos:line="11" pos:column="15">Core</name><op:operator pos:line="11" pos:column="19">.</op:operator><name pos:line="11" pos:column="20">Framework</name></name>;</using>

<namespace pos:line="13" pos:column="1">namespace <name><name pos:line="13" pos:column="11">Glimpse</name><op:operator pos:line="13" pos:column="18">.</op:operator><name pos:line="13" pos:column="19">Ado</name><op:operator pos:line="13" pos:column="22">.</op:operator><name pos:line="13" pos:column="23">AlternateType</name></name>
<block pos:line="14" pos:column="1">{
    <class><specifier pos:line="15" pos:column="5">public</specifier> class <name pos:line="15" pos:column="18">GlimpseDbCommand</name> <super pos:line="15" pos:column="35">: <name pos:line="15" pos:column="37">DbCommand</name></super>
    <block pos:line="16" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">private</specifier> <name pos:line="17" pos:column="17">IMessageBroker</name></type> <name pos:line="17" pos:column="32">messageBroker</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">private</specifier> <name pos:line="18" pos:column="17">IExecutionTimer</name></type> <name pos:line="18" pos:column="33">timerStrategy</name></decl>;</decl_stmt> 

        <constructor><specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">GlimpseDbCommand</name><parameter_list pos:line="20" pos:column="32">(<param><decl><type><name pos:line="20" pos:column="33">DbCommand</name></type> <name pos:line="20" pos:column="43">innerCommand</name></decl></param>)</parameter_list>
        <block pos:line="21" pos:column="9">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">InnerCommand</name> <op:operator pos:line="22" pos:column="26">=</op:operator> <name pos:line="22" pos:column="28">innerCommand</name></expr>;</expr_stmt> 
        }</block></constructor>

        <constructor><specifier pos:line="25" pos:column="9">public</specifier> <name pos:line="25" pos:column="16">GlimpseDbCommand</name><parameter_list pos:line="25" pos:column="32">(<param><decl><type><name pos:line="25" pos:column="33">DbCommand</name></type> <name pos:line="25" pos:column="43">innerCommand</name></decl></param>, <param><decl><type><name pos:line="25" pos:column="57">GlimpseDbConnection</name></type> <name pos:line="25" pos:column="77">connection</name></decl></param>)</parameter_list> 
            <member_list pos:line="26" pos:column="13">: <call><name pos:line="26" pos:column="15">this</name><argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">innerCommand</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="27" pos:column="9">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">InnerConnection</name> <op:operator pos:line="28" pos:column="29">=</op:operator> <name pos:line="28" pos:column="31">connection</name></expr>;</expr_stmt>
        }</block></constructor>

        <constructor><specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">GlimpseDbCommand</name><parameter_list pos:line="31" pos:column="32">(<param><decl><type><name pos:line="31" pos:column="33">DbCommand</name></type> <name pos:line="31" pos:column="43">innerCommand</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="57">GlimpseDbConnection</name></type> <name pos:line="31" pos:column="77">connection</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="89">IMessageBroker</name></type> <name pos:line="31" pos:column="104">messageBroker</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="119">IExecutionTimer</name></type> <name pos:line="31" pos:column="135">timerStrategy</name></decl></param>)</parameter_list> 
            <member_list pos:line="32" pos:column="13">: <call><name pos:line="32" pos:column="15">this</name><argument_list pos:line="32" pos:column="19">(<argument><expr><name pos:line="32" pos:column="20">innerCommand</name></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">connection</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="33" pos:column="9">{
            <expr_stmt><expr><name pos:line="34" pos:column="13">MessageBroker</name> <op:operator pos:line="34" pos:column="27">=</op:operator> <name pos:line="34" pos:column="29">messageBroker</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">TimerStrategy</name> <op:operator pos:line="35" pos:column="27">=</op:operator> <name pos:line="35" pos:column="29">timerStrategy</name></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="38" pos:column="9">public</specifier> <name pos:line="38" pos:column="16">DbCommand</name></type> <name pos:line="38" pos:column="26">InnerCommand</name> <block pos:line="38" pos:column="39">{ <function_decl><name pos:line="38" pos:column="41">get</name>;</function_decl> <function_decl><name pos:line="38" pos:column="46">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="40" pos:column="9">public</specifier> <name pos:line="40" pos:column="16">GlimpseDbConnection</name></type> <name pos:line="40" pos:column="36">InnerConnection</name> <block pos:line="40" pos:column="52">{ <function_decl><name pos:line="40" pos:column="54">get</name>;</function_decl> <function_decl><name pos:line="40" pos:column="59">set</name>;</function_decl> }</block></decl></decl_stmt> 

        <decl_stmt><decl><type><specifier pos:line="42" pos:column="9">public</specifier> <specifier pos:line="42" pos:column="16">override</specifier> <name pos:line="42" pos:column="25">string</name></type> <name pos:line="42" pos:column="32">CommandText</name>
        <block pos:line="43" pos:column="9">{
            <function><name pos:line="44" pos:column="13">get</name> <block pos:line="44" pos:column="17">{ <return pos:line="44" pos:column="19">return <expr><name><name pos:line="44" pos:column="26">InnerCommand</name><op:operator pos:line="44" pos:column="38">.</op:operator><name pos:line="44" pos:column="39">CommandText</name></name></expr>;</return> }</block></function>
            <function><name pos:line="45" pos:column="13">set</name> <block pos:line="45" pos:column="17">{ <expr_stmt><expr><name><name pos:line="45" pos:column="19">InnerCommand</name><op:operator pos:line="45" pos:column="31">.</op:operator><name pos:line="45" pos:column="32">CommandText</name></name> <op:operator pos:line="45" pos:column="44">=</op:operator> <name pos:line="45" pos:column="46">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="48" pos:column="9">public</specifier> <specifier pos:line="48" pos:column="16">override</specifier> <name pos:line="48" pos:column="25">int</name></type> <name pos:line="48" pos:column="29">CommandTimeout</name>
        <block pos:line="49" pos:column="9">{
            <function><name pos:line="50" pos:column="13">get</name> <block pos:line="50" pos:column="17">{ <return pos:line="50" pos:column="19">return <expr><name><name pos:line="50" pos:column="26">InnerCommand</name><op:operator pos:line="50" pos:column="38">.</op:operator><name pos:line="50" pos:column="39">CommandTimeout</name></name></expr>;</return> }</block></function>
            <function><name pos:line="51" pos:column="13">set</name> <block pos:line="51" pos:column="17">{ <expr_stmt><expr><name><name pos:line="51" pos:column="19">InnerCommand</name><op:operator pos:line="51" pos:column="31">.</op:operator><name pos:line="51" pos:column="32">CommandTimeout</name></name> <op:operator pos:line="51" pos:column="47">=</op:operator> <name pos:line="51" pos:column="49">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="54" pos:column="9">public</specifier> <specifier pos:line="54" pos:column="16">override</specifier> <name pos:line="54" pos:column="25">CommandType</name></type> <name pos:line="54" pos:column="37">CommandType</name>
        <block pos:line="55" pos:column="9">{
            <function><name pos:line="56" pos:column="13">get</name> <block pos:line="56" pos:column="17">{ <return pos:line="56" pos:column="19">return <expr><name><name pos:line="56" pos:column="26">InnerCommand</name><op:operator pos:line="56" pos:column="38">.</op:operator><name pos:line="56" pos:column="39">CommandType</name></name></expr>;</return> }</block></function>
            <function><name pos:line="57" pos:column="13">set</name> <block pos:line="57" pos:column="17">{ <expr_stmt><expr><name><name pos:line="57" pos:column="19">InnerCommand</name><op:operator pos:line="57" pos:column="31">.</op:operator><name pos:line="57" pos:column="32">CommandType</name></name> <op:operator pos:line="57" pos:column="44">=</op:operator> <name pos:line="57" pos:column="46">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="60" pos:column="9">public</specifier> <specifier pos:line="60" pos:column="16">override</specifier> <name pos:line="60" pos:column="25">bool</name></type> <name pos:line="60" pos:column="30">DesignTimeVisible</name>
        <block pos:line="61" pos:column="9">{
            <function><name pos:line="62" pos:column="13">get</name> <block pos:line="62" pos:column="17">{ <return pos:line="62" pos:column="19">return <expr><name><name pos:line="62" pos:column="26">InnerCommand</name><op:operator pos:line="62" pos:column="38">.</op:operator><name pos:line="62" pos:column="39">DesignTimeVisible</name></name></expr>;</return> }</block></function>
            <function><name pos:line="63" pos:column="13">set</name> <block pos:line="63" pos:column="17">{ <expr_stmt><expr><name><name pos:line="63" pos:column="19">InnerCommand</name><op:operator pos:line="63" pos:column="31">.</op:operator><name pos:line="63" pos:column="32">DesignTimeVisible</name></name> <op:operator pos:line="63" pos:column="50">=</op:operator> <name pos:line="63" pos:column="52">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="66" pos:column="9">public</specifier> <specifier pos:line="66" pos:column="16">override</specifier> <name pos:line="66" pos:column="25">ISite</name></type> <name pos:line="66" pos:column="31">Site</name>
        <block pos:line="67" pos:column="9">{
            <function><name pos:line="68" pos:column="13">get</name> <block pos:line="68" pos:column="17">{ <return pos:line="68" pos:column="19">return <expr><name><name pos:line="68" pos:column="26">InnerCommand</name><op:operator pos:line="68" pos:column="38">.</op:operator><name pos:line="68" pos:column="39">Site</name></name></expr>;</return> }</block></function>
            <function><name pos:line="69" pos:column="13">set</name> <block pos:line="69" pos:column="17">{ <expr_stmt><expr><name><name pos:line="69" pos:column="19">InnerCommand</name><op:operator pos:line="69" pos:column="31">.</op:operator><name pos:line="69" pos:column="32">Site</name></name> <op:operator pos:line="69" pos:column="37">=</op:operator> <name pos:line="69" pos:column="39">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt> 

        <decl_stmt><decl><type><specifier pos:line="72" pos:column="9">public</specifier> <specifier pos:line="72" pos:column="16">override</specifier> <name pos:line="72" pos:column="25">UpdateRowSource</name></type> <name pos:line="72" pos:column="41">UpdatedRowSource</name>
        <block pos:line="73" pos:column="9">{
            <function><name pos:line="74" pos:column="13">get</name> <block pos:line="74" pos:column="17">{ <return pos:line="74" pos:column="19">return <expr><name><name pos:line="74" pos:column="26">InnerCommand</name><op:operator pos:line="74" pos:column="38">.</op:operator><name pos:line="74" pos:column="39">UpdatedRowSource</name></name></expr>;</return> }</block></function>
            <function><name pos:line="75" pos:column="13">set</name> <block pos:line="75" pos:column="17">{ <expr_stmt><expr><name><name pos:line="75" pos:column="19">InnerCommand</name><op:operator pos:line="75" pos:column="31">.</op:operator><name pos:line="75" pos:column="32">UpdatedRowSource</name></name> <op:operator pos:line="75" pos:column="49">=</op:operator> <name pos:line="75" pos:column="51">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="78" pos:column="9">public</specifier> <name pos:line="78" pos:column="16">bool</name></type> <name pos:line="78" pos:column="21">BindByName</name>
        <block pos:line="79" pos:column="9">{
            <function><name pos:line="80" pos:column="13">get</name>
            <block pos:line="81" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="82" pos:column="17">var</name></type> <name pos:line="82" pos:column="21">property</name> <init pos:line="82" pos:column="30">= <expr><call><name><name pos:line="82" pos:column="32">InnerCommand</name><op:operator pos:line="82" pos:column="44">.</op:operator><name pos:line="82" pos:column="45">GetType</name></name><argument_list pos:line="82" pos:column="52">()</argument_list></call><op:operator pos:line="82" pos:column="54">.</op:operator><call><name pos:line="82" pos:column="55">GetProperty</name><argument_list pos:line="82" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="82" pos:column="67">"BindByName"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><name pos:line="83" pos:column="21">property</name> <op:operator pos:line="83" pos:column="30">==</op:operator> <name pos:line="83" pos:column="33">null</name></expr>)</condition><then pos:line="83" pos:column="38">
                <block pos:line="84" pos:column="17">{
                    <return pos:line="85" pos:column="21">return <expr><lit:literal type="boolean" pos:line="85" pos:column="28">false</lit:literal></expr>;</return>
                }</block></then></if>

                <return pos:line="88" pos:column="17">return <expr><op:operator pos:line="88" pos:column="24">(</op:operator><name pos:line="88" pos:column="25">bool</name><op:operator pos:line="88" pos:column="29">)</op:operator><call><name><name pos:line="88" pos:column="30">property</name><op:operator pos:line="88" pos:column="38">.</op:operator><name pos:line="88" pos:column="39">GetValue</name></name><argument_list pos:line="88" pos:column="47">(<argument><expr><name pos:line="88" pos:column="48">InnerCommand</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="62">null</name></expr></argument>)</argument_list></call></expr>;</return>
            }</block></function>

            <function><name pos:line="91" pos:column="13">set</name>
            <block pos:line="92" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="93" pos:column="17">var</name></type> <name pos:line="93" pos:column="21">property</name> <init pos:line="93" pos:column="30">= <expr><call><name><name pos:line="93" pos:column="32">InnerCommand</name><op:operator pos:line="93" pos:column="44">.</op:operator><name pos:line="93" pos:column="45">GetType</name></name><argument_list pos:line="93" pos:column="52">()</argument_list></call><op:operator pos:line="93" pos:column="54">.</op:operator><call><name pos:line="93" pos:column="55">GetProperty</name><argument_list pos:line="93" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="67">"BindByName"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><name pos:line="94" pos:column="21">property</name> <op:operator pos:line="94" pos:column="30">!=</op:operator> <name pos:line="94" pos:column="33">null</name></expr>)</condition><then pos:line="94" pos:column="38">
                <block pos:line="95" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="96" pos:column="21">property</name><op:operator pos:line="96" pos:column="29">.</op:operator><name pos:line="96" pos:column="30">SetValue</name></name><argument_list pos:line="96" pos:column="38">(<argument><expr><name pos:line="96" pos:column="39">InnerCommand</name></expr></argument>, <argument><expr><name pos:line="96" pos:column="53">value</name></expr></argument>, <argument><expr><name pos:line="96" pos:column="60">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if> 
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="101" pos:column="9">public</specifier> <name pos:line="101" pos:column="16">DbCommand</name></type> <name pos:line="101" pos:column="26">Inner</name>
        <block pos:line="102" pos:column="9">{
            <function><name pos:line="103" pos:column="13">get</name> <block pos:line="103" pos:column="17">{ <return pos:line="103" pos:column="19">return <expr><name pos:line="103" pos:column="26">InnerCommand</name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt> 

        <decl_stmt><decl><type><specifier pos:line="106" pos:column="9">internal</specifier> <name pos:line="106" pos:column="18">IMessageBroker</name></type> <name pos:line="106" pos:column="33">MessageBroker</name>
        <block pos:line="107" pos:column="9">{
            <function><name pos:line="108" pos:column="13">get</name> <block pos:line="108" pos:column="17">{ <return pos:line="108" pos:column="19">return <expr><name pos:line="108" pos:column="26">messageBroker</name> <op:operator pos:line="108" pos:column="40">??</op:operator> <op:operator pos:line="108" pos:column="43">(</op:operator><name pos:line="108" pos:column="44">messageBroker</name> <op:operator pos:line="108" pos:column="58">=</op:operator> <call><name><name pos:line="108" pos:column="60">GlimpseConfiguration</name><op:operator pos:line="108" pos:column="80">.</op:operator><name pos:line="108" pos:column="81">GetConfiguredMessageBroker</name></name><argument_list pos:line="108" pos:column="107">()</argument_list></call><op:operator pos:line="108" pos:column="109">)</op:operator></expr>;</return> }</block></function>
            <function><name pos:line="109" pos:column="13">set</name> <block pos:line="109" pos:column="17">{ <expr_stmt><expr><name pos:line="109" pos:column="19">messageBroker</name> <op:operator pos:line="109" pos:column="33">=</op:operator> <name pos:line="109" pos:column="35">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="112" pos:column="9">internal</specifier> <name pos:line="112" pos:column="18">IExecutionTimer</name></type> <name pos:line="112" pos:column="34">TimerStrategy</name>
        <block pos:line="113" pos:column="9">{
            <function><name pos:line="114" pos:column="13">get</name> <block pos:line="114" pos:column="17">{ <return pos:line="114" pos:column="19">return <expr><name pos:line="114" pos:column="26">timerStrategy</name> <op:operator pos:line="114" pos:column="40">??</op:operator> <op:operator pos:line="114" pos:column="43">(</op:operator><name pos:line="114" pos:column="44">timerStrategy</name> <op:operator pos:line="114" pos:column="58">=</op:operator> <call><call><name><name pos:line="114" pos:column="60">GlimpseConfiguration</name><op:operator pos:line="114" pos:column="80">.</op:operator><name pos:line="114" pos:column="81">GetConfiguredTimerStrategy</name></name><argument_list pos:line="114" pos:column="107">()</argument_list></call><argument_list pos:line="114" pos:column="109">()</argument_list></call><op:operator pos:line="114" pos:column="111">)</op:operator></expr>;</return> }</block></function>
            <function><name pos:line="115" pos:column="13">set</name> <block pos:line="115" pos:column="17">{ <expr_stmt><expr><name pos:line="115" pos:column="19">timerStrategy</name> <op:operator pos:line="115" pos:column="33">=</op:operator> <name pos:line="115" pos:column="35">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="118" pos:column="9">protected</specifier> <specifier pos:line="118" pos:column="19">override</specifier> <name pos:line="118" pos:column="28">DbParameterCollection</name></type> <name pos:line="118" pos:column="50">DbParameterCollection</name>
        <block pos:line="119" pos:column="9">{
            <function><name pos:line="120" pos:column="13">get</name> <block pos:line="120" pos:column="17">{ <return pos:line="120" pos:column="19">return <expr><name><name pos:line="120" pos:column="26">InnerCommand</name><op:operator pos:line="120" pos:column="38">.</op:operator><name pos:line="120" pos:column="39">Parameters</name></name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="123" pos:column="9">protected</specifier> <specifier pos:line="123" pos:column="19">override</specifier> <name pos:line="123" pos:column="28">DbConnection</name></type> <name pos:line="123" pos:column="41">DbConnection</name>
        <block pos:line="124" pos:column="9">{
            <function><name pos:line="125" pos:column="13">get</name>
            <block pos:line="126" pos:column="13">{
                <return pos:line="127" pos:column="17">return <expr><name pos:line="127" pos:column="24">InnerConnection</name></expr>;</return>
            }</block></function>

            <function><name pos:line="130" pos:column="13">set</name>
            <block pos:line="131" pos:column="13">{
                <expr_stmt><expr><name pos:line="132" pos:column="17">InnerConnection</name> <op:operator pos:line="132" pos:column="33">=</op:operator> <name pos:line="132" pos:column="35">value</name> <op:operator pos:line="132" pos:column="41">as</op:operator> <name pos:line="132" pos:column="44">GlimpseDbConnection</name></expr>;</expr_stmt>
                <if pos:line="133" pos:column="17">if <condition pos:line="133" pos:column="20">(<expr><name pos:line="133" pos:column="21">InnerConnection</name> <op:operator pos:line="133" pos:column="37">!=</op:operator> <name pos:line="133" pos:column="40">null</name></expr>)</condition><then pos:line="133" pos:column="45">
                <block pos:line="134" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="135" pos:column="21">InnerCommand</name><op:operator pos:line="135" pos:column="33">.</op:operator><name pos:line="135" pos:column="34">Connection</name></name> <op:operator pos:line="135" pos:column="45">=</op:operator> <name><name pos:line="135" pos:column="47">InnerConnection</name><op:operator pos:line="135" pos:column="62">.</op:operator><name pos:line="135" pos:column="63">InnerConnection</name></name></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="137" pos:column="17">else
                <block pos:line="138" pos:column="17">{ 
                    <expr_stmt><expr><name pos:line="139" pos:column="21">InnerConnection</name> <op:operator pos:line="139" pos:column="37">=</op:operator> <op:operator pos:line="139" pos:column="39">new</op:operator> <call><name pos:line="139" pos:column="43">GlimpseDbConnection</name><argument_list pos:line="139" pos:column="62">(<argument><expr><name pos:line="139" pos:column="63">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name pos:line="140" pos:column="21">InnerCommand</name><op:operator pos:line="140" pos:column="33">.</op:operator><name pos:line="140" pos:column="34">Connection</name></name> <op:operator pos:line="140" pos:column="45">=</op:operator> <name><name pos:line="140" pos:column="47">InnerConnection</name><op:operator pos:line="140" pos:column="62">.</op:operator><name pos:line="140" pos:column="63">InnerConnection</name></name></expr>;</expr_stmt> 
                }</block></else></if>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="145" pos:column="9">protected</specifier> <specifier pos:line="145" pos:column="19">override</specifier> <name pos:line="145" pos:column="28">DbTransaction</name></type> <name pos:line="145" pos:column="42">DbTransaction</name>
        <block pos:line="146" pos:column="9">{
            <function><name pos:line="147" pos:column="13">get</name>
            <block pos:line="148" pos:column="13">{
                <return pos:line="149" pos:column="17">return <expr><name><name pos:line="149" pos:column="24">InnerCommand</name><op:operator pos:line="149" pos:column="36">.</op:operator><name pos:line="149" pos:column="37">Transaction</name></name> <op:operator pos:line="149" pos:column="49">==</op:operator> <name pos:line="149" pos:column="52">null</name> <op:operator pos:line="149" pos:column="57">?</op:operator> <name pos:line="149" pos:column="59">null</name> <op:operator pos:line="149" pos:column="64">:</op:operator> <op:operator pos:line="149" pos:column="66">new</op:operator> <call><name pos:line="149" pos:column="70">GlimpseDbTransaction</name><argument_list pos:line="149" pos:column="90">(<argument><expr><name><name pos:line="149" pos:column="91">InnerCommand</name><op:operator pos:line="149" pos:column="103">.</op:operator><name pos:line="149" pos:column="104">Transaction</name></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="117">InnerConnection</name></expr></argument>)</argument_list></call></expr>;</return>
            }</block></function>

            <function><name pos:line="152" pos:column="13">set</name>
            <block pos:line="153" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="154" pos:column="17">var</name></type> <name pos:line="154" pos:column="21">transaction</name> <init pos:line="154" pos:column="33">= <expr><name pos:line="154" pos:column="35">value</name> <op:operator pos:line="154" pos:column="41">as</op:operator> <name pos:line="154" pos:column="44">GlimpseDbTransaction</name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="155" pos:column="17">InnerCommand</name><op:operator pos:line="155" pos:column="29">.</op:operator><name pos:line="155" pos:column="30">Transaction</name></name> <op:operator pos:line="155" pos:column="42">=</op:operator> <op:operator pos:line="155" pos:column="44">(</op:operator><name pos:line="155" pos:column="45">transaction</name> <op:operator pos:line="155" pos:column="57">!=</op:operator> <name pos:line="155" pos:column="60">null</name><op:operator pos:line="155" pos:column="64">)</op:operator> <op:operator pos:line="155" pos:column="66">?</op:operator> <name><name pos:line="155" pos:column="68">transaction</name><op:operator pos:line="155" pos:column="79">.</op:operator><name pos:line="155" pos:column="80">InnerTransaction</name></name> <op:operator pos:line="155" pos:column="97">:</op:operator> <name pos:line="155" pos:column="99">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="159" pos:column="9">public</specifier> <specifier pos:line="159" pos:column="16">override</specifier> <name pos:line="159" pos:column="25">void</name></type> <name pos:line="159" pos:column="30">Cancel</name><parameter_list pos:line="159" pos:column="36">()</parameter_list>
        <block pos:line="160" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="161" pos:column="13">InnerCommand</name><op:operator pos:line="161" pos:column="25">.</op:operator><name pos:line="161" pos:column="26">Cancel</name></name><argument_list pos:line="161" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="164" pos:column="9">public</specifier> <specifier pos:line="164" pos:column="16">override</specifier> <name pos:line="164" pos:column="25">void</name></type> <name pos:line="164" pos:column="30">Prepare</name><parameter_list pos:line="164" pos:column="37">()</parameter_list>
        <block pos:line="165" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="166" pos:column="13">InnerCommand</name><op:operator pos:line="166" pos:column="25">.</op:operator><name pos:line="166" pos:column="26">Prepare</name></name><argument_list pos:line="166" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="169" pos:column="9">public</specifier> <specifier pos:line="169" pos:column="16">override</specifier> <name pos:line="169" pos:column="25">int</name></type> <name pos:line="169" pos:column="29">ExecuteNonQuery</name><parameter_list pos:line="169" pos:column="44">()</parameter_list>
        <block pos:line="170" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="171" pos:column="13">int</name></type> <name pos:line="171" pos:column="17">num</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="172" pos:column="13">var</name></type> <name pos:line="172" pos:column="17">commandId</name> <init pos:line="172" pos:column="27">= <expr><call><name><name pos:line="172" pos:column="29">Guid</name><op:operator pos:line="172" pos:column="33">.</op:operator><name pos:line="172" pos:column="34">NewGuid</name></name><argument_list pos:line="172" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="174" pos:column="13">var</name></type> <name pos:line="174" pos:column="17">timer</name> <init pos:line="174" pos:column="23">= <expr><call><name><name pos:line="174" pos:column="25">this</name><op:operator pos:line="174" pos:column="29">.</op:operator><name pos:line="174" pos:column="30">LogCommandSeed</name></name><argument_list pos:line="174" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="175" pos:column="13">this</name><op:operator pos:line="175" pos:column="17">.</op:operator><name pos:line="175" pos:column="18">LogCommandStart</name></name><argument_list pos:line="175" pos:column="33">(<argument><expr><name pos:line="175" pos:column="34">commandId</name></expr></argument>, <argument><expr><name pos:line="175" pos:column="45">timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
            <try pos:line="176" pos:column="13">try
            <block pos:line="177" pos:column="13">{
                <expr_stmt><expr><name pos:line="178" pos:column="17">num</name> <op:operator pos:line="178" pos:column="21">=</op:operator> <call><name><name pos:line="178" pos:column="23">InnerCommand</name><op:operator pos:line="178" pos:column="35">.</op:operator><name pos:line="178" pos:column="36">ExecuteNonQuery</name></name><argument_list pos:line="178" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="180" pos:column="13">catch <parameter_list pos:line="180" pos:column="19">(<param><decl><type><name pos:line="180" pos:column="20">Exception</name></type> <name pos:line="180" pos:column="30">exception</name></decl></param>)</parameter_list>
            <block pos:line="181" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="182" pos:column="17">this</name><op:operator pos:line="182" pos:column="21">.</op:operator><name pos:line="182" pos:column="22">LogCommandError</name></name><argument_list pos:line="182" pos:column="37">(<argument><expr><name pos:line="182" pos:column="38">commandId</name></expr></argument>, <argument><expr><name pos:line="182" pos:column="49">timer</name></expr></argument>, <argument><expr><name pos:line="182" pos:column="56">exception</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="182" pos:column="67">"ExecuteNonQuery"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <throw pos:line="183" pos:column="17">throw;</throw>
            }</block></catch></try>

            <expr_stmt><expr><call><name><name pos:line="186" pos:column="13">this</name><op:operator pos:line="186" pos:column="17">.</op:operator><name pos:line="186" pos:column="18">LogCommandEnd</name></name><argument_list pos:line="186" pos:column="31">(<argument><expr><name pos:line="186" pos:column="32">commandId</name></expr></argument>, <argument><expr><name pos:line="186" pos:column="43">timer</name></expr></argument>, <argument><expr><name pos:line="186" pos:column="50">num</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="186" pos:column="55">"ExecuteNonQuery"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:line="188" pos:column="13">return <expr><name pos:line="188" pos:column="20">num</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="191" pos:column="9">public</specifier> <specifier pos:line="191" pos:column="16">override</specifier> <name pos:line="191" pos:column="25">object</name></type> <name pos:line="191" pos:column="32">ExecuteScalar</name><parameter_list pos:line="191" pos:column="45">()</parameter_list>
        <block pos:line="192" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="193" pos:column="13">object</name></type> <name pos:line="193" pos:column="20">result</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="194" pos:column="13">var</name></type> <name pos:line="194" pos:column="17">commandId</name> <init pos:line="194" pos:column="27">= <expr><call><name><name pos:line="194" pos:column="29">Guid</name><op:operator pos:line="194" pos:column="33">.</op:operator><name pos:line="194" pos:column="34">NewGuid</name></name><argument_list pos:line="194" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="196" pos:column="13">var</name></type> <name pos:line="196" pos:column="17">timer</name> <init pos:line="196" pos:column="23">= <expr><call><name><name pos:line="196" pos:column="25">this</name><op:operator pos:line="196" pos:column="29">.</op:operator><name pos:line="196" pos:column="30">LogCommandSeed</name></name><argument_list pos:line="196" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="197" pos:column="13">this</name><op:operator pos:line="197" pos:column="17">.</op:operator><name pos:line="197" pos:column="18">LogCommandStart</name></name><argument_list pos:line="197" pos:column="33">(<argument><expr><name pos:line="197" pos:column="34">commandId</name></expr></argument>, <argument><expr><name pos:line="197" pos:column="45">timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  
            <try pos:line="198" pos:column="13">try
            <block pos:line="199" pos:column="13">{
                <expr_stmt><expr><name pos:line="200" pos:column="17">result</name> <op:operator pos:line="200" pos:column="24">=</op:operator> <call><name><name pos:line="200" pos:column="26">InnerCommand</name><op:operator pos:line="200" pos:column="38">.</op:operator><name pos:line="200" pos:column="39">ExecuteScalar</name></name><argument_list pos:line="200" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="202" pos:column="13">catch <parameter_list pos:line="202" pos:column="19">(<param><decl><type><name pos:line="202" pos:column="20">Exception</name></type> <name pos:line="202" pos:column="30">exception</name></decl></param>)</parameter_list>
            <block pos:line="203" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="204" pos:column="17">this</name><op:operator pos:line="204" pos:column="21">.</op:operator><name pos:line="204" pos:column="22">LogCommandError</name></name><argument_list pos:line="204" pos:column="37">(<argument><expr><name pos:line="204" pos:column="38">commandId</name></expr></argument>, <argument><expr><name pos:line="204" pos:column="49">timer</name></expr></argument>, <argument><expr><name pos:line="204" pos:column="56">exception</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="204" pos:column="67">"ExecuteScalar"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <throw pos:line="205" pos:column="17">throw;</throw>
            }</block></catch></try>

            <expr_stmt><expr><call><name><name pos:line="208" pos:column="13">this</name><op:operator pos:line="208" pos:column="17">.</op:operator><name pos:line="208" pos:column="18">LogCommandEnd</name></name><argument_list pos:line="208" pos:column="31">(<argument><expr><name pos:line="208" pos:column="32">commandId</name></expr></argument>, <argument><expr><name pos:line="208" pos:column="43">timer</name></expr></argument>, <argument><expr><name pos:line="208" pos:column="50">null</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="208" pos:column="56">"ExecuteScalar"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:line="210" pos:column="13">return <expr><name pos:line="210" pos:column="20">result</name></expr>;</return>
        }</block></function>

<cpp:if pos:line="213" pos:column="1">#<cpp:directive pos:line="213" pos:column="2">if</cpp:directive> <expr><name pos:line="213" pos:column="5">NET45</name></expr></cpp:if>
        <function><type><specifier pos:line="214" pos:column="9">public</specifier> <specifier pos:line="214" pos:column="16">override</specifier> <specifier pos:line="214" pos:column="25">async</specifier> <name><name pos:line="214" pos:column="31">Task</name><argument_list pos:line="214" pos:column="35">&lt;<argument><name pos:line="214" pos:column="36">object</name></argument>&gt;</argument_list></name></type> <name pos:line="214" pos:column="44">ExecuteScalarAsync</name><parameter_list pos:line="214" pos:column="62">(<param><decl><type><name pos:line="214" pos:column="63">CancellationToken</name></type> <name pos:line="214" pos:column="81">cancellationToken</name></decl></param>)</parameter_list>
        <block pos:line="215" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="216" pos:column="13">EnsureConfiguration</name><argument_list pos:line="216" pos:column="32">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="218" pos:column="13">object</name></type> <name pos:line="218" pos:column="20">result</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="219" pos:column="13">var</name></type> <name pos:line="219" pos:column="17">commandId</name> <init pos:line="219" pos:column="27">= <expr><call><name><name pos:line="219" pos:column="29">Guid</name><op:operator pos:line="219" pos:column="33">.</op:operator><name pos:line="219" pos:column="34">NewGuid</name></name><argument_list pos:line="219" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="221" pos:column="13">var</name></type> <name pos:line="221" pos:column="17">timer</name> <init pos:line="221" pos:column="23">= <expr><call><name><name pos:line="221" pos:column="25">this</name><op:operator pos:line="221" pos:column="29">.</op:operator><name pos:line="221" pos:column="30">LogCommandSeed</name></name><argument_list pos:line="221" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="222" pos:column="13">this</name><op:operator pos:line="222" pos:column="17">.</op:operator><name pos:line="222" pos:column="18">LogCommandStart</name></name><argument_list pos:line="222" pos:column="33">(<argument><expr><name pos:line="222" pos:column="34">commandId</name></expr></argument>, <argument><expr><name pos:line="222" pos:column="45">timer</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="222" pos:column="52">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <try pos:line="223" pos:column="13">try
            <block pos:line="224" pos:column="13">{
                <expr_stmt><expr><name pos:line="225" pos:column="17">result</name> <op:operator pos:line="225" pos:column="24">=</op:operator> <op:operator pos:line="225" pos:column="26">await</op:operator> <call><name><name pos:line="225" pos:column="32">InnerCommand</name><op:operator pos:line="225" pos:column="44">.</op:operator><name pos:line="225" pos:column="45">ExecuteScalarAsync</name></name><argument_list pos:line="225" pos:column="63">(<argument><expr><name pos:line="225" pos:column="64">cancellationToken</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="227" pos:column="13">catch <parameter_list pos:line="227" pos:column="19">(<param><decl><type><name pos:line="227" pos:column="20">Exception</name></type> <name pos:line="227" pos:column="30">exception</name></decl></param>)</parameter_list>
            <block pos:line="228" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="229" pos:column="17">this</name><op:operator pos:line="229" pos:column="21">.</op:operator><name pos:line="229" pos:column="22">LogCommandError</name></name><argument_list pos:line="229" pos:column="37">(<argument><expr><name pos:line="229" pos:column="38">commandId</name></expr></argument>, <argument><expr><name pos:line="229" pos:column="49">timer</name></expr></argument>, <argument><expr><name pos:line="229" pos:column="56">exception</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="229" pos:column="67">"ExecuteScalarAsync"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="229" pos:column="89">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <throw pos:line="230" pos:column="17">throw;</throw>
            }</block></catch></try>

            <expr_stmt><expr><call><name><name pos:line="233" pos:column="13">this</name><op:operator pos:line="233" pos:column="17">.</op:operator><name pos:line="233" pos:column="18">LogCommandEnd</name></name><argument_list pos:line="233" pos:column="31">(<argument><expr><name pos:line="233" pos:column="32">commandId</name></expr></argument>, <argument><expr><name pos:line="233" pos:column="43">timer</name></expr></argument>, <argument><expr><name pos:line="233" pos:column="50">null</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="233" pos:column="56">"ExecuteScalarAsync"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="233" pos:column="78">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:line="235" pos:column="13">return <expr><name pos:line="235" pos:column="20">result</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="238" pos:column="9">public</specifier> <specifier pos:line="238" pos:column="16">override</specifier> <specifier pos:line="238" pos:column="25">async</specifier> <name><name pos:line="238" pos:column="31">Task</name><argument_list pos:line="238" pos:column="35">&lt;<argument><name pos:line="238" pos:column="36">int</name></argument>&gt;</argument_list></name></type> <name pos:line="238" pos:column="41">ExecuteNonQueryAsync</name><parameter_list pos:line="238" pos:column="61">(<param><decl><type><name pos:line="238" pos:column="62">CancellationToken</name></type> <name pos:line="238" pos:column="80">cancellationToken</name></decl></param>)</parameter_list>
        <block pos:line="239" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="240" pos:column="13">EnsureConfiguration</name><argument_list pos:line="240" pos:column="32">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="242" pos:column="13">int</name></type> <name pos:line="242" pos:column="17">num</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="243" pos:column="13">var</name></type> <name pos:line="243" pos:column="17">commandId</name> <init pos:line="243" pos:column="27">= <expr><call><name><name pos:line="243" pos:column="29">Guid</name><op:operator pos:line="243" pos:column="33">.</op:operator><name pos:line="243" pos:column="34">NewGuid</name></name><argument_list pos:line="243" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="245" pos:column="13">var</name></type> <name pos:line="245" pos:column="17">timer</name> <init pos:line="245" pos:column="23">= <expr><call><name><name pos:line="245" pos:column="25">this</name><op:operator pos:line="245" pos:column="29">.</op:operator><name pos:line="245" pos:column="30">LogCommandSeed</name></name><argument_list pos:line="245" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="246" pos:column="13">this</name><op:operator pos:line="246" pos:column="17">.</op:operator><name pos:line="246" pos:column="18">LogCommandStart</name></name><argument_list pos:line="246" pos:column="33">(<argument><expr><name pos:line="246" pos:column="34">commandId</name></expr></argument>, <argument><expr><name pos:line="246" pos:column="45">timer</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="246" pos:column="52">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <try pos:line="247" pos:column="13">try
            <block pos:line="248" pos:column="13">{
                <expr_stmt><expr><name pos:line="249" pos:column="17">num</name> <op:operator pos:line="249" pos:column="21">=</op:operator> <op:operator pos:line="249" pos:column="23">await</op:operator> <call><name><name pos:line="249" pos:column="29">InnerCommand</name><op:operator pos:line="249" pos:column="41">.</op:operator><name pos:line="249" pos:column="42">ExecuteNonQueryAsync</name></name><argument_list pos:line="249" pos:column="62">(<argument><expr><name pos:line="249" pos:column="63">cancellationToken</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="251" pos:column="13">catch <parameter_list pos:line="251" pos:column="19">(<param><decl><type><name pos:line="251" pos:column="20">Exception</name></type> <name pos:line="251" pos:column="30">exception</name></decl></param>)</parameter_list>
            <block pos:line="252" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="253" pos:column="17">this</name><op:operator pos:line="253" pos:column="21">.</op:operator><name pos:line="253" pos:column="22">LogCommandError</name></name><argument_list pos:line="253" pos:column="37">(<argument><expr><name pos:line="253" pos:column="38">commandId</name></expr></argument>, <argument><expr><name pos:line="253" pos:column="49">timer</name></expr></argument>, <argument><expr><name pos:line="253" pos:column="56">exception</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="253" pos:column="67">"ExecuteNonQueryAsync"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="253" pos:column="91">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <throw pos:line="254" pos:column="17">throw;</throw>
            }</block></catch></try>

            <expr_stmt><expr><call><name><name pos:line="257" pos:column="13">this</name><op:operator pos:line="257" pos:column="17">.</op:operator><name pos:line="257" pos:column="18">LogCommandEnd</name></name><argument_list pos:line="257" pos:column="31">(<argument><expr><name pos:line="257" pos:column="32">commandId</name></expr></argument>, <argument><expr><name pos:line="257" pos:column="43">timer</name></expr></argument>, <argument><expr><name pos:line="257" pos:column="50">num</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="257" pos:column="55">"ExecuteNonQueryAsync"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="257" pos:column="79">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:line="259" pos:column="13">return <expr><name pos:line="259" pos:column="20">num</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="262" pos:column="9">protected</specifier> <specifier pos:line="262" pos:column="19">override</specifier> <specifier pos:line="262" pos:column="28">async</specifier> <name><name pos:line="262" pos:column="34">Task</name><argument_list pos:line="262" pos:column="38">&lt;<argument><name pos:line="262" pos:column="39">DbDataReader</name></argument>&gt;</argument_list></name></type> <name pos:line="262" pos:column="53">ExecuteDbDataReaderAsync</name><parameter_list pos:line="262" pos:column="77">(<param><decl><type><name pos:line="262" pos:column="78">CommandBehavior</name></type> <name pos:line="262" pos:column="94">behavior</name></decl></param>, <param><decl><type><name pos:line="262" pos:column="104">CancellationToken</name></type> <name pos:line="262" pos:column="122">cancellationToken</name></decl></param>)</parameter_list>
        <block pos:line="263" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="264" pos:column="13">EnsureConfiguration</name><argument_list pos:line="264" pos:column="32">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="266" pos:column="13">DbDataReader</name></type> <name pos:line="266" pos:column="26">reader</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="267" pos:column="13">var</name></type> <name pos:line="267" pos:column="17">commandId</name> <init pos:line="267" pos:column="27">= <expr><call><name><name pos:line="267" pos:column="29">Guid</name><op:operator pos:line="267" pos:column="33">.</op:operator><name pos:line="267" pos:column="34">NewGuid</name></name><argument_list pos:line="267" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="269" pos:column="13">var</name></type> <name pos:line="269" pos:column="17">timer</name> <init pos:line="269" pos:column="23">= <expr><call><name><name pos:line="269" pos:column="25">this</name><op:operator pos:line="269" pos:column="29">.</op:operator><name pos:line="269" pos:column="30">LogCommandSeed</name></name><argument_list pos:line="269" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="270" pos:column="13">this</name><op:operator pos:line="270" pos:column="17">.</op:operator><name pos:line="270" pos:column="18">LogCommandStart</name></name><argument_list pos:line="270" pos:column="33">(<argument><expr><name pos:line="270" pos:column="34">commandId</name></expr></argument>, <argument><expr><name pos:line="270" pos:column="45">timer</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="270" pos:column="52">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <try pos:line="271" pos:column="13">try
            <block pos:line="272" pos:column="13">{
                <expr_stmt><expr><name pos:line="273" pos:column="17">reader</name> <op:operator pos:line="273" pos:column="24">=</op:operator> <op:operator pos:line="273" pos:column="26">await</op:operator> <call><name><name pos:line="273" pos:column="32">InnerCommand</name><op:operator pos:line="273" pos:column="44">.</op:operator><name pos:line="273" pos:column="45">ExecuteReaderAsync</name></name><argument_list pos:line="273" pos:column="63">(<argument><expr><name pos:line="273" pos:column="64">behavior</name></expr></argument>, <argument><expr><name pos:line="273" pos:column="74">cancellationToken</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="275" pos:column="13">catch <parameter_list pos:line="275" pos:column="19">(<param><decl><type><name pos:line="275" pos:column="20">Exception</name></type> <name pos:line="275" pos:column="30">exception</name></decl></param>)</parameter_list>
            <block pos:line="276" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="277" pos:column="17">this</name><op:operator pos:line="277" pos:column="21">.</op:operator><name pos:line="277" pos:column="22">LogCommandError</name></name><argument_list pos:line="277" pos:column="37">(<argument><expr><name pos:line="277" pos:column="38">commandId</name></expr></argument>, <argument><expr><name pos:line="277" pos:column="49">timer</name></expr></argument>, <argument><expr><name pos:line="277" pos:column="56">exception</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="277" pos:column="67">"ExecuteDbDataReaderAsync"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <throw pos:line="278" pos:column="17">throw;</throw>
            }</block></catch></try>

            <expr_stmt><expr><call><name><name pos:line="281" pos:column="13">this</name><op:operator pos:line="281" pos:column="17">.</op:operator><name pos:line="281" pos:column="18">LogCommandEnd</name></name><argument_list pos:line="281" pos:column="31">(<argument><expr><name pos:line="281" pos:column="32">commandId</name></expr></argument>, <argument><expr><name pos:line="281" pos:column="43">timer</name></expr></argument>, <argument><expr><name><name pos:line="281" pos:column="50">reader</name><op:operator pos:line="281" pos:column="56">.</op:operator><name pos:line="281" pos:column="57">RecordsAffected</name></name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="281" pos:column="74">"ExecuteDbDataReaderAsync"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:line="283" pos:column="13">return <expr><op:operator pos:line="283" pos:column="20">new</op:operator> <call><name pos:line="283" pos:column="24">GlimpseDbDataReader</name><argument_list pos:line="283" pos:column="43">(<argument><expr><name pos:line="283" pos:column="44">reader</name></expr></argument>, <argument><expr><name pos:line="283" pos:column="52">InnerCommand</name></expr></argument>, <argument><expr><name><name pos:line="283" pos:column="66">InnerConnection</name><op:operator pos:line="283" pos:column="81">.</op:operator><name pos:line="283" pos:column="82">ConnectionId</name></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="96">commandId</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="286" pos:column="9">protected</specifier> <name pos:line="286" pos:column="19">void</name></type> <name pos:line="286" pos:column="24">EnsureConfiguration</name><parameter_list pos:line="286" pos:column="43">()</parameter_list>
        <block pos:line="287" pos:column="9">{
            <if pos:line="288" pos:column="13">if <condition pos:line="288" pos:column="16">(<expr><name pos:line="288" pos:column="17">MessageBroker</name> <op:operator pos:line="288" pos:column="31">==</op:operator> <name pos:line="288" pos:column="34">null</name></expr>)</condition><then pos:line="288" pos:column="39">
            <block pos:line="289" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="290" pos:column="17">Trace</name><op:operator pos:line="290" pos:column="22">.</op:operator><name pos:line="290" pos:column="23">WriteLine</name></name><argument_list pos:line="290" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="290" pos:column="33">"GlimpseDbCommand.MessageBroker is null"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <if pos:line="293" pos:column="13">if <condition pos:line="293" pos:column="16">(<expr><name pos:line="293" pos:column="17">TimerStrategy</name> <op:operator pos:line="293" pos:column="31">==</op:operator> <name pos:line="293" pos:column="34">null</name></expr>)</condition><then pos:line="293" pos:column="39">
            <block pos:line="294" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="295" pos:column="17">Trace</name><op:operator pos:line="295" pos:column="22">.</op:operator><name pos:line="295" pos:column="23">WriteLine</name></name><argument_list pos:line="295" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="295" pos:column="33">"GlimpseDbCommand.TimerStrategy is null"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
<cpp:endif pos:line="298" pos:column="1">#<cpp:directive pos:line="298" pos:column="2">endif</cpp:directive></cpp:endif>

        <function><type><specifier pos:line="300" pos:column="9">protected</specifier> <specifier pos:line="300" pos:column="19">override</specifier> <name pos:line="300" pos:column="28">DbDataReader</name></type> <name pos:line="300" pos:column="41">ExecuteDbDataReader</name><parameter_list pos:line="300" pos:column="60">(<param><decl><type><name pos:line="300" pos:column="61">CommandBehavior</name></type> <name pos:line="300" pos:column="77">behavior</name></decl></param>)</parameter_list>
        <block pos:line="301" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="302" pos:column="13">DbDataReader</name></type> <name pos:line="302" pos:column="26">reader</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="303" pos:column="13">var</name></type> <name pos:line="303" pos:column="17">commandId</name> <init pos:line="303" pos:column="27">= <expr><call><name><name pos:line="303" pos:column="29">Guid</name><op:operator pos:line="303" pos:column="33">.</op:operator><name pos:line="303" pos:column="34">NewGuid</name></name><argument_list pos:line="303" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="305" pos:column="13">var</name></type> <name pos:line="305" pos:column="17">timer</name> <init pos:line="305" pos:column="23">= <expr><call><name><name pos:line="305" pos:column="25">this</name><op:operator pos:line="305" pos:column="29">.</op:operator><name pos:line="305" pos:column="30">LogCommandSeed</name></name><argument_list pos:line="305" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="306" pos:column="13">this</name><op:operator pos:line="306" pos:column="17">.</op:operator><name pos:line="306" pos:column="18">LogCommandStart</name></name><argument_list pos:line="306" pos:column="33">(<argument><expr><name pos:line="306" pos:column="34">commandId</name></expr></argument>, <argument><expr><name pos:line="306" pos:column="45">timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <try pos:line="307" pos:column="13">try
            <block pos:line="308" pos:column="13">{
                <expr_stmt><expr><name pos:line="309" pos:column="17">reader</name> <op:operator pos:line="309" pos:column="24">=</op:operator> <call><name><name pos:line="309" pos:column="26">InnerCommand</name><op:operator pos:line="309" pos:column="38">.</op:operator><name pos:line="309" pos:column="39">ExecuteReader</name></name><argument_list pos:line="309" pos:column="52">(<argument><expr><name pos:line="309" pos:column="53">behavior</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch pos:line="311" pos:column="13">catch <parameter_list pos:line="311" pos:column="19">(<param><decl><type><name pos:line="311" pos:column="20">Exception</name></type> <name pos:line="311" pos:column="30">exception</name></decl></param>)</parameter_list>
            <block pos:line="312" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="313" pos:column="17">this</name><op:operator pos:line="313" pos:column="21">.</op:operator><name pos:line="313" pos:column="22">LogCommandError</name></name><argument_list pos:line="313" pos:column="37">(<argument><expr><name pos:line="313" pos:column="38">commandId</name></expr></argument>, <argument><expr><name pos:line="313" pos:column="49">timer</name></expr></argument>, <argument><expr><name pos:line="313" pos:column="56">exception</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="313" pos:column="67">"ExecuteDbDataReader"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <throw pos:line="314" pos:column="17">throw;</throw>
            }</block></catch></try>

            <expr_stmt><expr><call><name><name pos:line="317" pos:column="13">this</name><op:operator pos:line="317" pos:column="17">.</op:operator><name pos:line="317" pos:column="18">LogCommandEnd</name></name><argument_list pos:line="317" pos:column="31">(<argument><expr><name pos:line="317" pos:column="32">commandId</name></expr></argument>, <argument><expr><name pos:line="317" pos:column="43">timer</name></expr></argument>, <argument><expr><name><name pos:line="317" pos:column="50">reader</name><op:operator pos:line="317" pos:column="56">.</op:operator><name pos:line="317" pos:column="57">RecordsAffected</name></name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="317" pos:column="74">"ExecuteDbDataReader"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:line="319" pos:column="13">return <expr><op:operator pos:line="319" pos:column="20">new</op:operator> <call><name pos:line="319" pos:column="24">GlimpseDbDataReader</name><argument_list pos:line="319" pos:column="43">(<argument><expr><name pos:line="319" pos:column="44">reader</name></expr></argument>, <argument><expr><name pos:line="319" pos:column="52">InnerCommand</name></expr></argument>, <argument><expr><name><name pos:line="319" pos:column="66">InnerConnection</name><op:operator pos:line="319" pos:column="81">.</op:operator><name pos:line="319" pos:column="82">ConnectionId</name></name></expr></argument>, <argument><expr><name pos:line="319" pos:column="96">commandId</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="322" pos:column="9">protected</specifier> <specifier pos:line="322" pos:column="19">override</specifier> <name pos:line="322" pos:column="28">DbParameter</name></type> <name pos:line="322" pos:column="40">CreateDbParameter</name><parameter_list pos:line="322" pos:column="57">()</parameter_list>
        <block pos:line="323" pos:column="9">{
            <return pos:line="324" pos:column="13">return <expr><call><name><name pos:line="324" pos:column="20">InnerCommand</name><op:operator pos:line="324" pos:column="32">.</op:operator><name pos:line="324" pos:column="33">CreateParameter</name></name><argument_list pos:line="324" pos:column="48">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="327" pos:column="9">protected</specifier> <specifier pos:line="327" pos:column="19">override</specifier> <name pos:line="327" pos:column="28">void</name></type> <name pos:line="327" pos:column="33">Dispose</name><parameter_list pos:line="327" pos:column="40">(<param><decl><type><name pos:line="327" pos:column="41">bool</name></type> <name pos:line="327" pos:column="46">disposing</name></decl></param>)</parameter_list>
        <block pos:line="328" pos:column="9">{
            <if pos:line="329" pos:column="13">if <condition pos:line="329" pos:column="16">(<expr><name pos:line="329" pos:column="17">disposing</name> <op:operator pos:line="329" pos:column="27">&amp;&amp;</op:operator> <name pos:line="329" pos:column="30">InnerCommand</name> <op:operator pos:line="329" pos:column="43">!=</op:operator> <name pos:line="329" pos:column="46">null</name></expr>)</condition><then pos:line="329" pos:column="51">
            <block pos:line="330" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="331" pos:column="17">InnerCommand</name><op:operator pos:line="331" pos:column="29">.</op:operator><name pos:line="331" pos:column="30">Dispose</name></name><argument_list pos:line="331" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <expr_stmt><expr><name pos:line="334" pos:column="13">InnerCommand</name> <op:operator pos:line="334" pos:column="26">=</op:operator> <name pos:line="334" pos:column="28">null</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="335" pos:column="13">InnerConnection</name> <op:operator pos:line="335" pos:column="29">=</op:operator> <name pos:line="335" pos:column="31">null</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="336" pos:column="13">base</name><op:operator pos:line="336" pos:column="17">.</op:operator><name pos:line="336" pos:column="18">Dispose</name></name><argument_list pos:line="336" pos:column="25">(<argument><expr><name pos:line="336" pos:column="26">disposing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
