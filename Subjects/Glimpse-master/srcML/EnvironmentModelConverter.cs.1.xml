<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.AspNet\SerializationConverter\EnvironmentModelConverter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Text</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">AspNet</name><op:operator pos:line="5" pos:column="21">.</op:operator><name pos:line="5" pos:column="22">Model</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Core</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Tab</name><op:operator pos:line="7" pos:column="23">.</op:operator><name pos:line="7" pos:column="24">Assist</name></name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Glimpse</name><op:operator pos:line="9" pos:column="18">.</op:operator><name pos:line="9" pos:column="19">AspNet</name><op:operator pos:line="9" pos:column="25">.</op:operator><name pos:line="9" pos:column="26">SerializationConverter</name></name>
<block pos:line="10" pos:column="1">{
    <class><specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">EnvironmentModelConverter</name> <super pos:line="11" pos:column="44">: <name><name pos:line="11" pos:column="46">SerializationConverter</name><argument_list pos:line="11" pos:column="68">&lt;<argument><name pos:line="11" pos:column="69">EnvironmentModel</name></argument>&gt;</argument_list></name></super>
    <block pos:line="12" pos:column="5">{
        <function><type><specifier pos:line="13" pos:column="9">public</specifier> <specifier pos:line="13" pos:column="16">override</specifier> <name pos:line="13" pos:column="25">object</name></type> <name pos:line="13" pos:column="32">Convert</name><parameter_list pos:line="13" pos:column="39">(<param><decl><type><name pos:line="13" pos:column="40">EnvironmentModel</name></type> <name pos:line="13" pos:column="57">obj</name></decl></param>)</parameter_list>
        <block pos:line="14" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="15" pos:column="13">var</name></type> <name pos:line="15" pos:column="17">root</name> <init pos:line="15" pos:column="22">= <expr><op:operator pos:line="15" pos:column="24">new</op:operator> <call><name pos:line="15" pos:column="28">TabObject</name><argument_list pos:line="15" pos:column="37">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="16" pos:column="13">root</name><op:operator pos:line="16" pos:column="17">.</op:operator><name pos:line="16" pos:column="18">AddRow</name></name><argument_list pos:line="16" pos:column="24">()</argument_list></call><op:operator pos:line="16" pos:column="26">.</op:operator><call><name pos:line="16" pos:column="27">Key</name><argument_list pos:line="16" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="16" pos:column="31">"Machine"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="16" pos:column="41">.</op:operator><call><name pos:line="16" pos:column="42">Value</name><argument_list pos:line="16" pos:column="47">(<argument><expr><call><name pos:line="16" pos:column="48">BuildMachineDetails</name><argument_list pos:line="16" pos:column="67">(<argument><expr><name><name pos:line="16" pos:column="68">obj</name><op:operator pos:line="16" pos:column="71">.</op:operator><name pos:line="16" pos:column="72">Machine</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="17" pos:column="13">root</name><op:operator pos:line="17" pos:column="17">.</op:operator><name pos:line="17" pos:column="18">AddRow</name></name><argument_list pos:line="17" pos:column="24">()</argument_list></call><op:operator pos:line="17" pos:column="26">.</op:operator><call><name pos:line="17" pos:column="27">Key</name><argument_list pos:line="17" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="17" pos:column="31">"Web Server"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="17" pos:column="44">.</op:operator><call><name pos:line="17" pos:column="45">Value</name><argument_list pos:line="17" pos:column="50">(<argument><expr><call><name pos:line="17" pos:column="51">BuildWebServerDetails</name><argument_list pos:line="17" pos:column="72">(<argument><expr><name><name pos:line="17" pos:column="73">obj</name><op:operator pos:line="17" pos:column="76">.</op:operator><name pos:line="17" pos:column="77">WebServer</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="18" pos:column="13">root</name><op:operator pos:line="18" pos:column="17">.</op:operator><name pos:line="18" pos:column="18">AddRow</name></name><argument_list pos:line="18" pos:column="24">()</argument_list></call><op:operator pos:line="18" pos:column="26">.</op:operator><call><name pos:line="18" pos:column="27">Key</name><argument_list pos:line="18" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="18" pos:column="31">"Framework"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="18" pos:column="43">.</op:operator><call><name pos:line="18" pos:column="44">Value</name><argument_list pos:line="18" pos:column="49">(<argument><expr><call><name pos:line="18" pos:column="50">BuildFrameworkDetails</name><argument_list pos:line="18" pos:column="71">(<argument><expr><name><name pos:line="18" pos:column="72">obj</name><op:operator pos:line="18" pos:column="75">.</op:operator><name pos:line="18" pos:column="76">Framework</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">root</name><op:operator pos:line="19" pos:column="17">.</op:operator><name pos:line="19" pos:column="18">AddRow</name></name><argument_list pos:line="19" pos:column="24">()</argument_list></call><op:operator pos:line="19" pos:column="26">.</op:operator><call><name pos:line="19" pos:column="27">Key</name><argument_list pos:line="19" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="19" pos:column="31">"Process"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="19" pos:column="41">.</op:operator><call><name pos:line="19" pos:column="42">Value</name><argument_list pos:line="19" pos:column="47">(<argument><expr><call><name pos:line="19" pos:column="48">BuildProcessDetails</name><argument_list pos:line="19" pos:column="67">(<argument><expr><name><name pos:line="19" pos:column="68">obj</name><op:operator pos:line="19" pos:column="71">.</op:operator><name pos:line="19" pos:column="72">Process</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">root</name><op:operator pos:line="20" pos:column="17">.</op:operator><name pos:line="20" pos:column="18">AddRow</name></name><argument_list pos:line="20" pos:column="24">()</argument_list></call><op:operator pos:line="20" pos:column="26">.</op:operator><call><name pos:line="20" pos:column="27">Key</name><argument_list pos:line="20" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="20" pos:column="31">"Timezone"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="20" pos:column="42">.</op:operator><call><name pos:line="20" pos:column="43">Value</name><argument_list pos:line="20" pos:column="48">(<argument><expr><call><name pos:line="20" pos:column="49">BuildTimeZoneDetails</name><argument_list pos:line="20" pos:column="69">(<argument><expr><name><name pos:line="20" pos:column="70">obj</name><op:operator pos:line="20" pos:column="73">.</op:operator><name pos:line="20" pos:column="74">TimeZone</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="21" pos:column="13">root</name><op:operator pos:line="21" pos:column="17">.</op:operator><name pos:line="21" pos:column="18">AddRow</name></name><argument_list pos:line="21" pos:column="24">()</argument_list></call><op:operator pos:line="21" pos:column="26">.</op:operator><call><name pos:line="21" pos:column="27">Key</name><argument_list pos:line="21" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="21" pos:column="31">"Application Assemblies"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="21" pos:column="56">.</op:operator><call><name pos:line="21" pos:column="57">Value</name><argument_list pos:line="21" pos:column="62">(<argument><expr><call><name pos:line="21" pos:column="63">BuildAssemblyDetails</name><argument_list pos:line="21" pos:column="83">(<argument><expr><name><name pos:line="21" pos:column="84">obj</name><op:operator pos:line="21" pos:column="87">.</op:operator><name pos:line="21" pos:column="88">ApplicationAssemblies</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">root</name><op:operator pos:line="22" pos:column="17">.</op:operator><name pos:line="22" pos:column="18">AddRow</name></name><argument_list pos:line="22" pos:column="24">()</argument_list></call><op:operator pos:line="22" pos:column="26">.</op:operator><call><name pos:line="22" pos:column="27">Key</name><argument_list pos:line="22" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="22" pos:column="31">"System Assemblies"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="22" pos:column="51">.</op:operator><call><name pos:line="22" pos:column="52">Value</name><argument_list pos:line="22" pos:column="57">(<argument><expr><call><name pos:line="22" pos:column="58">BuildAssemblyDetails</name><argument_list pos:line="22" pos:column="78">(<argument><expr><name><name pos:line="22" pos:column="79">obj</name><op:operator pos:line="22" pos:column="82">.</op:operator><name pos:line="22" pos:column="83">SystemAssemblies</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:line="24" pos:column="13">return <expr><call><name><name pos:line="24" pos:column="20">root</name><op:operator pos:line="24" pos:column="24">.</op:operator><name pos:line="24" pos:column="25">Build</name></name><argument_list pos:line="24" pos:column="30">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="27" pos:column="9">private</specifier> <specifier pos:line="27" pos:column="17">static</specifier> <name pos:line="27" pos:column="24">TabObject</name></type> <name pos:line="27" pos:column="34">BuildWebServerDetails</name><parameter_list pos:line="27" pos:column="55">(<param><decl><type><name pos:line="27" pos:column="56">EnvironmentWebServerModel</name></type> <name pos:line="27" pos:column="82">model</name></decl></param>)</parameter_list>
        <block pos:line="28" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="29" pos:column="13">var</name></type> <name pos:line="29" pos:column="17">section</name> <init pos:line="29" pos:column="25">= <expr><op:operator pos:line="29" pos:column="27">new</op:operator> <call><name pos:line="29" pos:column="31">TabObject</name><argument_list pos:line="29" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">section</name><op:operator pos:line="30" pos:column="20">.</op:operator><name pos:line="30" pos:column="21">AddRow</name></name><argument_list pos:line="30" pos:column="27">()</argument_list></call><op:operator pos:line="30" pos:column="29">.</op:operator><call><name pos:line="30" pos:column="30">Key</name><argument_list pos:line="30" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="30" pos:column="34">"Type"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="30" pos:column="41">.</op:operator><call><name pos:line="30" pos:column="42">Value</name><argument_list pos:line="30" pos:column="47">(<argument><expr><name><name pos:line="30" pos:column="48">model</name><op:operator pos:line="30" pos:column="53">.</op:operator><name pos:line="30" pos:column="54">ServerType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">section</name><op:operator pos:line="31" pos:column="20">.</op:operator><name pos:line="31" pos:column="21">AddRow</name></name><argument_list pos:line="31" pos:column="27">()</argument_list></call><op:operator pos:line="31" pos:column="29">.</op:operator><call><name pos:line="31" pos:column="30">Key</name><argument_list pos:line="31" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="31" pos:column="34">"Integrated Pipeline"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="31" pos:column="56">.</op:operator><call><name pos:line="31" pos:column="57">Value</name><argument_list pos:line="31" pos:column="62">(<argument><expr><name><name pos:line="31" pos:column="63">model</name><op:operator pos:line="31" pos:column="68">.</op:operator><name pos:line="31" pos:column="69">IntegratedPipeline</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="32" pos:column="13">return <expr><name pos:line="32" pos:column="20">section</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="35" pos:column="9">private</specifier> <name pos:line="35" pos:column="17">TabObject</name></type> <name pos:line="35" pos:column="27">BuildFrameworkDetails</name><parameter_list pos:line="35" pos:column="48">(<param><decl><type><name pos:line="35" pos:column="49">EnvironmentFrameworkModel</name></type> <name pos:line="35" pos:column="75">model</name></decl></param>)</parameter_list>
        <block pos:line="36" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="37" pos:column="13">var</name></type> <name pos:line="37" pos:column="17">section</name> <init pos:line="37" pos:column="25">= <expr><op:operator pos:line="37" pos:column="27">new</op:operator> <call><name pos:line="37" pos:column="31">TabObject</name><argument_list pos:line="37" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">section</name><op:operator pos:line="38" pos:column="20">.</op:operator><name pos:line="38" pos:column="21">AddRow</name></name><argument_list pos:line="38" pos:column="27">()</argument_list></call><op:operator pos:line="38" pos:column="29">.</op:operator><call><name pos:line="38" pos:column="30">Key</name><argument_list pos:line="38" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="34">".NET Framework"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="38" pos:column="51">.</op:operator><call><name pos:line="38" pos:column="52">Value</name><argument_list pos:line="38" pos:column="57">(<argument><expr><name><name pos:line="38" pos:column="58">model</name><op:operator pos:line="38" pos:column="63">.</op:operator><name pos:line="38" pos:column="64">DotnetFramework</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="39" pos:column="13">section</name><op:operator pos:line="39" pos:column="20">.</op:operator><name pos:line="39" pos:column="21">AddRow</name></name><argument_list pos:line="39" pos:column="27">()</argument_list></call><op:operator pos:line="39" pos:column="29">.</op:operator><call><name pos:line="39" pos:column="30">Key</name><argument_list pos:line="39" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="39" pos:column="34">"Debugging"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="39" pos:column="46">.</op:operator><call><name pos:line="39" pos:column="47">Value</name><argument_list pos:line="39" pos:column="52">(<argument><expr><name><name pos:line="39" pos:column="53">model</name><op:operator pos:line="39" pos:column="58">.</op:operator><name pos:line="39" pos:column="59">Debugging</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="40" pos:column="13">section</name><op:operator pos:line="40" pos:column="20">.</op:operator><name pos:line="40" pos:column="21">AddRow</name></name><argument_list pos:line="40" pos:column="27">()</argument_list></call><op:operator pos:line="40" pos:column="29">.</op:operator><call><name pos:line="40" pos:column="30">Key</name><argument_list pos:line="40" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="40" pos:column="34">"Server Culture"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="40" pos:column="51">.</op:operator><call><name pos:line="40" pos:column="52">Value</name><argument_list pos:line="40" pos:column="57">(<argument><expr><name><name pos:line="40" pos:column="58">model</name><op:operator pos:line="40" pos:column="63">.</op:operator><name pos:line="40" pos:column="64">ServerCulture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="41" pos:column="13">section</name><op:operator pos:line="41" pos:column="20">.</op:operator><name pos:line="41" pos:column="21">AddRow</name></name><argument_list pos:line="41" pos:column="27">()</argument_list></call><op:operator pos:line="41" pos:column="29">.</op:operator><call><name pos:line="41" pos:column="30">Key</name><argument_list pos:line="41" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="34">"Current Trust Level"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="41" pos:column="56">.</op:operator><call><name pos:line="41" pos:column="57">Value</name><argument_list pos:line="41" pos:column="62">(<argument><expr><name><name pos:line="41" pos:column="63">model</name><op:operator pos:line="41" pos:column="68">.</op:operator><name pos:line="41" pos:column="69">CurrentTrustLevel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
            <return pos:line="42" pos:column="13">return <expr><name pos:line="42" pos:column="20">section</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="45" pos:column="9">private</specifier> <name pos:line="45" pos:column="17">TabObject</name></type> <name pos:line="45" pos:column="27">BuildMachineDetails</name><parameter_list pos:line="45" pos:column="46">(<param><decl><type><name pos:line="45" pos:column="47">EnvironmentMachineModel</name></type> <name pos:line="45" pos:column="71">model</name></decl></param>)</parameter_list>
        <block pos:line="46" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="47" pos:column="13">var</name></type> <name pos:line="47" pos:column="17">section</name> <init pos:line="47" pos:column="25">= <expr><op:operator pos:line="47" pos:column="27">new</op:operator> <call><name pos:line="47" pos:column="31">TabObject</name><argument_list pos:line="47" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">section</name><op:operator pos:line="48" pos:column="20">.</op:operator><name pos:line="48" pos:column="21">AddRow</name></name><argument_list pos:line="48" pos:column="27">()</argument_list></call><op:operator pos:line="48" pos:column="29">.</op:operator><call><name pos:line="48" pos:column="30">Key</name><argument_list pos:line="48" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="48" pos:column="34">"Name"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="48" pos:column="41">.</op:operator><call><name pos:line="48" pos:column="42">Value</name><argument_list pos:line="48" pos:column="47">(<argument><expr><name><name pos:line="48" pos:column="48">model</name><op:operator pos:line="48" pos:column="53">.</op:operator><name pos:line="48" pos:column="54">Name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="49" pos:column="13">section</name><op:operator pos:line="49" pos:column="20">.</op:operator><name pos:line="49" pos:column="21">AddRow</name></name><argument_list pos:line="49" pos:column="27">()</argument_list></call><op:operator pos:line="49" pos:column="29">.</op:operator><call><name pos:line="49" pos:column="30">Key</name><argument_list pos:line="49" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="49" pos:column="34">"Operating System"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="49" pos:column="53">.</op:operator><call><name pos:line="49" pos:column="54">Value</name><argument_list pos:line="49" pos:column="59">(<argument><expr><name><name pos:line="49" pos:column="60">model</name><op:operator pos:line="49" pos:column="65">.</op:operator><name pos:line="49" pos:column="66">OperatingSystem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="50" pos:column="13">section</name><op:operator pos:line="50" pos:column="20">.</op:operator><name pos:line="50" pos:column="21">AddRow</name></name><argument_list pos:line="50" pos:column="27">()</argument_list></call><op:operator pos:line="50" pos:column="29">.</op:operator><call><name pos:line="50" pos:column="30">Key</name><argument_list pos:line="50" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="50" pos:column="34">"Start Time"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="50" pos:column="47">.</op:operator><call><name pos:line="50" pos:column="48">Value</name><argument_list pos:line="50" pos:column="53">(<argument><expr><name><name pos:line="50" pos:column="54">model</name><op:operator pos:line="50" pos:column="59">.</op:operator><name pos:line="50" pos:column="60">StartTime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
            <return pos:line="51" pos:column="13">return <expr><name pos:line="51" pos:column="20">section</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="54" pos:column="9">private</specifier> <name pos:line="54" pos:column="17">TabObject</name></type> <name pos:line="54" pos:column="27">BuildTimeZoneDetails</name><parameter_list pos:line="54" pos:column="47">(<param><decl><type><name pos:line="54" pos:column="48">EnvironmentTimeZoneModel</name></type> <name pos:line="54" pos:column="73">model</name></decl></param>)</parameter_list>
        <block pos:line="55" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="56" pos:column="13">var</name></type> <name pos:line="56" pos:column="17">section</name> <init pos:line="56" pos:column="25">= <expr><op:operator pos:line="56" pos:column="27">new</op:operator> <call><name pos:line="56" pos:column="31">TabObject</name><argument_list pos:line="56" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="57" pos:column="13">section</name><op:operator pos:line="57" pos:column="20">.</op:operator><name pos:line="57" pos:column="21">AddRow</name></name><argument_list pos:line="57" pos:column="27">()</argument_list></call><op:operator pos:line="57" pos:column="29">.</op:operator><call><name pos:line="57" pos:column="30">Key</name><argument_list pos:line="57" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="57" pos:column="34">"Current"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="57" pos:column="44">.</op:operator><call><name pos:line="57" pos:column="45">Value</name><argument_list pos:line="57" pos:column="50">(<argument><expr><name><name pos:line="57" pos:column="51">model</name><op:operator pos:line="57" pos:column="56">.</op:operator><name pos:line="57" pos:column="57">Name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="58" pos:column="13">section</name><op:operator pos:line="58" pos:column="20">.</op:operator><name pos:line="58" pos:column="21">AddRow</name></name><argument_list pos:line="58" pos:column="27">()</argument_list></call><op:operator pos:line="58" pos:column="29">.</op:operator><call><name pos:line="58" pos:column="30">Key</name><argument_list pos:line="58" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="58" pos:column="34">"Is Daylight Saving"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="58" pos:column="55">.</op:operator><call><name pos:line="58" pos:column="56">Value</name><argument_list pos:line="58" pos:column="61">(<argument><expr><name><name pos:line="58" pos:column="62">model</name><op:operator pos:line="58" pos:column="67">.</op:operator><name pos:line="58" pos:column="68">IsDaylightSavingTime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="59" pos:column="13">section</name><op:operator pos:line="59" pos:column="20">.</op:operator><name pos:line="59" pos:column="21">AddRow</name></name><argument_list pos:line="59" pos:column="27">()</argument_list></call><op:operator pos:line="59" pos:column="29">.</op:operator><call><name pos:line="59" pos:column="30">Key</name><argument_list pos:line="59" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="59" pos:column="34">"UtcOffset"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="59" pos:column="46">.</op:operator><call><name pos:line="59" pos:column="47">Value</name><argument_list pos:line="59" pos:column="52">(<argument><expr><name><name pos:line="59" pos:column="53">model</name><op:operator pos:line="59" pos:column="58">.</op:operator><name pos:line="59" pos:column="59">UtcOffset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="60" pos:column="13">section</name><op:operator pos:line="60" pos:column="20">.</op:operator><name pos:line="60" pos:column="21">AddRow</name></name><argument_list pos:line="60" pos:column="27">()</argument_list></call><op:operator pos:line="60" pos:column="29">.</op:operator><call><name pos:line="60" pos:column="30">Key</name><argument_list pos:line="60" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="34">"UtcOffset w/DLS"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="60" pos:column="52">.</op:operator><call><name pos:line="60" pos:column="53">Value</name><argument_list pos:line="60" pos:column="58">(<argument><expr><name><name pos:line="60" pos:column="59">model</name><op:operator pos:line="60" pos:column="64">.</op:operator><name pos:line="60" pos:column="65">UtcOffsetWithDls</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
            <return pos:line="61" pos:column="13">return <expr><name pos:line="61" pos:column="20">section</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="64" pos:column="9">private</specifier> <name pos:line="64" pos:column="17">TabObject</name></type> <name pos:line="64" pos:column="27">BuildProcessDetails</name><parameter_list pos:line="64" pos:column="46">(<param><decl><type><name pos:line="64" pos:column="47">EnvironmentProcessModel</name></type> <name pos:line="64" pos:column="71">model</name></decl></param>)</parameter_list>
        <block pos:line="65" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="66" pos:column="13">var</name></type> <name pos:line="66" pos:column="17">section</name> <init pos:line="66" pos:column="25">= <expr><op:operator pos:line="66" pos:column="27">new</op:operator> <call><name pos:line="66" pos:column="31">TabObject</name><argument_list pos:line="66" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="67" pos:column="13">section</name><op:operator pos:line="67" pos:column="20">.</op:operator><name pos:line="67" pos:column="21">AddRow</name></name><argument_list pos:line="67" pos:column="27">()</argument_list></call><op:operator pos:line="67" pos:column="29">.</op:operator><call><name pos:line="67" pos:column="30">Key</name><argument_list pos:line="67" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="67" pos:column="34">"Worker Process"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="67" pos:column="51">.</op:operator><call><name pos:line="67" pos:column="52">Value</name><argument_list pos:line="67" pos:column="57">(<argument><expr><name><name pos:line="67" pos:column="58">model</name><op:operator pos:line="67" pos:column="63">.</op:operator><name pos:line="67" pos:column="64">WorkerProcess</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="68" pos:column="13">section</name><op:operator pos:line="68" pos:column="20">.</op:operator><name pos:line="68" pos:column="21">AddRow</name></name><argument_list pos:line="68" pos:column="27">()</argument_list></call><op:operator pos:line="68" pos:column="29">.</op:operator><call><name pos:line="68" pos:column="30">Key</name><argument_list pos:line="68" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="68" pos:column="34">"Process ID"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="68" pos:column="47">.</op:operator><call><name pos:line="68" pos:column="48">Value</name><argument_list pos:line="68" pos:column="53">(<argument><expr><name><name pos:line="68" pos:column="54">model</name><op:operator pos:line="68" pos:column="59">.</op:operator><name pos:line="68" pos:column="60">ProcessId</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="69" pos:column="13">section</name><op:operator pos:line="69" pos:column="20">.</op:operator><name pos:line="69" pos:column="21">AddRow</name></name><argument_list pos:line="69" pos:column="27">()</argument_list></call><op:operator pos:line="69" pos:column="29">.</op:operator><call><name pos:line="69" pos:column="30">Key</name><argument_list pos:line="69" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="34">"Start Time"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="69" pos:column="47">.</op:operator><call><name pos:line="69" pos:column="48">Value</name><argument_list pos:line="69" pos:column="53">(<argument><expr><name><name pos:line="69" pos:column="54">model</name><op:operator pos:line="69" pos:column="59">.</op:operator><name pos:line="69" pos:column="60">StartTime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
            <return pos:line="70" pos:column="13">return <expr><name pos:line="70" pos:column="20">section</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="73" pos:column="9">private</specifier> <name pos:line="73" pos:column="17">TabSection</name></type> <name pos:line="73" pos:column="28">BuildAssemblyDetails</name><parameter_list pos:line="73" pos:column="48">(<param><decl><type><name><name pos:line="73" pos:column="49">IEnumerable</name><argument_list pos:line="73" pos:column="60">&lt;<argument><name pos:line="73" pos:column="61">EnvironmentAssemblyModel</name></argument>&gt;</argument_list></name></type> <name pos:line="73" pos:column="87">model</name></decl></param>)</parameter_list>
        <block pos:line="74" pos:column="9">{ 
            <decl_stmt><decl><type><name pos:line="75" pos:column="13">var</name></type> <name pos:line="75" pos:column="17">modelList</name> <init pos:line="75" pos:column="27">= <expr><op:operator pos:line="75" pos:column="29">new</op:operator> <call><name pos:line="75" pos:column="33">TabSection</name><argument_list pos:line="75" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="75" pos:column="44">"Name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="75" pos:column="52">"Version"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="75" pos:column="63">"Version Info"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="75" pos:column="79">"Culture"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="75" pos:column="90">"From GAC"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="75" pos:column="102">"Full Trust"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="75" pos:column="116">"Build Mode"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="76" pos:column="13">foreach (<init><decl><type><name pos:line="76" pos:column="22">var</name></type> <name pos:line="76" pos:column="26">assemblyModel</name> <range pos:line="76" pos:column="40">in <expr><name pos:line="76" pos:column="43">model</name></expr></range></decl></init>)
            <block pos:line="77" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="78" pos:column="17">modelList</name><op:operator pos:line="78" pos:column="26">.</op:operator><name pos:line="78" pos:column="27">AddRow</name></name><argument_list pos:line="78" pos:column="33">()</argument_list></call><op:operator pos:line="78" pos:column="35">.</op:operator><call><name pos:line="78" pos:column="36">Column</name><argument_list pos:line="78" pos:column="42">(<argument><expr><name><name pos:line="78" pos:column="43">assemblyModel</name><op:operator pos:line="78" pos:column="56">.</op:operator><name pos:line="78" pos:column="57">Name</name></name></expr></argument>)</argument_list></call><op:operator pos:line="78" pos:column="62">.</op:operator><call><name pos:line="78" pos:column="63">Column</name><argument_list pos:line="78" pos:column="69">(<argument><expr><name><name pos:line="78" pos:column="70">assemblyModel</name><op:operator pos:line="78" pos:column="83">.</op:operator><name pos:line="78" pos:column="84">Version</name></name></expr></argument>)</argument_list></call><op:operator pos:line="78" pos:column="92">.</op:operator><call><name pos:line="78" pos:column="93">Column</name><argument_list pos:line="78" pos:column="99">(<argument><expr><name><name pos:line="78" pos:column="100">assemblyModel</name><op:operator pos:line="78" pos:column="113">.</op:operator><name pos:line="78" pos:column="114">VersionInfo</name></name></expr></argument>)</argument_list></call><op:operator pos:line="78" pos:column="126">.</op:operator><call><name pos:line="78" pos:column="127">Column</name><argument_list pos:line="78" pos:column="133">(<argument><expr><name><name pos:line="78" pos:column="134">assemblyModel</name><op:operator pos:line="78" pos:column="147">.</op:operator><name pos:line="78" pos:column="148">Culture</name></name></expr></argument>)</argument_list></call><op:operator pos:line="78" pos:column="156">.</op:operator><call><name pos:line="78" pos:column="157">Column</name><argument_list pos:line="78" pos:column="163">(<argument><expr><name><name pos:line="78" pos:column="164">assemblyModel</name><op:operator pos:line="78" pos:column="177">.</op:operator><name pos:line="78" pos:column="178">FromGac</name></name></expr></argument>)</argument_list></call><op:operator pos:line="78" pos:column="186">.</op:operator><call><name pos:line="78" pos:column="187">Column</name><argument_list pos:line="78" pos:column="193">(<argument><expr><name><name pos:line="78" pos:column="194">assemblyModel</name><op:operator pos:line="78" pos:column="207">.</op:operator><name pos:line="78" pos:column="208">FullTrust</name></name></expr></argument>)</argument_list></call><op:operator pos:line="78" pos:column="218">.</op:operator><call><name pos:line="78" pos:column="219">Column</name><argument_list pos:line="78" pos:column="225">(<argument><expr><name><name pos:line="78" pos:column="226">assemblyModel</name><op:operator pos:line="78" pos:column="239">.</op:operator><name pos:line="78" pos:column="240">BuildMode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

            <return pos:line="81" pos:column="13">return <expr><name pos:line="81" pos:column="20">modelList</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
