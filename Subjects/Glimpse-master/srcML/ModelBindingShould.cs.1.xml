<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Mvc\Tab\ModelBindingShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Web</name><op:operator pos:line="2" pos:column="17">.</op:operator><name pos:line="2" pos:column="18">Mvc</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">AspNet</name><op:operator pos:line="3" pos:column="21">.</op:operator><name pos:line="3" pos:column="22">Extensibility</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Mvc</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">AlternateType</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Mvc</name><op:operator pos:line="6" pos:column="18">.</op:operator><name pos:line="6" pos:column="19">Tab</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Test</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Common</name></name>;</using>
<using pos:line="8" pos:column="1">using <name pos:line="8" pos:column="7">Moq</name>;</using>
<using pos:line="9" pos:column="1">using <name pos:line="9" pos:column="7">Xunit</name>;</using>
<using pos:line="10" pos:column="1">using <name><name pos:line="10" pos:column="7">Xunit</name><op:operator pos:line="10" pos:column="12">.</op:operator><name pos:line="10" pos:column="13">Extensions</name></name>;</using>

<namespace pos:line="12" pos:column="1">namespace <name><name pos:line="12" pos:column="11">Glimpse</name><op:operator pos:line="12" pos:column="18">.</op:operator><name pos:line="12" pos:column="19">Test</name><op:operator pos:line="12" pos:column="23">.</op:operator><name pos:line="12" pos:column="24">Mvc</name><op:operator pos:line="12" pos:column="27">.</op:operator><name pos:line="12" pos:column="28">Tab</name></name>
<block pos:line="13" pos:column="1">{
    <class><specifier pos:line="14" pos:column="5">public</specifier> class <name pos:line="14" pos:column="18">ModelBindingShould</name>
    <block pos:line="15" pos:column="5">{
        <function><type><attribute pos:line="16" pos:column="9">[<expr><name pos:line="16" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="17" pos:column="9">public</specifier> <name pos:line="17" pos:column="16">void</name></type> <name pos:line="17" pos:column="21">Construct</name><parameter_list pos:line="17" pos:column="30">()</parameter_list>
        <block pos:line="18" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="19" pos:column="13">var</name></type> <name pos:line="19" pos:column="17">sut</name> <init pos:line="19" pos:column="21">= <expr><op:operator pos:line="19" pos:column="23">new</op:operator> <call><name pos:line="19" pos:column="27">ModelBinding</name><argument_list pos:line="19" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="21" pos:column="13">Assert</name><op:operator pos:line="21" pos:column="19">.</op:operator><name><name pos:line="21" pos:column="20">IsAssignableFrom</name><argument_list pos:line="21" pos:column="36">&lt;<argument><name pos:line="21" pos:column="37">AspNetTab</name></argument>&gt;</argument_list></name></name><argument_list pos:line="21" pos:column="47">(<argument><expr><name pos:line="21" pos:column="48">sut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">Assert</name><op:operator pos:line="22" pos:column="19">.</op:operator><name><name pos:line="22" pos:column="20">IsAssignableFrom</name><argument_list pos:line="22" pos:column="36">&lt;<argument><name pos:line="22" pos:column="37">ITabSetup</name></argument>&gt;</argument_list></name></name><argument_list pos:line="22" pos:column="47">(<argument><expr><name pos:line="22" pos:column="48">sut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="25" pos:column="9">[<expr><name pos:line="25" pos:column="10">Theory</name></expr><op:operator pos:line="25" pos:column="16">,</op:operator> <expr><name pos:line="25" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="26" pos:column="9">public</specifier> <name pos:line="26" pos:column="16">void</name></type> <name pos:line="26" pos:column="21">ReturnProperName</name><parameter_list pos:line="26" pos:column="37">(<param><decl><type><name pos:line="26" pos:column="38">ModelBinding</name></type> <name pos:line="26" pos:column="51">sut</name></decl></param>)</parameter_list>
        <block pos:line="27" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">Assert</name><op:operator pos:line="28" pos:column="19">.</op:operator><name pos:line="28" pos:column="20">Equal</name></name><argument_list pos:line="28" pos:column="25">(<argument><expr><lit:literal type="string" pos:line="28" pos:column="26">"Model Binding"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="43">sut</name><op:operator pos:line="28" pos:column="46">.</op:operator><name pos:line="28" pos:column="47">Name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="31" pos:column="9">[<expr><name pos:line="31" pos:column="10">Theory</name></expr><op:operator pos:line="31" pos:column="16">,</op:operator> <expr><name pos:line="31" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="32" pos:column="9">public</specifier> <name pos:line="32" pos:column="16">void</name></type> <name pos:line="32" pos:column="21">SubscribeToMessages</name><parameter_list pos:line="32" pos:column="40">(<param><decl><type><name pos:line="32" pos:column="41">ModelBinding</name></type> <name pos:line="32" pos:column="54">sut</name></decl></param>, <param><decl><type><name pos:line="32" pos:column="59">ITabSetupContext</name></type> <name pos:line="32" pos:column="76">context</name></decl></param>)</parameter_list>
        <block pos:line="33" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="34" pos:column="13">sut</name><op:operator pos:line="34" pos:column="16">.</op:operator><name pos:line="34" pos:column="17">Setup</name></name><argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">context</name><op:operator pos:line="36" pos:column="20">.</op:operator><name pos:line="36" pos:column="21">MessageBroker</name><op:operator pos:line="36" pos:column="34">.</op:operator><name pos:line="36" pos:column="35">Verify</name></name><argument_list pos:line="36" pos:column="41">(<argument><expr><lambda><name pos:line="36" pos:column="42">mb</name> <op:operator pos:line="36" pos:column="45">=&gt;</op:operator> <call><name><name pos:line="36" pos:column="48">mb</name><op:operator pos:line="36" pos:column="50">.</op:operator><name pos:line="36" pos:column="51">Subscribe</name></name><argument_list pos:line="36" pos:column="60">(<argument><expr><call><name><name pos:line="36" pos:column="61">It</name><op:operator pos:line="36" pos:column="63">.</op:operator><name><name pos:line="36" pos:column="64">IsAny</name><argument_list pos:line="36" pos:column="69">&lt;<argument><name><name pos:line="36" pos:column="70">Action</name><argument_list pos:line="36" pos:column="76">&lt;<argument><name><name><name pos:line="36" pos:column="77">ValueProvider</name><argument_list pos:line="36" pos:column="90">&lt;<argument><name pos:line="36" pos:column="91">IValueProvider</name></argument>&gt;</argument_list></name><op:operator pos:line="36" pos:column="106">.</op:operator><name pos:line="36" pos:column="107">GetValue</name><op:operator pos:line="36" pos:column="115">.</op:operator><name pos:line="36" pos:column="116">Message</name></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="36" pos:column="125">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="37" pos:column="13">context</name><op:operator pos:line="37" pos:column="20">.</op:operator><name pos:line="37" pos:column="21">MessageBroker</name><op:operator pos:line="37" pos:column="34">.</op:operator><name pos:line="37" pos:column="35">Verify</name></name><argument_list pos:line="37" pos:column="41">(<argument><expr><lambda><name pos:line="37" pos:column="42">mb</name> <op:operator pos:line="37" pos:column="45">=&gt;</op:operator> <call><name><name pos:line="37" pos:column="48">mb</name><op:operator pos:line="37" pos:column="50">.</op:operator><name pos:line="37" pos:column="51">Subscribe</name></name><argument_list pos:line="37" pos:column="60">(<argument><expr><call><name><name pos:line="37" pos:column="61">It</name><op:operator pos:line="37" pos:column="63">.</op:operator><name><name pos:line="37" pos:column="64">IsAny</name><argument_list pos:line="37" pos:column="69">&lt;<argument><name><name pos:line="37" pos:column="70">Action</name><argument_list pos:line="37" pos:column="76">&lt;<argument><name><name><name pos:line="37" pos:column="77">ValueProvider</name><argument_list pos:line="37" pos:column="90">&lt;<argument><name pos:line="37" pos:column="91">IUnvalidatedValueProvider</name></argument>&gt;</argument_list></name><op:operator pos:line="37" pos:column="117">.</op:operator><name pos:line="37" pos:column="118">GetValue</name><op:operator pos:line="37" pos:column="126">.</op:operator><name pos:line="37" pos:column="127">Message</name></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="37" pos:column="136">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">context</name><op:operator pos:line="38" pos:column="20">.</op:operator><name pos:line="38" pos:column="21">MessageBroker</name><op:operator pos:line="38" pos:column="34">.</op:operator><name pos:line="38" pos:column="35">Verify</name></name><argument_list pos:line="38" pos:column="41">(<argument><expr><lambda><name pos:line="38" pos:column="42">mb</name> <op:operator pos:line="38" pos:column="45">=&gt;</op:operator> <call><name><name pos:line="38" pos:column="48">mb</name><op:operator pos:line="38" pos:column="50">.</op:operator><name pos:line="38" pos:column="51">Subscribe</name></name><argument_list pos:line="38" pos:column="60">(<argument><expr><call><name><name pos:line="38" pos:column="61">It</name><op:operator pos:line="38" pos:column="63">.</op:operator><name><name pos:line="38" pos:column="64">IsAny</name><argument_list pos:line="38" pos:column="69">&lt;<argument><name><name pos:line="38" pos:column="70">Action</name><argument_list pos:line="38" pos:column="76">&lt;<argument><name><name pos:line="38" pos:column="77">ModelBinder</name><op:operator pos:line="38" pos:column="88">.</op:operator><name pos:line="38" pos:column="89">BindModel</name><op:operator pos:line="38" pos:column="98">.</op:operator><name pos:line="38" pos:column="99">Message</name></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="38" pos:column="108">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="39" pos:column="13">context</name><op:operator pos:line="39" pos:column="20">.</op:operator><name pos:line="39" pos:column="21">MessageBroker</name><op:operator pos:line="39" pos:column="34">.</op:operator><name pos:line="39" pos:column="35">Verify</name></name><argument_list pos:line="39" pos:column="41">(<argument><expr><lambda><name pos:line="39" pos:column="42">mb</name> <op:operator pos:line="39" pos:column="45">=&gt;</op:operator> <call><name><name pos:line="39" pos:column="48">mb</name><op:operator pos:line="39" pos:column="50">.</op:operator><name pos:line="39" pos:column="51">Subscribe</name></name><argument_list pos:line="39" pos:column="60">(<argument><expr><call><name><name pos:line="39" pos:column="61">It</name><op:operator pos:line="39" pos:column="63">.</op:operator><name><name pos:line="39" pos:column="64">IsAny</name><argument_list pos:line="39" pos:column="69">&lt;<argument><name><name pos:line="39" pos:column="70">Action</name><argument_list pos:line="39" pos:column="76">&lt;<argument><name><name pos:line="39" pos:column="77">ModelBinder</name><op:operator pos:line="39" pos:column="88">.</op:operator><name pos:line="39" pos:column="89">BindProperty</name><op:operator pos:line="39" pos:column="101">.</op:operator><name pos:line="39" pos:column="102">Message</name></name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="39" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
