<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Framework\IGlimpseRuntime.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>

<namespace pos:line="3" pos:column="1">namespace <name><name pos:line="3" pos:column="11">Glimpse</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">Core</name><op:operator pos:line="3" pos:column="23">.</op:operator><name pos:line="3" pos:column="24">Framework</name></name>
<block pos:line="4" pos:column="1">{
    <comment type="line" pos:line="5" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="6" pos:column="5">/// Defines methods to implement the Glimpse runtime</comment>
    <comment type="line" pos:line="7" pos:column="5">/// &lt;/summary&gt;</comment>
    <class type="interface"><specifier pos:line="8" pos:column="5">public</specifier> interface <name pos:line="8" pos:column="22">IGlimpseRuntime</name>
    <block pos:line="9" pos:column="5">{
        <comment type="line" pos:line="10" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="11" pos:column="9">/// Gets a value indicating whether this instance is initialized.</comment>
        <comment type="line" pos:line="12" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="13" pos:column="9">/// &lt;value&gt;&lt;c&gt;true&lt;/c&gt; if this instance is initialized; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">bool</name></type> <name pos:line="14" pos:column="14">IsInitialized</name> <block pos:line="14" pos:column="28">{ <function_decl><name pos:line="14" pos:column="30">get</name>;</function_decl> }</block></decl></decl_stmt>

        <comment type="line" pos:line="16" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="17" pos:column="9">/// Begins the request.</comment>
        <comment type="line" pos:line="18" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="19" pos:column="9">/// &lt;remarks&gt;</comment>
        <comment type="line" pos:line="20" pos:column="9">/// Called when ever the implementing framework registers a request start. Specifically, </comment>
        <comment type="line" pos:line="21" pos:column="9">/// with the ASP.NET provider, this is wired to the &lt;c&gt;BeginRequest&lt;/c&gt; method.</comment>
        <comment type="line" pos:line="22" pos:column="9">/// &lt;/remarks&gt;</comment>
        <function_decl><type><name pos:line="23" pos:column="9">void</name></type> <name pos:line="23" pos:column="14">BeginRequest</name><parameter_list pos:line="23" pos:column="26">()</parameter_list>;</function_decl>

        <comment type="line" pos:line="25" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="26" pos:column="9">/// Ends the request.</comment>
        <comment type="line" pos:line="27" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="28" pos:column="9">/// &lt;remarks&gt;</comment>
        <comment type="line" pos:line="29" pos:column="9">/// Called when ever the implementing framework registers a request end. Specifically, </comment>
        <comment type="line" pos:line="30" pos:column="9">/// with the ASP.NET provider, this is wired to the &lt;c&gt;PostReleaseRequestState&lt;/c&gt; method.</comment>
        <comment type="line" pos:line="31" pos:column="9">/// &lt;/remarks&gt;</comment>
        <function_decl><type><name pos:line="32" pos:column="9">void</name></type> <name pos:line="32" pos:column="14">EndRequest</name><parameter_list pos:line="32" pos:column="24">()</parameter_list>;</function_decl>

        <comment type="line" pos:line="34" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="35" pos:column="9">/// Executes the default resource.</comment>
        <comment type="line" pos:line="36" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="37" pos:column="9">/// &lt;remarks&gt;</comment>
        <comment type="line" pos:line="38" pos:column="9">/// Specifically, with the ASP.NET provider, this is wired to the </comment>
        <comment type="line" pos:line="39" pos:column="9">/// &lt;c&gt;ProcessRequest&lt;/c&gt; method.</comment>
        <comment type="line" pos:line="40" pos:column="9">/// &lt;seealso cref="Glimpse.Core.Extensibility.IResourceResult"/&gt;</comment>
        <comment type="line" pos:line="41" pos:column="9">/// &lt;seealso cref="Glimpse.Core.Extensibility.IResource"/&gt;</comment>
        <comment type="line" pos:line="42" pos:column="9">/// &lt;/remarks&gt;</comment>
        <function_decl><type><name pos:line="43" pos:column="9">void</name></type> <name pos:line="43" pos:column="14">ExecuteDefaultResource</name><parameter_list pos:line="43" pos:column="36">()</parameter_list>;</function_decl>

        <comment type="line" pos:line="45" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="46" pos:column="9">/// Executes the resource.</comment>
        <comment type="line" pos:line="47" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="48" pos:column="9">/// &lt;param name="resourceName"&gt;Name of the resource.&lt;/param&gt;</comment>
        <comment type="line" pos:line="49" pos:column="9">/// &lt;param name="parameters"&gt;The parameters.&lt;/param&gt;</comment>
        <comment type="line" pos:line="50" pos:column="9">/// &lt;remarks&gt;</comment>
        <comment type="line" pos:line="51" pos:column="9">/// Specifically, with the ASP.NET provider, this is wired to the </comment>
        <comment type="line" pos:line="52" pos:column="9">/// &lt;c&gt;ProcessRequest&lt;/c&gt; method.</comment>
        <comment type="line" pos:line="53" pos:column="9">/// &lt;seealso cref="Glimpse.Core.Extensibility.IResourceResult"/&gt;</comment>
        <comment type="line" pos:line="54" pos:column="9">/// &lt;seealso cref="Glimpse.Core.Extensibility.IResource"/&gt;</comment>
        <comment type="line" pos:line="55" pos:column="9">/// &lt;/remarks&gt;</comment>
        <function_decl><type><name pos:line="56" pos:column="9">void</name></type> <name pos:line="56" pos:column="14">ExecuteResource</name><parameter_list pos:line="56" pos:column="29">(<param><decl><type><name pos:line="56" pos:column="30">string</name></type> <name pos:line="56" pos:column="37">resourceName</name></decl></param>, <param><decl><type><name pos:line="56" pos:column="51">ResourceParameters</name></type> <name pos:line="56" pos:column="70">parameters</name></decl></param>)</parameter_list>;</function_decl>

        <comment type="line" pos:line="58" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="59" pos:column="9">/// Begins the session access.</comment>
        <comment type="line" pos:line="60" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="61" pos:column="9">/// &lt;remarks&gt;</comment>
        <comment type="line" pos:line="62" pos:column="9">/// Called when ever the implementing framework registers a clients session start. Code that is </comment>
        <comment type="line" pos:line="63" pos:column="9">/// executed off this methods should have access to the session state store. Specifically, </comment>
        <comment type="line" pos:line="64" pos:column="9">/// with the ASP.NET provider, this is wired to the &lt;c&gt;PostAcquireRequestState&lt;/c&gt; method.</comment>
        <comment type="line" pos:line="65" pos:column="9">/// &lt;/remarks&gt;</comment>
        <function_decl><type><name pos:line="66" pos:column="9">void</name></type> <name pos:line="66" pos:column="14">BeginSessionAccess</name><parameter_list pos:line="66" pos:column="32">()</parameter_list>;</function_decl>

        <comment type="line" pos:line="68" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="69" pos:column="9">/// Ends the session access.</comment>
        <comment type="line" pos:line="70" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="71" pos:column="9">/// &lt;remarks&gt;</comment>
        <comment type="line" pos:line="72" pos:column="9">/// Called when ever the implementing framework registers a clients session end. Code that is </comment>
        <comment type="line" pos:line="73" pos:column="9">/// executed off this methods should still have access to the session state store. Specifically, </comment>
        <comment type="line" pos:line="74" pos:column="9">/// with the ASP.NET provider, this is wired to the &lt;c&gt;PostRequestHandlerExecute&lt;/c&gt; method.</comment>
        <comment type="line" pos:line="75" pos:column="9">/// &lt;/remarks&gt;</comment>
        <function_decl><type><name pos:line="76" pos:column="9">void</name></type> <name pos:line="76" pos:column="14">EndSessionAccess</name><parameter_list pos:line="76" pos:column="30">()</parameter_list>;</function_decl>

        <comment type="line" pos:line="78" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="79" pos:column="9">/// Initializes this instance.</comment>
        <comment type="line" pos:line="80" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="81" pos:column="9">/// &lt;returns&gt;&lt;c&gt;true&lt;/c&gt; if system initialized successfully, &lt;c&gt;false&lt;/c&gt; otherwise&lt;/returns&gt;</comment>
        <comment type="line" pos:line="82" pos:column="9">/// &lt;remarks&gt;</comment>
        <comment type="line" pos:line="83" pos:column="9">/// Typically used to wire up framework events to the corresponding runtime methods. Depending</comment>
        <comment type="line" pos:line="84" pos:column="9">/// on framework implementation, this could be called multiple times per "application pool" </comment>
        <comment type="line" pos:line="85" pos:column="9">/// recycle. Specifically, with the ASP.NET provider, this is wired to/implemented by the </comment>
        <comment type="line" pos:line="86" pos:column="9">/// &lt;c&gt;Init&lt;/c&gt; method.</comment>
        <comment type="line" pos:line="87" pos:column="9">/// &lt;/remarks&gt;</comment>
        <function_decl><type><name pos:line="88" pos:column="9">bool</name></type> <name pos:line="88" pos:column="14">Initialize</name><parameter_list pos:line="88" pos:column="24">()</parameter_list>;</function_decl>
    }</block></class>
}</block></namespace>
</unit>
