<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Tab\Assist\TabObject.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>

<namespace pos:line="3" pos:column="1">namespace <name><name pos:line="3" pos:column="11">Glimpse</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">Core</name><op:operator pos:line="3" pos:column="23">.</op:operator><name pos:line="3" pos:column="24">Tab</name><op:operator pos:line="3" pos:column="27">.</op:operator><name pos:line="3" pos:column="28">Assist</name></name>
<block pos:line="4" pos:column="1">{
    <class><specifier pos:line="5" pos:column="5">public</specifier> class <name pos:line="5" pos:column="18">TabObject</name> <super pos:line="5" pos:column="28">: <name pos:line="5" pos:column="30">ITabBuild</name></super>
    <block pos:line="6" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="7" pos:column="9">private</specifier> <specifier pos:line="7" pos:column="17">readonly</specifier> <name><name pos:line="7" pos:column="26">IList</name><argument_list pos:line="7" pos:column="31">&lt;<argument><name pos:line="7" pos:column="32">TabObjectRow</name></argument>&gt;</argument_list></name></type> <name pos:line="7" pos:column="46">rows</name> <init pos:line="7" pos:column="51">= <expr><op:operator pos:line="7" pos:column="53">new</op:operator> <call><name><name pos:line="7" pos:column="57">List</name><argument_list pos:line="7" pos:column="61">&lt;<argument><name pos:line="7" pos:column="62">TabObjectRow</name></argument>&gt;</argument_list></name><argument_list pos:line="7" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="9" pos:column="9">public</specifier> <name pos:line="9" pos:column="16">TabObjectRow</name></type> <name pos:line="9" pos:column="29">AddRow</name><parameter_list pos:line="9" pos:column="35">()</parameter_list>
        <block pos:line="10" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="11" pos:column="13">var</name></type> <name pos:line="11" pos:column="17">row</name> <init pos:line="11" pos:column="21">= <expr><op:operator pos:line="11" pos:column="23">new</op:operator> <call><name pos:line="11" pos:column="27">TabObjectRow</name><argument_list pos:line="11" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="12" pos:column="13">rows</name><op:operator pos:line="12" pos:column="17">.</op:operator><name pos:line="12" pos:column="18">Add</name></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">row</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="13" pos:column="13">return <expr><name pos:line="13" pos:column="20">row</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="16" pos:column="9">public</specifier> <name pos:line="16" pos:column="16">object</name></type> <name pos:line="16" pos:column="23">Build</name><parameter_list pos:line="16" pos:column="28">()</parameter_list>
        <block pos:line="17" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">var</name></type> <name pos:line="18" pos:column="17">dictionary</name> <init pos:line="18" pos:column="28">= <expr><op:operator pos:line="18" pos:column="30">new</op:operator> <call><name><name pos:line="18" pos:column="34">Dictionary</name><argument_list pos:line="18" pos:column="44">&lt;<argument><name pos:line="18" pos:column="45">object</name></argument>, <argument><name pos:line="18" pos:column="53">object</name></argument>&gt;</argument_list></name><argument_list pos:line="18" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="19" pos:column="13">foreach (<init><decl><type><name pos:line="19" pos:column="22">var</name></type> <name pos:line="19" pos:column="26">row</name> <range pos:line="19" pos:column="30">in <expr><name pos:line="19" pos:column="33">rows</name></expr></range></decl></init>)
            <block pos:line="20" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="21" pos:column="17">var</name></type> <name pos:line="21" pos:column="21">valueRow</name> <init pos:line="21" pos:column="30">= <expr><name><name pos:line="21" pos:column="32">row</name><op:operator pos:line="21" pos:column="35">.</op:operator><name pos:line="21" pos:column="36">BaseValue</name></name> <op:operator pos:line="21" pos:column="46">as</op:operator> <name pos:line="21" pos:column="49">ITabBuild</name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name><name pos:line="22" pos:column="17">dictionary</name><index pos:line="22" pos:column="27">[<expr><name><name pos:line="22" pos:column="28">row</name><op:operator pos:line="22" pos:column="31">.</op:operator><name pos:line="22" pos:column="32">BaseKey</name></name></expr>]</index></name> <op:operator pos:line="22" pos:column="41">=</op:operator> <name pos:line="22" pos:column="43">valueRow</name> <op:operator pos:line="22" pos:column="52">!=</op:operator> <name pos:line="22" pos:column="55">null</name> <op:operator pos:line="22" pos:column="60">?</op:operator> <call><name><name pos:line="22" pos:column="62">valueRow</name><op:operator pos:line="22" pos:column="70">.</op:operator><name pos:line="22" pos:column="71">Build</name></name><argument_list pos:line="22" pos:column="76">()</argument_list></call> <op:operator pos:line="22" pos:column="79">:</op:operator> <name><name pos:line="22" pos:column="81">row</name><op:operator pos:line="22" pos:column="84">.</op:operator><name pos:line="22" pos:column="85">BaseValue</name></name></expr>;</expr_stmt>
            }</block></foreach>

            <return pos:line="25" pos:column="13">return <expr><name pos:line="25" pos:column="20">dictionary</name></expr>;</return>
        }</block></function> 
    }</block></class>
}</block></namespace></unit>
