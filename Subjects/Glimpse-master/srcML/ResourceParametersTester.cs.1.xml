<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Core\Tester\ResourceParametersTester.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name><op:operator pos:line="2" pos:column="19">.</op:operator><name pos:line="2" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Framework</name></name>;</using>
<using pos:line="4" pos:column="1">using <name pos:line="4" pos:column="7">Moq</name>;</using>

<namespace pos:line="6" pos:column="1">namespace <name><name pos:line="6" pos:column="11">Glimpse</name><op:operator pos:line="6" pos:column="18">.</op:operator><name pos:line="6" pos:column="19">Test</name><op:operator pos:line="6" pos:column="23">.</op:operator><name pos:line="6" pos:column="24">Core</name><op:operator pos:line="6" pos:column="28">.</op:operator><name pos:line="6" pos:column="29">Tester</name></name>
<block pos:line="7" pos:column="1">{
    <class><specifier pos:line="8" pos:column="5">public</specifier> class <name pos:line="8" pos:column="18">ResourceParametersTester</name> <super pos:line="8" pos:column="43">: <name pos:line="8" pos:column="45">ResourceParameters</name></super>
    <block pos:line="9" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="10" pos:column="9">public</specifier> <name><name pos:line="10" pos:column="16">Mock</name><argument_list pos:line="10" pos:column="20">&lt;<argument><name pos:line="10" pos:column="21">IResource</name></argument>&gt;</argument_list></name></type> <name pos:line="10" pos:column="32">ResourceMock</name> <block pos:line="10" pos:column="45">{ <function_decl><name pos:line="10" pos:column="47">get</name>;</function_decl> <function_decl><name pos:line="10" pos:column="52">set</name>;</function_decl> }</block></decl></decl_stmt>
        
        <constructor><specifier pos:line="12" pos:column="9">private</specifier> <name pos:line="12" pos:column="17">ResourceParametersTester</name><parameter_list pos:line="12" pos:column="41">(<param><decl><type><name><name pos:line="12" pos:column="42">IDictionary</name><argument_list pos:line="12" pos:column="53">&lt;<argument><name pos:line="12" pos:column="54">string</name></argument>,<argument><name pos:line="12" pos:column="61">string</name></argument>&gt;</argument_list></name></type> <name pos:line="12" pos:column="69">namedParams</name></decl></param>)</parameter_list><member_list pos:line="12" pos:column="81">:<call><name pos:line="12" pos:column="82">base</name><argument_list pos:line="12" pos:column="86">(<argument><expr><name pos:line="12" pos:column="87">namedParams</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="13" pos:column="9">{
            <expr_stmt><expr><name pos:line="14" pos:column="13">ResourceMock</name> <op:operator pos:line="14" pos:column="26">=</op:operator> <op:operator pos:line="14" pos:column="28">new</op:operator> <call><name><name pos:line="14" pos:column="32">Mock</name><argument_list pos:line="14" pos:column="36">&lt;<argument><name pos:line="14" pos:column="37">IResource</name></argument>&gt;</argument_list></name><argument_list pos:line="14" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="15" pos:column="13">ResourceMock</name><op:operator pos:line="15" pos:column="25">.</op:operator><name pos:line="15" pos:column="26">Setup</name></name><argument_list pos:line="15" pos:column="31">(<argument><expr><lambda><name pos:line="15" pos:column="32">r</name> <op:operator pos:line="15" pos:column="34">=&gt;</op:operator> <name><name pos:line="15" pos:column="37">r</name><op:operator pos:line="15" pos:column="38">.</op:operator><name pos:line="15" pos:column="39">Parameters</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="15" pos:column="50">.</op:operator><call><name pos:line="15" pos:column="51">Returns</name><argument_list pos:line="15" pos:column="58">(<argument><expr><op:operator pos:line="15" pos:column="59">new</op:operator><index pos:line="15" pos:column="62">[]</index> <block pos:line="15" pos:column="65">{<expr><op:operator pos:line="15" pos:column="66">new</op:operator> <call><name pos:line="15" pos:column="70">ResourceParameterMetadata</name><argument_list pos:line="15" pos:column="95">(<argument><expr><lit:literal type="string" pos:line="15" pos:column="96">"One"</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="15" pos:column="102">,</op:operator> <expr><op:operator pos:line="15" pos:column="104">new</op:operator> <call><name pos:line="15" pos:column="108">ResourceParameterMetadata</name><argument_list pos:line="15" pos:column="133">(<argument><expr><lit:literal type="string" pos:line="15" pos:column="134">"Two"</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="15" pos:column="140">,</op:operator> <expr><op:operator pos:line="15" pos:column="142">new</op:operator> <call><name pos:line="15" pos:column="146">ResourceParameterMetadata</name><argument_list pos:line="15" pos:column="171">(<argument><expr><lit:literal type="string" pos:line="15" pos:column="172">"Three"</lit:literal></expr></argument>)</argument_list></call></expr>}</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="18" pos:column="9">public</specifier> <specifier pos:line="18" pos:column="16">static</specifier> <name pos:line="18" pos:column="23">ResourceParametersTester</name></type> <name pos:line="18" pos:column="48">Create</name><parameter_list pos:line="18" pos:column="54">()</parameter_list>
        <block pos:line="19" pos:column="9">{
            <decl_stmt><decl><type><name><name pos:line="20" pos:column="13">IDictionary</name><argument_list pos:line="20" pos:column="24">&lt;<argument><name pos:line="20" pos:column="25">string</name></argument>, <argument><name pos:line="20" pos:column="33">string</name></argument>&gt;</argument_list></name></type> <name pos:line="20" pos:column="41">none</name> <init pos:line="20" pos:column="46">= <expr><name pos:line="20" pos:column="48">null</name></expr></init></decl>;</decl_stmt>
            <return pos:line="21" pos:column="13">return <expr><op:operator pos:line="21" pos:column="20">new</op:operator> <call><name pos:line="21" pos:column="24">ResourceParametersTester</name><argument_list pos:line="21" pos:column="48">(<argument><expr><name pos:line="21" pos:column="49">none</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
