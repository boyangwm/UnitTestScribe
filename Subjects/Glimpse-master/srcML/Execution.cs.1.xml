<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc\Tab\Execution.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Linq</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">AspNet</name><op:operator pos:line="2" pos:column="21">.</op:operator><name pos:line="2" pos:column="22">Extensibility</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Extensions</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Tab</name><op:operator pos:line="5" pos:column="23">.</op:operator><name pos:line="5" pos:column="24">Assist</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Mvc</name><op:operator pos:line="6" pos:column="18">.</op:operator><name pos:line="6" pos:column="19">Message</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Mvc</name><op:operator pos:line="7" pos:column="18">.</op:operator><name pos:line="7" pos:column="19">Model</name></name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Glimpse</name><op:operator pos:line="9" pos:column="18">.</op:operator><name pos:line="9" pos:column="19">Mvc</name><op:operator pos:line="9" pos:column="22">.</op:operator><name pos:line="9" pos:column="23">Tab</name></name>
<block pos:line="10" pos:column="1">{
    <class><specifier pos:line="11" pos:column="5">public</specifier> class <name pos:line="11" pos:column="18">Execution</name> <super pos:line="11" pos:column="28">: <name pos:line="11" pos:column="30">AspNetTab</name>, <name pos:line="11" pos:column="41">IDocumentation</name>, <name pos:line="11" pos:column="57">ITabSetup</name>, <name pos:line="11" pos:column="68">ITabLayout</name>, <name pos:line="11" pos:column="80">IKey</name></super>
    <block pos:line="12" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">private</specifier> <specifier pos:line="13" pos:column="17">static</specifier> <specifier pos:line="13" pos:column="24">readonly</specifier> <name pos:line="13" pos:column="33">object</name></type> <name pos:line="13" pos:column="40">Layout</name> <init pos:line="13" pos:column="47">= <expr><call><name><name pos:line="13" pos:column="49">TabLayout</name><op:operator pos:line="13" pos:column="58">.</op:operator><name pos:line="13" pos:column="59">Create</name></name><argument_list pos:line="13" pos:column="65">()</argument_list></call>
                <op:operator pos:line="14" pos:column="17">.</op:operator><call><name pos:line="14" pos:column="18">Row</name><argument_list pos:line="14" pos:column="21">(<argument><expr><lambda><name pos:line="14" pos:column="22">r</name> <op:operator pos:line="14" pos:column="24">=&gt;</op:operator>
                <block pos:line="15" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="16" pos:column="21">r</name><op:operator pos:line="16" pos:column="22">.</op:operator><name pos:line="16" pos:column="23">Cell</name></name><argument_list pos:line="16" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="16" pos:column="28">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="16" pos:column="30">.</op:operator><call><name pos:line="16" pos:column="31">AsKey</name><argument_list pos:line="16" pos:column="36">()</argument_list></call><op:operator pos:line="16" pos:column="38">.</op:operator><call><name pos:line="16" pos:column="39">WidthInPixels</name><argument_list pos:line="16" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="16" pos:column="53">60</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="17" pos:column="21">r</name><op:operator pos:line="17" pos:column="22">.</op:operator><name pos:line="17" pos:column="23">Cell</name></name><argument_list pos:line="17" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="17" pos:column="28">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="18" pos:column="21">r</name><op:operator pos:line="18" pos:column="22">.</op:operator><name pos:line="18" pos:column="23">Cell</name></name><argument_list pos:line="18" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="18" pos:column="28">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="19" pos:column="21">r</name><op:operator pos:line="19" pos:column="22">.</op:operator><name pos:line="19" pos:column="23">Cell</name></name><argument_list pos:line="19" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="19" pos:column="28">3</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="19" pos:column="30">.</op:operator><call><name pos:line="19" pos:column="31">WidthInPixels</name><argument_list pos:line="19" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="19" pos:column="45">60</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="20" pos:column="21">r</name><op:operator pos:line="20" pos:column="22">.</op:operator><name pos:line="20" pos:column="23">Cell</name></name><argument_list pos:line="20" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="20" pos:column="28">4</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="20" pos:column="30">.</op:operator><call><name pos:line="20" pos:column="31">WidthInPixels</name><argument_list pos:line="20" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="20" pos:column="45">160</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="21" pos:column="21">r</name><op:operator pos:line="21" pos:column="22">.</op:operator><name pos:line="21" pos:column="23">Cell</name></name><argument_list pos:line="21" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="21" pos:column="28">5</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="21" pos:column="30">.</op:operator><call><name pos:line="21" pos:column="31">WidthInPixels</name><argument_list pos:line="21" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="21" pos:column="45">160</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="22" pos:column="21">r</name><op:operator pos:line="22" pos:column="22">.</op:operator><name pos:line="22" pos:column="23">Cell</name></name><argument_list pos:line="22" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="22" pos:column="28">"{{6}}.{{7}}"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
                    <expr_stmt><expr><call><name><name pos:line="23" pos:column="21">r</name><op:operator pos:line="23" pos:column="22">.</op:operator><name pos:line="23" pos:column="23">Cell</name></name><argument_list pos:line="23" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="23" pos:column="28">8</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="23" pos:column="30">.</op:operator><call><name pos:line="23" pos:column="31">WidthInPercent</name><argument_list pos:line="23" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="23" pos:column="46">15</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="23" pos:column="49">.</op:operator><call><name pos:line="23" pos:column="50">Suffix</name><argument_list pos:line="23" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="23" pos:column="57">" ms"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="23" pos:column="63">.</op:operator><call><name pos:line="23" pos:column="64">Class</name><argument_list pos:line="23" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="23" pos:column="70">"mono"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="23" pos:column="77">.</op:operator><call><name pos:line="23" pos:column="78">AlignRight</name><argument_list pos:line="23" pos:column="88">()</argument_list></call></expr>;</expr_stmt>
                }</block></lambda></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="19">.</op:operator><call><name pos:line="24" pos:column="20">Build</name><argument_list pos:line="24" pos:column="25">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="26" pos:column="9">public</specifier> <specifier pos:line="26" pos:column="16">override</specifier> <name pos:line="26" pos:column="25">string</name></type> <name pos:line="26" pos:column="32">Name</name>
        <block pos:line="27" pos:column="9">{
            <function><name pos:line="28" pos:column="13">get</name> <block pos:line="28" pos:column="17">{ <return pos:line="28" pos:column="19">return <expr><lit:literal type="string" pos:line="28" pos:column="26">"Execution"</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">string</name></type> <name pos:line="31" pos:column="23">Key</name>
        <block pos:line="32" pos:column="9">{
            <function><name pos:line="33" pos:column="13">get</name> <block pos:line="33" pos:column="17">{ <return pos:line="33" pos:column="19">return <expr><lit:literal type="string" pos:line="33" pos:column="26">"glimpse_execution"</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="36" pos:column="9">public</specifier> <name pos:line="36" pos:column="16">string</name></type> <name pos:line="36" pos:column="23">DocumentationUri</name>
        <block pos:line="37" pos:column="9">{
            <function><name pos:line="38" pos:column="13">get</name> <block pos:line="38" pos:column="17">{ <return pos:line="38" pos:column="19">return <expr><lit:literal type="string" pos:line="38" pos:column="26">"http://getglimpse.com/Help/Execution-Tab"</lit:literal></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="41" pos:column="9">public</specifier> <name pos:line="41" pos:column="16">object</name></type> <name pos:line="41" pos:column="23">GetLayout</name><parameter_list pos:line="41" pos:column="32">()</parameter_list>
        <block pos:line="42" pos:column="9">{
            <return pos:line="43" pos:column="13">return <expr><name pos:line="43" pos:column="20">Layout</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="46" pos:column="9">public</specifier> <specifier pos:line="46" pos:column="16">override</specifier> <name pos:line="46" pos:column="25">object</name></type> <name pos:line="46" pos:column="32">GetData</name><parameter_list pos:line="46" pos:column="39">(<param><decl><type><name pos:line="46" pos:column="40">ITabContext</name></type> <name pos:line="46" pos:column="52">context</name></decl></param>)</parameter_list>
        <block pos:line="47" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="48" pos:column="13">var</name></type> <name pos:line="48" pos:column="17">actionFilterMessages</name> <init pos:line="48" pos:column="38">= <expr><call><name><name pos:line="48" pos:column="40">context</name><op:operator pos:line="48" pos:column="47">.</op:operator><name><name pos:line="48" pos:column="48">GetMessages</name><argument_list pos:line="48" pos:column="59">&lt;<argument><name pos:line="48" pos:column="60">IExecutionMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="48" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <return pos:line="50" pos:column="13">return <expr><call><name><name pos:line="50" pos:column="20">actionFilterMessages</name><op:operator pos:line="50" pos:column="40">.</op:operator><name pos:line="50" pos:column="41">Select</name></name><argument_list pos:line="50" pos:column="47">(<argument><expr><lambda><name pos:line="50" pos:column="48">message</name> <op:operator pos:line="50" pos:column="56">=&gt;</op:operator> <op:operator pos:line="50" pos:column="59">new</op:operator> <call><name pos:line="50" pos:column="63">ExecutionModel</name><argument_list pos:line="50" pos:column="77">(<argument><expr><name pos:line="50" pos:column="78">message</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="50" pos:column="87">.</op:operator><call><name pos:line="50" pos:column="88">ToList</name><argument_list pos:line="50" pos:column="94">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="53" pos:column="9">public</specifier> <name pos:line="53" pos:column="16">void</name></type> <name pos:line="53" pos:column="21">Setup</name><parameter_list pos:line="53" pos:column="26">(<param><decl><type><name pos:line="53" pos:column="27">ITabSetupContext</name></type> <name pos:line="53" pos:column="44">context</name></decl></param>)</parameter_list>
        <block pos:line="54" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="55" pos:column="13">context</name><op:operator pos:line="55" pos:column="20">.</op:operator><name><name pos:line="55" pos:column="21">PersistMessages</name><argument_list pos:line="55" pos:column="36">&lt;<argument><name pos:line="55" pos:column="37">IExecutionMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="55" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
