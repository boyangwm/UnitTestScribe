<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Core\Framework\ApplicationPersistenceStoreShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Threading</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Framework</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Test</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Core</name><op:operator pos:line="6" pos:column="24">.</op:operator><name pos:line="6" pos:column="25">Tester</name></name>;</using>
<using pos:line="7" pos:column="1">using <name pos:line="7" pos:column="7">Moq</name>;</using>
<using pos:line="8" pos:column="1">using <name pos:line="8" pos:column="7">Xunit</name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Xunit</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">Extensions</name></name>;</using>

<namespace pos:line="11" pos:column="1">namespace <name><name pos:line="11" pos:column="11">Glimpse</name><op:operator pos:line="11" pos:column="18">.</op:operator><name pos:line="11" pos:column="19">Test</name><op:operator pos:line="11" pos:column="23">.</op:operator><name pos:line="11" pos:column="24">Core</name><op:operator pos:line="11" pos:column="28">.</op:operator><name pos:line="11" pos:column="29">Framework</name></name>
<block pos:line="12" pos:column="1">{
    <class><specifier pos:line="13" pos:column="5">public</specifier> class <name pos:line="13" pos:column="18">ApplicationPersistenceStoreShould</name>
    <block pos:line="14" pos:column="5">{
        <function><type><attribute pos:line="15" pos:column="9">[<expr><name pos:line="15" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="16" pos:column="9">public</specifier> <name pos:line="16" pos:column="16">void</name></type> <name pos:line="16" pos:column="21">BeThreadSafe</name><parameter_list pos:line="16" pos:column="33">()</parameter_list>
        <block pos:line="17" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">var</name></type> <name pos:line="18" pos:column="17">sut</name> <init pos:line="18" pos:column="21">= <expr><op:operator pos:line="18" pos:column="23">new</op:operator> <call><name pos:line="18" pos:column="27">ApplicationPersistenceStore</name><argument_list pos:line="18" pos:column="54">(<argument><expr><op:operator pos:line="18" pos:column="55">new</op:operator> <call><name pos:line="18" pos:column="59">DictionaryDataStoreAdapter</name><argument_list pos:line="18" pos:column="85">(<argument><expr><op:operator pos:line="18" pos:column="86">new</op:operator> <call><name><name pos:line="18" pos:column="90">Dictionary</name><argument_list pos:line="18" pos:column="100">&lt;<argument><name pos:line="18" pos:column="101">string</name></argument>, <argument><name pos:line="18" pos:column="109">object</name></argument>&gt;</argument_list></name><argument_list pos:line="18" pos:column="116">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="18" pos:column="121">25</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name><name pos:line="20" pos:column="13">Action</name><argument_list pos:line="20" pos:column="19">&lt;<argument><name pos:line="20" pos:column="20">ApplicationPersistenceStore</name></argument>&gt;</argument_list></name></type> <name pos:line="20" pos:column="49">addingRequests</name> <init pos:line="20" pos:column="64">= <expr><lambda><name pos:line="20" pos:column="66">store</name> <op:operator pos:line="20" pos:column="72">=&gt;</op:operator>
            <block pos:line="21" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="22" pos:column="17">var</name></type> <name pos:line="22" pos:column="21">glimpseRequest</name> <init pos:line="22" pos:column="36">= <expr><op:operator pos:line="22" pos:column="38">new</op:operator> <call><name pos:line="22" pos:column="42">GlimpseRequest</name><argument_list pos:line="22" pos:column="56">(
                    <argument><expr><call><name><name pos:line="23" pos:column="21">Guid</name><op:operator pos:line="23" pos:column="25">.</op:operator><name pos:line="23" pos:column="26">NewGuid</name></name><argument_list pos:line="23" pos:column="33">()</argument_list></call></expr></argument>,
                    <argument><expr><op:operator pos:line="24" pos:column="21">new</op:operator> <call><name><name pos:line="24" pos:column="25">Mock</name><argument_list pos:line="24" pos:column="29">&lt;<argument><name pos:line="24" pos:column="30">IRequestMetadata</name></argument>&gt;</argument_list></name><argument_list pos:line="24" pos:column="47">()</argument_list></call><op:operator pos:line="24" pos:column="49">.</op:operator><name pos:line="24" pos:column="50">Object</name></expr></argument>,
                    <argument><expr><op:operator pos:line="25" pos:column="21">new</op:operator> <call><name><name pos:line="25" pos:column="25">Dictionary</name><argument_list pos:line="25" pos:column="35">&lt;<argument><name pos:line="25" pos:column="36">string</name></argument>, <argument><name pos:line="25" pos:column="44">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="25" pos:column="54">()</argument_list></call></expr></argument>,
                    <argument><expr><op:operator pos:line="26" pos:column="21">new</op:operator> <call><name><name pos:line="26" pos:column="25">Dictionary</name><argument_list pos:line="26" pos:column="35">&lt;<argument><name pos:line="26" pos:column="36">string</name></argument>, <argument><name pos:line="26" pos:column="44">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="26" pos:column="54">()</argument_list></call></expr></argument>,
                    <argument><expr><op:operator pos:line="27" pos:column="21">new</op:operator> <call><name pos:line="27" pos:column="25">TimeSpan</name><argument_list pos:line="27" pos:column="33">(<argument><expr><lit:literal type="number" pos:line="27" pos:column="34">1000</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <for pos:line="29" pos:column="17">for (<init><decl><type><name pos:line="29" pos:column="22">int</name></type> <name pos:line="29" pos:column="26">requestCounter</name> <init pos:line="29" pos:column="41">= <expr><lit:literal type="number" pos:line="29" pos:column="43">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="29" pos:column="46">requestCounter</name> <op:operator pos:line="29" pos:column="61">&lt;</op:operator> <lit:literal type="number" pos:line="29" pos:column="63">200</lit:literal></expr>;</condition> <incr><expr><name pos:line="29" pos:column="68">requestCounter</name><op:operator pos:line="29" pos:column="82">++</op:operator></expr></incr>)
                <block pos:line="30" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="31" pos:column="21">store</name><op:operator pos:line="31" pos:column="26">.</op:operator><name pos:line="31" pos:column="27">Save</name></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">glimpseRequest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt><expr><call><name><name pos:line="33" pos:column="21">Thread</name><op:operator pos:line="33" pos:column="27">.</op:operator><name pos:line="33" pos:column="28">Sleep</name></name><argument_list pos:line="33" pos:column="33">(<argument><expr><lit:literal type="number" pos:line="33" pos:column="34">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></for>
            }</block></lambda></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name><name pos:line="37" pos:column="13">Action</name><argument_list pos:line="37" pos:column="19">&lt;<argument><name pos:line="37" pos:column="20">ApplicationPersistenceStore</name></argument>&gt;</argument_list></name></type> <name pos:line="37" pos:column="49">gettingRequests</name> <init pos:line="37" pos:column="65">= <expr><lambda><name pos:line="37" pos:column="67">store</name> <op:operator pos:line="37" pos:column="73">=&gt;</op:operator>
            <block pos:line="38" pos:column="13">{
                <for pos:line="39" pos:column="17">for (<init><decl><type><name pos:line="39" pos:column="22">int</name></type> <name pos:line="39" pos:column="26">requestCounter</name> <init pos:line="39" pos:column="41">= <expr><lit:literal type="number" pos:line="39" pos:column="43">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="39" pos:column="46">requestCounter</name> <op:operator pos:line="39" pos:column="61">&lt;</op:operator> <lit:literal type="number" pos:line="39" pos:column="63">200</lit:literal></expr>;</condition> <incr><expr><name pos:line="39" pos:column="68">requestCounter</name><op:operator pos:line="39" pos:column="82">++</op:operator></expr></incr>)
                <block pos:line="40" pos:column="17">{
                    <comment type="line" pos:line="41" pos:column="21">// gets will never by found with the given GUID, but that is not a problem, it's even a good</comment>
                    <comment type="line" pos:line="42" pos:column="21">// thing for this test, since it will enumerate the complete collection, quicker running into</comment>
                    <comment type="line" pos:line="43" pos:column="21">// threading issues while the state is being manipulated while enumerating it.</comment>

                    <expr_stmt><expr><call><name><name pos:line="45" pos:column="21">store</name><op:operator pos:line="45" pos:column="26">.</op:operator><name pos:line="45" pos:column="27">GetByRequestId</name></name><argument_list pos:line="45" pos:column="41">(<argument><expr><call><name><name pos:line="45" pos:column="42">Guid</name><op:operator pos:line="45" pos:column="46">.</op:operator><name pos:line="45" pos:column="47">NewGuid</name></name><argument_list pos:line="45" pos:column="54">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="46" pos:column="21">store</name><op:operator pos:line="46" pos:column="26">.</op:operator><name pos:line="46" pos:column="27">GetByRequestParentId</name></name><argument_list pos:line="46" pos:column="47">(<argument><expr><call><name><name pos:line="46" pos:column="48">Guid</name><op:operator pos:line="46" pos:column="52">.</op:operator><name pos:line="46" pos:column="53">NewGuid</name></name><argument_list pos:line="46" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="47" pos:column="21">store</name><op:operator pos:line="47" pos:column="26">.</op:operator><name pos:line="47" pos:column="27">GetByRequestIdAndTabKey</name></name><argument_list pos:line="47" pos:column="50">(<argument><expr><call><name><name pos:line="47" pos:column="51">Guid</name><op:operator pos:line="47" pos:column="55">.</op:operator><name pos:line="47" pos:column="56">NewGuid</name></name><argument_list pos:line="47" pos:column="63">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="47" pos:column="67">"SomeUnknownTabKey"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="48" pos:column="21">store</name><op:operator pos:line="48" pos:column="26">.</op:operator><name pos:line="48" pos:column="27">GetTop</name></name><argument_list pos:line="48" pos:column="33">(<argument><expr><lit:literal type="number" pos:line="48" pos:column="34">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt><expr><call><name><name pos:line="50" pos:column="21">Thread</name><op:operator pos:line="50" pos:column="27">.</op:operator><name pos:line="50" pos:column="28">Sleep</name></name><argument_list pos:line="50" pos:column="33">(<argument><expr><lit:literal type="number" pos:line="50" pos:column="34">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></for>
            }</block></lambda></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="54" pos:column="13">var</name></type> <name pos:line="54" pos:column="17">invokedDelegates</name> <init pos:line="54" pos:column="34">= <expr><op:operator pos:line="54" pos:column="36">new</op:operator> <name><name pos:line="54" pos:column="40">List</name><argument_list pos:line="54" pos:column="44">&lt;<argument><name><name pos:line="54" pos:column="45">Tuple</name><argument_list pos:line="54" pos:column="50">&lt;<argument><name><name pos:line="54" pos:column="51">Action</name><argument_list pos:line="54" pos:column="57">&lt;<argument><name pos:line="54" pos:column="58">ApplicationPersistenceStore</name></argument>&gt;</argument_list></name></argument>, <argument><name pos:line="54" pos:column="88">IAsyncResult</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name>
            <block pos:line="55" pos:column="13">{
                <expr><op:operator pos:line="56" pos:column="17">new</op:operator> <call><name><name pos:line="56" pos:column="21">Tuple</name><argument_list pos:line="56" pos:column="26">&lt;<argument><name><name pos:line="56" pos:column="27">Action</name><argument_list pos:line="56" pos:column="33">&lt;<argument><name pos:line="56" pos:column="34">ApplicationPersistenceStore</name></argument>&gt;</argument_list></name></argument>, <argument><name pos:line="56" pos:column="64">IAsyncResult</name></argument>&gt;</argument_list></name><argument_list pos:line="56" pos:column="77">(<argument><expr><name pos:line="56" pos:column="78">addingRequests</name></expr></argument>, <argument><expr><call><name><name pos:line="56" pos:column="94">addingRequests</name><op:operator pos:line="56" pos:column="108">.</op:operator><name pos:line="56" pos:column="109">BeginInvoke</name></name><argument_list pos:line="56" pos:column="120">(<argument><expr><name pos:line="56" pos:column="121">sut</name></expr></argument>, <argument><expr><name pos:line="56" pos:column="126">null</name></expr></argument>, <argument><expr><name pos:line="56" pos:column="132">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,
                <expr><op:operator pos:line="57" pos:column="17">new</op:operator> <call><name><name pos:line="57" pos:column="21">Tuple</name><argument_list pos:line="57" pos:column="26">&lt;<argument><name><name pos:line="57" pos:column="27">Action</name><argument_list pos:line="57" pos:column="33">&lt;<argument><name pos:line="57" pos:column="34">ApplicationPersistenceStore</name></argument>&gt;</argument_list></name></argument>, <argument><name pos:line="57" pos:column="64">IAsyncResult</name></argument>&gt;</argument_list></name><argument_list pos:line="57" pos:column="77">(<argument><expr><name pos:line="57" pos:column="78">gettingRequests</name></expr></argument>, <argument><expr><call><name><name pos:line="57" pos:column="95">gettingRequests</name><op:operator pos:line="57" pos:column="110">.</op:operator><name pos:line="57" pos:column="111">BeginInvoke</name></name><argument_list pos:line="57" pos:column="122">(<argument><expr><name pos:line="57" pos:column="123">sut</name></expr></argument>, <argument><expr><name pos:line="57" pos:column="128">null</name></expr></argument>, <argument><expr><name pos:line="57" pos:column="134">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,
                <expr><op:operator pos:line="58" pos:column="17">new</op:operator> <call><name><name pos:line="58" pos:column="21">Tuple</name><argument_list pos:line="58" pos:column="26">&lt;<argument><name><name pos:line="58" pos:column="27">Action</name><argument_list pos:line="58" pos:column="33">&lt;<argument><name pos:line="58" pos:column="34">ApplicationPersistenceStore</name></argument>&gt;</argument_list></name></argument>, <argument><name pos:line="58" pos:column="64">IAsyncResult</name></argument>&gt;</argument_list></name><argument_list pos:line="58" pos:column="77">(<argument><expr><name pos:line="58" pos:column="78">addingRequests</name></expr></argument>, <argument><expr><call><name><name pos:line="58" pos:column="94">addingRequests</name><op:operator pos:line="58" pos:column="108">.</op:operator><name pos:line="58" pos:column="109">BeginInvoke</name></name><argument_list pos:line="58" pos:column="120">(<argument><expr><name pos:line="58" pos:column="121">sut</name></expr></argument>, <argument><expr><name pos:line="58" pos:column="126">null</name></expr></argument>, <argument><expr><name pos:line="58" pos:column="132">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,
                <expr><op:operator pos:line="59" pos:column="17">new</op:operator> <call><name><name pos:line="59" pos:column="21">Tuple</name><argument_list pos:line="59" pos:column="26">&lt;<argument><name><name pos:line="59" pos:column="27">Action</name><argument_list pos:line="59" pos:column="33">&lt;<argument><name pos:line="59" pos:column="34">ApplicationPersistenceStore</name></argument>&gt;</argument_list></name></argument>, <argument><name pos:line="59" pos:column="64">IAsyncResult</name></argument>&gt;</argument_list></name><argument_list pos:line="59" pos:column="77">(<argument><expr><name pos:line="59" pos:column="78">gettingRequests</name></expr></argument>, <argument><expr><call><name><name pos:line="59" pos:column="95">gettingRequests</name><op:operator pos:line="59" pos:column="110">.</op:operator><name pos:line="59" pos:column="111">BeginInvoke</name></name><argument_list pos:line="59" pos:column="122">(<argument><expr><name pos:line="59" pos:column="123">sut</name></expr></argument>, <argument><expr><name pos:line="59" pos:column="128">null</name></expr></argument>, <argument><expr><name pos:line="59" pos:column="134">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,
                <expr><op:operator pos:line="60" pos:column="17">new</op:operator> <call><name><name pos:line="60" pos:column="21">Tuple</name><argument_list pos:line="60" pos:column="26">&lt;<argument><name><name pos:line="60" pos:column="27">Action</name><argument_list pos:line="60" pos:column="33">&lt;<argument><name pos:line="60" pos:column="34">ApplicationPersistenceStore</name></argument>&gt;</argument_list></name></argument>, <argument><name pos:line="60" pos:column="64">IAsyncResult</name></argument>&gt;</argument_list></name><argument_list pos:line="60" pos:column="77">(<argument><expr><name pos:line="60" pos:column="78">addingRequests</name></expr></argument>, <argument><expr><call><name><name pos:line="60" pos:column="94">addingRequests</name><op:operator pos:line="60" pos:column="108">.</op:operator><name pos:line="60" pos:column="109">BeginInvoke</name></name><argument_list pos:line="60" pos:column="120">(<argument><expr><name pos:line="60" pos:column="121">sut</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="126">null</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="132">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,
                <expr><op:operator pos:line="61" pos:column="17">new</op:operator> <call><name><name pos:line="61" pos:column="21">Tuple</name><argument_list pos:line="61" pos:column="26">&lt;<argument><name><name pos:line="61" pos:column="27">Action</name><argument_list pos:line="61" pos:column="33">&lt;<argument><name pos:line="61" pos:column="34">ApplicationPersistenceStore</name></argument>&gt;</argument_list></name></argument>, <argument><name pos:line="61" pos:column="64">IAsyncResult</name></argument>&gt;</argument_list></name><argument_list pos:line="61" pos:column="77">(<argument><expr><name pos:line="61" pos:column="78">gettingRequests</name></expr></argument>, <argument><expr><call><name><name pos:line="61" pos:column="95">gettingRequests</name><op:operator pos:line="61" pos:column="110">.</op:operator><name pos:line="61" pos:column="111">BeginInvoke</name></name><argument_list pos:line="61" pos:column="122">(<argument><expr><name pos:line="61" pos:column="123">sut</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="128">null</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="134">null</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>
            }</block></expr></init></decl>;</decl_stmt>

            <foreach pos:line="64" pos:column="13">foreach (<init><decl><type><name pos:line="64" pos:column="22">var</name></type> <name pos:line="64" pos:column="26">invokedDelegate</name> <range pos:line="64" pos:column="42">in <expr><name pos:line="64" pos:column="45">invokedDelegates</name></expr></range></decl></init>)
            <block pos:line="65" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="66" pos:column="17">invokedDelegate</name><op:operator pos:line="66" pos:column="32">.</op:operator><name pos:line="66" pos:column="33">Item1</name><op:operator pos:line="66" pos:column="38">.</op:operator><name pos:line="66" pos:column="39">EndInvoke</name></name><argument_list pos:line="66" pos:column="48">(<argument><expr><name><name pos:line="66" pos:column="49">invokedDelegate</name><op:operator pos:line="66" pos:column="64">.</op:operator><name pos:line="66" pos:column="65">Item2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><attribute pos:line="70" pos:column="9">[<expr><name pos:line="70" pos:column="10">Theory</name></expr>]</attribute>
        <attribute pos:line="71" pos:column="9">[<expr><call><name pos:line="71" pos:column="10">InlineData</name><argument_list pos:line="71" pos:column="20">(<argument><expr><lit:literal type="number" pos:line="71" pos:column="21">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="71" pos:column="24">10</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <attribute pos:line="72" pos:column="9">[<expr><call><name pos:line="72" pos:column="10">InlineData</name><argument_list pos:line="72" pos:column="20">(<argument><expr><lit:literal type="number" pos:line="72" pos:column="21">10</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="72" pos:column="25">10</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <attribute pos:line="73" pos:column="9">[<expr><call><name pos:line="73" pos:column="10">InlineData</name><argument_list pos:line="73" pos:column="20">(<argument><expr><lit:literal type="number" pos:line="73" pos:column="21">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="73" pos:column="26">10</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <attribute pos:line="74" pos:column="9">[<expr><call><name pos:line="74" pos:column="10">InlineData</name><argument_list pos:line="74" pos:column="20">(<argument><expr><lit:literal type="number" pos:line="74" pos:column="21">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="74" pos:column="24">50</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <attribute pos:line="75" pos:column="9">[<expr><call><name pos:line="75" pos:column="10">InlineData</name><argument_list pos:line="75" pos:column="20">(<argument><expr><lit:literal type="number" pos:line="75" pos:column="21">50</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="75" pos:column="25">50</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <attribute pos:line="76" pos:column="9">[<expr><call><name pos:line="76" pos:column="10">InlineData</name><argument_list pos:line="76" pos:column="20">(<argument><expr><lit:literal type="number" pos:line="76" pos:column="21">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="76" pos:column="26">50</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="77" pos:column="9">public</specifier> <name pos:line="77" pos:column="16">void</name></type> <name pos:line="77" pos:column="21">RespectTheBufferSize</name><parameter_list pos:line="77" pos:column="41">(<param><decl><type><name pos:line="77" pos:column="42">int</name></type> <name pos:line="77" pos:column="46">bufferSize</name></decl></param>, <param><decl><type><name pos:line="77" pos:column="58">int</name></type> <name pos:line="77" pos:column="62">requestCount</name></decl></param>)</parameter_list>
        <block pos:line="78" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="79" pos:column="13">var</name></type> <name pos:line="79" pos:column="17">sut</name> <init pos:line="79" pos:column="21">= <expr><call><name><name pos:line="79" pos:column="23">ApplicationPersistenceStoreTester</name><op:operator pos:line="79" pos:column="56">.</op:operator><name pos:line="79" pos:column="57">Create</name></name><argument_list pos:line="79" pos:column="63">(<argument><expr><name pos:line="79" pos:column="64">bufferSize</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="81" pos:column="13">var</name></type> <name pos:line="81" pos:column="17">glimpseRequest</name> <init pos:line="81" pos:column="32">= <expr><op:operator pos:line="81" pos:column="34">new</op:operator> <call><name pos:line="81" pos:column="38">GlimpseRequest</name><argument_list pos:line="81" pos:column="52">(
                <argument><expr><call><name><name pos:line="82" pos:column="17">Guid</name><op:operator pos:line="82" pos:column="21">.</op:operator><name pos:line="82" pos:column="22">NewGuid</name></name><argument_list pos:line="82" pos:column="29">()</argument_list></call></expr></argument>,
                <argument><expr><op:operator pos:line="83" pos:column="17">new</op:operator> <call><name><name pos:line="83" pos:column="21">Mock</name><argument_list pos:line="83" pos:column="25">&lt;<argument><name pos:line="83" pos:column="26">IRequestMetadata</name></argument>&gt;</argument_list></name><argument_list pos:line="83" pos:column="43">()</argument_list></call><op:operator pos:line="83" pos:column="45">.</op:operator><name pos:line="83" pos:column="46">Object</name></expr></argument>,
                <argument><expr><op:operator pos:line="84" pos:column="17">new</op:operator> <call><name><name pos:line="84" pos:column="21">Dictionary</name><argument_list pos:line="84" pos:column="31">&lt;<argument><name pos:line="84" pos:column="32">string</name></argument>, <argument><name pos:line="84" pos:column="40">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="84" pos:column="50">()</argument_list></call></expr></argument>,
                <argument><expr><op:operator pos:line="85" pos:column="17">new</op:operator> <call><name><name pos:line="85" pos:column="21">Dictionary</name><argument_list pos:line="85" pos:column="31">&lt;<argument><name pos:line="85" pos:column="32">string</name></argument>, <argument><name pos:line="85" pos:column="40">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="85" pos:column="50">()</argument_list></call></expr></argument>,
                <argument><expr><op:operator pos:line="86" pos:column="17">new</op:operator> <call><name pos:line="86" pos:column="21">TimeSpan</name><argument_list pos:line="86" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="86" pos:column="30">1000</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <for pos:line="88" pos:column="13">for (<init><decl><type><name pos:line="88" pos:column="18">int</name></type> <name pos:line="88" pos:column="22">i</name> <init pos:line="88" pos:column="24">= <expr><lit:literal type="number" pos:line="88" pos:column="26">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="88" pos:column="29">i</name> <op:operator pos:line="88" pos:column="31">&lt;</op:operator> <name pos:line="88" pos:column="33">requestCount</name></expr>;</condition> <incr><expr><name pos:line="88" pos:column="47">i</name><op:operator pos:line="88" pos:column="48">++</op:operator></expr></incr>)
            <block pos:line="89" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="90" pos:column="17">sut</name><op:operator pos:line="90" pos:column="20">.</op:operator><name pos:line="90" pos:column="21">Save</name></name><argument_list pos:line="90" pos:column="25">(<argument><expr><name pos:line="90" pos:column="26">glimpseRequest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></for>

            <expr_stmt><expr><call><name><name pos:line="93" pos:column="13">Assert</name><op:operator pos:line="93" pos:column="19">.</op:operator><name pos:line="93" pos:column="20">Equal</name></name><argument_list pos:line="93" pos:column="25">(<argument><expr><call><name><name pos:line="93" pos:column="26">Math</name><op:operator pos:line="93" pos:column="30">.</op:operator><name pos:line="93" pos:column="31">Min</name></name><argument_list pos:line="93" pos:column="34">(<argument><expr><name pos:line="93" pos:column="35">bufferSize</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="47">requestCount</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="62">sut</name><op:operator pos:line="93" pos:column="65">.</op:operator><name pos:line="93" pos:column="66">GlimpseRequests</name><op:operator pos:line="93" pos:column="81">.</op:operator><name pos:line="93" pos:column="82">Count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
